# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2D 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD FE 9E     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD C6 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD D6 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 183  8BC4
 184  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC6
 187  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC6
 189  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC7
 195  8BC7 00           Ctrl_2 db 0
 196  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC8              ;
 204  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC8              ;														BIT 4, ???
 210  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC8
 212  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC9              ;
 218  8BC9              ; 														DESCRIPCIÖN:
 219  8BC9              ;
 220  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC9              ;
 234  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC9
 238  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC9
 240  8BC9 00           Filas db 0												; Filas. [DRAW]
 241  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCF
 245  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCF
 247  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BD0
 251  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BD0
 253  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BD0              ;
 255  8BD0              ;	COLORES: 0 ..... NEGRO
 256  8BD0              ;    		 1 ..... AZUL
 257  8BD0              ; 			 2 ..... ROJO
 258  8BD0              ;			 3 ..... MAGENTA
 259  8BD0              ; 			 4 ..... VERDE
 260  8BD0              ; 			 5 ..... CIAN
 261  8BD0              ;			 6 ..... AMARILLO
 262  8BD0              ; 			 7 ..... BLANCO
 263  8BD0
 264  8BD0 00 00        Indice_Sprite_der defw 0
 265  8BD2 00 00        Indice_Sprite_izq defw 0
 266  8BD4 00 00        Puntero_DESPLZ_der defw 0
 267  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD8
 269  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BDB 00           Columnas db 0
 272  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDF
 276  8BDF              ; variables de control general.
 277  8BDF
 278  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BE0
 280  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BE0
 282  8BE0              Perfiles_de_velocidad
 283  8BE0
 284  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE4
 289  8BE4              ; Contadores de 16 bits.
 290  8BE4
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BEC
 296  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BEC
 298  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BF2              ;
 302  8BF2              ;
 303  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BF3 00           Incrementa_puntero_backup db 0
 307  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF8              ;
 313  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF8              ;
 317  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF8              ;
 322  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF8
 326  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF9
 328  8BF9              ;														DESCRIPCIÓN:
 329  8BF9              ;
 330  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF9
 337  8BF9              ;														BIT 3, Recarga de nueva oleada.
 338  8BF9              ;														BIT 4, Recarga de nueva oleada.
 339  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF9              ;														BIT 6, **** Frame completo.
 341  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF9
 343  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BFB
 348  8BFB              ; Gestión de ENTIDADES y CAJAS.
 349  8BFB
 350  8BFB 00 00        Puntero_store_caja defw 0
 351  8BFD 00 00        Puntero_restore_caja defw 0
 352  8BFF 00 00        Indice_restore_caja defw 0
 353  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C04              ;Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 357  8C04              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 358  8C04              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 359  8C04              ;														; _ (Numero_de_malotes)="0".
 360  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 361  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 362  8C08              ;														; _ puntero (Indice_entidades).
 363  8C08
 364  8C08              ;---------------------------------------------------------------------------------------------------------------
 365  8C08              ;
 366  8C08              ;	12/08/24
 367  8C08              ;
 368  8C08              ;	Álbumes.
 369  8C08
 370  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 371  8C0A              ;														; _variable para almacenar lo posición del puntero_
 372  8C0A              ; 														; _de pila, SP.
 373  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 374  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 375  8C0C
 376  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 377  8C0C
 378  8C0C 00 00        Album_de_pintado defw 0
 379  8C0E 00 00        Album_de_borrado defw 0
 380  8C10 00 00        Album_de_pintado_Amadeus defw 0
 381  8C12 00 00        Album_de_borrado_Amadeus defw 0
 382  8C14 00 00        Album_de_pintado_disparos defw 0
 383  8C16 00 00        Album_de_borrado_disparos defw 0
 384  8C18
 385  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 386  8C1A 00 00        Nivel_scan_disparos_album_de_borrado defw 0
 387  8C1C
 388  8C1C 00           Numero_de_disparos_de_Amadeus db 0
 389  8C1D 00           Numero_de_disparos_de_entidades db 0
 390  8C1E
 391  8C1E 00 00        Puntero_rancio_disparos_album defw 0
 392  8C20
 393  8C20 00 00        Techo_Scanlines_album defw 0
 394  8C22 00 00        Techo_Scanlines_album_2 defw 0
 395  8C24 00           Switch db 0
 396  8C25 00 00        Techo defw 0
 397  8C27 00 00        Scanlines_album_SP defw 0
 398  8C29 00 89        India_SP defw Tabla_de_pintado
 399  8C2B 03 89        India_2_SP defw Tabla_de_pintado+3
 400  8C2D
 401  8C2D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 402  8C2E              ;
 403  8C2E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 404  8C2E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 405  8C2E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 406  8C2E              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 407  8C2E              ;																Habilita el borrado/pintado de sprites.
 408  8C2E              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 409  8C2E              ;																_ a la baja.
 410  8C2E              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 411  8C2E              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 412  8C2E              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 413  8C2E              ; 																_ el último frame de la explosión de nuestra nave.
 414  8C2E              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 415  8C2E              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 416  8C2E
 417  8C2E 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 418  8C2F              ;
 419  8C2F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 420  8C2F              ;
 421  8C2F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 422  8C2F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 423  8C2F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 424  8C2F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 425  8C2F              ;
 426  8C2F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 427  8C2F              ;															_ masticados ya generados.
 428  8C2F              ;
 429  8C2F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 430  8C2F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 431  8C2F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 432  8C2F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 433  8C2F
 434  8C2F 00           Ctrl_5 db 0
 435  8C30
 436  8C30              ; Gestión de Disparos.
 437  8C30
 438  8C30              ;Numero_de_disparotes db 0
 439  8C30
 440  8C30 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 441  8C32 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 442  8C34
 443  8C34 00           Impacto2 db 0											; Byte de control de impactos.
 444  8C35
 445  8C35              ;
 446  8C35              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 447  8C35              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 448  8C35              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 449  8C35              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 450  8C35
 451  8C35
 452  8C35
 453  8C35
 454  8C35
 455  8C35
 456  8C35
 457  8C35 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 458  8C37              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 459  8C37              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 460  8C37
 461  8C37 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 462  8C39              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 463  8C39 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C3C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 465  8C3C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C3F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 467  8C3F
 468  8C3F              ;---------------------------------------------------------------------------------------------------------------
 469  8C3F
 470  8C3F              ; Relojes y temporizaciones.
 471  8C3F
 472  8C3F 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 473  8C40 05           Clock_explosion_Amadeus db 5
 474  8C41 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 475  8C42
 476  8C42 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 477  8C44
 478  8C44 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 479  8C46 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 480  8C47              ;														; Repite la oleada de entidades.
 481  8C47 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 482  8C48
 483  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 484  8C48              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 485  8C48
 486  8C48              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 487  8C48              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 488  8C48              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 489  8C48
 490  8C48              ;---------------------------------------------------------------------------------------------------------------
 491  8C48
 492  8C48              ; Gestión de NIVELES.
 493  8C48
 494  8C48 00           Nivel db 0												; Nivel actual del juego.
 495  8C49 00 00        Puntero_indice_NIVELES defw 0
 496  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 497  8C4D              ; 														; _ que definen el NIVEL.
 498  8C4D
 499  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 500  8C4D
 501  8C4D              ; Temporizaciones Shield.
 502  8C4D
 503  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 504  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 505  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 506  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 507  8C55 00           Shield_3 db 0
 508  8C56
 509  8C56 06           Lives db 6
 510  8C57
 511  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 512  8C57              ;
 513  8C57              ;	5/1/24
 514  8C57
 515  8C57              START
 516  8C57
 517  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 518  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 519  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 520  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 521  8C60 F3           	DI
 522  8C61
 523  8C61              ; Limpiamos pantalla.
 524  8C61
 525  8C61 3E 07        	ld a,%00000111
 526  8C63              ;	call Cls
 527  8C63 CD BB 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 528  8C66
 529  8C66              ; INICIALIZACIÓN.
 530  8C66
 531  8C66 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 532  8C68 CD 08 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 533  8C6B CD 4F 8E     	call Extrae_numero_aleatorio_y_avanza
 534  8C6E
 535  8C6E 6F           	ld l,a
 536  8C6F 26 00        	ld h,0
 537  8C71 22 44 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 538  8C74
 539  8C74              ;	Inicializa 1er Nivel.
 540  8C74
 541  8C74 21 97 8B     	ld hl,Indice_de_niveles
 542  8C77 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 543  8C7A CD 38 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 544  8C7D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 545  8C7D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 546  8C7D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 547  8C7D
 548  8C7D              ;	Inicia los álbumes de líneas.
 549  8C7D
 550  8C7D CD 04 90     	call Inicia_albumes_de_lineas
 551  8C80              ;
 552  8C80 CD 14 90     	call Inicia_albumes_de_lineas_Amadeus
 553  8C83 CD 21 90     	call Inicia_albumes_de_disparos
 554  8C86
 555  8C86
 556  8C86 CD 7D 92     4 call Inicia_Entidades
 557  8C89 CD E0 92     	call Inicia_Amadeus
 558  8C8C
 559  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 560  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 561  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 562  8C8C
 563  8C8C 11 70 89     	ld de,Amadeus_BOX
 564  8C8F CD 33 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 565  8C92 CD 23 93     	call Limpiamos_bandeja_DRAW
 566  8C95
 567  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 568  8C95
 569  8C95 06 3C        	ld b,60
 570  8C97 CD 05 9D     2 call Amadeus_a_izquierda
 571  8C9A 10 FB        	djnz 2B
 572  8C9C
 573  8C9C CD E2 8F     	call Genera_datos_de_impresion_Amadeus
 574  8C9F
 575  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 576  8C9F
 577  8C9F CD 34 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 578  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 579  8CA2
 580  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 581  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 582  8CA2
 583  8CA2              ;	ld a,(Ctrl_1)
 584  8CA2              ;	bit 3,a
 585  8CA2              ;	jr nz,5F											 ; Loop
 586  8CA2
 587  8CA2              ;	ld de,Amadeus_db
 588  8CA2              ;	call Store_Amadeus
 589  8CA2
 590  8CA2              ; 	INICIA DISPAROS !!!!!
 591  8CA2
 592  8CA2 CD 4A 90     	call Inicia_Puntero_Disparo_Entidades
 593  8CA5 CD 51 90     	call Inicia_Puntero_Disparo_Amadeus
 594  8CA8
 595  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 596  8CA8
 597  8CA8              ;5 call Inicia_punteros_de_cajas
 598  8CA8              ;	call Restore_entidad
 599  8CA8
 600  8CA8              ;	ld a,(Ctrl_1)
 601  8CA8              ;	bit 3,a
 602  8CA8              ;	jr z,6F
 603  8CA8
 604  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 605  8CA8
 606  8CA8              ;	ld hl,Ctrl_1
 607  8CA8              ;	res 3,(hl)
 608  8CA8              ;	jr Main
 609  8CA8
 610  8CA8              ; Damos por concluida la construcción del FRAME.
 611  8CA8              ;
 612  8CA8
 613  8CA8 CD C6 90     	call Inicia_Shield
 614  8CAB
 615  8CAB
 616  8CAB 2A 27 8C     6 ld hl,(Scanlines_album_SP)
 617  8CAE 22 20 8C     	ld (Techo_Scanlines_album),hl
 618  8CB1
 619  8CB1 2A 0E 8C     	ld hl,(Album_de_borrado)
 620  8CB4 22 27 8C     	ld (Scanlines_album_SP),hl
 621  8CB7
 622  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 623  8CBA 22 29 8C     	ld (India_SP),hl
 624  8CBD
 625  8CBD 21 2D 8C     	ld hl,Ctrl_3
 626  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 627  8CC2 CB D6        	set 2,(hl)
 628  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 629  8CC6
 630  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 631  8CC7
 632  8CC7 76           	halt
 633  8CC8
 634  8CC8              ; ------------------------------------
 635  8CC8
 636  8CC8              Main
 637  8CC8              ;
 638  8CC8              ; 22/08/24
 639  8CC8
 640  8CC8              ; Gestión de disparos.
 641  8CC8
 642  8CC8 CD 31 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 643  8CCB CD B2 9E     	call Mueve_Disparos
 644  8CCE
 645  8CCE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 646  8CCE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 647  8CCE              ; Este hecho lo indica el bit2 de (Impacto2).
 648  8CCE
 649  8CCE CD 8D A0     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 650  8CD1
 651  8CD1 2A 44 8C     16 ld hl,(Clock_next_entity)
 652  8CD4 ED 4B 78 5C  	ld bc,(FRAMES)
 653  8CD8 A7           	and a
 654  8CD9 ED 42        	sbc hl,bc
 655  8CDB 20 16        	jr nz,13F
 656  8CDD
 657  8CDD              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 658  8CDD              ; _ (Clock_next_entity) para la siguiente entidad.
 659  8CDD
 660  8CDD 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 661  8CE0 47           	ld b,a
 662  8CE1 3A 03 8C     	ld a,(Entidades_en_curso)
 663  8CE4 B8           	cp b
 664  8CE5 28 0C        	jr z,13F
 665  8CE7 30 0A        	jr nc,13F
 666  8CE9
 667  8CE9 3C           	inc a
 668  8CEA 32 03 8C     	ld (Entidades_en_curso),a
 669  8CED
 670  8CED              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 671  8CED
 672  8CED CD 4F 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 673  8CF0 CD 6B 8E     	call Define_Clock_next_entity
 674  8CF3
 675  8CF3              ; -------------------------------------------------------------------------------------------------------------
 676  8CF3
 677  8CF3              ; Habilita disparos.
 678  8CF3
 679  8CF3              13
 680  8CF3
 681  8CF3              ;	ld hl,Disparo_Amadeus
 682  8CF3              ;	ld de,CLOCK_repone_disparo_Amadeus
 683  8CF3              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 684  8CF3
 685  8CF3              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 686  8CF3              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 687  8CF3              ;	call Habilita_disparos
 688  8CF3
 689  8CF3              ; COLISIONES.
 690  8CF3
 691  8CF3              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 692  8CF3
 693  8CF3              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 694  8CF3              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 695  8CF3              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 696  8CF3
 697  8CF3              ;	xor a
 698  8CF3              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 699  8CF3
 700  8CF3              ;	call Inicia_punteros_de_cajas
 701  8CF3              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 702  8CF3              ; 														; _ en DRAW.
 703  8CF3
 704  8CF3              ;	ld a,(Filas)
 705  8CF3              ;	and a
 706  8CF3              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 707  8CF3              ;	call Incrementa_punteros_de_cajas
 708  8CF3              ;	jr 12B
 709  8CF3
 710  8CF3              ; ---------------------------------------------------------------------------------------
 711  8CF3
 712  8CF3              ;10 ld a,(Numero_parcial_de_entidades)
 713  8CF3              ;    ld b,a
 714  8CF3              ;	and a
 715  8CF3              ;	jr nz,11F
 716  8CF3
 717  8CF3              ;	ld hl,Ctrl_1;
 718  8CF3              ;	bit 4,(hl)
 719  8CF3              ;	jp nz,16F
 720  8CF3
 721  8CF3              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 722  8CF3
 723  8CF3              ;	ld hl,Ctrl_1
 724  8CF3              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 725  8CF3
 726  8CF3              ;	ld a,(Contador_de_frames)
 727  8CF3              ;	inc a
 728  8CF3              ;	ld (Activa_recarga_cajas),a
 729  8CF3
 730  8CF3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 731  8CF3
 732  8CF3 3A 03 8C     11 ld a,(Entidades_en_curso)
 733  8CF6 A7           	and a
 734  8CF7 CA 5F 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 735  8CFA 47           	ld b,a												; No hay entidades que gestionar.
 736  8CFB
 737  8CFB              ; ( Código que ejecutamos con cada entidad: ).
 738  8CFB
 739  8CFB              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 740  8CFB              ;
 741  8CFB              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 742  8CFB
 743  8CFB 21 00 89     	ld hl,Tabla_de_pintado
 744  8CFE 22 29 8C     	ld (India_SP),hl
 745  8D01
 746  8D01 21 2D 8C     	ld hl,Ctrl_3
 747  8D04 CB D6        	set 2,(hl)
 748  8D06 CD 06 8E     	call Change
 749  8D09
 750  8D09 C5           15 push bc 												; Nº de entidades en curso.
 751  8D0A
 752  8D0A CD 93 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 753  8D0D ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 754  8D11
 755  8D11              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 756  8D11
 757  8D11              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 758  8D11
 759  8D11 3A BF 8B     	ld a,(Impacto)
 760  8D14 A7           	and a
 761  8D15 28 13        	jr z,8F
 762  8D17
 763  8D17              ; 5/7/24
 764  8D17              ; Nota importante:
 765  8D17              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 766  8D17              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 767  8D17              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 768  8D17
 769  8D17 3A 2D 8C     	ld a,(Ctrl_3)
 770  8D1A CB 7F        	bit 7,a
 771  8D1C 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 772  8D1E              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 773  8D1E 3A 74 89     	ld a,(Impacto_Amadeus)
 774  8D21 A7           	and a
 775  8D22 C4 A3 91     	call nz,Genera_explosion
 776  8D25 20 1B        	jr nz,Gestiona_siguiente_entidad
 777  8D27
 778  8D27              ; Falsa colisión !!!
 779  8D27
 780  8D27 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 781  8D2A
 782  8D2A              ; -------------------------------------------
 783  8D2A
 784  8D2A CD AF 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 785  8D2D CD E6 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 786  8D30 CD 9B 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 787  8D33 CD A3 94     	call Genera_datos_de_impresion
 788  8D36 CD 46 93     	call Decrementa_Contador_de_mov_masticados
 789  8D39
 790  8D39              ; -------------------------------------------
 791  8D39
 792  8D39              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 793  8D39
 794  8D39 2A C0 8B     	ld hl,(Puntero_de_impresion)
 795  8D3C CD 77 94     	call Genera_coordenadas
 796  8D3F
 797  8D3F CD 0B A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 798  8D42
 799  8D42              ;	ld hl,Ctrl_0
 800  8D42              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 801  8D42
 802  8D42              Gestiona_siguiente_entidad
 803  8D42
 804  8D42 CD 18 93      	call Store_Restore_cajas
 805  8D45 C1           	pop bc
 806  8D46 10 C1        	djnz 15B
 807  8D48
 808  8D48              ; Hemos gestionado todas las entidades.
 809  8D48
 810  8D48 CD BF 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 811  8D4B CD D6 8E     	call Ordena_tabla_de_impresion
 812  8D4E CD 34 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 813  8D51
 814  8D51              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 815  8D51              ; Hemos gestionado todas las unidades.
 816  8D51              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 817  8D51
 818  8D51              ;	ld hl,Ctrl_1
 819  8D51              ;	res 2,(hl)
 820  8D51
 821  8D51 CD 80 8E     	call Borra_diferencia
 822  8D54
 823  8D54 3A 2D 8C     	ld a,(Ctrl_3)
 824  8D57 CB 5F        	bit 3,a
 825  8D59 20 04        	jr nz,Gestion_de_Amadeus
 826  8D5B
 827  8D5B EB           	ex de,hl
 828  8D5C 71           	ld (hl),c
 829  8D5D 2C           	inc l
 830  8D5E 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 831  8D5F
 832  8D5F
 833  8D5F              ;! GESTIONA AMADEUS !!!!!!!!!!
 834  8D5F
 835  8D5F              Gestion_de_Amadeus
 836  8D5F
 837  8D5F 21 2D 8C     	ld hl,Ctrl_3
 838  8D62 CB 76        	bit 6,(hl)
 839  8D64 28 13        	jr z,Amadeus_vivo
 840  8D66
 841  8D66              ; Amadeus ha sido destruido.
 842  8D66              ; Decrementa (Temp_new_live).
 843  8D66
 844  8D66 21 41 8C     	ld hl,Temp_new_live
 845  8D69 35           	dec (hl)
 846  8D6A 20 29        	jr nz,End_frame
 847  8D6C
 848  8D6C              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 849  8D6C
 850  8D6C 21 56 8C     	ld hl,Lives
 851  8D6F 35           	dec (hl)
 852  8D70
 853  8D70              ;! Fin del juego
 854  8D70
 855  8D70 F3           	di
 856  8D71 28 FE        	jr z,$
 857  8D73 FB           	ei
 858  8D74
 859  8D74              ; Nueva nave.
 860  8D74
 861  8D74 CD AC 8D     	call Reinicia_Amadeus
 862  8D77 18 1C        	jr End_frame
 863  8D79
 864  8D79              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 865  8D79
 866  8D79              Amadeus_vivo
 867  8D79
 868  8D79 3A 74 89     	ld a,(Impacto_Amadeus)
 869  8D7C A7           	and a
 870  8D7D C4 D3 91     	call nz, Genera_explosion_Amadeus
 871  8D80 20 13        	jr nz, End_frame
 872  8D82
 873  8D82 CD 80 91     	call Teclado
 874  8D85
 875  8D85 CD 34 9F     	call Genera_datos_de_impresion_disparos_Amadeus
 876  8D88
 877  8D88 21 2D 8C     	ld hl,Ctrl_3
 878  8D8B CB 6E        	bit 5,(hl)
 879  8D8D 28 06        	jr z,End_frame
 880  8D8F
 881  8D8F              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 882  8D8F
 883  8D8F CD 21 8E     	call Change_Amadeus
 884  8D92 CD E2 8F     	call Genera_datos_de_impresion_Amadeus
 885  8D95
 886  8D95              End_frame
 887  8D95
 888  8D95 2A 0E 8C     	ld hl,(Album_de_borrado)
 889  8D98 22 27 8C     	ld (Scanlines_album_SP),hl
 890  8D9B
 891  8D9B 21 2D 8C     	ld hl,Ctrl_3
 892  8D9E CB C6        	set 0,(hl) 											; Indica Frame completo.
 893  8DA0 CB 9E        	res 3,(hl)
 894  8DA2 CB A6        	res 4,(hl)
 895  8DA4
 896  8DA4 AF           	xor a
 897  8DA5 D3 FE        	out ($fe),a
 898  8DA7
 899  8DA7 76           	halt
 900  8DA8
 901  8DA8              ; ----------------------------------------
 902  8DA8
 903  8DA8              ;	ld a,(Ctrl_1) 										; Existe Loop?
 904  8DA8              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 905  8DA8 CA C8 8C     	jp z,Main
 906  8DAB
 907  8DAB              ; RECARGA DE NUEVA OLEADA.
 908  8DAB
 909  8DAB              ;	ld a,(Contador_de_frames)
 910  8DAB              ;	ld b,a
 911  8DAB              ;	ld a,(Activa_recarga_cajas)
 912  8DAB              ;	cp b
 913  8DAB              ;	jr z,20F
 914  8DAB
 915  8DAB              ;	ld hl,Ctrl_1
 916  8DAB              ;	set 4,(hl)
 917  8DAB              ;	jp Main
 918  8DAB
 919  8DAB              ;20 ld hl,Ctrl_1
 920  8DAB              ;	res 4,(hl)
 921  8DAB
 922  8DAB              ;	ld a,(Contador_de_frames)
 923  8DAB
 924  8DAB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 925  8DAB              ;! _ IMPREDECIBLE !!!!
 926  8DAB
 927  8DAB              ;	add 10
 928  8DAB              ;	ld (Clock_next_entity),a
 929  8DAB
 930  8DAB              ;	jp 4B
 931  8DAB
 932  8DAB C9           	ret
 933  8DAC
 934  8DAC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 935  8DAC              ;
 936  8DAC              ;	16/11/23
 937  8DAC
 938  8DAC              ;;Gestiona_Amadeus
 939  8DAC
 940  8DAC              ;! Activa/desactiva impacto con Amadeus.
 941  8DAC
 942  8DAC              ;	ld a,(Impacto)
 943  8DAC              ;	and a
 944  8DAC              ;	jr nz,2F
 945  8DAC
 946  8DAC              ;;	call Mov_Amadeus
 947  8DAC
 948  8DAC              ;;2 ld a,(Ctrl_0)
 949  8DAC              ;;	bit 4,a
 950  8DAC              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 951  8DAC
 952  8DAC              ;;	call Guarda_foto_entidad_a_pintar
 953  8DAC              ;;	call Guarda_datos_de_borrado_Amadeus
 954  8DAC
 955  8DAC              ;;1 ld hl,Ctrl_0
 956  8DAC              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 957  8DAC
 958  8DAC              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 959  8DAC
 960  8DAC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 961  8DAC
 962  8DAC              ;	call Calcula_numero_de_disparotes
 963  8DAC
 964  8DAC              ;;	ret
 965  8DAC
 966  8DAC              ; -----------------------------
 967  8DAC              ;
 968  8DAC              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 969  8DAC              ;
 970  8DAC              ;	INPUTS: B a de estar a "0".
 971  8DAC
 972  8DAC              ;Prepara_Borra_sprites
 973  8DAC
 974  8DAC              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 975  8DAC              ;	ld a,l
 976  8DAC              ;	ret z
 977  8DAC
 978  8DAC              ;	srl a
 979  8DAC
 980  8DAC              ;2 sub 16
 981  8DAC              ;	jr z,1F
 982  8DAC              ;	inc b
 983  8DAC              ;	jr 2B
 984  8DAC
 985  8DAC              ;1 inc b
 986  8DAC
 987  8DAC              ;	exx
 988  8DAC              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 989  8DAC              ;	exx
 990  8DAC
 991  8DAC              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 992  8DAC              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 993  8DAC
 994  8DAC              ;	ret
 995  8DAC
 996  8DAC              ; --------------------------------------------------------------------------------------------------------------
 997  8DAC              ;
 998  8DAC              ;	15/12/23
 999  8DAC
1000  8DAC              ;Mov_obj
1001  8DAC
1002  8DAC              ;	ld a,(Ctrl_2)
1003  8DAC              ;	bit 1,a
1004  8DAC              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1005  8DAC
1006  8DAC              ; Explosión:
1007  8DAC
1008  8DAC              ;	ld a,(Frames_explosion)
1009  8DAC              ;	and a
1010  8DAC              ;	jr nz,4F
1011  8DAC
1012  8DAC              ;!  Una alimaña menos!!!!!!!!!1
1013  8DAC
1014  8DAC              ; Se trataba de una Entidad_guía ???
1015  8DAC
1016  8DAC              ;	ld a,(Ctrl_2)
1017  8DAC              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1018  8DAC              ;	jr z,5F
1019  8DAC
1020  8DAC              ;	ld hl,Ctrl_3
1021  8DAC              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1022  8DAC
1023  8DAC              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1024  8DAC              ;!! _generado puede ser distinto, (aletoriedad).
1025  8DAC
1026  8DAC              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1027  8DAC              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1028  8DAC              ;	dec (hl)
1029  8DAC              ;	ld hl,Entidades_en_curso
1030  8DAC              ;	dec (hl)
1031  8DAC              ;	ld hl,Numero_de_entidades
1032  8DAC              ;	dec (hl)
1033  8DAC              ;	jr 3F
1034  8DAC
1035  8DAC              ; -----
1036  8DAC
1037  8DAC              ;	`Movemos´ la explosión.
1038  8DAC
1039  8DAC              ;4 ld hl,(Puntero_DESPLZ_der)
1040  8DAC              ;	inc hl
1041  8DAC              ;	inc hl
1042  8DAC              ;	call Extrae_address
1043  8DAC              ;;	ld (Puntero_objeto),hl
1044  8DAC
1045  8DAC              ;;	ld hl,Frames_explosion
1046  8DAC              ;;	dec (hl)
1047  8DAC
1048  8DAC              ;;	ld hl,Ctrl_0
1049  8DAC              ;;	set 4,(hl);;
1050  8DAC
1051  8DAC              ;;	jr 3F
1052  8DAC
1053  8DAC              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1054  8DAC
1055  8DAC              ;2 xor a
1056  8DAC              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1057  8DAC
1058  8DAC              ; Movemos Entidades malignas.
1059  8DAC              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1060  8DAC
1061  8DAC              ;	ld a,(Ctrl_2)
1062  8DAC              ;	bit 5,a
1063  8DAC              ;	jr nz,8F
1064  8DAC
1065  8DAC              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1066  8DAC              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1067  8DAC              ;	jr 7F
1068  8DAC
1069  8DAC              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1070  8DAC
1071  8DAC              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1072  8DAC              ;	bit 4,a
1073  8DAC              ;	ret z
1074  8DAC
1075  8DAC              ; Ha habido desplazamiento de la entidad maligna.
1076  8DAC              ; Ha llegado a zona de AMADEUS ???
1077  8DAC
1078  8DAC              ;7 ld a,(Coordenada_y)
1079  8DAC              ;	cp $14
1080  8DAC              ;	jr c,1F
1081  8DAC
1082  8DAC              ; ---------
1083  8DAC
1084  8DAC              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1085  8DAC              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1086  8DAC
1087  8DAC              ;	di
1088  8DAC              ;	call Genera_coordenadas_X
1089  8DAC              ;	call Compara_coordenadas_X
1090  8DAC              ;	ei
1091  8DAC
1092  8DAC              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1093  8DAC
1094  8DAC              ; ---------
1095  8DAC
1096  8DAC              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1097  8DAC              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1098  8DAC              ;	call Limpia_Variables_de_borrado
1099  8DAC
1100  8DAC              ;3 ret
1101  8DAC
1102  8DAC              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1103  8DAC              ;
1104  8DAC              ;	24/07/24
1105  8DAC
1106  8DAC              Reinicia_Amadeus
1107  8DAC
1108  8DAC              ;	Reinicia posición y estado.
1109  8DAC
1110  8DAC 21 CF 50     	ld hl,$50cf
1111  8DAF 22 75 89     	ld (p.imp.amadeus),hl
1112  8DB2 21 F0 E0     	ld hl,$e0f0
1113  8DB5 22 77 89     	ld (Pamm_Amadeus),hl
1114  8DB8 21 3D 00     	ld hl,$003d
1115  8DBB 22 79 89     	ld (Comm_Amadeus),hl
1116  8DBE
1117  8DBE              ;	limpiamos el álbum de borrado.
1118  8DBE
1119  8DBE 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1120  8DC1
1121  8DC1 AF           	xor a
1122  8DC2 77           	ld (hl),a
1123  8DC3
1124  8DC3 E5           	push hl
1125  8DC4 D1           	pop de
1126  8DC5 13           	inc de
1127  8DC6
1128  8DC6 01 23 00     	ld bc,35
1129  8DC9 ED B0        	ldir
1130  8DCB
1131  8DCB CD E2 8F     	call Genera_datos_de_impresion_Amadeus
1132  8DCE
1133  8DCE              ;	Reinicia temporizaciones.
1134  8DCE
1135  8DCE CD C6 90     	call Inicia_Shield
1136  8DD1
1137  8DD1 3E 5A        	ld a,90
1138  8DD3 32 53 8C     	ld (Shield),a
1139  8DD6
1140  8DD6 3E 64        	ld a,100
1141  8DD8 32 41 8C     	ld (Temp_new_live),a
1142  8DDB
1143  8DDB              ; 	Restauramos el FLAG: Amadeus vivo.
1144  8DDB
1145  8DDB 21 2D 8C     	ld hl,Ctrl_3
1146  8DDE CB B6        	res 6,(hl)
1147  8DE0
1148  8DE0              ;	Fuerza la impresión de la nave en el siguiente frame.
1149  8DE0
1150  8DE0 21 2D 8C      	ld hl,Ctrl_3
1151  8DE3 CB EE        	set 5,(hl)
1152  8DE5
1153  8DE5 C9           	ret
1154  8DE6
1155  8DE6              ; --------------------------------------------------------------------------------------------------------------
1156  8DE6              ;
1157  8DE6              ;	12/05/24
1158  8DE6
1159  8DE6 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1160  8DE9 CB 27        	sla a
1161  8DEB 32 C6 8B     	ld (Velocidad),a
1162  8DEE E6 10        	and $10
1163  8DF0 C8           	ret z
1164  8DF1
1165  8DF1              ; Restaura (Velocidad) a razón del nº de vueltas.
1166  8DF1
1167  8DF1 3A BE 8B     	ld a,(Contador_de_vueltas)
1168  8DF4 CB 2F        	sra a
1169  8DF6 CB 2F        	sra a
1170  8DF8 32 C6 8B     	ld (Velocidad),a
1171  8DFB
1172  8DFB 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1173  8DFE 23           	inc hl
1174  8DFF 23           	inc hl
1175  8E00 23           	inc hl
1176  8E01 23           	inc hl
1177  8E02 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1178  8E05
1179  8E05 C9           	ret
1180  8E06
1181  8E06              ; --------------------------------------------------------------------------------------------------------------
1182  8E06              ;
1183  8E06              ;	21/08/24
1184  8E06
1185  8E06              Change
1186  8E06
1187  8E06 3A 24 8C     	ld a,(Switch)
1188  8E09 EE 01        	xor 1
1189  8E0B 32 24 8C     	ld (Switch),a
1190  8E0E 2A 0C 8C     	ld hl,(Album_de_pintado)
1191  8E11 ED 5B 0E 8C  	ld de,(Album_de_borrado)
1192  8E15 EB           	ex de,hl
1193  8E16 22 0C 8C     	ld (Album_de_pintado),hl
1194  8E19 22 27 8C     	ld (Scanlines_album_SP),hl
1195  8E1C ED 53 0E 8C  	ld (Album_de_borrado),de
1196  8E20 C9           	ret
1197  8E21
1198  8E21              Change_Amadeus
1199  8E21
1200  8E21 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1201  8E24 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1202  8E28 EB           	ex de,hl
1203  8E29 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1204  8E2C ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1205  8E30 C9           	ret
1206  8E31
1207  8E31              Change_Disparos
1208  8E31
1209  8E31              ;	Exclusiones:
1210  8E31
1211  8E31 3A 1C 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1212  8E34 A7           	and a
1213  8E35 C8           	ret z
1214  8E36
1215  8E36 2A 18 8C     	ld hl,(Nivel_scan_disparos_album_de_pintado)
1216  8E39 22 1A 8C     	ld (Nivel_scan_disparos_album_de_borrado),hl
1217  8E3C
1218  8E3C 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1219  8E3F ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1220  8E43 EB           	ex de,hl
1221  8E44 22 14 8C     	ld (Album_de_pintado_disparos),hl
1222  8E47 ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1223  8E4B 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1224  8E4E
1225  8E4E C9           	ret
1226  8E4F
1227  8E4F              ; ------------------------------------
1228  8E4F              ;
1229  8E4F              ; 1/05/24
1230  8E4F
1231  8E4F              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1232  8E4F              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1233  8E4F
1234  8E4F              ;	DESTRUYE: HL,DE,A
1235  8E4F              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1236  8E4F
1237  8E4F              ;	Variables implicadas: (RND_SP).
1238  8E4F
1239  8E4F              Extrae_numero_aleatorio_y_avanza
1240  8E4F
1241  8E4F 21 00 89     	ld hl,Tabla_de_pintado
1242  8E52 EB           	ex de,hl
1243  8E53 2A 42 8C     	ld hl,(RND_SP)
1244  8E56 EB           	ex de,hl
1245  8E57 A7           	and a
1246  8E58 ED 52        	sbc hl,de
1247  8E5A
1248  8E5A 2A 42 8C     	ld hl,(RND_SP)
1249  8E5D 20 06        	jr nz,1F
1250  8E5F
1251  8E5F              ; Sitúa HL al principio de la tabla de nº aleatorios.
1252  8E5F
1253  8E5F 21 F6 88     	ld hl,Numeros_aleatorios
1254  8E62 22 42 8C     	ld (RND_SP),HL
1255  8E65
1256  8E65              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1257  8E65
1258  8E65 7E           1 ld a,(hl)
1259  8E66 23           	inc hl
1260  8E67 22 42 8C     	ld (RND_SP),hl
1261  8E6A C9           	ret
1262  8E6B
1263  8E6B              ; ------------------------------------
1264  8E6B              ;
1265  8E6B              ; 1/05/24
1266  8E6B
1267  8E6B              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1268  8E6B              ; (1 a 4 segundos).
1269  8E6B              ; Actualizamos (Clock_next_entity) con A.
1270  8E6B
1271  8E6B              ;	DESTRUYE: A y B.
1272  8E6B              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1273  8E6B              ;			 Actualiza (Clock_next_entity) con A.
1274  8E6B
1275  8E6B              ;	Variables implicadas: (Clock_next_entity).
1276  8E6B
1277  8E6B              ; Notas:
1278  8E6B
1279  8E6B              ; 	$32 1 seg.
1280  8E6B              ; 	$64 2 seg.
1281  8E6B              ; 	$96 3 seg.
1282  8E6B              ; 	$c8 4 seg.
1283  8E6B              ; 	$fa 5 seg.
1284  8E6B
1285  8E6B              ; $ffff 1310,7 seg, 22 minutos.
1286  8E6B
1287  8E6B              ;	$0100  5 seg. aproximadamente.
1288  8E6B              ;	$0200 10 seg. aproximadamente.
1289  8E6B              ;	$0300 15 seg. aproximadamente.
1290  8E6B              ;	$0400 20 seg. aproximadamente.
1291  8E6B              ;	$0500 25 seg. aproximadamente.
1292  8E6B              ;	$0600 30 seg. aproximadamente.
1293  8E6B
1294  8E6B              Define_Clock_next_entity
1295  8E6B
1296  8E6B FE 34        	cp $34
1297  8E6D 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1298  8E6F
1299  8E6F              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1300  8E6F
1301  8E6F 4F           3 ld c,a
1302  8E70 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1303  8E72 2A 78 5C     	ld hl,(FRAMES)
1304  8E75 A7           	and a
1305  8E76 ED 4A        	adc hl,bc
1306  8E78 22 44 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1307  8E7B C9           	ret
1308  8E7C
1309  8E7C 3E 34        1 ld a,$34
1310  8E7E 18 EF        	jr 3B
1311  8E80
1312  8E80              ; ------------------------------------
1313  8E80              ;
1314  8E80              ; 18/03/24
1315  8E80
1316  8E80              Borra_diferencia
1317  8E80
1318  8E80 ED 4B 27 8C  	ld bc,(Scanlines_album_SP)
1319  8E84
1320  8E84 3A 24 8C     	ld a,(Switch)
1321  8E87 A7           	and a
1322  8E88 28 08        	jr z,2F
1323  8E8A
1324  8E8A 2A 22 8C     	ld hl,(Techo_Scanlines_album_2)
1325  8E8D 11 22 8C     	ld de,Techo_Scanlines_album_2
1326  8E90 18 06        	jr 3F
1327  8E92
1328  8E92 2A 20 8C     2 ld hl,(Techo_Scanlines_album)
1329  8E95 11 20 8C     	ld de,Techo_Scanlines_album
1330  8E98
1331  8E98              ; Diferencia.
1332  8E98
1333  8E98 ED 42        3 sbc hl,bc
1334  8E9A
1335  8E9A C8           	ret z
1336  8E9B D8           	ret c
1337  8E9C
1338  8E9C              ; Nuevo techo, (más bajo que el anterior).
1339  8E9C              ; Fijamos nuevo techo y borramos bytes sobrantes.
1340  8E9C
1341  8E9C EB           	ex de,hl
1342  8E9D
1343  8E9D 71           	ld (hl),c
1344  8E9E 2C           	inc l
1345  8E9F 70           	ld (hl),b
1346  8EA0
1347  8EA0 AF           	xor a
1348  8EA1 43           	ld b,e
1349  8EA2
1350  8EA2 2A 27 8C     	ld hl,(Scanlines_album_SP)
1351  8EA5
1352  8EA5 77           1 ld (hl),a
1353  8EA6 23           	inc hl
1354  8EA7 10 FC        	djnz 1B
1355  8EA9
1356  8EA9              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1357  8EA9
1358  8EA9 21 2D 8C     	ld hl,Ctrl_3
1359  8EAC CB DE        	set 3,(hl)
1360  8EAE
1361  8EAE C9           	ret
1362  8EAF
1363  8EAF              ; --------------------------------------------------------------------------------------------------------------
1364  8EAF              ;
1365  8EAF              ;	26/3/24
1366  8EAF
1367  8EAF              Recauda_informacion_de_entidad_en_curso
1368  8EAF
1369  8EAF              ; Almacena la Coordenada Y de la entidad en curso.
1370  8EAF
1371  8EAF              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1372  8EAF
1373  8EAF 3A BD 8B     	ld a,(Coordenada_y)
1374  8EB2 2A 29 8C     	ld hl,(India_SP)
1375  8EB5 77           	ld (hl),a
1376  8EB6 2C           	inc l
1377  8EB7
1378  8EB7              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1379  8EB7
1380  8EB7              ;	ld de,(Scanlines_album_SP)
1381  8EB7
1382  8EB7 73           	ld (hl),e
1383  8EB8 2C           	inc l
1384  8EB9 72           	ld (hl),d
1385  8EBA 2C           	inc l
1386  8EBB
1387  8EBB 22 29 8C     	ld (India_SP),hl
1388  8EBE
1389  8EBE C9           	ret
1390  8EBF
1391  8EBF              ; --------------------------------------------------------------------------------------------------------------
1392  8EBF              ;
1393  8EBF              ;	27/03/24
1394  8EBF              ;
1395  8EBF
1396  8EBF              Inicializa_India_y_limpia_Tabla_de_impresion
1397  8EBF
1398  8EBF 2A 29 8C     	ld hl,(India_SP)
1399  8EC2 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1400  8EC5
1401  8EC5 79           	ld a,c
1402  8EC6 95           	sub l
1403  8EC7 28 06        	jr z,2F
1404  8EC9 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1405  8ECA              ;														; _ y pasamos a inicializar (India_SP).
1406  8ECA AF           	xor a
1407  8ECB
1408  8ECB 77           1 ld (hl),a
1409  8ECC 2C           	inc l
1410  8ECD 10 FC        	djnz 1B												; Limpia Tabla.
1411  8ECF
1412  8ECF 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1413  8ED2 22 29 8C     	ld (India_SP),hl
1414  8ED5
1415  8ED5 C9           	ret
1416  8ED6
1417  8ED6              ; --------------------------------------------------------------------------------------------------------------
1418  8ED6              ;
1419  8ED6              ;	31/3/24
1420  8ED6
1421  8ED6              Ordena_tabla_de_impresion
1422  8ED6
1423  8ED6              ; 5794 T/states.
1424  8ED6              ; 6278 T/states.
1425  8ED6              ; 5310 T/states.
1426  8ED6
1427  8ED6              ; Inicializamos punteros (India_SP) e (India_2_SP).
1428  8ED6              ; Inicializamos contador de comparaciones, [C].
1429  8ED6              ; Cargamos los registros A y B para efectuar comparación.
1430  8ED6
1431  8ED6 FD 2E 00     	ld iyl,0
1432  8ED9
1433  8ED9 3A 03 8C     	ld a,(Entidades_en_curso)
1434  8EDC FE 04        	cp 4 	;	4
1435  8EDE D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1436  8EDF
1437  8EDF 3D           	dec a
1438  8EE0 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1439  8EE1 51           	ld d,c 										; Copia de respaldo.
1440  8EE2
1441  8EE2 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1442  8EE3
1443  8EE3 21 03 89     	ld hl,Tabla_de_pintado+3
1444  8EE6 46           	ld b,(hl)
1445  8EE7 22 2B 8C     	ld (India_2_SP),hl
1446  8EEA
1447  8EEA B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1448  8EEB DC 13 8F     	call c, Avanza_India_2_SP
1449  8EEE CC 13 8F     	call z, Avanza_India_2_SP
1450  8EF1
1451  8EF1 FD 2D        	dec iyl
1452  8EF3 28 18        	jr z,2F
1453  8EF5
1454  8EF5
1455  8EF5              ; --------------------------------------------------------------------------------------------------------------
1456  8EF5              ;
1457  8EF5              ;	7/4/24
1458  8EF5
1459  8EF5              Trueque
1460  8EF5
1461  8EF5              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1462  8EF5              ;  			A contiene en nº de fila de (India_SP).
1463  8EF5              ;			HL contiene (India_2_SP).
1464  8EF5
1465  8EF5 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1466  8EF6 E5           	push hl										; Preservo (India_2_SP).
1467  8EF7
1468  8EF7 ED 5B 29 8C  	ld de,(India_SP)
1469  8EFB EB           	ex de,hl
1470  8EFC 70           	ld (hl),b
1471  8EFD 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1472  8EFE
1473  8EFE CD 3F 8F     	call Intercambia_1_byte
1474  8F01 CD 3F 8F     	call Intercambia_1_byte
1475  8F04
1476  8F04
1477  8F04              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1478  8F04              ; Recuperamos (India_2_SP) en HL.
1479  8F04
1480  8F04 2A 29 8C     	ld hl,(India_SP)
1481  8F07 7E           	ld a,(hl)
1482  8F08
1483  8F08 E1           	pop hl
1484  8F09 D1           	pop de
1485  8F0A
1486  8F0A              ; --------------------------------------------------------------------------------------------------------------
1487  8F0A
1488  8F0A CD 13 8F     	call Avanza_India_2_SP
1489  8F0D
1490  8F0D 14           2 inc d
1491  8F0E 15           	dec d
1492  8F0F C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1493  8F10 18 D8        	jr 1B
1494  8F12
1495  8F12 C9           	ret
1496  8F13
1497  8F13              ; ----- ----- ----- ----- -----
1498  8F13
1499  8F13              Avanza_India_2_SP
1500  8F13
1501  8F13 0D           	dec c
1502  8F14 28 0A        	jr z,Avanza_punteros_indios
1503  8F16
1504  8F16 FD 2C        	inc iyl
1505  8F18
1506  8F18 2C           	inc l
1507  8F19 2C           	inc l
1508  8F1A 2C           	inc l
1509  8F1B
1510  8F1B 46           	ld b,(hl)
1511  8F1C 22 2B 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1512  8F1F
1513  8F1F C9           	ret
1514  8F20
1515  8F20              ; ----- ----- ----- ----- -----
1516  8F20
1517  8F20              Avanza_punteros_indios
1518  8F20
1519  8F20 15           	dec d
1520  8F21 28 15        	jr z,Prepara_salida
1521  8F23
1522  8F23 4A           	ld c,d
1523  8F24
1524  8F24 2A 29 8C     	ld hl,(India_SP)
1525  8F27 2C           	inc l
1526  8F28 2C           	inc l
1527  8F29 2C           	inc l
1528  8F2A 7E           	ld a,(hl)
1529  8F2B 22 29 8C     	ld (India_SP),hl
1530  8F2E
1531  8F2E 2C           	inc l
1532  8F2F 2C           	inc l
1533  8F30 2C           	inc l
1534  8F31 46           	ld b,(hl)
1535  8F32 22 2B 8C     	ld (India_2_SP),hl
1536  8F35
1537  8F35 FD 2C        	inc iyl
1538  8F37
1539  8F37 C9           	ret
1540  8F38
1541  8F38              Prepara_salida
1542  8F38
1543  8F38 21 00 89     	ld hl,Tabla_de_pintado
1544  8F3B 22 29 8C     	ld (India_SP),hl
1545  8F3E C9           	ret
1546  8F3F
1547  8F3F
1548  8F3F 2C           Intercambia_1_byte inc l
1549  8F40 1C           	inc e
1550  8F41 46           	ld b,(hl)
1551  8F42 1A           	ld a,(de)
1552  8F43 EB           	ex de,hl
1553  8F44 70           	ld (hl),b
1554  8F45 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1555  8F46 C9           	ret
1556  8F47
1557  8F47              ; -----------------------------------------------------------------------------------
1558  8F47              ;
1559  8F47              ;	20/01/24
1560  8F47              ;
1561  8F47              ;
1562  8F47
1563  8F47              Construye_movimientos_masticados_entidad
1564  8F47
1565  8F47 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1566  8F4A E5           	push hl
1567  8F4B CD 8E 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1568  8F4E              ;															; _ el (Contador_de_mov_masticados).
1569  8F4E CD 5E 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1570  8F51              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1571  8F51 CD 8B 99     	call Recompone_posicion_inicio
1572  8F54
1573  8F54 CD BB 96     1 call Draw
1574  8F57 CD 73 8F     	call Guarda_movimiento_masticado
1575  8F5A
1576  8F5A CD 38 9D     	call Movimiento
1577  8F5D
1578  8F5D 3A 2D 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1579  8F60 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1580  8F62 28 F0        	jr z,1B
1581  8F64
1582  8F64              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1583  8F64              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1584  8F64
1585  8F64 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1586  8F65 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1587  8F68
1588  8F68              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1589  8F68
1590  8F68 CD 9C 9E     	call Situa_en_contador_general_de_mov_masticados
1591  8F6B
1592  8F6B              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1593  8F6B              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1594  8F6B
1595  8F6B ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1596  8F6F
1597  8F6F 71           	ld (hl),c
1598  8F70 23           	inc hl
1599  8F71 70           	ld (hl),b
1600  8F72
1601  8F72 C9           	ret
1602  8F73
1603  8F73              ; -----------------------------------------------------------------------------------
1604  8F73              ;
1605  8F73              ;	28/12/23
1606  8F73              ;
1607  8F73              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1608  8F73              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1609  8F73
1610  8F73              Guarda_movimiento_masticado
1611  8F73
1612  8F73 ED 73 08 8C  	ld (Stack),sp
1613  8F77 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1614  8F7B
1615  8F7B DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1616  8F7D FD E5            push iy 												; Pushea Puntero_objeto.
1617  8F7F
1618  8F7F ED 7B 08 8C      ld sp,(Stack)
1619  8F83
1620  8F83 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1621  8F86 23           	inc hl
1622  8F87 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1623  8F8A
1624  8F8A CD 8E 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1625  8F8D              ;															; _ el (Contador_de_mov_masticados).
1626  8F8D C9               ret
1627  8F8E
1628  8F8E              ; --------------------------------------------------------------------------------------------------------------
1629  8F8E              ;
1630  8F8E              ;	12/1/24
1631  8F8E              ;
1632  8F8E              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1633  8F8E
1634  8F8E              Actualiza_Puntero_de_almacen_de_mov_masticados
1635  8F8E
1636  8F8E 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1637  8F91 01 04 00     	ld bc,4
1638  8F94 A7           	and a
1639  8F95 ED 4A        	adc hl,bc
1640  8F97 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1641  8F9A C9           	ret
1642  8F9B
1643  8F9B              ; --------------------------------------------------------------------------------------------------------------
1644  8F9B              ;
1645  8F9B              ;	24/03/24
1646  8F9B              ;
1647  8F9B              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1648  8F9B              ;
1649  8F9B              ;	IX contiene el puntero de impresión.
1650  8F9B              ;	DE contiene (Puntero_objeto).
1651  8F9B
1652  8F9B
1653  8F9B              Cargamos_registros_con_mov_masticado
1654  8F9B
1655  8F9B ED 73 08 8C  	ld (Stack),sp
1656  8F9F ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1657  8FA3
1658  8FA3 D1           	pop de 															; DE contiene Puntero_objeto
1659  8FA4 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1660  8FA6
1661  8FA6 ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1662  8FAA ED 7B 08 8C  	ld sp,(Stack)
1663  8FAE
1664  8FAE 7B           	ld a,e
1665  8FAF 82           	add d															; Comprueba si ya no hay datos en el almacén.
1666  8FB0
1667  8FB0 CC 4E 93     	call z,Reinicia_entidad_maliciosa
1668  8FB3
1669  8FB3 C9           	ret
1670  8FB4
1671  8FB4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1672  8FB4              ;
1673  8FB4              ;	22/7/24
1674  8FB4
1675  8FB4              Cargamos_registros_con_explosion
1676  8FB4
1677  8FB4
1678  8FB4 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1679  8FB7 CD 58 90     	call Extrae_address
1680  8FBA
1681  8FBA 5D           	ld e,l
1682  8FBB 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1683  8FBC
1684  8FBC DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1685  8FC0
1686  8FC0 C9           	ret
1687  8FC1
1688  8FC1
1689  8FC1              Cargamos_registros_con_explosion_Amadeus
1690  8FC1
1691  8FC1 2A 77 89     	ld hl,(Pamm_Amadeus)
1692  8FC4 CD 58 90     	call Extrae_address
1693  8FC7
1694  8FC7 5D           	ld e,l
1695  8FC8 54           	ld d,h
1696  8FC9
1697  8FC9 DD 2A 75 89  	ld ix,(p.imp.amadeus)
1698  8FCD
1699  8FCD C9           	ret
1700  8FCE
1701  8FCE              ; --------------------------------------------------------------------------------------------------------------
1702  8FCE              ;
1703  8FCE              ;	17/06/24
1704  8FCE              ;
1705  8FCE              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1706  8FCE              ;
1707  8FCE              ;	IX contiene el puntero de impresión.
1708  8FCE              ;	DE contiene (Puntero_objeto).
1709  8FCE
1710  8FCE
1711  8FCE              Cargamos_registros_con_mov_masticado_Amadeus
1712  8FCE
1713  8FCE ED 73 08 8C  	ld (Stack),sp
1714  8FD2 ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1715  8FD6 D1           	pop de 															; DE contiene Puntero_objeto
1716  8FD7 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1717  8FD9 DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1718  8FDD ED 7B 08 8C  	ld sp,(Stack)
1719  8FE1 C9           	ret
1720  8FE2
1721  8FE2              ; ---------------------------------------------------------------------------------------------------------------------
1722  8FE2              ;
1723  8FE2              ;	18/6/24
1724  8FE2              ;
1725  8FE2              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1726  8FE2
1727  8FE2              Genera_datos_de_impresion_Amadeus
1728  8FE2
1729  8FE2 3A 74 89     	ld a,(Impacto_Amadeus)
1730  8FE5 A7           	and a
1731  8FE6 20 03        	jr nz,1F
1732  8FE8
1733  8FE8              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1734  8FE8              ; _apuntando a la correspondiente explosión.
1735  8FE8
1736  8FE8 CD CE 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1737  8FEB
1738  8FEB DD 7D        1 ld a,ixl
1739  8FED E6 1F        	and $1f
1740  8FEF 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1741  8FF2
1742  8FF2 2A 27 8C     	ld hl,(Scanlines_album_SP)
1743  8FF5 E5           	push hl
1744  8FF6
1745  8FF6 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1746  8FF9 22 27 8C     	ld (Scanlines_album_SP),hl
1747  8FFC
1748  8FFC CD A3 94     	call Genera_datos_de_impresion
1749  8FFF
1750  8FFF E1           	pop hl
1751  9000 22 27 8C     	ld (Scanlines_album_SP),hl
1752  9003
1753  9003 C9           	ret
1754  9004
1755  9004              ; ---------------------------------------------------------------------------------------------------------------------
1756  9004              ;
1757  9004              ;	13/03/24
1758  9004              ;
1759  9004              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1760  9004
1761  9004              Inicia_albumes_de_lineas
1762  9004
1763  9004 21 00 80     	ld hl,Scanlines_album
1764  9007 22 0C 8C     	ld (Album_de_pintado),hl
1765  900A 22 27 8C     	ld (Scanlines_album_SP),hl
1766  900D
1767  900D 21 1A 81     	ld hl,Scanlines_album_2
1768  9010 22 0E 8C     	ld (Album_de_borrado),hl
1769  9013
1770  9013 C9           	ret
1771  9014
1772  9014              Inicia_albumes_de_lineas_Amadeus
1773  9014
1774  9014 21 34 82     	ld hl,Amadeus_scanlines_album
1775  9017 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1776  901A 21 58 82     	ld hl,Amadeus_scanlines_album_2
1777  901D 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1778  9020
1779  9020 C9           	ret
1780  9021
1781  9021              Inicia_albumes_de_disparos
1782  9021
1783  9021 21 7C 82     	ld hl,Disparos_scanlines_album
1784  9024 22 14 8C     	ld (Album_de_pintado_disparos),hl
1785  9027 21 8E 82     	ld hl,Disparos_scanlines_album_2
1786  902A 22 16 8C     	ld (Album_de_borrado_disparos),hl
1787  902D
1788  902D 21 7C 82     	ld hl,Disparos_scanlines_album
1789  9030 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1790  9033
1791  9033 C9           	ret
1792  9034
1793  9034              ; ---------------------------------------------------------------------------------------------------------------------
1794  9034              ;
1795  9034              ; 8/1/23
1796  9034              ;
1797  9034              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1798  9034              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1799  9034              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1800  9034
1801  9034              ; Destruye HL y DE !!!!!
1802  9034
1803  9034              Inicia_punteros_de_cajas
1804  9034
1805  9034 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1806  9037 CD 58 90         call Extrae_address
1807  903A 22 FB 8B         ld (Puntero_store_caja),hl
1808  903D 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1809  9040 22 FF 8B     	ld (Indice_restore_caja),hl
1810  9043 CD 58 90     	call Extrae_address
1811  9046 22 FD 8B     	ld (Puntero_restore_caja),hl
1812  9049 C9               ret
1813  904A
1814  904A              ; *************************************************************************************************************************************************************
1815  904A              ;
1816  904A              ; 8/1/23
1817  904A              ;
1818  904A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1819  904A
1820  904A 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1821  904D 22 30 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1822  9050 C9           	ret
1823  9051 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1824  9054 22 32 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1825  9057 C9           	ret
1826  9058
1827  9058              ; *************************************************************************************************************************************************************
1828  9058              ;
1829  9058              ; 20/10/22
1830  9058              ;
1831  9058              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1832  9058              ;
1833  9058              ; Destruye el puntero y DE !!!!!
1834  9058
1835  9058 5E           Extrae_address ld e,(hl)
1836  9059 23           	inc hl
1837  905A 56           	ld d,(hl)
1838  905B 2B           	dec hl
1839  905C EB           	ex de,hl
1840  905D C9           	ret
1841  905E
1842  905E              ; *************************************************************************************************************************************************************
1843  905E              ;
1844  905E              ;	20/1/24
1845  905E              ;
1846  905E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1847  905E              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1848  905E              ;
1849  905E              ;   Destruye HL y BC !!!!!,
1850  905E              ;
1851  905E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1852  905E              ;					"0" ..... Izquierda.
1853  905E
1854  905E              Inicia_Puntero_objeto
1855  905E
1856  905E 3A DA 8B     	ld a,(Cuad_objeto)
1857  9061 E6 01        	and 1
1858  9063 F5           	push af
1859  9064 CC 80 90     	call z,Inicia_puntero_objeto_izq
1860  9067 F1           	pop af
1861  9068 C8           	ret z
1862  9069 CD 6D 90     	call Inicia_puntero_objeto_der
1863  906C C9           	ret
1864  906D
1865  906D              ; Arrancamos desde la parte izquierda de la pantalla.
1866  906D              ; Iniciamos (Indice_Sprite_der).
1867  906D
1868  906D 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1869  9070 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1870  9073 CD 58 90     	call Extrae_address
1871  9076 22 CD 8B     	ld (Puntero_objeto),hl
1872  9079
1873  9079 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1874  907C 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1875  907F C9           	ret
1876  9080
1877  9080              ; Arrancamos desde la parte derecha de la pantalla.
1878  9080              ; Iniciamos (Indice_Sprite_izq).
1879  9080
1880  9080 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1881  9083 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1882  9086 CD 58 90     	call Extrae_address
1883  9089 22 CD 8B     	ld (Puntero_objeto),hl
1884  908C
1885  908C 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1886  908F 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1887  9092 C9           	ret
1888  9093
1889  9093              ; **************************************************************************************************
1890  9093              ;
1891  9093              ;	06/07/24
1892  9093              ;
1893  9093              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1894  9093
1895  9093              Restore_entidad
1896  9093
1897  9093 2A FB 8B     	ld hl,(Puntero_store_caja)
1898  9096 7E           	ld a,(hl)
1899  9097 A7           	and a
1900  9098 CC A6 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1901  909B 28 F6        	jr z,Restore_entidad
1902  909D
1903  909D 11 BB 8B     	ld de,Bandeja_DRAW
1904  90A0 01 0C 00     	ld bc,12
1905  90A3 ED B0        	ldir
1906  90A5 C9           	ret
1907  90A6
1908  90A6              ; **************************************************************************************************
1909  90A6              ;
1910  90A6              ;	08/05/23
1911  90A6              ;
1912  90A6              ;	Incrementamos los dos punteros de entidades. (+1).
1913  90A6
1914  90A6              Incrementa_punteros_de_cajas
1915  90A6
1916  90A6 2A FD 8B     	ld hl,(Puntero_restore_caja)
1917  90A9 22 FB 8B     	ld (Puntero_store_caja),hl
1918  90AC 2A FF 8B     	ld hl,(Indice_restore_caja)
1919  90AF 23           	inc hl
1920  90B0 23           	inc hl
1921  90B1 22 FF 8B     	ld (Indice_restore_caja),hl
1922  90B4 CD 58 90         call Extrae_address
1923  90B7 22 FD 8B         ld (Puntero_restore_caja),hl
1924  90BA C9               ret
1925  90BB
1926  90BB              ; -----------------------------------------------------------
1927  90BB
1928  90BB              ; Teclado.
1929  90BB
1930  90BB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1931  90BD DB FE        	in a,($fe)
1932  90BF E6 01        	and $01
1933  90C1 28 02        	jr z,1f
1934  90C3 18 F6        	jr Pulsa_ENTER
1935  90C5 C9           1 ret
1936  90C6
1937  90C6              ; **************************************************************************************************
1938  90C6              ;
1939  90C6              ; Temporización.
1940  90C6
1941  90C6              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1942  90C6              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1943  90C6              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1944  90C6              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1945  90C6
1946  90C6              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1947  90C6              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1948  90C6              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1949  90C6
1950  90C6              ; A partir de $4f61 no hace falta DELAY.
1951  90C6
1952  90C6              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1953  90C6
1954  90C6              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1955  90C6              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1956  90C6              ;	LD A,B
1957  90C6              ;	AND A
1958  90C6              ;	JR NZ,wait
1959  90C6              ;	RET
1960  90C6
1961  90C6              ; ---------------------------------------------------------------------------------------------------------------
1962  90C6              ;
1963  90C6              ;	13/07/24
1964  90C6              ;
1965  90C6
1966  90C6              Inicia_Shield
1967  90C6
1968  90C6 21 4D 8C     	ld hl,Datos_Shield
1969  90C9 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1970  90CC
1971  90CC 7E           	ld a,(hl)
1972  90CD 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1973  90D0
1974  90D0 3E 01        	ld a,1
1975  90D2 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1976  90D5
1977  90D5 C9           	ret
1978  90D6
1979  90D6              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1980  90D6              ;
1981  90D6              ;	4/6/24
1982  90D6              ;
1983  90D6              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1984  90D6              ;
1985  90D6              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1986  90D6              ;
1987  90D6
1988  90D6              Actualiza_pantalla
1989  90D6
1990  90D6 3E 02        	ld a,2
1991  90D8 D3 FE        	out ($fe),a
1992  90DA
1993  90DA 3A 2D 8C     	ld a,(Ctrl_3)
1994  90DD CB 57        	bit 2,a
1995  90DF 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1996  90E1
1997  90E1              Borrando_entidades
1998  90E1
1999  90E1 2A 27 8C     	ld hl,(Scanlines_album_SP)
2000  90E4 CD 58 90     	call Extrae_address
2001  90E7 24           	inc h
2002  90E8 25           	dec h
2003  90E9 28 05        	jr z,Pintando_entidades
2004  90EB CD 98 95     	call Pinta_Sprites
2005  90EE 18 F1        	jr Borrando_entidades
2006  90F0
2007  90F0              Pintando_entidades
2008  90F0
2009  90F0 2A 29 8C     	ld hl,(India_SP)
2010  90F3 2C           	inc l
2011  90F4 CD 58 90     	call Extrae_address
2012  90F7 24           	inc h
2013  90F8 25           	dec h
2014  90F9 28 0E        	jr z,Ejecuta_escudo
2015  90FB 1C           	inc e
2016  90FC 1C           	inc e
2017  90FD ED 53 29 8C  	ld (India_SP),de
2018  9101 CD 58 90     	call Extrae_address
2019  9104 CD 98 95     	call Pinta_Sprites
2020  9107 18 E7        	jr Pintando_entidades
2021  9109
2022  9109              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2023  9109
2024  9109              Ejecuta_escudo
2025  9109
2026  9109 3A 53 8C     	ld a,(Shield)
2027  910C A7           	and a
2028  910D 20 2F        	jr nz,Aplica_Shield
2029  910F
2030  910F              Borrando_Amadeus
2031  910F
2032  910F 21 2D 8C     	ld hl,Ctrl_3
2033  9112 CB 6E        	bit 5,(hl)
2034  9114 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2035  9116
2036  9116 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2037  9119 CD 58 90     	call Extrae_address
2038  911C 24           	inc h
2039  911D 25           	dec h
2040  911E 28 03        	jr z,Pintando_Amadeus
2041  9120 CD 98 95     	call Pinta_Sprites
2042  9123
2043  9123              Pintando_Amadeus
2044  9123
2045  9123 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2046  9126 CD 58 90     	call Extrae_address
2047  9129 24           	inc h
2048  912A 25           	dec h
2049  912B 28 03        	jr z,1F
2050  912D CD 98 95     	call Pinta_Sprites
2051  9130
2052  9130              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2053  9130
2054  9130 21 2D 8C     1 ld hl,Ctrl_3
2055  9133 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2056  9135 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2057  9137 CB AE        	res 5,(hl)
2058  9139
2059  9139 3E 01        	ld a,1												; Borde azul.
2060  913B D3 FE        	out ($fe),a
2061  913D
2062  913D C9           	ret
2063  913E
2064  913E
2065  913E
2066  913E              Aplica_Shield
2067  913E
2068  913E              ;	Bit 1 "1" (Shield_3) Sólo borra.
2069  913E              ;		  "0"     ""     Borra/Pinta.
2070  913E              ;	Bit 2    ""  RET.	 No borra, no pinta.
2071  913E
2072  913E 21 55 8C     	ld hl,Shield_3
2073  9141
2074  9141 CB 5E        	bit 3,(hl)
2075  9143 20 DE        	jr nz,Pintando_Amadeus
2076  9145
2077  9145 CB 56        	bit 2,(hl)
2078  9147 20 E7        	jr nz,1B
2079  9149
2080  9149 CB 4E        	bit 1,(hl)
2081  914B C4 52 91     	call nz,Borra_Amadeus_shield
2082  914E
2083  914E 28 BF        	jr z,Borrando_Amadeus
2084  9150 18 DE        	jr 1B
2085  9152
2086  9152              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2087  9152
2088  9152              Borra_Amadeus_shield
2089  9152
2090  9152 3A 2D 8C     	ld a,(Ctrl_3)
2091  9155 CB 6F        	bit 5,a
2092  9157 28 08        	jr z,1F
2093  9159
2094  9159 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2095  915C CD 58 90     	call Extrae_address
2096  915F 18 06        	jr 2F
2097  9161
2098  9161 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2099  9164 CD 58 90     	call Extrae_address
2100  9167
2101  9167 CD 98 95     2 call Pinta_Sprites
2102  916A
2103  916A AF           	xor a
2104  916B 3C           	inc a											; Asegura NZ en la salida de la rutina.
2105  916C
2106  916C C9           	ret
2107  916D
2108  916D              Pinta_Amadeus_shield
2109  916D
2110  916D 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2111  9170 CD 58 90     	call Extrae_address
2112  9173 CD 98 95     	call Pinta_Sprites
2113  9176
2114  9176 AF           	xor a
2115  9177 3C           	inc a											; Asegura NZ en la salida de la rutina.
2116  9178
2117  9178 C9           	ret
2118  9179
2119  9179              Borra_Pinta_Amadeus_shield
2120  9179
2121  9179 CD 52 91     	call Borra_Amadeus_shield
2122  917C CD 6D 91     	call Pinta_Amadeus_shield
2123  917F C9           	ret
2124  9180
2125  9180              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2126  9180              ;
2127  9180              ;	19/6/24
2128  9180              ;
2129  9180
2130  9180              Teclado
2131  9180
2132  9180              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2133  9180
2134  9180 3E F7        	ld a,$f7												; "5" para disparar.
2135  9182 DB FE        	in a,($fe)
2136  9184 E6 10        	and $10
2137  9186
2138  9186 CC 72 9F     	call z,Genera_disparo_Amadeus
2139  9189
2140  9189 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2141  918B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2142  918D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2143  918F CC 05 9D         call z,Amadeus_a_izquierda
2144  9192
2145  9192 3E F7        	ld a,$f7
2146  9194 DB FE        	in a,($fe)
2147  9196 E6 01        	and $01
2148  9198 C8           	ret z
2149  9199
2150  9199 3E F7        	ld a,$f7
2151  919B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2152  919D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2153  919F CC 1D 9D     	call z,Amadeus_a_derecha
2154  91A2
2155  91A2 C9           	ret
2156  91A3
2157  91A3              ; ------------------------------------------------------------------------------------------------------------------------
2158  91A3              ;
2159  91A3              ;	06/07/24
2160  91A3              ;
2161  91A3
2162  91A3              Genera_explosion
2163  91A3
2164  91A3 21 3F 8C     	ld hl,Clock_explosion
2165  91A6 35           	dec (hl)
2166  91A7 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2167  91A9
2168  91A9              Borra_entidad_colisionada
2169  91A9
2170  91A9 CD AF 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2171  91AC CD B4 8F     	call Cargamos_registros_con_explosion
2172  91AF CD A3 94     	call Genera_datos_de_impresion
2173  91B2
2174  91B2 AF           	xor a
2175  91B3 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2176  91B4
2177  91B4 C9           	ret
2178  91B5
2179  91B5              Siguiente_frame_explosion
2180  91B5
2181  91B5 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2182  91B7
2183  91B7              ; Avanza Frame de explosión.
2184  91B7
2185  91B7 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2186  91BA 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2187  91BD
2188  91BD 79           	ld a,c
2189  91BE 95           	sub l
2190  91BF 20 0B        	jr nz,1F
2191  91C1
2192  91C1              ; Fín de la entidad !!!!!!!!!!!!!
2193  91C1
2194  91C1 21 02 8C     	ld hl,Numero_parcial_de_entidades
2195  91C4 35           	dec (hl)
2196  91C5 23           	inc hl
2197  91C6 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2198  91C7
2199  91C7 CD 23 93     	call Limpiamos_bandeja_DRAW
2200  91CA 18 DD        	jr Borra_entidad_colisionada
2201  91CC
2202  91CC 23           1 inc hl
2203  91CD 23           	inc hl
2204  91CE 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2205  91D1 18 D6        	jr Borra_entidad_colisionada
2206  91D3
2207  91D3              ; ----- ----- ----- ----- -----
2208  91D3
2209  91D3              Genera_explosion_Amadeus
2210  91D3
2211  91D3 21 40 8C     	ld hl,Clock_explosion_Amadeus
2212  91D6 35           	dec (hl)
2213  91D7 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2214  91D9
2215  91D9              Borra_Amadeus_impactado
2216  91D9
2217  91D9 CD 21 8E     	call Change_Amadeus
2218  91DC CD C1 8F     	call Cargamos_registros_con_explosion_Amadeus
2219  91DF CD E2 8F     	call Genera_datos_de_impresion_Amadeus
2220  91E2
2221  91E2 21 2D 8C     	ld hl,Ctrl_3
2222  91E5 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2223  91E7
2224  91E7 AF           	xor a
2225  91E8 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2226  91E9
2227  91E9 C9           	ret
2228  91EA
2229  91EA              Siguiente_frame_explosion_Amadeus
2230  91EA
2231  91EA 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2232  91EC
2233  91EC              ; Avanza Frame de explosión.
2234  91EC
2235  91EC 2A 77 89     	ld hl,(Pamm_Amadeus)
2236  91EF 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2237  91F2
2238  91F2 79           	ld a,c
2239  91F3 95           	sub l
2240  91F4 20 0B        	jr nz,1F
2241  91F6
2242  91F6              ; Fín de Amadeus !!!!!!!!!!!!!
2243  91F6              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2244  91F6
2245  91F6 AF           	xor a
2246  91F7 32 74 89     	ld (Impacto_Amadeus),a
2247  91FA 21 2D 8C     	ld hl,Ctrl_3
2248  91FD CB F6        	set 6,(hl)
2249  91FF
2250  91FF 18 D8        	jr Borra_Amadeus_impactado
2251  9201
2252  9201 23           1 inc hl
2253  9202 23           	inc hl
2254  9203 22 77 89     	ld (Pamm_Amadeus),hl
2255  9206 18 D1        	jr Borra_Amadeus_impactado
2256  9208
2257  9208              ; ---------------------------------------------------------------
2258  9208
2259  9208              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9208              ; ******************************************************************************************************************************************************************************************
   2+ 9208              ;
   3+ 9208              ;   21/04/24
   4+ 9208              ;
   5+ 9208              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9208              ;   (XOR) bit a bit.
   7+ 9208              ;
   8+ 9208              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9208
  10+ 9208              Derivando_RND
  11+ 9208
  12+ 9208 21 F6 88         ld hl,Numeros_aleatorios
  13+ 920B
  14+ 920B ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 920D C5               push bc
  16+ 920E              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 920E 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9211              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9211
  20+ 9211 A7           6 and a                                 ; Carry a "0".
  21+ 9212 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9214 30 02            jr nc,1F
  23+ 9216
  24+ 9216 CB C1            set 0,c
  25+ 9218
  26+ 9218 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9219 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 921B 5F               ld e,a
  29+ 921C
  30+ 921C 7A               ld a,d
  31+ 921D E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 921F 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9221
  34+ 9221 CB 3F            srl a
  35+ 9223
  36+ 9223 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9224
  38+ 9224 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9225 28 04            jr z,4F
  40+ 9227
  41+ 9227 CB FF            set 7,a
  42+ 9229 18 02            jr 5F
  43+ 922B
  44+ 922B CB BF        4 res 7,a
  45+ 922D
  46+ 922D CB 21        5 sla c
  47+ 922F 10 E0            djnz 6B
  48+ 9231
  49+ 9231 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9232
  51+ 9232 77               ld (hl),a
  52+ 9233 23               inc hl
  53+ 9234 C1               pop bc
  54+ 9235 10 D4            djnz 3B
  55+ 9237
  56+ 9237 C9               ret
  57+ 9238
  58+ 9238
  59+ 9238
# file closed: RND_Derivando.asm
2260  9238              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9238              ;---------------------------------------------------------------------------------------------------------------
   2+ 9238              ;
   3+ 9238              ;   8/3/24
   4+ 9238              ;
   5+ 9238              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9238              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9238              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9238              ;	_ de la 1ª entidad del Nivel.
   9+ 9238              ;
  10+ 9238              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9238
  12+ 9238              ;	MODIFICA: HL,DE y A.
  13+ 9238              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9238
  15+ 9238              Inicializa_Nivel
  16+ 9238
  17+ 9238 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 923B CD 58 90     	call Extrae_address
  19+ 923E 7E           	ld a,(hl)
  20+ 923F 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9242 23           	inc hl
  22+ 9243 CD 50 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9246 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9249 CD 59 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 924C
  26+ 924C CD 6A 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 924F C9           	ret
  28+ 9250
  29+ 9250              ; ----------------------
  30+ 9250
  31+ 9250 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9253 01 04 00     	ld bc,4
  33+ 9256 ED B0        	ldir
  34+ 9258 C9           	ret
  35+ 9259
  36+ 9259 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 925A CD F4 93         call Calcula_salto_en_BC
  38+ 925D 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9260 A7               and a
  40+ 9261 ED 4A            adc hl,bc
  41+ 9263 CD 58 90         call Extrae_address
  42+ 9266 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 9269 C9               ret
  44+ 926A
  45+ 926A 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 926D CD F4 93     	call Calcula_salto_en_BC
  47+ 9270 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9273 A7               and a
  49+ 9274 ED 4A            adc hl,bc
  50+ 9276 CD 58 90         call Extrae_address
  51+ 9279 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 927C C9           	ret
  53+ 927D
  54+ 927D              ;---------------------------------------------------------------------------------------------------------------
  55+ 927D              ;
  56+ 927D              ;   5/1/24
  57+ 927D              ;
  58+ 927D              ;	Destruye A,BC,HL,DE
  59+ 927D
  60+ 927D              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 927D              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 927D
  63+ 927D              Inicia_Entidades
  64+ 927D
  65+ 927D              ; Preparamos los punteros de las cajas de entidades:
  66+ 927D
  67+ 927D CD 34 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9280              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9280 CD 3C 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 9283
  71+ 9283 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 9286
  73+ 9286 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 9289
  75+ 9289 CD A2 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 928C
  77+ 928C 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 928F
  79+ 928F              ; En este punto:
  80+ 928F              ;
  81+ 928F              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 928F              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 928F
  84+ 928F C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 9290
  86+ 9290 7E           	ld a,(hl)
  87+ 9291 CD 0E 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9294
  89+ 9294 CD 06 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9297
  91+ 9297              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9297
  93+ 9297 CD C4 93     	call Busca_mov_masticados_segun_tipo
  94+ 929A
  95+ 929A A7           	and a
  96+ 929B 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 929D
  98+ 929D              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 929D
 100+ 929D              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 929D              ;	_ de este tipo de entidad.
 102+ 929D
 103+ 929D CD 9C 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92A0 CD A9 9E     	call Transfiere_datos_de_contadores
 105+ 92A3
 106+ 92A3 18 06        	jr 4F
 107+ 92A5
 108+ 92A5 CD 47 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92A8
 110+ 92A8              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92A8              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92A8              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92A8              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92A8              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92A8
 116+ 92A8 CD 82 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92AB              ;																; _ Mov_masticados ya generados.
 118+ 92AB
 119+ 92AB CD 9B 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92AE
 121+ 92AE DD E5        	push ix
 122+ 92B0 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92B1
 124+ 92B1 D5           	push de
 125+ 92B2 CD 77 94     	call Genera_coordenadas
 126+ 92B5
 127+ 92B5 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 128+ 92B9 CD AF 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92BC D1           	pop de
 130+ 92BD
 131+ 92BD CD A3 94     	call Genera_datos_de_impresion
 132+ 92C0              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92C0              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92C0              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92C0              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92C0
 137+ 92C0 CD 46 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92C3
 139+ 92C3              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92C3
 141+ 92C3 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92C7 CD 33 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92CA
 144+ 92CA CD 23 93     	call Limpiamos_bandeja_DRAW
 145+ 92CD CD A6 90     	call Incrementa_punteros_de_cajas
 146+ 92D0
 147+ 92D0              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92D0              ; _ entidad del Nivel.
 149+ 92D0
 150+ 92D0 3A 2E 8C     	ld a,(Ctrl_4)
 151+ 92D3 E6 F0        	and $f0
 152+ 92D5 32 2E 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92D8
 154+ 92D8              ; Siguiente entidad del Nivel.
 155+ 92D8
 156+ 92D8 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92DB 23           	inc hl 														; _ entidad del Nivel.
 158+ 92DC
 159+ 92DC C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92DD
 161+ 92DD 10 A7        	djnz 2B
 162+ 92DF
 163+ 92DF C9           	ret
 164+ 92E0
 165+ 92E0              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92E0              ;
 167+ 92E0              ;	27/5/24
 168+ 92E0              ;
 169+ 92E0              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92E0              ;
 171+ 92E0
 172+ 92E0              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92E0              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92E0
 175+ 92E0 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92E3 CD 06 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92E6
 178+ 92E6
 179+ 92E6              Construye_movimientos_masticados_Amadeus
 180+ 92E6
 181+ 92E6 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92E9 CD 8E 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92EC              ;															; _ el (Contador_de_mov_masticados).
 184+ 92EC CD 5E 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 92EF              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 92EF
 187+ 92EF              ; Generamos movimientos masticados de Amadeus.
 188+ 92EF
 189+ 92EF 06 79        	ld b,121												; $0079, 121d.
 190+ 92F1
 191+ 92F1 C5           1 push bc
 192+ 92F2 CD BB 96     	call Draw
 193+ 92F5 CD 73 8F     	call Guarda_movimiento_masticado
 194+ 92F8
 195+ 92F8 CD 2F 9A     	call Mov_right
 196+ 92FB CD 2F 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 92FE
 198+ 92FE C1           	pop bc
 199+ 92FF 10 F0        	djnz 1B
 200+ 9301
 201+ 9301              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9301
 203+ 9301              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9301              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9301
 206+ 9301 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9304 01 08 00     	ld bc,8
 208+ 9307 A7           	and a
 209+ 9308 ED 42        	sbc hl,bc
 210+ 930A 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 930D
 212+ 930D C9           	ret
 213+ 930E
 214+ 930E              ; ---------------------------------------------------------------------
 215+ 930E              ;
 216+ 930E              ;	10/02/24
 217+ 930E              ;
 218+ 930E              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 930E              ;
 220+ 930E              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 930E
 222+ 930E              Definicion_segun_tipo
 223+ 930E
 224+ 930E CD F4 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9311 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9314 CD FC 93     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9317 C9           	ret
 228+ 9318
 229+ 9318              ; ---------------------------------------------------------------------
 230+ 9318              ;
 231+ 9318              ;	6/7/24
 232+ 9318
 233+ 9318
 234+ 9318              Store_Restore_cajas
 235+ 9318
 236+ 9318 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 931C CD 33 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 931F CD A6 90     	call Incrementa_punteros_de_cajas
 239+ 9322 C9           	ret
 240+ 9323
 241+ 9323              ; ---------------------------------------------------------------------
 242+ 9323              ;
 243+ 9323              ;	23/6/24
 244+ 9323              ;
 245+ 9323              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9323              ;
 247+ 9323              ;	MODIFY: HL
 248+ 9323
 249+ 9323              Limpiamos_bandeja_DRAW
 250+ 9323
 251+ 9323 ED 73 08 8C  	ld (Stack),sp
 252+ 9327 31 E0 8B     	ld sp,Vel_left
 253+ 932A
 254+ 932A AF           	xor a
 255+ 932B 67           	ld h,a
 256+ 932C 6F           	ld l,a
 257+ 932D
 258+ 932D E5           	push hl
 259+ 932E E5           	push hl
 260+ 932F E5           	push hl
 261+ 9330 E5           	push hl
 262+ 9331 E5           	push hl
 263+ 9332 E5           	push hl
 264+ 9333 E5           	push hl
 265+ 9334 E5           	push hl
 266+ 9335 E5           	push hl
 267+ 9336 E5           	push hl
 268+ 9337 E5           	push hl
 269+ 9338 E5           	push hl
 270+ 9339 E5           	push hl
 271+ 933A E5           	push hl
 272+ 933B E5           	push hl
 273+ 933C E5           	push hl
 274+ 933D E5           	push hl
 275+ 933E E5           	push hl
 276+ 933F
 277+ 933F 33           	inc sp
 278+ 9340
 279+ 9340 E5           	push hl
 280+ 9341 ED 7B 08 8C  	ld sp,(Stack)
 281+ 9345
 282+ 9345 C9           	ret
 283+ 9346
 284+ 9346              ; ---------------------------------------------------------------------
 285+ 9346              ;
 286+ 9346              ;	24/03/24
 287+ 9346
 288+ 9346 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9349 2B           	dec hl
 290+ 934A 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 934D C9           	ret
 292+ 934E
 293+ 934E              ; ---------------------------------------------------------------------
 294+ 934E              ;
 295+ 934E              ;	8/5/24
 296+ 934E
 297+ 934E              Reinicia_entidad_maliciosa
 298+ 934E
 299+ 934E              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 934E
 301+ 934E CD 9C 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9351 CD A9 9E     	call Transfiere_datos_de_contadores
 303+ 9354
 304+ 9354              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9354
 306+ 9354 3A BB 8B     	ld a,(Tipo)
 307+ 9357 CD 0E 93     	call Definicion_segun_tipo
 308+ 935A
 309+ 935A E5           	push hl
 310+ 935B DD E1        	pop ix
 311+ 935D
 312+ 935D DD 6E 0B     	ld l,(ix+11)
 313+ 9360 DD 66 0C     	ld h,(ix+12)
 314+ 9363
 315+ 9363 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9366
 317+ 9366 CD 9B 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9369
 319+ 9369              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9369              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9369              ; Ejemplos.
 322+ 9369
 323+ 9369              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9369              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9369              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9369              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9369              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9369
 329+ 9369 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 936C CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 936E
 332+ 936E 7E           	ld a,(hl)
 333+ 936F CB 2F        	sra a
 334+ 9371 CB 2F        	sra a
 335+ 9373
 336+ 9373 32 C6 8B     	ld (Velocidad),a
 337+ 9376
 338+ 9376 3E 40        	ld a,$40
 339+ 9378 BE           	cp (hl)
 340+ 9379 C0           	ret nz
 341+ 937A
 342+ 937A              ; Límitador.
 343+ 937A
 344+ 937A              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 937A
 346+ 937A CB 2E        	sra (hl)
 347+ 937C 21 C6 8B     	ld hl,Velocidad
 348+ 937F CB 2E        	sra (hl)
 349+ 9381
 350+ 9381 C9           	ret
 351+ 9382
 352+ 9382              ; ---------------------------------------------------------------------
 353+ 9382              ;
 354+ 9382              ;	22/01/24
 355+ 9382
 356+ 9382 21 2E 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 9385 CB 46        	bit 0,(hl)
 358+ 9387 20 0D        	jr nz,1F
 359+ 9389 CB 4E        	bit 1,(hl)
 360+ 938B 20 0C        	jr nz,2F
 361+ 938D CB 56        	bit 2,(hl)
 362+ 938F 20 0B        	jr nz,3F
 363+ 9391 CB 5E        	bit 3,(hl)
 364+ 9393 20 0A        	jr nz,4F
 365+ 9395 C9           	ret
 366+ 9396
 367+ 9396 CB E6        1 set 4,(hl)
 368+ 9398 C9           	ret
 369+ 9399 CB EE        2 set 5,(hl)
 370+ 939B C9           	ret
 371+ 939C CB F6        3 set 6,(hl)
 372+ 939E C9           	ret
 373+ 939F CB FE        4 set 7,(hl)
 374+ 93A1 C9           	ret
 375+ 93A2
 376+ 93A2              ; ---------------------------------------------------------------------
 377+ 93A2              ;
 378+ 93A2              ;	23/01/24
 379+ 93A2              ;
 380+ 93A2              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93A2              ;
 382+ 93A2              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93A2              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93A2              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93A2              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93A2
 387+ 93A2              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93A2
 389+ 93A2 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93A3 3D           	dec a
 391+ 93A4 20 06        	jr nz,1F
 392+ 93A6
 393+ 93A6              ; --- Tipo_1
 394+ 93A6
 395+ 93A6 21 2E 8C     	ld hl,Ctrl_4
 396+ 93A9 CB C6        	set 0,(hl)
 397+ 93AB C9           	ret
 398+ 93AC
 399+ 93AC 3D           1 dec a
 400+ 93AD 20 06        	jr nz,2F
 401+ 93AF
 402+ 93AF              ; --- Tipo_2
 403+ 93AF
 404+ 93AF 21 2E 8C     	ld hl,Ctrl_4
 405+ 93B2 CB CE        	set 1,(hl)
 406+ 93B4 C9           	ret
 407+ 93B5
 408+ 93B5 3D           2 dec a
 409+ 93B6 20 06        	jr nz,3F
 410+ 93B8
 411+ 93B8              ; --- Tipo_3
 412+ 93B8
 413+ 93B8 21 2E 8C     	ld hl,Ctrl_4
 414+ 93BB CB D6        	set 2,(hl)
 415+ 93BD C9           	ret
 416+ 93BE
 417+ 93BE              ; --- Tipo_3
 418+ 93BE
 419+ 93BE 21 2E 8C     3 ld hl,Ctrl_4
 420+ 93C1 CB D6        	set 2,(hl)
 421+ 93C3 C9           	ret
 422+ 93C4
 423+ 93C4              ; ---------------------------------------------------------------------
 424+ 93C4              ;
 425+ 93C4              ;	22/01/24
 426+ 93C4
 427+ 93C4 21 2E 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93C7 CB 46        	bit 0,(hl)
 429+ 93C9 20 0E        	jr nz,1F
 430+ 93CB
 431+ 93CB CB 4E        	bit 1,(hl)
 432+ 93CD 20 10        	jr nz,2F
 433+ 93CF
 434+ 93CF CB 56        	bit 2,(hl)
 435+ 93D1 20 12        	jr nz,3F
 436+ 93D3
 437+ 93D3 CB 5E        	bit 3,(hl)
 438+ 93D5 20 14        	jr nz,4F
 439+ 93D7 18 19        	jr 6F
 440+ 93D9
 441+ 93D9              ; Entidad_de_Tipo_1.
 442+ 93D9
 443+ 93D9 CB 66        1 bit 4,(hl)
 444+ 93DB 28 15        	jr z,6F
 445+ 93DD 18 10        	jr 5F
 446+ 93DF
 447+ 93DF              ; Entidad_de_Tipo_2.
 448+ 93DF
 449+ 93DF CB 6E        2 bit 5,(hl)
 450+ 93E1 28 0F        	jr z,6F
 451+ 93E3 18 0A        	jr 5F
 452+ 93E5
 453+ 93E5              ; Entidad_de_Tipo_3.
 454+ 93E5
 455+ 93E5 CB 76        3 bit 6,(hl)
 456+ 93E7 28 09        	jr z,6F
 457+ 93E9 18 04        	jr 5F
 458+ 93EB
 459+ 93EB              ; Entidad_de_Tipo_4.
 460+ 93EB
 461+ 93EB CB 7E        4 bit 7,(hl)
 462+ 93ED 28 03        	jr z,6F
 463+ 93EF
 464+ 93EF              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 93EF
 466+ 93EF AF           5 xor a
 467+ 93F0 3C           	inc a
 468+ 93F1 C9           	ret
 469+ 93F2
 470+ 93F2              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 93F2
 472+ 93F2 AF           6 xor a
 473+ 93F3 C9           	ret
 474+ 93F4
 475+ 93F4              ;	------------------------------------------------------------------------------------
 476+ 93F4              ;
 477+ 93F4              ;	12/01/24
 478+ 93F4              ;
 479+ 93F4              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 93F4              ;
 481+ 93F4              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 93F4              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 93F4
 484+ 93F4 CB 27        Calcula_salto_en_BC sla a
 485+ 93F6 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 93F8 4F           	ld c,a
 487+ 93F9 06 00        	ld b,0
 488+ 93FB C9           	ret
 489+ 93FC
 490+ 93FC              ; ------------------------------------------------------------------
 491+ 93FC              ;
 492+ 93FC              ;	19/1/24
 493+ 93FC              ;
 494+ 93FC              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 93FC              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 93FC
 497+ 93FC A7           Situa_en_datos_de_definicion and a
 498+ 93FD ED 4A        	adc hl,bc
 499+ 93FF CD 58 90     	call Extrae_address
 500+ 9402 22 06 8C         ld (Datos_de_entidad),hl
 501+ 9405 C9           	ret
 502+ 9406
 503+ 9406              ; ------------------------------------------------------------------
 504+ 9406
 505+ 9406              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9406              ; 	inc de
 507+ 9406              ; 	inc de
 508+ 9406              ; 	ex de,hl
 509+ 9406              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9406              ; 	ret
 511+ 9406
 512+ 9406              ; ----------------------------------------------------------------------------------------------------------
 513+ 9406              ;
 514+ 9406              ;	24/6/24
 515+ 9406              ;
 516+ 9406              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9406              ;	_ de entidad.
 518+ 9406              ;
 519+ 9406              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9406              ;
 521+ 9406              ;
 522+ 9406              ;	MODIFICA: HL,DE y BC
 523+ 9406
 524+ 9406
 525+ 9406              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9406
 527+ 9406 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9409 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 940A 12           	ld (de),a
 530+ 940B 23           	inc hl
 531+ 940C              ;
 532+ 940C 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 940F 01 02 00     	ld bc,2
 534+ 9412 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9414              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9414 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 9417 7E           	ld a,(hl)
 538+ 9418 12           	ld (de),a
 539+ 9419 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 941A
 541+ 941A 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 941D 01 04 00     	ld bc,4
 543+ 9420 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9422
 545+ 9422 11 D8 8B     	ld de,Posicion_inicio
 546+ 9425 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9428 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 942A
 549+ 942A 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 942D 01 02 00     	ld bc,2
 551+ 9430 ED B0        	ldir
 552+ 9432
 553+ 9432 C9           	ret
 554+ 9433
 555+ 9433              ; ----------------------------------------------------------------------------------------------------------
 556+ 9433              ;
 557+ 9433              ;	1/8/24
 558+ 9433              ;
 559+ 9433
 560+ 9433              Parametros_de_bandeja_DRAW_a_caja
 561+ 9433
 562+ 9433 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 9436 01 0C 00     	ld bc,12
 564+ 9439 ED B0        	ldir
 565+ 943B C9           	ret
 566+ 943C
 567+ 943C              ;---------------------------------------------------------------------------------------------------------------
 568+ 943C              ;
 569+ 943C              ;	5/1/24
 570+ 943C              ;
 571+ 943C              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 943C              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 943C              ;
 574+ 943C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 943C              ;
 576+ 943C              ;	(Numero_parcial_de_entidades)="7".
 577+ 943C              ;
 578+ 943C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 943C              ;
 580+ 943C              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 943C              ;
 582+ 943C              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 943C              ;	MODIFICA: A y B.
 584+ 943C              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 943C
 586+ 943C              Inicializa_Numero_parcial_de_entidades
 587+ 943C
 588+ 943C              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 943C
 590+ 943C 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 943F A7           	and a
 592+ 9440
 593+ 9440              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9440              ;	jr z,$
 595+ 9440              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9440
 597+ 9440 20 03        	jr nz,3F
 598+ 9442
 599+ 9442              ; ---------- ---------- ----------
 600+ 9442
 601+ 9442              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9442              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9442
 604+ 9442 CD 38 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9445
 606+ 9445              ; ---------- ---------- ----------
 607+ 9445
 608+ 9445 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9448 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 944A 38 08        	jr c,1F
 611+ 944C
 612+ 944C              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 944C              ; Actualizamos variables.
 614+ 944C
 615+ 944C 3E 07        	ld a,7
 616+ 944E 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9451 47           	ld b,a
 618+ 9452 18 04        	jr 2F
 619+ 9454
 620+ 9454              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9454              ; (Numero_de_entidades)="0".
 622+ 9454
 623+ 9454 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9457 47           	ld b,a
 625+ 9458 C9           2 ret
 626+ 9459
# file closed: Rutinas_de_inicio_y_niveles.asm
2261  9459              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9459              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9459              ;
   3+ 9459              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9459              ;
   5+ 9459              ; *****************************************************************************************************************************************************************************************
   6+ 9459              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9459
   8+ 9459 7C           calcula_tercio ld a,h
   9+ 945A E6 18        	and $18
  10+ 945C CB 2F        	sra a
  11+ 945E CB 2F        	sra a
  12+ 9460 CB 2F        	sra a
  13+ 9462 C9           	ret
  14+ 9463
# file closed: calcula_tercio.asm
2262  9463              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9463              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9463              ;
   3+ 9463              ;
   4+ 9463              ;	CLS.
   5+ 9463              ;
   6+ 9463              ;	Limpia la pantalla y define sus atributos.
   7+ 9463              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9463              ;
   9+ 9463              ;	COLORES: 0 ..... NEGRO
  10+ 9463              ;    		 1 ..... AZUL
  11+ 9463              ; 			 2 ..... ROJO
  12+ 9463              ;			 3 ..... MAGENTA
  13+ 9463              ; 			 4 ..... VERDE
  14+ 9463              ; 			 5 ..... CIAN
  15+ 9463              ;			 6 ..... AMARILLO
  16+ 9463              ; 			 7 ..... BLANCO
  17+ 9463              ;
  18+ 9463              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9463              ;
  20+ 9463              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9463
  22+ 9463
  23+ 9463 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9466 11 01 40     	LD DE,$4001
  25+ 9469 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 946C 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 946E ED B0        	LDIR
  28+ 9470 01 FF 02     	LD BC,767
  29+ 9473 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9474 ED B0        	LDIR
  31+ 9476 C9           	ret
  32+ 9477
# file closed: Cls.asm
2263  9477              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9477              ; ------------------------------------------------------------------------
   2+ 9477              ;
   3+ 9477              ;	30/1/24
   4+ 9477              ;
   5+ 9477              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9477              ;	Fila superior "0", Columna izquierda "0".
   7+ 9477              ;
   8+ 9477              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9477              ;
  10+ 9477              ;	Modifica: A,BC y DE.
  11+ 9477
  12+ 9477 7D           Genera_coordenadas ld a,l
  13+ 9478 E6 1F        	and $1f
  14+ 947A 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 947D
  16+ 947D 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 947E FE 40        	cp $40
  18+ 9480 38 1C        	jr c,4F
  19+ 9482
  20+ 9482 CD 59 94     	call calcula_tercio
  21+ 9485 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9486
  23+ 9486 1E 00        	ld e,0
  24+ 9488 7D           	ld a,l
  25+ 9489 E6 E0        	and $e0
  26+ 948B 28 01        	jr z,1F
  27+ 948D 04           	inc b
  28+ 948E
  29+ 948E 04           1 inc b
  30+ 948F 05           	dec b
  31+ 9490 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9492              ;														; _ , salimos.
  33+ 9492 1C           3 inc e
  34+ 9493 D6 20        	sub 32
  35+ 9495 20 FB        	jr nz,3B
  36+ 9497 10 F5        	djnz 1B
  37+ 9499
  38+ 9499 7B           2 ld a,e
  39+ 949A 32 BD 8B     	ld (Coordenada_y),a
  40+ 949D C9           	ret
  41+ 949E
  42+ 949E AF           4 xor a
  43+ 949F 32 BD 8B     	ld (Coordenada_y),a
  44+ 94A2 C9           	ret
  45+ 94A3
# file closed: Genera_coordenadas.asm
2264  94A3              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94A3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94A3              ;
   3+ 94A3              ;	11/03/24
   4+ 94A3              ;
   5+ 94A3              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94A3              ;   DE contiene Puntero_objeto.
   7+ 94A3              ;   IX contiene el Puntero de impresión.
   8+ 94A3
   9+ 94A3              Genera_datos_de_impresion
  10+ 94A3
  11+ 94A3 ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94A7
  13+ 94A7 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94AA DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94AC
  16+ 94AC 2A 27 8C         ld hl,(Scanlines_album_SP)
  17+ 94AF
  18+ 94AF 3E 05            ld a,5
  19+ 94B1 85               add l
  20+ 94B2 6F               ld l,a
  21+ 94B3
  22+ 94B3 F9               ld sp,hl
  23+ 94B4 22 27 8C         ld (Scanlines_album_SP),hl
  24+ 94B7
  25+ 94B7 21 00 00         ld hl,0
  26+ 94BA
  27+ 94BA DD E5            push ix
  28+ 94BC 3B               dec sp
  29+ 94BD ED 7A            adc hl,sp
  30+ 94BF D5               push de
  31+ 94C0
  32+ 94C0              ; Recuperamos SP.
  33+ 94C0
  34+ 94C0 ED 7B 08 8C      ld sp,(Stack)
  35+ 94C4
  36+ 94C4 E5               push hl
  37+ 94C5 F1               pop af
  38+ 94C6 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94C7
  40+ 94C7              ; Tenemos el encabezado listo.
  41+ 94C7              ; Preparamos registros para generar los scanlines.
  42+ 94C7
  43+ 94C7 DD E5            push ix
  44+ 94C9 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94CA
  46+ 94CA ED 5B 27 8C      ld de,(Scanlines_album_SP)
  47+ 94CE
  48+ 94CE              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94CE              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94CE
  51+ 94CE 7C               ld a,h
  52+ 94CF FE 50            cp $50
  53+ 94D1 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94D3
  55+ 94D3 20 05            jr nz,2F
  56+ 94D5
  57+ 94D5 7D               ld a,l
  58+ 94D6 FE E0            cp $e0
  59+ 94D8 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94DA
  61+ 94DA 7D           2 ld a,l
  62+ 94DB FE C0            cp $c0
  63+ 94DD D2 6F 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94E0
  65+ 94E0              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94E0
  67+ 94E0 CD 6D 99         call NextScan
  68+ 94E3 EB               ex de,hl
  69+ 94E4
  70+ 94E4 73               ld (hl),e
  71+ 94E5 23               inc hl
  72+ 94E6 72               ld (hl),d
  73+ 94E7 23               inc hl
  74+ 94E8
  75+ 94E8 EB               ex de,hl
  76+ 94E9
  77+ 94E9 CD 6D 99         call NextScan
  78+ 94EC EB               ex de,hl
  79+ 94ED
  80+ 94ED 73               ld (hl),e
  81+ 94EE 23               inc hl
  82+ 94EF 72               ld (hl),d
  83+ 94F0 23               inc hl
  84+ 94F1
  85+ 94F1 EB               ex de,hl
  86+ 94F2
  87+ 94F2 CD 6D 99         call NextScan
  88+ 94F5 EB               ex de,hl
  89+ 94F6
  90+ 94F6 73               ld (hl),e
  91+ 94F7 23               inc hl
  92+ 94F8 72               ld (hl),d
  93+ 94F9 23               inc hl
  94+ 94FA
  95+ 94FA EB               ex de,hl
  96+ 94FB
  97+ 94FB CD 6D 99         call NextScan
  98+ 94FE EB               ex de,hl
  99+ 94FF
 100+ 94FF 73               ld (hl),e
 101+ 9500 23               inc hl
 102+ 9501 72               ld (hl),d
 103+ 9502 23               inc hl
 104+ 9503
 105+ 9503 EB               ex de,hl
 106+ 9504
 107+ 9504 CD 6D 99         call NextScan
 108+ 9507 EB               ex de,hl
 109+ 9508
 110+ 9508 73               ld (hl),e
 111+ 9509 23               inc hl
 112+ 950A 72               ld (hl),d
 113+ 950B 23               inc hl
 114+ 950C
 115+ 950C EB               ex de,hl
 116+ 950D
 117+ 950D CD 6D 99         call NextScan
 118+ 9510 EB               ex de,hl
 119+ 9511
 120+ 9511 73               ld (hl),e
 121+ 9512 23               inc hl
 122+ 9513 72               ld (hl),d
 123+ 9514 23               inc hl
 124+ 9515
 125+ 9515 EB               ex de,hl
 126+ 9516
 127+ 9516 CD 6D 99         call NextScan
 128+ 9519 EB               ex de,hl
 129+ 951A
 130+ 951A 73               ld (hl),e
 131+ 951B 23               inc hl
 132+ 951C 72               ld (hl),d
 133+ 951D 23               inc hl
 134+ 951E
 135+ 951E EB               ex de,hl
 136+ 951F
 137+ 951F CD 6D 99         call NextScan
 138+ 9522 EB               ex de,hl
 139+ 9523
 140+ 9523 73               ld (hl),e
 141+ 9524 23               inc hl
 142+ 9525 72               ld (hl),d
 143+ 9526 23               inc hl
 144+ 9527
 145+ 9527 EB               ex de,hl
 146+ 9528
 147+ 9528 CD 6D 99         call NextScan
 148+ 952B EB               ex de,hl
 149+ 952C
 150+ 952C 73               ld (hl),e
 151+ 952D 23               inc hl
 152+ 952E 72               ld (hl),d
 153+ 952F 23               inc hl
 154+ 9530
 155+ 9530 EB               ex de,hl
 156+ 9531
 157+ 9531 CD 6D 99         call NextScan
 158+ 9534 EB               ex de,hl
 159+ 9535
 160+ 9535 73               ld (hl),e
 161+ 9536 23               inc hl
 162+ 9537 72               ld (hl),d
 163+ 9538 23               inc hl
 164+ 9539
 165+ 9539 EB               ex de,hl
 166+ 953A
 167+ 953A CD 6D 99         call NextScan
 168+ 953D EB               ex de,hl
 169+ 953E
 170+ 953E 73               ld (hl),e
 171+ 953F 23               inc hl
 172+ 9540 72               ld (hl),d
 173+ 9541 23               inc hl
 174+ 9542
 175+ 9542 EB               ex de,hl
 176+ 9543
 177+ 9543 CD 6D 99         call NextScan
 178+ 9546 EB               ex de,hl
 179+ 9547
 180+ 9547 73               ld (hl),e
 181+ 9548 23               inc hl
 182+ 9549 72               ld (hl),d
 183+ 954A 23               inc hl
 184+ 954B
 185+ 954B EB               ex de,hl
 186+ 954C
 187+ 954C CD 6D 99         call NextScan
 188+ 954F EB               ex de,hl
 189+ 9550
 190+ 9550 73               ld (hl),e
 191+ 9551 23               inc hl
 192+ 9552 72               ld (hl),d
 193+ 9553 23               inc hl
 194+ 9554
 195+ 9554 EB               ex de,hl
 196+ 9555
 197+ 9555 CD 6D 99         call NextScan
 198+ 9558 EB               ex de,hl
 199+ 9559
 200+ 9559 73               ld (hl),e
 201+ 955A 23               inc hl
 202+ 955B 72               ld (hl),d
 203+ 955C 23               inc hl
 204+ 955D
 205+ 955D EB               ex de,hl
 206+ 955E
 207+ 955E CD 6D 99         call NextScan
 208+ 9561 EB               ex de,hl
 209+ 9562
 210+ 9562 73               ld (hl),e
 211+ 9563 23               inc hl
 212+ 9564 72               ld (hl),d
 213+ 9565 23               inc hl
 214+ 9566
 215+ 9566              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9566
 217+ 9566 22 27 8C         ld (Scanlines_album_SP),hl
 218+ 9569
 219+ 9569              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 9569
 221+ 9569 08               ex af,af
 222+ 956A
 223+ 956A F5               push af
 224+ 956B E1               pop hl
 225+ 956C
 226+ 956C 36 10            ld (hl),16
 227+ 956E
 228+ 956E C9               ret
 229+ 956F
 230+ 956F              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 956F
 232+ 956F              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 956F
 234+ 956F 3E 57            ld a,$57
 235+ 9571 94               sub h
 236+ 9572 47               ld b,a
 237+ 9573
 238+ 9573 3E DF            ld a,$df
 239+ 9575 BD               cp l
 240+ 9576 38 04            jr c,1F
 241+ 9578
 242+ 9578 3E 08            ld a,8
 243+ 957A 80               add b
 244+ 957B 47               ld b,a
 245+ 957C
 246+ 957C              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 957C              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 957C
 249+ 957C 48           1 ld c,b
 250+ 957D 0C               inc c
 251+ 957E
 252+ 957E 04               inc b
 253+ 957F 05               dec b
 254+ 9580 20 02            jr nz,3F
 255+ 9582
 256+ 9582 18 0B            jr 6F
 257+ 9584
 258+ 9584 CD 6D 99     3 call NextScan
 259+ 9587 EB               ex de,hl
 260+ 9588
 261+ 9588 73               ld (hl),e
 262+ 9589 23               inc hl
 263+ 958A 72               ld (hl),d
 264+ 958B 23               inc hl
 265+ 958C
 266+ 958C EB               ex de,hl
 267+ 958D 10 F5            djnz 3B
 268+ 958F
 269+ 958F ED 53 27 8C  6 ld (Scanlines_album_SP),de
 270+ 9593
 271+ 9593 08           5 ex af,af
 272+ 9594 F5               push af
 273+ 9595 E1               pop hl
 274+ 9596
 275+ 9596 71               ld (hl),c
 276+ 9597
 277+ 9597 C9               ret
 278+ 9598
# file closed: Genera_datos_de_impresion.asm
2265  9598              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9598              ; -----------------------------------------------------------------------------
   2+ 9598              ;
   3+ 9598              ;   11/03/24
   4+ 9598              ;
   5+ 9598
   6+ 9598              Pinta_Sprites
   7+ 9598
   8+ 9598              ;    ld hl,(Scanlines_album_SP)
   9+ 9598              ;    call Extrae_address
  10+ 9598
  11+ 9598              ;    inc h
  12+ 9598              ;    dec h
  13+ 9598              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9598
  15+ 9598 ED 73 08 8C      ld (Stack),sp
  16+ 959C
  17+ 959C EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 959D              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 959D 2C               inc l
  20+ 959E 2C               inc l
  21+ 959F
  22+ 959F 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95A0
  24+ 95A0 2C               inc l
  25+ 95A1 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95A2
  27+ 95A2              ;   Seleccionamos rutina de impresión:
  28+ 95A2
  29+ 95A2 3E 10            ld a,16
  30+ 95A4 B8               cp b
  31+ 95A5 C2 A1 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95A8
  33+ 95A8              ;   Rutinas:
  34+ 95A8
  35+ 95A8              Pinta_rapido    ;   1520 t/states.
  36+ 95A8
  37+ 95A8 E1               pop hl
  38+ 95A9
  39+ 95A9 1A               ld a,(de)
  40+ 95AA AE               xor (hl)
  41+ 95AB 77               ld (hl),a
  42+ 95AC 2C               inc l
  43+ 95AD 1C               inc e
  44+ 95AE 1A               ld a,(de)
  45+ 95AF AE               xor (hl)
  46+ 95B0 77               ld (hl),a
  47+ 95B1 2C               inc l
  48+ 95B2 1C               inc e
  49+ 95B3 1A               ld a,(de)
  50+ 95B4 AE               xor (hl)
  51+ 95B5 77               ld (hl),a
  52+ 95B6 13               inc de
  53+ 95B7
  54+ 95B7 E1               pop hl
  55+ 95B8
  56+ 95B8 1A               ld a,(de)
  57+ 95B9 AE               xor (hl)
  58+ 95BA 77               ld (hl),a
  59+ 95BB 2C               inc l
  60+ 95BC 1C               inc e
  61+ 95BD 1A               ld a,(de)
  62+ 95BE AE               xor (hl)
  63+ 95BF 77               ld (hl),a
  64+ 95C0 2C               inc l
  65+ 95C1 1C               inc e
  66+ 95C2 1A               ld a,(de)
  67+ 95C3 AE               xor (hl)
  68+ 95C4 77               ld (hl),a
  69+ 95C5 13               inc de
  70+ 95C6
  71+ 95C6 E1               pop hl
  72+ 95C7
  73+ 95C7 1A               ld a,(de)
  74+ 95C8 AE               xor (hl)
  75+ 95C9 77               ld (hl),a
  76+ 95CA 2C               inc l
  77+ 95CB 1C               inc e
  78+ 95CC 1A               ld a,(de)
  79+ 95CD AE               xor (hl)
  80+ 95CE 77               ld (hl),a
  81+ 95CF 2C               inc l
  82+ 95D0 1C               inc e
  83+ 95D1 1A               ld a,(de)
  84+ 95D2 AE               xor (hl)
  85+ 95D3 77               ld (hl),a
  86+ 95D4 13               inc de
  87+ 95D5
  88+ 95D5 E1               pop hl
  89+ 95D6
  90+ 95D6 1A               ld a,(de)
  91+ 95D7 AE               xor (hl)
  92+ 95D8 77               ld (hl),a
  93+ 95D9 2C               inc l
  94+ 95DA 1C               inc e
  95+ 95DB 1A               ld a,(de)
  96+ 95DC AE               xor (hl)
  97+ 95DD 77               ld (hl),a
  98+ 95DE 2C               inc l
  99+ 95DF 1C               inc e
 100+ 95E0 1A               ld a,(de)
 101+ 95E1 AE               xor (hl)
 102+ 95E2 77               ld (hl),a
 103+ 95E3 13               inc de
 104+ 95E4
 105+ 95E4 E1               pop hl
 106+ 95E5
 107+ 95E5 1A               ld a,(de)
 108+ 95E6 AE               xor (hl)
 109+ 95E7 77               ld (hl),a
 110+ 95E8 2C               inc l
 111+ 95E9 1C               inc e
 112+ 95EA 1A               ld a,(de)
 113+ 95EB AE               xor (hl)
 114+ 95EC 77               ld (hl),a
 115+ 95ED 2C               inc l
 116+ 95EE 1C               inc e
 117+ 95EF 1A               ld a,(de)
 118+ 95F0 AE               xor (hl)
 119+ 95F1 77               ld (hl),a
 120+ 95F2 13               inc de
 121+ 95F3
 122+ 95F3 E1               pop hl
 123+ 95F4
 124+ 95F4 1A               ld a,(de)
 125+ 95F5 AE               xor (hl)
 126+ 95F6 77               ld (hl),a
 127+ 95F7 2C               inc l
 128+ 95F8 1C               inc e
 129+ 95F9 1A               ld a,(de)
 130+ 95FA AE               xor (hl)
 131+ 95FB 77               ld (hl),a
 132+ 95FC 2C               inc l
 133+ 95FD 1C               inc e
 134+ 95FE 1A               ld a,(de)
 135+ 95FF AE               xor (hl)
 136+ 9600 77               ld (hl),a
 137+ 9601 13               inc de
 138+ 9602
 139+ 9602 E1               pop hl
 140+ 9603
 141+ 9603 1A               ld a,(de)
 142+ 9604 AE               xor (hl)
 143+ 9605 77               ld (hl),a
 144+ 9606 2C               inc l
 145+ 9607 1C               inc e
 146+ 9608 1A               ld a,(de)
 147+ 9609 AE               xor (hl)
 148+ 960A 77               ld (hl),a
 149+ 960B 2C               inc l
 150+ 960C 1C               inc e
 151+ 960D 1A               ld a,(de)
 152+ 960E AE               xor (hl)
 153+ 960F 77               ld (hl),a
 154+ 9610 13               inc de
 155+ 9611
 156+ 9611 E1               pop hl
 157+ 9612
 158+ 9612 1A               ld a,(de)
 159+ 9613 AE               xor (hl)
 160+ 9614 77               ld (hl),a
 161+ 9615 2C               inc l
 162+ 9616 1C               inc e
 163+ 9617 1A               ld a,(de)
 164+ 9618 AE               xor (hl)
 165+ 9619 77               ld (hl),a
 166+ 961A 2C               inc l
 167+ 961B 1C               inc e
 168+ 961C 1A               ld a,(de)
 169+ 961D AE               xor (hl)
 170+ 961E 77               ld (hl),a
 171+ 961F 13               inc de
 172+ 9620
 173+ 9620 E1               pop hl
 174+ 9621
 175+ 9621 1A               ld a,(de)
 176+ 9622 AE               xor (hl)
 177+ 9623 77               ld (hl),a
 178+ 9624 2C               inc l
 179+ 9625 1C               inc e
 180+ 9626 1A               ld a,(de)
 181+ 9627 AE               xor (hl)
 182+ 9628 77               ld (hl),a
 183+ 9629 2C               inc l
 184+ 962A 1C               inc e
 185+ 962B 1A               ld a,(de)
 186+ 962C AE               xor (hl)
 187+ 962D 77               ld (hl),a
 188+ 962E 13               inc de
 189+ 962F
 190+ 962F E1               pop hl
 191+ 9630
 192+ 9630 1A               ld a,(de)
 193+ 9631 AE               xor (hl)
 194+ 9632 77               ld (hl),a
 195+ 9633 2C               inc l
 196+ 9634 1C               inc e
 197+ 9635 1A               ld a,(de)
 198+ 9636 AE               xor (hl)
 199+ 9637 77               ld (hl),a
 200+ 9638 2C               inc l
 201+ 9639 1C               inc e
 202+ 963A 1A               ld a,(de)
 203+ 963B AE               xor (hl)
 204+ 963C 77               ld (hl),a
 205+ 963D 13               inc de
 206+ 963E
 207+ 963E E1               pop hl
 208+ 963F
 209+ 963F 1A               ld a,(de)
 210+ 9640 AE               xor (hl)
 211+ 9641 77               ld (hl),a
 212+ 9642 2C               inc l
 213+ 9643 1C               inc e
 214+ 9644 1A               ld a,(de)
 215+ 9645 AE               xor (hl)
 216+ 9646 77               ld (hl),a
 217+ 9647 2C               inc l
 218+ 9648 1C               inc e
 219+ 9649 1A               ld a,(de)
 220+ 964A AE               xor (hl)
 221+ 964B 77               ld (hl),a
 222+ 964C 13               inc de
 223+ 964D
 224+ 964D E1               pop hl
 225+ 964E
 226+ 964E 1A               ld a,(de)
 227+ 964F AE               xor (hl)
 228+ 9650 77               ld (hl),a
 229+ 9651 2C               inc l
 230+ 9652 1C               inc e
 231+ 9653 1A               ld a,(de)
 232+ 9654 AE               xor (hl)
 233+ 9655 77               ld (hl),a
 234+ 9656 2C               inc l
 235+ 9657 1C               inc e
 236+ 9658 1A               ld a,(de)
 237+ 9659 AE               xor (hl)
 238+ 965A 77               ld (hl),a
 239+ 965B 13               inc de
 240+ 965C
 241+ 965C E1               pop hl
 242+ 965D
 243+ 965D 1A               ld a,(de)
 244+ 965E AE               xor (hl)
 245+ 965F 77               ld (hl),a
 246+ 9660 2C               inc l
 247+ 9661 1C               inc e
 248+ 9662 1A               ld a,(de)
 249+ 9663 AE               xor (hl)
 250+ 9664 77               ld (hl),a
 251+ 9665 2C               inc l
 252+ 9666 1C               inc e
 253+ 9667 1A               ld a,(de)
 254+ 9668 AE               xor (hl)
 255+ 9669 77               ld (hl),a
 256+ 966A 13               inc de
 257+ 966B
 258+ 966B E1               pop hl
 259+ 966C
 260+ 966C 1A               ld a,(de)
 261+ 966D AE               xor (hl)
 262+ 966E 77               ld (hl),a
 263+ 966F 2C               inc l
 264+ 9670 1C               inc e
 265+ 9671 1A               ld a,(de)
 266+ 9672 AE               xor (hl)
 267+ 9673 77               ld (hl),a
 268+ 9674 2C               inc l
 269+ 9675 1C               inc e
 270+ 9676 1A               ld a,(de)
 271+ 9677 AE               xor (hl)
 272+ 9678 77               ld (hl),a
 273+ 9679 13               inc de
 274+ 967A
 275+ 967A E1               pop hl
 276+ 967B
 277+ 967B 1A               ld a,(de)
 278+ 967C AE               xor (hl)
 279+ 967D 77               ld (hl),a
 280+ 967E 2C               inc l
 281+ 967F 1C               inc e
 282+ 9680 1A               ld a,(de)
 283+ 9681 AE               xor (hl)
 284+ 9682 77               ld (hl),a
 285+ 9683 2C               inc l
 286+ 9684 1C               inc e
 287+ 9685 1A               ld a,(de)
 288+ 9686 AE               xor (hl)
 289+ 9687 77               ld (hl),a
 290+ 9688 13               inc de
 291+ 9689
 292+ 9689 E1               pop hl
 293+ 968A
 294+ 968A 1A               ld a,(de)
 295+ 968B AE               xor (hl)
 296+ 968C 77               ld (hl),a
 297+ 968D 2C               inc l
 298+ 968E 1C               inc e
 299+ 968F 1A               ld a,(de)
 300+ 9690 AE               xor (hl)
 301+ 9691 77               ld (hl),a
 302+ 9692 2C               inc l
 303+ 9693 1C               inc e
 304+ 9694 1A               ld a,(de)
 305+ 9695 AE               xor (hl)
 306+ 9696 77               ld (hl),a
 307+ 9697 13               inc de
 308+ 9698
 309+ 9698 ED 73 27 8C      ld (Scanlines_album_SP),sp
 310+ 969C ED 7B 08 8C      ld sp,(Stack)
 311+ 96A0 C9               ret
 312+ 96A1
 313+ 96A1              Pinta_lento
 314+ 96A1
 315+ 96A1 E1           1 pop hl
 316+ 96A2
 317+ 96A2 1A               ld a,(de)
 318+ 96A3 AE               xor (hl)
 319+ 96A4 77               ld (hl),a
 320+ 96A5 2C               inc l
 321+ 96A6 1C               inc e
 322+ 96A7 1A               ld a,(de)
 323+ 96A8 AE               xor (hl)
 324+ 96A9 77               ld (hl),a
 325+ 96AA 2C               inc l
 326+ 96AB 1C               inc e
 327+ 96AC 1A               ld a,(de)
 328+ 96AD AE               xor (hl)
 329+ 96AE 77               ld (hl),a
 330+ 96AF 13               inc de
 331+ 96B0
 332+ 96B0 10 EF            djnz 1B
 333+ 96B2
 334+ 96B2 ED 73 27 8C      ld (Scanlines_album_SP),sp
 335+ 96B6 ED 7B 08 8C      ld sp,(Stack)
 336+ 96BA C9               ret
# file closed: Pinta_Sprites.asm
2266  96BB              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96BB              ; ******************************************************************************************************************************************************************************************
   2+ 96BB              ;
   3+ 96BB              ; 26/06/23
   4+ 96BB              ;
   5+ 96BB              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96BB
   7+ 96BB              Draw
   8+ 96BB
   9+ 96BB CD 61 99     	call Prepara_draw
  10+ 96BE 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96BF A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96C0 28 05        	jr z,2F
  13+ 96C2
  14+ 96C2 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96C5 18 0C        	jr 1F
  16+ 96C7
  17+ 96C7 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96CA 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96CD CD 59 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96D0              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96D0
  22+ 96D0 CD 00 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96D3
  24+ 96D3 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96D6 CB 6F        	bit 5,a
  26+ 96D8 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96DA
  28+ 96DA CD EF 96     	call Comprueba_limite_horizontal
  29+ 96DD CD 7F 97     	call Comprueba_limite_vertical
  30+ 96E0
  31+ 96E0              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96E0              ; -----------------------
  33+ 96E0              ; -----------------------
  34+ 96E0              ; -----------------------
  35+ 96E0
  36+ 96E0 CD D5 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96E3 CD 0C 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96E6
  39+ 96E6 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96E9 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96EB 32 C8 8B     	ld (Ctrl_0),a
  42+ 96EE
  43+ 96EE C9           	ret
  44+ 96EF
  45+ 96EF              ; *******************************************************************************************************************************************************************************************
  46+ 96EF              ;	21/01/23
  47+ 96EF              ;
  48+ 96EF              ; 	Comprueba_limite_horizontal.
  49+ 96EF              ;
  50+ 96EF              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96EF              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96EF              ;
  53+ 96EF              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96EF              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96EF              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96EF              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96EF
  58+ 96EF
  59+ 96EF
  60+ 96EF 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96F2 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96F4 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96F6 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 96F8 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 96FB 18 09            jr 6F
  66+ 96FD CB 5F        1 bit 3,a
  67+ 96FF 28 0A            jr z,2F
  68+ 9701 E6 F7            and $f7
  69+ 9703 32 C8 8B         ld (Ctrl_0),a
  70+ 9706 CD 59 98     6 call Inicializacion
  71+ 9709 18 5B            jr 5F
  72+ 970B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 970C
  74+ 970C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 970C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 970C
  77+ 970C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 970D 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9710 CD 59 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9713 67           	ld h,a
  81+ 9714 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9715 CD 59 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9718 67           	ld h,a
  84+ 9719 A7           	and a
  85+ 971A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 971C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 971D 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 9720 FE 02        	cp 2
  89+ 9722 38 1E        	jr c,3F
  90+ 9724 28 1C        	jr z,3F
  91+ 9726 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9727 28 23            jr z,7F
  93+ 9729 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 972B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 972D E1           	pop hl
  96+ 972E
  97+ 972E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 972E              ; _para indicar con E="2" en caso necesario.
  99+ 972E
 100+ 972E E5               push hl
 101+ 972F C5               push bc
 102+ 9730 CD 59 94     	call calcula_tercio
 103+ 9733 FE 01        	cp 1
 104+ 9735 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9737 CD 67 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 973A 28 26            jr z,9F
 107+ 973C 38 24            jr c,9F
 108+ 973E 1E 00        11 ld e,0
 109+ 9740 18 22            jr 8F
 110+ 9742 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9743 28 07        	jr z, 7F
 112+ 9745 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9747 1E 00         	ld e,0
 114+ 9749 E1           	pop hl
 115+ 974A 18 04        	jr 4F
 116+ 974C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 974E 18 15            jr 10F
 118+ 9750
 119+ 9750              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9750              ; _para indicar con E="2" en caso necesario.
 121+ 9750
 122+ 9750 E5           4 push hl
 123+ 9751 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9752 CD 59 94     	call calcula_tercio
 125+ 9755 FE 01        	cp 1
 126+ 9757 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9759 CD 67 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 975C 28 04            jr z,9F
 129+ 975E 30 02            jr nc,9F
 130+ 9760 18 02        	jr 8F
 131+ 9762 1E 02        9 ld e,2
 132+ 9764 C1           8 pop bc
 133+ 9765 E1           10 pop hl
 134+ 9766 C9           5 ret
 135+ 9767
 136+ 9767              ; --------------------
 137+ 9767              ;
 138+ 9767              ; 25/08/22
 139+ 9767
 140+ 9767 CD 59 94     Comprueba_centro call calcula_tercio
 141+ 976A 67               ld h,a
 142+ 976B 08           	ex af,af
 143+ 976C FE 02        	cp 2
 144+ 976E 38 07        	jr c,1F
 145+ 9770 28 05        	jr z,1F
 146+ 9772 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9775 18 03        	jr 2F
 148+ 9777 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 977A 08           2 ex af,af
 150+ 977B A7               and a
 151+ 977C ED 42            sbc hl,bc
 152+ 977E C9               ret
 153+ 977F
 154+ 977F              ; *********************************************************************************************************************************************************************************************
 155+ 977F              ;
 156+ 977F              ;   16/8/22
 157+ 977F              ;
 158+ 977F              ;	Comprueba_limite_vertical
 159+ 977F              ;
 160+ 977F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 977F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 977F              ;
 163+ 977F
 164+ 977F 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9782 7D           	ld a,l
 166+ 9783 E6 1F        	and $1F
 167+ 9785 57           	ld d,a
 168+ 9786 3A DE 8B     	ld a,(Limite_vertical)
 169+ 9789 BA           	cp d 											; Límite - Posición.
 170+ 978A 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 978B 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 978E CB 47        	bit 0,a
 173+ 9790 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9792
 175+ 9792              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9792
 177+ 9792 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9793 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9795
 180+ 9795              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9795              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9795
 183+ 9795 3A BC 8B         ld a,(Coordenada_X)
 184+ 9798 16 0F            ld d,Centro_izquierda
 185+ 979A A7               and a
 186+ 979B 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 979C 28 1E            jr z,3F
 188+ 979E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97A0              ;                                                    ; _salimos sin modificar nada.
 190+ 97A0 18 0E            jr 2F
 191+ 97A2 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97A3 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97A5
 194+ 97A5              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97A5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97A5
 197+ 97A5 3A BC 8B         ld a,(Coordenada_X)
 198+ 97A8 16 10            ld d,Centro_derecha
 199+ 97AA A7               and a
 200+ 97AB 92               sub d
 201+ 97AC 28 0E            jr z,3F
 202+ 97AE 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97B0              ;                                                    ; _salimos sin modificar nada.
 204+ 97B0 CB 43        2 bit 0,e
 205+ 97B2 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97B4 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97B5 CD 49 98         call Modificaccionne
 208+ 97B8 C1           	pop bc
 209+ 97B9 CD 59 98         call Inicializacion
 210+ 97BC C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97BD
 212+ 97BD              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97BD
 214+ 97BD C5           4 push bc
 215+ 97BE 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97C1 0A           	ld a,(bc)
 217+ 97C2 3D           	dec a
 218+ 97C3 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97C4 7D           	ld a,l
 220+ 97C5 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97C6 CB 47        	bit 0,a
 222+ 97C8 28 03        	jr z,5F
 223+ 97CA 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97CB 18 2E        	jr 7F
 225+ 97CD
 226+ 97CD              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97CD
 228+ 97CD 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97CE F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97CF 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97D2 CB 4F        	bit 1,a
 232+ 97D4 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97D6 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97D7
 235+ 97D7              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97D7
 237+ 97D7 1C               inc e
 238+ 97D8 1D               dec e
 239+ 97D9 20 07            jr nz,12F
 240+ 97DB 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97DC 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97DD 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97E0 18 44        13 jr 9F
 244+ 97E2 CB 43        12 bit 0,e
 245+ 97E4 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97E6              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97E6 C1           	pop bc
 248+ 97E7 18 D3        	jr 3B
 249+ 97E9 80           14 add b
 250+ 97EA 6F               ld l,a
 251+ 97EB 22 CB 8B     	ld (Posicion_actual),hl
 252+ 97EE CD 49 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97F1 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97F3 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97F5 32 C8 8B         ld (Ctrl_0),a
 256+ 97F8 F1           	pop af
 257+ 97F9 18 2B        	jr 9F
 258+ 97FB
 259+ 97FB              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 97FB
 261+ 97FB F5           7 push af
 262+ 97FC 3A C8 8B     	ld a,(Ctrl_0)
 263+ 97FF CB 47        	bit 0,a
 264+ 9801 20 1D        	jr nz,8F
 265+ 9803 F1           	pop af
 266+ 9804
 267+ 9804              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9804
 269+ 9804 1C           	inc e
 270+ 9805 1D               dec e
 271+ 9806 20 07            jr nz,10F
 272+ 9808 90           	sub b
 273+ 9809 6F               ld l,a
 274+ 980A 22 CB 8B     	ld (Posicion_actual),hl
 275+ 980D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 980F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 980F CB 43        10 bit 0,e
 278+ 9811 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9813              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9813 C1           	pop bc
 281+ 9814 18 A6        	jr 3B
 282+ 9816 90           16 sub b
 283+ 9817 6F               ld l,a
 284+ 9818 22 CB 8B     	ld (Posicion_actual),hl
 285+ 981B CD 49 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 981E 18 06            jr 9F
 287+ 9820 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9822 32 C8 8B         ld (Ctrl_0),a
 289+ 9825 F1           	pop af
 290+ 9826 C1           9 pop bc
 291+ 9827 1E 00        	ld e,0
 292+ 9829 CD 59 98         call Inicializacion
 293+ 982C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 982D 08           	ex af,af
 295+ 982E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 982F 18 8B            jr 3B
 297+ 9831
 298+ 9831              ; --------------------
 299+ 9831
 300+ 9831 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9833 CD 7C 99     1 call PreviousScan
 302+ 9836 10 FB            djnz 1B
 303+ 9838 22 CB 8B     	ld (Posicion_actual),hl
 304+ 983B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 983C C9           	ret
 306+ 983D
 307+ 983D              ; --------------------
 308+ 983D
 309+ 983D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 983F CD 6D 99     1 call NextScan
 311+ 9842 10 FB            djnz 1B
 312+ 9844 22 CB 8B     	ld (Posicion_actual),hl
 313+ 9847 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9848 C9           	ret
 315+ 9849
 316+ 9849              ; --------------------
 317+ 9849              ;
 318+ 9849              ;	22/01/23
 319+ 9849              ;
 320+ 9849              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9849              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9849              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9849
 324+ 9849
 325+ 9849              Modificaccionne
 326+ 9849
 327+ 9849 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 984C FE 02        	cp 2
 329+ 984E CC 31 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9851 DC 31 98         call c,Modifica_Pos_actual
 331+ 9854 C8           	ret z
 332+ 9855 CD 3D 98         call Modifica_Pos_actual2
 333+ 9858 C9               ret
 334+ 9859
 335+ 9859              ; *************************************************************************************************************************************************************************************************
 336+ 9859              ;
 337+ 9859              ;	13/8/22
 338+ 9859              ;
 339+ 9859              ;	Inicializacion
 340+ 9859              ;
 341+ 9859              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9859              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9859              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9859              ;
 345+ 9859              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9859              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9859              ;	_ desaparece/aparece.
 348+ 9859
 349+ 9859              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9859              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9859              ;
 352+ 9859              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9859              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9859              ; 		   [E] ="0"
 355+ 9859
 356+ 9859              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9859
 358+ 9859 CD 59 94     Inicializacion call calcula_tercio
 359+ 985C 28 36        	jr z,primit
 360+ 985E E6 02        	and 2
 361+ 9860 20 07        	jr nz,segmit
 362+ 9862 7D           	ld a,l
 363+ 9863 FE 7F        	cp $7f
 364+ 9865 38 2D        	jr c,primit
 365+ 9867 28 2B        	jr z,primit
 366+ 9869 CD CF 98     segmit call column
 367+ 986C 38 13        	jr c,tercuad
 368+ 986E 3E 04        cuarcuad ld a,4
 369+ 9870 32 DA 8B     	ld (Cuad_objeto),a
 370+ 9873 21 20 48     	ld hl,$4820
 371+ 9876 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 9879 21 DE 8B     	ld hl,Limite_vertical
 373+ 987C 36 0D        	ld (hl),$0d
 374+ 987E 08           	ex af,af
 375+ 987F 18 3C        	jr 1F
 376+ 9881              tercuad
 377+ 9881 3E 03        	ld a,3
 378+ 9883 32 DA 8B     	ld (Cuad_objeto),a
 379+ 9886 21 20 48     	ld hl,$4820
 380+ 9889 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 988C 21 DE 8B     	ld hl,Limite_vertical
 382+ 988F 36 12        	ld (hl),$12
 383+ 9891 08           	ex af,af
 384+ 9892 18 29        	jr 1F
 385+ 9894 CD CF 98     primit call column
 386+ 9897 38 13        	jr c, primcuad
 387+ 9899              segcuad
 388+ 9899 3E 02        	ld a,2
 389+ 989B 32 DA 8B     	ld (Cuad_objeto),a
 390+ 989E 21 C0 4F     	ld hl,$4fc0
 391+ 98A1 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 98A4 21 DE 8B     	ld hl,Limite_vertical
 393+ 98A7 36 0D        	ld (hl),$0d
 394+ 98A9 08           	ex af,af
 395+ 98AA 18 11        	jr 1F
 396+ 98AC              primcuad
 397+ 98AC 3E 01        	ld a,1
 398+ 98AE 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98B1 21 C0 4F     	ld hl,$4fc0
 400+ 98B4 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98B7 21 DE 8B     	ld hl,Limite_vertical
 402+ 98BA 36 12        	ld (hl),$12
 403+ 98BC 08           	ex af,af
 404+ 98BD
 405+ 98BD C5           1 push bc
 406+ 98BE E5           	push hl
 407+ 98BF D5           	push de
 408+ 98C0
 409+ 98C0 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98C3 CD 77 94     	call Genera_coordenadas
 411+ 98C6
 412+ 98C6 D1           	pop de
 413+ 98C7 E1           	pop hl
 414+ 98C8 C1           	pop bc
 415+ 98C9
 416+ 98C9 21 C8 8B     	ld hl,Ctrl_0
 417+ 98CC CB EE        	set 5,(hl)
 418+ 98CE C9           	ret
 419+ 98CF
 420+ 98CF              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98CF
 422+ 98CF              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98CF              ;
 424+ 98CF              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98CF
 426+ 98CF 7D           column ld a,l
 427+ 98D0 E6 1F        	and $1f
 428+ 98D2 FE 10         	cp $10
 429+ 98D4 C9            	ret
 430+ 98D5
 431+ 98D5              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98D5              ;
 433+ 98D5              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98D5              ;
 435+ 98D5              ; 14/12/22
 436+ 98D5              ;
 437+ 98D5              ;	Modifica: A y BC.
 438+ 98D5
 439+ 98D5 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98D8 E6 01        	and 1
 441+ 98DA 28 17        	jr z,1F
 442+ 98DC
 443+ 98DC              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98DC
 445+ 98DC 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98DF 47           	ld b,a
 447+ 98E0 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98E1 79           	ld a,c
 449+ 98E2 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98E3 38 08        	jr c,2F
 451+ 98E5 47           	ld b,a
 452+ 98E6 79           	ld a,c
 453+ 98E7 90           	sub b
 454+ 98E8 32 DB 8B     	ld (Columnas),a
 455+ 98EB 18 1B        	jr 4F
 456+ 98ED 79           2 ld a,c
 457+ 98EE 32 DB 8B     	ld (Columnas),a
 458+ 98F1 18 15        	jr 4F
 459+ 98F3
 460+ 98F3              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98F3
 462+ 98F3 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 98F6 81           	add c
 464+ 98F7 3D           	dec a
 465+ 98F8 D6 1F        	sub $1f
 466+ 98FA 38 08        	jr c,3F
 467+ 98FC 47           	ld b,a
 468+ 98FD 79           	ld a,c
 469+ 98FE 90           	sub b
 470+ 98FF 32 DB 8B     	ld (Columnas),a
 471+ 9902 18 04        	jr 4F
 472+ 9904 79           3 ld a,c
 473+ 9905 32 DB 8B     	ld (Columnas),a
 474+ 9908 D9           4 exx
 475+ 9909 4F           	ld c,a
 476+ 990A D9           	exx
 477+ 990B C9            ret
 478+ 990C
 479+ 990C              ; --------------------------------------------------------------------------------------------------------------------
 480+ 990C              ;
 481+ 990C              ;   19/7/23
 482+ 990C              ;
 483+ 990C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 990C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 990C              ;
 486+ 990C              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 990C              ;			HL e IY Contienen (Puntero_objeto).
 488+ 990C              ;
 489+ 990C              ;	DESTRUYE: HL,B Y A.
 490+ 990C
 491+ 990C 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 990F FE 02        	cp 2
 493+ 9911 38 18        	jr c,1F
 494+ 9913 28 16        	jr z,1F
 495+ 9915 E6 01        	and 1
 496+ 9917 28 0D        	jr z,3F
 497+ 9919
 498+ 9919              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9919
 500+ 9919 CD 55 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 991C
 502+ 991C 7D           9 ld a,l
 503+ 991D E6 1F        	and $1f
 504+ 991F 28 2A        	jr z,7F
 505+ 9921 2B           	dec hl
 506+ 9922 10 F8        	djnz 9B
 507+ 9924 18 25        	jr 7F
 508+ 9926
 509+ 9926              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9926
 511+ 9926 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 9929 18 20        	jr 7F
 513+ 992B
 514+ 992B 28 14        1 jr z,2F
 515+ 992D
 516+ 992D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 992D
 518+ 992D CD 55 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9930
 520+ 9930 7D           4 ld a,l
 521+ 9931 E6 1F        	and $1f
 522+ 9933 28 03        	jr z,6F
 523+ 9935 2B           	dec hl
 524+ 9936 10 F8        	djnz 4B
 525+ 9938 06 0F        6 ld b,15
 526+ 993A CD 7C 99     5 call PreviousScan
 527+ 993D 10 FB        	djnz 5B
 528+ 993F 18 0A        	jr 7F
 529+ 9941
 530+ 9941              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9941
 532+ 9941 CD 55 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9944 06 0F        	ld b,15
 534+ 9946 CD 7C 99     8 call PreviousScan
 535+ 9949 10 FB        	djnz 8B
 536+ 994B
 537+ 994B E5           7 push hl
 538+ 994C DD E1        	pop ix
 539+ 994E
 540+ 994E 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 9951 E5           	push hl
 542+ 9952 FD E1        	pop iy
 543+ 9954
 544+ 9954 C9           	ret
 545+ 9955
 546+ 9955              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9955              ;
 548+ 9955              ;	2/1/23
 549+ 9955              ;
 550+ 9955              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9955              ;
 552+ 9955              ;	Tras esta rutina tenemos:
 553+ 9955              ;
 554+ 9955              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9955              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9955              ;
 557+ 9955              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9955
 559+ 9955 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9958 3A DB 8B     	ld a,(Columnas)
 561+ 995B 3D           	dec a
 562+ 995C 20 01        	jr nz,1F
 563+ 995E 3C           	inc a
 564+ 995F 47           1 ld b,a
 565+ 9960 C9           	ret
 566+ 9961
 567+ 9961              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9961              ;
 569+ 9961              ;	Prepara_draw
 570+ 9961              ;
 571+ 9961              ;	Es una rutina de carga.
 572+ 9961              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9961              ;
 574+ 9961              ;	FUNCIONAMIENTO:
 575+ 9961              ;
 576+ 9961              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9961              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9961              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9961              ;
 580+ 9961              ;	DESTRUYE:
 581+ 9961              ;
 582+ 9961              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9961
 584+ 9961 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9964 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9965 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9966 4E           	ld c,(hl)
 588+ 9967 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 996A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 996C C9           	ret
 591+ 996D
 592+ 996D              ;----------------------------------------------------------------------------------------------------------------
 593+ 996D              ;
 594+ 996D              ;	5/08/22
 595+ 996D              ;
 596+ 996D              ;   NextScan.
 597+ 996D              ;
 598+ 996D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 996D              ;
 600+ 996D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 996D              ;
 602+ 996D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 996D              ;
 604+ 996D              ;       DESTRUIDOS: AF y HL !!!
 605+ 996D              ;
 606+ 996D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 996D              ;
 608+ 996D
 609+ 996D 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 996E 7C               ld a,h
 611+ 996F E6 07            and 7
 612+ 9971 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9972
 614+ 9972 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9973 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9975 6F               ld l,a
 617+ 9976 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9977
 619+ 9977 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9978 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 997A 67               ld h,a
 622+ 997B C9               ret
 623+ 997C
 624+ 997C              ;----------------------------------------------------------------------------------------------------------------
 625+ 997C              ;
 626+ 997C              ;	5/08/22
 627+ 997C              ;
 628+ 997C              ;   PreviousScan.
 629+ 997C              ;
 630+ 997C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 997C              ;
 632+ 997C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 997C              ;
 634+ 997C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 997C              ;
 636+ 997C              ;       DESTRUIDOS: AF y HL !!!
 637+ 997C              ;
 638+ 997C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 997C              ;
 640+ 997C
 641+ 997C 7C           PreviousScan ld a,h
 642+ 997D 25               dec h               ; Dec H.
 643+ 997E E6 07            and 7
 644+ 9980 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9981
 646+ 9981 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9982 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9984 6F               ld l,a
 649+ 9985 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9986
 651+ 9986 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9987 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9989 67               ld h,a
 654+ 998A C9               ret
 655+ 998B
 656+ 998B
 657+ 998B
 658+ 998B
 659+ 998B
 660+ 998B
 661+ 998B
 662+ 998B
 663+ 998B
 664+ 998B
 665+ 998B
 666+ 998B
# file closed: Draw_XOR.asm
2267  998B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 998B
   2+ 998B              ; ******************************************************************************************************************************************************************************************
   3+ 998B              ;
   4+ 998B              ;   20/05/23
   5+ 998B              ;
   6+ 998B              ;	Recompone_posicion_inicio
   7+ 998B              ;
   8+ 998B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 998B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 998B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 998B              ;	_ a una u otra rutina.
  12+ 998B
  13+ 998B              Recompone_posicion_inicio
  14+ 998B
  15+ 998B 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 998E 7D           	ld a,l
  17+ 998F E6 1F        	and $1f
  18+ 9991 28 16        	jr z,1F
  19+ 9993
  20+ 9993 FE 1F        	cp $1f
  21+ 9995 28 0D        	jr z,3F
  22+ 9997
  23+ 9997 21 C7 8B     	ld hl,Ctrl_2
  24+ 999A CB C6        	set 0,(hl)
  25+ 999C 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 999F 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 99A2 18 08        	jr 2F
  28+ 99A4
  29+ 99A4 CD 52 9B     3 call Mov_left
  30+ 99A7 18 03        	jr 2F
  31+ 99A9
  32+ 99A9 CD 2F 9A     1 call Mov_right
  33+ 99AC 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99AF 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99B2 C9           	ret
  36+ 99B3
  37+ 99B3              ; ******************************************************************************************************************************************************************************************
  38+ 99B3              ;
  39+ 99B3              ;   27/05/23
  40+ 99B3              ;
  41+ 99B3              ;	Mov_down
  42+ 99B3              ;
  43+ 99B3              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99B3              ;
  45+ 99B3              ;
  46+ 99B3              Mov_down
  47+ 99B3
  48+ 99B3 CD 1D 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99B6              ;																	; _ repone (Puntero_objeto).
  50+ 99B6 21 C8 8B     	ld hl,Ctrl_0
  51+ 99B9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99BB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99BB              ; 																	; _ en el caso de que no lo haya.
  54+ 99BB 3A E3 8B     	ld a,(Vel_down)
  55+ 99BE 47           	ld b,a
  56+ 99BF 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99C2 CD 59 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99C5 E6 02        	and 2
  59+ 99C7 28 17        	jr z,1F
  60+ 99C9
  61+ 99C9              ; Nos encontramos en el último tercio de pantalla.
  62+ 99C9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99C9
  64+ 99C9 7C           	ld a,h
  65+ 99CA FE 57        	cp $57
  66+ 99CC 20 12        	jr nz,1F
  67+ 99CE
  68+ 99CE 7D           	ld a,l
  69+ 99CF C6 20        	add $20
  70+ 99D1 30 0D        	jr nc,1F
  71+ 99D3
  72+ 99D3              ; ------------------------------
  73+ 99D3              ;
  74+ 99D3              ;	12/01/24
  75+ 99D3
  76+ 99D3              ;	call Reaparece_arriba
  77+ 99D3 CD DF 9C     	call Reinicio
  78+ 99D6
  79+ 99D6              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99D6
  81+ 99D6 3A 2D 8C     	ld a,(Ctrl_3)
  82+ 99D9 CB CF        	set 1,a
  83+ 99DB 32 2D 8C     	ld (Ctrl_3),a
  84+ 99DE
  85+ 99DE 18 08        	jr 3F
  86+ 99E0              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99E0              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99E0              ; ------------------------------
  89+ 99E0
  90+ 99E0 CD 6D 99     1 call NextScan
  91+ 99E3 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99E6 10 DA            djnz 2B
  93+ 99E8 CD 77 94     3 call Genera_coordenadas
  94+ 99EB C9           	ret
  95+ 99EC
  96+ 99EC              ; ******************************************************************************************************************************************************************************************
  97+ 99EC              ;
  98+ 99EC              ;   27/05/23
  99+ 99EC              ;
 100+ 99EC              ;	Mov_up
 101+ 99EC              ;
 102+ 99EC              ; 	Mueve el Sprite hacia arriba.
 103+ 99EC              ;
 104+ 99EC              ;
 105+ 99EC              Mov_up
 106+ 99EC
 107+ 99EC CD 1D 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99EF              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99EF 21 C8 8B     	ld hl,Ctrl_0
 110+ 99F2 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99F4              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99F4              ; 																		; _ en el caso de que no lo haya.
 113+ 99F4 3A E2 8B     	ld a,(Vel_up)
 114+ 99F7 47           	ld b,a
 115+ 99F8 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 99FB CD 59 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 99FE A7           	and a
 118+ 99FF 20 10        	jr nz,1F
 119+ 9A01
 120+ 9A01              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A01              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A01
 123+ 9A01 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A02 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A04 20 0B            jr nz,1F
 126+ 9A06 7D               ld a,l
 127+ 9A07 D6 20            sub $20
 128+ 9A09 30 06            jr nc,1F
 129+ 9A0B 25               dec h
 130+ 9A0C
 131+ 9A0C              ; -----------------------------
 132+ 9A0C CD C0 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A0F              ;	call Reinicio
 134+ 9A0F              ; -----------------------------
 135+ 9A0F
 136+ 9A0F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A11 CD 7C 99     1 call PreviousScan
 138+ 9A14 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A17 10 E2            djnz 3B
 140+ 9A19 CD 77 94     2 call Genera_coordenadas
 141+ 9A1C C9           	ret
 142+ 9A1D
 143+ 9A1D              ; -----------------------------
 144+ 9A1D              ;
 145+ 9A1D              ;	27/5/23
 146+ 9A1D              ;
 147+ 9A1D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A1D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A1D              ;
 150+ 9A1D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A1D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A1D              ;
 153+ 9A1D              ;	Modifica: A y (Puntero_objeto).
 154+ 9A1D
 155+ 9A1D 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A20 CB 47        	bit 0,a
 157+ 9A22 C8           	ret z
 158+ 9A23 CB 87        	res 0,a
 159+ 9A25 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A28 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A2B 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A2E C9           	ret
 163+ 9A2F
 164+ 9A2F              ; ******************************************************************************************************************************************************************************************
 165+ 9A2F              ;
 166+ 9A2F              ;	19/10/22
 167+ 9A2F              ;
 168+ 9A2F              ;	Mov_right.
 169+ 9A2F              ;
 170+ 9A2F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A2F              ;
 172+ 9A2F
 173+ 9A2F 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A32 CB 77        	bit 6,a
 175+ 9A34 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A36
 177+ 9A36 CD 6E 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A39 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A3A
 180+ 9A3A 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A3D CB E6        	set 4,(hl)
 182+ 9A3F 18 52        	jr 8F
 183+ 9A41
 184+ 9A41 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A44 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A46              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A46              ; 																	; _ en el caso de que no lo haya.
 188+ 9A46 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A49 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A4B 20 46        	jr nz,8F
 191+ 9A4D
 192+ 9A4D 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A50 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A51 28 40        	jr z,8F
 195+ 9A53
 196+ 9A53              ; ---------- ---------- ----------
 197+ 9A53              ;
 198+ 9A53              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A53
 200+ 9A53 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A56 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A58 28 11        	jr z,1F
 203+ 9A5A 38 06        	jr c,6F
 204+ 9A5C FE 04        	cp 4
 205+ 9A5E 28 14        	jr z,7F
 206+ 9A60 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A62
 208+ 9A62              ; ---------- ---------- ----------
 209+ 9A62              ;
 210+ 9A62              ; Perfiles de velocidad
 211+ 9A62              ;
 212+ 9A62
 213+ 9A62 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A65 FE FE        	cp $fe
 215+ 9A67 20 2A        	jr nz,8F
 216+ 9A69 18 10        	jr 3F
 217+ 9A6B 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A6E FE FD        	cp $fd
 219+ 9A70 20 21        	jr nz,8F
 220+ 9A72 18 07        	jr 3F
 221+ 9A74 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A77 FE FB        	cp $fb
 223+ 9A79 20 18        	jr nz,8F
 224+ 9A7B
 225+ 9A7B              ; ---------- ---------- ----------
 226+ 9A7B
 227+ 9A7B              3
 228+ 9A7B CD AE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A7E              ;	call Reinicio
 230+ 9A7E
 231+ 9A7E              ; ---------- ---------- ----------
 232+ 9A7E              ;
 233+ 9A7E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A7E
 235+ 9A7E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A80 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A81 CD 9A 9A     	call DESPLZ_DER
 238+ 9A84 C1           	pop bc
 239+ 9A85 10 F9        	djnz 5B
 240+ 9A87 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A8A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A8B 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9A8E CD 77 94     	call Genera_coordenadas
 244+ 9A91 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A93
 246+ 9A93              ; ---------- ---------- ----------
 247+ 9A93
 248+ 9A93 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9A96 CD 9A 9A     	call DESPLZ_DER
 250+ 9A99 C9           2 ret
 251+ 9A9A
 252+ 9A9A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9A9A              ;
 254+ 9A9A              ;	22/9/22
 255+ 9A9A              ;
 256+ 9A9A
 257+ 9A9A CD A9 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9A9D CD F5 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9AA0 CD 1E 9B         call Ciclo_completo
 260+ 9AA3 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AA6 CB FE        	set 7,(hl)
 262+ 9AA8 C9           	ret
 263+ 9AA9
 264+ 9AA9              ; ******************************************************************************************************************************************************************************************
 265+ 9AA9              ;	15/02/23
 266+ 9AA9              ;
 267+ 9AA9
 268+ 9AA9 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AAC 47           	ld b,a
 270+ 9AAD 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AB0 23           1 inc hl
 272+ 9AB1 23           	inc hl
 273+ 9AB2 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AB4 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AB7 CD 58 90     	call Extrae_address
 276+ 9ABA 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9ABD
 278+ 9ABD              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9ABD
 280+ 9ABD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9ABD              ; Cuántos movimientos hemos hecho ??
 282+ 9ABD              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9ABD
 284+ 9ABD 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AC0 EB           	ex de,hl
 286+ 9AC1 A7           	and a
 287+ 9AC2 ED 52        	sbc hl,de
 288+ 9AC4 CB 3D        	srl l
 289+ 9AC6 3E 08        6 ld a,8
 290+ 9AC8 95           	sub l
 291+ 9AC9 30 1E        	jr nc,3F
 292+ 9ACB
 293+ 9ACB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9ACB              ; B="0".
 295+ 9ACB
 296+ 9ACB 04           4 inc b
 297+ 9ACC 3C           	inc a
 298+ 9ACD 20 FC        	jr nz,4B
 299+ 9ACF 78           	ld a,b
 300+ 9AD0 08           	ex af,af
 301+ 9AD1 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AD4 23           5 inc hl
 303+ 9AD5 23           	inc hl
 304+ 9AD6 10 FC        	djnz 5B
 305+ 9AD8 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9ADB CD 58 90     	call Extrae_address
 307+ 9ADE 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9AE1
 309+ 9AE1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AE1              ; _(Posicion_actual).
 311+ 9AE1
 312+ 9AE1 21 CB 8B     	ld hl,Posicion_actual
 313+ 9AE4 34           	inc (hl)
 314+ 9AE5 08               ex af,af
 315+ 9AE6 6F           	ld l,a
 316+ 9AE7 18 DD        	jr 6B
 317+ 9AE9
 318+ 9AE9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AE9
 320+ 9AE9 47           3 ld b,a
 321+ 9AEA 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9AED 23           2 inc hl
 323+ 9AEE 23           	inc hl
 324+ 9AEF 10 FC        	djnz 2B
 325+ 9AF1 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9AF4 C9           8 ret
 327+ 9AF5
 328+ 9AF5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9AF5              ;
 330+ 9AF5              ;	24/7/22
 331+ 9AF5              ;
 332+ 9AF5              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9AF5              ;
 334+ 9AF5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9AF5              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9AF5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9AF5
 338+ 9AF5 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9AF8 A7           	and a
 340+ 9AF9 20 1F        	jr nz,1F
 341+ 9AFB D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9AFD 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9B00
 344+ 9B00 21 CA 8B     	ld hl,Columns
 345+ 9B03 34           	inc (hl)
 346+ 9B04 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9B07 E6 01        	and 1
 348+ 9B09 28 0F        	jr z,1F
 349+ 9B0B 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B0E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B0F 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B12 CD 77 94     	call Genera_coordenadas
 353+ 9B15 CD 7A 9C     	call Inc_CTRL_DESPLZ
 354+ 9B18 18 03        	jr 2F
 355+ 9B1A CD 7A 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B1D C9           2 ret
 357+ 9B1E
 358+ 9B1E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B1E              ;
 360+ 9B1E              ;	24/7/22
 361+ 9B1E              ;
 362+ 9B1E              ;	Ciclo_completo.
 363+ 9B1E              ;
 364+ 9B1E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B1E              ;
 366+ 9B1E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B1E              ; 	Decrementamos (Columns).
 368+ 9B1E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B1E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B1E
 371+ 9B1E
 372+ 9B1E 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B21 FE FF        	cp $ff
 374+ 9B23 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B25 E6 F0        	and $f0
 376+ 9B27 20 28        	jr nz,3F
 377+ 9B29
 378+ 9B29              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B29
 380+ 9B29 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B2C 47           	ld b,a
 382+ 9B2D 3E F8        	ld a,$f8
 383+ 9B2F 80           	add b
 384+ 9B30 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B33 18 1C        	jr 3F
 386+ 9B35 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B38 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B39 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B3A 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B3D 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B40 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B42 20 0A        	jr nz,2F
 393+ 9B44 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B47 23           	inc hl
 395+ 9B48 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B4B CD 77 94     	call Genera_coordenadas
 397+ 9B4E
 398+ 9B4E              ; Inicia el puntero de Sprite.
 399+ 9B4E
 400+ 9B4E CD 6D 90     2 call Inicia_puntero_objeto_der
 401+ 9B51 C9           3 ret
 402+ 9B52
 403+ 9B52              ; ******************************************************************************************************************************************************************************************
 404+ 9B52              ;
 405+ 9B52              ;	15/02/23
 406+ 9B52              ;
 407+ 9B52              ;	Mov_left.
 408+ 9B52              ;
 409+ 9B52              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B52              ;
 411+ 9B52              Mov_left
 412+ 9B52
 413+ 9B52 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B55 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B57              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B57              ; 																	; _ en el caso de que no lo haya.
 417+ 9B57 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B5A CB 77        	bit 6,a
 419+ 9B5C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B5E
 421+ 9B5E CD 74 9C     	call Stop_Amadeus_left
 422+ 9B61 C8           	ret z
 423+ 9B62 20 4A        	jr nz,8F
 424+ 9B64
 425+ 9B64 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B67 A7           	and a
 427+ 9B68 20 44        	jr nz,8F
 428+ 9B6A
 429+ 9B6A 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B6D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B6E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B70
 433+ 9B70              ; ---------- ---------- ----------
 434+ 9B70
 435+ 9B70 3A E0 8B     	ld a,(Vel_left)
 436+ 9B73 FE 02        	cp 2
 437+ 9B75 28 0F        	jr z,1F
 438+ 9B77 38 04        	jr c,6F
 439+ 9B79 FE 04        	cp 4
 440+ 9B7B 28 12        	jr z,7F
 441+ 9B7D
 442+ 9B7D              ; ---------- ---------- ----------
 443+ 9B7D
 444+ 9B7D 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B80 FE F8        	cp $f8
 446+ 9B82 20 2A        	jr nz,8F
 447+ 9B84 18 10        	jr 4F
 448+ 9B86 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B89 FE F9        	cp $f9
 450+ 9B8B 20 21        	jr nz,8F
 451+ 9B8D 18 07        	jr 4F
 452+ 9B8F 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9B92 FE FB        	cp $fb
 454+ 9B94 20 18        	jr nz,8F
 455+ 9B96
 456+ 9B96              ; ---------- ---------- ----------
 457+ 9B96
 458+ 9B96              4
 459+ 9B96 CD 9C 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9B99              ;	call Reinicio
 461+ 9B99
 462+ 9B99              ; ---------- ---------- ----------
 463+ 9B99
 464+ 9B99 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9B9B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9B9C
 467+ 9B9C              ;	ld hl,(Indice_Sprite_izq)
 468+ 9B9C              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9B9C
 470+ 9B9C CD B5 9B     	call DESPLZ_IZQ
 471+ 9B9F C1           	pop bc
 472+ 9BA0 10 F9        	djnz 5B
 473+ 9BA2 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BA5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BA6 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9BA9 CD 77 94     	call Genera_coordenadas
 477+ 9BAC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BAE
 479+ 9BAE              ; ---------- ---------- ----------
 480+ 9BAE
 481+ 9BAE              ; Movemos, no hay recolocación.
 482+ 9BAE
 483+ 9BAE 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BB1 CD B5 9B     	call DESPLZ_IZQ
 485+ 9BB4 C9           2 ret
 486+ 9BB5
 487+ 9BB5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BB5              ;
 489+ 9BB5              ;	22/9/22
 490+ 9BB5
 491+ 9BB5              DESPLZ_IZQ
 492+ 9BB5
 493+ 9BB5 CD C4 9B     	call Desplaza_izquierda
 494+ 9BB8 CD 10 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BBB CD 38 9C     	call Ciclo_completo_2
 496+ 9BBE 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BC1 CB BE        	res 7,(hl)
 498+ 9BC3 C9           	ret
 499+ 9BC4
 500+ 9BC4              Desplaza_izquierda
 501+ 9BC4
 502+ 9BC4 3A E0 8B     	ld a,(Vel_left)
 503+ 9BC7 47           	ld b,a
 504+ 9BC8 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BCB 23           1 inc hl
 506+ 9BCC 23           	inc hl
 507+ 9BCD 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BCF 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BD2 CD 58 90     	call Extrae_address
 510+ 9BD5 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BD8
 512+ 9BD8              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BD8
 514+ 9BD8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BD8              ; Cuántos movimientos hemos hecho ??
 516+ 9BD8              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BD8
 518+ 9BD8 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BDB EB           	ex de,hl
 520+ 9BDC A7           	and a
 521+ 9BDD ED 52        	sbc hl,de
 522+ 9BDF CB 3D        	srl l
 523+ 9BE1 3E 08        6 ld a,8
 524+ 9BE3 95           	sub l
 525+ 9BE4 30 1E        	jr nc,3F
 526+ 9BE6
 527+ 9BE6              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BE6              ; B="0".
 529+ 9BE6
 530+ 9BE6 04           4 inc b
 531+ 9BE7 3C           	inc a
 532+ 9BE8 20 FC        	jr nz,4B
 533+ 9BEA 78           	ld a,b
 534+ 9BEB 08           	ex af,af
 535+ 9BEC 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9BEF 23           5 inc hl
 537+ 9BF0 23           	inc hl
 538+ 9BF1 10 FC        	djnz 5B
 539+ 9BF3 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BF6 CD 58 90     	call Extrae_address
 541+ 9BF9 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9BFC
 543+ 9BFC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9BFC              ; _(Posicion_actual).
 545+ 9BFC
 546+ 9BFC 21 CB 8B     	ld hl,Posicion_actual
 547+ 9BFF 35           	dec (hl)
 548+ 9C00 08           	ex af,af
 549+ 9C01 6F           	ld l,a
 550+ 9C02 18 DD        	jr 6B
 551+ 9C04
 552+ 9C04              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C04
 554+ 9C04 47           3 ld b,a
 555+ 9C05 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C08 23           2 inc hl
 557+ 9C09 23           	inc hl
 558+ 9C0A 10 FC        	djnz 2B
 559+ 9C0C 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C0F C9           8 ret
 561+ 9C10
 562+ 9C10              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C10              ;
 564+ 9C10              ;	modifica_parametros_1er_DESPLZ
 565+ 9C10              ;
 566+ 9C10              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C10              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C10              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C10
 570+ 9C10 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C13 A7           	and a
 572+ 9C14 20 1E        	jr nz,1F
 573+ 9C16 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C17 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C1A 21 CA 8B     	ld hl,Columns
 576+ 9C1D 34           	inc (hl)
 577+ 9C1E 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C21 E6 01        	and 1
 579+ 9C23 20 0F        	jr nz,1F
 580+ 9C25 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C28 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C29 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C2C CD 77 94     	call Genera_coordenadas
 584+ 9C2F CD 8B 9C     	call Dec_CTRL_DESPLZ
 585+ 9C32 18 03        	jr 2F
 586+ 9C34 CD 8B 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C37 C9           2 ret
 588+ 9C38
 589+ 9C38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C38
 591+ 9C38 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C3B FE F7        	cp $f7
 593+ 9C3D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C3F 30 2C        	jr nc,3F
 595+ 9C41
 596+ 9C41              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C41
 598+ 9C41 06 00        	ld b,0
 599+ 9C43 04           4 inc b
 600+ 9C44 3C           	inc a
 601+ 9C45 FE F7        	cp $f7
 602+ 9C47 20 FA        	jr nz,4B
 603+ 9C49 3E FF        	ld a,$ff
 604+ 9C4B 90           	sub b
 605+ 9C4C 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C4F 18 1C        	jr 3F
 607+ 9C51
 608+ 9C51              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C51
 610+ 9C51 21 CA 8B     1 ld hl,Columns
 611+ 9C54 35           	dec (hl)
 612+ 9C55 AF           	xor a
 613+ 9C56 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C59 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C5C E6 01        	and 1
 616+ 9C5E 28 0A        	jr z,2F
 617+ 9C60 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C63 2B           	dec hl
 619+ 9C64 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C67 CD 77 94     	call Genera_coordenadas
 621+ 9C6A
 622+ 9C6A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C6A
 624+ 9C6A CD 80 90     2 call Inicia_puntero_objeto_izq
 625+ 9C6D C9           3 ret
 626+ 9C6E
 627+ 9C6E              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C6E              ;
 629+ 9C6E              ;	19/10/22
 630+ 9C6E              ;
 631+ 9C6E              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C6E              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C6E
 634+ 9C6E 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C71 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C73 C9           	ret
 637+ 9C74
 638+ 9C74              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C74              ;
 640+ 9C74              ;	19/10/22
 641+ 9C74              ;
 642+ 9C74              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C74              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C74
 645+ 9C74 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C77 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C79 C9           	ret
 648+ 9C7A
 649+ 9C7A              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C7A              ;
 651+ 9C7A              ;	24/7/22
 652+ 9C7A              ;
 653+ 9C7A              ;	Inc_CTRL_DESPLZ
 654+ 9C7A              ;
 655+ 9C7A              ;
 656+ 9C7A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C7A
 658+ 9C7A 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C7D 3A E1 8B     	ld a,(Vel_right)
 660+ 9C80 A7           	and a
 661+ 9C81 28 06        	jr z,1F
 662+ 9C83 47           	ld b,a
 663+ 9C84 34           3 inc (hl)
 664+ 9C85 10 FD        	djnz 3B
 665+ 9C87 18 01        	jr 2F
 666+ 9C89 34           1 inc (hl)
 667+ 9C8A C9           2 ret
 668+ 9C8B
 669+ 9C8B              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C8B              ;
 671+ 9C8B              ;	5/2/23
 672+ 9C8B              ;
 673+ 9C8B              ;	Dec_CTRL_DESPLZ
 674+ 9C8B              ;
 675+ 9C8B              ;
 676+ 9C8B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C8B
 678+ 9C8B 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C8E 3A E0 8B     	ld a,(Vel_left)
 680+ 9C91 A7           	and a
 681+ 9C92 28 06        	jr z,1F
 682+ 9C94 47           	ld b,a
 683+ 9C95 35           3 dec (hl)
 684+ 9C96 10 FD        	djnz 3B
 685+ 9C98 18 01        	jr 2F
 686+ 9C9A 35           1 dec (hl)
 687+ 9C9B C9           2 ret
 688+ 9C9C
 689+ 9C9C              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9C9C
 691+ 9C9C 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9C9F 01 1F 00     	ld bc,31
 693+ 9CA2 A7           	and a
 694+ 9CA3 ED 4A        	adc hl,bc
 695+ 9CA5 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9CA8 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CAB CB C6        	set 0,(hl)
 698+ 9CAD C9           	ret
 699+ 9CAE
 700+ 9CAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CAE
 702+ 9CAE 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CB1 01 1F 00     	ld bc,31
 704+ 9CB4 A7           	and a
 705+ 9CB5 ED 42        	sbc hl,bc
 706+ 9CB7 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CBA 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CBD CB CE        	set 1,(hl)
 709+ 9CBF C9           	ret
 710+ 9CC0
 711+ 9CC0              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CC0
 713+ 9CC0 24           Reaparece_abajo inc h
 714+ 9CC1 01 E0 17     	ld bc,$17e0
 715+ 9CC4 A7           	and a
 716+ 9CC5 ED 4A        	adc hl,bc
 717+ 9CC7 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CCA 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CCD CB D6        	set 2,(hl)
 720+ 9CCF C9           	ret
 721+ 9CD0
 722+ 9CD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CD0
 724+ 9CD0 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CD3 A7           	and a
 726+ 9CD4 ED 42        	sbc hl,bc
 727+ 9CD6 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CD9 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CDC CB DE        	set 3,(hl)
 730+ 9CDE C9           	ret
 731+ 9CDF
 732+ 9CDF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CDF              ;
 734+ 9CDF              ;	15/07/23
 735+ 9CDF
 736+ 9CDF              Reinicio
 737+ 9CDF
 738+ 9CDF              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CDF
 740+ 9CDF AF           	xor a
 741+ 9CE0 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CE3 CD 01 9D     	call Limpia_contenido_hl
 743+ 9CE6
 744+ 9CE6 21 CB 8B     	ld hl,Posicion_actual
 745+ 9CE9 CD 01 9D     	call Limpia_contenido_hl
 746+ 9CEC
 747+ 9CEC CD 59 92     	call Inicializa_Puntero_indice_mov
 748+ 9CEF CD 00 9E     	call Inicia_Puntero_mov
 749+ 9CF2
 750+ 9CF2 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9CF5 06 05        	ld b,5
 752+ 9CF7 77           1 ld (hl),a
 753+ 9CF8 23           	inc hl
 754+ 9CF9 10 FC        	djnz 1B
 755+ 9CFB
 756+ 9CFB 21 C7 8B     	ld hl,Ctrl_2
 757+ 9CFE CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D00
 759+ 9D00 C9           	ret
 760+ 9D01
 761+ 9D01 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D02 23           	inc hl
 763+ 9D03 77           	ld (hl),a
 764+ 9D04 C9           	ret
 765+ 9D05
 766+ 9D05              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D05              ;
 768+ 9D05              ;	18/6/24
 769+ 9D05              ;
 770+ 9D05
 771+ 9D05              Amadeus_a_izquierda
 772+ 9D05
 773+ 9D05              ;	Actualiza contador de movimientos.
 774+ 9D05
 775+ 9D05 21 79 89     	ld hl,Comm_Amadeus
 776+ 9D08 35           	dec (hl)
 777+ 9D09 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D0B
 779+ 9D0B 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D0E 2B           	dec hl
 781+ 9D0F 2B           	dec hl
 782+ 9D10 2B           	dec hl
 783+ 9D11 2B           	dec hl
 784+ 9D12 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D15
 786+ 9D15 21 2D 8C     	ld hl,Ctrl_3
 787+ 9D18 CB EE        	set 5,(hl)
 788+ 9D1A
 789+ 9D1A C9           	ret
 790+ 9D1B
 791+ 9D1B 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D1C C9           	ret
 793+ 9D1D
 794+ 9D1D
 795+ 9D1D              Amadeus_a_derecha
 796+ 9D1D
 797+ 9D1D              ;	Actualiza contador de movimientos.
 798+ 9D1D
 799+ 9D1D 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D20 34           	inc (hl)
 801+ 9D21 3E 7A        	ld a,$7a
 802+ 9D23 BE           	cp (hl)
 803+ 9D24 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D26
 805+ 9D26 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D29 23           	inc hl
 807+ 9D2A 23           	inc hl
 808+ 9D2B 23           	inc hl
 809+ 9D2C 23           	inc hl
 810+ 9D2D 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D30
 812+ 9D30 21 2D 8C     	ld hl,Ctrl_3
 813+ 9D33 CB EE        	set 5,(hl)
 814+ 9D35 C9           	ret
 815+ 9D36
 816+ 9D36 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D37 C9           	ret
# file closed: Direcciones.asm
2268  9D38              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D38              ; ----- ----- ----- ----- -----
   2+ 9D38              ;
   3+ 9D38              ;   28/12/23
   4+ 9D38
   5+ 9D38              Movimiento
   6+ 9D38
   7+ 9D38              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D38
   9+ 9D38 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D3B CB 57            bit 2,a
  11+ 9D3D 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D3F
  13+ 9D3F 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D42 7E               ld a,(hl)
  15+ 9D43
  16+ 9D43              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D43
  18+ 9D43              Inicia_desplazamiento.
  19+ 9D43
  20+ 9D43              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D43
  22+ 9D43 CD 36 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D46
  24+ 9D46              ; Iniciamos (Repetimos_mov).
  25+ 9D46
  26+ 9D46 7E               ld a,(hl)
  27+ 9D47 E6 0F            and $0f
  28+ 9D49 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D4C 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D4F
  31+ 9D4F              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D4F
  33+ 9D4F 23               inc hl
  34+ 9D50 7E               ld a,(hl)
  35+ 9D51 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D54 2B               dec hl
  37+ 9D55
  38+ 9D55 21 C7 8B         ld hl,Ctrl_2
  39+ 9D58 CB D6            set 2,(hl)
  40+ 9D5A
  41+ 9D5A              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D5A              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D5A
  44+ 9D5A              Desplazamiento_iniciado
  45+ 9D5A
  46+ 9D5A CD 0A 9E         call Aplica_desplazamiento
  47+ 9D5D
  48+ 9D5D              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D5D
  50+ 9D5D 3A 2D 8C         ld a,(Ctrl_3)
  51+ 9D60 CB 4F            bit 1,a
  52+ 9D62 C0               ret nz
  53+ 9D63
  54+ 9D63 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D66 35               dec (hl)
  56+ 9D67 C0               ret nz
  57+ 9D68
  58+ 9D68              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D68              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D68              ; Analiza (Cola_de_desplazamiento).
  61+ 9D68
  62+ 9D68 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D6B A7               and a
  64+ 9D6C CC 5F 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D6F 28 30            jr z,Reinicia_el_movimiento
  66+ 9D71
  67+ 9D71 FE FF            cp $ff
  68+ 9D73 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D75
  70+ 9D75 FE FE            cp $fe
  71+ 9D77 CC E4 9D         call z,Fijamos_bucle
  72+ 9D7A 28 25            jr z,Reinicia_el_movimiento
  73+ 9D7C
  74+ 9D7C FE FD            cp $fd
  75+ 9D7E 20 11            jr nz,1F
  76+ 9D80
  77+ 9D80              ; ---
  78+ 9D80              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D80
  80+ 9D80 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D83 CB 5F            bit 3,a
  82+ 9D85 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D87
  84+ 9D87              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D87
  86+ 9D87 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D8A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D8C
  89+ 9D8C CD F5 9D         call Inicia_Repetimos_movimiento
  90+ 9D8F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D91              ; ---
  92+ 9D91
  93+ 9D91 FE 01        1 cp 1
  94+ 9D93 CA CE 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D96
  96+ 9D96 3D               dec a
  97+ 9D97 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9D9A
  99+ 9D9A 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9D9D 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DA0              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DA0 C9               ret
 103+ 9DA1
 104+ 9DA1              Reinicia_el_movimiento
 105+ 9DA1
 106+ 9DA1 3A C7 8B         ld a,(Ctrl_2)
 107+ 9DA4 CB 5F            bit 3,a
 108+ 9DA6 28 1B            jr z,2F
 109+ 9DA8
 110+ 9DA8              ; (Cola_de_desplazamiento)="254".
 111+ 9DA8
 112+ 9DA8 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DAB 35               dec (hl)
 114+ 9DAC 20 15            jr nz,2F
 115+ 9DAE
 116+ 9DAE              ; Fin de las repeticiones del último movimiento.
 117+ 9DAE
 118+ 9DAE 21 C7 8B         ld hl,Ctrl_2
 119+ 9DB1 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DB3
 121+ 9DB3 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DB6 23               inc hl
 123+ 9DB7 23               inc hl
 124+ 9DB8 23               inc hl
 125+ 9DB9 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DBC              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DBC 7E               ld a,(hl)
 128+ 9DBD 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DC0
 130+ 9DC0 C3 68 9D         jp Cola
 131+ 9DC3
 132+ 9DC3 CD 00 9E     2 call Inicia_Puntero_mov
 133+ 9DC6
 134+ 9DC6 21 C7 8B         ld hl,Ctrl_2
 135+ 9DC9 CB 96            res 2,(hl)
 136+ 9DCB
 137+ 9DCB C3 38 9D         jp Movimiento
 138+ 9DCE
 139+ 9DCE              Siguiente_desplazamiento
 140+ 9DCE
 141+ 9DCE              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DCE              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DCE
 144+ 9DCE 21 C7 8B         ld hl,Ctrl_2
 145+ 9DD1 CB 96            res 2,(hl)
 146+ 9DD3
 147+ 9DD3 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DD6 23               inc hl
 149+ 9DD7 23               inc hl
 150+ 9DD8 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DDB
 152+ 9DDB 7E               ld a,(hl)
 153+ 9DDC A7               and a
 154+ 9DDD CC 5F 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DE0 CA A1 9D         jp z,Reinicia_el_movimiento
 156+ 9DE3
 157+ 9DE3 C9               ret
 158+ 9DE4
 159+ 9DE4              ; Subrutinas -----------------------------------------
 160+ 9DE4              ; ---------- --------- --------- ---------- ----------
 161+ 9DE4              ;
 162+ 9DE4              ;   24/07/23
 163+ 9DE4              ;
 164+ 9DE4              ;   Fijamos_bucle
 165+ 9DE4              ;
 166+ 9DE4              ;
 167+ 9DE4
 168+ 9DE4              Fijamos_bucle
 169+ 9DE4
 170+ 9DE4 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9DE7 3C               inc a
 172+ 9DE8 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9DEB
 174+ 9DEB CD 5F 9E         call Incrementa_Puntero_indice_mov
 175+ 9DEE 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9DF1 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9DF4 C9               ret
 178+ 9DF5
 179+ 9DF5              ; ---------- --------- --------- ---------- ----------
 180+ 9DF5              ;
 181+ 9DF5              ;   07/7/23
 182+ 9DF5              ;
 183+ 9DF5              ;   Inicia_Repetimos_movimiento
 184+ 9DF5              ;
 185+ 9DF5              ;
 186+ 9DF5
 187+ 9DF5              Inicia_Repetimos_movimiento
 188+ 9DF5
 189+ 9DF5              ; Iniciamos (Repetimos_movimiento).
 190+ 9DF5
 191+ 9DF5 DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9DF9 DD 7E 02         ld a,(ix+2)
 193+ 9DFC 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9DFF
 195+ 9DFF C9               ret
 196+ 9E00
 197+ 9E00              ; ---------- --------- --------- ---------- ----------
 198+ 9E00              ;
 199+ 9E00              ;   26/6/23
 200+ 9E00              ;
 201+ 9E00              ;   Inicia_Puntero_mov
 202+ 9E00              ;
 203+ 9E00              ;
 204+ 9E00
 205+ 9E00 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E03 CD 58 90         call Extrae_address
 207+ 9E06 22 EE 8B         ld (Puntero_mov),hl
 208+ 9E09 C9               ret
 209+ 9E0A
 210+ 9E0A              ; ---------- --------- --------- ---------- ----------
 211+ 9E0A              ;
 212+ 9E0A              ;   27/06/23
 213+ 9E0A              ;
 214+ 9E0A              ;   Aplica_movimiento.
 215+ 9E0A
 216+ 9E0A              Aplica_desplazamiento
 217+ 9E0A
 218+ 9E0A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E0A
 220+ 9E0A 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9E0D
 222+ 9E0D 7E               ld a,(hl)
 223+ 9E0E E6 F0            and $f0
 224+ 9E10 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E11
 226+ 9E11 CB 7E            bit 7,(hl)
 227+ 9E13 28 03            jr z,1F
 228+ 9E15 CD EC 99         call Mov_up
 229+ 9E18 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E1B CB 76            bit 6,(hl)
 231+ 9E1D 28 03            jr z,2F
 232+ 9E1F CD B3 99         call Mov_down
 233+ 9E22
 234+ 9E22              ; Se ha aplicado reinicio ???
 235+ 9E22              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E22
 237+ 9E22              ;    ld a,(Ctrl_3)
 238+ 9E22              ;    bit 1,a
 239+ 9E22              ;    ret nz
 240+ 9E22
 241+ 9E22 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E25 CB 6E            bit 5,(hl)
 243+ 9E27 28 03            jr z,3F
 244+ 9E29 CD 52 9B         call Mov_left
 245+ 9E2C 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E2F CB 66            bit 4,(hl)
 247+ 9E31 C8               ret z
 248+ 9E32 CD 2F 9A         call Mov_right
 249+ 9E35 C9               ret
 250+ 9E36
 251+ 9E36              ; ---------- --------- --------- ---------- ----------
 252+ 9E36              ;
 253+ 9E36              ;   26/06/23
 254+ 9E36              ;
 255+ 9E36              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E36
 257+ 9E36              Ajusta_velocidad_desplazamiento
 258+ 9E36
 259+ 9E36              ; 1er byte de la cadena de movimiento.
 260+ 9E36              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E36
 262+ 9E36 CD 54 9E         call Extrae_nibble_alto
 263+ 9E39
 264+ 9E39 32 E2 8B         ld (Vel_up),a
 265+ 9E3C 79               ld a,c
 266+ 9E3D E6 0F            and $0f
 267+ 9E3F 32 E3 8B         ld (Vel_down),a
 268+ 9E42
 269+ 9E42              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E42              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E42
 272+ 9E42 23               inc hl
 273+ 9E43 CD 54 9E         call Extrae_nibble_alto
 274+ 9E46
 275+ 9E46 32 E0 8B         ld (Vel_left),a
 276+ 9E49 79               ld a,c
 277+ 9E4A E6 0F            and $0f
 278+ 9E4C 32 E1 8B         ld (Vel_right),a
 279+ 9E4F
 280+ 9E4F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E4F
 282+ 9E4F 23               inc hl
 283+ 9E50 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E53 C9               ret
 285+ 9E54
 286+ 9E54 06 04        Extrae_nibble_alto ld b,4
 287+ 9E56 7E               ld a,(hl)
 288+ 9E57 4F               ld c,a
 289+ 9E58 E6 F0            and $f0
 290+ 9E5A CB 3F        1 srl a
 291+ 9E5C 10 FC            djnz 1B
 292+ 9E5E C9               ret
 293+ 9E5F
 294+ 9E5F              ; ---------- --------- --------- ---------- ----------
 295+ 9E5F              ;
 296+ 9E5F              ;   5/7/23
 297+ 9E5F              ;
 298+ 9E5F              ;   Incrementa_Puntero_indice_mov
 299+ 9E5F
 300+ 9E5F              Incrementa_Puntero_indice_mov
 301+ 9E5F
 302+ 9E5F 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E62 34               inc (hl)
 304+ 9E63
 305+ 9E63 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E66 01 02 00         ld bc,2
 307+ 9E69 A7               and a
 308+ 9E6A 09               add hl,bc
 309+ 9E6B 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E6E
 311+ 9E6E 7E               ld a,(hl)
 312+ 9E6F A7               and a
 313+ 9E70
 314+ 9E70              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E70
 316+ 9E70              ;    jr z,$
 317+ 9E70
 318+ 9E70              ;! Reinicia el Patrón de movimiento.
 319+ 9E70
 320+ 9E70 CC 75 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E73
 322+ 9E73 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E74
 324+ 9E74 C9               ret
 325+ 9E75
 326+ 9E75              ; ---------- --------- --------- ---------- ----------
 327+ 9E75              ;
 328+ 9E75              ;   15/01/24
 329+ 9E75              ;
 330+ 9E75              ;   Inicializa_Puntero_indice_mov
 331+ 9E75
 332+ 9E75              Inicializa_Puntero_indice_mov_2
 333+ 9E75
 334+ 9E75              ; Existe etiqueta de bucle principal???
 335+ 9E75
 336+ 9E75 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E78 24               inc h
 338+ 9E79 25               dec h
 339+ 9E7A 28 05            jr z,2F
 340+ 9E7C
 341+ 9E7C 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E7F 18 14            jr 3F
 343+ 9E81
 344+ 9E81              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E81
 346+ 9E81 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E84 47               ld b,a
 348+ 9E85
 349+ 9E85 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9E88 2B           1 dec hl
 351+ 9E89 2B               dec hl
 352+ 9E8A 10 FC            djnz 1B
 353+ 9E8C 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9E8F
 355+ 9E8F AF               xor a
 356+ 9E90 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9E93 18 06            jr 4F
 358+ 9E95
 359+ 9E95 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9E98 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9E9B C9           4 ret
 362+ 9E9C
 363+ 9E9C              ; ----------------------------------------------------------------------
 364+ 9E9C              ;
 365+ 9E9C              ;   30/01/24
 366+ 9E9C              ;
 367+ 9E9C              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9E9C
 369+ 9E9C 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9E9F CD F4 93         call Calcula_salto_en_BC
 371+ 9EA2 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EA5 A7               and a
 373+ 9EA6 ED 4A            adc hl,bc
 374+ 9EA8 C9               ret
 375+ 9EA9
 376+ 9EA9              ; ----------------------------------------------------------------------
 377+ 9EA9              ;
 378+ 9EA9              ;   30/01/24
 379+ 9EA9              ;
 380+ 9EA9              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EA9              ;
 382+ 9EA9              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EA9
 384+ 9EA9 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EAA 23               inc hl
 386+ 9EAB 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EAC 69               ld l,c
 388+ 9EAD 60               ld h,b
 389+ 9EAE 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EB1 C9               ret
 391+ 9EB2
# file closed: Movimiento.asm
2269  9EB2              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EB2              ; --------------------------------------------------------------------------------------
   2+ 9EB2              ;
   3+ 9EB2              ;   22/08/24
   4+ 9EB2              ;
   5+ 9EB2
   6+ 9EB2              Mueve_Disparos
   7+ 9EB2
   8+ 9EB2              ;    Exclusiones:
   9+ 9EB2
  10+ 9EB2 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  11+ 9EB5 A7               and a
  12+ 9EB6 28 16            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
  13+ 9EB8
  14+ 9EB8              ; .........................
  15+ 9EB8
  16+ 9EB8              ; Nos situamos en el puntero_de_impresión de la caja.
  17+ 9EB8
  18+ 9EB8 21 26 89         ld hl,Disparo_1A+3
  19+ 9EBB 34               inc (hl)
  20+ 9EBC 35               dec (hl)
  21+ 9EBD 28 04            jr z,1F
  22+ 9EBF
  23+ 9EBF 2B               dec hl
  24+ 9EC0 CD EA 9E         call Mueve_disparo_Amadeus
  25+ 9EC3
  26+ 9EC3 21 2B 89     1 ld hl,Disparo_2A+3
  27+ 9EC6 34               inc (hl)
  28+ 9EC7 35               dec (hl)
  29+ 9EC8 28 04            jr z,2F
  30+ 9ECA
  31+ 9ECA 2B               dec hl
  32+ 9ECB CD EA 9E         call Mueve_disparo_Amadeus
  33+ 9ECE
  34+ 9ECE              ; Disparos de entidades.
  35+ 9ECE
  36+ 9ECE 3A 1D 8C     2 ld a,(Numero_de_disparos_de_entidades)
  37+ 9ED1 A7               and a
  38+ 9ED2 C8               ret z
  39+ 9ED3
  40+ 9ED3 06 07            ld b,7                                                               ; Contador de disparos.
  41+ 9ED5 21 2D 89         ld hl,Indice_de_disparos_entidades
  42+ 9ED8
  43+ 9ED8 CD 58 90     4 call Extrae_address
  44+ 9EDB 13               inc de
  45+ 9EDC 13               inc de
  46+ 9EDD ED 53 1E 8C      ld (Puntero_rancio_disparos_album),de
  47+ 9EE1
  48+ 9EE1 23               inc hl
  49+ 9EE2
  50+ 9EE2 34               inc (hl)                                                           ; Dispone de Puntero_objeto ???
  51+ 9EE3 35               dec (hl)
  52+ 9EE4 28 00            jr z,3F
  53+ 9EE6
  54+ 9EE6 EB           3 ex de,hl
  55+ 9EE7 10 EF            djnz 4B
  56+ 9EE9
  57+ 9EE9 C9               ret
  58+ 9EEA
  59+ 9EEA              ; -------------------------------------------
  60+ 9EEA              ;
  61+ 9EEA              ;
  62+ 9EEA
  63+ 9EEA              Mueve_disparo_Amadeus
  64+ 9EEA
  65+ 9EEA CD 58 90         call Extrae_address                                               ; Puntero_de_impresión del disparo en HL.
  66+ 9EED
  67+ 9EED CD 7C 99         call PreviousScan
  68+ 9EF0 CD 7C 99         call PreviousScan
  69+ 9EF3 CD 7C 99         call PreviousScan
  70+ 9EF6 CD 7C 99         call PreviousScan
  71+ 9EF9
  72+ 9EF9
  73+ 9EF9              ; Introduce nuevo puntero_de_impresión en la caja.
  74+ 9EF9
  75+ 9EF9 EB               ex de,hl
  76+ 9EFA
  77+ 9EFA 73               ld (hl),e
  78+ 9EFB 23               inc hl
  79+ 9EFC 72               ld (hl),d
  80+ 9EFD
  81+ 9EFD C9               ret
  82+ 9EFE
  83+ 9EFE              ; --------------------------------------------------------------------------------------
  84+ 9EFE              ;
  85+ 9EFE              ;   21/8/24
  86+ 9EFE              ;
  87+ 9EFE
  88+ 9EFE              Pinta_disparos
  89+ 9EFE
  90+ 9EFE              ;    Exclusiones:
  91+ 9EFE
  92+ 9EFE 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  93+ 9F01 A7               and a
  94+ 9F02 C8               ret z                                                             ; Salimos si no hay ningún disparo generado.
  95+ 9F03
  96+ 9F03 ED 73 08 8C      ld (Stack),sp
  97+ 9F07 06 02            ld b,2
  98+ 9F09
  99+ 9F09 ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 100+ 9F0D
 101+ 9F0D D1           2 pop de
 102+ 9F0E
 103+ 9F0E 14               inc d
 104+ 9F0F 15               dec d
 105+ 9F10
 106+ 9F10 28 1B            jr z,1F
 107+ 9F12
 108+ 9F12              Imprime_scanlines_de_disparo
 109+ 9F12
 110+ 9F12 E1               pop hl
 111+ 9F13
 112+ 9F13              ; Puntero objeto en DE.
 113+ 9F13              ; Puntero_de_impresión en HL.
 114+ 9F13
 115+ 9F13              ; 1er scanline.
 116+ 9F13
 117+ 9F13 1A               ld a,(de)
 118+ 9F14 AE               xor (hl)
 119+ 9F15 77               ld (hl),a
 120+ 9F16
 121+ 9F16 13               inc de
 122+ 9F17 2C               inc l
 123+ 9F18
 124+ 9F18 1A               ld a,(de)
 125+ 9F19 AE               xor (hl)
 126+ 9F1A 77               ld (hl),a
 127+ 9F1B
 128+ 9F1B              ; 2º scanline.
 129+ 9F1B
 130+ 9F1B E1               pop hl
 131+ 9F1C 1B               dec de
 132+ 9F1D
 133+ 9F1D 1A               ld a,(de)
 134+ 9F1E AE               xor (hl)
 135+ 9F1F 77               ld (hl),a
 136+ 9F20
 137+ 9F20 13               inc de
 138+ 9F21 2C               inc l
 139+ 9F22
 140+ 9F22 1A               ld a,(de)
 141+ 9F23 AE               xor (hl)
 142+ 9F24 77               ld (hl),a
 143+ 9F25
 144+ 9F25              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 145+ 9F25
 146+ 9F25 18 E6            jr 2B
 147+ 9F27
 148+ 9F27 ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
 149+ 9F2B 18 E0            jr 2B
 150+ 9F2D
 151+ 9F2D 10 F8        1 djnz 3B
 152+ 9F2F ED 7B 08 8C      ld sp,(Stack)
 153+ 9F33 C9               ret
 154+ 9F34
 155+ 9F34              ; --------------------------------------------------------------------------------------
 156+ 9F34              ;
 157+ 9F34              ;   21/8/24
 158+ 9F34              ;
 159+ 9F34              ;   Modifica: HL y DE.
 160+ 9F34
 161+ 9F34
 162+ 9F34              Genera_datos_de_impresion_disparos_Amadeus
 163+ 9F34
 164+ 9F34              ;   Exclusiones:
 165+ 9F34
 166+ 9F34 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 167+ 9F37 A7               and a
 168+ 9F38 C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 169+ 9F39
 170+ 9F39 ED 73 08 8C      ld (Stack),sp
 171+ 9F3D 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 172+ 9F40
 173+ 9F40 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 174+ 9F43 ED 72            sbc hl,sp                                                 ; Última caja ???
 175+ 9F45 28 26            jr z,Salida
 176+ 9F47
 177+ 9F47 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 178+ 9F48
 179+ 9F48 14               inc d
 180+ 9F49 15               dec d
 181+ 9F4A
 182+ 9F4A 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 183+ 9F4C
 184+ 9F4C              Siguiente_disparo_Amadeus
 185+ 9F4C
 186+ 9F4C D1               pop de
 187+ 9F4D 33               inc sp
 188+ 9F4E 18 F0            jr 1B
 189+ 9F50
 190+ 9F50              Genera_scanlines_de_disparo_Amadeus
 191+ 9F50
 192+ 9F50 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 193+ 9F51              ;                                                             ; Puntero_de_impresión del disparo en HL.
 194+ 9F51 33               inc sp
 195+ 9F52 ED 73 1E 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 196+ 9F56
 197+ 9F56 ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 198+ 9F5A
 199+ 9F5A C1               pop bc
 200+ 9F5B C1               pop bc
 201+ 9F5C C1               pop bc
 202+ 9F5D
 203+ 9F5D ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 204+ 9F61
 205+ 9F61 E5               push hl                                                   ; Sube 2º scanline al álbum.
 206+ 9F62 CD 7C 99         call PreviousScan
 207+ 9F65 E5               push hl                                                   ; Sube 1er scanline al álbum.
 208+ 9F66 D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 209+ 9F67
 210+ 9F67 ED 7B 1E 8C      ld sp,(Puntero_rancio_disparos_album)
 211+ 9F6B 18 D3            jr 1B
 212+ 9F6D
 213+ 9F6D ED 7B 08 8C  Salida ld sp,(Stack)
 214+ 9F71 C9               ret
 215+ 9F72
 216+ 9F72              ; --------------------------------------------------------------------------------------
 217+ 9F72              ;
 218+ 9F72              ;   17/08/24
 219+ 9F72              ;
 220+ 9F72
 221+ 9F72              Genera_disparo_Amadeus
 222+ 9F72
 223+ 9F72              ;   Exclusiones.
 224+ 9F72
 225+ 9F72 3A 47 8C         ld a,(Disparo_Amadeus)
 226+ 9F75 A7               and a
 227+ 9F76 C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
 228+ 9F77
 229+ 9F77              ;! Provisionalmente sólo 1 disparo !!!!!!
 230+ 9F77 3D               dec a
 231+ 9F78 32 47 8C         ld (Disparo_Amadeus),a
 232+ 9F7B
 233+ 9F7B              ;   Inc nº de disparos de Amadeus.
 234+ 9F7B
 235+ 9F7B 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 236+ 9F7E 34               inc (hl)
 237+ 9F7F
 238+ 9F7F              ; ----- ----- ----- -----
 239+ 9F7F
 240+ 9F7F              Define_puntero_objeto_disparo
 241+ 9F7F
 242+ 9F7F              ;   Inicializamos contador.
 243+ 9F7F
 244+ 9F7F 06 00            ld b,0
 245+ 9F81 2A 75 89         ld hl,(p.imp.amadeus)
 246+ 9F84 2C               inc l
 247+ 9F85
 248+ 9F85 3E 80            ld a,$80
 249+ 9F87 BE               cp (hl)
 250+ 9F88 28 0D            jr z,1F
 251+ 9F8A
 252+ 9F8A 04               inc b
 253+ 9F8B 3E 60            ld a,$60
 254+ 9F8D BE               cp (hl)
 255+ 9F8E 28 07            jr z,1F
 256+ 9F90
 257+ 9F90 04               inc b
 258+ 9F91 3E 18            ld a,$18
 259+ 9F93 BE               cp (hl)
 260+ 9F94 28 01            jr z,1F
 261+ 9F96
 262+ 9F96 04               inc b
 263+ 9F97
 264+ 9F97              ;   Calcula el Puntero_de_impresión del disparo.
 265+ 9F97
 266+ 9F97              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 267+ 9F97
 268+ 9F97 CD 7C 99     1 call PreviousScan
 269+ 9F9A
 270+ 9F9A 78               ld a,b
 271+ 9F9B CB 3F            srl a
 272+ 9F9D 28 03            jr z,4F
 273+ 9F9F
 274+ 9F9F              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 275+ 9F9F E5               push hl
 276+ 9FA0 18 02            jr 5F
 277+ 9FA2 2D           4 dec l
 278+ 9FA3 E5               push hl
 279+ 9FA4              ; ---
 280+ 9FA4
 281+ 9FA4              ;   Calcula el Puntero_objeto del disparo.
 282+ 9FA4
 283+ 9FA4 21 70 83     5 ld hl,Indice_disparo
 284+ 9FA7 04               inc b
 285+ 9FA8 05               dec b
 286+ 9FA9 28 04            jr z,2F
 287+ 9FAB
 288+ 9FAB              ;   Nos desplazamos por el índice de disparos.
 289+ 9FAB
 290+ 9FAB 2C           3 inc l
 291+ 9FAC 2C               inc l
 292+ 9FAD 10 FC            djnz 3B
 293+ 9FAF
 294+ 9FAF              ; --- Guarda el Puntero_objeto del disparo en la pila.
 295+ 9FAF CD 58 90     2 call Extrae_address
 296+ 9FB2 E5               push hl
 297+ 9FB3              ; ---
 298+ 9FB3
 299+ 9FB3              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 300+ 9FB3              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
 301+ 9FB3
 302+ 9FB3 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 303+ 9FB6 CD 58 90         call Extrae_address
 304+ 9FB9
 305+ 9FB9 06 02            ld b,2
 306+ 9FBB
 307+ 9FBB D1           6 pop de
 308+ 9FBC 73               ld (hl),e
 309+ 9FBD 23               inc hl
 310+ 9FBE 72               ld (hl),d
 311+ 9FBF 23               inc hl
 312+ 9FC0
 313+ 9FC0 10 F9            djnz 6B
 314+ 9FC2
 315+ 9FC2              Detecta_impacto_en_disparo_de_Amadeus
 316+ 9FC2
 317+ 9FC2 CD F3 9F         call Detecta_impacto_en_disparo_de_Amadeus01
 318+ 9FC5
 319+ 9FC5 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 320+ 9FC8 23               inc hl
 321+ 9FC9 23               inc hl
 322+ 9FCA CD 58 90         call Extrae_address
 323+ 9FCD 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 324+ 9FCE 28 02            jr z,7F
 325+ 9FD0 3E 01            ld a,1
 326+ 9FD2 77           7 ld (hl),a
 327+ 9FD3 C8               ret z
 328+ 9FD4
 329+ 9FD4              Genera_coordenadas_de_disparo_Amadeus
 330+ 9FD4
 331+ 9FD4              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 332+ 9FD4              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 333+ 9FD4
 334+ 9FD4 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 335+ 9FD7 CD 58 90         call Extrae_address
 336+ 9FDA 23               inc hl
 337+ 9FDB 23               inc hl
 338+ 9FDC
 339+ 9FDC CD 58 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 340+ 9FDF CD 77 94         call Genera_coordenadas
 341+ 9FE2
 342+ 9FE2 3D               dec a
 343+ 9FE3
 344+ 9FE3 21 37 8C         ld hl,Coordenadas_disparo_certero
 345+ 9FE6 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 346+ 9FE7 23               inc hl
 347+ 9FE8 3A BC 8B         ld a,(Coordenada_X)
 348+ 9FEB 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 349+ 9FEC
 350+ 9FEC 21 34 8C         ld hl,Impacto2
 351+ 9FEF CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 352+ 9FF1
 353+ 9FF1 AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 354+ 9FF2 C9               ret
 355+ 9FF3
 356+ 9FF3              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 357+ 9FF3              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 358+ 9FF3              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 359+ 9FF3
 360+ 9FF3              ; ----------------------------------------------
 361+ 9FF3              ;
 362+ 9FF3              ;   12/08/24
 363+ 9FF3              ;
 364+ 9FF3
 365+ 9FF3
 366+ 9FF3              Detecta_impacto_en_disparo_de_Amadeus01
 367+ 9FF3
 368+ 9FF3              Extraccion_de_datos
 369+ 9FF3
 370+ 9FF3 21 1F 89         ld hl,Indice_de_disparos_Amadeus
 371+ 9FF6 CD 58 90         call Extrae_address
 372+ 9FF9
 373+ 9FF9 5E               ld e,(hl)
 374+ 9FFA 23               inc hl
 375+ 9FFB 56               ld d,(hl)
 376+ 9FFC 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 377+ 9FFD
 378+ 9FFD 4E               ld c,(hl)
 379+ 9FFE 23               inc hl
 380+ 9FFF 46               ld b,(hl)
 381+ A000 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 382+ A001
 383+ A001 C5               push bc
 384+ A002 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 385+ A003
 386+ A003              Detecta_impacto_
 387+ A003
 388+ A003 1A               ld a,(de)
 389+ A004 A6               and (hl)
 390+ A005 C0               ret nz
 391+ A006
 392+ A006 13               inc de
 393+ A007 23               inc hl
 394+ A008
 395+ A008 1A               ld a,(de)
 396+ A009 A6               and (hl)
 397+ A00A C9               ret
 398+ A00B
 399+ A00B              ; -------------------------------------------------------------------------------------------------------------
 400+ A00B              ;
 401+ A00B              ;   8/8/24
 402+ A00B              ;
 403+ A00B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 404+ A00B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 405+ A00B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 406+ A00B              ;
 407+ A00B              ;   MODIFICA: HL,DE,BC y A.
 408+ A00B              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 409+ A00B              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 410+ A00B
 411+ A00B              Colision_Entidad_Amadeus
 412+ A00B
 413+ A00B              ; Posible contacto de entidad con Amadeus. ?????
 414+ A00B
 415+ A00B              ; Exclusiones:
 416+ A00B
 417+ A00B 3A 53 8C         ld a,(Shield)
 418+ A00E A7               and a
 419+ A00F C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 420+ A010
 421+ A010 21 2D 8C         ld hl,Ctrl_3
 422+ A013 CB 76            bit 6,(hl)
 423+ A015 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 424+ A016
 425+ A016 21 34 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 426+ A019 CB 56            bit 2,(hl)
 427+ A01B C0               ret nz
 428+ A01C
 429+ A01C 3A BD 8B     	ld a,(Coordenada_y)
 430+ A01F FE 14        	cp $14
 431+ A021 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 432+ A022
 433+ A022 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 434+ A025 A7               and a
 435+ A026 C0               ret nz
 436+ A027
 437+ A027              Genera_coordenadas_X
 438+ A027
 439+ A027              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 440+ A027              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 441+ A027
 442+ A027              ;   Limpiamos almacenes.
 443+ A027
 444+ A027              ;    call Limpia_Coordenadas_X
 445+ A027
 446+ A027              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 447+ A027
 448+ A027 21 39 8C         ld hl,Coordenadas_X_Entidad
 449+ A02A 3A BC 8B         ld a,(Coordenada_X)
 450+ A02D CD 4F A0         call Guarda_coordenadas_X
 451+ A030
 452+ A030              ;   Almacenamos las coordenadas X de Amadeus.
 453+ A030
 454+ A030 3A 71 89         ld a,(CX_Amadeus)
 455+ A033 CD 4F A0         call Guarda_coordenadas_X
 456+ A036 CD 63 A0         call Compara_coordenadas_X
 457+ A039 C0               ret nz
 458+ A03A
 459+ A03A 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 460+ A03C 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 461+ A03F
 462+ A03F 2A FB 8B         ld hl,(Puntero_store_caja)
 463+ A042 2C               inc l
 464+ A043 2C               inc l
 465+ A044 2C               inc l
 466+ A045 2C               inc l
 467+ A046 22 35 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 468+ A049
 469+ A049 21 34 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 470+ A04C CB D6            set 2,(hl)
 471+ A04E
 472+ A04E C9               ret
 473+ A04F
 474+ A04F               ; ----- ----- ----- ----- -----
 475+ A04F
 476+ A04F 77           Guarda_coordenadas_X ld (hl),a
 477+ A050 3C               inc a
 478+ A051 2C               inc l
 479+ A052 77               ld (hl),a
 480+ A053 3C               inc a
 481+ A054 2C               inc l
 482+ A055 77               ld (hl),a
 483+ A056 2C               inc l
 484+ A057 C9               ret
 485+ A058
 486+ A058 AF           Limpia_Coordenadas_X xor a
 487+ A059 06 06            ld b,6
 488+ A05B 21 3C 8C         ld hl,Coordenadas_X_Amadeus
 489+ A05E 77           1 ld (hl),a
 490+ A05F 23               inc hl
 491+ A060 10 FC            djnz 1B
 492+ A062 C9               ret
 493+ A063
 494+ A063              ; ----- ----- ----- ----- -----
 495+ A063
 496+ A063              Compara_coordenadas_X
 497+ A063
 498+ A063 DD 21 39 8C      ld ix,Coordenadas_X_Entidad
 499+ A067 DD 7E 00         ld a,(ix+0)
 500+ A06A CD 78 A0         call Comparando
 501+ A06D C8               ret z
 502+ A06E
 503+ A06E 3C               inc a
 504+ A06F CD 87 A0         call Comparando_1
 505+ A072 C8               ret z
 506+ A073
 507+ A073 3C               inc a
 508+ A074 CD 87 A0         call Comparando_1
 509+ A077 C9               ret
 510+ A078
 511+ A078              ; ----- ----- ----- ----- -----
 512+ A078              ;
 513+ A078              ;   4/12/23
 514+ A078              ;
 515+ A078              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 516+ A078
 517+ A078              Comparando
 518+ A078
 519+ A078 DD 2C            inc ixl
 520+ A07A DD 2C            inc ixl
 521+ A07C DD 2C            inc ixl
 522+ A07E
 523+ A07E DD 46 00         ld b,(ix+0)
 524+ A081 DD 4E 01         ld c,(ix+1)
 525+ A084 DD 56 02         ld d,(ix+2)
 526+ A087
 527+ A087 B8           Comparando_1 cp b
 528+ A088 C8               ret z
 529+ A089 B9               cp c
 530+ A08A C8               ret z
 531+ A08B BA               cp d
 532+ A08C C9               ret
 533+ A08D
 534+ A08D              ; -----------------------------------------------------------------------
 535+ A08D              ;
 536+ A08D              ;   04/7/24
 537+ A08D              ;
 538+ A08D
 539+ A08D              Detecta_colision_nave_entidad
 540+ A08D
 541+ A08D              ; Exclusiones:
 542+ A08D
 543+ A08D              ; Salimos de la rutina si no hay advertencia de posible colisión.
 544+ A08D
 545+ A08D 21 34 8C     	ld hl,Impacto2
 546+ A090 CB 56        	bit 2,(hl)
 547+ A092 C8           	ret z
 548+ A093
 549+ A093              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 550+ A093
 551+ A093 2A 77 89         ld hl,(Pamm_Amadeus)
 552+ A096 CD 58 90         call Extrae_address
 553+ A099 54               ld d,h
 554+ A09A 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 555+ A09B
 556+ A09B 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 557+ A09E 06 10            ld b,16                                        ; Contador de scanlines en B.
 558+ A0A0 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 559+ A0A3
 560+ A0A3 C5           1 push bc
 561+ A0A4 06 03            ld b,3
 562+ A0A6 E5               push hl
 563+ A0A7
 564+ A0A7              ; .db
 565+ A0A7
 566+ A0A7 1A           3 ld a,(de)
 567+ A0A8 A7               and a
 568+ A0A9 20 03            jr nz,4F
 569+ A0AB
 570+ A0AB 2C               inc l
 571+ A0AC 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 572+ A0AE
 573+ A0AE ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 574+ A0B0 28 04            jr z,2F
 575+ A0B2
 576+ A0B2              ; Impacto.
 577+ A0B2 FD 2D            dec iyl
 578+ A0B4 28 22            jr z,5F
 579+ A0B6
 580+ A0B6 1C           2 inc e
 581+ A0B7 10 EE            djnz 3B
 582+ A0B9
 583+ A0B9 E1               pop hl
 584+ A0BA
 585+ A0BA              ; Hay salto de línea en el puntero de impresión ???
 586+ A0BA
 587+ A0BA 7C               ld a,h
 588+ A0BB D6 57            sub $57
 589+ A0BD 20 0A            jr nz,6F
 590+ A0BF
 591+ A0BF              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 592+ A0BF
 593+ A0BF 2A 75 89         ld hl,(p.imp.amadeus)
 594+ A0C2 3E 20            ld a,$20
 595+ A0C4 A7               and a
 596+ A0C5 85               add l
 597+ A0C6 6F               ld l,a
 598+ A0C7 18 01            jr 7F
 599+ A0C9
 600+ A0C9 24           6 inc h
 601+ A0CA
 602+ A0CA C1           7 pop bc
 603+ A0CB 10 D6            djnz 1B
 604+ A0CD
 605+ A0CD              ;   Fin de la comparativa.
 606+ A0CD
 607+ A0CD              ;   NO HAY COLISIÓN !!!!!.
 608+ A0CD              ;
 609+ A0CD              ;   .db (Impacto) de Amadeus a "0".
 610+ A0CD              ;   RES el bit2 de (Impacto2).
 611+ A0CD              ;
 612+ A0CD              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 613+ A0CD              ;   Lo colocamos a "0".
 614+ A0CD
 615+ A0CD 21 34 8C         ld hl,Impacto2
 616+ A0D0 CB 96            res 2,(hl)
 617+ A0D2 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)
 618+ A0D5 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 619+ A0D7 C9               ret
 620+ A0D8
 621+ A0D8              ;   COLISIÓN !!!!!.
 622+ A0D8              ;
 623+ A0D8              ;   .db (Impacto) de Amadeus a "1".
 624+ A0D8              ;   SET el bit3 de (Impacto2).
 625+ A0D8              ;
 626+ A0D8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 627+ A0D8
 628+ A0D8 E1           5 pop hl
 629+ A0D9 C1               pop bc
 630+ A0DA
 631+ A0DA 21 74 89         ld hl,Impacto_Amadeus
 632+ A0DD 36 01            ld (hl),1
 633+ A0DF 21 34 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 634+ A0E2 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 635+ A0E4
 636+ A0E4 11 C0 87         ld de,Indice_Explosion_entidades
 637+ A0E7 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 638+ A0EA
 639+ A0EA 23               inc hl
 640+ A0EB 23               inc hl
 641+ A0EC 23               inc hl
 642+ A0ED
 643+ A0ED 73               ld (hl),e
 644+ A0EE 23               inc hl
 645+ A0EF 72               ld (hl),d
 646+ A0F0
 647+ A0F0              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 648+ A0F0
 649+ A0F0 11 60 88         ld de,Indice_Explosion_Amadeus
 650+ A0F3 21 77 89         ld hl,Pamm_Amadeus
 651+ A0F6
 652+ A0F6 73               ld (hl),e
 653+ A0F7 23               inc hl
 654+ A0F8 72               ld (hl),d
 655+ A0F9
 656+ A0F9 C9               ret
 657+ A0FA
 658+ A0FA
 659+ A0FA
# file closed: Disparo.asm
2270  A0FA
2271  A0FA              	SAVESNA "Pruebas.sna", START
2272  A0FA
2273  A0FA
2274  A0FA
2275  A0FA
# file closed: Banco_de_pruebas.asm
