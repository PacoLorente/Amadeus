# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 57 8E     	call Frame
  15  A104
  16  A104 ED 4D        	reti
  17  A106
  18  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  A106
  20  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
# file closed: Sprites_e_indices.asm
  21  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C
  95+ 856C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 856C
  97+ 856C C7 85        	defw Caja_1
  98+ 856E 0A 86        	defw Caja_2
  99+ 8570 4D 86        	defw Caja_3
 100+ 8572 90 86        	defw Caja_4
 101+ 8574 D3 86        	defw Caja_5
 102+ 8576 16 87        	defw Caja_6
 103+ 8578 59 87        	defw Caja_7
 104+ 857A 9C 87        	defw Caja_8
 105+ 857C DF 87        	defw Caja_9
 106+ 857E 22 88        	defw Caja_10
 107+ 8580              ;	...
 108+ 8580              ;	...
 109+ 8580              ;	+ entidades ...
 110+ 8580 00 00        	defw 0
 111+ 8582 00 00        	defw 0
 112+ 8584
 113+ 8584              ; ---------- ---------- ---------- ---------- ----------
 114+ 8584
 115+ 8584 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8586 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8588 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 858A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 858D
 120+ 858D 05           	db %00000101									; (Attr).
 121+ 858E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8590 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8592
 124+ 8592 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8594 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8596
 127+ 8596 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8598 04           	db 4 											; (Cuad_objeto).
 129+ 8599 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 859D
 131+ 859D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 859E
 133+ 859E 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A0 00 00        	defw 0											;	" " " " " " "
 135+ 85A2 00 00        	defw 0											;	" " " " " " "
 136+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A8
 138+ 85A8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85AA 00 00        	defw 0											;	" " " " " " "
 140+ 85AC 00 00        	defw 0											;	" " " " " " "
 141+ 85AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85B2
 143+ 85B2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85B4
 145+ 85B4 00           	db 0											; (Autoriza_movimiento).
 146+ 85B5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B9 00 00
 147+ 85BB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85BE
 149+ 85BE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85C0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85C1
 152+ 85C1 00           	db 0 											; (Columnas).
 153+ 85C2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85C4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85C7
 156+ 85C7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85C7
 158+ 85C7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85C9 00 00        	defw 0											; (Posicion_actual).
 160+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85D0
 163+ 85D0 00           	db %00000000 									; (Attr).
 164+ 85D1
 165+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85D9
 170+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85DB 00           	db 0											; (Cuad_objeto).
 172+ 85DC
 173+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 85E0
 175+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 85E1
 177+ 85E1 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 85E3 00 00        	defw 0											;	" " " " " " "
 179+ 85E5 00 00        	defw 0											;	" " " " " " "
 180+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85EB
 182+ 85EB 00 00        	db 0,0											; Variables_de_pintado
 183+ 85ED 00 00        	defw 0											;	" " " " " " "
 184+ 85EF 00 00        	defw 0											;	" " " " " " "
 185+ 85F1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85F5
 187+ 85F5 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 85F7
 189+ 85F7 00           	db 0											; (Autoriza_movimiento).
 190+ 85F8 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 85FC 00 00
 191+ 85FE 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8601
 193+ 8601 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8603 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8604
 196+ 8604 00           	db 0 											; (Columnas).
 197+ 8605 00 00        	defw 0											; (Limite_horizontal).
 198+ 8607 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 860A
 200+ 860A              ; ---------- ---------- ---------- ---------- ----------
 201+ 860A
 202+ 860A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 860C 00 00        	defw 0											; (Posicion_actual).
 204+ 860E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8610 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8613
 207+ 8613 00           	db %00000000 									; (Attr).
 208+ 8614
 209+ 8614 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8616 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 861A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 861C
 214+ 861C 00 00        	defw 0											; (Posicion_inicio).
 215+ 861E 00           	db 0											; (Cuad_objeto).
 216+ 861F
 217+ 861F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8623
 219+ 8623 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8624
 221+ 8624 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8626 00 00        	defw 0											;	" " " " " " "
 223+ 8628 00 00        	defw 0											;	" " " " " " "
 224+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 862E
 226+ 862E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8630 00 00        	defw 0											;	" " " " " " "
 228+ 8632 00 00        	defw 0											;	" " " " " " "
 229+ 8634 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8638
 231+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 863A
 233+ 863A 00           	db 0											; (Autoriza_movimiento).
 234+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 863F 00 00
 235+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8644
 237+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8647
 240+ 8647 00           	db 0 											; (Columnas).
 241+ 8648 00 00        	defw 0											; (Limite_horizontal).
 242+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 864D
 244+ 864D              ; ---------- ---------- ---------- ---------- ----------
 245+ 864D
 246+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 864F 00 00        	defw 0											; (Posicion_actual).
 248+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8656
 251+ 8656 00           	db %00000000 									; (Attr).
 252+ 8657
 253+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 865F
 258+ 865F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8661 00           	db 0											; (Cuad_objeto).
 260+ 8662
 261+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8666
 263+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8667
 265+ 8667 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8669 00 00        	defw 0											;	" " " " " " "
 267+ 866B 00 00        	defw 0											;	" " " " " " "
 268+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8671
 270+ 8671 00 00        	db 0,0											; Variables_de_pintado
 271+ 8673 00 00        	defw 0											;	" " " " " " "
 272+ 8675 00 00        	defw 0											;	" " " " " " "
 273+ 8677 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 867B
 275+ 867B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 867D
 277+ 867D 00           	db 0											; (Autoriza_movimiento).
 278+ 867E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 8682 00 00
 279+ 8684 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 8687
 281+ 8687 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 8689 00           	db 0											; (Cola_de_desplazamiento).
 283+ 868A
 284+ 868A 00           	db 0 											; (Columnas).
 285+ 868B 00 00        	defw 0											; (Limite_horizontal).
 286+ 868D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 8690
 288+ 8690              ; ---------- ---------- ---------- ---------- ----------
 289+ 8690
 290+ 8690 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 8692 00 00        	defw 0											; (Posicion_actual).
 292+ 8694 00 00        	defw 0 											; (Puntero_objeto).
 293+ 8696 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 8699
 295+ 8699 00           	db %00000000 									; (Attr).
 296+ 869A
 297+ 869A 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 869C 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 869E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86A2
 302+ 86A2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86A4 00           	db 0											; (Cuad_objeto).
 304+ 86A5
 305+ 86A5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86A9
 307+ 86A9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86AA
 309+ 86AA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86AC 00 00        	defw 0											;	" " " " " " "
 311+ 86AE 00 00        	defw 0											;	" " " " " " "
 312+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86B4
 314+ 86B4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86B6 00 00        	defw 0											;	" " " " " " "
 316+ 86B8 00 00        	defw 0											;	" " " " " " "
 317+ 86BA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86BE
 319+ 86BE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86C0
 321+ 86C0 00           	db 0											; (Autoriza_movimiento).
 322+ 86C1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86C5 00 00
 323+ 86C7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86CA
 325+ 86CA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86CC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86CD
 328+ 86CD 00           	db 0 											; (Columnas).
 329+ 86CE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86D0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86D3
 332+ 86D3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86D3
 334+ 86D3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86D5 00 00        	defw 0											; (Posicion_actual).
 336+ 86D7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86D9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86DC
 339+ 86DC 00           	db %00000000 									; (Attr).
 340+ 86DD
 341+ 86DD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86DF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 86E1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 86E3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 86E5
 346+ 86E5 00 00        	defw 0											; (Posicion_inicio).
 347+ 86E7 00           	db 0											; (Cuad_objeto).
 348+ 86E8
 349+ 86E8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 86EC
 351+ 86EC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 86ED
 353+ 86ED 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 86EF 00 00        	defw 0											;	" " " " " " "
 355+ 86F1 00 00        	defw 0											;	" " " " " " "
 356+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86F7
 358+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 359+ 86F9 00 00        	defw 0											;	" " " " " " "
 360+ 86FB 00 00        	defw 0											;	" " " " " " "
 361+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8701
 363+ 8701 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8703
 365+ 8703 00           	db 0											; (Autoriza_movimiento).
 366+ 8704 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8708 00 00
 367+ 870A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 870D
 369+ 870D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 870F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8710
 372+ 8710 00           	db 0 											; (Columnas).
 373+ 8711 00 00        	defw 0											; (Limite_horizontal).
 374+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8716
 376+ 8716              ; ---------- ---------- ---------- ---------- ----------
 377+ 8716
 378+ 8716 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8718 00 00        	defw 0											; (Posicion_actual).
 380+ 871A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 871C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 871F
 383+ 871F 00           	db %00000000 									; (Attr).
 384+ 8720
 385+ 8720 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8722 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8724 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8728
 390+ 8728 00 00        	defw 0											; (Posicion_inicio).
 391+ 872A 00           	db 0											; (Cuad_objeto).
 392+ 872B
 393+ 872B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 872F
 395+ 872F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8730
 397+ 8730 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8732 00 00        	defw 0											;	" " " " " " "
 399+ 8734 00 00        	defw 0											;	" " " " " " "
 400+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 873A
 402+ 873A 00 00        	db 0,0											; Variables_de_pintado
 403+ 873C 00 00        	defw 0											;	" " " " " " "
 404+ 873E 00 00        	defw 0											;	" " " " " " "
 405+ 8740 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8744
 407+ 8744 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8746
 409+ 8746 00           	db 0											; (Autoriza_movimiento).
 410+ 8747 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 874B 00 00
 411+ 874D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8750
 413+ 8750 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8752 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8753
 416+ 8753 00           	db 0 											; (Columnas).
 417+ 8754 00 00        	defw 0											; (Limite_horizontal).
 418+ 8756 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8759
 420+ 8759              ; ---------- ---------- ---------- ---------- ----------
 421+ 8759
 422+ 8759 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 875B 00 00        	defw 0											; (Posicion_actual).
 424+ 875D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 875F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8762
 427+ 8762 00           	db %00000000 									; (Attr).
 428+ 8763
 429+ 8763 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8765 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8769 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 876B
 434+ 876B 00 00        	defw 0											; (Posicion_inicio).
 435+ 876D 00           	db 0											; (Cuad_objeto).
 436+ 876E
 437+ 876E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8772
 439+ 8772 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8773
 441+ 8773 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8775 00 00        	defw 0											;	" " " " " " "
 443+ 8777 00 00        	defw 0											;	" " " " " " "
 444+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 877D
 446+ 877D 00 00        	db 0,0											; Variables_de_pintado
 447+ 877F 00 00        	defw 0											;	" " " " " " "
 448+ 8781 00 00        	defw 0											;	" " " " " " "
 449+ 8783 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 8787
 451+ 8787 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 8789
 453+ 8789 00           	db 0											; (Autoriza_movimiento).
 454+ 878A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 878E 00 00
 455+ 8790 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 8793
 457+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 459+ 8796
 460+ 8796 00           	db 0 											; (Columnas).
 461+ 8797 00 00        	defw 0											; (Limite_horizontal).
 462+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 879C
 464+ 879C              ; ---------- ---------- ---------- ---------- ----------
 465+ 879C
 466+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 879E 00 00        	defw 0											; (Posicion_actual).
 468+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87A5
 471+ 87A5 00           	db %00000000 									; (Attr).
 472+ 87A6
 473+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87AE
 478+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87B0 00           	db 0											; (Cuad_objeto).
 480+ 87B1
 481+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87B5
 483+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87B6
 485+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87B8 00 00        	defw 0											;	" " " " " " "
 487+ 87BA 00 00        	defw 0											;	" " " " " " "
 488+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87C0
 490+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87C2 00 00        	defw 0											;	" " " " " " "
 492+ 87C4 00 00        	defw 0											;	" " " " " " "
 493+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87CA
 495+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87CC
 497+ 87CC 00           	db 0											; (Autoriza_movimiento).
 498+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87D1 00 00
 499+ 87D3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87D6
 501+ 87D6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87D8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87D9
 504+ 87D9 00           	db 0 											; (Columnas).
 505+ 87DA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87DC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87DF
 508+ 87DF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87DF
 510+ 87DF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 87E1 00 00        	defw 0											; (Posicion_actual).
 512+ 87E3 00 00        	defw 0 											; (Puntero_objeto).
 513+ 87E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 87E8
 515+ 87E8 00           	db %00000000 									; (Attr).
 516+ 87E9
 517+ 87E9 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 87EB 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 87ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 87EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 87F1
 522+ 87F1 00 00        	defw 0											; (Posicion_inicio).
 523+ 87F3 00           	db 0											; (Cuad_objeto).
 524+ 87F4
 525+ 87F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 87F8
 527+ 87F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 87F9
 529+ 87F9 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 87FB 00 00        	defw 0											;	" " " " " " "
 531+ 87FD 00 00        	defw 0											;	" " " " " " "
 532+ 87FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8803
 534+ 8803 00 00        	db 0,0											; Variables_de_pintado
 535+ 8805 00 00        	defw 0											;	" " " " " " "
 536+ 8807 00 00        	defw 0											;	" " " " " " "
 537+ 8809 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 880D
 539+ 880D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 880F
 541+ 880F 00           	db 0											; (Autoriza_movimiento).
 542+ 8810 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8814 00 00
 543+ 8816 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8819
 545+ 8819 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 881B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 881C
 548+ 881C 00           	db 0 											; (Columnas).
 549+ 881D 00 00        	defw 0											; (Limite_horizontal).
 550+ 881F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8822
 552+ 8822              ; ---------- ---------- ---------- ---------- ----------
 553+ 8822
 554+ 8822 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8824 00 00        	defw 0											; (Posicion_actual).
 556+ 8826 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8828 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 882B
 559+ 882B 00           	db %00000000 									; (Attr).
 560+ 882C
 561+ 882C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 882E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8832 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8834
 566+ 8834 00 00        	defw 0											; (Posicion_inicio).
 567+ 8836 00           	db 0											; (Cuad_objeto).
 568+ 8837
 569+ 8837 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 883B
 571+ 883B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 883C
 573+ 883C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 883E 00 00        	defw 0											;	" " " " " " "
 575+ 8840 00 00        	defw 0											;	" " " " " " "
 576+ 8842 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8846
 578+ 8846 00 00        	db 0,0											; Variables_de_pintado
 579+ 8848 00 00        	defw 0											;	" " " " " " "
 580+ 884A 00 00        	defw 0											;	" " " " " " "
 581+ 884C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8850
 583+ 8850 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8852
 585+ 8852 00           	db 0											; (Autoriza_movimiento).
 586+ 8853 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8857 00 00
 587+ 8859 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 885C
 589+ 885C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 885E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 885F
 592+ 885F 00           	db 0 											; (Columnas).
 593+ 8860 00 00        	defw 0											; (Limite_horizontal).
 594+ 8862 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8865
 596+ 8865              ; -------------------------------------------------------------------------------------
 597+ 8865              ;
 598+ 8865              ;	20/05/23
 599+ 8865              ;
 600+ 8865              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8865              ;
 602+ 8865              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8865              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8865              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8865              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8865
 607+ 8865              Indice_de_entidades
 608+ 8865
 609+ 8865 6F 88        	defw Entidad_1
 610+ 8867 7F 88        	defw Entidad_2
 611+ 8869 8F 88        	defw Entidad_3
 612+ 886B 9F 88        	defw Entidad_4
 613+ 886D AF 88        	defw Entidad_5
 614+ 886F
 615+ 886F              ;	BADSAT, (Satélite malvado).
 616+ 886F
 617+ 886F 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 618+ 8871 04           	db %00000100									; (Attr).
 619+ 8872 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 620+ 8874 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 621+ 8876 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 622+ 8878 01           	db 1											; (Cuad_objeto).
 623+ 8879 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 624+ 887D F9 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 625+ 887F
 626+ 887F 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 627+ 8881 02           	db %00000010									; (Attr).
 628+ 8882 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 629+ 8884 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 630+ 8886 40 50        	defw $5040                                      ; (Posicion_inicio).
 631+ 8888 01           	db 1											; (Cuad_objeto).
 632+ 8889 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 633+ 888D F9 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 634+ 888F
 635+ 888F 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 636+ 8891 04           	db %00000100									; (Attr).
 637+ 8892 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 638+ 8894 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 639+ 8896 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 640+ 8898 01           	db 1											; (Cuad_objeto).
 641+ 8899 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 642+ 889D F9 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 643+ 889F
 644+ 889F 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 645+ 88A1 01           	db %00000001									; (Attr).
 646+ 88A2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 647+ 88A4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 648+ 88A6 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 649+ 88A8 01           	db 1											; (Cuad_objeto).
 650+ 88A9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 651+ 88AD F9 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 652+ 88AF
 653+ 88AF 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 654+ 88B1 01           	db %00000001									; (Attr).
 655+ 88B2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 656+ 88B4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 657+ 88B6 07 40        	defw $4007                                      ; (Posicion_inicio).
 658+ 88B8 01           	db 1											; (Cuad_objeto).
 659+ 88B9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 660+ 88BD F9 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 661+ 88BF
# file closed: Cajas_y_disparos.asm
  22  88BF              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BF              ; 13/05/23
   2+ 88BF
   3+ 88BF              Indice_de_niveles
   4+ 88BF
   5+ 88BF CD 88        	defw Nivel_1
   6+ 88C1 CF 88        	defw Nivel_2
   7+ 88C3 DC 88        	defw Nivel_3
   8+ 88C5 EC 88        	defw Nivel_4
   9+ 88C7 FE 88        	defw Nivel_5
  10+ 88C9
  11+ 88C9              ;	...
  12+ 88C9              ;	...
  13+ 88C9              ;	+ Niveles ...
  14+ 88C9
  15+ 88C9 00 00        	defw 0
  16+ 88CB 00 00        	defw 0
  17+ 88CD
  18+ 88CD 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CE 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88CF 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88D0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D4 01 02
  22+ 88D6 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88DA 01 02
  23+ 88DC 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88E1 01
  25+ 88E2 03 01 01 01  	db 3,1,1,1,1
  25+ 88E6 01
  26+ 88E7 03 01 01 01  	db 3,1,1,1,1
  26+ 88EB 01
  27+ 88EC 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88ED 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88F1 01
  29+ 88F2 04 01 01 01  	db 4,1,1,1,1
  29+ 88F6 01
  30+ 88F7 04 01 01 01  	db 4,1,1,1,1
  30+ 88FB 01
  31+ 88FC 02 03        	db 2,3
  32+ 88FE 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FF 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8903 01
  34+ 8904 05 01 01 01  	db 5,1,1,1,1
  34+ 8908 01
  35+ 8909 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890D 01
  36+ 890E 05 01 01 01  	db 5,1,1,1,1
  36+ 8912 01
  37+ 8913
  38+ 8913              ;---------------------------------------------------------------------------------------------------------------
  39+ 8913              ;
  40+ 8913              ;   21/5/23
  41+ 8913              ;
  42+ 8913              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8913              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8913              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8913              ;	_en la caja DRAW correspondiente.
  46+ 8913              ;
  47+ 8913              ;	MODIFICA: HL,DE y A.
  48+ 8913              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8913
  50+ 8913              Inicializa_Punteros_de_nivel
  51+ 8913
  52+ 8913 21 BF 88     	ld hl,Indice_de_niveles
  53+ 8916 22 4F 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8919 CD 2D 8D     	call Extrae_address
  55+ 891C 7E           	ld a,(hl)
  56+ 891D 32 15 8A     	ld (Numero_de_entidades),a
  57+ 8920 23           	inc hl
  58+ 8921 22 51 8A     	ld (Datos_de_nivel),hl
  59+ 8924 C9           	ret
  60+ 8925
  61+ 8925              ;---------------------------------------------------------------------------------------------------------------
  62+ 8925              ;
  63+ 8925              ;   13/5/23
  64+ 8925              ;
  65+ 8925              ;	Destruye A,BC,HL,DE
  66+ 8925
  67+ 8925              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8925              ;	_del juego.
  69+ 8925
  70+ 8925              Prepara_cajas
  71+ 8925
  72+ 8925              ; Preparamos los punteros de las cajas.
  73+ 8925
  74+ 8925 21 6C 85     	ld hl,Indice_de_cajas
  75+ 8928 CD 2D 8D     	call Extrae_address
  76+ 892B CD 68 89     	call Avanza_caja
  77+ 892E
  78+ 892E CD AC 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8931
  80+ 8931 2A 51 8A     	ld hl,(Datos_de_nivel)
  81+ 8934
  82+ 8934              ; HL está en los datos del nivel correspondiente.
  83+ 8934              ; B actuará como contador de cajas.
  84+ 8934
  85+ 8934 C5           1 push bc
  86+ 8935
  87+ 8935 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8936 CD 59 89     	call PreparaBC
  89+ 8939
  90+ 8939 21 65 88     	ld hl,Indice_de_entidades
  91+ 893C CD 61 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893F 22 1B 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8942
  94+ 8942 CD 72 89     	call Datos_de_entidad_a_caja
  95+ 8945
  96+ 8945 2A 13 8A     	ld hl,(Indice_restore_caja)
  97+ 8948 CD 2D 8D     	call Extrae_address
  98+ 894B CD 68 89     	call Avanza_caja
  99+ 894E
 100+ 894E 2A 51 8A     	ld hl,(Datos_de_nivel)
 101+ 8951 23           	inc hl
 102+ 8952 22 51 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8955
 104+ 8955 C1           	pop bc
 105+ 8956 10 DC        	djnz 1B
 106+ 8958 C9           	ret
 107+ 8959
 108+ 8959 CB 27        PreparaBC sla a
 109+ 895B D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895D 4F           	ld c,a
 111+ 895E 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8960 C9           	ret
 113+ 8961
 114+ 8961 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8962 ED 4A        	adc hl,bc
 116+ 8964 CD 2D 8D     	call Extrae_address
 117+ 8967 C9           	ret
 118+ 8968
 119+ 8968 22 0F 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 896B 13           	inc de
 121+ 896C 13           	inc de
 122+ 896D EB           	ex de,hl
 123+ 896E 22 13 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8971 C9           	ret
 125+ 8972
 126+ 8972              Datos_de_entidad_a_caja
 127+ 8972
 128+ 8972              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8972
 130+ 8972
 131+ 8972 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8976
 133+ 8976 01 02 00     	ld bc,2
 134+ 8979 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 897B
 136+ 897B 01 07 00     	ld bc,7
 137+ 897E CD A6 89     	call Situa_DE
 138+ 8981
 139+ 8981 01 05 00     	ld bc,5
 140+ 8984 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8986
 142+ 8986 01 04 00     	ld bc,4
 143+ 8989 CD A6 89     	call Situa_DE
 144+ 898C
 145+ 898C 01 07 00     	ld bc,7
 146+ 898F ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8991
 148+ 8991 01 18 00     	ld bc,24
 149+ 8994 CD A6 89     	call Situa_DE
 150+ 8997
 151+ 8997 01 02 00     	ld bc,2
 152+ 899A ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 899C
 154+ 899C              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 899C              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 899C
 157+ 899C 01 0F 00     	ld bc,15									; *****
 158+ 899F CD A6 89     	call Situa_DE
 159+ 89A2
 160+ 89A2 3E 03        	ld a,3
 161+ 89A4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A5
 163+ 89A5 C9           	ret
 164+ 89A6
 165+ 89A6 EB           Situa_DE ex de,hl
 166+ 89A7 A7           	and a
 167+ 89A8 ED 4A        	adc hl,bc
 168+ 89AA EB           	ex de,hl
 169+ 89AB C9           	ret
 170+ 89AC
 171+ 89AC              ;---------------------------------------------------------------------------------------------------------------
 172+ 89AC              ;
 173+ 89AC              ;	21/5/23
 174+ 89AC              ;
 175+ 89AC              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89AC              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89AC              ;
 178+ 89AC              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89AC              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89AC              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89AC              ;
 182+ 89AC              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89AC              ;	MODIFICA: A y B.
 184+ 89AC              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89AC
 186+ 89AC              Admin_num_entidades
 187+ 89AC
 188+ 89AC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89AC
 190+ 89AC 3A 15 8A     	ld a,(Numero_de_entidades)
 191+ 89AF A7           	and a
 192+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89B0              ;	jr z,$
 194+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89B0
 196+ 89B0 20 03        	jr nz,3F
 197+ 89B2
 198+ 89B2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89B2
 200+ 89B2 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B5
 202+ 89B5
 203+ 89B5 3A 15 8A     3 ld a,(Numero_de_entidades)
 204+ 89B8 FE 0A        	cp 10
 205+ 89BA 38 08        	jr c,1F
 206+ 89BC
 207+ 89BC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89BC              ; Actualizamos variables.
 209+ 89BC
 210+ 89BC 3E 0A        	ld a,10
 211+ 89BE 32 16 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89C1 47           	ld b,a
 213+ 89C2 18 04        	jr 2F
 214+ 89C4
 215+ 89C4              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C4              ; (Numero_de_entidades)="0".
 217+ 89C4
 218+ 89C4 32 16 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C7 47           	ld b,a
 220+ 89C8 C9           2 ret
# file closed: Niveles.asm
  23  89C9
  24  89C9              ; ******************************************************************************************************************************************************************************************
  25  89C9              ; Constantes.
  26  89C9              ; ******************************************************************************************************************************************************************************************
  27  89C9              ;
  28  89C9              ; 25/05/23
  29  89C9              ;
  30  89C9              ; Constantes generales.
  31  89C9              ;
  32  89C9
  33  89C9              Sprite_vacio equ $f000
  34  89C9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  89C9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  89C9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  89C9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  89C9
  39  89C9              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  89C9              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  89C9              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  89C9              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  89C9              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  89C9              ;                               				        ; De momento situamos este almacén en $7060.
  45  89C9              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  89C9              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  89C9              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  89C9              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  89C9              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  89C9              Album_de_fotos_disparos_3 equ $739d	; (7396h - 7418h).
  51  89C9
  52  89C9              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  89C9
  54  89C9              ; ******************************************************************************************************************************************************************************************
  55  89C9              ; Variables.
  56  89C9              ; ******************************************************************************************************************************************************************************************
  57  89C9              ;
  58  89C9              ; 28/07/23
  59  89C9              ;
  60  89C9              ; Variables de DRAW. (Motor principal).
  61  89C9              ;
  62  89C9              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  89C9
  64  89C9 00           Filas db 0												; Filas. [DRAW]
  65  89CA 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  89CB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  89CD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  89CF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  89D0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  89D1
  71  89D1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  89D1
  73  89D1 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  89D2              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  89D2              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  89D2 00           Attr db 0												; Atributos de la entidad:
  77  89D3
  78  89D3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  89D3              ;
  80  89D3              ;	COLORES: 0 ..... NEGRO
  81  89D3              ;    		 1 ..... AZUL
  82  89D3              ; 			 2 ..... ROJO
  83  89D3              ;			 3 ..... MAGENTA
  84  89D3              ; 			 4 ..... VERDE
  85  89D3              ; 			 5 ..... CIAN
  86  89D3              ;			 6 ..... AMARILLO
  87  89D3              ; 			 7 ..... BLANCO
  88  89D3
  89  89D3 00 00        Indice_Sprite_der defw 0
  90  89D5 00 00        Indice_Sprite_izq defw 0
  91  89D7 00 00        Puntero_DESPLZ_der defw 0
  92  89D9 00 00        Puntero_DESPLZ_izq defw 0
  93  89DB
  94  89DB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  89DD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  89DE
  97  89DE              ; Variables de objeto. (Características).
  98  89DE
  99  89DE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  89DF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  89E0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  89E1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  89E2
 104  89E2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  89E3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  89E3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  89E3
 108  89E3 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 109  89E5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89E7 00 00        	defw 0
 111  89E9 00 00 00 00  	db 0,0,0,0
 112  89ED
 113  89ED 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 114  89EF 00 00        	defw 0
 115  89F1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 116  89F3 00 00 00 00  	db 0,0,0,0
 117  89F7
 118  89F7              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 119  89F7
 120  89F7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 121  89F8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 122  89F8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 123  89F8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 124  89F8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 125  89F8              ;
 126  89F8              ; 														DESCRIPCIÖN:
 127  89F8              ;
 128  89F8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 129  89F8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 130  89F8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 131  89F8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 132  89F8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 133  89F8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 134  89F8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 135  89F8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 136  89F8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 137  89F8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 138  89F8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 139  89F8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 140  89F8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 141  89F8              ;
 142  89F8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 143  89F8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 144  89F8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 145  89F8
 146  89F8 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 147  89F9
 148  89F9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 149  89F9
 150  89F9 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 151  89FA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 152  89FC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 153  89FE 00 00        Puntero_indice_mov_bucle defw 0							;
 154  8A00              ;
 155  8A00              ;
 156  8A00 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 157  8A01              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 158  8A01              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 159  8A01 00           Incrementa_puntero_backup db 0
 160  8A02 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 161  8A03              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 162  8A03 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 163  8A04 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 164  8A05 00           Cola_de_desplazamiento db 0								; Este byte indica:
 165  8A06              ;
 166  8A06              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 167  8A06              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 168  8A06              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 169  8A06              ;
 170  8A06              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 171  8A06              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 172  8A06              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 173  8A06              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 174  8A06              ;
 175  8A06              ;														;	"$ff" ..... Bucle infinito de repetición.
 176  8A06              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 177  8A06              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 178  8A06
 179  8A06
 180  8A06              ; Variables de funcionamiento. [DRAW].
 181  8A06
 182  8A06 00           Columnas db 0
 183  8A07 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 184  8A09              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  8A09 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  8A0A
 187  8A0A              ; variables de control general.
 188  8A0A
 189  8A0A 00           Ctrl_2 db 0
 190  8A0B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 191  8A0B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 192  8A0B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 193  8A0B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 194  8A0B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 195  8A0B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 196  8A0B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 197  8A0B              ;
 198  8A0B              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 199  8A0B              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 200  8A0B              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 201  8A0B              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 202  8A0B              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 203  8A0B
 204  8A0B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 205  8A0C
 206  8A0C              ;! 67 Bytes por entidad.
 207  8A0C
 208  8A0C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 209  8A0C              ;					         		---------;      ;---------
 210  8A0C
 211  8A0C
 212  8A0C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 213  8A0C
 214  8A0C 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 215  8A0D
 216  8A0D              ;														DESCRIPCIÓN:
 217  8A0D              ;
 218  8A0D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 219  8A0D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 220  8A0D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 221  8A0D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 222  8A0D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 223  8A0D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 224  8A0D
 225  8A0D              ;														BIT 3, Recarga de nueva oleada.
 226  8A0D              ;														BIT 4, Recarga de nueva oleada.
 227  8A0D
 228  8A0D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 229  8A0F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 230  8A0F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 231  8A0F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 232  8A0F
 233  8A0F
 234  8A0F
 235  8A0F              ; Gestión de ENTIDADES y CAJAS.
 236  8A0F
 237  8A0F 00 00        Puntero_store_caja defw 0
 238  8A11 00 00        Puntero_restore_caja defw 0
 239  8A13 00 00        Indice_restore_caja defw 0
 240  8A15 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 241  8A16 00           Numero_parcial_de_entidades db 0
 242  8A17 00           Entidades_en_curso db 0									; ..... ..... .....
 243  8A18 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 244  8A19              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 245  8A19              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 246  8A19              ;														; _ (Numero_de_malotes)="0".
 247  8A19 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 248  8A1B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 249  8A1D              ;														; _ puntero (Indice_entidades).
 250  8A1D
 251  8A1D
 252  8A1D              ;---------------------------------------------------------------------------------------------------------------
 253  8A1D              ;
 254  8A1D              ; Sirven para PINTAR.
 255  8A1D
 256  8A1D 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 257  8A1F              ;															; _variable para almacenar lo posición del puntero_
 258  8A1F              ; 															; _de pila, SP.
 259  8A1F 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 260  8A21              ;															; La utiliza la rutina [Extrae_foto_registros].
 261  8A21 00 70        Stack_snapshot defw Album_de_fotos							; Puntero que indica la posición de memoria donde vamos a guardar_
 262  8A23              ;															; _el snapshot de los registros de la siguiente entidad.
 263  8A23              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 264  8A23 0D 72        Stack_snapshot_disparos defw Album_de_fotos_disparos		; Puntero que indica la posición de memoria donde vamos a guardar_
 265  8A25              ;															; _el snapshot de los registros del siguiente disparo.
 266  8A25              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 267  8A25 84 70        Stack_snapshot_1 defw Album_de_fotos_1
 268  8A27 90 72        Stack_snapshot_disparos_1 defw Album_de_fotos_disparos_1
 269  8A29 07 71        Stack_snapshot_2 defw Album_de_fotos_2
 270  8A2B 19 73        Stack_snapshot_disparos_2 defw Album_de_fotos_disparos_2
 271  8A2D 8A 71        Stack_snapshot_3 defw Album_de_fotos_3
 272  8A2F 9D 73        Stack_snapshot_disparos_3 defw Album_de_fotos_disparos_3
 273  8A31
 274  8A31              ;---------------------------------------------------------------------------------------------------------------
 275  8A31
 276  8A31              ; Gestión de Disparos.
 277  8A31
 278  8A31 00           Numero_de_disparotes db 0
 279  8A32 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 280  8A34 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 281  8A36 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 282  8A37              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 283  8A37              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 284  8A37 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 285  8A39              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 286  8A39              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 287  8A39              ;														; _produzca colisión.
 288  8A39 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 289  8A3B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 290  8A3B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 291  8A3E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 292  8A3E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 293  8A41              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 294  8A41 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 295  8A43 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 296  8A44
 297  8A44              ;---------------------------------------------------------------------------------------------------------------
 298  8A44
 299  8A44              ; Relojes y temporizaciones.
 300  8A44
 301  8A44 00           Contador_de_frames db 0
 302  8A45 04           Clock_explosion db 4
 303  8A46 1E           Clock_Entidades_en_curso db 30
 304  8A47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 305  8A48              ;														; Repite la oleada de entidades.
 306  8A48 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 307  8A49 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 308  8A4A 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 309  8A4B
 310  8A4B 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 311  8A4C 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 312  8A4D 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 313  8A4E
 314  8A4E              ;---------------------------------------------------------------------------------------------------------------
 315  8A4E
 316  8A4E              ; Gestión de NIVELES.
 317  8A4E
 318  8A4E 00           Nivel db 0												; Nivel actual del juego.
 319  8A4F 00 00        Puntero_indice_NIVELES defw 0
 320  8A51 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 321  8A53              ; 														; _ que definen el NIVEL.
 322  8A53              ; Y todo comienza aquí .....
 323  8A53              ;
 324  8A53              ; Rutina principal *************************************************************************************************************************************************************************
 325  8A53              ;
 326  8A53              ;	14/11/22
 327  8A53
 328  8A53              START
 329  8A53
 330  8A53 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 331  8A56 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 332  8A58 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 333  8A5A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 334  8A5C F3           	DI
 335  8A5D
 336  8A5D 3E 07        	ld a,%00000111
 337  8A5F CD 35 99     	call Cls
 338  8A62
 339  8A62              ;	call Pinta_marco
 340  8A62
 341  8A62
 342  8A62 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 343  8A65
 344  8A65 CD 06 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 345  8A68
 346  8A68 CD 25 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 347  8A6B
 348  8A6B CD D9 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 349  8A6E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 350  8A6E CD B6 8D     	call Restore_entidad
 351  8A71
 352  8A71 18 FE        	jr $
 353  8A73
 354  8A73 21 16 8A     	ld hl,Numero_parcial_de_entidades
 355  8A76 46           	ld b,(hl)
 356  8A77 04           	inc b
 357  8A78 05           	dec b
 358  8A79 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 359  8A7B
 360  8A7B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 361  8A7B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 362  8A7B              ;	Pintamos el resto de entidades:
 363  8A7B
 364  8A7B              ;	INICIA ENTIDADES !!!!!
 365  8A7B
 366  8A7B C5           1 push bc  												; Guardo el contador de entidades.
 367  8A7C
 368  8A7C CD 80 8C     	call Inicia_entidad
 369  8A7F
 370  8A7F C1           	pop bc
 371  8A80 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 372  8A82
 373  8A82              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 374  8A82              ; (Esto se dá cuando se inicia una nueva oleada).
 375  8A82
 376  8A82 3A 0C 8A     	ld a,(Ctrl_1)
 377  8A85 CB 5F        	bit 3,a
 378  8A87 20 18        	jr nz,5F											; Loop
 379  8A89
 380  8A89              ; 	INICIA AMADEUS !!!!!
 381  8A89
 382  8A89 CD DD 8D     3 call Restore_Amadeus
 383  8A8C CD 33 8D     	call Inicia_Puntero_objeto
 384  8A8F CD 6F 93     	call Draw
 385  8A92 CD A0 7F     	call Guarda_foto_registros
 386  8A95 11 84 85     	ld de,Amadeus_db
 387  8A98 CD EF 8D     	call Store_Amadeus
 388  8A9B
 389  8A9B              ; 	INICIA DISPAROS !!!!!
 390  8A9B
 391  8A9B CD EF 8C     	call Inicia_Puntero_Disparo_Entidades
 392  8A9E CD F6 8C     	call Inicia_Puntero_Disparo_Amadeus
 393  8AA1
 394  8AA1              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 395  8AA1
 396  8AA1 CD D9 8C     5 call Inicia_punteros_de_cajas
 397  8AA4 CD B6 8D     	call Restore_entidad
 398  8AA7
 399  8AA7 3A 0C 8A     	ld a,(Ctrl_1)
 400  8AAA CB 5F        	bit 3,a
 401  8AAC 28 0A        	jr z,6F
 402  8AAE
 403  8AAE              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 404  8AAE
 405  8AAE 21 0C 8A     	ld hl,Ctrl_1
 406  8AB1 CB 9E        	res 3,(hl)
 407  8AB3 CD FD 8C     	call Calcula_numero_de_malotes
 408  8AB6
 409  8AB6 18 07        	jr 2F
 410  8AB8
 411  8AB8              ; ----------
 412  8AB8
 413  8AB8 3A 16 8A     6 ld a,(Numero_parcial_de_entidades)
 414  8ABB 3C           	inc a
 415  8ABC 32 18 8A     	ld (Numero_de_malotes),a
 416  8ABF
 417  8ABF              ; ------------------------------------
 418  8ABF
 419  8ABF FB           2 ei ; Interrupciones habilitadas.
 420  8AC0
 421  8AC0
 422  8AC0              ; -----------------------------------------------------------------------
 423  8AC0              ;
 424  8AC0              ;	3/8/23
 425  8AC0
 426  8AC0 3A 46 8A     Main ld a,(Clock_Entidades_en_curso)
 427  8AC3 47           	ld b,a
 428  8AC4 3A 44 8A     	ld a,(Contador_de_frames)
 429  8AC7 B8           	cp b
 430  8AC8 20 18        	jr nz,13F
 431  8ACA
 432  8ACA 3A 16 8A     	ld a,(Numero_parcial_de_entidades)
 433  8ACD 47           	ld b,a
 434  8ACE 3A 17 8A     	ld a,(Entidades_en_curso)
 435  8AD1 B8           	cp b
 436  8AD2 28 0E        	jr z,13F
 437  8AD4 30 0C        	jr nc,13F
 438  8AD6
 439  8AD6 3C           	inc a
 440  8AD7 32 17 8A     	ld (Entidades_en_curso),a
 441  8ADA
 442  8ADA 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 443  8ADD
 444  8ADD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 445  8ADD              ;! _ IMPREDECIBLE !!!!
 446  8ADD
 447  8ADD C6 64        	add 100
 448  8ADF 32 46 8A     	ld (Clock_Entidades_en_curso),a
 449  8AE2
 450  8AE2              ; Habilita disparos.
 451  8AE2
 452  8AE2 21 48 8A     13 ld hl,Disparo_Amadeus
 453  8AE5 11 4A 8A     	ld de,CLOCK_repone_disparo_Amadeus
 454  8AE8 CD FA 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 455  8AEB
 456  8AEB 21 4B 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 457  8AEE 11 4D 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 458  8AF1 CD FA 9F     	call Habilita_disparos
 459  8AF4
 460  8AF4              ; COLISIONES.
 461  8AF4
 462  8AF4 CD 51 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 463  8AF7
 464  8AF7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 465  8AF7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 466  8AF7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 467  8AF7
 468  8AF7 AF           	xor a
 469  8AF8 32 36 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 470  8AFB
 471  8AFB CD D9 8C     	call Inicia_punteros_de_cajas
 472  8AFE CD B6 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 473  8B01              ; 														; _ en DRAW.
 474  8B01 3A C9 89     	ld a,(Filas)
 475  8B04 A7           	and a
 476  8B05 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 477  8B07 CD C8 8D     	call Incrementa_punteros_de_cajas
 478  8B0A 18 F2        	jr 12B
 479  8B0C
 480  8B0C              ; ---------------------------------------------------------------------------------------
 481  8B0C
 482  8B0C 3A 16 8A     10 ld a,(Numero_parcial_de_entidades)
 483  8B0F 47               ld b,a
 484  8B10 A7           	and a
 485  8B11 20 14        	jr nz,11F
 486  8B13
 487  8B13 21 0C 8A     	ld hl,Ctrl_1
 488  8B16 CB 66        	bit 4,(hl)
 489  8B18 C2 A4 8B     	jp nz,16F
 490  8B1B
 491  8B1B 21 0C 8A     	ld hl,Ctrl_1
 492  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 493  8B20
 494  8B20 3A 44 8A     	ld a,(Contador_de_frames)
 495  8B23 3C           	inc a
 496  8B24 32 47 8A     	ld (Activa_recarga_cajas),a
 497  8B27
 498  8B27              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 499  8B27
 500  8B27 3A 17 8A     11 ld a,(Entidades_en_curso)
 501  8B2A A7           	and a
 502  8B2B CA A4 8B     	jp z,16F												; Si no hay entidades en curso, RESTORE AMADEUS.
 503  8B2E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 504  8B2F
 505  8B2F              ; Código que ejecutamos con cada entidad:
 506  8B2F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 507  8B2F
 508  8B2F C5           15 push bc 												; Nº de entidades en curso.
 509  8B30
 510  8B30              ; Impacto ???
 511  8B30
 512  8B30 3A E2 89     	ld a,(Impacto)
 513  8B33 A7           	and a
 514  8B34 28 2D        	jr z,8F
 515  8B36
 516  8B36              ; Hay Impacto en esta entidad.
 517  8B36
 518  8B36 21 45 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 519  8B39 35           	dec (hl)
 520  8B3A 20 62        	jr nz,17F
 521  8B3C
 522  8B3C              ;! Velocidad de la animación de la explosión.
 523  8B3C
 524  8B3C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 525  8B3E              ;														; _,(velocidad de la explosión).
 526  8B3E CD 90 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 527  8B41
 528  8B41              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 529  8B41
 530  8B41 3A 0A 8A     	ld a,(Ctrl_2)
 531  8B44 CB 4F        	bit 1,a
 532  8B46 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 533  8B48
 534  8B48              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 535  8B48
 536  8B48 3A D1 89     	ld a,(CTRL_DESPLZ)
 537  8B4B A7           	and a
 538  8B4C 20 08        	jr nz,18F
 539  8B4E
 540  8B4E 21 84 84     	ld hl,Indice_Explosion_2x2-2
 541  8B51 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 542  8B54 18 06        	jr 19F
 543  8B56
 544  8B56 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 545  8B59 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 546  8B5C
 547  8B5C 21 0A 8A     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 548  8B5F CB CE        	set 1,(hl)
 549  8B61 18 22        	jr 7F
 550  8B63
 551  8B63              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 552  8B63              ; _con las coordenadas de la entidad almacenada en DRAW.
 553  8B63
 554  8B63 3A 0C 8A     8 ld a,(Ctrl_1)
 555  8B66 CB 57        	bit 2,a
 556  8B68 28 1B        	jr z,7F
 557  8B6A
 558  8B6A 2A 39 8A     	ld hl,(Coordenadas_disparo_certero)
 559  8B6D EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 560  8B6E              ;														; E contiene la coordenada_X del disparo.
 561  8B6E 2A CF 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 562  8B71              ;														; H FILA, (Coordenada_y de la entidad).
 563  8B71 A7           	and a
 564  8B72 ED 52        	sbc hl,de
 565  8B74
 566  8B74 CD 88 92     	call Determina_resultado_comparativa
 567  8B77
 568  8B77 78           	ld a,b
 569  8B78 A7           	and a
 570  8B79 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 571  8B7B
 572  8B7B              ; ----- ----- -----
 573  8B7B
 574  8B7B 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 575  8B7D 32 E2 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 576  8B80
 577  8B80 21 0C 8A     	ld hl,Ctrl_1
 578  8B83 CB 96        	res 2,(hl)
 579  8B85
 580  8B85 CD 02 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 581  8B88
 582  8B88 3A F7 89     	ld a,(Ctrl_0)
 583  8B8B CB 67        	bit 4,a
 584  8B8D 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 585  8B8F
 586  8B8F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 587  8B8F              ; [[[
 588  8B8F CD 51 8E     	call Detecta_disparo_entidad
 589  8B92              ; ]]]
 590  8B92 CD A0 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 591  8B95
 592  8B95 21 F7 89     	ld hl,Ctrl_0
 593  8B98 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 594  8B9A AF           	xor a
 595  8B9B 32 F8 89     	ld (Obj_dibujado),a
 596  8B9E
 597  8B9E CD 7B 8D     17 call Store_Restore_cajas
 598  8BA1
 599  8BA1 C1           	pop bc
 600  8BA2 10 8B        	djnz 15B
 601  8BA4
 602  8BA4              ; ------------------------------------
 603  8BA4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 604  8BA4              ; Hemos gestionado todas las unidades.
 605  8BA4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 606  8BA4
 607  8BA4              ;	ld hl,Ctrl_1
 608  8BA4              ;	res 2,(hl)
 609  8BA4
 610  8BA4              ; ------------------------------------
 611  8BA4
 612  8BA4              ; Tras la gestión de las entidades, ... AMADEUS.
 613  8BA4
 614  8BA4 CD DD 8D     16 call Restore_Amadeus
 615  8BA7
 616  8BA7 3A E2 89     	ld a,(Impacto)
 617  8BAA A7           	and a
 618  8BAB 20 FE        	jr nz,$
 619  8BAD
 620  8BAD CD 61 8C     	call Mov_Amadeus
 621  8BB0
 622  8BB0 3A F7 89     	ld a,(Ctrl_0)
 623  8BB3 CB 67        	bit 4,a
 624  8BB5 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 625  8BB7
 626  8BB7 CD A0 8C     	call Guarda_foto_entidad_a_pintar
 627  8BBA
 628  8BBA 21 F7 89     14 ld hl,Ctrl_0
 629  8BBD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 630  8BBF AF           	xor a
 631  8BC0 32 F8 89     	ld (Obj_dibujado),a
 632  8BC3
 633  8BC3 11 84 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 634  8BC6 CD EF 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 635  8BC9
 636  8BC9 CD E5 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 637  8BCC
 638  8BCC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 639  8BCC
 640  8BCC CD 15 8D     	call Calcula_numero_de_disparotes
 641  8BCF CD FD 8C     9 call Calcula_numero_de_malotes
 642  8BD2
 643  8BD2 3E 04        	ld a,4
 644  8BD4 D3 FE        	out ($fe),a
 645  8BD6
 646  8BD6              ; ----------------------------------------
 647  8BD6
 648  8BD6 3A 0C 8A     	ld a,(Ctrl_1) 										; Existe Loop?
 649  8BD9 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 650  8BDB CA C0 8A     	jp z,Main
 651  8BDE
 652  8BDE              ; -----
 653  8BDE              ;	(((
 654  8BDE
 655  8BDE 3A 44 8A     	ld a,(Contador_de_frames)
 656  8BE1 47           	ld b,a
 657  8BE2 3A 47 8A     	ld a,(Activa_recarga_cajas)
 658  8BE5 B8           	cp b
 659  8BE6 28 08        	jr z,20F
 660  8BE8
 661  8BE8 21 0C 8A     	ld hl,Ctrl_1
 662  8BEB CB E6        	set 4,(hl)
 663  8BED C3 C0 8A     	jp Main
 664  8BF0
 665  8BF0 21 0C 8A     20 ld hl,Ctrl_1
 666  8BF3 CB A6        	res 4,(hl)
 667  8BF5 F3           	di
 668  8BF6
 669  8BF6 3A 44 8A     	ld a,(Contador_de_frames)
 670  8BF9
 671  8BF9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 672  8BF9              ;! _ IMPREDECIBLE !!!!
 673  8BF9
 674  8BF9 C6 0A        	add 10
 675  8BFB 32 46 8A     	ld (Clock_Entidades_en_curso),a
 676  8BFE
 677  8BFE C3 68 8A     	jp 4B
 678  8C01
 679  8C01 C9           	ret
 680  8C02
 681  8C02              ; --------------------------------------------------------------------------------------------------------------
 682  8C02              ;
 683  8C02              ;	27/05/23
 684  8C02
 685  8C02              Mov_obj
 686  8C02
 687  8C02              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 688  8C02
 689  8C02 3A 0A 8A     	ld a,(Ctrl_2)
 690  8C05 CB 4F        	bit 1,a
 691  8C07 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 692  8C09
 693  8C09              ; Explosión:
 694  8C09
 695  8C09 3A 0B 8A     	ld a,(Frames_explosion)
 696  8C0C A7           	and a
 697  8C0D 20 11        	jr nz,4F
 698  8C0F
 699  8C0F              ; Una alimaña menos!!!!!!!!!1
 700  8C0F
 701  8C0F CD F8 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 702  8C12 21 16 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 703  8C15 35           	dec (hl)
 704  8C16 21 17 8A     	ld hl,Entidades_en_curso
 705  8C19 35           	dec (hl)
 706  8C1A 21 15 8A     	ld hl,Numero_de_entidades
 707  8C1D 35           	dec (hl)
 708  8C1E 18 40        	jr 3F
 709  8C20
 710  8C20              ; -----
 711  8C20
 712  8C20              ;	`Movemos´ la explosión.
 713  8C20
 714  8C20 2A D7 89     4 ld hl,(Puntero_DESPLZ_der)
 715  8C23 23           	inc hl
 716  8C24 23           	inc hl
 717  8C25 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 718  8C28 CD 2D 8D     	call Extrae_address
 719  8C2B 22 CD 89     	ld (Puntero_objeto),hl
 720  8C2E
 721  8C2E 21 0B 8A     	ld hl,Frames_explosion
 722  8C31 35           	dec (hl)
 723  8C32
 724  8C32 CD 90 8C     	call Guarda_foto_entidad_a_borrar
 725  8C35 18 29        	jr 3F
 726  8C37
 727  8C37 AF           2 xor a
 728  8C38 32 F8 89     	ld (Obj_dibujado),a
 729  8C3B 32 F7 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 730  8C3E              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 731  8C3E              ; 														; _de la entidad.
 732  8C3E CD AA 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 733  8C41              ;														; Obj_dibujado="0".
 734  8C41              ; Movemos Entidades malignas.
 735  8C41
 736  8C41              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 737  8C41              ;	and a 												; _a movernos. (Limitador_de_entidades).
 738  8C41              ;	ret z
 739  8C41
 740  8C41 CD 95 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 741  8C44
 742  8C44 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 743  8C47 CB 67        	bit 4,a
 744  8C49 C8           	ret z
 745  8C4A
 746  8C4A              ; Ha habido desplazamiento de la entidad maligna.
 747  8C4A              ; Ha llegado a zona de AMADEUS ???
 748  8C4A
 749  8C4A 3A D0 89     	ld a,(Coordenada_y)
 750  8C4D FE 14        	cp $14
 751  8C4F D4 16 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 752  8C52              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 753  8C52              ; ---------
 754  8C52
 755  8C52 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 756  8C54 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 757  8C57 CD AA 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 758  8C5A CD C1 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 759  8C5D CD 90 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 760  8C60 C9           3 ret													; _de la misma.
 761  8C61
 762  8C61              ; --------------------------------------------------------------------------------------------------------------
 763  8C61              ;
 764  8C61              ;	29/1/23
 765  8C61
 766  8C61              Mov_Amadeus
 767  8C61
 768  8C61 AF           	xor a
 769  8C62 32 F8 89     	ld (Obj_dibujado),a
 770  8C65 CD AA 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 771  8C68              ;														; Obj_dibujado="0".
 772  8C68              ; Movemos Amadeus.
 773  8C68
 774  8C68 CD 1A 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 775  8C6B 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 776  8C6E CB 67        	bit 4,a
 777  8C70 C8           	ret z
 778  8C71
 779  8C71              ; ---------
 780  8C71
 781  8C71 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 782  8C73 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 783  8C76 CD AA 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 784  8C79 CD C1 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 785  8C7C CD 90 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 786  8C7F C9           	ret													; _de la nave.
 787  8C80
 788  8C80              ; -----------------------------------------------------------------------------------
 789  8C80
 790  8C80 CD 33 8D     Inicia_entidad	call Inicia_Puntero_objeto
 791  8C83 CD 49 99     	call Recompone_posicion_inicio
 792  8C86 CD 6F 93     	call Draw
 793  8C89 CD A0 7F     	call Guarda_foto_registros
 794  8C8C CD 7B 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 795  8C8F C9           	ret
 796  8C90
 797  8C90              ; --------------------------------------------------------------------------------------------------------------
 798  8C90              ;
 799  8C90              ;	31/01/23
 800  8C90              ;
 801  8C90              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 802  8C90
 803  8C90              Guarda_foto_entidad_a_borrar
 804  8C90
 805  8C90 CD 53 96     	call Prepara_draw
 806  8C93 CD 83 95     	call calcula_CColumnass
 807  8C96 CD BA 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 808  8C99 CD 19 96     	call Define_rutina_de_impresion
 809  8C9C CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 810  8C9F C9           	ret
 811  8CA0
 812  8CA0              ; --------------------------------------------------------------------------------------------------------------
 813  8CA0              ;
 814  8CA0              ;	31/01/23
 815  8CA0              ;
 816  8CA0              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 817  8CA0              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 818  8CA0
 819  8CA0              Guarda_foto_entidad_a_pintar
 820  8CA0
 821  8CA0 CD CD 8C     	call Repone_pintar
 822  8CA3 CD 6F 93     	call Draw
 823  8CA6 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 824  8CA9 C9           	ret
 825  8CAA
 826  8CAA              ; --------------------------------------------------------------------------------------------------------------
 827  8CAA              ;
 828  8CAA              ;
 829  8CAA
 830  8CAA 21 C9 89     Prepara_var_pintado_borrado	ld hl,Filas
 831  8CAD 3A F8 89     	ld a,(Obj_dibujado)
 832  8CB0 A7           	and a
 833  8CB1 28 05        	jr z,1F
 834  8CB3 11 ED 89     	ld de,Variables_de_pintado
 835  8CB6 18 03        	jr 2F
 836  8CB8 11 E3 89     1 ld de,Variables_de_borrado
 837  8CBB 01 08 00     2 ld bc,8
 838  8CBE ED B0        	ldir
 839  8CC0 C9           	ret
 840  8CC1
 841  8CC1              ; --------------------------------------------------------------------------------------------------------------
 842  8CC1
 843  8CC1 21 E3 89     Repone_borrar ld hl,Variables_de_borrado
 844  8CC4 11 C9 89     	ld de,Filas
 845  8CC7 01 08 00     	ld bc,8
 846  8CCA ED B0        	ldir
 847  8CCC C9           	ret
 848  8CCD
 849  8CCD 21 ED 89     Repone_pintar ld hl,Variables_de_pintado
 850  8CD0 11 C9 89     	ld de,Filas
 851  8CD3 01 08 00     	ld bc,8
 852  8CD6 ED B0        	ldir
 853  8CD8 C9           	ret
 854  8CD9
 855  8CD9              ; *************************************************************************************************************************************************************
 856  8CD9              ;
 857  8CD9              ; 8/1/23
 858  8CD9              ;
 859  8CD9              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 860  8CD9              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 861  8CD9              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 862  8CD9
 863  8CD9              ; Destruye HL y DE !!!!!
 864  8CD9
 865  8CD9              Inicia_punteros_de_cajas
 866  8CD9
 867  8CD9 21 6C 85     	ld hl,Indice_de_cajas
 868  8CDC CD 2D 8D         call Extrae_address
 869  8CDF 22 0F 8A         ld (Puntero_store_caja),hl
 870  8CE2 21 6E 85     	ld hl,Indice_de_cajas+2
 871  8CE5 22 13 8A     	ld (Indice_restore_caja),hl
 872  8CE8 CD 2D 8D     	call Extrae_address
 873  8CEB 22 11 8A     	ld (Puntero_restore_caja),hl
 874  8CEE C9               ret
 875  8CEF
 876  8CEF              ; *************************************************************************************************************************************************************
 877  8CEF              ;
 878  8CEF              ; 8/1/23
 879  8CEF              ;
 880  8CEF              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 881  8CEF
 882  8CEF 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 883  8CF2 22 32 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 884  8CF5 C9           	ret
 885  8CF6 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 886  8CF9 22 34 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 887  8CFC C9           	ret
 888  8CFD
 889  8CFD              ; -------------------------------------------------------------------------------------------------------------
 890  8CFD              ;
 891  8CFD              ; 28/2/23
 892  8CFD              ;
 893  8CFD
 894  8CFD              Calcula_numero_de_malotes
 895  8CFD
 896  8CFD 21 00 70     	ld hl,Album_de_fotos
 897  8D00 EB           	ex de,hl
 898  8D01 2A 21 8A     	ld hl,(Stack_snapshot)
 899  8D04
 900  8D04 06 00        	ld b,0
 901  8D06 7D           	ld a,l
 902  8D07 93           	sub e
 903  8D08 28 07        	jr z,1F
 904  8D0A
 905  8D0A              ; Nº de malotes no es "0".
 906  8D0A
 907  8D0A D6 06        2 sub 6
 908  8D0C 04           	inc b
 909  8D0D A7           	and a
 910  8D0E 20 FA        	jr nz,2B
 911  8D10 78           	ld a,b
 912  8D11
 913  8D11 32 18 8A     1 ld (Numero_de_malotes),a
 914  8D14 C9           	ret
 915  8D15
 916  8D15              ; -------------------------------------------------------------------------------------------------------------
 917  8D15              ;
 918  8D15              ; 28/2/23
 919  8D15              ;
 920  8D15
 921  8D15              Calcula_numero_de_disparotes
 922  8D15
 923  8D15 21 0D 72     	ld hl,Album_de_fotos_disparos
 924  8D18 EB           	ex de,hl
 925  8D19 2A 23 8A     	ld hl,(Stack_snapshot_disparos)
 926  8D1C
 927  8D1C 06 00        	ld b,0
 928  8D1E 7D           	ld a,l
 929  8D1F 93           	sub e
 930  8D20 28 07        	jr z,1F
 931  8D22
 932  8D22              ; Nº de malotes no es "0".
 933  8D22
 934  8D22 D6 06        2 sub 6
 935  8D24 04           	inc b
 936  8D25 A7           	and a
 937  8D26 20 FA        	jr nz,2B
 938  8D28 78           	ld a,b
 939  8D29
 940  8D29 32 31 8A     1 ld (Numero_de_disparotes),a
 941  8D2C C9           	ret
 942  8D2D              ; *************************************************************************************************************************************************************
 943  8D2D              ;
 944  8D2D              ; 20/10/22
 945  8D2D              ;
 946  8D2D              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 947  8D2D              ;
 948  8D2D              ; Destruye el puntero y DE !!!!!
 949  8D2D
 950  8D2D 5E           Extrae_address ld e,(hl)
 951  8D2E 23           	inc hl
 952  8D2F 56           	ld d,(hl)
 953  8D30 2B           	dec hl
 954  8D31 EB           	ex de,hl
 955  8D32 C9           	ret
 956  8D33
 957  8D33              ; *************************************************************************************************************************************************************
 958  8D33              ;
 959  8D33              ;	7/2/23
 960  8D33              ;
 961  8D33              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 962  8D33              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 963  8D33              ;
 964  8D33              ;   Destruye HL y BC !!!!!,
 965  8D33              ;
 966  8D33              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 967  8D33              ;					"0" ..... Izquierda.
 968  8D33
 969  8D33              Inicia_Puntero_objeto
 970  8D33
 971  8D33 3A DD 89     	ld a,(Cuad_objeto)
 972  8D36 E6 01        	and 1
 973  8D38 F5           	push af
 974  8D39 CC 57 8D     	call z,Inicia_puntero_objeto_izq
 975  8D3C F1           	pop af
 976  8D3D 28 2B        	jr z,1F
 977  8D3F CD 44 8D     	call Inicia_puntero_objeto_der
 978  8D42 18 26        	jr 1F
 979  8D44
 980  8D44              ; Arrancamos desde la parte izquierda de la pantalla.
 981  8D44              ; Iniciamos (Indice_Sprite_der).
 982  8D44
 983  8D44 2A D3 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 984  8D47 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 985  8D4A CD 2D 8D     	call Extrae_address
 986  8D4D 22 CD 89     	ld (Puntero_objeto),hl
 987  8D50
 988  8D50 2A D5 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 989  8D53 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 990  8D56 C9           	ret
 991  8D57
 992  8D57              ; Arrancamos desde la parte derecha de la pantalla.
 993  8D57              ; Iniciamos (Indice_Sprite_izq).
 994  8D57
 995  8D57 2A D5 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 996  8D5A 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 997  8D5D CD 2D 8D     	call Extrae_address
 998  8D60 22 CD 89     	ld (Puntero_objeto),hl
 999  8D63
1000  8D63 2A D3 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1001  8D66 22 D7 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1002  8D69 C9           	ret
1003  8D6A
1004  8D6A              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1005  8D6A
1006  8D6A 21 40 83     1 ld hl,Amadeus
1007  8D6D ED 4B CD 89  	ld bc,(Puntero_objeto)
1008  8D71 B7 ED 42     	sub hl,bc
1009  8D74 C0           	ret nz
1010  8D75 21 F7 89     	ld hl,Ctrl_0
1011  8D78 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1012  8D7A C9           	ret 												; _de nuestra nave en los extremos.
1013  8D7B
1014  8D7B              ; *************************************************************************************************************************************************************
1015  8D7B              ;
1016  8D7B              ;	14/5/23
1017  8D7B              ;
1018  8D7B              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1019  8D7B              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1020  8D7B
1021  8D7B              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1022  8D7B              ;	_de la 2ª y 3ª entidad respectivamente.
1023  8D7B
1024  8D7B              Store_Restore_cajas
1025  8D7B
1026  8D7B E5           	push hl
1027  8D7C D5           	push de
1028  8D7D C5            	push bc
1029  8D7E
1030  8D7E              ;	STORE !!!!!
1031  8D7E              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1032  8D7E
1033  8D7E 21 C9 89     	ld hl,Filas
1034  8D81 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1035  8D85 01 43 00     	ld bc,67
1036  8D88 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1037  8D8A
1038  8D8A              ; 	Entidad_sospechosa. 20/4/23
1039  8D8A
1040  8D8A 3A E2 89     	ld a,(Impacto)
1041  8D8D A7           	and a
1042  8D8E 28 0C        	jr z,1F
1043  8D90
1044  8D90 2A 0F 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1045  8D93 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1046  8D96 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1047  8D97 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1048  8D99 22 37 8A     	ld (Entidad_sospechosa_de_colision),hl
1049  8D9C
1050  8D9C              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1051  8D9C
1052  8D9C 2A 11 8A     1 ld hl,(Puntero_restore_caja)
1053  8D9F 7E           	ld a,(hl)
1054  8DA0 A7           	and a
1055  8DA1 F5           	push af
1056  8DA2 28 08        	jr z,2F
1057  8DA4
1058  8DA4 11 C9 89     	ld de,Filas
1059  8DA7 01 43 00     	ld bc,67
1060  8DAA ED B0        	ldir
1061  8DAC
1062  8DAC CD C8 8D     2 call Incrementa_punteros_de_cajas
1063  8DAF F1           	pop af
1064  8DB0 28 EA        	jr z,1B
1065  8DB2
1066  8DB2 C1           	pop bc
1067  8DB3 D1           	pop de
1068  8DB4 E1           	pop hl
1069  8DB5
1070  8DB5 C9           	ret
1071  8DB6
1072  8DB6              ; **************************************************************************************************
1073  8DB6              ;
1074  8DB6              ;	12/05/23
1075  8DB6              ;
1076  8DB6              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1077  8DB6
1078  8DB6 E5           Restore_entidad push hl
1079  8DB7 D5           	push de
1080  8DB8 C5            	push bc
1081  8DB9
1082  8DB9 2A 0F 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1083  8DBC 11 C9 89     	ld de,Filas
1084  8DBF 01 43 00     	ld bc,67
1085  8DC2 ED B0        	ldir
1086  8DC4
1087  8DC4 C1           	pop bc
1088  8DC5 D1           	pop de
1089  8DC6 E1           	pop hl
1090  8DC7 C9           	ret
1091  8DC8
1092  8DC8
1093  8DC8              ; **************************************************************************************************
1094  8DC8              ;
1095  8DC8              ;	08/05/23
1096  8DC8              ;
1097  8DC8              ;	Incrementamos los dos punteros de entidades. (+1).
1098  8DC8
1099  8DC8 2A 11 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1100  8DCB 22 0F 8A     	ld (Puntero_store_caja),hl
1101  8DCE 2A 13 8A     	ld hl,(Indice_restore_caja)
1102  8DD1 23           	inc hl
1103  8DD2 23           	inc hl
1104  8DD3 22 13 8A     	ld (Indice_restore_caja),hl
1105  8DD6 CD 2D 8D         call Extrae_address
1106  8DD9 22 11 8A         ld (Puntero_restore_caja),hl
1107  8DDC C9               ret
1108  8DDD
1109  8DDD              ; **************************************************************************************************
1110  8DDD              ;
1111  8DDD              ;	25/01/23
1112  8DDD              ;
1113  8DDD              ;	Restore_Amadeus
1114  8DDD              ;
1115  8DDD              ;	Cargamos en DRAW los parámetros de Amadeus.
1116  8DDD              ;
1117  8DDD
1118  8DDD E5           Restore_Amadeus	push hl
1119  8DDE D5           	push de
1120  8DDF C5            	push bc
1121  8DE0 21 84 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1122  8DE3 11 C9 89     	ld de,Filas
1123  8DE6 01 43 00     	ld bc,67
1124  8DE9 ED B0        	ldir
1125  8DEB C1           	pop bc
1126  8DEC D1           	pop de
1127  8DED E1           	pop hl
1128  8DEE C9           	ret
1129  8DEF
1130  8DEF              ; *************************************************************************************************************************************************************
1131  8DEF              ;
1132  8DEF              ;	29/04/23
1133  8DEF              ;
1134  8DEF              ;	Store_Amadeus
1135  8DEF              ;
1136  8DEF              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1137  8DEF              ;
1138  8DEF              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1139  8DEF              ;
1140  8DEF              ;	DESTRUYE: HL y BC y DE.
1141  8DEF
1142  8DEF 21 C9 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1143  8DF2 01 43 00     	ld bc,67
1144  8DF5 ED B0        	ldir
1145  8DF7 C9           	ret
1146  8DF8
1147  8DF8              ; -----------------------------------------------------------
1148  8DF8              ;
1149  8DF8              ;	27/04/23
1150  8DF8              ;
1151  8DF8              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1152  8DF8              ;
1153  8DF8              ;	Destruye: HL,BC,DE,A
1154  8DF8
1155  8DF8 21 C9 89     Borra_datos_entidad ld hl,Filas
1156  8DFB 01 42 00     	ld bc,66
1157  8DFE AF           	xor a
1158  8DFF 77           	ld (hl),a
1159  8E00 11 CA 89     	ld de,Filas+1
1160  8E03 ED B0        	ldir
1161  8E05 C9           	ret
1162  8E06
1163  8E06              ; -----------------------------------------------------------
1164  8E06
1165  8E06              ; Teclado.
1166  8E06
1167  8E06 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1168  8E08 DB FE        	in a,($fe)
1169  8E0A E6 01        	and $01
1170  8E0C 28 02        	jr z,1f
1171  8E0E 18 F6        	jr Pulsa_ENTER
1172  8E10 C9           1 ret
1173  8E11
1174  8E11              ; **************************************************************************************************
1175  8E11              ;
1176  8E11              ; Temporización.
1177  8E11
1178  8E11              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1179  8E11              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1180  8E11              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1181  8E11              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1182  8E11
1183  8E11              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1184  8E11              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1185  8E11              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1186  8E11
1187  8E11              ; A partir de $4f61 no hace falta DELAY.
1188  8E11
1189  8E11              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1190  8E11
1191  8E11 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1192  8E14 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1193  8E15 78           	LD A,B
1194  8E16 A7           	AND A
1195  8E17 20 FB        	JR NZ,wait
1196  8E19 C9           	RET
1197  8E1A
1198  8E1A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1199  8E1A              ;
1200  8E1A              ;	5/3/23
1201  8E1A              ;
1202  8E1A              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1203  8E1A
1204  8E1A              Movimiento_Amadeus
1205  8E1A
1206  8E1A              ; Disparo.
1207  8E1A
1208  8E1A 3A 48 8A     	ld a,(Disparo_Amadeus)
1209  8E1D A7           	and a
1210  8E1E 20 02        	jr nz,1F
1211  8E20 18 15        	jr 2F
1212  8E22
1213  8E22 3E F7        1 ld a,$f7													; "5" para disparar.
1214  8E24 DB FE        	in a,($fe)
1215  8E26 E6 10        	and $10
1216  8E28
1217  8E28 F5           	push af
1218  8E29 CC 79 8E     	call z,Genera_disparo
1219  8E2C F1           	pop af
1220  8E2D 20 08        	jr nz,2F
1221  8E2F
1222  8E2F 3A 48 8A     	ld a,(Disparo_Amadeus)
1223  8E32 EE 01        	xor 1
1224  8E34 32 48 8A     	ld (Disparo_Amadeus),a
1225  8E37
1226  8E37 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1227  8E39 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1228  8E3B E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1229  8E3D CC 03 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1230  8E40 3E F7        	ld a,$f7
1231  8E42 DB FE        	in a,($fe)
1232  8E44 E6 01        	and $01
1233  8E46 C8           	ret z
1234  8E47
1235  8E47 3E F7        	ld a,$f7
1236  8E49 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1237  8E4B E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1238  8E4D CC E5 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1239  8E50 C9           	ret
1240  8E51
1241  8E51              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1242  8E51              ;
1243  8E51              ;	Rutina provisional para que los malotes cagen balas.
1244  8E51
1245  8E51              Detecta_disparo_entidad
1246  8E51
1247  8E51 3A 4B 8A     	ld a,(Disparo_entidad)
1248  8E54 A7           	and a
1249  8E55 C8           	ret z
1250  8E56
1251  8E56              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1252  8E56
1253  8E56              ;	ld a,$7f				; Detecta SPACE.
1254  8E56              ;	in a,($fe)
1255  8E56              ;	and 1
1256  8E56              ;	ret nz
1257  8E56
1258  8E56              ;	call Genera_disparo
1259  8E56 C9           	ret
1260  8E57
1261  8E57              ; ----------------------------------------------------------------------
1262  8E57              ;
1263  8E57              ;	3/8/23
1264  8E57
1265  8E57              Frame
1266  8E57
1267  8E57              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1268  8E57              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1269  8E57
1270  8E57              ; PINTAMOS.
1271  8E57
1272  8E57 3E 02            ld a,2
1273  8E59 D3 FE            out ($fe),a											; Rojo.
1274  8E5B CD 7D 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1275  8E5E CD BC 96     	call Extrae_foto_disparos
1276  8E61 3E 01            ld a,1
1277  8E63 D3 FE            out ($fe),a											; Azul.
1278  8E65
1279  8E65              ; Gestiona los álbumes de fotos.
1280  8E65
1281  8E65 CD C7 90     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1282  8E68
1283  8E68 21 00 70     	ld hl,Album_de_fotos
1284  8E6B 22 21 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
1285  8E6E              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
1286  8E6E CD 1A 74     	call Gestiona_albumes_de_fotos
1287  8E71 CD 06 75     	call Gestiona_albumes_de_fotos_disparos
1288  8E74
1289  8E74              ; RELOJES.
1290  8E74
1291  8E74 21 44 8A     	ld hl,Contador_de_frames
1292  8E77 34           	inc (hl)											; 0 - 255
1293  8E78
1294  8E78 C9           	ret
1295  8E79
1296  8E79              ; ---------------------------------------------------------------
1297  8E79
1298  8E79              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E79              ; ******************************************************************************************************************************************************************************************
   2+ 8E79              ;
   3+ 8E79              ;   21/07/23
   4+ 8E79              ;
   5+ 8E79              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E79              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E79              ;
   8+ 8E79              ;
   9+ 8E79              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E79              ;
  11+ 8E79              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E79              ;               _ hacen las entidades hacia abajo.
  13+ 8E79              ;
  14+ 8E79              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E79              ;
  16+ 8E79              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E79              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E79              ;
  19+ 8E79              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E79              ;           _ la bala.
  21+ 8E79              ;
  22+ 8E79              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E79              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E79              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E79              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E79              ;           _ en el momento de generarse la bala)).
  27+ 8E79
  28+ 8E79              Genera_disparo
  29+ 8E79
  30+ 8E79              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E79              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E79              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E79              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E79              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E79              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E79              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E79
  38+ 8E79              ; Exclusiones:
  39+ 8E79
  40+ 8E79 3A E1 89         ld a,(Vel_down)
  41+ 8E7C 47               ld b,a
  42+ 8E7D 3A 43 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E80 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E81 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E82 3A 06 8A         ld a,(Columnas)
  46+ 8E85 47               ld b,a
  47+ 8E86 3A CA 89         ld a,(Columns)
  48+ 8E89 B8               cp b
  49+ 8E8A C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E8B
  51+ 8E8B              ; ----- ----- -----
  52+ 8E8B
  53+ 8E8B 3A F7 89         ld a,(Ctrl_0)
  54+ 8E8E CB 77            bit 6,a
  55+ 8E90 20 06            jr nz,14F
  56+ 8E92
  57+ 8E92 3A D0 89         ld a,(Coordenada_y)
  58+ 8E95 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E97 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E98
  61+ 8E98 21 00 80     14 ld hl,Indice_disparo
  62+ 8E9B 3A D1 89         ld a,(CTRL_DESPLZ)
  63+ 8E9E 4F               ld c,a
  64+ 8E9F 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EA1              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EA1              ;                                            ""        ""       "f9", B="1"
  67+ 8EA1              ;                                            ""        ""       "fb", B="2"
  68+ 8EA1              ;                                            ""        ""       "fb", B="3"
  69+ 8EA1 A7               and a
  70+ 8EA2 28 10            jr z,1F
  71+ 8EA4 E6 01            and 1
  72+ 8EA6 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EA7
  74+ 8EA7 79               ld a,c
  75+ 8EA8 16 F9            ld d,$f9
  76+ 8EAA 23           2 inc hl
  77+ 8EAB 23               inc hl
  78+ 8EAC 04               inc b
  79+ 8EAD BA               cp d
  80+ 8EAE 28 04            jr z,1F
  81+ 8EB0 14               inc d
  82+ 8EB1 14               inc d
  83+ 8EB2 18 F6            jr 2B
  84+ 8EB4
  85+ 8EB4 CD 2D 8D     1 call Extrae_address
  86+ 8EB7 E5               push hl
  87+ 8EB8 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EBA DD 21 FE 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EBE
  90+ 8EBE              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EBE              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EBE
  93+ 8EBE 3A F7 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EC1 CB 77            bit 6,a
  95+ 8EC3 20 04            jr nz,19F
  96+ 8EC5
  97+ 8EC5 AF               xor a
  98+ 8EC6 32 4B 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EC9
 100+ 8EC9 3A DD 89     19 ld a,(Cuad_objeto)
 101+ 8ECC FE 02            cp 2
 102+ 8ECE 38 66            jr c,3F
 103+ 8ED0 28 64            jr z,3F
 104+ 8ED2
 105+ 8ED2              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8ED2
 107+ 8ED2 E6 01            and 1
 108+ 8ED4 28 30            jr z,4F
 109+ 8ED6
 110+ 8ED6              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8ED6              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8ED6              ;
 113+ 8ED6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8ED6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8ED6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8ED6
 117+ 8ED6 2A CB 89     	ld hl,(Posicion_actual)
 118+ 8ED9
 119+ 8ED9              ;   Amadeus o entidad ???.
 120+ 8ED9
 121+ 8ED9 3A F7 89         ld a,(Ctrl_0)
 122+ 8EDC CB 77            bit 6,a
 123+ 8EDE 28 0A            jr z,8F
 124+ 8EE0
 125+ 8EE0              ; 	Dispara Amadeus.
 126+ 8EE0
 127+ 8EE0 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EE2 CD 6E 96         call PreviousScan
 129+ 8EE5 CD 6E 96         call PreviousScan
 130+ 8EE8
 131+ 8EE8              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EE8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EE8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EE8
 136+ 8EE8 18 11            jr 10F
 137+ 8EEA
 138+ 8EEA              ; 	Dispara Entidad.
 139+ 8EEA
 140+ 8EEA 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EED              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EED
 143+ 8EED              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EED              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EED
 146+ 8EED C5               push bc
 147+ 8EEE 06 10            ld b,16
 148+ 8EF0 CD 5F 96     9 call NextScan
 149+ 8EF3 10 FB            djnz 9B
 150+ 8EF5 C1               pop bc
 151+ 8EF6 CD 60 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EF9 18 06            jr 17F
 153+ 8EFB
 154+ 8EFB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EFB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EFB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EFB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EFB
 159+ 8EFB CD 60 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EFE CD D5 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F01              ;                                                      ; _al generar el disparo.
 162+ 8F01
 163+ 8F01              ; 	LLegados a este punto tendremos:
 164+ 8F01              ;
 165+ 8F01              ;       Puntero_objeto_disparo en IY.
 166+ 8F01              ;       Rutinas_de_impresion en IX.
 167+ 8F01              ;       Puntero_de_impresion en HL.
 168+ 8F01              ;       Impacto/Dirección en BC.
 169+ 8F01
 170+ 8F01 CD 68 8F     17 call Almacena_disparo
 171+ 8F04 18 52            jr 6F                                             ; RET.
 172+ 8F06
 173+ 8F06              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F06              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F06              ;
 176+ 8F06              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F06              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F06              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F06
 180+ 8F06 2A CB 89     4 ld hl,(Posicion_actual)
 181+ 8F09
 182+ 8F09              ;   Amadeus o entidad ???.
 183+ 8F09
 184+ 8F09 3A F7 89         ld a,(Ctrl_0)
 185+ 8F0C CB 77            bit 6,a
 186+ 8F0E 28 0A            jr z,11F
 187+ 8F10
 188+ 8F10              ; 	Dispara Amadeus.
 189+ 8F10
 190+ 8F10 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F12 CD 6E 96         call PreviousScan
 192+ 8F15 CD 6E 96         call PreviousScan
 193+ 8F18
 194+ 8F18              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F18              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F18              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F18              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F18
 199+ 8F18 18 11            jr 13F
 200+ 8F1A
 201+ 8F1A              ; 	Dispara Entidad.
 202+ 8F1A
 203+ 8F1A 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F1D              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F1D
 206+ 8F1D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F1D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F1D
 209+ 8F1D C5               push bc
 210+ 8F1E 06 10            ld b,16
 211+ 8F20 CD 5F 96     12 call NextScan
 212+ 8F23 10 FB            djnz 12B
 213+ 8F25 C1               pop bc
 214+ 8F26
 215+ 8F26 CD 59 8F         call Ajusta_disparo_parte_derecha
 216+ 8F29 18 06            jr 18F
 217+ 8F2B
 218+ 8F2B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F2B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F2B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F2B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F2B
 223+ 8F2B CD 59 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F2E CD D5 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F31              ;                                                       ; _al generar el disparo.
 226+ 8F31
 227+ 8F31              ; LLegados a este punto tendremos:
 228+ 8F31              ;
 229+ 8F31              ;       Puntero_objeto_disparo en IY.
 230+ 8F31              ;       Rutinas_de_impresion en IX.
 231+ 8F31              ;       Puntero_de_impresion en HL.
 232+ 8F31              ;       Impacto/Dirección en BC.
 233+ 8F31
 234+ 8F31 CD 68 8F     18 call Almacena_disparo
 235+ 8F34 18 22            jr 6F                                               ; RET.
 236+ 8F36
 237+ 8F36              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F36
 239+ 8F36 28 11        3 jr z,5F
 240+ 8F38
 241+ 8F38              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F38              ;
 243+ 8F38              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F38              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F38              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F38              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F38
 248+ 8F38              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F38              ;	   ""        ""       "f9", B="1"
 250+ 8F38              ;	   ""        ""       "fb", B="2"
 251+ 8F38              ; 	   ""        ""       "fb", B="3"
 252+ 8F38
 253+ 8F38 2A CB 89     	ld hl,(Posicion_actual)
 254+ 8F3B CD 5F 96     	call NextScan
 255+ 8F3E
 256+ 8F3E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F3E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F3E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F3E
 261+ 8F3E CD 60 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F41
 263+ 8F41              ; 	No se produce impacto. B="$80"
 264+ 8F41              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F41
 266+ 8F41 01 80 80         ld bc,$8080
 267+ 8F44
 268+ 8F44              ; 	LLegados a este punto tendremos:
 269+ 8F44              ;
 270+ 8F44              ;       Puntero_objeto_disparo en IY.
 271+ 8F44              ;       Rutinas_de_impresion en IX.
 272+ 8F44              ;       Puntero_de_impresion en HL.
 273+ 8F44              ;       Impacto/Dirección en BC.
 274+ 8F44
 275+ 8F44 CD 68 8F         call Almacena_disparo
 276+ 8F47 18 0F            jr 6F                                           ; RET.
 277+ 8F49
 278+ 8F49              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F49              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F49              ;
 281+ 8F49              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F49              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F49              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F49              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F49
 286+ 8F49 2A CB 89     5 ld hl,(Posicion_actual)
 287+ 8F4C CD 5F 96     	call NextScan
 288+ 8F4F
 289+ 8F4F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F4F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F4F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F4F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F4F
 294+ 8F4F CD 59 8F         call Ajusta_disparo_parte_derecha
 295+ 8F52
 296+ 8F52              ; 	No se produce impacto. B="$80"
 297+ 8F52              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F52
 299+ 8F52 01 80 80     15 ld bc,$8080
 300+ 8F55
 301+ 8F55              ; 	LLegados a este punto tendremos:
 302+ 8F55              ;
 303+ 8F55              ;       Puntero_objeto_disparo en IY.
 304+ 8F55              ;       Rutinas_de_impresion en IX.
 305+ 8F55              ;       Puntero_de_impresion en HL.
 306+ 8F55              ;       Impacto/Dirección en BC.
 307+ 8F55
 308+ 8F55 CD 68 8F         call Almacena_disparo
 309+ 8F58
 310+ 8F58 C9           6 ret
 311+ 8F59
 312+ 8F59              ; ----------------------------------------------------------------
 313+ 8F59              ;
 314+ 8F59              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F59              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F59              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F59
 318+ 8F59 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F5A FE 02            cp 2
 320+ 8F5C 38 01            jr c,1F
 321+ 8F5E 23               inc hl
 322+ 8F5F C9           1 ret
 323+ 8F60
 324+ 8F60 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F61 FE 01        	cp 1
 326+ 8F63 20 01        	jr nz,1F
 327+ 8F65 2B           	dec hl
 328+ 8F66 2B           1 dec hl
 329+ 8F67 C9               ret
 330+ 8F68
 331+ 8F68              ; ----------------------------------------------------------------
 332+ 8F68              ;
 333+ 8F68              ;   25/02/23
 334+ 8F68              ;
 335+ 8F68              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F68              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F68              ;
 338+ 8F68              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F68              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F68
 341+ 8F68              Almacena_disparo
 342+ 8F68
 343+ 8F68 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F69 F1               pop af
 345+ 8F6A 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F6B
 347+ 8F6B 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F6C E6 01            and 1
 349+ 8F6E 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F70              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F70              ; 	Dispara AMADEUS.
 352+ 8F70
 353+ 8F70              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F70              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F70              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F70              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F70
 358+ 8F70 C5               push bc
 359+ 8F71 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F74 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F77 A7               and a
 362+ 8F78 ED 42            sbc hl,bc
 363+ 8F7A CC F6 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F7D C1               pop bc
 365+ 8F7E 28 54            jr z,4F
 366+ 8F80
 367+ 8F80 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F83 23               inc hl
 369+ 8F84 23               inc hl
 370+ 8F85 22 34 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F88              ;                                                   ; _ Disparo_(+1).
 372+ 8F88 18 18            jr 2F
 373+ 8F8A
 374+ 8F8A              ; Dispara una entidad.
 375+ 8F8A
 376+ 8F8A C5           1 push bc
 377+ 8F8B 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F8E 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F91 A7               and a
 380+ 8F92 ED 42            sbc hl,bc
 381+ 8F94 CC EF 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F97 C1               pop bc
 383+ 8F98 28 3A            jr z,4F
 384+ 8F9A
 385+ 8F9A 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F9D 23               inc hl
 387+ 8F9E 23               inc hl
 388+ 8F9F 22 32 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FA2              ;                                                   ; _ Disparo_(+1).
 390+ 8FA2 CD 2D 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FA5              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FA5              ;
 393+ 8FA5              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FA5              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FA5              ;                                                     Puntero_de_impresion en HL.
 396+ 8FA5              ;                                                     Impacto/Dirección en BC.
 397+ 8FA5
 398+ 8FA5 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FA6 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FA7 23               inc hl                                          ; _ al siguiente.
 401+ 8FA8 A7               and a
 402+ 8FA9 20 C0            jr nz,3B
 403+ 8FAB
 404+ 8FAB 08               ex af,af
 405+ 8FAC ED 73 1D 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FB0 F9               ld sp,hl
 407+ 8FB1
 408+ 8FB1 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FB3 F5               push af                                         ; Puntero de impresión.
 410+ 8FB4 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FB6 C5               push bc                                         ; Control.
 412+ 8FB7
 413+ 8FB7 ED 7B 1D 8A      ld sp,(Stack)
 414+ 8FBB
 415+ 8FBB              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FBB
 417+ 8FBB 21 0C 8A     	ld hl,Ctrl_1
 418+ 8FBE CB C6        	set 0,(hl)
 419+ 8FC0
 420+ 8FC0 DD E5        	push ix
 421+ 8FC2 E1               pop hl
 422+ 8FC3 F5               push af
 423+ 8FC4 DD E1            pop ix
 424+ 8FC6
 425+ 8FC6 CD A0 7F     	call Guarda_foto_registros
 426+ 8FC9
 427+ 8FC9 21 0C 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FCC CB 86        	res 0,(hl)
 429+ 8FCE
 430+ 8FCE              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FCE              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FCE
 433+ 8FCE CD F6 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FD1 CD EF 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FD4
 436+ 8FD4 C9           4 ret
 437+ 8FD5
 438+ 8FD5              ; ----------------------------------------------------------------
 439+ 8FD5              ;
 440+ 8FD5              ;   4/3/23
 441+ 8FD5              ;
 442+ 8FD5              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FD5              ;   _ al generarse el disparo.
 444+ 8FD5              ;
 445+ 8FD5              ;       "$80" ..... No se produce colisión.
 446+ 8FD5              ;       "$81" ..... Se produce colisión.
 447+ 8FD5              ;
 448+ 8FD5              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FD5              ;         _ que forman el disparo.
 450+ 8FD5
 451+ 8FD5
 452+ 8FD5              Comprueba_Colision
 453+ 8FD5
 454+ 8FD5              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FD5
 456+ 8FD5 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FD7 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FD8
 459+ 8FD8 CD 0E 90         call Modifica_H_Velocidad_disparo
 460+ 8FDB
 461+ 8FDB 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FDC FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FDE 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FE0
 465+ 8FE0 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FE2 CD FE 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FE5
 468+ 8FE5 7B               ld a,e
 469+ 8FE6 E6 01            and 1
 470+ 8FE8 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FEA              ;                                                  ; _ para activar IMPACTO.
 472+ 8FEA E1               pop hl
 473+ 8FEB E5               push hl
 474+ 8FEC CD 5F 96         call NextScan
 475+ 8FEF
 476+ 8FEF 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FF0 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FF2 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FF4              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FF4 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FF6 CD FE 8F         call Bucle_2
 482+ 8FF9
 483+ 8FF9 43           1 ld b,e
 484+ 8FFA E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FFB FD E1            pop iy
 486+ 8FFD C9               ret
 487+ 8FFE
 488+ 8FFE              ; ---------- ----------
 489+ 8FFE
 490+ 8FFE 06 02        Bucle_2 ld b,2
 491+ 9000 FD 7E 00     2 ld a,(iy)
 492+ 9003 A6               and (hl)
 493+ 9004 28 02            jr z,1F
 494+ 9006 1E 81            ld e,$81
 495+ 9008 23           1 inc hl
 496+ 9009 FD 23            inc iy
 497+ 900B 10 F3            djnz 2B
 498+ 900D C9               ret
 499+ 900E
 500+ 900E              ; ---------- ----------
 501+ 900E              ;
 502+ 900E              ;   21/7/23
 503+ 900E
 504+ 900E              Modifica_H_Velocidad_disparo
 505+ 900E
 506+ 900E 3A 43 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9011 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9013 D0               ret nc                                         ; _ incrementamos H.
 509+ 9014 24               inc h
 510+ 9015
 511+ 9015 C9               ret
 512+ 9016
 513+ 9016              ; -------------------------------------------------------------------------------------------------------------
 514+ 9016              ;
 515+ 9016              ;   11/04/23
 516+ 9016              ;
 517+ 9016              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9016              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9016              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9016              ;
 521+ 9016              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9016
 523+ 9016              Compara_coordenadas_X
 524+ 9016
 525+ 9016              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9016              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9016
 528+ 9016              ; Preparamos registros:
 529+ 9016
 530+ 9016 21 CF 89         ld hl,Filas+6
 531+ 9019 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 901A 23               inc hl
 533+ 901B 23               inc hl
 534+ 901C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 901D 43               ld b,e
 536+ 901E
 537+ 901E 21 DD 89         ld hl,Filas+20
 538+ 9021 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9022 21 3E 8A         ld hl,Coordenadas_X_Entidad
 540+ 9025 CD 41 92         call Guarda_coordenadas_X
 541+ 9028
 542+ 9028              ; Preparamos registros:
 543+ 9028
 544+ 9028 21 8A 85         ld hl,Amadeus_db+6
 545+ 902B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 902C 23               inc hl
 547+ 902D 23               inc hl
 548+ 902E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 902F 7B               ld a,e
 550+ 9030 08               ex af,af'
 551+ 9031 21 98 85         ld hl,Amadeus_db+20
 552+ 9034 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9035 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 554+ 9038 CD 41 92         call Guarda_coordenadas_X
 555+ 903B
 556+ 903B              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 903B              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 903B
 559+ 903B 04               inc b
 560+ 903C 05               dec b
 561+ 903D 28 04            jr z,1F
 562+ 903F 06 03            ld b,3
 563+ 9041 18 02            jr 2F
 564+ 9043 06 02        1 ld b,2
 565+ 9045 08           2 ex af,af'
 566+ 9046 3C               inc a
 567+ 9047 3D               dec a
 568+ 9048 28 04            jr z,5F
 569+ 904A 0E 03            ld c,3
 570+ 904C 18 02            jr 6F
 571+ 904E 0E 02        5 ld c,2
 572+ 9050 79           6 ld a,c
 573+ 9051 08               ex af,af'
 574+ 9052 11 3E 8A         ld de,Coordenadas_X_Entidad
 575+ 9055 1A           4 ld a,(de)
 576+ 9056 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9059 BE           3 cp (hl)
 578+ 905A 28 0E            jr z,7F
 579+ 905C 23               inc hl
 580+ 905D 0D               dec c
 581+ 905E 20 F9            jr nz,3B
 582+ 9060 13               inc de
 583+ 9061 08               ex af,af'
 584+ 9062 4F               ld c,a
 585+ 9063 08               ex af,af'
 586+ 9064 10 EF            djnz 4B
 587+ 9066
 588+ 9066              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9066
 590+ 9066 CD 7D 92     8 call Limpia_Coordenadas_X
 591+ 9069 C9               ret
 592+ 906A
 593+ 906A 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 906C 32 E2 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 906F 21 36 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9072 CB D6            set 2,(hl)
 597+ 9074 18 F0            jr 8B
 598+ 9076
 599+ 9076              ; -----------------------------------------------------------------------
 600+ 9076              ;
 601+ 9076              ;   17/04/23
 602+ 9076              ;
 603+ 9076
 604+ 9076              Detecta_colision_nave_entidad
 605+ 9076
 606+ 9076              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9076
 608+ 9076 2A CB 89         ld hl,(Posicion_actual)
 609+ 9079 CD BA 95         call Calcula_puntero_de_impresion
 610+ 907C
 611+ 907C              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 907C              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 907C
 614+ 907C DD E5            push ix
 615+ 907E E1               pop hl
 616+ 907F E5               push hl
 617+ 9080
 618+ 9080              ; ----- ----- -----
 619+ 9080 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9082 06 0A            ld b,10
 621+ 9084 CD B4 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9087 7B               ld a,e
 623+ 9088 FE 05            cp 5
 624+ 908A 38 0E            jr c,3F
 625+ 908C
 626+ 908C              ; LLegados a este punto:
 627+ 908C              ;
 628+ 908C              ;   HAY COLISIÓN !!!!!.
 629+ 908C              ;
 630+ 908C              ;   .db (Impacto) de Amadeus a "1".
 631+ 908C              ;   SET el bit3 de (Impacto2).
 632+ 908C              ;
 633+ 908C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 908C
 635+ 908C 21 9D 85         ld hl,Amadeus_db+25
 636+ 908F 36 01            ld (hl),1
 637+ 9091 21 36 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9094 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9096 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9098 18 18            jr 1F
 641+ 909A
 642+ 909A              ; -----
 643+ 909A
 644+ 909A E1           3 pop hl
 645+ 909B CD 5F 96         call NextScan
 646+ 909E E5               push hl
 647+ 909F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90A0 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90A2 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90A4 30 0C            jr nc,1F
 651+ 90A6              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90A6 10 DC            djnz 2B
 653+ 90A8
 654+ 90A8              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90A8
 656+ 90A8              ; LLegados a este punto:
 657+ 90A8              ;
 658+ 90A8              ;   NO HAY COLISIÓN !!!!!.
 659+ 90A8              ;
 660+ 90A8              ;   .db (Impacto) de Amadeus a "0".
 661+ 90A8              ;   RES el bit2 de (Impacto2).
 662+ 90A8              ;
 663+ 90A8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90A8              ;   Lo colocamos a "0".
 665+ 90A8
 666+ 90A8 21 36 8A         ld hl,Impacto2
 667+ 90AB CB 96            res 2,(hl)
 668+ 90AD 2A 37 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90B0 36 00            ld (hl),0
 670+ 90B2
 671+ 90B2 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90B3 C9               ret
 673+ 90B4
 674+ 90B4               ; ---------- ----------
 675+ 90B4
 676+ 90B4 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90B5 3A CA 89         ld a,(Columns)
 678+ 90B8 47               ld b,a
 679+ 90B9 FD 7E 00     2 ld a,(iy)
 680+ 90BC BE               cp (hl)
 681+ 90BD 28 01            jr z,1F
 682+ 90BF
 683+ 90BF 1C               inc e
 684+ 90C0
 685+ 90C0 23           1 inc hl
 686+ 90C1 FD 23            inc iy
 687+ 90C3 10 F4            djnz 2B
 688+ 90C5 C1               pop bc
 689+ 90C6 C9               ret
 690+ 90C7
 691+ 90C7              ; -------------------------------------------------------------------------------------------------------------
 692+ 90C7              ;
 693+ 90C7              ;   13/03/23
 694+ 90C7              ;
 695+ 90C7              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90C7              ;
 697+ 90C7              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90C7
 699+ 90C7 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90CA 7E               ld a,(hl)
 701+ 90CB A7               and a
 702+ 90CC C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90CD
 704+ 90CD 44               ld b,h
 705+ 90CE 4D               ld c,l
 706+ 90CF 2A 23 8A         ld hl,(Stack_snapshot_disparos)
 707+ 90D2 E5               push hl
 708+ 90D3 A7               and a
 709+ 90D4 ED 42            sbc hl,bc
 710+ 90D6 E5               push hl
 711+ 90D7 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90D8
 713+ 90D8 E1               pop hl
 714+ 90D9 54               ld d,h
 715+ 90DA 5D               ld e,l
 716+ 90DB 1B               dec de
 717+ 90DC ED B8            lddr                                                ; Limpiamos.
 718+ 90DE
 719+ 90DE 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 90E1 22 23 8A         ld (Stack_snapshot_disparos),hl
 721+ 90E4
 722+ 90E4 C9               ret
 723+ 90E5
 724+ 90E5              ; -------------------------------------------------------------------------------------------------------------
 725+ 90E5              ;
 726+ 90E5              ;   18/07/23
 727+ 90E5              ;
 728+ 90E5
 729+ 90E5              Motor_de_disparos
 730+ 90E5
 731+ 90E5              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90E5
 733+ 90E5 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90E8 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90EB
 736+ 90EB CD 2D 8D     2 call Extrae_address
 737+ 90EE 7E               ld a,(hl)
 738+ 90EF A7               and a
 739+ 90F0 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90F2
 741+ 90F2              ; ----- ----- ----- ----- ----- -----
 742+ 90F2
 743+ 90F2 C5               push bc
 744+ 90F3 CD B7 91         call foto_disparo_a_borrar
 745+ 90F6
 746+ 90F6              ; Existe colisión con este disparo???
 747+ 90F6
 748+ 90F6 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90F7 7E               ld a,(hl)
 750+ 90F8 2B               dec hl
 751+ 90F9 E6 01            and 1
 752+ 90FB 28 1D            jr z,9F
 753+ 90FD
 754+ 90FD              ;   En este punto:
 755+ 90FD              ;
 756+ 90FD              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90FD              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90FD              ;   _con la entidad).
 759+ 90FD              ;
 760+ 90FD              ;   Disparo_2A defw 0                                ; Control.
 761+ 90FD              ;    defw 0                                          ; Puntero objeto.
 762+ 90FD              ;    defw 0                                          ; Puntero de impresión.
 763+ 90FD              ;    defw 0                                          ; Rutina de impresión.
 764+ 90FD
 765+ 90FD E5               push hl
 766+ 90FE
 767+ 90FE 06 04            ld b,4
 768+ 9100 23           19 inc hl
 769+ 9101 10 FD            djnz 19B
 770+ 9103
 771+ 9103 CD 2D 8D         call Extrae_address
 772+ 9106 CD E1 9C         call Genera_coordenadas_disparo
 773+ 9109
 774+ 9109              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9109
 776+ 9109 21 39 8A         ld hl,Coordenadas_disparo_certero
 777+ 910C 72               ld (hl),d
 778+ 910D 23               inc hl
 779+ 910E 73               ld (hl),e
 780+ 910F
 781+ 910F              ; Elimino el disparo de la base de datos.
 782+ 910F
 783+ 910F E1               pop hl
 784+ 9110 CD 36 92         call Elimina_disparo_de_base_de_datos
 785+ 9113 21 36 8A         ld hl,Impacto2
 786+ 9116 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9118
 788+ 9118 18 06            jr 11F
 789+ 911A
 790+ 911A CD E0 91     9 call Mueve_disparo
 791+ 911D CD B7 91         call foto_disparo_a_borrar
 792+ 9120
 793+ 9120 C1           11 pop bc
 794+ 9121 18 04            jr 7F
 795+ 9123
 796+ 9123              ; ----- ----- ----- ----- ----- -----
 797+ 9123
 798+ 9123 ED 42        1 sbc hl,bc
 799+ 9125 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9127
 801+ 9127 2A 34 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 912A 23               inc hl
 803+ 912B 23               inc hl
 804+ 912C 22 34 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 912F 18 BA            jr 2B
 806+ 9131
 807+ 9131 CD F6 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9134              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9134
 810+ 9134              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9134
 812+ 9134 01 6A 85         ld bc,Disparo_11
 813+ 9137 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 913A
 815+ 913A CD 2D 8D     5 call Extrae_address
 816+ 913D 7E               ld a,(hl)
 817+ 913E A7               and a
 818+ 913F 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9141
 820+ 9141              ; ----- ----- ----- ----- ----- -----
 821+ 9141
 822+ 9141 C5               push bc
 823+ 9142 CD B7 91         call foto_disparo_a_borrar
 824+ 9145
 825+ 9145              ; Existe colisión con este disparo???
 826+ 9145
 827+ 9145 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9146 7E               ld a,(hl)
 829+ 9147 2B               dec hl
 830+ 9148 E6 01            and 1
 831+ 914A 28 4D            jr z,10F
 832+ 914C
 833+ 914C              ;! La colisión se produce con Amadeus???
 834+ 914C              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 914C
 836+ 914C E5               push hl
 837+ 914D
 838+ 914D 06 04            ld b,4
 839+ 914F 23           16 inc hl
 840+ 9150 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9152
 842+ 9152 CD 2D 8D         call Extrae_address
 843+ 9155 CD E1 9C         call Genera_coordenadas_disparo
 844+ 9158
 845+ 9158 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9159 FE 16            cp $16
 847+ 915B 38 2A            jr c,15F
 848+ 915D
 849+ 915D
 850+ 915D              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 915D
 852+ 915D D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 915E
 854+ 915E              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 915E
 856+ 915E
 857+ 915E 2A 41 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9161
 859+ 9161              ; Coordenada X de Amadeus en D.
 860+ 9161
 861+ 9161 7D               ld a,l
 862+ 9162 E6 1F            and $1F
 863+ 9164 57               ld d,a
 864+ 9165
 865+ 9165 21 8C 85         ld hl,Amadeus_db+8
 866+ 9168 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9169
 868+ 9169 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 869+ 916C CD 41 92         call Guarda_coordenadas_X
 870+ 916F
 871+ 916F D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9170
 873+ 9170              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9170
 875+ 9170 06 02            ld b,2
 876+ 9172 C5           20 push bc
 877+ 9173
 878+ 9173 06 03            ld b,3
 879+ 9175 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9178 7E           18 ld a,(hl)
 881+ 9179 BA               cp d
 882+ 917A 20 04            jr nz,17F
 883+ 917C
 884+ 917C              ;! Colisión Amadeus !!!!!!!!!!
 885+ 917C
 886+ 917C C1               pop bc
 887+ 917D E1               pop hl
 888+ 917E 18 0D            jr 14F
 889+ 9180
 890+ 9180 23           17 inc hl
 891+ 9181 10 F5            djnz 18B
 892+ 9183
 893+ 9183 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9184
 895+ 9184 C1               pop bc
 896+ 9185 10 EB            djnz 20B
 897+ 9187
 898+ 9187
 899+ 9187              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9187              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9187
 902+ 9187 E1           15 pop hl
 903+ 9188 23               inc hl
 904+ 9189 35               dec (hl)
 905+ 918A 2B               dec hl
 906+ 918B 18 0C            jr 10F
 907+ 918D
 908+ 918D              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 918D              ; _ almacén de coordenadas_X de Amadeus.
 910+ 918D
 911+ 918D E5           14 push hl
 912+ 918E CD 36 92         call Elimina_disparo_de_base_de_datos
 913+ 9191 21 36 8A         ld hl,Impacto2
 914+ 9194 CB CE            set 1,(hl)
 915+ 9196 E1               pop hl
 916+ 9197 18 06            jr 12F
 917+ 9199
 918+ 9199              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9199
 920+ 9199 CD E0 91     10 call Mueve_disparo
 921+ 919C CD B7 91         call foto_disparo_a_borrar
 922+ 919F C1           12 pop bc
 923+ 91A0
 924+ 91A0 18 04            jr 8F
 925+ 91A2
 926+ 91A2              ; ----- ----- ----- ----- ----- -----
 927+ 91A2
 928+ 91A2 ED 42        4 sbc hl,bc
 929+ 91A4 28 0A            jr z,6F
 930+ 91A6
 931+ 91A6 2A 32 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91A9 23               inc hl
 933+ 91AA 23               inc hl
 934+ 91AB 22 32 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91AE 18 8A            jr 5B
 936+ 91B0
 937+ 91B0 CD EF 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91B3 CD 7D 92         call Limpia_Coordenadas_X
 939+ 91B6 C9               ret
 940+ 91B7
 941+ 91B7              ; ------------------------------------------------------------------
 942+ 91B7
 943+ 91B7              foto_disparo_a_borrar
 944+ 91B7
 945+ 91B7 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91B8 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91B9 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91BA
 949+ 91BA E5               push hl
 950+ 91BB 23               inc hl
 951+ 91BC 23               inc hl
 952+ 91BD ED 73 1D 8A      ld (Stack),sp
 953+ 91C1 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91C2 FD E1            pop iy
 955+ 91C4 DD E1            pop ix
 956+ 91C6 E1               pop hl
 957+ 91C7 ED 7B 1D 8A      ld sp,(Stack)
 958+ 91CB 3A 0C 8A         ld a,(Ctrl_1)
 959+ 91CE CB C7            set 0,a
 960+ 91D0 32 0C 8A         ld (Ctrl_1),a
 961+ 91D3 CD A0 7F         call Guarda_foto_registros
 962+ 91D6 3A 0C 8A         ld a,(Ctrl_1)
 963+ 91D9 CB 87            res 0,a
 964+ 91DB 32 0C 8A         ld (Ctrl_1),a
 965+ 91DE E1               pop hl
 966+ 91DF C9               ret
 967+ 91E0
 968+ 91E0              ;---------------------------------------------------
 969+ 91E0              ;
 970+ 91E0              ;   18/07/23
 971+ 91E0              ;
 972+ 91E0
 973+ 91E0              Mueve_disparo
 974+ 91E0
 975+ 91E0              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91E0              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91E0              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91E0
 979+ 91E0 E5               push hl
 980+ 91E1
 981+ 91E1 7E               ld a,(hl)
 982+ 91E2
 983+ 91E2 06 04            ld b,4
 984+ 91E4 23           1 inc hl
 985+ 91E5 10 FD            djnz 1B
 986+ 91E7
 987+ 91E7              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91E7
 989+ 91E7 CD 2D 8D         call Extrae_address
 990+ 91EA
 991+ 91EA E6 01            and 1
 992+ 91EC 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91EE
 994+ 91EE              ; Disparo hacia arriba, (Amadeus).
 995+ 91EE
 996+ 91EE              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91EE              ; _ de la dificultad.
 998+ 91EE
 999+ 91EE CD 6E 96         call PreviousScan
1000+ 91F1 CD 6E 96         call PreviousScan
1001+ 91F4 CD 6E 96         call PreviousScan
1002+ 91F7 CD 6E 96         call PreviousScan
1003+ 91FA
1004+ 91FA              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91FA
1006+ 91FA 7C               ld a,h
1007+ 91FB FE 40            cp $40
1008+ 91FD 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91FF
1010+ 91FF              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91FF
1012+ 91FF EB               ex de,hl
1013+ 9200 06 04            ld b,4
1014+ 9202 2B           6 dec hl
1015+ 9203 10 FD            djnz 6B
1016+ 9205
1017+ 9205 CD 36 92         call Elimina_disparo_de_base_de_datos
1018+ 9208 E1               pop hl
1019+ 9209 18 10            jr 7F
1020+ 920B
1021+ 920B              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 920B              ; HL contiene el puntero de impresión del disparo.
1023+ 920B              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 920B
1025+ 920B D5           3 push de
1026+ 920C C5               push bc
1027+ 920D
1028+ 920D CD D5 8F         call Comprueba_Colision
1029+ 9210
1030+ 9210              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9210
1032+ 9210 78               ld a,b
1033+ 9211
1034+ 9211 C1               pop bc
1035+ 9212 D1               pop de
1036+ 9213
1037+ 9213 EB               ex de,hl
1038+ 9214
1039+ 9214 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9215 23               inc hl                                      ; _ movimiento.
1041+ 9216 72               ld (hl),d
1042+ 9217
1043+ 9217 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9218
1045+ 9218 23               inc hl                                      ; _ en curso.
1046+ 9219 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 921A 2B               dec hl
1048+ 921B
1049+ 921B C9           7 ret
1050+ 921C
1051+ 921C              ; Disparo hacia abajo, (Entidad).
1052+ 921C
1053+ 921C 3A 43 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 921F 47               ld b,a
1055+ 9220
1056+ 9220 CD 5F 96     4 call NextScan
1057+ 9223 10 FB            djnz 4B
1058+ 9225
1059+ 9225              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9225
1061+ 9225 7C               ld a,h
1062+ 9226 FE 58            cp $58
1063+ 9228 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 922A
1065+ 922A EB               ex de,hl
1066+ 922B 06 04            ld b,4
1067+ 922D 2B           5 dec hl
1068+ 922E 10 FD            djnz 5B
1069+ 9230
1070+ 9230 CD 36 92         call Elimina_disparo_de_base_de_datos
1071+ 9233 E1               pop hl
1072+ 9234 18 E5            jr 7B
1073+ 9236
1074+ 9236              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9236
1076+ 9236 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9239 AF               xor a
1078+ 923A 77               ld (hl),a
1079+ 923B 54               ld d,h
1080+ 923C 5D               ld e,l
1081+ 923D 13               inc de
1082+ 923E ED B0            ldir
1083+ 9240 C9               ret
1084+ 9241
1085+ 9241              ; -----------------------------------------------------------------
1086+ 9241              ;
1087+ 9241              ;   19/7/23
1088+ 9241              ;
1089+ 9241              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9241              ;
1091+ 9241              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9241              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9241              ;
1094+ 9241              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9241              ;
1096+ 9241              ;   INPUTS:
1097+ 9241              ;
1098+ 9241              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9241              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9241
1101+ 9241              ;   MODIFICA: A, HL, BC y DE.
1102+ 9241
1103+ 9241              Guarda_coordenadas_X
1104+ 9241
1105+ 9241 7B               ld a,e
1106+ 9242 A7               and a
1107+ 9243 20 04            jr nz,1F
1108+ 9245
1109+ 9245 06 02            ld b,2
1110+ 9247 18 02            jr 2F
1111+ 9249
1112+ 9249 06 03        1 ld b,3
1113+ 924B 72           2 ld (hl),d
1114+ 924C 23               inc hl
1115+ 924D 14               inc d
1116+ 924E 10 FB            djnz 2B
1117+ 9250
1118+ 9250 C9               ret
1119+ 9251
1120+ 9251              ; -----------------------------------------------------------------
1121+ 9251              ;
1122+ 9251              ;   12/04/23
1123+ 9251              ;
1124+ 9251
1125+ 9251 3A 36 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9254 A7               and a
1127+ 9255 C8               ret z
1128+ 9256
1129+ 9256 FE 04            cp 4
1130+ 9258 20 09            jr nz,1F
1131+ 925A
1132+ 925A
1133+ 925A              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 925A
1135+ 925A CD 76 90         call Detecta_colision_nave_entidad
1136+ 925D
1137+ 925D 21 36 8A         ld hl,Impacto2
1138+ 9260 CB 5E            bit 3,(hl)
1139+ 9262 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9263
1141+ 9263              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9263              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9263
1144+ 9263 21 36 8A     1 ld hl,Impacto2
1145+ 9266 CB 4E            bit 1,(hl)
1146+ 9268 28 07            jr z,2F
1147+ 926A
1148+ 926A 21 9D 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 926D 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 926F 18 0B            jr 3F
1151+ 9271
1152+ 9271 21 36 8A     2 ld hl,Impacto2
1153+ 9274 CB 46            bit 0,(hl)
1154+ 9276 C8               ret z
1155+ 9277
1156+ 9277              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9277
1158+ 9277 21 0C 8A         ld hl,Ctrl_1
1159+ 927A CB D6            set 2,(hl)
1160+ 927C
1161+ 927C C9           3 ret
1162+ 927D
1163+ 927D              ; -----------------------------------------------------------------
1164+ 927D              ;
1165+ 927D              ;   19/7/23
1166+ 927D              ;
1167+ 927D              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 927D
1169+ 927D AF           Limpia_Coordenadas_X xor a
1170+ 927E 06 06            ld b,6
1171+ 9280 21 3B 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9283 77           1 ld (hl),a
1173+ 9284 23               inc hl
1174+ 9285 10 FC            djnz 1B
1175+ 9287 C9               ret
1176+ 9288
1177+ 9288              ; -----------------------------------------------------------------
1178+ 9288              ;
1179+ 9288              ;   25/04/23
1180+ 9288              ;
1181+ 9288
1182+ 9288              Determina_resultado_comparativa
1183+ 9288
1184+ 9288              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9288              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9288              ;
1187+ 9288              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9288              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9288              ;
1190+ 9288              ;   SBC HL,DE
1191+ 9288
1192+ 9288              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9288              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9288
1195+ 9288              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9288              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9288
1198+ 9288
1199+ 9288 3A DD 89         ld a,(Cuad_objeto)
1200+ 928B FE 02            cp 2
1201+ 928D 28 26            jr z,2F
1202+ 928F 38 24            jr c,2F
1203+ 9291
1204+ 9291              ; Cuadrantes 3º y 4º
1205+ 9291
1206+ 9291 E6 01            and 1
1207+ 9293 28 10            jr z,4F
1208+ 9295
1209+ 9295              ; Cuadrante 3º
1210+ 9295
1211+ 9295 7C               ld a,h
1212+ 9296 06 00            ld b,0
1213+ 9298
1214+ 9298 CD 23 93         call Compara_cositas_H3
1215+ 929B
1216+ 929B 04               inc b
1217+ 929C 05               dec b
1218+ 929D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 929E
1220+ 929E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 929F 06 00            ld b,0
1222+ 92A1
1223+ 92A1 CD 35 93         call Compara_cositas_L3
1224+ 92A4 C9               ret
1225+ 92A5
1226+ 92A5              ; Cuadrante 4º
1227+ 92A5
1228+ 92A5 7C           4 ld a,h
1229+ 92A6 06 00            ld b,0
1230+ 92A8
1231+ 92A8 CD 47 93         call Compara_cositas_H4
1232+ 92AB
1233+ 92AB 04               inc b
1234+ 92AC 05               dec b
1235+ 92AD C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92AE
1237+ 92AE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92AF 06 00            ld b,0
1239+ 92B1
1240+ 92B1 CD 5D 93         call Compara_cositas_L4
1241+ 92B4 C9               ret
1242+ 92B5
1243+ 92B5              ; Cuadrantes 1º y 2º.
1244+ 92B5
1245+ 92B5 28 10        2 jr z,3F
1246+ 92B7
1247+ 92B7              ; 1er Cuadrante
1248+ 92B7
1249+ 92B7 7C               ld a,h
1250+ 92B8 06 00            ld b,0
1251+ 92BA
1252+ 92BA CD FB 92         call Compara_cositas_H1
1253+ 92BD
1254+ 92BD 04               inc b
1255+ 92BE 05               dec b
1256+ 92BF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92C0
1258+ 92C0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92C1 06 00            ld b,0
1260+ 92C3
1261+ 92C3 CD 11 93         call Compara_cositas_L1
1262+ 92C6 C9               ret
1263+ 92C7
1264+ 92C7
1265+ 92C7              ; 2º Cuadrante
1266+ 92C7
1267+ 92C7 7C           3 ld a,h
1268+ 92C8 06 00            ld b,0
1269+ 92CA
1270+ 92CA CD D7 92         call Compara_cositas_H2
1271+ 92CD
1272+ 92CD 04               inc b
1273+ 92CE 05               dec b
1274+ 92CF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92D0
1276+ 92D0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92D1 06 00            ld b,0
1278+ 92D3
1279+ 92D3 CD E9 92         call Compara_cositas_L2
1280+ 92D6 C9               ret
1281+ 92D7
1282+ 92D7 A7           Compara_cositas_H2 and a
1283+ 92D8 28 0D            jr z,1F
1284+ 92DA              ;    cp $fd
1285+ 92DA              ;    jr z,1F
1286+ 92DA              ;    cp $fe
1287+ 92DA              ;    jr z,1F
1288+ 92DA FE FF            cp $ff
1289+ 92DC 28 09            jr z,1F
1290+ 92DE FE 01            cp $01
1291+ 92E0 28 05            jr z,1F
1292+ 92E2 FE 02            cp $02
1293+ 92E4 28 01            jr z,1F
1294+ 92E6 C0               ret nz
1295+ 92E7 04           1 inc b
1296+ 92E8 C9               ret
1297+ 92E9
1298+ 92E9 A7           Compara_cositas_L2 and a
1299+ 92EA 28 0D            jr z,1F
1300+ 92EC              ;    cp $fd
1301+ 92EC              ;    jr z,1F
1302+ 92EC FE FE            cp $fe
1303+ 92EE 28 09            jr z,1F
1304+ 92F0 FE FF            cp $ff
1305+ 92F2 28 05            jr z,1F
1306+ 92F4 FE 01            cp $01
1307+ 92F6 28 01            jr z,1F
1308+ 92F8              ;    cp $02
1309+ 92F8              ;    jr z,1F
1310+ 92F8 C0               ret nz
1311+ 92F9 04           1 inc b
1312+ 92FA C9               ret
1313+ 92FB
1314+ 92FB A7           Compara_cositas_H1 and a
1315+ 92FC 28 11            jr z,1F
1316+ 92FE              ;    cp $fd
1317+ 92FE              ;    jr z,1F
1318+ 92FE              ;    cp $fe
1319+ 92FE              ;    jr z,1F
1320+ 92FE FE FF            cp $ff
1321+ 9300 28 0D            jr z,1F
1322+ 9302 FE 01            cp $01
1323+ 9304 28 09            jr z,1F
1324+ 9306 FE 02            cp $02
1325+ 9308 28 05            jr z,1F
1326+ 930A FE 03            cp $03
1327+ 930C 28 01            jr z,1F
1328+ 930E C0               ret nz
1329+ 930F 04           1 inc b
1330+ 9310 C9               ret
1331+ 9311
1332+ 9311 A7           Compara_cositas_L1 and a
1333+ 9312 28 0D            jr z,1F
1334+ 9314              ;    cp $fd
1335+ 9314              ;    jr z,1F
1336+ 9314              ;    cp $fe
1337+ 9314              ;    jr z,1F
1338+ 9314              ;    cp $ff
1339+ 9314              ;    jr z,1F
1340+ 9314 FE 01            cp $01
1341+ 9316 28 09            jr z,1F
1342+ 9318 FE 02            cp $02
1343+ 931A 28 05            jr z,1F
1344+ 931C FE 03            cp $03
1345+ 931E 28 01            jr z,1F
1346+ 9320 C0               ret nz
1347+ 9321 04           1 inc b
1348+ 9322 C9               ret
1349+ 9323
1350+ 9323 A7           Compara_cositas_H3 and a
1351+ 9324 28 0D            jr z,1F
1352+ 9326              ;    cp $fd
1353+ 9326              ;    jr z,1F
1354+ 9326 FE FE            cp $fe
1355+ 9328 28 09            jr z,1F
1356+ 932A FE FF            cp $ff
1357+ 932C 28 05            jr z,1F
1358+ 932E FE 01            cp $01
1359+ 9330 28 01            jr z,1F
1360+ 9332              ;    cp $02
1361+ 9332              ;    jr z,1F
1362+ 9332              ;    cp $03
1363+ 9332              ;    jr z,1F
1364+ 9332 C0               ret nz
1365+ 9333 04           1 inc b
1366+ 9334 C9               ret
1367+ 9335
1368+ 9335 A7           Compara_cositas_L3 and a
1369+ 9336 28 0D            jr z,1F
1370+ 9338              ;    cp $fd
1371+ 9338              ;    jr z,1F
1372+ 9338              ;    cp $fe
1373+ 9338              ;    jr z,1F
1374+ 9338              ;    cp $ff
1375+ 9338              ;    jr z,1F
1376+ 9338 FE 01            cp $01
1377+ 933A 28 09            jr z,1F
1378+ 933C FE 02            cp $02
1379+ 933E 28 05            jr z,1F
1380+ 9340 FE 03            cp $03
1381+ 9342 28 01            jr z,1F
1382+ 9344 C0               ret nz
1383+ 9345 04           1 inc b
1384+ 9346 C9               ret
1385+ 9347
1386+ 9347 A7           Compara_cositas_H4 and a
1387+ 9348 28 11            jr z,1F
1388+ 934A FE FD            cp $fd
1389+ 934C 28 0D            jr z,1F
1390+ 934E FE FE            cp $fe
1391+ 9350 28 09            jr z,1F
1392+ 9352 FE FF            cp $ff
1393+ 9354 28 05            jr z,1F
1394+ 9356 FE 01            cp $01
1395+ 9358 28 01            jr z,1F
1396+ 935A              ;    cp $02
1397+ 935A              ;    jr z,1F
1398+ 935A              ;    cp $03
1399+ 935A              ;    jr z,1F
1400+ 935A C0               ret nz
1401+ 935B 04           1 inc b
1402+ 935C C9               ret
1403+ 935D
1404+ 935D A7           Compara_cositas_L4 and a
1405+ 935E 28 0D            jr z,1F
1406+ 9360              ;    cp $fd
1407+ 9360              ;    jr z,1F
1408+ 9360 FE FE            cp $fe
1409+ 9362 28 09            jr z,1F
1410+ 9364 FE FF            cp $ff
1411+ 9366 28 05            jr z,1F
1412+ 9368 FE 01            cp $01
1413+ 936A 28 01            jr z,1F
1414+ 936C              ;    cp $02
1415+ 936C              ;    jr z,1F
1416+ 936C              ;    cp $03
1417+ 936C              ;    jr z,1F
1418+ 936C C0               ret nz
1419+ 936D 04           1 inc b
1420+ 936E C9               ret
# file closed: Disparo.asm
1299  936F              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 936F              ; ******************************************************************************************************************************************************************************************
   2+ 936F              ;
   3+ 936F              ; 26/06/23
   4+ 936F              ;
   5+ 936F              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 936F
   7+ 936F CD 53 96     Draw call Prepara_draw
   8+ 9372 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9373 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9374 28 05        	jr z,2F
  11+ 9376
  12+ 9376 3A DD 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9379 18 0C        	jr 1F
  14+ 937B
  15+ 937B 2A DB 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 937E 22 CB 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9381 CD 10 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9384              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9384 CD 5D 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9387
  21+ 9387 3A F7 89     1 ld a,(Ctrl_0)
  22+ 938A CB 6F        	bit 5,a
  23+ 938C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 938E
  25+ 938E CD A6 93     	call Comprueba_limite_horizontal
  26+ 9391 CD 36 94     	call Comprueba_limite_vertical
  27+ 9394
  28+ 9394              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9394              ; -----------------------
  30+ 9394              ; -----------------------
  31+ 9394              ; -----------------------
  32+ 9394
  33+ 9394 CD 83 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9397 CD BA 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 939A CD 19 96     	call Define_rutina_de_impresion
  36+ 939D
  37+ 939D 3A F7 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93A0 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93A2 32 F7 89     	ld (Ctrl_0),a
  40+ 93A5
  41+ 93A5 C9           	ret
  42+ 93A6
  43+ 93A6              ; *******************************************************************************************************************************************************************************************
  44+ 93A6              ;	21/01/23
  45+ 93A6              ;
  46+ 93A6              ; 	Comprueba_limite_horizontal.
  47+ 93A6              ;
  48+ 93A6              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93A6              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93A6              ;
  51+ 93A6              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93A6              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93A6              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93A6              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93A6
  56+ 93A6
  57+ 93A6
  58+ 93A6 3A F7 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93A9 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93AB 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93AD E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93AF 32 F7 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93B2 18 09            jr 6F
  64+ 93B4 CB 5F        1 bit 3,a
  65+ 93B6 28 0A            jr z,2F
  66+ 93B8 E6 F7            and $f7
  67+ 93BA 32 F7 89         ld (Ctrl_0),a
  68+ 93BD CD 10 95     6 call Inicializacion
  69+ 93C0 18 5B            jr 5F
  70+ 93C2 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93C3
  72+ 93C3              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93C3              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93C3
  75+ 93C3 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93C4 2A 07 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93C7 CD 2B 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93CA 67           	ld h,a
  79+ 93CB EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93CC CD 2B 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93CF 67           	ld h,a
  82+ 93D0 A7           	and a
  83+ 93D1 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93D3 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93D4 3A DD 89     	ld a,(Cuad_objeto)
  86+ 93D7 FE 02        	cp 2
  87+ 93D9 38 1E        	jr c,3F
  88+ 93DB 28 1C        	jr z,3F
  89+ 93DD 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93DE 28 23            jr z,7F
  91+ 93E0 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93E2 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93E4 E1           	pop hl
  94+ 93E5
  95+ 93E5              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93E5              ; _para indicar con E="2" en caso necesario.
  97+ 93E5
  98+ 93E5 E5               push hl
  99+ 93E6 C5               push bc
 100+ 93E7 CD 2B 99     	call calcula_tercio
 101+ 93EA FE 01        	cp 1
 102+ 93EC 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93EE CD 1E 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93F1 28 26            jr z,9F
 105+ 93F3 38 24            jr c,9F
 106+ 93F5 1E 00        11 ld e,0
 107+ 93F7 18 22            jr 8F
 108+ 93F9 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93FA 28 07        	jr z, 7F
 110+ 93FC 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93FE 1E 00         	ld e,0
 112+ 9400 E1           	pop hl
 113+ 9401 18 04        	jr 4F
 114+ 9403 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9405 18 15            jr 10F
 116+ 9407
 117+ 9407              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9407              ; _para indicar con E="2" en caso necesario.
 119+ 9407
 120+ 9407 E5           4 push hl
 121+ 9408 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9409 CD 2B 99     	call calcula_tercio
 123+ 940C FE 01        	cp 1
 124+ 940E 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9410 CD 1E 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9413 28 04            jr z,9F
 127+ 9415 30 02            jr nc,9F
 128+ 9417 18 02        	jr 8F
 129+ 9419 1E 02        9 ld e,2
 130+ 941B C1           8 pop bc
 131+ 941C E1           10 pop hl
 132+ 941D C9           5 ret
 133+ 941E
 134+ 941E              ; --------------------
 135+ 941E              ;
 136+ 941E              ; 25/08/22
 137+ 941E
 138+ 941E CD 2B 99     Comprueba_centro call calcula_tercio
 139+ 9421 67               ld h,a
 140+ 9422 08           	ex af,af
 141+ 9423 FE 02        	cp 2
 142+ 9425 38 07        	jr c,1F
 143+ 9427 28 05        	jr z,1F
 144+ 9429 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 942C 18 03        	jr 2F
 146+ 942E 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9431 08           2 ex af,af
 148+ 9432 A7               and a
 149+ 9433 ED 42            sbc hl,bc
 150+ 9435 C9               ret
 151+ 9436
 152+ 9436              ; *********************************************************************************************************************************************************************************************
 153+ 9436              ;
 154+ 9436              ;   16/8/22
 155+ 9436              ;
 156+ 9436              ;	Comprueba_limite_vertical
 157+ 9436              ;
 158+ 9436              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9436              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9436              ;
 161+ 9436
 162+ 9436 2A CB 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9439 7D           	ld a,l
 164+ 943A E6 1F        	and $1F
 165+ 943C 57           	ld d,a
 166+ 943D 3A 09 8A     	ld a,(Limite_vertical)
 167+ 9440 BA           	cp d 											; Límite - Posición.
 168+ 9441 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9442 3A DD 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9445 CB 47        	bit 0,a
 171+ 9447 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9449
 173+ 9449              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9449
 175+ 9449 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 944A 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 944C
 178+ 944C              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 944C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 944C
 181+ 944C 3A CF 89         ld a,(Coordenada_X)
 182+ 944F 16 0F            ld d,Centro_izquierda
 183+ 9451 A7               and a
 184+ 9452 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9453 28 1E            jr z,3F
 186+ 9455 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9457              ;                                                    ; _salimos sin modificar nada.
 188+ 9457 18 0E            jr 2F
 189+ 9459 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 945A 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 945C
 192+ 945C              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 945C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 945C
 195+ 945C 3A CF 89         ld a,(Coordenada_X)
 196+ 945F 16 10            ld d,Centro_derecha
 197+ 9461 A7               and a
 198+ 9462 92               sub d
 199+ 9463 28 0E            jr z,3F
 200+ 9465 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9467              ;                                                    ; _salimos sin modificar nada.
 202+ 9467 CB 43        2 bit 0,e
 203+ 9469 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 946B C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 946C CD 00 95         call Modificaccionne
 206+ 946F C1           	pop bc
 207+ 9470 CD 10 95         call Inicializacion
 208+ 9473 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9474
 210+ 9474              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9474
 212+ 9474 C5           4 push bc
 213+ 9475 01 CA 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9478 0A           	ld a,(bc)
 215+ 9479 3D           	dec a
 216+ 947A 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 947B 7D           	ld a,l
 218+ 947C 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 947D CB 47        	bit 0,a
 220+ 947F 28 03        	jr z,5F
 221+ 9481 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9482 18 2E        	jr 7F
 223+ 9484
 224+ 9484              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9484
 226+ 9484 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9485 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9486 3A F7 89     	ld a,(Ctrl_0)
 229+ 9489 CB 4F        	bit 1,a
 230+ 948B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 948D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 948E
 233+ 948E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 948E
 235+ 948E 1C               inc e
 236+ 948F 1D               dec e
 237+ 9490 20 07            jr nz,12F
 238+ 9492 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9493 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9494 22 CB 89     	ld (Posicion_actual),hl
 241+ 9497 18 44        13 jr 9F
 242+ 9499 CB 43        12 bit 0,e
 243+ 949B 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 949D              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 949D C1           	pop bc
 246+ 949E 18 D3        	jr 3B
 247+ 94A0 80           14 add b
 248+ 94A1 6F               ld l,a
 249+ 94A2 22 CB 89     	ld (Posicion_actual),hl
 250+ 94A5 CD 00 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94A8 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94AA E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94AC 32 F7 89         ld (Ctrl_0),a
 254+ 94AF F1           	pop af
 255+ 94B0 18 2B        	jr 9F
 256+ 94B2
 257+ 94B2              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94B2
 259+ 94B2 F5           7 push af
 260+ 94B3 3A F7 89     	ld a,(Ctrl_0)
 261+ 94B6 CB 47        	bit 0,a
 262+ 94B8 20 1D        	jr nz,8F
 263+ 94BA F1           	pop af
 264+ 94BB
 265+ 94BB              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94BB
 267+ 94BB 1C           	inc e
 268+ 94BC 1D               dec e
 269+ 94BD 20 07            jr nz,10F
 270+ 94BF 90           	sub b
 271+ 94C0 6F               ld l,a
 272+ 94C1 22 CB 89     	ld (Posicion_actual),hl
 273+ 94C4 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94C6              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94C6 CB 43        10 bit 0,e
 276+ 94C8 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94CA              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94CA C1           	pop bc
 279+ 94CB 18 A6        	jr 3B
 280+ 94CD 90           16 sub b
 281+ 94CE 6F               ld l,a
 282+ 94CF 22 CB 89     	ld (Posicion_actual),hl
 283+ 94D2 CD 00 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94D5 18 06            jr 9F
 285+ 94D7 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94D9 32 F7 89         ld (Ctrl_0),a
 287+ 94DC F1           	pop af
 288+ 94DD C1           9 pop bc
 289+ 94DE 1E 00        	ld e,0
 290+ 94E0 CD 10 95         call Inicializacion
 291+ 94E3 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94E4 08           	ex af,af
 293+ 94E5 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94E6 18 8B            jr 3B
 295+ 94E8
 296+ 94E8              ; --------------------
 297+ 94E8
 298+ 94E8 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94EA CD 6E 96     1 call PreviousScan
 300+ 94ED 10 FB            djnz 1B
 301+ 94EF 22 CB 89     	ld (Posicion_actual),hl
 302+ 94F2 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94F3 C9           	ret
 304+ 94F4
 305+ 94F4              ; --------------------
 306+ 94F4
 307+ 94F4 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94F6 CD 5F 96     1 call NextScan
 309+ 94F9 10 FB            djnz 1B
 310+ 94FB 22 CB 89     	ld (Posicion_actual),hl
 311+ 94FE AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94FF C9           	ret
 313+ 9500
 314+ 9500              ; --------------------
 315+ 9500              ;
 316+ 9500              ;	22/01/23
 317+ 9500              ;
 318+ 9500              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9500              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9500              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9500
 322+ 9500
 323+ 9500              Modificaccionne
 324+ 9500
 325+ 9500 3A DD 89     	ld a,(Cuad_objeto)
 326+ 9503 FE 02        	cp 2
 327+ 9505 CC E8 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9508 DC E8 94         call c,Modifica_Pos_actual
 329+ 950B C8           	ret z
 330+ 950C CD F4 94         call Modifica_Pos_actual2
 331+ 950F C9               ret
 332+ 9510
 333+ 9510              ; *************************************************************************************************************************************************************************************************
 334+ 9510              ;
 335+ 9510              ;	13/8/22
 336+ 9510              ;
 337+ 9510              ;	Inicializacion
 338+ 9510              ;
 339+ 9510              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9510              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9510              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9510              ;
 343+ 9510              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9510              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9510              ;	_ desaparece/aparece.
 346+ 9510
 347+ 9510              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9510              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9510              ;
 350+ 9510              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9510              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9510              ; 		   [E] ="0"
 353+ 9510
 354+ 9510              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9510
 356+ 9510 CD 2B 99     Inicializacion call calcula_tercio
 357+ 9513 28 36        	jr z,primit
 358+ 9515 E6 02        	and 2
 359+ 9517 20 07        	jr nz,segmit
 360+ 9519 7D           	ld a,l
 361+ 951A FE 7F        	cp $7f
 362+ 951C 38 2D        	jr c,primit
 363+ 951E 28 2B        	jr z,primit
 364+ 9520 CD 7D 95     segmit call column
 365+ 9523 38 13        	jr c,tercuad
 366+ 9525 3E 04        cuarcuad ld a,4
 367+ 9527 32 DD 89     	ld (Cuad_objeto),a
 368+ 952A 21 20 48     	ld hl,$4820
 369+ 952D 22 07 8A     	ld (Limite_horizontal),hl
 370+ 9530 21 09 8A     	ld hl,Limite_vertical
 371+ 9533 36 0D        	ld (hl),$0d
 372+ 9535 08           	ex af,af
 373+ 9536 18 3C        	jr 1F
 374+ 9538              tercuad
 375+ 9538 3E 03        	ld a,3
 376+ 953A 32 DD 89     	ld (Cuad_objeto),a
 377+ 953D 21 20 48     	ld hl,$4820
 378+ 9540 22 07 8A     	ld (Limite_horizontal),hl
 379+ 9543 21 09 8A     	ld hl,Limite_vertical
 380+ 9546 36 12        	ld (hl),$12
 381+ 9548 08           	ex af,af
 382+ 9549 18 29        	jr 1F
 383+ 954B CD 7D 95     primit call column
 384+ 954E 38 13        	jr c, primcuad
 385+ 9550              segcuad
 386+ 9550 3E 02        	ld a,2
 387+ 9552 32 DD 89     	ld (Cuad_objeto),a
 388+ 9555 21 C0 4F     	ld hl,$4fc0
 389+ 9558 22 07 8A     	ld (Limite_horizontal),hl
 390+ 955B 21 09 8A     	ld hl,Limite_vertical
 391+ 955E 36 0D        	ld (hl),$0d
 392+ 9560 08           	ex af,af
 393+ 9561 18 11        	jr 1F
 394+ 9563              primcuad
 395+ 9563 3E 01        	ld a,1
 396+ 9565 32 DD 89     	ld (Cuad_objeto),a
 397+ 9568 21 C0 4F     	ld hl,$4fc0
 398+ 956B 22 07 8A     	ld (Limite_horizontal),hl
 399+ 956E 21 09 8A     	ld hl,Limite_vertical
 400+ 9571 36 12        	ld (hl),$12
 401+ 9573 08           	ex af,af
 402+ 9574 CD B6 9C     1 call Genera_coordenadas
 403+ 9577 21 F7 89     	ld hl,Ctrl_0
 404+ 957A CB EE        	set 5,(hl)
 405+ 957C C9           	ret
 406+ 957D
 407+ 957D              ; ------------------------------------------------------------------------------------------------------------------
 408+ 957D
 409+ 957D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 957D              ;
 411+ 957D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 957D
 413+ 957D 7D           column ld a,l
 414+ 957E E6 1F        	and $1f
 415+ 9580 FE 10         	cp $10
 416+ 9582 C9            	ret
 417+ 9583
 418+ 9583              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9583              ;
 420+ 9583              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9583              ;
 422+ 9583              ; 14/12/22
 423+ 9583              ;
 424+ 9583              ;	Modifica: A y BC.
 425+ 9583
 426+ 9583 3A DD 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9586 E6 01        	and 1
 428+ 9588 28 17        	jr z,1F
 429+ 958A
 430+ 958A              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 958A
 432+ 958A 3A CF 89     	ld a,(Coordenada_X)
 433+ 958D 47           	ld b,a
 434+ 958E 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 958F 79           	ld a,c
 436+ 9590 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9591 38 08        	jr c,2F
 438+ 9593 47           	ld b,a
 439+ 9594 79           	ld a,c
 440+ 9595 90           	sub b
 441+ 9596 32 06 8A     	ld (Columnas),a
 442+ 9599 18 1B        	jr 4F
 443+ 959B 79           2 ld a,c
 444+ 959C 32 06 8A     	ld (Columnas),a
 445+ 959F 18 15        	jr 4F
 446+ 95A1
 447+ 95A1              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95A1
 449+ 95A1 3A CF 89     1 ld a,(Coordenada_X)
 450+ 95A4 81           	add c
 451+ 95A5 3D           	dec a
 452+ 95A6 D6 1F        	sub $1f
 453+ 95A8 38 08        	jr c,3F
 454+ 95AA 47           	ld b,a
 455+ 95AB 79           	ld a,c
 456+ 95AC 90           	sub b
 457+ 95AD 32 06 8A     	ld (Columnas),a
 458+ 95B0 18 04        	jr 4F
 459+ 95B2 79           3 ld a,c
 460+ 95B3 32 06 8A     	ld (Columnas),a
 461+ 95B6 D9           4 exx
 462+ 95B7 4F           	ld c,a
 463+ 95B8 D9           	exx
 464+ 95B9 C9            ret
 465+ 95BA
 466+ 95BA              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95BA              ;
 468+ 95BA              ;   19/7/23
 469+ 95BA              ;
 470+ 95BA              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95BA              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95BA              ;
 473+ 95BA              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95BA              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95BA              ;
 476+ 95BA              ;	DESTRUYE: HL,B Y A.
 477+ 95BA
 478+ 95BA 3A DD 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95BD FE 02        	cp 2
 480+ 95BF 38 18        	jr c,1F
 481+ 95C1 28 16        	jr z,1F
 482+ 95C3 E6 01        	and 1
 483+ 95C5 28 0D        	jr z,3F
 484+ 95C7
 485+ 95C7              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95C7
 487+ 95C7 CD 0D 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95CA
 489+ 95CA 7D           9 ld a,l
 490+ 95CB E6 1F        	and $1f
 491+ 95CD 28 2A        	jr z,7F
 492+ 95CF 2B           	dec hl
 493+ 95D0 10 F8        	djnz 9B
 494+ 95D2 18 25        	jr 7F
 495+ 95D4
 496+ 95D4              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95D4
 498+ 95D4 2A CB 89     3 ld hl,(Posicion_actual)
 499+ 95D7 18 20        	jr 7F
 500+ 95D9
 501+ 95D9 28 14        1 jr z,2F
 502+ 95DB
 503+ 95DB              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95DB
 505+ 95DB CD 0D 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95DE
 507+ 95DE 7D           4 ld a,l
 508+ 95DF E6 1F        	and $1f
 509+ 95E1 28 03        	jr z,6F
 510+ 95E3 2B           	dec hl
 511+ 95E4 10 F8        	djnz 4B
 512+ 95E6 06 0F        6 ld b,15
 513+ 95E8 CD 6E 96     5 call PreviousScan
 514+ 95EB 10 FB        	djnz 5B
 515+ 95ED 18 0A        	jr 7F
 516+ 95EF
 517+ 95EF              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95EF
 519+ 95EF CD 0D 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95F2 06 0F        	ld b,15
 521+ 95F4 CD 6E 96     8 call PreviousScan
 522+ 95F7 10 FB        	djnz 8B
 523+ 95F9
 524+ 95F9 E5           7 push hl
 525+ 95FA DD E1        	pop ix
 526+ 95FC
 527+ 95FC 2A CD 89     	ld hl,(Puntero_objeto)
 528+ 95FF E5           	push hl
 529+ 9600 FD E1        	pop iy
 530+ 9602
 531+ 9602              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9602
 533+ 9602 3A F7 89     	ld a,(Ctrl_0)
 534+ 9605 CB 77        	bit 6,a
 535+ 9607 C8           	ret z
 536+ 9608
 537+ 9608              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9608              ; _ entidad / Amadeus´.
 539+ 9608
 540+ 9608 DD 22 41 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 960C
 542+ 960C C9           	ret
 543+ 960D
 544+ 960D              ; --------------------------------------------------------------------------------------------------------------------
 545+ 960D              ;
 546+ 960D              ;	2/1/23
 547+ 960D              ;
 548+ 960D              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 960D              ;
 550+ 960D              ;	Tras esta rutina tenemos:
 551+ 960D              ;
 552+ 960D              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 960D              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 960D              ;
 555+ 960D              ;	DESTRUYE!!!!! HL,B y A.
 556+ 960D
 557+ 960D 2A CB 89     Operandos ld hl,(Posicion_actual)
 558+ 9610 3A 06 8A     	ld a,(Columnas)
 559+ 9613 3D           	dec a
 560+ 9614 20 01        	jr nz,1F
 561+ 9616 3C           	inc a
 562+ 9617 47           1 ld b,a
 563+ 9618 C9           	ret
 564+ 9619
 565+ 9619              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9619              ;
 567+ 9619              ;	3/1/23
 568+ 9619              ;
 569+ 9619              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9619              ;
 571+ 9619              ;	Destruye: A,B,HL y DE.
 572+ 9619
 573+ 9619              Define_rutina_de_impresion
 574+ 9619
 575+ 9619 3A CA 89     	ld a,(Columns)
 576+ 961C 47           	ld b,a
 577+ 961D 3A 06 8A     	ld a,(Columnas)
 578+ 9620 B8           	cp b
 579+ 9621 20 0D        	jr nz,2f
 580+ 9623
 581+ 9623              ;	La entidad se imprime entera.
 582+ 9623
 583+ 9623 21 FB 96     	ld hl, Indice_entidades_completas
 584+ 9626 E6 01        	and 1
 585+ 9628 28 02        	jr z,1F
 586+ 962A
 587+ 962A 23           	inc hl
 588+ 962B 23           	inc hl
 589+ 962C
 590+ 962C CD 2D 8D     1 call Extrae_address
 591+ 962F C9           	ret		;	ret
 592+ 9630
 593+ 9630              ;	La entidad no se imprime entera en pantalla.
 594+ 9630
 595+ 9630 3A DD 89     2 ld a,(Cuad_objeto)
 596+ 9633 E6 01        	and 1
 597+ 9635 28 17        	jr z,3F
 598+ 9637
 599+ 9637              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9637
 601+ 9637 21 FF 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 963A 3A CA 89     4 ld a,(Columns)
 603+ 963D E6 01        	and 1
 604+ 963F 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9641
 606+ 9641 23           	inc hl
 607+ 9642 23           	inc hl
 608+ 9643
 609+ 9643 3A 06 8A     	ld a,(Columnas)
 610+ 9646 E6 01        	and 1
 611+ 9648 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 964A
 613+ 964A 23           	inc hl
 614+ 964B 23           	inc hl
 615+ 964C
 616+ 964C 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 964E
 618+ 964E 21 05 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9651 18 E7        	jr 4B
 620+ 9653
 621+ 9653              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9653              ;
 623+ 9653              ;	Prepara_draw
 624+ 9653              ;
 625+ 9653              ;	Es una rutina de carga.
 626+ 9653              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9653              ;
 628+ 9653              ;	FUNCIONAMIENTO:
 629+ 9653              ;
 630+ 9653              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9653              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9653              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9653              ;
 634+ 9653              ;	DESTRUYE:
 635+ 9653              ;
 636+ 9653              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9653
 638+ 9653 21 C9 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9656 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9657 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9658 4E           	ld c,(hl)
 642+ 9659 2A CB 89     	ld hl,(Posicion_actual)
 643+ 965C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 965E C9           	ret
 645+ 965F
 646+ 965F              ;----------------------------------------------------------------------------------------------------------------
 647+ 965F              ;
 648+ 965F              ;	5/08/22
 649+ 965F              ;
 650+ 965F              ;   NextScan.
 651+ 965F              ;
 652+ 965F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 965F              ;
 654+ 965F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 965F              ;
 656+ 965F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 965F              ;
 658+ 965F              ;       DESTRUIDOS: AF y HL !!!
 659+ 965F              ;
 660+ 965F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 965F              ;
 662+ 965F
 663+ 965F 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9660 7C               ld a,h
 665+ 9661 E6 07            and 7
 666+ 9663 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9664
 668+ 9664 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9665 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9667 6F               ld l,a
 671+ 9668 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9669
 673+ 9669 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 966A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 966C 67               ld h,a
 676+ 966D C9               ret
 677+ 966E
 678+ 966E              ;----------------------------------------------------------------------------------------------------------------
 679+ 966E              ;
 680+ 966E              ;	5/08/22
 681+ 966E              ;
 682+ 966E              ;   PreviousScan.
 683+ 966E              ;
 684+ 966E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 966E              ;
 686+ 966E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 966E              ;
 688+ 966E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 966E              ;
 690+ 966E              ;       DESTRUIDOS: AF y HL !!!
 691+ 966E              ;
 692+ 966E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 966E              ;
 694+ 966E
 695+ 966E 7C           PreviousScan ld a,h
 696+ 966F 25               dec h               ; Dec H.
 697+ 9670 E6 07            and 7
 698+ 9672 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9673
 700+ 9673 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9674 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9676 6F               ld l,a
 703+ 9677 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9678
 705+ 9678 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9679 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 967B 67               ld h,a
 708+ 967C C9               ret
 709+ 967D
 710+ 967D              ; -----------------------------------------------------------------------------------
 711+ 967D              ;
 712+ 967D              ;	31/7/23
 713+ 967D              ;
 714+ 967D              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 967D              ;	Extrae fotos de Album_de_fotos.
 716+ 967D
 717+ 967D              Extrae_foto_entidades
 718+ 967D
 719+ 967D 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9680 7E               ld a,(hl)
 721+ 9681 A7               and a
 722+ 9682 C8               ret z																	; Salimos si no hay DATOS en el álbum.
 723+ 9683
 724+ 9683 3A 18 8A     	ld a,(Numero_de_malotes)												; Salimos si no hay MOVIMIENTO.
 725+ 9686 A7           	and a
 726+ 9687 C8           	ret z
 727+ 9688
 728+ 9688              ; -----------------------------------
 729+ 9688
 730+ 9688 ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 968C 31 00 70     	ld sp,Album_de_fotos
 732+ 968F
 733+ 968F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9691 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9692 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9693
 737+ 9693 ED 73 1F 8A  	ld (Stack_2),sp
 738+ 9697 ED 7B 1D 8A  	ld sp,(Stack)
 739+ 969B
 740+ 969B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 969B
 742+ 969B 3E CD        	ld a,$cd
 743+ 969D 32 A5 96     	ld (Imprime),a
 744+ 96A0 EB           	ex de,hl
 745+ 96A1 22 A6 96     	ld (Imprime+1),hl
 746+ 96A4 EB           	ex de,hl
 747+ 96A5
 748+ 96A5              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96A5
 750+ 96A5 00 00 00     Imprime db 0,0,0
 751+ 96A8
 752+ 96A8 3A 18 8A     	ld a,(Numero_de_malotes)
 753+ 96AB 3D           	dec a
 754+ 96AC 28 09        	jr z,1F
 755+ 96AE 32 18 8A      	ld (Numero_de_malotes),a
 756+ 96B1
 757+ 96B1 ED 7B 1F 8A   	ld sp,(Stack_2)
 758+ 96B5 18 D8        	jr 2B
 759+ 96B7
 760+ 96B7 AF           1 xor a
 761+ 96B8 32 1F 8A     	ld (Stack_2),a
 762+ 96BB C9           	ret
 763+ 96BC
 764+ 96BC              ; -----------------------------------------------------------------------------------
 765+ 96BC              ;
 766+ 96BC              ;	28/2/23
 767+ 96BC              ;
 768+ 96BC              ;	Pinta los disparos generados.
 769+ 96BC
 770+ 96BC              Extrae_foto_disparos
 771+ 96BC
 772+ 96BC 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 773+ 96BF 7E               ld a,(hl)
 774+ 96C0 A7               and a
 775+ 96C1 C8               ret z
 776+ 96C2
 777+ 96C2 3A 31 8A     	ld a,(Numero_de_disparotes)
 778+ 96C5 A7           	and a
 779+ 96C6 C8           	ret z
 780+ 96C7 ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 781+ 96CB 31 0D 72     	ld sp,Album_de_fotos_disparos
 782+ 96CE
 783+ 96CE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 784+ 96D0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 785+ 96D1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 786+ 96D2
 787+ 96D2 ED 73 1F 8A  	ld (Stack_2),sp
 788+ 96D6 ED 7B 1D 8A  	ld sp,(Stack)
 789+ 96DA
 790+ 96DA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 791+ 96DA
 792+ 96DA 3E CD        	ld a,$cd
 793+ 96DC 32 E4 96     	ld (Imprime2),a
 794+ 96DF EB           	ex de,hl
 795+ 96E0 22 E5 96     	ld (Imprime2+1),hl
 796+ 96E3 EB           	ex de,hl
 797+ 96E4
 798+ 96E4              ; Ejecuta la llamada:	CALL $xx,xx
 799+ 96E4
 800+ 96E4 00 00 00     Imprime2 db 0,0,0
 801+ 96E7
 802+ 96E7 3A 31 8A     	ld a,(Numero_de_disparotes)
 803+ 96EA 3D           	dec a
 804+ 96EB 28 09        	jr z,1F
 805+ 96ED 32 31 8A      	ld (Numero_de_disparotes),a
 806+ 96F0
 807+ 96F0 ED 7B 1F 8A  	ld sp,(Stack_2)
 808+ 96F4 18 D8        	jr 2B
 809+ 96F6
 810+ 96F6 AF           1 xor a
 811+ 96F7 32 1F 8A     	ld (Stack_2),a
 812+ 96FA C9           	ret
 813+ 96FB
# file closed: Draw_XOR.asm
1300  96FB              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96FB              ;   índices de Rutinas de impresión.
   2+ 96FB
   3+ 96FB 0B 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96FD 38 97            defw Pinta_Amadeus_3x2
   5+ 96FF
   6+ 96FF 8E 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9701 2E 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9703 E2 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9705
  10+ 9705 B8 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9707 BC 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9709 70 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 970B
  14+ 970B
  15+ 970B              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 970B              ;
  17+ 970B              ;   12/12/22
  18+ 970B              ;
  19+ 970B              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 970B              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 970B              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 970B              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 970B              ;
  24+ 970B              ;   Modifica: DE y HL.
  25+ 970B
  26+ 970B ED 73 1D 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 970F FD F9        	ld sp,iy
  28+ 9711 06 10            ld b,16
  29+ 9713 D1           1 pop de
  30+ 9714 7B               ld a,e
  31+ 9715 AE               xor (hl)
  32+ 9716 77           	ld (hl),a
  33+ 9717 23           	inc hl
  34+ 9718 7A               ld a,d
  35+ 9719 AE               xor (hl)
  36+ 971A 77           	ld (hl),a
  37+ 971B 2B           	dec hl
  38+ 971C 24           	inc h
  39+ 971D 7C               ld a,h
  40+ 971E E6 07            and 7
  41+ 9720 20 0A            jr nz,2F
  42+ 9722 7D               ld a,l
  43+ 9723 C6 20            add a,$20
  44+ 9725 6F               ld l,a
  45+ 9726 38 04            jr c,2F
  46+ 9728 7C               ld a,h
  47+ 9729 D6 08            sub 8
  48+ 972B 67               ld h,a
  49+ 972C 7C           2 ld a,h
  50+ 972D FE 58            cp $58
  51+ 972F 28 02            jr z,3F
  52+ 9731 10 E0            djnz 1B
  53+ 9733 ED 7B 1D 8A  3 ld sp,(Stack)
  54+ 9737 C9           	ret
  55+ 9738
  56+ 9738 ED 73 1D 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 973C FD F9        	ld sp,iy
  58+ 973E 06 08            ld b,8
  59+ 9740 D1           1 pop de
  60+ 9741 7B               ld a,e
  61+ 9742 AE               xor (hl)
  62+ 9743 77           	ld (hl),a
  63+ 9744 23           	inc hl
  64+ 9745 7A               ld a,d
  65+ 9746 AE               xor (hl)
  66+ 9747 77           	ld (hl),a
  67+ 9748 23           	inc hl
  68+ 9749 D1           	pop de
  69+ 974A 7B               ld a,e
  70+ 974B AE               xor (hl)
  71+ 974C 77           	ld (hl),a
  72+ 974D 2B           	dec hl
  73+ 974E 2B           	dec hl
  74+ 974F 24           	inc h
  75+ 9750 7C               ld a,h
  76+ 9751 E6 07            and 7
  77+ 9753 20 0A            jr nz,2F
  78+ 9755 7D               ld a,l
  79+ 9756 C6 20            add a,$20
  80+ 9758 6F               ld l,a
  81+ 9759 38 04            jr c,2F
  82+ 975B 7C               ld a,h
  83+ 975C D6 08            sub 8
  84+ 975E 67               ld h,a
  85+ 975F 7C           2 ld a,h
  86+ 9760 FE 58            cp $58
  87+ 9762 28 25            jr z,4F
  88+ 9764 7A               ld a,d
  89+ 9765 AE               xor (hl)
  90+ 9766 77               ld (hl),a
  91+ 9767 D1           	pop de
  92+ 9768 23           	inc hl
  93+ 9769 7B               ld a,e
  94+ 976A AE               xor (hl)
  95+ 976B 77           	ld (hl),a
  96+ 976C 23           	inc hl
  97+ 976D 7A               ld a,d
  98+ 976E AE               xor (hl)
  99+ 976F 77           	ld (hl),a
 100+ 9770 2B           	dec hl
 101+ 9771 2B           	dec hl
 102+ 9772 24           	inc h
 103+ 9773 7C               ld a,h
 104+ 9774 E6 07            and 7
 105+ 9776 20 0A            jr nz,3F
 106+ 9778 7D               ld a,l
 107+ 9779 C6 20            add a,$20
 108+ 977B 6F               ld l,a
 109+ 977C 38 04            jr c,3F
 110+ 977E 7C               ld a,h
 111+ 977F D6 08            sub 8
 112+ 9781 67               ld h,a
 113+ 9782 7C           3 ld a,h
 114+ 9783 FE 58            cp $58
 115+ 9785 28 02            jr z,4F
 116+ 9787 10 B7            djnz 1B
 117+ 9789 ED 7B 1D 8A  4 ld sp,(Stack)
 118+ 978D C9           	ret
 119+ 978E
 120+ 978E              ; ---------------------------------------------------
 121+ 978E
 122+ 978E ED 73 1D 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9792 FD F9        	ld sp,iy
 124+ 9794
 125+ 9794              ; >>>
 126+ 9794
 127+ 9794 06 10            ld b,16
 128+ 9796 D1           1 pop de
 129+ 9797 7A           	ld a,d
 130+ 9798 AE           	xor (hl)
 131+ 9799 77           	ld (hl),a
 132+ 979A 24           	inc h
 133+ 979B 7C               ld a,h
 134+ 979C E6 07            and 7
 135+ 979E 20 0C            jr nz,2F
 136+ 97A0 7D               ld a,l
 137+ 97A1 C6 20            add a,$20
 138+ 97A3 6F               ld l,a
 139+ 97A4 38 06            jr c,2F
 140+ 97A6 7C               ld a,h
 141+ 97A7 D6 08            sub 8
 142+ 97A9 67               ld h,a
 143+ 97AA 18 00            jr 2F
 144+ 97AC 7C           2 ld a,h
 145+ 97AD FE 58            cp $58
 146+ 97AF 28 02            jr z,3F
 147+ 97B1 10 E3            djnz 1B
 148+ 97B3 ED 7B 1D 8A  3 ld sp,(Stack)
 149+ 97B7 C9           	ret
 150+ 97B8
 151+ 97B8 ED 73 1D 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97BC FD F9        	ld sp,iy
 153+ 97BE
 154+ 97BE              ; >>>
 155+ 97BE
 156+ 97BE 06 10            ld b,16
 157+ 97C0 D1           1 pop de
 158+ 97C1 7B           	ld a,e
 159+ 97C2 AE           	xor (hl)
 160+ 97C3 77           	ld (hl),a
 161+ 97C4 24           	inc h
 162+ 97C5 7C               ld a,h
 163+ 97C6 E6 07            and 7
 164+ 97C8 20 0C            jr nz,2F
 165+ 97CA 7D               ld a,l
 166+ 97CB C6 20            add a,$20
 167+ 97CD 6F               ld l,a
 168+ 97CE 38 06            jr c,2F
 169+ 97D0 7C               ld a,h
 170+ 97D1 D6 08            sub 8
 171+ 97D3 67               ld h,a
 172+ 97D4 18 00            jr 2F
 173+ 97D6 7C           2 ld a,h
 174+ 97D7 FE 58            cp $58
 175+ 97D9 28 02            jr z,3F
 176+ 97DB 10 E3            djnz 1B
 177+ 97DD ED 7B 1D 8A  3 ld sp,(Stack)
 178+ 97E1 C9           	ret
 179+ 97E2
 180+ 97E2              ; ---------------------------------------------------
 181+ 97E2
 182+ 97E2 ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97E6 FD F9        	ld sp,iy
 184+ 97E8 06 08            ld b,8
 185+ 97EA D1           1 pop de
 186+ 97EB 7A           	ld a,d
 187+ 97EC AE           	xor (hl)
 188+ 97ED 77           	ld (hl),a
 189+ 97EE 23           	inc hl
 190+ 97EF D1           	pop de
 191+ 97F0 7B           	ld a,e
 192+ 97F1 AE           	xor (hl)
 193+ 97F2 77           	ld (hl),a
 194+ 97F3 2B           	dec hl
 195+ 97F4 24            	inc h
 196+ 97F5 7C               ld a,h
 197+ 97F6 E6 07            and 7
 198+ 97F8 20 0A            jr nz,2F
 199+ 97FA 7D               ld a,l
 200+ 97FB C6 20            add a,$20
 201+ 97FD 6F               ld l,a
 202+ 97FE 38 04            jr c,2F
 203+ 9800 7C               ld a,h
 204+ 9801 D6 08            sub 8
 205+ 9803 67               ld h,a
 206+ 9804 7C           2 ld a,h
 207+ 9805 FE 58            cp $58
 208+ 9807 28 20            jr z,4F
 209+ 9809 D1               pop de
 210+ 980A 7B           	ld a,e
 211+ 980B AE           	xor (hl)
 212+ 980C 77           	ld (hl),a
 213+ 980D 23           	inc hl
 214+ 980E 7A           	ld a,d
 215+ 980F AE           	xor (hl)
 216+ 9810 77           	ld (hl),a
 217+ 9811 2B           	dec hl
 218+ 9812 24           	inc h
 219+ 9813 7C               ld a,h
 220+ 9814 E6 07            and 7
 221+ 9816 20 0A            jr nz,3F
 222+ 9818 7D               ld a,l
 223+ 9819 C6 20            add a,$20
 224+ 981B 6F               ld l,a
 225+ 981C 38 04            jr c,3F
 226+ 981E 7C               ld a,h
 227+ 981F D6 08            sub 8
 228+ 9821 67               ld h,a
 229+ 9822 7C           3 ld a,h
 230+ 9823 FE 58            cp $58
 231+ 9825 28 02            jr z,4F
 232+ 9827 10 C1            djnz 1B
 233+ 9829 ED 7B 1D 8A  4 ld sp,(Stack)
 234+ 982D C9           	ret
 235+ 982E
 236+ 982E ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9832 FD F9        	ld sp,iy
 238+ 9834 06 08            ld b,8
 239+ 9836 D1           1 pop de
 240+ 9837 D1           	pop de
 241+ 9838 7B           	ld a,e
 242+ 9839 AE           	xor (hl)
 243+ 983A 77           	ld (hl),a
 244+ 983B 24            	inc h
 245+ 983C 7C               ld a,h
 246+ 983D E6 07            and 7
 247+ 983F 20 0A            jr nz,2F
 248+ 9841 7D               ld a,l
 249+ 9842 C6 20            add a,$20
 250+ 9844 6F               ld l,a
 251+ 9845 38 04            jr c,2F
 252+ 9847 7C               ld a,h
 253+ 9848 D6 08            sub 8
 254+ 984A 67               ld h,a
 255+ 984B 7C           2 ld a,h
 256+ 984C FE 58            cp $58
 257+ 984E 28 1B            jr z,4F
 258+ 9850 D1               pop de
 259+ 9851 7A           	ld a,d
 260+ 9852 AE           	xor (hl)
 261+ 9853 77           	ld (hl),a
 262+ 9854 24           	inc h
 263+ 9855 7C               ld a,h
 264+ 9856 E6 07            and 7
 265+ 9858 20 0A            jr nz,3F
 266+ 985A 7D               ld a,l
 267+ 985B C6 20            add a,$20
 268+ 985D 6F               ld l,a
 269+ 985E 38 04            jr c,3F
 270+ 9860 7C               ld a,h
 271+ 9861 D6 08            sub 8
 272+ 9863 67               ld h,a
 273+ 9864 7C           3 ld a,h
 274+ 9865 FE 58            cp $58
 275+ 9867 28 02            jr z,4F
 276+ 9869 10 CB            djnz 1B
 277+ 986B ED 7B 1D 8A  4 ld sp,(Stack)
 278+ 986F C9           	ret
 279+ 9870
 280+ 9870 ED 73 1D 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9874 FD F9        	ld sp,iy
 282+ 9876 06 08            ld b,8
 283+ 9878 D1           1 pop de
 284+ 9879 7B           	ld a,e
 285+ 987A AE           	xor (hl)
 286+ 987B 77           	ld (hl),a
 287+ 987C 23           	inc hl
 288+ 987D 7A           	ld a,d
 289+ 987E AE           	xor (hl)
 290+ 987F 77           	ld (hl),a
 291+ 9880 2B           	dec hl
 292+ 9881 24             	inc h
 293+ 9882 7C               ld a,h
 294+ 9883 E6 07            and 7
 295+ 9885 20 0A            jr nz,2F
 296+ 9887 7D               ld a,l
 297+ 9888 C6 20            add a,$20
 298+ 988A 6F               ld l,a
 299+ 988B 38 04            jr c,2F
 300+ 988D 7C               ld a,h
 301+ 988E D6 08            sub 8
 302+ 9890 67               ld h,a
 303+ 9891 7C           2 ld a,h
 304+ 9892 FE 58            cp $58
 305+ 9894 28 21            jr z,4F
 306+ 9896 D1               pop de
 307+ 9897 7A           	ld a,d
 308+ 9898 AE           	xor (hl)
 309+ 9899 77           	ld (hl),a
 310+ 989A 23           	inc hl
 311+ 989B D1               pop de
 312+ 989C 7B           	ld a,e
 313+ 989D AE           	xor (hl)
 314+ 989E 77           	ld (hl),a
 315+ 989F 2B           	dec hl
 316+ 98A0 24           	inc h
 317+ 98A1 7C               ld a,h
 318+ 98A2 E6 07            and 7
 319+ 98A4 20 0A            jr nz,3F
 320+ 98A6 7D               ld a,l
 321+ 98A7 C6 20            add a,$20
 322+ 98A9 6F               ld l,a
 323+ 98AA 38 04            jr c,3F
 324+ 98AC 7C               ld a,h
 325+ 98AD D6 08            sub 8
 326+ 98AF 67               ld h,a
 327+ 98B0 7C           3 ld a,h
 328+ 98B1 FE 58            cp $58
 329+ 98B3 28 02            jr z,4F
 330+ 98B5 10 C1            djnz 1B
 331+ 98B7 ED 7B 1D 8A  4 ld sp,(Stack)
 332+ 98BB C9           	ret
 333+ 98BC
 334+ 98BC ED 73 1D 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98C0 FD F9        	ld sp,iy
 336+ 98C2 06 08            ld b,8
 337+ 98C4 D1           1 pop de
 338+ 98C5 7B           	ld a,e
 339+ 98C6 AE           	xor (hl)
 340+ 98C7 77           	ld (hl),a
 341+ 98C8 24            	inc h
 342+ 98C9 7C               ld a,h
 343+ 98CA E6 07            and 7
 344+ 98CC 20 0A            jr nz,2F
 345+ 98CE 7D               ld a,l
 346+ 98CF C6 20            add a,$20
 347+ 98D1 6F               ld l,a
 348+ 98D2 38 04            jr c,2F
 349+ 98D4 7C               ld a,h
 350+ 98D5 D6 08            sub 8
 351+ 98D7 67               ld h,a
 352+ 98D8 7C           2 ld a,h
 353+ 98D9 FE 58            cp $58
 354+ 98DB 28 1C            jr z,4F
 355+ 98DD D1               pop de
 356+ 98DE 7A           	ld a,d
 357+ 98DF AE           	xor (hl)
 358+ 98E0 77           	ld (hl),a
 359+ 98E1 24           	inc h
 360+ 98E2 7C               ld a,h
 361+ 98E3 E6 07            and 7
 362+ 98E5 20 0A            jr nz,3F
 363+ 98E7 7D               ld a,l
 364+ 98E8 C6 20            add a,$20
 365+ 98EA 6F               ld l,a
 366+ 98EB 38 04            jr c,3F
 367+ 98ED 7C               ld a,h
 368+ 98EE D6 08            sub 8
 369+ 98F0 67               ld h,a
 370+ 98F1 7C           3 ld a,h
 371+ 98F2 FE 58            cp $58
 372+ 98F4 28 03            jr z,4F
 373+ 98F6 D1               pop de
 374+ 98F7 10 CB            djnz 1B
 375+ 98F9 ED 7B 1D 8A  4 ld sp,(Stack)
 376+ 98FD C9           	ret
 377+ 98FE
 378+ 98FE              ; ---------------------------------------------------
 379+ 98FE              ;
 380+ 98FE              ;   27/02/23
 381+ 98FE              ;
 382+ 98FE              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98FE              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98FE              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98FE
 386+ 98FE ED 73 1D 8A  Pinta_Disparo ld (Stack),sp
 387+ 9902 FD F9            ld sp,iy
 388+ 9904 06 03            ld b,3
 389+ 9906 D1           1 pop de
 390+ 9907 7B               ld a,e
 391+ 9908 AE               xor (hl)
 392+ 9909 77               ld (hl),a
 393+ 990A 23               inc hl
 394+ 990B 7A               ld a,d
 395+ 990C AE               xor (hl)
 396+ 990D 77               ld (hl),a
 397+ 990E 2B               dec hl
 398+ 990F
 399+ 990F 24               inc h
 400+ 9910 7C               ld a,h
 401+ 9911 E6 07            and 7
 402+ 9913 20 0A            jr nz,2F
 403+ 9915 7D               ld a,l
 404+ 9916 C6 20            add a,$20
 405+ 9918 6F               ld l,a
 406+ 9919 38 04            jr c,2F
 407+ 991B 7C               ld a,h
 408+ 991C D6 08            sub 8
 409+ 991E 67               ld h,a
 410+ 991F 7C           2 ld a,h
 411+ 9920 FE 58            cp $58
 412+ 9922 28 02            jr z,3F
 413+ 9924
 414+ 9924 10 E0            djnz 1B
 415+ 9926 ED 7B 1D 8A  3 ld sp,(Stack)
 416+ 992A C9               ret
 417+ 992B
# file closed: Rutinas_de_impresion_sprites.asm
1301  992B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 992B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 992B              ;
   3+ 992B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 992B              ;
   5+ 992B              ; *****************************************************************************************************************************************************************************************
   6+ 992B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 992B
   8+ 992B 7C           calcula_tercio ld a,h
   9+ 992C E6 18        	and $18
  10+ 992E CB 2F        	sra a
  11+ 9930 CB 2F        	sra a
  12+ 9932 CB 2F        	sra a
  13+ 9934 C9           	ret
  14+ 9935
# file closed: calcula_tercio.asm
1302  9935              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9935              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9935              ;
   3+ 9935              ;
   4+ 9935              ;	CLS.
   5+ 9935              ;
   6+ 9935              ;	Limpia la pantalla y define sus atributos.
   7+ 9935              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9935              ;
   9+ 9935              ;	COLORES: 0 ..... NEGRO
  10+ 9935              ;    		 1 ..... AZUL
  11+ 9935              ; 			 2 ..... ROJO
  12+ 9935              ;			 3 ..... MAGENTA
  13+ 9935              ; 			 4 ..... VERDE
  14+ 9935              ; 			 5 ..... CIAN
  15+ 9935              ;			 6 ..... AMARILLO
  16+ 9935              ; 			 7 ..... BLANCO
  17+ 9935              ;
  18+ 9935              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9935              ;
  20+ 9935              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9935
  22+ 9935
  23+ 9935 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9938 11 01 40     	LD DE,$4001
  25+ 993B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 993E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9940 ED B0        	LDIR
  28+ 9942 01 FF 02     	LD BC,767
  29+ 9945 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9946 ED B0        	LDIR
  31+ 9948 C9           	ret
  32+ 9949
# file closed: Cls.asm
1303  9949              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9949              ; ******************************************************************************************************************************************************************************************
   2+ 9949              ;
   3+ 9949              ;   20/05/23
   4+ 9949              ;
   5+ 9949              ;	Recompone_posicion_inicio
   6+ 9949              ;
   7+ 9949              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9949              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9949              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9949              ;	_ a una u otra rutina.
  11+ 9949
  12+ 9949              Recompone_posicion_inicio
  13+ 9949
  14+ 9949 2A DB 89     	ld hl,(Posicion_inicio)
  15+ 994C 7D           	ld a,l
  16+ 994D E6 1F        	and $1f
  17+ 994F 28 16        	jr z,1F
  18+ 9951
  19+ 9951 FE 1F        	cp $1f
  20+ 9953 28 0D        	jr z,3F
  21+ 9955
  22+ 9955 21 0A 8A     	ld hl,Ctrl_2
  23+ 9958 CB C6        	set 0,(hl)
  24+ 995A 2A CD 89     	ld hl,(Puntero_objeto)
  25+ 995D 22 0D 8A     	ld (Repone_puntero_objeto),hl
  26+ 9960 18 08        	jr 2F
  27+ 9962
  28+ 9962 CD 03 9B     3 call Mov_left
  29+ 9965 18 03        	jr 2F
  30+ 9967
  31+ 9967 CD E5 99     1 call Mov_right
  32+ 996A 21 00 F0     2 ld hl,Sprite_vacio
  33+ 996D 22 CD 89     	ld (Puntero_objeto),hl
  34+ 9970 C9           	ret
  35+ 9971
  36+ 9971              ; ******************************************************************************************************************************************************************************************
  37+ 9971              ;
  38+ 9971              ;   27/05/23
  39+ 9971              ;
  40+ 9971              ;	Mov_down
  41+ 9971              ;
  42+ 9971              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9971              ;
  44+ 9971              ;
  45+ 9971              Mov_down
  46+ 9971
  47+ 9971 CD D3 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9974              ;																	; _ repone (Puntero_objeto).
  49+ 9974 21 F7 89     	ld hl,Ctrl_0
  50+ 9977 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9979              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9979              ; 																	; _ en el caso de que no lo haya.
  53+ 9979 3A E1 89     	ld a,(Vel_down)
  54+ 997C 47           	ld b,a
  55+ 997D 2A CB 89         ld hl,(Posicion_actual)
  56+ 9980 CD 2B 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9983 E6 02        	and 2
  58+ 9985 28 0F        	jr z,1F
  59+ 9987
  60+ 9987              ; Nos encontramos en el último tercio de pantalla.
  61+ 9987              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9987
  63+ 9987 7C           	ld a,h
  64+ 9988 FE 57        	cp $57
  65+ 998A 20 0A        	jr nz,1F
  66+ 998C
  67+ 998C 7D           	ld a,l
  68+ 998D C6 20        	add $20
  69+ 998F 30 05        	jr nc,1F
  70+ 9991
  71+ 9991              ; ------------------------------
  72+ 9991              ;	call Reaparece_arriba
  73+ 9991 CD 90 9C     	call Reinicio
  74+ 9994              ; ------------------------------
  75+ 9994
  76+ 9994 18 08        	jr 3F
  77+ 9996 CD 5F 96     1 call NextScan
  78+ 9999 22 CB 89     	ld (Posicion_actual),hl
  79+ 999C 10 E2            djnz 2B
  80+ 999E CD B6 9C     3 call Genera_coordenadas
  81+ 99A1 C9           	ret
  82+ 99A2
  83+ 99A2              ; ******************************************************************************************************************************************************************************************
  84+ 99A2              ;
  85+ 99A2              ;   27/05/23
  86+ 99A2              ;
  87+ 99A2              ;	Mov_up
  88+ 99A2              ;
  89+ 99A2              ; 	Mueve el Sprite hacia arriba.
  90+ 99A2              ;
  91+ 99A2              ;
  92+ 99A2              Mov_up
  93+ 99A2
  94+ 99A2 CD D3 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99A5              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99A5 21 F7 89     	ld hl,Ctrl_0
  97+ 99A8 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99AA              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99AA              ; 																		; _ en el caso de que no lo haya.
 100+ 99AA 3A E0 89     	ld a,(Vel_up)
 101+ 99AD 47           	ld b,a
 102+ 99AE 2A CB 89     	ld hl,(Posicion_actual)
 103+ 99B1 CD 2B 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99B4 A7           	and a
 105+ 99B5 20 10        	jr nz,1F
 106+ 99B7
 107+ 99B7              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99B7              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99B7
 110+ 99B7 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99B8 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99BA 20 0B            jr nz,1F
 113+ 99BC 7D               ld a,l
 114+ 99BD D6 20            sub $20
 115+ 99BF 30 06            jr nc,1F
 116+ 99C1 25               dec h
 117+ 99C2
 118+ 99C2              ; -----------------------------
 119+ 99C2 CD 71 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99C5              ;	call Reinicio
 121+ 99C5              ; -----------------------------
 122+ 99C5
 123+ 99C5 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99C7 CD 6E 96     1 call PreviousScan
 125+ 99CA 22 CB 89     	ld (Posicion_actual),hl
 126+ 99CD 10 E2            djnz 3B
 127+ 99CF CD B6 9C     2 call Genera_coordenadas
 128+ 99D2 C9           	ret
 129+ 99D3
 130+ 99D3              ; -----------------------------
 131+ 99D3              ;
 132+ 99D3              ;	27/5/23
 133+ 99D3              ;
 134+ 99D3              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99D3              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99D3              ;
 137+ 99D3              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99D3              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99D3              ;
 140+ 99D3              ;	Modifica: A y (Puntero_objeto).
 141+ 99D3
 142+ 99D3 3A 0A 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99D6 CB 47        	bit 0,a
 144+ 99D8 C8           	ret z
 145+ 99D9 CB 87        	res 0,a
 146+ 99DB 32 0A 8A     	ld (Ctrl_2),a
 147+ 99DE 2A 0D 8A     	ld hl,(Repone_puntero_objeto)
 148+ 99E1 22 CD 89     	ld (Puntero_objeto),hl
 149+ 99E4 C9           	ret
 150+ 99E5
 151+ 99E5              ; ******************************************************************************************************************************************************************************************
 152+ 99E5              ;
 153+ 99E5              ;	19/10/22
 154+ 99E5              ;
 155+ 99E5              ;	Mov_right.
 156+ 99E5              ;
 157+ 99E5              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99E5              ;
 159+ 99E5
 160+ 99E5 21 F7 89     Mov_right ld hl,Ctrl_0
 161+ 99E8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99EA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99EA              ; 																	; _ en el caso de que no lo haya.
 164+ 99EA 3A F7 89     	ld a,(Ctrl_0)
 165+ 99ED CB 77        	bit 6,a
 166+ 99EF 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99F1
 168+ 99F1 CD 1F 9C     	call Stop_Amadeus_right
 169+ 99F4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99F5 18 4D        	jr 8F
 171+ 99F7
 172+ 99F7 3A CF 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99FA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99FC 20 46        	jr nz,8F
 175+ 99FE
 176+ 99FE 3A D1 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A01 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A02 28 40        	jr z,8F
 179+ 9A04
 180+ 9A04              ; ---------- ---------- ----------
 181+ 9A04              ;
 182+ 9A04              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A04
 184+ 9A04 3A DF 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A07 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A09 28 11        	jr z,1F
 187+ 9A0B 38 06        	jr c,6F
 188+ 9A0D FE 04        	cp 4
 189+ 9A0F 28 14        	jr z,7F
 190+ 9A11 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A13
 192+ 9A13              ; ---------- ---------- ----------
 193+ 9A13              ;
 194+ 9A13              ; Perfiles de velocidad
 195+ 9A13              ;
 196+ 9A13
 197+ 9A13 3A D1 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A16 FE FE        	cp $fe
 199+ 9A18 20 2A        	jr nz,8F
 200+ 9A1A 18 10        	jr 3F
 201+ 9A1C 3A D1 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A1F FE FD        	cp $fd
 203+ 9A21 20 21        	jr nz,8F
 204+ 9A23 18 07        	jr 3F
 205+ 9A25 3A D1 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A28 FE FB        	cp $fb
 207+ 9A2A 20 18        	jr nz,8F
 208+ 9A2C
 209+ 9A2C              ; ---------- ---------- ----------
 210+ 9A2C
 211+ 9A2C              3
 212+ 9A2C CD 5F 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A2F              ;	call Reinicio
 214+ 9A2F
 215+ 9A2F              ; ---------- ---------- ----------
 216+ 9A2F              ;
 217+ 9A2F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A2F
 219+ 9A2F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A31 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A32 CD 4B 9A     	call DESPLZ_DER
 222+ 9A35 C1           	pop bc
 223+ 9A36 10 F9        	djnz 5B
 224+ 9A38 2A CB 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A3B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A3C 22 CB 89     	ld (Posicion_actual),hl
 227+ 9A3F CD B6 9C     	call Genera_coordenadas
 228+ 9A42 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A44
 230+ 9A44              ; ---------- ---------- ----------
 231+ 9A44
 232+ 9A44 2A CB 89     8 ld hl,(Posicion_actual)
 233+ 9A47 CD 4B 9A     	call DESPLZ_DER
 234+ 9A4A C9           2 ret
 235+ 9A4B
 236+ 9A4B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A4B              ;
 238+ 9A4B              ;	22/9/22
 239+ 9A4B              ;
 240+ 9A4B
 241+ 9A4B CD 5A 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A4E CD A6 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A51 CD CF 9A         call Ciclo_completo
 244+ 9A54 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A57 CB FE        	set 7,(hl)
 246+ 9A59 C9           	ret
 247+ 9A5A
 248+ 9A5A              ; ******************************************************************************************************************************************************************************************
 249+ 9A5A              ;	15/02/23
 250+ 9A5A              ;
 251+ 9A5A
 252+ 9A5A 3A DF 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A5D 47           	ld b,a
 254+ 9A5E 2A D7 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A61 23           1 inc hl
 256+ 9A62 23           	inc hl
 257+ 9A63 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A65 22 D7 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A68 CD 2D 8D     	call Extrae_address
 260+ 9A6B 22 CD 89     	ld (Puntero_objeto),hl
 261+ 9A6E
 262+ 9A6E              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A6E
 264+ 9A6E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A6E              ; Cuántos movimientos hemos hecho ??
 266+ 9A6E              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A6E
 268+ 9A6E 2A D3 89     7 ld hl,(Indice_Sprite_der)
 269+ 9A71 EB           	ex de,hl
 270+ 9A72 A7           	and a
 271+ 9A73 ED 52        	sbc hl,de
 272+ 9A75 CB 3D        	srl l
 273+ 9A77 3E 08        6 ld a,8
 274+ 9A79 95           	sub l
 275+ 9A7A 30 1E        	jr nc,3F
 276+ 9A7C
 277+ 9A7C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A7C              ; B="0".
 279+ 9A7C
 280+ 9A7C 04           4 inc b
 281+ 9A7D 3C           	inc a
 282+ 9A7E 20 FC        	jr nz,4B
 283+ 9A80 78           	ld a,b
 284+ 9A81 08           	ex af,af
 285+ 9A82 2A D3 89     	ld hl,(Indice_Sprite_der)
 286+ 9A85 23           5 inc hl
 287+ 9A86 23           	inc hl
 288+ 9A87 10 FC        	djnz 5B
 289+ 9A89 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9A8C CD 2D 8D     	call Extrae_address
 291+ 9A8F 22 CD 89     	ld (Puntero_objeto),hl
 292+ 9A92
 293+ 9A92              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A92              ; _(Posicion_actual).
 295+ 9A92
 296+ 9A92 21 CB 89     	ld hl,Posicion_actual
 297+ 9A95 34           	inc (hl)
 298+ 9A96 08               ex af,af
 299+ 9A97 6F           	ld l,a
 300+ 9A98 18 DD        	jr 6B
 301+ 9A9A
 302+ 9A9A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A9A
 304+ 9A9A 47           3 ld b,a
 305+ 9A9B 2A D5 89     	ld hl,(Indice_Sprite_izq)
 306+ 9A9E 23           2 inc hl
 307+ 9A9F 23           	inc hl
 308+ 9AA0 10 FC        	djnz 2B
 309+ 9AA2 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AA5 C9           8 ret
 311+ 9AA6
 312+ 9AA6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AA6              ;
 314+ 9AA6              ;	24/7/22
 315+ 9AA6              ;
 316+ 9AA6              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AA6              ;
 318+ 9AA6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AA6              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AA6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AA6
 322+ 9AA6 3A D1 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AA9 A7           	and a
 324+ 9AAA 20 1F        	jr nz,1F
 325+ 9AAC D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AAE 32 D1 89         ld (CTRL_DESPLZ),a
 327+ 9AB1
 328+ 9AB1 21 CA 89     	ld hl,Columns
 329+ 9AB4 34           	inc (hl)
 330+ 9AB5 3A DD 89     	ld a,(Cuad_objeto)
 331+ 9AB8 E6 01        	and 1
 332+ 9ABA 28 0F        	jr z,1F
 333+ 9ABC 2A CB 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9ABF 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AC0 22 CB 89     	ld (Posicion_actual),hl
 336+ 9AC3 CD B6 9C     	call Genera_coordenadas
 337+ 9AC6 CD 2B 9C     	call Inc_CTRL_DESPLZ
 338+ 9AC9 18 03        	jr 2F
 339+ 9ACB CD 2B 9C     1 call Inc_CTRL_DESPLZ
 340+ 9ACE C9           2 ret
 341+ 9ACF
 342+ 9ACF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9ACF              ;
 344+ 9ACF              ;	24/7/22
 345+ 9ACF              ;
 346+ 9ACF              ;	Ciclo_completo.
 347+ 9ACF              ;
 348+ 9ACF              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9ACF              ;
 350+ 9ACF              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9ACF              ; 	Decrementamos (Columns).
 352+ 9ACF              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9ACF              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9ACF
 355+ 9ACF
 356+ 9ACF 3A D1 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AD2 FE FF        	cp $ff
 358+ 9AD4 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AD6 E6 F0        	and $f0
 360+ 9AD8 20 28        	jr nz,3F
 361+ 9ADA
 362+ 9ADA              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9ADA
 364+ 9ADA 3A D1 89     	ld a,(CTRL_DESPLZ)
 365+ 9ADD 47           	ld b,a
 366+ 9ADE 3E F8        	ld a,$f8
 367+ 9AE0 80           	add b
 368+ 9AE1 32 D1 89     	ld (CTRL_DESPLZ),a
 369+ 9AE4 18 1C        	jr 3F
 370+ 9AE6 21 CA 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AE9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AEA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AEB 32 D1 89     	ld (CTRL_DESPLZ),a
 374+ 9AEE 3A DD 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AF1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AF3 20 0A        	jr nz,2F
 377+ 9AF5 2A CB 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AF8 23           	inc hl
 379+ 9AF9 22 CB 89     	ld (Posicion_actual),hl
 380+ 9AFC CD B6 9C     	call Genera_coordenadas
 381+ 9AFF
 382+ 9AFF              ; Inicia el puntero de Sprite.
 383+ 9AFF
 384+ 9AFF CD 44 8D     2 call Inicia_puntero_objeto_der
 385+ 9B02 C9           3 ret
 386+ 9B03
 387+ 9B03              ; ******************************************************************************************************************************************************************************************
 388+ 9B03              ;
 389+ 9B03              ;	15/02/23
 390+ 9B03              ;
 391+ 9B03              ;	Mov_left.
 392+ 9B03              ;
 393+ 9B03              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B03              ;
 395+ 9B03 21 F7 89     Mov_left ld hl,Ctrl_0
 396+ 9B06 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B08              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B08              ; 																	; _ en el caso de que no lo haya.
 399+ 9B08 3A F7 89     	ld a,(Ctrl_0)
 400+ 9B0B CB 77        	bit 6,a
 401+ 9B0D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B0F
 403+ 9B0F CD 25 9C     	call Stop_Amadeus_left
 404+ 9B12 C8           	ret z
 405+ 9B13 20 4A        	jr nz,8F
 406+ 9B15
 407+ 9B15 3A CF 89     11 ld a,(Coordenada_X)
 408+ 9B18 A7           	and a
 409+ 9B19 20 44        	jr nz,8F
 410+ 9B1B
 411+ 9B1B 3A D1 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B1E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B1F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B21
 415+ 9B21              ; ---------- ---------- ----------
 416+ 9B21
 417+ 9B21 3A DE 89     	ld a,(Vel_left)
 418+ 9B24 FE 02        	cp 2
 419+ 9B26 28 0F        	jr z,1F
 420+ 9B28 38 04        	jr c,6F
 421+ 9B2A FE 04        	cp 4
 422+ 9B2C 28 12        	jr z,7F
 423+ 9B2E
 424+ 9B2E              ; ---------- ---------- ----------
 425+ 9B2E
 426+ 9B2E 3A D1 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B31 FE F8        	cp $f8
 428+ 9B33 20 2A        	jr nz,8F
 429+ 9B35 18 10        	jr 4F
 430+ 9B37 3A D1 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B3A FE F9        	cp $f9
 432+ 9B3C 20 21        	jr nz,8F
 433+ 9B3E 18 07        	jr 4F
 434+ 9B40 3A D1 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B43 FE FB        	cp $fb
 436+ 9B45 20 18        	jr nz,8F
 437+ 9B47
 438+ 9B47              ; ---------- ---------- ----------
 439+ 9B47
 440+ 9B47              4
 441+ 9B47 CD 4D 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B4A              ;	call Reinicio
 443+ 9B4A
 444+ 9B4A              ; ---------- ---------- ----------
 445+ 9B4A
 446+ 9B4A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B4C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B4D
 449+ 9B4D              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B4D              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B4D
 452+ 9B4D CD 66 9B     	call DESPLZ_IZQ
 453+ 9B50 C1           	pop bc
 454+ 9B51 10 F9        	djnz 5B
 455+ 9B53 2A CB 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B56 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B57 22 CB 89     	ld (Posicion_actual),hl
 458+ 9B5A CD B6 9C     	call Genera_coordenadas
 459+ 9B5D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B5F
 461+ 9B5F              ; ---------- ---------- ----------
 462+ 9B5F
 463+ 9B5F              ; Movemos, no hay recolocación.
 464+ 9B5F
 465+ 9B5F 2A CB 89     8 ld hl,(Posicion_actual)
 466+ 9B62 CD 66 9B     	call DESPLZ_IZQ
 467+ 9B65 C9           2 ret
 468+ 9B66
 469+ 9B66              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B66              ;
 471+ 9B66              ;	22/9/22
 472+ 9B66
 473+ 9B66              DESPLZ_IZQ
 474+ 9B66
 475+ 9B66 CD 75 9B     	call Desplaza_izquierda
 476+ 9B69 CD C1 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B6C CD E9 9B     	call Ciclo_completo_2
 478+ 9B6F 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B72 CB BE        	res 7,(hl)
 480+ 9B74 C9           	ret
 481+ 9B75
 482+ 9B75              Desplaza_izquierda
 483+ 9B75
 484+ 9B75 3A DE 89     	ld a,(Vel_left)
 485+ 9B78 47           	ld b,a
 486+ 9B79 2A D9 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9B7C 23           1 inc hl
 488+ 9B7D 23           	inc hl
 489+ 9B7E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9B80 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9B83 CD 2D 8D     	call Extrae_address
 492+ 9B86 22 CD 89     	ld (Puntero_objeto),hl
 493+ 9B89
 494+ 9B89              ; Modifica (Puntero_DESPLZ_der).
 495+ 9B89
 496+ 9B89              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9B89              ; Cuántos movimientos hemos hecho ??
 498+ 9B89              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9B89
 500+ 9B89 2A D5 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9B8C EB           	ex de,hl
 502+ 9B8D A7           	and a
 503+ 9B8E ED 52        	sbc hl,de
 504+ 9B90 CB 3D        	srl l
 505+ 9B92 3E 08        6 ld a,8
 506+ 9B94 95           	sub l
 507+ 9B95 30 1E        	jr nc,3F
 508+ 9B97
 509+ 9B97              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9B97              ; B="0".
 511+ 9B97
 512+ 9B97 04           4 inc b
 513+ 9B98 3C           	inc a
 514+ 9B99 20 FC        	jr nz,4B
 515+ 9B9B 78           	ld a,b
 516+ 9B9C 08           	ex af,af
 517+ 9B9D 2A D5 89     	ld hl,(Indice_Sprite_izq)
 518+ 9BA0 23           5 inc hl
 519+ 9BA1 23           	inc hl
 520+ 9BA2 10 FC        	djnz 5B
 521+ 9BA4 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9BA7 CD 2D 8D     	call Extrae_address
 523+ 9BAA 22 CD 89     	ld (Puntero_objeto),hl
 524+ 9BAD
 525+ 9BAD              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9BAD              ; _(Posicion_actual).
 527+ 9BAD
 528+ 9BAD 21 CB 89     	ld hl,Posicion_actual
 529+ 9BB0 35           	dec (hl)
 530+ 9BB1 08           	ex af,af
 531+ 9BB2 6F           	ld l,a
 532+ 9BB3 18 DD        	jr 6B
 533+ 9BB5
 534+ 9BB5              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9BB5
 536+ 9BB5 47           3 ld b,a
 537+ 9BB6 2A D3 89     	ld hl,(Indice_Sprite_der)
 538+ 9BB9 23           2 inc hl
 539+ 9BBA 23           	inc hl
 540+ 9BBB 10 FC        	djnz 2B
 541+ 9BBD 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9BC0 C9           8 ret
 543+ 9BC1
 544+ 9BC1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9BC1              ;
 546+ 9BC1              ;	modifica_parametros_1er_DESPLZ
 547+ 9BC1              ;
 548+ 9BC1              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9BC1              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9BC1              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9BC1
 552+ 9BC1 3A D1 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9BC4 A7           	and a
 554+ 9BC5 20 1E        	jr nz,1F
 555+ 9BC7 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9BC8 32 D1 89         ld (CTRL_DESPLZ),a
 557+ 9BCB 21 CA 89     	ld hl,Columns
 558+ 9BCE 34           	inc (hl)
 559+ 9BCF 3A DD 89     	ld a,(Cuad_objeto)
 560+ 9BD2 E6 01        	and 1
 561+ 9BD4 20 0F        	jr nz,1F
 562+ 9BD6 2A CB 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9BD9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9BDA 22 CB 89     	ld (Posicion_actual),hl
 565+ 9BDD CD B6 9C     	call Genera_coordenadas
 566+ 9BE0 CD 3C 9C     	call Dec_CTRL_DESPLZ
 567+ 9BE3 18 03        	jr 2F
 568+ 9BE5 CD 3C 9C     1 call Dec_CTRL_DESPLZ
 569+ 9BE8 C9           2 ret
 570+ 9BE9
 571+ 9BE9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9BE9
 573+ 9BE9 3A D1 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9BEC FE F7        	cp $f7
 575+ 9BEE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9BF0 30 2C        	jr nc,3F
 577+ 9BF2
 578+ 9BF2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9BF2
 580+ 9BF2 06 00        	ld b,0
 581+ 9BF4 04           4 inc b
 582+ 9BF5 3C           	inc a
 583+ 9BF6 FE F7        	cp $f7
 584+ 9BF8 20 FA        	jr nz,4B
 585+ 9BFA 3E FF        	ld a,$ff
 586+ 9BFC 90           	sub b
 587+ 9BFD 32 D1 89     	ld (CTRL_DESPLZ),a
 588+ 9C00 18 1C        	jr 3F
 589+ 9C02
 590+ 9C02              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C02
 592+ 9C02 21 CA 89     1 ld hl,Columns
 593+ 9C05 35           	dec (hl)
 594+ 9C06 AF           	xor a
 595+ 9C07 32 D1 89     	ld (CTRL_DESPLZ),a
 596+ 9C0A 3A DD 89     	ld a,(Cuad_objeto)
 597+ 9C0D E6 01        	and 1
 598+ 9C0F 28 0A        	jr z,2F
 599+ 9C11 2A CB 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C14 2B           	dec hl
 601+ 9C15 22 CB 89     	ld (Posicion_actual),hl
 602+ 9C18 CD B6 9C     	call Genera_coordenadas
 603+ 9C1B
 604+ 9C1B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C1B
 606+ 9C1B CD 57 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C1E C9           3 ret
 608+ 9C1F
 609+ 9C1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C1F              ;
 611+ 9C1F              ;	19/10/22
 612+ 9C1F              ;
 613+ 9C1F              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C1F              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C1F
 616+ 9C1F 3A CF 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C22 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C24 C9           	ret
 619+ 9C25
 620+ 9C25              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C25              ;
 622+ 9C25              ;	19/10/22
 623+ 9C25              ;
 624+ 9C25              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C25              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C25
 627+ 9C25 3A CF 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C28 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C2A C9           	ret
 630+ 9C2B
 631+ 9C2B              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C2B              ;
 633+ 9C2B              ;	24/7/22
 634+ 9C2B              ;
 635+ 9C2B              ;	Inc_CTRL_DESPLZ
 636+ 9C2B              ;
 637+ 9C2B              ;
 638+ 9C2B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C2B
 640+ 9C2B 21 D1 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C2E 3A DF 89     	ld a,(Vel_right)
 642+ 9C31 A7           	and a
 643+ 9C32 28 06        	jr z,1F
 644+ 9C34 47           	ld b,a
 645+ 9C35 34           3 inc (hl)
 646+ 9C36 10 FD        	djnz 3B
 647+ 9C38 18 01        	jr 2F
 648+ 9C3A 34           1 inc (hl)
 649+ 9C3B C9           2 ret
 650+ 9C3C
 651+ 9C3C              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C3C              ;
 653+ 9C3C              ;	5/2/23
 654+ 9C3C              ;
 655+ 9C3C              ;	Dec_CTRL_DESPLZ
 656+ 9C3C              ;
 657+ 9C3C              ;
 658+ 9C3C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C3C
 660+ 9C3C 21 D1 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C3F 3A DE 89     	ld a,(Vel_left)
 662+ 9C42 A7           	and a
 663+ 9C43 28 06        	jr z,1F
 664+ 9C45 47           	ld b,a
 665+ 9C46 35           3 dec (hl)
 666+ 9C47 10 FD        	djnz 3B
 667+ 9C49 18 01        	jr 2F
 668+ 9C4B 35           1 dec (hl)
 669+ 9C4C C9           2 ret
 670+ 9C4D
 671+ 9C4D              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C4D
 673+ 9C4D 2A CB 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C50 01 1F 00     	ld bc,31
 675+ 9C53 A7           	and a
 676+ 9C54 ED 4A        	adc hl,bc
 677+ 9C56 22 CB 89     	ld (Posicion_actual),hl
 678+ 9C59 21 F7 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C5C CB C6        	set 0,(hl)
 680+ 9C5E C9           	ret
 681+ 9C5F
 682+ 9C5F              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C5F
 684+ 9C5F 2A CB 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C62 01 1F 00     	ld bc,31
 686+ 9C65 A7           	and a
 687+ 9C66 ED 42        	sbc hl,bc
 688+ 9C68 22 CB 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9C6B 21 F7 89     	ld hl,Ctrl_0
 690+ 9C6E CB CE        	set 1,(hl)
 691+ 9C70 C9           	ret
 692+ 9C71
 693+ 9C71              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9C71
 695+ 9C71 24           Reaparece_abajo inc h
 696+ 9C72 01 E0 17     	ld bc,$17e0
 697+ 9C75 A7           	and a
 698+ 9C76 ED 4A        	adc hl,bc
 699+ 9C78 22 CB 89     	ld (Posicion_actual),hl
 700+ 9C7B 21 F7 89     	ld hl,Ctrl_0
 701+ 9C7E CB D6        	set 2,(hl)
 702+ 9C80 C9           	ret
 703+ 9C81
 704+ 9C81              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9C81
 706+ 9C81 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9C84 A7           	and a
 708+ 9C85 ED 42        	sbc hl,bc
 709+ 9C87 22 CB 89     	ld (Posicion_actual),hl
 710+ 9C8A 21 F7 89     	ld hl,Ctrl_0
 711+ 9C8D CB DE        	set 3,(hl)
 712+ 9C8F C9           	ret
 713+ 9C90
 714+ 9C90              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9C90              ;
 716+ 9C90              ;	15/07/23
 717+ 9C90
 718+ 9C90              Reinicio
 719+ 9C90
 720+ 9C90              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9C90
 722+ 9C90 AF           	xor a
 723+ 9C91 21 FE 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9C94 CD B2 9C     	call Limpia_contenido_hl
 725+ 9C97
 726+ 9C97 21 CB 89     	ld hl,Posicion_actual
 727+ 9C9A CD B2 9C     	call Limpia_contenido_hl
 728+ 9C9D
 729+ 9C9D CD D3 9F     	call Inicializa_Puntero_indice_mov
 730+ 9CA0 CD 5D 9F     	call Inicia_Puntero_mov
 731+ 9CA3
 732+ 9CA3 21 00 8A     	ld hl,Incrementa_puntero
 733+ 9CA6 06 05        	ld b,5
 734+ 9CA8 77           1 ld (hl),a
 735+ 9CA9 23           	inc hl
 736+ 9CAA 10 FC        	djnz 1B
 737+ 9CAC
 738+ 9CAC 21 0A 8A     	ld hl,Ctrl_2
 739+ 9CAF CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9CB1
 741+ 9CB1 C9           	ret
 742+ 9CB2
 743+ 9CB2 77           Limpia_contenido_hl	ld (hl),a
 744+ 9CB3 23           	inc hl
 745+ 9CB4 77           	ld (hl),a
 746+ 9CB5 C9           	ret
 747+ 9CB6
 748+ 9CB6
# file closed: Direcciones.asm
1304  9CB6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CB6              ; ------------------------------------------------------------------------
   2+ 9CB6              ;
   3+ 9CB6              ;	02/04/23
   4+ 9CB6              ;
   5+ 9CB6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CB6              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CB6              ;
   8+ 9CB6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CB6              ;
  10+ 9CB6              ;	Modifica: A,BC y DE.
  11+ 9CB6
  12+ 9CB6 C5           Genera_coordenadas push bc
  13+ 9CB7 E5           	push hl
  14+ 9CB8 D5           	push de
  15+ 9CB9
  16+ 9CB9 2A CB 89     	ld hl,(Posicion_actual)
  17+ 9CBC
  18+ 9CBC 7D           	ld a,l
  19+ 9CBD E6 1F        	and $1f
  20+ 9CBF 32 CF 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CC2
  22+ 9CC2 CD 2B 99     	call calcula_tercio
  23+ 9CC5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CC6
  25+ 9CC6 1E 00        	ld e,0
  26+ 9CC8 7D           	ld a,l
  27+ 9CC9 E6 E0        	and $e0
  28+ 9CCB 28 01        	jr z,1F
  29+ 9CCD 04           	inc b
  30+ 9CCE
  31+ 9CCE 04           1 inc b
  32+ 9CCF 05           	dec b
  33+ 9CD0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CD2              ;														; _ , salimos.
  35+ 9CD2 1C           3 inc e
  36+ 9CD3 D6 20        	sub 32
  37+ 9CD5 20 FB        	jr nz,3B
  38+ 9CD7 10 F5        	djnz 1B
  39+ 9CD9
  40+ 9CD9 7B           2 ld a,e
  41+ 9CDA 32 D0 89     	ld (Coordenada_y),a
  42+ 9CDD
  43+ 9CDD D1           	pop de
  44+ 9CDE E1           	pop hl
  45+ 9CDF C1           	pop bc
  46+ 9CE0
  47+ 9CE0 C9           	ret
  48+ 9CE1
  49+ 9CE1              ; ------------------------------------------------------------------------
  50+ 9CE1              ;	28/05/23
  51+ 9CE1              ;
  52+ 9CE1              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CE1              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CE1              ;
  55+ 9CE1              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CE1              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CE1              ;
  58+ 9CE1              ;		DE="$120d"
  59+ 9CE1              ;
  60+ 9CE1              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CE1              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CE1              ;
  63+ 9CE1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CE1
  65+ 9CE1              ;	Modifica: A,BC y DE.
  66+ 9CE1
  67+ 9CE1
  68+ 9CE1              Genera_coordenadas_disparo
  69+ 9CE1
  70+ 9CE1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CE1
  72+ 9CE1 7D           	ld a,l
  73+ 9CE2 E6 1F        	and $1f
  74+ 9CE4 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CE5 CD 2B 99     	call calcula_tercio
  76+ 9CE8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CE9 1E 00        	ld e,0
  78+ 9CEB 7D           	ld a,l
  79+ 9CEC E6 E0        	and $e0
  80+ 9CEE 28 01        	jr z,1F
  81+ 9CF0 04           	inc b
  82+ 9CF1 1C           1 inc e
  83+ 9CF2 D6 20        	sub 32
  84+ 9CF4 20 FB        	jr nz,1B
  85+ 9CF6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CF8 C9           	ret
  87+ 9CF9
# file closed: Genera_coordenadas.asm
1305  9CF9              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CF9
   2+ 9CF9
   3+ 9CF9              ;   07/07/23
   4+ 9CF9              ;
   5+ 9CF9              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CF9              ;
   7+ 9CF9              ;   Codificación:
   8+ 9CF9              ;
   9+ 9CF9              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CF9              ;
  11+ 9CF9              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CF9              ;
  13+ 9CF9              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CF9              ;
  15+ 9CF9              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CF9              ;
  17+ 9CF9              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CF9              ;                               ..... %01000010 Vel_up 4
  19+ 9CF9              ;                                               Vel_down 2
  20+ 9CF9              ;                               ..... $42
  21+ 9CF9              ;
  22+ 9CF9              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CF9              ;
  24+ 9CF9              ;                               ..... %01000010 Vel_left 4
  25+ 9CF9              ;                                               Vel_right 2
  26+ 9CF9              ;                               ..... $42
  27+ 9CF9              ;
  28+ 9CF9              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CF9              ;
  30+ 9CF9              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CF9              ;
  32+ 9CF9              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CF9              ;
  34+ 9CF9              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CF9              ;                                     $53
  36+ 9CF9              ;
  37+ 9CF9              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CF9              ;
  39+ 9CF9              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CF9              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CF9              ;
  42+ 9CF9              ;                       Arriba ..... $81
  43+ 9CF9              ;                       Arriba - izquierda ..... $a1
  44+ 9CF9              ;                       Arriba - derecha ..... $91
  45+ 9CF9              ;
  46+ 9CF9              ;                       Abajo ..... $41
  47+ 9CF9              ;                       Abajo - izquierda ..... $61
  48+ 9CF9              ;                       Abajo - derecha ..... $51
  49+ 9CF9              ;
  50+ 9CF9              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CF9              ;
  52+ 9CF9              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CF9              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CF9              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CF9              ;
  56+ 9CF9              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CF9              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CF9              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CF9              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CF9              ;
  61+ 9CF9              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CF9              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CF9              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CF9              ;
  65+ 9CF9              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CF9              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CF9              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CF9              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CF9
  70+ 9CF9              ; ----- ----- ----- ----- -----
  71+ 9CF9
  72+ 9CF9 25 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CFB 2D 9D            defw F_1
  74+ 9CFD 37 9D            defw F_2
  75+ 9CFF 41 9D            defw Codo_abajo_derecha
  76+ 9D01 75 9D            defw Derecha_y_subiendo
  77+ 9D03 7F 9D            defw Derecha_y_subiendo_1
  78+ 9D05 89 9D            defw F_3
  79+ 9D07 93 9D            defw F_4
  80+ 9D09 9D 9D            defw Derecha_y_bajando
  81+ 9D0B A7 9D            defw Derecha_y_bajando_1
  82+ 9D0D B1 9D            defw Derecha_y_bajando_2
  83+ 9D0F BB 9D            defw Codo_derecha_abajo
  84+ 9D11 EB 9D            defw Codo_abajo_izq.
  85+ 9D13 1F 9E            defw Izquierda_y_subiendo
  86+ 9D15 29 9E            defw Izquierda_y_subiendo_1
  87+ 9D17 33 9E            defw F_5
  88+ 9D19 3D 9E            defw F_6
  89+ 9D1B 47 9E            defw Izquierda_y_bajando
  90+ 9D1D 51 9E            defw Izquierda_y_bajando_1
  91+ 9D1F 5B 9E            defw Izquierda_y_bajando_2
  92+ 9D21 65 9E            defw Codo_izquierda_abajo
  93+ 9D23 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D25
  95+ 9D25 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D29 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D2D
  98+ 9D2D 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D31 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D35 08 00
 100+ 9D37 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D3B 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D3F 0F FE
 102+ 9D41
 103+ 9D41 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D45 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D49 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D4D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D51 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D55 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D59 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D5D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D61 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D65 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D69 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D6D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D71 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D75
 117+ 9D75 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D79 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D7D 06 00
 119+ 9D7F
 120+ 9D7F 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D83 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D87 02 00
 122+ 9D89
 123+ 9D89 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D8D 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D91 04 00
 125+ 9D93 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D97 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D9B 08 00
 127+ 9D9D
 128+ 9D9D 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DA1 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DA5 02 00
 130+ 9DA7
 131+ 9DA7 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DAB 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DAF 06 00
 133+ 9DB1
 134+ 9DB1 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DB5 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DB9 06 00
 136+ 9DBB
 137+ 9DBB              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DBB
 139+ 9DBB 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DBF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DC3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DC7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DCB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DCF 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DD3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DD7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DDB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DDF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DE3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DE7 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DEB
 152+ 9DEB 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DEF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DF3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DF7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DFB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9DFF 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E03 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E07 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E0B 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E0F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E13 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E17 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E1B 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E1F
 166+ 9E1F 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E23 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E27 06 00
 168+ 9E29
 169+ 9E29 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E2D 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E31 02 00
 171+ 9E33
 172+ 9E33 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E37 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E3B 04 00
 174+ 9E3D 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E41 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E45 08 00
 176+ 9E47
 177+ 9E47 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E4B 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E4F 02 00
 179+ 9E51
 180+ 9E51 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E55 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E59 06 00
 182+ 9E5B
 183+ 9E5B 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E5F 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E63 06 00
 185+ 9E65
 186+ 9E65 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E69 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E6D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E71 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E75 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E79 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E7D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E81 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E85 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E89 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E8D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E91 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E95
 199+ 9E95              ; ----- ----- ----- ----- -----
 200+ 9E95              ;
 201+ 9E95              ;   27/06/23
 202+ 9E95
 203+ 9E95              Movimiento
 204+ 9E95
 205+ 9E95              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E95
 207+ 9E95              ;    ld hl,(Posicion_actual)
 208+ 9E95
 209+ 9E95 3A 0A 8A         ld a,(Ctrl_2)
 210+ 9E98 CB 57            bit 2,a
 211+ 9E9A 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E9C
 213+ 9E9C 2A FC 89         ld hl,(Puntero_mov)
 214+ 9E9F 7E               ld a,(hl)
 215+ 9EA0
 216+ 9EA0              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EA0
 218+ 9EA0              Inicia_desplazamiento.
 219+ 9EA0
 220+ 9EA0              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EA0
 222+ 9EA0 CD 94 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EA3
 224+ 9EA3              ; Iniciamos (Repetimos_mov).
 225+ 9EA3
 226+ 9EA3 7E               ld a,(hl)
 227+ 9EA4 E6 0F            and $0f
 228+ 9EA6 32 02 8A         ld (Repetimos_desplazamiento),a
 229+ 9EA9 32 03 8A         ld (Repetimos_desplazamiento_backup),a
 230+ 9EAC
 231+ 9EAC              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EAC
 233+ 9EAC 23               inc hl
 234+ 9EAD 7E               ld a,(hl)
 235+ 9EAE 32 05 8A         ld (Cola_de_desplazamiento),a
 236+ 9EB1 2B               dec hl
 237+ 9EB2
 238+ 9EB2 21 0A 8A         ld hl,Ctrl_2
 239+ 9EB5 CB D6            set 2,(hl)
 240+ 9EB7
 241+ 9EB7              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EB7              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EB7
 244+ 9EB7              Desplazamiento_iniciado
 245+ 9EB7
 246+ 9EB7 CD 68 9F         call Aplica_desplazamiento
 247+ 9EBA
 248+ 9EBA 3A 0A 8A         ld a,(Ctrl_2)
 249+ 9EBD CB 67            bit 4,a
 250+ 9EBF C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EC0
 252+ 9EC0 21 02 8A     3 ld hl,Repetimos_desplazamiento
 253+ 9EC3 35               dec (hl)
 254+ 9EC4 C0               ret nz
 255+ 9EC5
 256+ 9EC5              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EC5              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EC5              ; Analiza (Cola_de_desplazamiento).
 259+ 9EC5
 260+ 9EC5 3A 05 8A     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EC8 A7               and a
 262+ 9EC9 CC BD 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9ECC 28 30            jr z,Reinicia_el_movimiento
 264+ 9ECE
 265+ 9ECE FE FF            cp $ff
 266+ 9ED0 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9ED2
 268+ 9ED2 FE FE            cp $fe
 269+ 9ED4 CC 41 9F         call z,Fijamos_bucle
 270+ 9ED7 28 25            jr z,Reinicia_el_movimiento
 271+ 9ED9
 272+ 9ED9 FE FD            cp $fd
 273+ 9EDB 20 11            jr nz,1F
 274+ 9EDD
 275+ 9EDD              ; ---
 276+ 9EDD              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EDD
 278+ 9EDD 3A 0A 8A         ld a,(Ctrl_2)
 279+ 9EE0 CB 5F            bit 3,a
 280+ 9EE2 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EE4
 282+ 9EE4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EE4
 284+ 9EE4 21 0A 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EE7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EE9
 287+ 9EE9 CD 52 9F         call Inicia_Repetimos_movimiento
 288+ 9EEC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EEE              ; ---
 290+ 9EEE
 291+ 9EEE FE 01        1 cp 1
 292+ 9EF0 CA 2B 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9EF3
 294+ 9EF3 3D               dec a
 295+ 9EF4 32 05 8A         ld (Cola_de_desplazamiento),a
 296+ 9EF7
 297+ 9EF7 3A 03 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9EFA 32 02 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9EFD              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9EFD C9               ret
 301+ 9EFE
 302+ 9EFE              Reinicia_el_movimiento
 303+ 9EFE
 304+ 9EFE 3A 0A 8A         ld a,(Ctrl_2)
 305+ 9F01 CB 5F            bit 3,a
 306+ 9F03 28 1B            jr z,2F
 307+ 9F05
 308+ 9F05              ; (Cola_de_desplazamiento)="254".
 309+ 9F05
 310+ 9F05 21 04 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F08 35               dec (hl)
 312+ 9F09 20 15            jr nz,2F
 313+ 9F0B
 314+ 9F0B              ; Fin de las repeticiones del último movimiento.
 315+ 9F0B
 316+ 9F0B 21 0A 8A         ld hl,Ctrl_2
 317+ 9F0E CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F10
 319+ 9F10 2A FC 89         ld hl,(Puntero_mov)
 320+ 9F13 23               inc hl
 321+ 9F14 23               inc hl
 322+ 9F15 23               inc hl
 323+ 9F16 22 FC 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F19              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F19 7E               ld a,(hl)
 326+ 9F1A 32 05 8A         ld (Cola_de_desplazamiento),a
 327+ 9F1D
 328+ 9F1D C3 C5 9E         jp Cola
 329+ 9F20
 330+ 9F20
 331+ 9F20 CD 5D 9F     2 call Inicia_Puntero_mov
 332+ 9F23
 333+ 9F23 21 0A 8A         ld hl,Ctrl_2
 334+ 9F26 CB 96            res 2,(hl)
 335+ 9F28
 336+ 9F28 C3 95 9E         jp Movimiento
 337+ 9F2B
 338+ 9F2B              Siguiente_desplazamiento
 339+ 9F2B
 340+ 9F2B              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F2B              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F2B
 343+ 9F2B 21 0A 8A         ld hl,Ctrl_2
 344+ 9F2E CB 96            res 2,(hl)
 345+ 9F30
 346+ 9F30 2A FC 89         ld hl,(Puntero_mov)
 347+ 9F33 23               inc hl
 348+ 9F34 23               inc hl
 349+ 9F35 22 FC 89         ld (Puntero_mov),hl
 350+ 9F38
 351+ 9F38 7E               ld a,(hl)
 352+ 9F39 A7               and a
 353+ 9F3A CC BD 9F         call z,Incrementa_Puntero_indice_mov
 354+ 9F3D CA FE 9E         jp z,Reinicia_el_movimiento
 355+ 9F40
 356+ 9F40 C9               ret
 357+ 9F41              ; Subrutinas -----------------------------------------
 358+ 9F41              ; ---------- --------- --------- ---------- ----------
 359+ 9F41              ;
 360+ 9F41              ;   24/07/23
 361+ 9F41              ;
 362+ 9F41              ;   Fijamos_bucle
 363+ 9F41              ;
 364+ 9F41              ;
 365+ 9F41
 366+ 9F41              Fijamos_bucle
 367+ 9F41
 368+ 9F41 3A 00 8A         ld a,(Incrementa_puntero)
 369+ 9F44 3C               inc a
 370+ 9F45 32 01 8A         ld (Incrementa_puntero_backup),a
 371+ 9F48
 372+ 9F48 CD BD 9F         call Incrementa_Puntero_indice_mov
 373+ 9F4B 2A FA 89         ld hl,(Puntero_indice_mov)
 374+ 9F4E 22 FE 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9F51 C9               ret
 376+ 9F52
 377+ 9F52              ; ---------- --------- --------- ---------- ----------
 378+ 9F52              ;
 379+ 9F52              ;   07/7/23
 380+ 9F52              ;
 381+ 9F52              ;   Inicia_Repetimos_movimiento
 382+ 9F52              ;
 383+ 9F52              ;
 384+ 9F52
 385+ 9F52              Inicia_Repetimos_movimiento
 386+ 9F52
 387+ 9F52              ; Iniciamos (Repetimos_movimiento).
 388+ 9F52
 389+ 9F52 DD 2A FC 89      ld ix,(Puntero_mov)
 390+ 9F56 DD 7E 02         ld a,(ix+2)
 391+ 9F59 32 04 8A         ld (Repetimos_movimiento),a
 392+ 9F5C
 393+ 9F5C C9               ret
 394+ 9F5D
 395+ 9F5D              ; ---------- --------- --------- ---------- ----------
 396+ 9F5D              ;
 397+ 9F5D              ;   26/6/23
 398+ 9F5D              ;
 399+ 9F5D              ;   Inicia_Puntero_mov
 400+ 9F5D              ;
 401+ 9F5D              ;
 402+ 9F5D
 403+ 9F5D 2A FA 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F60 5E               ld e,(hl)
 405+ 9F61 23               inc hl
 406+ 9F62 56               ld d,(hl)
 407+ 9F63 EB               ex de,hl
 408+ 9F64 22 FC 89         ld (Puntero_mov),hl
 409+ 9F67 C9               ret
 410+ 9F68
 411+ 9F68              ; ---------- --------- --------- ---------- ----------
 412+ 9F68              ;
 413+ 9F68              ;   27/06/23
 414+ 9F68              ;
 415+ 9F68              ;   Aplica_movimiento.
 416+ 9F68
 417+ 9F68              Aplica_desplazamiento
 418+ 9F68
 419+ 9F68              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F68
 421+ 9F68 2A FC 89         ld hl, (Puntero_mov)
 422+ 9F6B
 423+ 9F6B 7E               ld a,(hl)
 424+ 9F6C E6 F0            and $f0
 425+ 9F6E C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F6F
 427+ 9F6F CB 7E            bit 7,(hl)
 428+ 9F71 28 03            jr z,1F
 429+ 9F73 CD A2 99         call Mov_up
 430+ 9F76 2A FC 89     1 ld hl, (Puntero_mov)
 431+ 9F79 CB 76            bit 6,(hl)
 432+ 9F7B 28 03            jr z,2F
 433+ 9F7D CD 71 99         call Mov_down
 434+ 9F80 2A FC 89     2 ld hl, (Puntero_mov)
 435+ 9F83 CB 6E            bit 5,(hl)
 436+ 9F85 28 03            jr z,3F
 437+ 9F87 CD 03 9B         call Mov_left
 438+ 9F8A 2A FC 89     3 ld hl, (Puntero_mov)
 439+ 9F8D CB 66            bit 4,(hl)
 440+ 9F8F C8               ret z
 441+ 9F90 CD E5 99         call Mov_right
 442+ 9F93 C9               ret
 443+ 9F94
 444+ 9F94              ; ---------- --------- --------- ---------- ----------
 445+ 9F94              ;
 446+ 9F94              ;   26/06/23
 447+ 9F94              ;
 448+ 9F94              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F94
 450+ 9F94              Ajusta_velocidad_desplazamiento
 451+ 9F94
 452+ 9F94              ; 1er byte de la cadena de movimiento.
 453+ 9F94              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F94
 455+ 9F94 CD B2 9F         call Extrae_nibble_alto
 456+ 9F97
 457+ 9F97 32 E0 89         ld (Vel_up),a
 458+ 9F9A 79               ld a,c
 459+ 9F9B E6 0F            and $0f
 460+ 9F9D 32 E1 89         ld (Vel_down),a
 461+ 9FA0
 462+ 9FA0              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9FA0              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9FA0
 465+ 9FA0 23               inc hl
 466+ 9FA1 CD B2 9F         call Extrae_nibble_alto
 467+ 9FA4
 468+ 9FA4 32 DE 89         ld (Vel_left),a
 469+ 9FA7 79               ld a,c
 470+ 9FA8 E6 0F            and $0f
 471+ 9FAA 32 DF 89         ld (Vel_right),a
 472+ 9FAD
 473+ 9FAD              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9FAD
 475+ 9FAD 23               inc hl
 476+ 9FAE 22 FC 89         ld (Puntero_mov),hl
 477+ 9FB1 C9               ret
 478+ 9FB2
 479+ 9FB2 06 04        Extrae_nibble_alto ld b,4
 480+ 9FB4 7E               ld a,(hl)
 481+ 9FB5 4F               ld c,a
 482+ 9FB6 E6 F0            and $f0
 483+ 9FB8 CB 3F        1 srl a
 484+ 9FBA 10 FC            djnz 1B
 485+ 9FBC C9               ret
 486+ 9FBD
 487+ 9FBD              ; ---------- --------- --------- ---------- ----------
 488+ 9FBD              ;
 489+ 9FBD              ;   5/7/23
 490+ 9FBD              ;
 491+ 9FBD              ;   Incrementa_Puntero_indice_mov
 492+ 9FBD
 493+ 9FBD              Incrementa_Puntero_indice_mov
 494+ 9FBD
 495+ 9FBD 21 00 8A         ld hl,Incrementa_puntero
 496+ 9FC0 34               inc (hl)
 497+ 9FC1
 498+ 9FC1 2A FA 89         ld hl,(Puntero_indice_mov)
 499+ 9FC4 01 02 00         ld bc,2
 500+ 9FC7 A7               and a
 501+ 9FC8 09               add hl,bc
 502+ 9FC9 22 FA 89         ld (Puntero_indice_mov),hl
 503+ 9FCC
 504+ 9FCC 7E               ld a,(hl)
 505+ 9FCD A7               and a
 506+ 9FCE
 507+ 9FCE              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FCE
 509+ 9FCE              ;    jr z,$
 510+ 9FCE
 511+ 9FCE              ;! Reinicia el Patrón de movimiento.
 512+ 9FCE
 513+ 9FCE CC D3 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FD1
 515+ 9FD1 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FD2
 517+ 9FD2 C9               ret
 518+ 9FD3
 519+ 9FD3
 520+ 9FD3              ; ---------- --------- --------- ---------- ----------
 521+ 9FD3              ;
 522+ 9FD3              ;   24/07/23
 523+ 9FD3              ;
 524+ 9FD3              ;   Inicializa_Puntero_indice_mov
 525+ 9FD3
 526+ 9FD3              Inicializa_Puntero_indice_mov
 527+ 9FD3
 528+ 9FD3              ; Existe etiqueta de bucle principal???
 529+ 9FD3
 530+ 9FD3 2A FE 89         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FD6 24               inc h
 532+ 9FD7 25               dec h
 533+ 9FD8 28 05            jr z,2F
 534+ 9FDA
 535+ 9FDA 22 FA 89         ld (Puntero_indice_mov),hl
 536+ 9FDD 18 14            jr 3F
 537+ 9FDF
 538+ 9FDF              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FDF
 540+ 9FDF 3A 00 8A     2 ld a,(Incrementa_puntero)
 541+ 9FE2 47               ld b,a
 542+ 9FE3
 543+ 9FE3 2A FA 89         ld hl,(Puntero_indice_mov)
 544+ 9FE6 2B           1 dec hl
 545+ 9FE7 2B               dec hl
 546+ 9FE8 10 FC            djnz 1B
 547+ 9FEA 22 FA 89         ld (Puntero_indice_mov),hl
 548+ 9FED
 549+ 9FED AF               xor a
 550+ 9FEE 32 00 8A         ld (Incrementa_puntero),a
 551+ 9FF1 18 06            jr 4F
 552+ 9FF3
 553+ 9FF3 3A 01 8A     3 ld a,(Incrementa_puntero_backup)
 554+ 9FF6 32 00 8A         ld (Incrementa_puntero),a
 555+ 9FF9 C9           4 ret
 556+ 9FFA
 557+ 9FFA
 558+ 9FFA
# file closed: Patrones_de_mov.asm
1306  9FFA              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9FFA              ; Relojes y temporizaciones.
   2+ 9FFA
   3+ 9FFA              ; ------------------------------------------------------
   4+ 9FFA              ;
   5+ 9FFA              ;	16/7/23
   6+ 9FFA              ;
   7+ 9FFA              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9FFA              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9FFA              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9FFA              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9FFA              ;
  12+ 9FFA              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9FFA              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9FFA
  15+ 9FFA              ; Disparo_entidad db 1
  16+ 9FFA              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9FFA              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9FFA
  19+ 9FFA              Habilita_disparos
  20+ 9FFA
  21+ 9FFA 7E           	ld a,(hl)
  22+ 9FFB A7           	and a
  23+ 9FFC C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9FFD
  25+ 9FFD EB           	ex de,hl
  26+ 9FFE
  27+ 9FFE 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9FFF C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A000
  30+ A000              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A000
  32+ A000 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A001 7E           	ld a,(hl)
  34+ A002 23           	inc hl
  35+ A003 77           	ld (hl),a
  36+ A004
  37+ A004 EB           	ex de,hl						; Habilitamos disparo.
  38+ A005 3E 01        	ld a,1
  39+ A007 77           	ld (hl),a
  40+ A008 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1307  A009              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A009              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A009              ;
   3+ A009              ;	3/1/23
   4+ A009              ;
   5+ A009              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A009
   7+ A009              ;	ADC HL,SP	LD (addr),SP
   8+ A009              ;	ADD HL,SP	LD SP,(addr)
   9+ A009              ;	ADD IX,SP	LD SP,nn
  10+ A009              ; 	ADD IY,SP	LD SP,HL
  11+ A009              ;				LD SP,IX
  12+ A009              ;	DEC SP		LD SP,IY
  13+ A009
  14+ A009              ;	EX (SP),HL
  15+ A009              ;	EX (SP),IX
  16+ A009              ;	EX (SP),IY
  17+ A009
  18+ A009              ;	INC SP
  19+ A009
  20+ A009                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 1D 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  33+ 7FA7
  34+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  35+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  36+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  37+ 7FAC
  38+ 7FAC 3A 0C 8A         ld a,(Ctrl_1)
  39+ 7FAF CB 47            bit 0,a
  40+ 7FB1 28 05            jr z,2F
  41+ 7FB3
  42+ 7FB3 2A 2F 8A         ld hl,(Stack_snapshot_disparos_3)
  43+ 7FB6
  44+ 7FB6 18 03            jr 4F
  45+ 7FB8
  46+ 7FB8 2A 2D 8A     2 ld hl,(Stack_snapshot_3)                        ; Album_de_fotos contiene la imagen de los registros implicados en el_
  47+ 7FBB
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 2F 8A         ld (Stack_snapshot_disparos_3),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 2D 8A     5 ld (Stack_snapshot_3),hl
  64+ 7FD0 ED 7B 1D 8A  6 ld sp,(Stack)
  65+ 7FD4
  66+ 7FD4 C9               ret
  67+ 7FD5
  68+ 7FD5              ; ------------------------------------------------
  69+ 7FD5              ;
  70+ 7FD5              ;   31/07/23
  71+ 7FD5              ;
  72+ 7FD5              ;   La rutina estará situada justo después de los álbumes de fotos.
  73+ 7FD5
  74+ 7FD5                  org $741a
  75+ 741A
  76+ 741A              Gestiona_albumes_de_fotos
  77+ 741A
  78+ 741A              ; Desplazamos álbumes.
  79+ 741A
  80+ 741A              ; (Album_de_fotos_1) --- (Album_de_fotos).
  81+ 741A
  82+ 741A              ;   El álbum_1 contiene datos?
  83+ 741A
  84+ 741A 21 85 70         ld hl,Album_de_fotos_1+1
  85+ 741D 7E               ld a,(hl)
  86+ 741E A7               and a
  87+ 741F 28 05            jr z,1F
  88+ 7421
  89+ 7421              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
  90+ 7421
  91+ 7421 CD EB 74         call Album_1_a_Album_de_fotos
  92+ 7424 18 1A            jr 2F
  93+ 7426
  94+ 7426              ; El álbum_1 está vacío.
  95+ 7426              ; Album_de_fotos contiene datos?
  96+ 7426
  97+ 7426 21 01 70     1 ld hl,Album_de_fotos+1
  98+ 7429 7E               ld a,(hl)
  99+ 742A A7               and a
 100+ 742B 28 13            jr z,2F
 101+ 742D
 102+ 742D              ; Limpiamos Album_de_fotos.
 103+ 742D
 104+ 742D 21 00 70         ld hl,Album_de_fotos
 105+ 7430 36 00            ld (hl),0
 106+ 7432 11 01 70         ld de,Album_de_fotos+1
 107+ 7435 01 83 00         ld bc,$83
 108+ 7438 ED B0            ldir
 109+ 743A 21 00 70         ld hl,Album_de_fotos
 110+ 743D 22 21 8A         ld (Stack_snapshot),hl
 111+ 7440
 112+ 7440              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 113+ 7440
 114+ 7440              ;   El álbum_2 contiene datos?
 115+ 7440
 116+ 7440 21 08 71     2 ld hl,Album_de_fotos_2+1
 117+ 7443 7E               ld a,(hl)
 118+ 7444 A7               and a
 119+ 7445 28 05            jr z,3F
 120+ 7447
 121+ 7447              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 122+ 7447
 123+ 7447 CD D0 74         call Album_2_a_Album_1
 124+ 744A 18 1A            jr 4F
 125+ 744C
 126+ 744C              ; El álbum_2 está vacío.
 127+ 744C              ; álbum_1 contiene datos?
 128+ 744C
 129+ 744C 21 85 70     3 ld hl,Album_de_fotos_1+1
 130+ 744F 7E               ld a,(hl)
 131+ 7450 A7               and a
 132+ 7451 28 13            jr z,4F
 133+ 7453
 134+ 7453              ; Limpiamos Album_de_fotos_1.
 135+ 7453
 136+ 7453 21 84 70         ld hl,Album_de_fotos_1
 137+ 7456 36 00            ld (hl),0
 138+ 7458 11 85 70         ld de,Album_de_fotos_1+1
 139+ 745B 01 83 00         ld bc,$83
 140+ 745E ED B0            ldir
 141+ 7460 21 84 70         ld hl,Album_de_fotos_1
 142+ 7463 22 25 8A         ld (Stack_snapshot_1),hl
 143+ 7466
 144+ 7466              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 145+ 7466
 146+ 7466              ;   El álbum_3 contiene datos?
 147+ 7466
 148+ 7466 21 8B 71     4 ld hl,Album_de_fotos_3+1
 149+ 7469 7E               ld a,(hl)
 150+ 746A A7               and a
 151+ 746B 28 05            jr z,5F
 152+ 746D
 153+ 746D              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 154+ 746D
 155+ 746D CD B5 74         call Album_3_a_Album_2
 156+ 7470 18 1A            jr 6F
 157+ 7472
 158+ 7472              ; El álbum_3 está vacío.
 159+ 7472              ; álbum_2 contiene datos?
 160+ 7472
 161+ 7472 21 08 71     5 ld hl,Album_de_fotos_2+1
 162+ 7475 7E               ld a,(hl)
 163+ 7476 A7               and a
 164+ 7477 28 13            jr z,6F
 165+ 7479
 166+ 7479              ; Limpiamos Album_de_fotos_2.
 167+ 7479
 168+ 7479 21 07 71         ld hl,Album_de_fotos_2
 169+ 747C 36 00            ld (hl),0
 170+ 747E 11 08 71         ld de,Album_de_fotos_2+1
 171+ 7481 01 83 00         ld bc,$83
 172+ 7484 ED B0            ldir
 173+ 7486 21 07 71         ld hl,Album_de_fotos_2
 174+ 7489 22 29 8A         ld (Stack_snapshot_2),hl
 175+ 748C
 176+ 748C C9           6 ret
 177+ 748D
 178+ 748D              ; ----------------------------------------------
 179+ 748D              ;
 180+ 748D              ;   31/7/23
 181+ 748D              ;
 182+ 748D              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 183+ 748D              ;
 184+ 748D              ;   Para pasar datos de un album a otro:
 185+ 748D              ;
 186+ 748D              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 187+ 748D              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 188+ 748D              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 189+ 748D
 190+ 748D C5           Trasbase_de_datos push bc
 191+ 748E A7               and a
 192+ 748F ED 42            sbc hl,bc
 193+ 7491 E5               push hl
 194+ 7492 C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 195+ 7493 E1               pop hl
 196+ 7494 ED B0            ldir
 197+ 7496 C9               ret
 198+ 7497
 199+ 7497              ; Paquetitos.
 200+ 7497
 201+ 7497 2A 2D 8A     Trasbase_3a2 ld hl,(Stack_snapshot_3)
 202+ 749A 01 8A 71         ld bc,Album_de_fotos_3
 203+ 749D CD 8D 74         call Trasbase_de_datos
 204+ 74A0 C9               ret
 205+ 74A1
 206+ 74A1 2A 29 8A     Trasbase_2a1 ld hl,(Stack_snapshot_2)
 207+ 74A4 01 07 71         ld bc,Album_de_fotos_2
 208+ 74A7 CD 8D 74         call Trasbase_de_datos
 209+ 74AA C9               ret
 210+ 74AB
 211+ 74AB 2A 25 8A     Trasbase_1a0 ld hl,(Stack_snapshot_1)
 212+ 74AE 01 84 70         ld bc,Album_de_fotos_1
 213+ 74B1 CD 8D 74         call Trasbase_de_datos
 214+ 74B4 C9               ret
 215+ 74B5
 216+ 74B5              ; ----------------------------------------------
 217+ 74B5
 218+ 74B5              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 219+ 74B5              ; _ limpiamos (Album_de_fotos_3).
 220+ 74B5              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 221+ 74B5
 222+ 74B5              ;   Datos de álbum_3 a álbum_2.
 223+ 74B5
 224+ 74B5 11 07 71     Album_3_a_Album_2 ld de,Album_de_fotos_2
 225+ 74B8 CD 97 74         call Trasbase_3a2
 226+ 74BB
 227+ 74BB              ;   Actualizamos (Stack_snapshot_2).
 228+ 74BB
 229+ 74BB EB               ex de,hl
 230+ 74BC 22 29 8A         ld (Stack_snapshot_2),hl
 231+ 74BF
 232+ 74BF              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 233+ 74BF
 234+ 74BF AF               xor a
 235+ 74C0 32 8A 71         ld (Album_de_fotos_3),a
 236+ 74C3 11 8B 71         ld de,Album_de_fotos_3+1
 237+ 74C6 CD 97 74         call Trasbase_3a2
 238+ 74C9
 239+ 74C9 21 8A 71         ld hl,Album_de_fotos_3
 240+ 74CC 22 2D 8A         ld (Stack_snapshot_3),hl
 241+ 74CF C9               ret
 242+ 74D0
 243+ 74D0 11 84 70     Album_2_a_Album_1 ld de,Album_de_fotos_1
 244+ 74D3 CD A1 74         call Trasbase_2a1
 245+ 74D6
 246+ 74D6              ;   Actualizamos (Stack_snapshot_1).
 247+ 74D6
 248+ 74D6 EB               ex de,hl
 249+ 74D7 22 25 8A         ld (Stack_snapshot_1),hl
 250+ 74DA
 251+ 74DA              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 252+ 74DA
 253+ 74DA AF               xor a
 254+ 74DB 32 07 71         ld (Album_de_fotos_2),a
 255+ 74DE 11 08 71         ld de,Album_de_fotos_2+1
 256+ 74E1 CD A1 74         call Trasbase_2a1
 257+ 74E4
 258+ 74E4 21 07 71         ld hl,Album_de_fotos_2
 259+ 74E7 22 29 8A         ld (Stack_snapshot_2),hl
 260+ 74EA C9               ret
 261+ 74EB
 262+ 74EB 11 00 70     Album_1_a_Album_de_fotos ld de,Album_de_fotos
 263+ 74EE CD AB 74         call Trasbase_1a0
 264+ 74F1
 265+ 74F1              ;   Actualizamos (Stack_snapshot).
 266+ 74F1
 267+ 74F1 EB               ex de,hl
 268+ 74F2 22 21 8A         ld (Stack_snapshot),hl
 269+ 74F5
 270+ 74F5               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 271+ 74F5
 272+ 74F5 AF               xor a
 273+ 74F6 32 84 70         ld (Album_de_fotos_1),a
 274+ 74F9 11 85 70         ld de,Album_de_fotos_1+1
 275+ 74FC CD AB 74         call Trasbase_1a0
 276+ 74FF
 277+ 74FF 21 84 70         ld hl,Album_de_fotos_1
 278+ 7502 22 25 8A         ld (Stack_snapshot_1),hl
 279+ 7505 C9               ret
 280+ 7506
 281+ 7506              ; -------------------- ------------------------------------
 282+ 7506
 283+ 7506              Gestiona_albumes_de_fotos_disparos
 284+ 7506
 285+ 7506              ; Desplazamos álbumes.
 286+ 7506
 287+ 7506              ; (Album_de_fotos_1) --- (Album_de_fotos).
 288+ 7506
 289+ 7506              ;   El álbum_1 contiene datos?
 290+ 7506
 291+ 7506 21 91 72         ld hl,Album_de_fotos_disparos_1+1
 292+ 7509 7E               ld a,(hl)
 293+ 750A A7               and a
 294+ 750B 28 05            jr z,1F
 295+ 750D
 296+ 750D              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 297+ 750D
 298+ 750D CD D7 75         call Album_1_a_Album_de_fotos_disparos
 299+ 7510 18 1A            jr 2F
 300+ 7512
 301+ 7512              ; El álbum_1 está vacío.
 302+ 7512              ; Album_de_fotos contiene datos?
 303+ 7512
 304+ 7512 21 0E 72     1 ld hl,Album_de_fotos_disparos+1
 305+ 7515 7E               ld a,(hl)
 306+ 7516 A7               and a
 307+ 7517 28 13            jr z,2F
 308+ 7519
 309+ 7519              ; Limpiamos Album_de_fotos.
 310+ 7519
 311+ 7519 21 0D 72         ld hl,Album_de_fotos_disparos
 312+ 751C 36 00            ld (hl),0
 313+ 751E 11 0E 72         ld de,Album_de_fotos_disparos+1
 314+ 7521 01 83 00         ld bc,$83
 315+ 7524 ED B0            ldir
 316+ 7526 21 0D 72         ld hl,Album_de_fotos_disparos
 317+ 7529 22 23 8A         ld (Stack_snapshot_disparos),hl
 318+ 752C
 319+ 752C              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 320+ 752C
 321+ 752C              ;   El álbum_2 contiene datos?
 322+ 752C
 323+ 752C 21 1A 73     2 ld hl,Album_de_fotos_disparos_2+1
 324+ 752F 7E               ld a,(hl)
 325+ 7530 A7               and a
 326+ 7531 28 05            jr z,3F
 327+ 7533
 328+ 7533              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 329+ 7533
 330+ 7533 CD BC 75         call Album_2_a_Album_1_disparos
 331+ 7536 18 1A            jr 4F
 332+ 7538
 333+ 7538              ; El álbum_2 está vacío.
 334+ 7538              ; álbum_1 contiene datos?
 335+ 7538
 336+ 7538 21 91 72     3 ld hl,Album_de_fotos_disparos_1+1
 337+ 753B 7E               ld a,(hl)
 338+ 753C A7               and a
 339+ 753D 28 13            jr z,4F
 340+ 753F
 341+ 753F              ; Limpiamos Album_de_fotos_1.
 342+ 753F
 343+ 753F 21 90 72         ld hl,Album_de_fotos_disparos_1
 344+ 7542 36 00            ld (hl),0
 345+ 7544 11 91 72         ld de,Album_de_fotos_disparos_1+1
 346+ 7547 01 83 00         ld bc,$83
 347+ 754A ED B0            ldir
 348+ 754C 21 90 72         ld hl,Album_de_fotos_disparos_1
 349+ 754F 22 27 8A         ld (Stack_snapshot_disparos_1),hl
 350+ 7552
 351+ 7552              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 352+ 7552
 353+ 7552              ;   El álbum_3 contiene datos?
 354+ 7552
 355+ 7552 21 9E 73     4 ld hl,Album_de_fotos_disparos_3+1
 356+ 7555 7E               ld a,(hl)
 357+ 7556 A7               and a
 358+ 7557 28 05            jr z,5F
 359+ 7559
 360+ 7559              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 361+ 7559
 362+ 7559 CD A1 75         call Album_3_a_Album_2_disparos
 363+ 755C 18 1A            jr 6F
 364+ 755E
 365+ 755E              ; El álbum_3 está vacío.
 366+ 755E              ; álbum_2 contiene datos?
 367+ 755E
 368+ 755E 21 1A 73     5 ld hl,Album_de_fotos_disparos_2+1
 369+ 7561 7E               ld a,(hl)
 370+ 7562 A7               and a
 371+ 7563 28 13            jr z,6F
 372+ 7565
 373+ 7565              ; Limpiamos Album_de_fotos_2.
 374+ 7565
 375+ 7565 21 19 73         ld hl,Album_de_fotos_disparos_2
 376+ 7568 36 00            ld (hl),0
 377+ 756A 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 378+ 756D 01 83 00         ld bc,$83
 379+ 7570 ED B0            ldir
 380+ 7572 21 19 73         ld hl,Album_de_fotos_disparos_2
 381+ 7575 22 2B 8A         ld (Stack_snapshot_disparos_2),hl
 382+ 7578
 383+ 7578 C9           6 ret
 384+ 7579
 385+ 7579              ; ----------------------------------------------
 386+ 7579              ;
 387+ 7579              ;   31/7/23
 388+ 7579              ;
 389+ 7579              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 390+ 7579              ;
 391+ 7579              ;   Para pasar datos de un album a otro:
 392+ 7579              ;
 393+ 7579              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 394+ 7579              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 395+ 7579              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 396+ 7579
 397+ 7579 C5           Trasbase_de_datos_disparos push bc
 398+ 757A A7               and a
 399+ 757B ED 42            sbc hl,bc
 400+ 757D E5               push hl
 401+ 757E C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 402+ 757F E1               pop hl
 403+ 7580 ED B0            ldir
 404+ 7582 C9               ret
 405+ 7583
 406+ 7583              ; Paquetitos.
 407+ 7583
 408+ 7583 2A 2F 8A     Trasbase_3a2_disparos ld hl,(Stack_snapshot_disparos_3)
 409+ 7586 01 9D 73         ld bc,Album_de_fotos_disparos_3
 410+ 7589 CD 79 75         call Trasbase_de_datos_disparos
 411+ 758C C9               ret
 412+ 758D
 413+ 758D 2A 2B 8A     Trasbase_2a1_disparos ld hl,(Stack_snapshot_disparos_2)
 414+ 7590 01 19 73         ld bc,Album_de_fotos_disparos_2
 415+ 7593 CD 79 75         call Trasbase_de_datos_disparos
 416+ 7596 C9               ret
 417+ 7597
 418+ 7597 2A 27 8A     Trasbase_1a0_disparos ld hl,(Stack_snapshot_disparos_1)
 419+ 759A 01 90 72         ld bc,Album_de_fotos_disparos_1
 420+ 759D CD 79 75         call Trasbase_de_datos_disparos
 421+ 75A0 C9               ret
 422+ 75A1
 423+ 75A1              ; ----------------------------------------------
 424+ 75A1
 425+ 75A1              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 426+ 75A1              ; _ limpiamos (Album_de_fotos_3).
 427+ 75A1              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 428+ 75A1
 429+ 75A1              ;   Datos de álbum_3 a álbum_2.
 430+ 75A1
 431+ 75A1 11 19 73     Album_3_a_Album_2_disparos ld de,Album_de_fotos_disparos_2
 432+ 75A4 CD 83 75         call Trasbase_3a2_disparos
 433+ 75A7
 434+ 75A7              ;   Actualizamos (Stack_snapshot_2).
 435+ 75A7
 436+ 75A7 EB               ex de,hl
 437+ 75A8 22 2B 8A         ld (Stack_snapshot_disparos_2),hl
 438+ 75AB
 439+ 75AB              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 440+ 75AB
 441+ 75AB AF               xor a
 442+ 75AC 32 9D 73         ld (Album_de_fotos_disparos_3),a
 443+ 75AF 11 9E 73         ld de,Album_de_fotos_disparos_3+1
 444+ 75B2 CD 83 75         call Trasbase_3a2_disparos
 445+ 75B5
 446+ 75B5 21 9D 73         ld hl,Album_de_fotos_disparos_3
 447+ 75B8 22 2F 8A         ld (Stack_snapshot_disparos_3),hl
 448+ 75BB C9               ret
 449+ 75BC
 450+ 75BC 11 90 72     Album_2_a_Album_1_disparos ld de,Album_de_fotos_disparos_1
 451+ 75BF CD 8D 75         call Trasbase_2a1_disparos
 452+ 75C2
 453+ 75C2              ;   Actualizamos (Stack_snapshot_1).
 454+ 75C2
 455+ 75C2 EB               ex de,hl
 456+ 75C3 22 27 8A         ld (Stack_snapshot_disparos_1),hl
 457+ 75C6
 458+ 75C6              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 459+ 75C6
 460+ 75C6 AF               xor a
 461+ 75C7 32 19 73         ld (Album_de_fotos_disparos_2),a
 462+ 75CA 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 463+ 75CD CD 8D 75         call Trasbase_2a1_disparos
 464+ 75D0
 465+ 75D0 21 19 73         ld hl,Album_de_fotos_disparos_2
 466+ 75D3 22 2B 8A         ld (Stack_snapshot_disparos_2),hl
 467+ 75D6 C9               ret
 468+ 75D7
 469+ 75D7 11 0D 72     Album_1_a_Album_de_fotos_disparos ld de,Album_de_fotos_disparos
 470+ 75DA CD 97 75         call Trasbase_1a0_disparos
 471+ 75DD
 472+ 75DD              ;   Actualizamos (Stack_snapshot).
 473+ 75DD
 474+ 75DD EB               ex de,hl
 475+ 75DE 22 23 8A         ld (Stack_snapshot_disparos),hl
 476+ 75E1
 477+ 75E1               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 478+ 75E1
 479+ 75E1 AF               xor a
 480+ 75E2 32 90 72         ld (Album_de_fotos_disparos_1),a
 481+ 75E5 11 91 72         ld de,Album_de_fotos_disparos_1+1
 482+ 75E8 CD 97 75         call Trasbase_1a0_disparos
 483+ 75EB
 484+ 75EB 21 90 72         ld hl,Album_de_fotos_disparos_1
 485+ 75EE 22 27 8A         ld (Stack_snapshot_disparos_1),hl
 486+ 75F1 C9               ret
# file closed: Guarda_foto_registros.asm
1308  75F2
1309  75F2              	SAVESNA "Pruebas.sna", START
1310  75F2
1311  75F2
1312  75F2
1313  75F2
# file closed: Banco_de_pruebas.asm
