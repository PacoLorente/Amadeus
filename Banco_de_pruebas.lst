# file opened: Banco_de_Pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8284	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $828c	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82bf	;	($82c0 - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82f4
  60  82F4
  61  82F4 F5           	push af
  62  82F5 E5           	push hl
  63  82F6
  64  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82F6 21 33 8C     	ld hl,Ctrl_3
  66  82F9 CB 46        	bit 0,(hl)
  67  82FB 28 FE        	jr z,$
  68  82FD              ;! -------------------
  69  82FD
  70  82FD              ; Disparos.
  71  82FD
  72  82FD CD 93 A1     	call Pinta_disparos_Amadeus
  73  8300 CD 1C 9F     	call Pinta_disparos_Entidades
  74  8303
  75  8303              ; Shield -----------------------
  76  8303
  77  8303              Temporizacion_shield
  78  8303
  79  8303 21 5D 8C     	ld hl,Shield
  80  8306 7E           	ld a,(hl)
  81  8307 A7           	and a
  82  8308 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  830A
  84  830A 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  830B
  86  830B 23           	inc hl
  87  830C 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  830D
  89  830D 20 17        	jr nz,Incrementa_FRAMES
  90  830F
  91  830F              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  830F
  93  830F              Cambio_de_estado
  94  830F
  95  830F              ;	Indica cambio de estado.
  96  830F
  97  830F 23           	inc hl						;	Sitúa en (Shield_3).
  98  8310
  99  8310 CB 5E        	bit 3,(hl)
 100  8312 28 05        	jr z,2F
 101  8314
 102  8314 CD 2C 91     	call Inicia_Shield
 103  8317
 104  8317 18 0D        	jr Incrementa_FRAMES
 105  8319
 106  8319 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  831B
 108  831B              ;	Carga en (Shield_2) la siguiente temporización.
 109  831B
 110  831B 2A 5B 8C     	ld hl,(Puntero_datos_shield)
 111  831E 23           	inc hl
 112  831F 22 5B 8C     	ld (Puntero_datos_shield),hl
 113  8322 7E           	ld a,(hl)
 114  8323 32 5E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  8326
 116  8326              Incrementa_FRAMES
 117  8326
 118  8326 2A 78 5C     	ld hl,(FRAMES)
 119  8329 23           	inc hl
 120  832A 22 78 5C     	ld (FRAMES),hl
 121  832D
 122  832D 7C           	ld a,h
 123  832E B5           	or l
 124  832F 20 04        	jr nz,1F
 125  8331
 126  8331 21 7A 5C     	ld hl,FRAMES_3
 127  8334 34           	inc (hl)
 128  8335
 129  8335 D5           1 push de
 130  8336 C5           	push bc
 131  8337
 132  8337 CD 3C 91     	call Actualiza_pantalla
 133  833A
 134  833A C1           	pop bc
 135  833B D1           	pop de
 136  833C E1           	pop hl
 137  833D F1           	pop af
 138  833E
 139  833E FB           	ei
 140  833F
 141  833F C9           	ret
 142  8340
 143  8340              ; --------------------------------------------------------------------------------
 144  8340
 145  8340              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8340              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8340              ;
   3+ 8340              ;	17/02/23
   4+ 8340              ;
   5+ 8340              ;	Sprites e índices.
   6+ 8340
   7+ 8340              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 148  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D AE 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BAC 01 01
  18+ 8BAE
  19+ 8BAE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAF 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB7 01 02
  22+ 8BB9 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBD 01 02
  23+ 8BBF
# file closed: Niveles.asm
 149  8BBF
 150  8BBF              ; --------------------------------------------------------------------------------
 151  8BBF              ;
 152  8BBF              ; 12/05/24
 153  8BBF              ;
 154  8BBF              ; Parámetros DRAW.
 155  8BBF              ;
 156  8BBF
 157  8BBF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BBF
 159  8BBF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BC0              ;															- Patrón de movimiento.
 161  8BC0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BC1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BC2
 164  8BC2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BC3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BC3
 167  8BC3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BC3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BC3              ; Ejemplos.
 170  8BC3
 171  8BC3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BC3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BC3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BC3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BC3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BC3
 177  8BC3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BC4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BC4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BC4
 181  8BC4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BC6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BC6
 184  8BC6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC8
 186  8BC8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC8
 188  8BC8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BCA              ;														; _palabras que componen el "movimiento_masticado".
 190  8BCA
 191  8BCA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BCA
 193  8BCA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BCB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BCB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BCB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BCB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BCB
 199  8BCB 00           Ctrl_2 db 0
 200  8BCC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BCC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BCC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BCC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BCC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BCC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BCC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BCC              ;
 208  8BCC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BCC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BCC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BCC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BCC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BCC              ;														BIT 4, ???
 214  8BCC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BCC
 216  8BCC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BCD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BCD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BCD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BCD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BCD              ;
 222  8BCD              ; 														DESCRIPCIÖN:
 223  8BCD              ;
 224  8BCD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BCD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BCD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BCD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BCD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BCD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BCD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BCD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BCD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BCD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BCD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BCD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BCD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BCD              ;
 238  8BCD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BCD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BCD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BCD
 242  8BCD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BCD
 244  8BCD 00           Filas db 0												; Filas. [DRAW]
 245  8BCE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BCF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BD1 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BD3
 249  8BD3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BD3
 251  8BD3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BD4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BD4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BD4
 255  8BD4              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BD4
 257  8BD4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BD4              ;
 259  8BD4              ;	COLORES: 0 ..... NEGRO
 260  8BD4              ;    		 1 ..... AZUL
 261  8BD4              ; 			 2 ..... ROJO
 262  8BD4              ;			 3 ..... MAGENTA
 263  8BD4              ; 			 4 ..... VERDE
 264  8BD4              ; 			 5 ..... CIAN
 265  8BD4              ;			 6 ..... AMARILLO
 266  8BD4              ; 			 7 ..... BLANCO
 267  8BD4
 268  8BD4 00 00        Indice_Sprite_der defw 0
 269  8BD6 00 00        Indice_Sprite_izq defw 0
 270  8BD8 00 00        Puntero_DESPLZ_der defw 0
 271  8BDA 00 00        Puntero_DESPLZ_izq defw 0
 272  8BDC
 273  8BDC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BDE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BDF 00           Columnas db 0
 276  8BE0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BE2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BE2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BE3
 280  8BE3              ; variables de control general.
 281  8BE3
 282  8BE3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BE4
 284  8BE4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BE4
 286  8BE4              Perfiles_de_velocidad
 287  8BE4
 288  8BE4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BE5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BE6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE8
 293  8BE8              ; Contadores de 16 bits.
 294  8BE8
 295  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BEC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BEE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BF0
 300  8BF0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BF0
 302  8BF0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BF2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BF4 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BF6              ;
 306  8BF6              ;
 307  8BF6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF7 00           Incrementa_puntero_backup db 0
 311  8BF8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BFA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BFB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BFC              ;
 317  8BFC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BFC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BFC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BFC              ;
 321  8BFC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BFC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BFC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BFC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BFC              ;
 326  8BFC              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BFC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BFC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BFC
 330  8BFC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BFD
 332  8BFD              ;														DESCRIPCIÓN:
 333  8BFD              ;
 334  8BFD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BFD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BFD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BFD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BFD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BFD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BFD
 341  8BFD              ;														BIT 3, Recarga de nueva oleada.
 342  8BFD              ;														BIT 4, Recarga de nueva oleada.
 343  8BFD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BFD              ;														BIT 6, **** Frame completo.
 345  8BFD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BFD
 347  8BFD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BFF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BFF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BFF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BFF
 352  8BFF              ; Gestión de ENTIDADES y CAJAS.
 353  8BFF
 354  8BFF 00 00        Puntero_store_caja defw 0
 355  8C01 00 00        Puntero_restore_caja defw 0
 356  8C03 00 00        Indice_restore_caja defw 0
 357  8C05 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8C06 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C07 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C08
 361  8C08 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C0A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C0C              ;														; _ puntero (Indice_entidades).
 364  8C0C
 365  8C0C              ;---------------------------------------------------------------------------------------------------------------
 366  8C0C              ;
 367  8C0C              ;	13/10/24
 368  8C0C              ;
 369  8C0C              ;	Álbumes.
 370  8C0C
 371  8C0C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C0E              ;														; _variable para almacenar lo posición del puntero_
 373  8C0E              ; 														; _de pila, SP.
 374  8C0E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C10              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C10
 377  8C10              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C10
 379  8C10 00 00        Album_de_pintado defw 0
 380  8C12 00 00        Album_de_borrado defw 0
 381  8C14 00 00        Album_de_pintado_Amadeus defw 0
 382  8C16 00 00        Album_de_borrado_Amadeus defw 0
 383  8C18
 384  8C18 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C1A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C1C
 387  8C1C 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C1E 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C20
 390  8C20
 391  8C20 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C22 00           Num_de_bytes_album_de_disparos db 0
 393  8C23
 394  8C23 07           Numero_de_disparos_de_entidades db 7
 395  8C24
 396  8C24 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 397  8C25 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 398  8C26
 399  8C26 00 00        Techo_Scanlines_album defw 0
 400  8C28 00 00        Techo_Scanlines_album_2 defw 0
 401  8C2A 00           Switch db 0
 402  8C2B 00 00        Techo defw 0
 403  8C2D 00 00        Scanlines_album_SP defw 0
 404  8C2F 00 89        India_SP defw Tabla_de_pintado
 405  8C31 03 89        India_2_SP defw Tabla_de_pintado+3
 406  8C33
 407  8C33 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 408  8C34              ;
 409  8C34              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 410  8C34              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 411  8C34              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 412  8C34              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 413  8C34              ;																Habilita el borrado/pintado de sprites.
 414  8C34              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 415  8C34              ;																_ a la baja.
 416  8C34              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 417  8C34              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 418  8C34              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 419  8C34              ; 																_ el último frame de la explosión de nuestra nave.
 420  8C34              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 421  8C34              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 422  8C34
 423  8C34 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 424  8C35              ;
 425  8C35              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 426  8C35              ;
 427  8C35              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 428  8C35              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 429  8C35              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 430  8C35              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 431  8C35              ;
 432  8C35              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 433  8C35              ;															_ masticados ya generados.
 434  8C35              ;
 435  8C35              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 436  8C35              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 437  8C35              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 438  8C35              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 439  8C35
 440  8C35 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 441  8C36
 442  8C36
 443  8C36              ; Gestión de Disparos.
 444  8C36
 445  8C36 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 446  8C38 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 447  8C3A 00           Impacto2 db 0											; Byte de control de impactos.
 448  8C3B
 449  8C3B              ;
 450  8C3B              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 451  8C3B              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 452  8C3B              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 453  8C3B              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 454  8C3B
 455  8C3B
 456  8C3B
 457  8C3B
 458  8C3B
 459  8C3B
 460  8C3B
 461  8C3B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 462  8C3D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 463  8C3D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 464  8C3D
 465  8C3D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 466  8C3F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 467  8C3F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 468  8C42              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 469  8C42 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 470  8C45              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 471  8C45
 472  8C45              ;---------------------------------------------------------------------------------------------------------------
 473  8C45
 474  8C45              ; Relojes y temporizaciones.
 475  8C45
 476  8C45 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 477  8C46 05           Clock_explosion_Amadeus db 5
 478  8C47 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 479  8C48
 480  8C48 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 481  8C4A F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 482  8C4C 00           Numero_rnd_disparos db 0
 483  8C4D
 484  8C4D 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 485  8C4F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 486  8C50              ;														; Repite la oleada de entidades.
 487  8C50 A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 488  8C51 A0           CLOCK_disparos_de_entidades db $a0
 489  8C52
 490  8C52              ;---------------------------------------------------------------------------------------------------------------
 491  8C52
 492  8C52              ; Gestión de NIVELES.
 493  8C52
 494  8C52 00           Nivel db 0												; Nivel actual del juego.
 495  8C53 00 00        Puntero_indice_NIVELES defw 0
 496  8C55 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 497  8C57              ; 														; _ que definen el NIVEL.
 498  8C57
 499  8C57              ; ---------------------------------------------------------------------------------------------------------------
 500  8C57
 501  8C57              ; Temporizaciones Shield.
 502  8C57
 503  8C57 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 504  8C5B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 505  8C5D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 506  8C5E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 507  8C5F 00           Shield_3 db 0
 508  8C60
 509  8C60 06           Lives db 6
 510  8C61
 511  8C61              ; 	INICIO  *************************************************************************************************************************************************************************
 512  8C61              ;
 513  8C61              ;	5/1/24
 514  8C61
 515  8C61              START
 516  8C61
 517  8C61 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 518  8C64 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 519  8C66 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 520  8C68 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 521  8C6A F3           	DI
 522  8C6B
 523  8C6B              ; Limpiamos pantalla.
 524  8C6B
 525  8C6B 3E 07        	ld a,%00000111
 526  8C6D CD C9 94     	call Cls
 527  8C70 CD 21 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 528  8C73
 529  8C73              ; INICIALIZACIÓN.
 530  8C73
 531  8C73 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 532  8C75 CD 6E 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 533  8C78
 534  8C78 CD B6 8E     	call Extrae_numero_aleatorio_y_avanza
 535  8C7B
 536  8C7B 6F           	ld l,a
 537  8C7C 26 00        	ld h,0
 538  8C7E 22 4D 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 539  8C81
 540  8C81              ;	Inicializa 1er Nivel.
 541  8C81
 542  8C81 21 9B 8B     	ld hl,Indice_de_niveles
 543  8C84 22 53 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 544  8C87 CD 9E 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 545  8C8A              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 546  8C8A              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 547  8C8A              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 548  8C8A
 549  8C8A              ;	Inicia los álbumes de líneas.
 550  8C8A
 551  8C8A CD 6F 90     	call Inicia_albumes_de_lineas
 552  8C8D              ;
 553  8C8D CD 7F 90     	call Inicia_albumes_de_lineas_Amadeus
 554  8C90 CD 8C 90     	call Inicia_albumes_de_disparos
 555  8C93
 556  8C93 CD E3 92     4 call Inicia_Entidades
 557  8C96 CD 46 93     	call Inicia_Amadeus
 558  8C99
 559  8C99              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 560  8C99              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 561  8C99              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 562  8C99
 563  8C99 11 74 89     	ld de,Amadeus_BOX
 564  8C9C CD 99 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 565  8C9F CD 89 93     	call Limpiamos_bandeja_DRAW
 566  8CA2
 567  8CA2              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 568  8CA2
 569  8CA2 06 3C        	ld b,60
 570  8CA4 CD 6F 9D     2 call Amadeus_a_izquierda
 571  8CA7 10 FB        	djnz 2B
 572  8CA9
 573  8CA9 CD 4D 90     	call Genera_datos_de_impresion_Amadeus
 574  8CAC
 575  8CAC              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 576  8CAC
 577  8CAC CD A8 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 578  8CAF
 579  8CAF CD 2C 91     	call Inicia_Shield
 580  8CB2
 581  8CB2 2A 2D 8C     6 ld hl,(Scanlines_album_SP)
 582  8CB5 22 26 8C     	ld (Techo_Scanlines_album),hl
 583  8CB8
 584  8CB8 2A 12 8C     	ld hl,(Album_de_borrado)
 585  8CBB 22 2D 8C     	ld (Scanlines_album_SP),hl
 586  8CBE
 587  8CBE 21 00 89     	ld hl,Tabla_de_pintado
 588  8CC1 22 2F 8C     	ld (India_SP),hl
 589  8CC4
 590  8CC4 21 33 8C     	ld hl,Ctrl_3
 591  8CC7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 592  8CC9 CB D6        	set 2,(hl)
 593  8CCB CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 594  8CCD
 595  8CCD FB           	ei 													; Ha de apuntar a $5c3a.
 596  8CCE
 597  8CCE 76           	halt
 598  8CCF
 599  8CCF              ; ------------------------------------
 600  8CCF
 601  8CCF              Main
 602  8CCF              ;
 603  8CCF              ; 20/09/24
 604  8CCF
 605  8CCF
 606  8CCF 21 35 8C         ld hl,Ctrl_5
 607  8CD2 CB 56            bit 2,(hl)
 608  8CD4 F3               di
 609  8CD5 20 FE            jr nz,$
 610  8CD7 FB               ei
 611  8CD8
 612  8CD8
 613  8CD8              ; Gestión de disparos.
 614  8CD8
 615  8CD8 CD 91 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 616  8CDB              ;	call Motor_de_disparos_entidades
 617  8CDB CD 3F A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 618  8CDE
 619  8CDE
 620  8CDE
 621  8CDE
 622  8CDE
 623  8CDE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 624  8CDE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 625  8CDE              ; Este hecho lo indica el bit2 de (Impacto2).
 626  8CDE
 627  8CDE CD DC A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 628  8CE1
 629  8CE1              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 630  8CE1
 631  8CE1 21 51 8C     	ld hl,CLOCK_disparos_de_entidades
 632  8CE4 35           	dec (hl)
 633  8CE5 CC DA 8D     	call z,Autoriza_disparo_de_entidades
 634  8CE8
 635  8CE8 2A 4D 8C     	ld hl,(Clock_next_entity)
 636  8CEB ED 4B 78 5C  	ld bc,(FRAMES)
 637  8CEF A7           	and a
 638  8CF0 ED 42        	sbc hl,bc
 639  8CF2 20 16        	jr nz,1F
 640  8CF4
 641  8CF4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 642  8CF4              ; _ (Clock_next_entity) para la siguiente entidad.
 643  8CF4
 644  8CF4 3A 06 8C     	ld a,(Numero_parcial_de_entidades)
 645  8CF7 47           	ld b,a
 646  8CF8 3A 07 8C     	ld a,(Entidades_en_curso)
 647  8CFB B8           	cp b
 648  8CFC 28 0C        	jr z,1F
 649  8CFE 30 0A        	jr nc,1F
 650  8D00
 651  8D00 3C           	inc a
 652  8D01 32 07 8C     	ld (Entidades_en_curso),a
 653  8D04
 654  8D04              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 655  8D04
 656  8D04 CD B6 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 657  8D07 CD D2 8E     	call Define_Clock_next_entity
 658  8D0A
 659  8D0A 3A 07 8C     1 ld a,(Entidades_en_curso)
 660  8D0D A7           	and a
 661  8D0E CA 88 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 662  8D11 47           	ld b,a												; No hay entidades que gestionar.
 663  8D12
 664  8D12              ; ( Código que ejecutamos con cada entidad: ).
 665  8D12
 666  8D12              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 667  8D12              ;
 668  8D12              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 669  8D12
 670  8D12 21 00 89     	ld hl,Tabla_de_pintado
 671  8D15 22 2F 8C     	ld (India_SP),hl
 672  8D18
 673  8D18 21 33 8C     	ld hl,Ctrl_3
 674  8D1B CB D6        	set 2,(hl)
 675  8D1D CD 66 8E     	call Change
 676  8D20
 677  8D20 C5           2 push bc 												; Nº de entidades en curso.
 678  8D21
 679  8D21 CD F9 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 680  8D24 ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 681  8D28
 682  8D28              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 683  8D28
 684  8D28              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 685  8D28              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 686  8D28
 687  8D28 3A 3A 8C     	ld a,(Impacto2)
 688  8D2B CB 5F        	bit 3,a
 689  8D2D C4 D5 A0     	call nz,Compara_con_coordenadas_de_disparo
 690  8D30
 691  8D30 3A C3 8B     	ld a,(Impacto)
 692  8D33 CB 4F        	bit 1,a
 693  8D35 C4 09 92     	call nz,Genera_explosion
 694  8D38 20 31        	jr nz,Gestiona_siguiente_entidad
 695  8D3A
 696  8D3A 3A C3 8B     	ld a,(Impacto)
 697  8D3D A7           	and a
 698  8D3E 28 0C        	jr z,3F
 699  8D40
 700  8D40              ; IMPACTO en entidad por colisión con Amadeus.
 701  8D40
 702  8D40              ; 5/7/24
 703  8D40              ; Nota importante:
 704  8D40              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 705  8D40              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 706  8D40              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 707  8D40
 708  8D40 3A 78 89     	ld a,(Impacto_Amadeus)
 709  8D43 A7           	and a
 710  8D44 C4 09 92     	call nz,Genera_explosion
 711  8D47 20 22        	jr nz,Gestiona_siguiente_entidad
 712  8D49
 713  8D49              ; Falsa colisión !!!
 714  8D49
 715  8D49 32 C3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 716  8D4C
 717  8D4C              ; -------------------------------------------
 718  8D4C
 719  8D4C CD 16 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 720  8D4F CD 46 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 721  8D52 CD 06 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 722  8D55 CD 09 95     	call Genera_datos_de_impresion
 723  8D58 CD AC 93     	call Decrementa_Contador_de_mov_masticados
 724  8D5B
 725  8D5B              ; -------------------------------------------
 726  8D5B
 727  8D5B              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 728  8D5B
 729  8D5B 2A C4 8B     	ld hl,(Puntero_de_impresion)
 730  8D5E CD DD 94     	call Genera_coordenadas
 731  8D61
 732  8D61              ; TODO: Generamos disparo ???
 733  8D61
 734  8D61 3A 25 8C     	ld a,(Permiso_de_disparo_Entidades)
 735  8D64 A7           	and a
 736  8D65 C4 EF 8D     	call nz,Entidad_genera_disparo_si_procede
 737  8D68
 738  8D68 CD 5A A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 739  8D6B
 740  8D6B              Gestiona_siguiente_entidad
 741  8D6B
 742  8D6B CD 7E 93      	call Store_Restore_cajas
 743  8D6E C1           	pop bc
 744  8D6F 10 AF        	djnz 2B
 745  8D71
 746  8D71              ; Hemos gestionado todas las entidades.
 747  8D71              ; ----- ----- -----
 748  8D71
 749  8D71 CD 2A 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 750  8D74 CD 41 8F     	call Ordena_tabla_de_impresion
 751  8D77 CD A8 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 752  8D7A
 753  8D7A CD E7 8E     	call Borra_diferencia
 754  8D7D
 755  8D7D 3A 33 8C     	ld a,(Ctrl_3)
 756  8D80 CB 5F        	bit 3,a
 757  8D82 20 04        	jr nz,Gestion_de_Amadeus
 758  8D84
 759  8D84 EB           	ex de,hl
 760  8D85 71           	ld (hl),c
 761  8D86 2C           	inc l
 762  8D87 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 763  8D88
 764  8D88              ;! GESTIONA AMADEUS !!!!!!!!!!
 765  8D88
 766  8D88              Gestion_de_Amadeus
 767  8D88
 768  8D88 21 33 8C     	ld hl,Ctrl_3
 769  8D8B CB 76        	bit 6,(hl)
 770  8D8D 28 13        	jr z,Amadeus_vivo
 771  8D8F
 772  8D8F              ; Amadeus ha sido destruido.
 773  8D8F              ; Decrementa (Temp_new_live).
 774  8D8F
 775  8D8F 21 47 8C     	ld hl,Temp_new_live
 776  8D92 35           	dec (hl)
 777  8D93 20 26        	jr nz,End_frame
 778  8D95
 779  8D95              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 780  8D95
 781  8D95 21 60 8C     	ld hl,Lives
 782  8D98 35           	dec (hl)
 783  8D99
 784  8D99              ;! Fin del juego
 785  8D99
 786  8D99 F3           	di
 787  8D9A 28 FE        	jr z,$
 788  8D9C FB           	ei
 789  8D9D
 790  8D9D              ; Nueva nave.
 791  8D9D
 792  8D9D CD 0C 8E     	call Reinicia_Amadeus
 793  8DA0 18 19        	jr End_frame
 794  8DA2
 795  8DA2              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 796  8DA2
 797  8DA2              Amadeus_vivo
 798  8DA2
 799  8DA2 3A 78 89     	ld a,(Impacto_Amadeus)
 800  8DA5 A7           	and a
 801  8DA6 C4 39 92     	call nz, Genera_explosion_Amadeus
 802  8DA9 20 10        	jr nz, End_frame
 803  8DAB
 804  8DAB CD E6 91     	call Teclado
 805  8DAE
 806  8DAE 21 33 8C     	ld hl,Ctrl_3
 807  8DB1 CB 6E        	bit 5,(hl)
 808  8DB3 28 06        	jr z,End_frame
 809  8DB5
 810  8DB5              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 811  8DB5
 812  8DB5 CD 81 8E     	call Change_Amadeus
 813  8DB8 CD 4D 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 814  8DBB
 815  8DBB              End_frame
 816  8DBB
 817  8DBB              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 818  8DBB              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 819  8DBB
 820  8DBB CD F3 9F     	call Genera_datos_de_impresion_disparos_Entidades
 821  8DBE CD C5 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 822  8DC1 CD 1A A1     	call Calcula_bytes_pintado_disparos
 823  8DC4              ;	call Limpia_album_de_pintado_disparos_entidades
 824  8DC4
 825  8DC4              ; ------------ ------------- --------------
 826  8DC4
 827  8DC4 2A 12 8C     	ld hl,(Album_de_borrado)
 828  8DC7 22 2D 8C     	ld (Scanlines_album_SP),hl
 829  8DCA
 830  8DCA 21 33 8C     	ld hl,Ctrl_3
 831  8DCD CB C6        	set 0,(hl) 											; Indica Frame completo.
 832  8DCF CB 9E        	res 3,(hl)
 833  8DD1 CB A6        	res 4,(hl)
 834  8DD3
 835  8DD3 AF           	xor a
 836  8DD4 D3 FE        	out ($fe),a
 837  8DD6
 838  8DD6 76           	halt
 839  8DD7
 840  8DD7              ; ----------------------------------------
 841  8DD7
 842  8DD7              ;	ld a,(Ctrl_1) 										; Existe Loop?
 843  8DD7              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 844  8DD7 CA CF 8C     	jp z,Main
 845  8DDA
 846  8DDA              ;------------------------------------------
 847  8DDA              ;
 848  8DDA              ;	2/10/24
 849  8DDA
 850  8DDA              Autoriza_disparo_de_entidades
 851  8DDA
 852  8DDA 3E 01        	ld a,1
 853  8DDC 32 25 8C     	ld (Permiso_de_disparo_Entidades),a
 854  8DDF
 855  8DDF 3A 50 8C     	ld a,(Repone_CLOCK_disparos)
 856  8DE2 FE 19        	cp 25
 857  8DE4 38 02        	jr c,1F
 858  8DE6
 859  8DE6 D6 05        	sub 5
 860  8DE8
 861  8DE8 32 50 8C     1 ld (Repone_CLOCK_disparos),a
 862  8DEB 32 51 8C     	ld (CLOCK_disparos_de_entidades),a
 863  8DEE
 864  8DEE C9           	ret
 865  8DEF
 866  8DEF              ;------------------------------------------
 867  8DEF              ;
 868  8DEF              ;	14/09/24
 869  8DEF              ;
 870  8DEF              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 871  8DEF
 872  8DEF              Entidad_genera_disparo_si_procede
 873  8DEF
 874  8DEF 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 875  8DF2 CB 06        	rlc (hl)
 876  8DF4
 877  8DF4 DC 4B A0     	call c,Genera_disparo_de_entidad_maldosa
 878  8DF7
 879  8DF7 C9           	ret
 880  8DF8
 881  8DF8              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 882  8DF8              ;
 883  8DF8              ;	30/09/24
 884  8DF8
 885  8DF8              Actuaiza_sp_de_disparos_de_entidades
 886  8DF8
 887  8DF8 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 888  8DFB 23           	inc hl
 889  8DFC 22 4A 8C     	ld (Puntero_num_aleatorios_disparos),hl
 890  8DFF
 891  8DFF 11 FD 88     	ld de,Numeros_aleatorios+7
 892  8E02 7B           	ld a,e
 893  8E03 95           	sub l
 894  8E04 C0           	ret nz
 895  8E05
 896  8E05 21 F6 88     1 ld hl,Numeros_aleatorios
 897  8E08 22 4A 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 898  8E0B C9           	ret
 899  8E0C
 900  8E0C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 901  8E0C              ;
 902  8E0C              ;	24/07/24
 903  8E0C
 904  8E0C              Reinicia_Amadeus
 905  8E0C
 906  8E0C              ;	Reinicia posición y estado.
 907  8E0C
 908  8E0C 21 CF 50     	ld hl,$50cf
 909  8E0F 22 79 89     	ld (p.imp.amadeus),hl
 910  8E12 21 F0 E0     	ld hl,$e0f0
 911  8E15 22 7B 89     	ld (Pamm_Amadeus),hl
 912  8E18 21 3D 00     	ld hl,$003d
 913  8E1B 22 7D 89     	ld (Comm_Amadeus),hl
 914  8E1E
 915  8E1E              ;	limpiamos el álbum de borrado.
 916  8E1E
 917  8E1E 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
 918  8E21
 919  8E21 AF           	xor a
 920  8E22 77           	ld (hl),a
 921  8E23
 922  8E23 E5           	push hl
 923  8E24 D1           	pop de
 924  8E25 13           	inc de
 925  8E26
 926  8E26 01 23 00     	ld bc,35
 927  8E29 ED B0        	ldir
 928  8E2B
 929  8E2B CD 4D 90     	call Genera_datos_de_impresion_Amadeus
 930  8E2E
 931  8E2E              ;	Reinicia temporizaciones.
 932  8E2E
 933  8E2E CD 2C 91     	call Inicia_Shield
 934  8E31
 935  8E31 3E 5A        	ld a,90
 936  8E33 32 5D 8C     	ld (Shield),a
 937  8E36
 938  8E36 3E 64        	ld a,100
 939  8E38 32 47 8C     	ld (Temp_new_live),a
 940  8E3B
 941  8E3B              ; 	Restauramos el FLAG: Amadeus vivo.
 942  8E3B
 943  8E3B 21 33 8C     	ld hl,Ctrl_3
 944  8E3E CB B6        	res 6,(hl)
 945  8E40
 946  8E40              ;	Fuerza la impresión de la nave en el siguiente frame.
 947  8E40
 948  8E40 21 33 8C      	ld hl,Ctrl_3
 949  8E43 CB EE        	set 5,(hl)
 950  8E45
 951  8E45 C9           	ret
 952  8E46
 953  8E46              ; --------------------------------------------------------------------------------------------------------------
 954  8E46              ;
 955  8E46              ;	12/05/24
 956  8E46
 957  8E46 3A CA 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 958  8E49 CB 27        	sla a
 959  8E4B 32 CA 8B     	ld (Velocidad),a
 960  8E4E E6 10        	and $10
 961  8E50 C8           	ret z
 962  8E51
 963  8E51              ; Restaura (Velocidad) a razón del nº de vueltas.
 964  8E51
 965  8E51 3A C2 8B     	ld a,(Contador_de_vueltas)
 966  8E54 CB 2F        	sra a
 967  8E56 CB 2F        	sra a
 968  8E58 32 CA 8B     	ld (Velocidad),a
 969  8E5B
 970  8E5B 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 971  8E5E 23           	inc hl
 972  8E5F 23           	inc hl
 973  8E60 23           	inc hl
 974  8E61 23           	inc hl
 975  8E62 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 976  8E65
 977  8E65 C9           	ret
 978  8E66
 979  8E66              ; --------------------------------------------------------------------------------------------------------------
 980  8E66              ;
 981  8E66              ;	25/08/24
 982  8E66
 983  8E66              Change
 984  8E66
 985  8E66 3A 2A 8C     	ld a,(Switch)
 986  8E69 EE 01        	xor 1
 987  8E6B 32 2A 8C     	ld (Switch),a
 988  8E6E 2A 10 8C     	ld hl,(Album_de_pintado)
 989  8E71 ED 5B 12 8C  	ld de,(Album_de_borrado)
 990  8E75 EB           	ex de,hl
 991  8E76 22 10 8C     	ld (Album_de_pintado),hl
 992  8E79 22 2D 8C     	ld (Scanlines_album_SP),hl
 993  8E7C ED 53 12 8C  	ld (Album_de_borrado),de
 994  8E80 C9           	ret
 995  8E81
 996  8E81              Change_Amadeus
 997  8E81
 998  8E81 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
 999  8E84 ED 5B 16 8C  	ld de,(Album_de_borrado_Amadeus)
1000  8E88 EB           	ex de,hl
1001  8E89 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1002  8E8C ED 53 16 8C  	ld (Album_de_borrado_Amadeus),de
1003  8E90 C9           	ret
1004  8E91
1005  8E91              Change_Disparos
1006  8E91
1007  8E91              ; Álbumes de Amadeus.
1008  8E91
1009  8E91 2A 18 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1010  8E94 ED 5B 1A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1011  8E98 EB           	ex de,hl
1012  8E99 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1013  8E9C ED 53 1A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1014  8EA0 CD 0F A1     	call Limpia_album_de_pintado_disparos_Amadeus
1015  8EA3
1016  8EA3              ; Álbumes de entidades.
1017  8EA3
1018  8EA3 2A 1C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1019  8EA6 ED 5B 1E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1020  8EAA EB           	ex de,hl
1021  8EAB 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1022  8EAE ED 53 1E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1023  8EB2 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1024  8EB5
1025  8EB5              ;	xor a
1026  8EB5              ;	ld (Num_de_bytes_album_de_disparos),a
1027  8EB5
1028  8EB5 C9           	ret
1029  8EB6
1030  8EB6              ; ------------------------------------
1031  8EB6              ;
1032  8EB6              ; 1/05/24
1033  8EB6
1034  8EB6              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1035  8EB6              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1036  8EB6
1037  8EB6              ;	DESTRUYE: HL,DE,A
1038  8EB6              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1039  8EB6
1040  8EB6              ;	Variables implicadas: (RND_SP).
1041  8EB6
1042  8EB6              Extrae_numero_aleatorio_y_avanza
1043  8EB6
1044  8EB6 21 00 89     	ld hl,Tabla_de_pintado
1045  8EB9 EB           	ex de,hl
1046  8EBA 2A 48 8C     	ld hl,(RND_SP)
1047  8EBD EB           	ex de,hl
1048  8EBE A7           	and a
1049  8EBF ED 52        	sbc hl,de
1050  8EC1
1051  8EC1 2A 48 8C     	ld hl,(RND_SP)
1052  8EC4 20 06        	jr nz,1F
1053  8EC6
1054  8EC6              ; Sitúa HL al principio de la tabla de nº aleatorios.
1055  8EC6
1056  8EC6 21 F6 88     	ld hl,Numeros_aleatorios
1057  8EC9 22 48 8C     	ld (RND_SP),HL
1058  8ECC
1059  8ECC              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1060  8ECC
1061  8ECC 7E           1 ld a,(hl)
1062  8ECD 23           	inc hl
1063  8ECE 22 48 8C     	ld (RND_SP),hl
1064  8ED1 C9           	ret
1065  8ED2
1066  8ED2              ; ------------------------------------
1067  8ED2              ;
1068  8ED2              ; 1/05/24
1069  8ED2
1070  8ED2              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1071  8ED2              ; (1 a 4 segundos).
1072  8ED2              ; Actualizamos (Clock_next_entity) con A.
1073  8ED2
1074  8ED2              ;	DESTRUYE: A y B.
1075  8ED2              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1076  8ED2              ;			 Actualiza (Clock_next_entity) con A.
1077  8ED2
1078  8ED2              ;	Variables implicadas: (Clock_next_entity).
1079  8ED2
1080  8ED2              ; Notas:
1081  8ED2
1082  8ED2              ; 	$32 1 seg.
1083  8ED2              ; 	$64 2 seg.
1084  8ED2              ; 	$96 3 seg.
1085  8ED2              ; 	$c8 4 seg.
1086  8ED2              ; 	$fa 5 seg.
1087  8ED2
1088  8ED2              ; $ffff 1310,7 seg, 22 minutos.
1089  8ED2
1090  8ED2              ;	$0100  5 seg. aproximadamente.
1091  8ED2              ;	$0200 10 seg. aproximadamente.
1092  8ED2              ;	$0300 15 seg. aproximadamente.
1093  8ED2              ;	$0400 20 seg. aproximadamente.
1094  8ED2              ;	$0500 25 seg. aproximadamente.
1095  8ED2              ;	$0600 30 seg. aproximadamente.
1096  8ED2
1097  8ED2              Define_Clock_next_entity
1098  8ED2
1099  8ED2 FE 34        	cp $34
1100  8ED4 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1101  8ED6
1102  8ED6              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1103  8ED6
1104  8ED6 4F           3 ld c,a
1105  8ED7 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1106  8ED9 2A 78 5C     	ld hl,(FRAMES)
1107  8EDC A7           	and a
1108  8EDD ED 4A        	adc hl,bc
1109  8EDF 22 4D 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1110  8EE2 C9           	ret
1111  8EE3
1112  8EE3 3E 34        1 ld a,$34
1113  8EE5 18 EF        	jr 3B
1114  8EE7
1115  8EE7              ; ------------------------------------
1116  8EE7              ;
1117  8EE7              ; 18/03/24
1118  8EE7
1119  8EE7              Borra_diferencia
1120  8EE7
1121  8EE7 ED 4B 2D 8C  	ld bc,(Scanlines_album_SP)
1122  8EEB
1123  8EEB 3A 2A 8C     	ld a,(Switch)
1124  8EEE A7           	and a
1125  8EEF 28 08        	jr z,2F
1126  8EF1
1127  8EF1 2A 28 8C     	ld hl,(Techo_Scanlines_album_2)
1128  8EF4 11 28 8C     	ld de,Techo_Scanlines_album_2
1129  8EF7 18 06        	jr 3F
1130  8EF9
1131  8EF9 2A 26 8C     2 ld hl,(Techo_Scanlines_album)
1132  8EFC 11 26 8C     	ld de,Techo_Scanlines_album
1133  8EFF
1134  8EFF              ; Diferencia.
1135  8EFF
1136  8EFF ED 42        3 sbc hl,bc
1137  8F01
1138  8F01 C8           	ret z
1139  8F02 D8           	ret c
1140  8F03
1141  8F03              ; Nuevo techo, (más bajo que el anterior).
1142  8F03              ; Fijamos nuevo techo y borramos bytes sobrantes.
1143  8F03
1144  8F03 EB           	ex de,hl
1145  8F04
1146  8F04 71           	ld (hl),c
1147  8F05 2C           	inc l
1148  8F06 70           	ld (hl),b
1149  8F07
1150  8F07 AF           	xor a
1151  8F08 43           	ld b,e
1152  8F09
1153  8F09 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1154  8F0C
1155  8F0C 77           1 ld (hl),a
1156  8F0D 23           	inc hl
1157  8F0E 10 FC        	djnz 1B
1158  8F10
1159  8F10              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1160  8F10
1161  8F10 21 33 8C     	ld hl,Ctrl_3
1162  8F13 CB DE        	set 3,(hl)
1163  8F15
1164  8F15 C9           	ret
1165  8F16
1166  8F16              ; --------------------------------------------------------------------------------------------------------------
1167  8F16              ;
1168  8F16              ;	26/3/24
1169  8F16
1170  8F16              Recauda_informacion_de_entidad_en_curso
1171  8F16
1172  8F16              ; Almacena la Coordenada Y de la entidad en curso.
1173  8F16
1174  8F16              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1175  8F16
1176  8F16 3A C1 8B     	ld a,(Coordenada_y)
1177  8F19 2A 2F 8C     	ld hl,(India_SP)
1178  8F1C 77           	ld (hl),a
1179  8F1D 2C           	inc l
1180  8F1E
1181  8F1E              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1182  8F1E
1183  8F1E ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
1184  8F22
1185  8F22 73           	ld (hl),e
1186  8F23 2C           	inc l
1187  8F24 72           	ld (hl),d
1188  8F25 2C           	inc l
1189  8F26
1190  8F26 22 2F 8C     	ld (India_SP),hl
1191  8F29
1192  8F29 C9           	ret
1193  8F2A
1194  8F2A              ; --------------------------------------------------------------------------------------------------------------
1195  8F2A              ;
1196  8F2A              ;	27/03/24
1197  8F2A              ;
1198  8F2A
1199  8F2A              Inicializa_India_y_limpia_Tabla_de_impresion
1200  8F2A
1201  8F2A 2A 2F 8C     	ld hl,(India_SP)
1202  8F2D 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1203  8F30
1204  8F30 79           	ld a,c
1205  8F31 95           	sub l
1206  8F32 28 06        	jr z,2F
1207  8F34 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1208  8F35              ;														; _ y pasamos a inicializar (India_SP).
1209  8F35 AF           	xor a
1210  8F36
1211  8F36 77           1 ld (hl),a
1212  8F37 2C           	inc l
1213  8F38 10 FC        	djnz 1B												; Limpia Tabla.
1214  8F3A
1215  8F3A 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1216  8F3D 22 2F 8C     	ld (India_SP),hl
1217  8F40
1218  8F40 C9           	ret
1219  8F41
1220  8F41              ; --------------------------------------------------------------------------------------------------------------
1221  8F41              ;
1222  8F41              ;	31/3/24
1223  8F41
1224  8F41              Ordena_tabla_de_impresion
1225  8F41
1226  8F41              ; 5794 T/states.
1227  8F41              ; 6278 T/states.
1228  8F41              ; 5310 T/states.
1229  8F41
1230  8F41              ; Inicializamos punteros (India_SP) e (India_2_SP).
1231  8F41              ; Inicializamos contador de comparaciones, [C].
1232  8F41              ; Cargamos los registros A y B para efectuar comparación.
1233  8F41
1234  8F41 FD 2E 00     	ld iyl,0
1235  8F44
1236  8F44 3A 07 8C     	ld a,(Entidades_en_curso)
1237  8F47 FE 04        	cp 4 	;	4
1238  8F49 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1239  8F4A
1240  8F4A 3D           	dec a
1241  8F4B 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1242  8F4C 51           	ld d,c 										; Copia de respaldo.
1243  8F4D
1244  8F4D 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1245  8F4E
1246  8F4E 21 03 89     	ld hl,Tabla_de_pintado+3
1247  8F51 46           	ld b,(hl)
1248  8F52 22 31 8C     	ld (India_2_SP),hl
1249  8F55
1250  8F55 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1251  8F56 DC 7E 8F     	call c, Avanza_India_2_SP
1252  8F59 CC 7E 8F     	call z, Avanza_India_2_SP
1253  8F5C
1254  8F5C FD 2D        	dec iyl
1255  8F5E 28 18        	jr z,2F
1256  8F60
1257  8F60
1258  8F60              ; --------------------------------------------------------------------------------------------------------------
1259  8F60              ;
1260  8F60              ;	7/4/24
1261  8F60
1262  8F60              Trueque
1263  8F60
1264  8F60              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1265  8F60              ;  			A contiene en nº de fila de (India_SP).
1266  8F60              ;			HL contiene (India_2_SP).
1267  8F60
1268  8F60 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1269  8F61 E5           	push hl										; Preservo (India_2_SP).
1270  8F62
1271  8F62 ED 5B 2F 8C  	ld de,(India_SP)
1272  8F66 EB           	ex de,hl
1273  8F67 70           	ld (hl),b
1274  8F68 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1275  8F69
1276  8F69 CD AA 8F     	call Intercambia_1_byte
1277  8F6C CD AA 8F     	call Intercambia_1_byte
1278  8F6F
1279  8F6F
1280  8F6F              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1281  8F6F              ; Recuperamos (India_2_SP) en HL.
1282  8F6F
1283  8F6F 2A 2F 8C     	ld hl,(India_SP)
1284  8F72 7E           	ld a,(hl)
1285  8F73
1286  8F73 E1           	pop hl
1287  8F74 D1           	pop de
1288  8F75
1289  8F75              ; --------------------------------------------------------------------------------------------------------------
1290  8F75
1291  8F75 CD 7E 8F     	call Avanza_India_2_SP
1292  8F78
1293  8F78 14           2 inc d
1294  8F79 15           	dec d
1295  8F7A C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1296  8F7B 18 D8        	jr 1B
1297  8F7D
1298  8F7D C9           	ret
1299  8F7E
1300  8F7E              ; ----- ----- ----- ----- -----
1301  8F7E
1302  8F7E              Avanza_India_2_SP
1303  8F7E
1304  8F7E 0D           	dec c
1305  8F7F 28 0A        	jr z,Avanza_punteros_indios
1306  8F81
1307  8F81 FD 2C        	inc iyl
1308  8F83
1309  8F83 2C           	inc l
1310  8F84 2C           	inc l
1311  8F85 2C           	inc l
1312  8F86
1313  8F86 46           	ld b,(hl)
1314  8F87 22 31 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1315  8F8A
1316  8F8A C9           	ret
1317  8F8B
1318  8F8B              ; ----- ----- ----- ----- -----
1319  8F8B
1320  8F8B              Avanza_punteros_indios
1321  8F8B
1322  8F8B 15           	dec d
1323  8F8C 28 15        	jr z,Prepara_salida
1324  8F8E
1325  8F8E 4A           	ld c,d
1326  8F8F
1327  8F8F 2A 2F 8C     	ld hl,(India_SP)
1328  8F92 2C           	inc l
1329  8F93 2C           	inc l
1330  8F94 2C           	inc l
1331  8F95 7E           	ld a,(hl)
1332  8F96 22 2F 8C     	ld (India_SP),hl
1333  8F99
1334  8F99 2C           	inc l
1335  8F9A 2C           	inc l
1336  8F9B 2C           	inc l
1337  8F9C 46           	ld b,(hl)
1338  8F9D 22 31 8C     	ld (India_2_SP),hl
1339  8FA0
1340  8FA0 FD 2C        	inc iyl
1341  8FA2
1342  8FA2 C9           	ret
1343  8FA3
1344  8FA3              Prepara_salida
1345  8FA3
1346  8FA3 21 00 89     	ld hl,Tabla_de_pintado
1347  8FA6 22 2F 8C     	ld (India_SP),hl
1348  8FA9 C9           	ret
1349  8FAA
1350  8FAA
1351  8FAA 2C           Intercambia_1_byte inc l
1352  8FAB 1C           	inc e
1353  8FAC 46           	ld b,(hl)
1354  8FAD 1A           	ld a,(de)
1355  8FAE EB           	ex de,hl
1356  8FAF 70           	ld (hl),b
1357  8FB0 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1358  8FB1 C9           	ret
1359  8FB2
1360  8FB2              ; -----------------------------------------------------------------------------------
1361  8FB2              ;
1362  8FB2              ;	20/01/24
1363  8FB2              ;
1364  8FB2              ;
1365  8FB2
1366  8FB2              Construye_movimientos_masticados_entidad
1367  8FB2
1368  8FB2 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1369  8FB5 E5           	push hl
1370  8FB6 CD F9 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1371  8FB9              ;															; _ el (Contador_de_mov_masticados).
1372  8FB9 CD C4 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1373  8FBC              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1374  8FBC CD F5 99     	call Recompone_posicion_inicio
1375  8FBF
1376  8FBF CD 25 97     1 call Draw
1377  8FC2 CD DE 8F     	call Guarda_movimiento_masticado
1378  8FC5
1379  8FC5 CD A2 9D     	call Movimiento
1380  8FC8
1381  8FC8 3A 33 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1382  8FCB CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1383  8FCD 28 F0        	jr z,1B
1384  8FCF
1385  8FCF              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1386  8FCF              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1387  8FCF
1388  8FCF E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1389  8FD0 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1390  8FD3
1391  8FD3              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1392  8FD3
1393  8FD3 CD 06 9F     	call Situa_en_contador_general_de_mov_masticados
1394  8FD6
1395  8FD6              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1396  8FD6              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1397  8FD6
1398  8FD6 ED 4B C8 8B  	ld bc,(Contador_de_mov_masticados)
1399  8FDA
1400  8FDA 71           	ld (hl),c
1401  8FDB 23           	inc hl
1402  8FDC 70           	ld (hl),b
1403  8FDD
1404  8FDD C9           	ret
1405  8FDE
1406  8FDE              ; -----------------------------------------------------------------------------------
1407  8FDE              ;
1408  8FDE              ;	28/12/23
1409  8FDE              ;
1410  8FDE              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1411  8FDE              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1412  8FDE
1413  8FDE              Guarda_movimiento_masticado
1414  8FDE
1415  8FDE ED 73 0C 8C  	ld (Stack),sp
1416  8FE2 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1417  8FE6
1418  8FE6 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1419  8FE8 FD E5            push iy 												; Pushea Puntero_objeto.
1420  8FEA
1421  8FEA ED 7B 0C 8C      ld sp,(Stack)
1422  8FEE
1423  8FEE 2A C8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1424  8FF1 23           	inc hl
1425  8FF2 22 C8 8B     	ld (Contador_de_mov_masticados),hl
1426  8FF5
1427  8FF5 CD F9 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1428  8FF8              ;															; _ el (Contador_de_mov_masticados).
1429  8FF8 C9               ret
1430  8FF9
1431  8FF9              ; --------------------------------------------------------------------------------------------------------------
1432  8FF9              ;
1433  8FF9              ;	12/1/24
1434  8FF9              ;
1435  8FF9              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1436  8FF9
1437  8FF9              Actualiza_Puntero_de_almacen_de_mov_masticados
1438  8FF9
1439  8FF9 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1440  8FFC 01 04 00     	ld bc,4
1441  8FFF A7           	and a
1442  9000 ED 4A        	adc hl,bc
1443  9002 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1444  9005 C9           	ret
1445  9006
1446  9006              ; --------------------------------------------------------------------------------------------------------------
1447  9006              ;
1448  9006              ;	24/03/24
1449  9006              ;
1450  9006              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1451  9006              ;
1452  9006              ;	IX contiene el puntero de impresión.
1453  9006              ;	DE contiene (Puntero_objeto).
1454  9006
1455  9006
1456  9006              Cargamos_registros_con_mov_masticado
1457  9006
1458  9006 ED 73 0C 8C  	ld (Stack),sp
1459  900A ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1460  900E
1461  900E D1           	pop de 															; DE contiene Puntero_objeto
1462  900F DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1463  9011
1464  9011 ED 73 C6 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1465  9015 ED 7B 0C 8C  	ld sp,(Stack)
1466  9019
1467  9019 7B           	ld a,e
1468  901A 82           	add d															; Comprueba si ya no hay datos en el almacén.
1469  901B
1470  901B CC B4 93     	call z,Reinicia_entidad_maliciosa
1471  901E
1472  901E C9           	ret
1473  901F
1474  901F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1475  901F              ;
1476  901F              ;	22/7/24
1477  901F
1478  901F              Cargamos_registros_con_explosion
1479  901F
1480  901F
1481  901F 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1482  9022 CD BE 90     	call Extrae_address
1483  9025
1484  9025 5D           	ld e,l
1485  9026 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1486  9027
1487  9027 DD 2A C4 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1488  902B
1489  902B C9           	ret
1490  902C
1491  902C
1492  902C              Cargamos_registros_con_explosion_Amadeus
1493  902C
1494  902C 2A 7B 89     	ld hl,(Pamm_Amadeus)
1495  902F CD BE 90     	call Extrae_address
1496  9032
1497  9032 5D           	ld e,l
1498  9033 54           	ld d,h
1499  9034
1500  9034 DD 2A 79 89  	ld ix,(p.imp.amadeus)
1501  9038
1502  9038 C9           	ret
1503  9039
1504  9039              ; --------------------------------------------------------------------------------------------------------------
1505  9039              ;
1506  9039              ;	17/06/24
1507  9039              ;
1508  9039              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1509  9039              ;
1510  9039              ;	IX contiene el puntero de impresión.
1511  9039              ;	DE contiene (Puntero_objeto).
1512  9039
1513  9039
1514  9039              Cargamos_registros_con_mov_masticado_Amadeus
1515  9039
1516  9039 ED 73 0C 8C  	ld (Stack),sp
1517  903D ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1518  9041 D1           	pop de 															; DE contiene Puntero_objeto
1519  9042 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1520  9044 DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1521  9048 ED 7B 0C 8C  	ld sp,(Stack)
1522  904C C9           	ret
1523  904D
1524  904D              ; ---------------------------------------------------------------------------------------------------------------------
1525  904D              ;
1526  904D              ;	18/6/24
1527  904D              ;
1528  904D              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1529  904D
1530  904D              Genera_datos_de_impresion_Amadeus
1531  904D
1532  904D 3A 78 89     	ld a,(Impacto_Amadeus)
1533  9050 A7           	and a
1534  9051 20 03        	jr nz,1F
1535  9053
1536  9053              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1537  9053              ; _apuntando a la correspondiente explosión.
1538  9053
1539  9053 CD 39 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1540  9056
1541  9056 DD 7D        1 ld a,ixl
1542  9058 E6 1F        	and $1f
1543  905A 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1544  905D
1545  905D 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1546  9060 E5           	push hl
1547  9061
1548  9061 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1549  9064 22 2D 8C     	ld (Scanlines_album_SP),hl
1550  9067
1551  9067 CD 09 95     	call Genera_datos_de_impresion
1552  906A
1553  906A E1           	pop hl
1554  906B 22 2D 8C     	ld (Scanlines_album_SP),hl
1555  906E
1556  906E C9           	ret
1557  906F
1558  906F              ; ---------------------------------------------------------------------------------------------------------------------
1559  906F              ;
1560  906F              ;	13/03/24
1561  906F              ;
1562  906F              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1563  906F
1564  906F              Inicia_albumes_de_lineas
1565  906F
1566  906F 21 00 80     	ld hl,Scanlines_album
1567  9072 22 10 8C     	ld (Album_de_pintado),hl
1568  9075 22 2D 8C     	ld (Scanlines_album_SP),hl
1569  9078
1570  9078 21 1A 81     	ld hl,Scanlines_album_2
1571  907B 22 12 8C     	ld (Album_de_borrado),hl
1572  907E
1573  907E C9           	ret
1574  907F
1575  907F              Inicia_albumes_de_lineas_Amadeus
1576  907F
1577  907F 21 34 82     	ld hl,Amadeus_scanlines_album
1578  9082 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1579  9085 21 58 82     	ld hl,Amadeus_scanlines_album_2
1580  9088 22 16 8C     	ld (Album_de_borrado_Amadeus),hl
1581  908B
1582  908B C9           	ret
1583  908C
1584  908C              Inicia_albumes_de_disparos
1585  908C
1586  908C 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1587  908F 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1588  9092 21 84 82     	ld hl,Amadeus_disparos_scanlines_album_2
1589  9095 22 1A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1590  9098
1591  9098 21 8C 82     	ld hl,Entidades_disparos_scanlines_album
1592  909B 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1593  909E 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1594  90A1
1595  90A1 21 BF 82     	ld hl,Entidades_disparos_scanlines_album_2
1596  90A4 22 1E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1597  90A7
1598  90A7 C9           	ret
1599  90A8
1600  90A8              ; ---------------------------------------------------------------------------------------------------------------------
1601  90A8              ;
1602  90A8              ; 8/1/23
1603  90A8              ;
1604  90A8              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1605  90A8              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1606  90A8              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1607  90A8
1608  90A8              ; Destruye HL y DE !!!!!
1609  90A8
1610  90A8              Inicia_punteros_de_cajas
1611  90A8
1612  90A8 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1613  90AB CD BE 90         call Extrae_address
1614  90AE 22 FF 8B         ld (Puntero_store_caja),hl
1615  90B1 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1616  90B4 22 03 8C     	ld (Indice_restore_caja),hl
1617  90B7 CD BE 90     	call Extrae_address
1618  90BA 22 01 8C     	ld (Puntero_restore_caja),hl
1619  90BD C9               ret
1620  90BE
1621  90BE              ; *************************************************************************************************************************************************************
1622  90BE
1623  90BE              ;
1624  90BE              ; 20/10/22
1625  90BE              ;
1626  90BE              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1627  90BE              ;
1628  90BE              ; Destruye el puntero y DE !!!!!
1629  90BE
1630  90BE 5E           Extrae_address ld e,(hl)
1631  90BF 23           	inc hl
1632  90C0 56           	ld d,(hl)
1633  90C1 2B           	dec hl
1634  90C2 EB           	ex de,hl
1635  90C3 C9           	ret
1636  90C4
1637  90C4              ; *************************************************************************************************************************************************************
1638  90C4              ;
1639  90C4              ;	20/1/24
1640  90C4              ;
1641  90C4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1642  90C4              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1643  90C4              ;
1644  90C4              ;   Destruye HL y BC !!!!!,
1645  90C4              ;
1646  90C4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1647  90C4              ;					"0" ..... Izquierda.
1648  90C4
1649  90C4              Inicia_Puntero_objeto
1650  90C4
1651  90C4 3A DE 8B     	ld a,(Cuad_objeto)
1652  90C7 E6 01        	and 1
1653  90C9 F5           	push af
1654  90CA CC E6 90     	call z,Inicia_puntero_objeto_izq
1655  90CD F1           	pop af
1656  90CE C8           	ret z
1657  90CF CD D3 90     	call Inicia_puntero_objeto_der
1658  90D2 C9           	ret
1659  90D3
1660  90D3              ; Arrancamos desde la parte izquierda de la pantalla.
1661  90D3              ; Iniciamos (Indice_Sprite_der).
1662  90D3
1663  90D3 2A D4 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1664  90D6 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
1665  90D9 CD BE 90     	call Extrae_address
1666  90DC 22 D1 8B     	ld (Puntero_objeto),hl
1667  90DF
1668  90DF 2A D6 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1669  90E2 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1670  90E5 C9           	ret
1671  90E6
1672  90E6              ; Arrancamos desde la parte derecha de la pantalla.
1673  90E6              ; Iniciamos (Indice_Sprite_izq).
1674  90E6
1675  90E6 2A D6 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1676  90E9 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1677  90EC CD BE 90     	call Extrae_address
1678  90EF 22 D1 8B     	ld (Puntero_objeto),hl
1679  90F2
1680  90F2 2A D4 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1681  90F5 22 D8 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1682  90F8 C9           	ret
1683  90F9
1684  90F9              ; **************************************************************************************************
1685  90F9              ;
1686  90F9              ;	06/07/24
1687  90F9              ;
1688  90F9              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1689  90F9
1690  90F9              Restore_entidad
1691  90F9
1692  90F9 2A FF 8B     	ld hl,(Puntero_store_caja)
1693  90FC 7E           	ld a,(hl)
1694  90FD A7           	and a
1695  90FE CC 0C 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1696  9101 28 F6        	jr z,Restore_entidad
1697  9103
1698  9103 11 BF 8B     	ld de,Bandeja_DRAW
1699  9106 01 0C 00     	ld bc,12
1700  9109 ED B0        	ldir
1701  910B C9           	ret
1702  910C
1703  910C              ; **************************************************************************************************
1704  910C              ;
1705  910C              ;	08/05/23
1706  910C              ;
1707  910C              ;	Incrementamos los dos punteros de entidades. (+1).
1708  910C
1709  910C              Incrementa_punteros_de_cajas
1710  910C
1711  910C 2A 01 8C     	ld hl,(Puntero_restore_caja)
1712  910F 22 FF 8B     	ld (Puntero_store_caja),hl
1713  9112 2A 03 8C     	ld hl,(Indice_restore_caja)
1714  9115 23           	inc hl
1715  9116 23           	inc hl
1716  9117 22 03 8C     	ld (Indice_restore_caja),hl
1717  911A CD BE 90         call Extrae_address
1718  911D 22 01 8C         ld (Puntero_restore_caja),hl
1719  9120 C9               ret
1720  9121
1721  9121              ; -----------------------------------------------------------
1722  9121
1723  9121              ; Teclado.
1724  9121
1725  9121 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1726  9123 DB FE        	in a,($fe)
1727  9125 E6 01        	and $01
1728  9127 28 02        	jr z,1f
1729  9129 18 F6        	jr Pulsa_ENTER
1730  912B C9           1 ret
1731  912C
1732  912C              ; **************************************************************************************************
1733  912C              ;
1734  912C              ; Temporización.
1735  912C
1736  912C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1737  912C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1738  912C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1739  912C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1740  912C
1741  912C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1742  912C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1743  912C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1744  912C
1745  912C              ; A partir de $4f61 no hace falta DELAY.
1746  912C
1747  912C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1748  912C
1749  912C              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1750  912C              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1751  912C              ;	LD A,B
1752  912C              ;	AND A
1753  912C              ;	JR NZ,wait
1754  912C              ;	RET
1755  912C
1756  912C              ; ---------------------------------------------------------------------------------------------------------------
1757  912C              ;
1758  912C              ;	13/07/24
1759  912C              ;
1760  912C
1761  912C              Inicia_Shield
1762  912C
1763  912C 21 57 8C     	ld hl,Datos_Shield
1764  912F 22 5B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1765  9132
1766  9132 7E           	ld a,(hl)
1767  9133 32 5E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1768  9136
1769  9136 3E 01        	ld a,1
1770  9138 32 5F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1771  913B
1772  913B C9           	ret
1773  913C
1774  913C              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1775  913C              ;
1776  913C              ;	4/6/24
1777  913C              ;
1778  913C              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1779  913C              ;
1780  913C              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1781  913C              ;
1782  913C
1783  913C              Actualiza_pantalla
1784  913C
1785  913C 3E 02        	ld a,2
1786  913E D3 FE        	out ($fe),a
1787  9140
1788  9140 3A 33 8C     	ld a,(Ctrl_3)
1789  9143 CB 57        	bit 2,a
1790  9145 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1791  9147
1792  9147              Borrando_entidades
1793  9147
1794  9147 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1795  914A CD BE 90     	call Extrae_address
1796  914D 24           	inc h
1797  914E 25           	dec h
1798  914F 28 05        	jr z,Pintando_entidades
1799  9151 CD 02 96     	call Pinta_Sprites
1800  9154 18 F1        	jr Borrando_entidades
1801  9156
1802  9156              Pintando_entidades
1803  9156
1804  9156 2A 2F 8C     	ld hl,(India_SP)
1805  9159 2C           	inc l
1806  915A CD BE 90     	call Extrae_address
1807  915D 24           	inc h
1808  915E 25           	dec h
1809  915F 28 0E        	jr z,Ejecuta_escudo
1810  9161 1C           	inc e
1811  9162 1C           	inc e
1812  9163 ED 53 2F 8C  	ld (India_SP),de
1813  9167 CD BE 90     	call Extrae_address
1814  916A CD 02 96     	call Pinta_Sprites
1815  916D 18 E7        	jr Pintando_entidades
1816  916F
1817  916F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1818  916F
1819  916F              Ejecuta_escudo
1820  916F
1821  916F 3A 5D 8C     	ld a,(Shield)
1822  9172 A7           	and a
1823  9173 20 2F        	jr nz,Aplica_Shield
1824  9175
1825  9175              Borrando_Amadeus
1826  9175
1827  9175 21 33 8C     	ld hl,Ctrl_3
1828  9178 CB 6E        	bit 5,(hl)
1829  917A 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1830  917C
1831  917C 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1832  917F CD BE 90     	call Extrae_address
1833  9182 24           	inc h
1834  9183 25           	dec h
1835  9184 28 03        	jr z,Pintando_Amadeus
1836  9186 CD 02 96     	call Pinta_Sprites
1837  9189
1838  9189              Pintando_Amadeus
1839  9189
1840  9189 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1841  918C CD BE 90     	call Extrae_address
1842  918F 24           	inc h
1843  9190 25           	dec h
1844  9191 28 03        	jr z,1F
1845  9193 CD 02 96     	call Pinta_Sprites
1846  9196
1847  9196              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1848  9196
1849  9196 21 33 8C     1 ld hl,Ctrl_3
1850  9199 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1851  919B CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1852  919D CB AE        	res 5,(hl)
1853  919F
1854  919F 3E 01        	ld a,1												; Borde azul.
1855  91A1 D3 FE        	out ($fe),a
1856  91A3
1857  91A3 C9           	ret
1858  91A4
1859  91A4              Aplica_Shield
1860  91A4
1861  91A4              ;	Bit 1 "1" (Shield_3) Sólo borra.
1862  91A4              ;		  "0"     ""     Borra/Pinta.
1863  91A4              ;	Bit 2    ""  RET.	 No borra, no pinta.
1864  91A4
1865  91A4 21 5F 8C     	ld hl,Shield_3
1866  91A7
1867  91A7 CB 5E        	bit 3,(hl)
1868  91A9 20 DE        	jr nz,Pintando_Amadeus
1869  91AB
1870  91AB CB 56        	bit 2,(hl)
1871  91AD 20 E7        	jr nz,1B
1872  91AF
1873  91AF CB 4E        	bit 1,(hl)
1874  91B1 C4 B8 91     	call nz,Borra_Amadeus_shield
1875  91B4
1876  91B4 28 BF        	jr z,Borrando_Amadeus
1877  91B6 18 DE        	jr 1B
1878  91B8
1879  91B8              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1880  91B8
1881  91B8              Borra_Amadeus_shield
1882  91B8
1883  91B8 3A 33 8C     	ld a,(Ctrl_3)
1884  91BB CB 6F        	bit 5,a
1885  91BD 28 08        	jr z,1F
1886  91BF
1887  91BF 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1888  91C2 CD BE 90     	call Extrae_address
1889  91C5 18 06        	jr 2F
1890  91C7
1891  91C7 2A 14 8C     1 ld hl,(Album_de_pintado_Amadeus)
1892  91CA CD BE 90     	call Extrae_address
1893  91CD
1894  91CD CD 02 96     2 call Pinta_Sprites
1895  91D0
1896  91D0 AF           	xor a
1897  91D1 3C           	inc a											; Asegura NZ en la salida de la rutina.
1898  91D2
1899  91D2 C9           	ret
1900  91D3
1901  91D3              Pinta_Amadeus_shield
1902  91D3
1903  91D3 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1904  91D6 CD BE 90     	call Extrae_address
1905  91D9 CD 02 96     	call Pinta_Sprites
1906  91DC
1907  91DC AF           	xor a
1908  91DD 3C           	inc a											; Asegura NZ en la salida de la rutina.
1909  91DE
1910  91DE C9           	ret
1911  91DF
1912  91DF              Borra_Pinta_Amadeus_shield
1913  91DF
1914  91DF CD B8 91     	call Borra_Amadeus_shield
1915  91E2 CD D3 91     	call Pinta_Amadeus_shield
1916  91E5 C9           	ret
1917  91E6
1918  91E6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1919  91E6              ;
1920  91E6              ;	19/6/24
1921  91E6              ;
1922  91E6
1923  91E6              Teclado
1924  91E6
1925  91E6              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1926  91E6
1927  91E6 3E F7        	ld a,$f7												; "5" para disparar.
1928  91E8 DB FE        	in a,($fe)
1929  91EA E6 10        	and $10
1930  91EC
1931  91EC CC E4 A1     	call z,Genera_disparo_Amadeus
1932  91EF
1933  91EF 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1934  91F1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1935  91F3 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1936  91F5 CC 6F 9D         call z,Amadeus_a_izquierda
1937  91F8
1938  91F8 3E F7        	ld a,$f7
1939  91FA DB FE        	in a,($fe)
1940  91FC E6 01        	and $01
1941  91FE C8           	ret z
1942  91FF
1943  91FF 3E F7        	ld a,$f7
1944  9201 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1945  9203 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1946  9205 CC 87 9D     	call z,Amadeus_a_derecha
1947  9208
1948  9208 C9           	ret
1949  9209
1950  9209              ; ------------------------------------------------------------------------------------------------------------------------
1951  9209              ;
1952  9209              ;	06/07/24
1953  9209              ;
1954  9209
1955  9209              Genera_explosion
1956  9209
1957  9209 21 45 8C     	ld hl,Clock_explosion
1958  920C 35           	dec (hl)
1959  920D 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1960  920F
1961  920F              Borra_entidad_colisionada
1962  920F
1963  920F CD 16 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1964  9212 CD 1F 90     	call Cargamos_registros_con_explosion
1965  9215 CD 09 95     	call Genera_datos_de_impresion
1966  9218
1967  9218 AF           	xor a
1968  9219 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1969  921A
1970  921A C9           	ret
1971  921B
1972  921B              Siguiente_frame_explosion
1973  921B
1974  921B 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1975  921D
1976  921D              ; Avanza Frame de explosión.
1977  921D
1978  921D 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1979  9220 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1980  9223
1981  9223 79           	ld a,c
1982  9224 95           	sub l
1983  9225 20 0B        	jr nz,1F
1984  9227
1985  9227              ; Fín de la entidad !!!!!!!!!!!!!
1986  9227
1987  9227 21 06 8C     	ld hl,Numero_parcial_de_entidades
1988  922A 35           	dec (hl)
1989  922B 23           	inc hl
1990  922C 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1991  922D
1992  922D CD 89 93     	call Limpiamos_bandeja_DRAW
1993  9230 18 DD        	jr Borra_entidad_colisionada
1994  9232
1995  9232 23           1 inc hl
1996  9233 23           	inc hl
1997  9234 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1998  9237 18 D6        	jr Borra_entidad_colisionada
1999  9239
2000  9239              ; ----- ----- ----- ----- -----
2001  9239
2002  9239              Genera_explosion_Amadeus
2003  9239
2004  9239 21 46 8C     	ld hl,Clock_explosion_Amadeus
2005  923C 35           	dec (hl)
2006  923D 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2007  923F
2008  923F              Borra_Amadeus_impactado
2009  923F
2010  923F CD 81 8E     	call Change_Amadeus
2011  9242 CD 2C 90     	call Cargamos_registros_con_explosion_Amadeus
2012  9245 CD 4D 90     	call Genera_datos_de_impresion_Amadeus
2013  9248
2014  9248 21 33 8C     	ld hl,Ctrl_3
2015  924B CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2016  924D
2017  924D AF           	xor a
2018  924E 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2019  924F
2020  924F C9           	ret
2021  9250
2022  9250              Siguiente_frame_explosion_Amadeus
2023  9250
2024  9250 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2025  9252
2026  9252              ; Avanza Frame de explosión.
2027  9252
2028  9252 2A 7B 89     	ld hl,(Pamm_Amadeus)
2029  9255 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2030  9258
2031  9258 79           	ld a,c
2032  9259 95           	sub l
2033  925A 20 0B        	jr nz,1F
2034  925C
2035  925C              ; Fín de Amadeus !!!!!!!!!!!!!
2036  925C              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2037  925C
2038  925C AF           	xor a
2039  925D 32 78 89     	ld (Impacto_Amadeus),a
2040  9260 21 33 8C     	ld hl,Ctrl_3
2041  9263 CB F6        	set 6,(hl)
2042  9265
2043  9265 18 D8        	jr Borra_Amadeus_impactado
2044  9267
2045  9267 23           1 inc hl
2046  9268 23           	inc hl
2047  9269 22 7B 89     	ld (Pamm_Amadeus),hl
2048  926C 18 D1        	jr Borra_Amadeus_impactado
2049  926E
2050  926E              ; ---------------------------------------------------------------
2051  926E
2052  926E              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 926E              ; ******************************************************************************************************************************************************************************************
   2+ 926E              ;
   3+ 926E              ;   21/04/24
   4+ 926E              ;
   5+ 926E              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 926E              ;   (XOR) bit a bit.
   7+ 926E              ;
   8+ 926E              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 926E
  10+ 926E              Derivando_RND
  11+ 926E
  12+ 926E 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9271
  14+ 9271 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9273 C5               push bc
  16+ 9274              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9274 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9277              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9277
  20+ 9277 A7           6 and a                                 ; Carry a "0".
  21+ 9278 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 927A 30 02            jr nc,1F
  23+ 927C
  24+ 927C CB C1            set 0,c
  25+ 927E
  26+ 927E 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 927F E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9281 5F               ld e,a
  29+ 9282
  30+ 9282 7A               ld a,d
  31+ 9283 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9285 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9287
  34+ 9287 CB 3F            srl a
  35+ 9289
  36+ 9289 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 928A
  38+ 928A 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 928B 28 04            jr z,4F
  40+ 928D
  41+ 928D CB FF            set 7,a
  42+ 928F 18 02            jr 5F
  43+ 9291
  44+ 9291 CB BF        4 res 7,a
  45+ 9293
  46+ 9293 CB 21        5 sla c
  47+ 9295 10 E0            djnz 6B
  48+ 9297
  49+ 9297 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9298
  51+ 9298 77               ld (hl),a
  52+ 9299 23               inc hl
  53+ 929A C1               pop bc
  54+ 929B 10 D4            djnz 3B
  55+ 929D
  56+ 929D C9               ret
  57+ 929E
  58+ 929E
  59+ 929E
# file closed: RND_Derivando.asm
2053  929E              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 929E              ;---------------------------------------------------------------------------------------------------------------
   2+ 929E              ;
   3+ 929E              ;   8/3/24
   4+ 929E              ;
   5+ 929E              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 929E              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 929E              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 929E              ;	_ de la 1ª entidad del Nivel.
   9+ 929E              ;
  10+ 929E              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 929E
  12+ 929E              ;	MODIFICA: HL,DE y A.
  13+ 929E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 929E
  15+ 929E              Inicializa_Nivel
  16+ 929E
  17+ 929E 2A 53 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 92A1 CD BE 90     	call Extrae_address
  19+ 92A4 7E           	ld a,(hl)
  20+ 92A5 32 05 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92A8 23           	inc hl
  22+ 92A9 CD B6 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92AC 22 55 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92AF CD BF 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92B2
  26+ 92B2 CD D0 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92B5 C9           	ret
  28+ 92B6
  29+ 92B6              ; ----------------------
  30+ 92B6
  31+ 92B6 11 E4 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92B9 01 04 00     	ld bc,4
  33+ 92BC ED B0        	ldir
  34+ 92BE C9           	ret
  35+ 92BF
  36+ 92BF 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92C0 CD 5A 94         call Calcula_salto_en_BC
  38+ 92C3 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92C6 A7               and a
  40+ 92C7 ED 4A            adc hl,bc
  41+ 92C9 CD BE 90         call Extrae_address
  42+ 92CC 22 F0 8B         ld (Puntero_indice_mov),hl
  43+ 92CF C9               ret
  44+ 92D0
  45+ 92D0 3A BF 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92D3 CD 5A 94     	call Calcula_salto_en_BC
  47+ 92D6 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92D9 A7               and a
  49+ 92DA ED 4A            adc hl,bc
  50+ 92DC CD BE 90         call Extrae_address
  51+ 92DF 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92E2 C9           	ret
  53+ 92E3
  54+ 92E3              ;---------------------------------------------------------------------------------------------------------------
  55+ 92E3              ;
  56+ 92E3              ;   5/1/24
  57+ 92E3              ;
  58+ 92E3              ;	Destruye A,BC,HL,DE
  59+ 92E3
  60+ 92E3              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92E3              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92E3
  63+ 92E3              Inicia_Entidades
  64+ 92E3
  65+ 92E3              ; Preparamos los punteros de las cajas de entidades:
  66+ 92E3
  67+ 92E3 CD A8 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92E6              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92E6 CD A2 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92E9
  71+ 92E9 2A 55 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92EC
  73+ 92EC 22 55 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92EF
  75+ 92EF CD 08 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92F2
  77+ 92F2 2A 55 8C     	ld hl,(Datos_de_nivel)
  78+ 92F5
  79+ 92F5              ; En este punto:
  80+ 92F5              ;
  81+ 92F5              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92F5              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92F5
  84+ 92F5 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92F6
  86+ 92F6 7E           	ld a,(hl)
  87+ 92F7 CD 74 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92FA
  89+ 92FA CD 6C 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92FD
  91+ 92FD              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92FD
  93+ 92FD CD 2A 94     	call Busca_mov_masticados_segun_tipo
  94+ 9300
  95+ 9300 A7           	and a
  96+ 9301 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9303
  98+ 9303              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9303
 100+ 9303              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9303              ;	_ de este tipo de entidad.
 102+ 9303
 103+ 9303 CD 06 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 9306 CD 13 9F     	call Transfiere_datos_de_contadores
 105+ 9309
 106+ 9309 18 06        	jr 4F
 107+ 930B
 108+ 930B CD B2 8F     3 call Construye_movimientos_masticados_entidad
 109+ 930E
 110+ 930E              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 930E              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 930E              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 930E              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 930E              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 930E
 116+ 930E CD E8 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9311              ;																; _ Mov_masticados ya generados.
 118+ 9311
 119+ 9311 CD 06 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9314
 121+ 9314 DD E5        	push ix
 122+ 9316 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9317
 124+ 9317 D5           	push de
 125+ 9318 CD DD 94     	call Genera_coordenadas
 126+ 931B
 127+ 931B ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 128+ 931F CD 16 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9322 D1           	pop de
 130+ 9323
 131+ 9323 CD 09 95     	call Genera_datos_de_impresion
 132+ 9326              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9326              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9326              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9326              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9326
 137+ 9326 CD AC 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9329
 139+ 9329              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9329
 141+ 9329 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 142+ 932D CD 99 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9330
 144+ 9330 CD 89 93     	call Limpiamos_bandeja_DRAW
 145+ 9333 CD 0C 91     	call Incrementa_punteros_de_cajas
 146+ 9336
 147+ 9336              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9336              ; _ entidad del Nivel.
 149+ 9336
 150+ 9336 3A 34 8C     	ld a,(Ctrl_4)
 151+ 9339 E6 F0        	and $f0
 152+ 933B 32 34 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 933E
 154+ 933E              ; Siguiente entidad del Nivel.
 155+ 933E
 156+ 933E 2A 55 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9341 23           	inc hl 														; _ entidad del Nivel.
 158+ 9342
 159+ 9342 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9343
 161+ 9343 10 A7        	djnz 2B
 162+ 9345
 163+ 9345 C9           	ret
 164+ 9346
 165+ 9346              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9346              ;
 167+ 9346              ;	27/5/24
 168+ 9346              ;
 169+ 9346              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9346              ;
 171+ 9346
 172+ 9346              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9346              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9346
 175+ 9346 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9349 CD 6C 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 934C
 178+ 934C
 179+ 934C              Construye_movimientos_masticados_Amadeus
 180+ 934C
 181+ 934C 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 934F CD F9 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9352              ;															; _ el (Contador_de_mov_masticados).
 184+ 9352 CD C4 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9355              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9355
 187+ 9355              ; Generamos movimientos masticados de Amadeus.
 188+ 9355
 189+ 9355 06 79        	ld b,121												; $0079, 121d.
 190+ 9357
 191+ 9357 C5           1 push bc
 192+ 9358 CD 25 97     	call Draw
 193+ 935B CD DE 8F     	call Guarda_movimiento_masticado
 194+ 935E
 195+ 935E CD 99 9A     	call Mov_right
 196+ 9361 CD 99 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9364
 198+ 9364 C1           	pop bc
 199+ 9365 10 F0        	djnz 1B
 200+ 9367
 201+ 9367              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9367
 203+ 9367              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9367              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9367
 206+ 9367 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 936A 01 08 00     	ld bc,8
 208+ 936D A7           	and a
 209+ 936E ED 42        	sbc hl,bc
 210+ 9370 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9373
 212+ 9373 C9           	ret
 213+ 9374
 214+ 9374              ; ---------------------------------------------------------------------
 215+ 9374              ;
 216+ 9374              ;	10/02/24
 217+ 9374              ;
 218+ 9374              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9374              ;
 220+ 9374              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9374
 222+ 9374              Definicion_segun_tipo
 223+ 9374
 224+ 9374 CD 5A 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9377 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 937A CD 62 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 937D C9           	ret
 228+ 937E
 229+ 937E              ; ---------------------------------------------------------------------
 230+ 937E              ;
 231+ 937E              ;	6/7/24
 232+ 937E
 233+ 937E
 234+ 937E              Store_Restore_cajas
 235+ 937E
 236+ 937E ED 5B FF 8B  	ld de,(Puntero_store_caja)
 237+ 9382 CD 99 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9385 CD 0C 91     	call Incrementa_punteros_de_cajas
 239+ 9388 C9           	ret
 240+ 9389
 241+ 9389              ; ---------------------------------------------------------------------
 242+ 9389              ;
 243+ 9389              ;	23/6/24
 244+ 9389              ;
 245+ 9389              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9389              ;
 247+ 9389              ;	MODIFY: HL
 248+ 9389
 249+ 9389              Limpiamos_bandeja_DRAW
 250+ 9389
 251+ 9389 ED 73 0C 8C  	ld (Stack),sp
 252+ 938D 31 E4 8B     	ld sp,Vel_left
 253+ 9390
 254+ 9390 AF           	xor a
 255+ 9391 67           	ld h,a
 256+ 9392 6F           	ld l,a
 257+ 9393
 258+ 9393 E5           	push hl
 259+ 9394 E5           	push hl
 260+ 9395 E5           	push hl
 261+ 9396 E5           	push hl
 262+ 9397 E5           	push hl
 263+ 9398 E5           	push hl
 264+ 9399 E5           	push hl
 265+ 939A E5           	push hl
 266+ 939B E5           	push hl
 267+ 939C E5           	push hl
 268+ 939D E5           	push hl
 269+ 939E E5           	push hl
 270+ 939F E5           	push hl
 271+ 93A0 E5           	push hl
 272+ 93A1 E5           	push hl
 273+ 93A2 E5           	push hl
 274+ 93A3 E5           	push hl
 275+ 93A4 E5           	push hl
 276+ 93A5
 277+ 93A5 33           	inc sp
 278+ 93A6
 279+ 93A6 E5           	push hl
 280+ 93A7 ED 7B 0C 8C  	ld sp,(Stack)
 281+ 93AB
 282+ 93AB C9           	ret
 283+ 93AC
 284+ 93AC              ; ---------------------------------------------------------------------
 285+ 93AC              ;
 286+ 93AC              ;	24/03/24
 287+ 93AC
 288+ 93AC 2A C8 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93AF 2B           	dec hl
 290+ 93B0 22 C8 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93B3 C9           	ret
 292+ 93B4
 293+ 93B4              ; ---------------------------------------------------------------------
 294+ 93B4              ;
 295+ 93B4              ;	8/5/24
 296+ 93B4
 297+ 93B4              Reinicia_entidad_maliciosa
 298+ 93B4
 299+ 93B4              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93B4
 301+ 93B4 CD 06 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93B7 CD 13 9F     	call Transfiere_datos_de_contadores
 303+ 93BA
 304+ 93BA              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93BA
 306+ 93BA 3A BF 8B     	ld a,(Tipo)
 307+ 93BD CD 74 93     	call Definicion_segun_tipo
 308+ 93C0
 309+ 93C0 E5           	push hl
 310+ 93C1 DD E1        	pop ix
 311+ 93C3
 312+ 93C3 DD 6E 0B     	ld l,(ix+11)
 313+ 93C6 DD 66 0C     	ld h,(ix+12)
 314+ 93C9
 315+ 93C9 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93CC
 317+ 93CC CD 06 90     	call Cargamos_registros_con_mov_masticado
 318+ 93CF
 319+ 93CF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93CF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93CF              ; Ejemplos.
 322+ 93CF
 323+ 93CF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93CF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93CF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93CF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93CF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93CF
 329+ 93CF 21 C2 8B     	ld hl,Contador_de_vueltas
 330+ 93D2 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93D4
 332+ 93D4 7E           	ld a,(hl)
 333+ 93D5 CB 2F        	sra a
 334+ 93D7 CB 2F        	sra a
 335+ 93D9
 336+ 93D9 32 CA 8B     	ld (Velocidad),a
 337+ 93DC
 338+ 93DC 3E 40        	ld a,$40
 339+ 93DE BE           	cp (hl)
 340+ 93DF C0           	ret nz
 341+ 93E0
 342+ 93E0              ; Límitador.
 343+ 93E0
 344+ 93E0              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93E0
 346+ 93E0 CB 2E        	sra (hl)
 347+ 93E2 21 CA 8B     	ld hl,Velocidad
 348+ 93E5 CB 2E        	sra (hl)
 349+ 93E7
 350+ 93E7 C9           	ret
 351+ 93E8
 352+ 93E8              ; ---------------------------------------------------------------------
 353+ 93E8              ;
 354+ 93E8              ;	22/01/24
 355+ 93E8
 356+ 93E8 21 34 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93EB CB 46        	bit 0,(hl)
 358+ 93ED 20 0D        	jr nz,1F
 359+ 93EF CB 4E        	bit 1,(hl)
 360+ 93F1 20 0C        	jr nz,2F
 361+ 93F3 CB 56        	bit 2,(hl)
 362+ 93F5 20 0B        	jr nz,3F
 363+ 93F7 CB 5E        	bit 3,(hl)
 364+ 93F9 20 0A        	jr nz,4F
 365+ 93FB C9           	ret
 366+ 93FC
 367+ 93FC CB E6        1 set 4,(hl)
 368+ 93FE C9           	ret
 369+ 93FF CB EE        2 set 5,(hl)
 370+ 9401 C9           	ret
 371+ 9402 CB F6        3 set 6,(hl)
 372+ 9404 C9           	ret
 373+ 9405 CB FE        4 set 7,(hl)
 374+ 9407 C9           	ret
 375+ 9408
 376+ 9408              ; ---------------------------------------------------------------------
 377+ 9408              ;
 378+ 9408              ;	23/01/24
 379+ 9408              ;
 380+ 9408              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9408              ;
 382+ 9408              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9408              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9408              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9408              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9408
 387+ 9408              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9408
 389+ 9408 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9409 3D           	dec a
 391+ 940A 20 06        	jr nz,1F
 392+ 940C
 393+ 940C              ; --- Tipo_1
 394+ 940C
 395+ 940C 21 34 8C     	ld hl,Ctrl_4
 396+ 940F CB C6        	set 0,(hl)
 397+ 9411 C9           	ret
 398+ 9412
 399+ 9412 3D           1 dec a
 400+ 9413 20 06        	jr nz,2F
 401+ 9415
 402+ 9415              ; --- Tipo_2
 403+ 9415
 404+ 9415 21 34 8C     	ld hl,Ctrl_4
 405+ 9418 CB CE        	set 1,(hl)
 406+ 941A C9           	ret
 407+ 941B
 408+ 941B 3D           2 dec a
 409+ 941C 20 06        	jr nz,3F
 410+ 941E
 411+ 941E              ; --- Tipo_3
 412+ 941E
 413+ 941E 21 34 8C     	ld hl,Ctrl_4
 414+ 9421 CB D6        	set 2,(hl)
 415+ 9423 C9           	ret
 416+ 9424
 417+ 9424              ; --- Tipo_3
 418+ 9424
 419+ 9424 21 34 8C     3 ld hl,Ctrl_4
 420+ 9427 CB D6        	set 2,(hl)
 421+ 9429 C9           	ret
 422+ 942A
 423+ 942A              ; ---------------------------------------------------------------------
 424+ 942A              ;
 425+ 942A              ;	22/01/24
 426+ 942A
 427+ 942A 21 34 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 942D CB 46        	bit 0,(hl)
 429+ 942F 20 0E        	jr nz,1F
 430+ 9431
 431+ 9431 CB 4E        	bit 1,(hl)
 432+ 9433 20 10        	jr nz,2F
 433+ 9435
 434+ 9435 CB 56        	bit 2,(hl)
 435+ 9437 20 12        	jr nz,3F
 436+ 9439
 437+ 9439 CB 5E        	bit 3,(hl)
 438+ 943B 20 14        	jr nz,4F
 439+ 943D 18 19        	jr 6F
 440+ 943F
 441+ 943F              ; Entidad_de_Tipo_1.
 442+ 943F
 443+ 943F CB 66        1 bit 4,(hl)
 444+ 9441 28 15        	jr z,6F
 445+ 9443 18 10        	jr 5F
 446+ 9445
 447+ 9445              ; Entidad_de_Tipo_2.
 448+ 9445
 449+ 9445 CB 6E        2 bit 5,(hl)
 450+ 9447 28 0F        	jr z,6F
 451+ 9449 18 0A        	jr 5F
 452+ 944B
 453+ 944B              ; Entidad_de_Tipo_3.
 454+ 944B
 455+ 944B CB 76        3 bit 6,(hl)
 456+ 944D 28 09        	jr z,6F
 457+ 944F 18 04        	jr 5F
 458+ 9451
 459+ 9451              ; Entidad_de_Tipo_4.
 460+ 9451
 461+ 9451 CB 7E        4 bit 7,(hl)
 462+ 9453 28 03        	jr z,6F
 463+ 9455
 464+ 9455              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9455
 466+ 9455 AF           5 xor a
 467+ 9456 3C           	inc a
 468+ 9457 C9           	ret
 469+ 9458
 470+ 9458              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9458
 472+ 9458 AF           6 xor a
 473+ 9459 C9           	ret
 474+ 945A
 475+ 945A              ;	------------------------------------------------------------------------------------
 476+ 945A              ;
 477+ 945A              ;	12/01/24
 478+ 945A              ;
 479+ 945A              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 945A              ;
 481+ 945A              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 945A              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 945A
 484+ 945A CB 27        Calcula_salto_en_BC sla a
 485+ 945C D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 945E 4F           	ld c,a
 487+ 945F 06 00        	ld b,0
 488+ 9461 C9           	ret
 489+ 9462
 490+ 9462              ; ------------------------------------------------------------------
 491+ 9462              ;
 492+ 9462              ;	19/1/24
 493+ 9462              ;
 494+ 9462              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9462              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9462
 497+ 9462 A7           Situa_en_datos_de_definicion and a
 498+ 9463 ED 4A        	adc hl,bc
 499+ 9465 CD BE 90     	call Extrae_address
 500+ 9468 22 0A 8C         ld (Datos_de_entidad),hl
 501+ 946B C9           	ret
 502+ 946C
 503+ 946C              ; ------------------------------------------------------------------
 504+ 946C
 505+ 946C              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 946C              ; 	inc de
 507+ 946C              ; 	inc de
 508+ 946C              ; 	ex de,hl
 509+ 946C              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 946C              ; 	ret
 511+ 946C
 512+ 946C              ; ----------------------------------------------------------------------------------------------------------
 513+ 946C              ;
 514+ 946C              ;	24/6/24
 515+ 946C              ;
 516+ 946C              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 946C              ;	_ de entidad.
 518+ 946C              ;
 519+ 946C              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 946C              ;
 521+ 946C              ;
 522+ 946C              ;	MODIFICA: HL,DE y BC
 523+ 946C
 524+ 946C
 525+ 946C              Definicion_de_entidad_a_bandeja_DRAW
 526+ 946C
 527+ 946C 11 BF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 946F 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9470 12           	ld (de),a
 530+ 9471 23           	inc hl
 531+ 9472              ;
 532+ 9472 11 CD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9475 01 02 00     	ld bc,2
 534+ 9478 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 947A              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 947A 11 C2 8B     	ld de,Contador_de_vueltas
 537+ 947D 7E           	ld a,(hl)
 538+ 947E 12           	ld (de),a
 539+ 947F 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9480
 541+ 9480 11 D4 8B     	ld de,Indice_Sprite_der
 542+ 9483 01 04 00     	ld bc,4
 543+ 9486 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9488
 545+ 9488 11 DC 8B     	ld de,Posicion_inicio
 546+ 948B 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 948E ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9490
 549+ 9490 11 C6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9493 01 02 00     	ld bc,2
 551+ 9496 ED B0        	ldir
 552+ 9498
 553+ 9498 C9           	ret
 554+ 9499
 555+ 9499              ; ----------------------------------------------------------------------------------------------------------
 556+ 9499              ;
 557+ 9499              ;	1/8/24
 558+ 9499              ;
 559+ 9499
 560+ 9499              Parametros_de_bandeja_DRAW_a_caja
 561+ 9499
 562+ 9499 21 BF 8B     	ld hl,Bandeja_DRAW
 563+ 949C 01 0C 00     	ld bc,12
 564+ 949F ED B0        	ldir
 565+ 94A1 C9           	ret
 566+ 94A2
 567+ 94A2              ;---------------------------------------------------------------------------------------------------------------
 568+ 94A2              ;
 569+ 94A2              ;	5/1/24
 570+ 94A2              ;
 571+ 94A2              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 94A2              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 94A2              ;
 574+ 94A2              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 94A2              ;
 576+ 94A2              ;	(Numero_parcial_de_entidades)="7".
 577+ 94A2              ;
 578+ 94A2              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 94A2              ;
 580+ 94A2              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 94A2              ;
 582+ 94A2              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 94A2              ;	MODIFICA: A y B.
 584+ 94A2              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 94A2
 586+ 94A2              Inicializa_Numero_parcial_de_entidades
 587+ 94A2
 588+ 94A2              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 94A2
 590+ 94A2 3A 05 8C     	ld a,(Numero_de_entidades)
 591+ 94A5 A7           	and a
 592+ 94A6
 593+ 94A6              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94A6              ;	jr z,$
 595+ 94A6              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94A6
 597+ 94A6 20 03        	jr nz,3F
 598+ 94A8
 599+ 94A8              ; ---------- ---------- ----------
 600+ 94A8
 601+ 94A8              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94A8              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94A8
 604+ 94A8 CD 9E 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94AB
 606+ 94AB              ; ---------- ---------- ----------
 607+ 94AB
 608+ 94AB 3A 05 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94AE FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94B0 38 08        	jr c,1F
 611+ 94B2
 612+ 94B2              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94B2              ; Actualizamos variables.
 614+ 94B2
 615+ 94B2 3E 07        	ld a,7
 616+ 94B4 32 06 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94B7 47           	ld b,a
 618+ 94B8 18 04        	jr 2F
 619+ 94BA
 620+ 94BA              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94BA              ; (Numero_de_entidades)="0".
 622+ 94BA
 623+ 94BA 32 06 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94BD 47           	ld b,a
 625+ 94BE C9           2 ret
 626+ 94BF
# file closed: Rutinas_de_inicio_y_niveles.asm
2054  94BF              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94BF              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94BF              ;
   3+ 94BF              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94BF              ;
   5+ 94BF              ; *****************************************************************************************************************************************************************************************
   6+ 94BF              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94BF
   8+ 94BF 7C           calcula_tercio ld a,h
   9+ 94C0 E6 18        	and $18
  10+ 94C2 CB 2F        	sra a
  11+ 94C4 CB 2F        	sra a
  12+ 94C6 CB 2F        	sra a
  13+ 94C8 C9           	ret
  14+ 94C9
# file closed: calcula_tercio.asm
2055  94C9              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94C9              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94C9              ;
   3+ 94C9              ;
   4+ 94C9              ;	CLS.
   5+ 94C9              ;
   6+ 94C9              ;	Limpia la pantalla y define sus atributos.
   7+ 94C9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94C9              ;
   9+ 94C9              ;	COLORES: 0 ..... NEGRO
  10+ 94C9              ;    		 1 ..... AZUL
  11+ 94C9              ; 			 2 ..... ROJO
  12+ 94C9              ;			 3 ..... MAGENTA
  13+ 94C9              ; 			 4 ..... VERDE
  14+ 94C9              ; 			 5 ..... CIAN
  15+ 94C9              ;			 6 ..... AMARILLO
  16+ 94C9              ; 			 7 ..... BLANCO
  17+ 94C9              ;
  18+ 94C9              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94C9              ;
  20+ 94C9              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94C9
  22+ 94C9
  23+ 94C9 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94CC 11 01 40     	LD DE,$4001
  25+ 94CF 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D2 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94D4 ED B0        	LDIR
  28+ 94D6 01 FF 02     	LD BC,767
  29+ 94D9 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94DA ED B0        	LDIR
  31+ 94DC C9           	ret
  32+ 94DD
# file closed: Cls.asm
2056  94DD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94DD              ; ------------------------------------------------------------------------
   2+ 94DD              ;
   3+ 94DD              ;	30/1/24
   4+ 94DD              ;
   5+ 94DD              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94DD              ;	Fila superior "0", Columna izquierda "0".
   7+ 94DD              ;
   8+ 94DD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94DD              ;
  10+ 94DD              ;	Modifica: A,BC y DE.
  11+ 94DD
  12+ 94DD 7D           Genera_coordenadas ld a,l
  13+ 94DE E6 1F        	and $1f
  14+ 94E0 32 C0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94E3
  16+ 94E3 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94E4 FE 40        	cp $40
  18+ 94E6 38 1C        	jr c,4F
  19+ 94E8
  20+ 94E8 CD BF 94     	call calcula_tercio
  21+ 94EB 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94EC
  23+ 94EC 1E 00        	ld e,0
  24+ 94EE 7D           	ld a,l
  25+ 94EF E6 E0        	and $e0
  26+ 94F1 28 01        	jr z,1F
  27+ 94F3 04           	inc b
  28+ 94F4
  29+ 94F4 04           1 inc b
  30+ 94F5 05           	dec b
  31+ 94F6 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94F8              ;														; _ , salimos.
  33+ 94F8 1C           3 inc e
  34+ 94F9 D6 20        	sub 32
  35+ 94FB 20 FB        	jr nz,3B
  36+ 94FD 10 F5        	djnz 1B
  37+ 94FF
  38+ 94FF 7B           2 ld a,e
  39+ 9500 32 C1 8B     	ld (Coordenada_y),a
  40+ 9503 C9           	ret
  41+ 9504
  42+ 9504 AF           4 xor a
  43+ 9505 32 C1 8B     	ld (Coordenada_y),a
  44+ 9508 C9           	ret
  45+ 9509
# file closed: Genera_coordenadas.asm
2057  9509              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9509              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9509              ;
   3+ 9509              ;	20/09/24
   4+ 9509              ;
   5+ 9509              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9509              ;   DE contiene Puntero_objeto.
   7+ 9509              ;   IX contiene el Puntero de impresión.
   8+ 9509
   9+ 9509              Genera_datos_de_impresion
  10+ 9509
  11+ 9509 ED 73 0C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 950D
  13+ 950D 31 C6 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9510 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9512
  16+ 9512 2A 2D 8C         ld hl,(Scanlines_album_SP)
  17+ 9515
  18+ 9515 3E 05            ld a,5
  19+ 9517 85               add l
  20+ 9518 6F               ld l,a
  21+ 9519
  22+ 9519 F9               ld sp,hl
  23+ 951A 22 2D 8C         ld (Scanlines_album_SP),hl
  24+ 951D
  25+ 951D 21 00 00         ld hl,0
  26+ 9520
  27+ 9520 DD E5            push ix
  28+ 9522 3B               dec sp
  29+ 9523 ED 7A            adc hl,sp
  30+ 9525 D5               push de
  31+ 9526
  32+ 9526              ; Recuperamos SP.
  33+ 9526
  34+ 9526 ED 7B 0C 8C      ld sp,(Stack)
  35+ 952A
  36+ 952A E5               push hl
  37+ 952B F1               pop af
  38+ 952C 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 952D
  40+ 952D              ; Tenemos el encabezado listo.
  41+ 952D              ; Preparamos registros para generar los scanlines.
  42+ 952D
  43+ 952D DD E5            push ix
  44+ 952F E1               pop hl                                          ; 1er scanline en HL.
  45+ 9530
  46+ 9530 ED 5B 2D 8C      ld de,(Scanlines_album_SP)
  47+ 9534
  48+ 9534              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9534              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9534
  51+ 9534 7C               ld a,h
  52+ 9535 FE 50            cp $50
  53+ 9537 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9539
  55+ 9539 20 05            jr nz,2F
  56+ 953B
  57+ 953B 7D               ld a,l
  58+ 953C FE E0            cp $e0
  59+ 953E 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9540
  61+ 9540 7D           2 ld a,l
  62+ 9541 FE C0            cp $c0
  63+ 9543 D2 D9 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9546
  65+ 9546              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9546
  67+ 9546 CD D7 99         call NextScan
  68+ 9549 EB               ex de,hl
  69+ 954A
  70+ 954A 73               ld (hl),e
  71+ 954B 23               inc hl
  72+ 954C 72               ld (hl),d
  73+ 954D 23               inc hl
  74+ 954E
  75+ 954E EB               ex de,hl
  76+ 954F
  77+ 954F CD D7 99         call NextScan
  78+ 9552 EB               ex de,hl
  79+ 9553
  80+ 9553 73               ld (hl),e
  81+ 9554 23               inc hl
  82+ 9555 72               ld (hl),d
  83+ 9556 23               inc hl
  84+ 9557
  85+ 9557 EB               ex de,hl
  86+ 9558
  87+ 9558 CD D7 99         call NextScan
  88+ 955B EB               ex de,hl
  89+ 955C
  90+ 955C 73               ld (hl),e
  91+ 955D 23               inc hl
  92+ 955E 72               ld (hl),d
  93+ 955F 23               inc hl
  94+ 9560
  95+ 9560 EB               ex de,hl
  96+ 9561
  97+ 9561 CD D7 99         call NextScan
  98+ 9564 EB               ex de,hl
  99+ 9565
 100+ 9565 73               ld (hl),e
 101+ 9566 23               inc hl
 102+ 9567 72               ld (hl),d
 103+ 9568 23               inc hl
 104+ 9569
 105+ 9569 EB               ex de,hl
 106+ 956A
 107+ 956A CD D7 99         call NextScan
 108+ 956D EB               ex de,hl
 109+ 956E
 110+ 956E 73               ld (hl),e
 111+ 956F 23               inc hl
 112+ 9570 72               ld (hl),d
 113+ 9571 23               inc hl
 114+ 9572
 115+ 9572 EB               ex de,hl
 116+ 9573
 117+ 9573 CD D7 99         call NextScan
 118+ 9576 EB               ex de,hl
 119+ 9577
 120+ 9577 73               ld (hl),e
 121+ 9578 23               inc hl
 122+ 9579 72               ld (hl),d
 123+ 957A 23               inc hl
 124+ 957B
 125+ 957B EB               ex de,hl
 126+ 957C
 127+ 957C CD D7 99         call NextScan
 128+ 957F EB               ex de,hl
 129+ 9580
 130+ 9580 73               ld (hl),e
 131+ 9581 23               inc hl
 132+ 9582 72               ld (hl),d
 133+ 9583 23               inc hl
 134+ 9584
 135+ 9584 EB               ex de,hl
 136+ 9585
 137+ 9585 CD D7 99         call NextScan
 138+ 9588 EB               ex de,hl
 139+ 9589
 140+ 9589 73               ld (hl),e
 141+ 958A 23               inc hl
 142+ 958B 72               ld (hl),d
 143+ 958C 23               inc hl
 144+ 958D
 145+ 958D EB               ex de,hl
 146+ 958E
 147+ 958E CD D7 99         call NextScan
 148+ 9591 EB               ex de,hl
 149+ 9592
 150+ 9592 73               ld (hl),e
 151+ 9593 23               inc hl
 152+ 9594 72               ld (hl),d
 153+ 9595 23               inc hl
 154+ 9596
 155+ 9596 EB               ex de,hl
 156+ 9597
 157+ 9597 CD D7 99         call NextScan
 158+ 959A EB               ex de,hl
 159+ 959B
 160+ 959B 73               ld (hl),e
 161+ 959C 23               inc hl
 162+ 959D 72               ld (hl),d
 163+ 959E 23               inc hl
 164+ 959F
 165+ 959F EB               ex de,hl
 166+ 95A0
 167+ 95A0 CD D7 99         call NextScan
 168+ 95A3 EB               ex de,hl
 169+ 95A4
 170+ 95A4 73               ld (hl),e
 171+ 95A5 23               inc hl
 172+ 95A6 72               ld (hl),d
 173+ 95A7 23               inc hl
 174+ 95A8
 175+ 95A8 EB               ex de,hl
 176+ 95A9
 177+ 95A9 CD D7 99         call NextScan
 178+ 95AC EB               ex de,hl
 179+ 95AD
 180+ 95AD 73               ld (hl),e
 181+ 95AE 23               inc hl
 182+ 95AF 72               ld (hl),d
 183+ 95B0 23               inc hl
 184+ 95B1
 185+ 95B1 EB               ex de,hl
 186+ 95B2
 187+ 95B2 CD D7 99         call NextScan
 188+ 95B5 EB               ex de,hl
 189+ 95B6
 190+ 95B6 73               ld (hl),e
 191+ 95B7 23               inc hl
 192+ 95B8 72               ld (hl),d
 193+ 95B9 23               inc hl
 194+ 95BA
 195+ 95BA EB               ex de,hl
 196+ 95BB
 197+ 95BB CD D7 99         call NextScan
 198+ 95BE EB               ex de,hl
 199+ 95BF
 200+ 95BF 73               ld (hl),e
 201+ 95C0 23               inc hl
 202+ 95C1 72               ld (hl),d
 203+ 95C2 23               inc hl
 204+ 95C3
 205+ 95C3 EB               ex de,hl
 206+ 95C4
 207+ 95C4 CD D7 99         call NextScan
 208+ 95C7 EB               ex de,hl
 209+ 95C8
 210+ 95C8              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95C8              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95C8              ;   _ generar sus scanlines.
 213+ 95C8
 214+ 95C8              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95C8
 216+ 95C8 73               ld (hl),e
 217+ 95C9 23               inc hl
 218+ 95CA 72               ld (hl),d
 219+ 95CB 23               inc hl
 220+ 95CC
 221+ 95CC              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95CC
 223+ 95CC 22 2D 8C         ld (Scanlines_album_SP),hl
 224+ 95CF
 225+ 95CF EB               ex de,hl
 226+ 95D0
 227+ 95D0              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95D0
 229+ 95D0              ;    call NextScan
 230+ 95D0              ;    call NextScan
 231+ 95D0
 232+ 95D0 22 38 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D3
 234+ 95D3              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D3
 236+ 95D3 08               ex af,af
 237+ 95D4
 238+ 95D4 F5               push af
 239+ 95D5 E1               pop hl
 240+ 95D6
 241+ 95D6 36 10            ld (hl),16
 242+ 95D8
 243+ 95D8 C9               ret
 244+ 95D9
 245+ 95D9              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95D9
 247+ 95D9              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95D9
 249+ 95D9 3E 57            ld a,$57
 250+ 95DB 94               sub h
 251+ 95DC 47               ld b,a
 252+ 95DD
 253+ 95DD 3E DF            ld a,$df
 254+ 95DF BD               cp l
 255+ 95E0 38 04            jr c,1F
 256+ 95E2
 257+ 95E2 3E 08            ld a,8
 258+ 95E4 80               add b
 259+ 95E5 47               ld b,a
 260+ 95E6
 261+ 95E6              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95E6              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95E6
 264+ 95E6 48           1 ld c,b
 265+ 95E7 0C               inc c
 266+ 95E8
 267+ 95E8 04               inc b
 268+ 95E9 05               dec b
 269+ 95EA 20 02            jr nz,3F
 270+ 95EC
 271+ 95EC 18 0B            jr 6F
 272+ 95EE
 273+ 95EE CD D7 99     3 call NextScan
 274+ 95F1 EB               ex de,hl
 275+ 95F2
 276+ 95F2 73               ld (hl),e
 277+ 95F3 23               inc hl
 278+ 95F4 72               ld (hl),d
 279+ 95F5 23               inc hl
 280+ 95F6
 281+ 95F6 EB               ex de,hl
 282+ 95F7 10 F5            djnz 3B
 283+ 95F9
 284+ 95F9 ED 53 2D 8C  6 ld (Scanlines_album_SP),de
 285+ 95FD
 286+ 95FD 08           5 ex af,af
 287+ 95FE F5               push af
 288+ 95FF E1               pop hl
 289+ 9600
 290+ 9600 71               ld (hl),c
 291+ 9601
 292+ 9601 C9               ret
 293+ 9602
# file closed: Genera_datos_de_impresion.asm
2058  9602              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9602              ; -----------------------------------------------------------------------------
   2+ 9602              ;
   3+ 9602              ;   11/03/24
   4+ 9602              ;
   5+ 9602
   6+ 9602              Pinta_Sprites
   7+ 9602
   8+ 9602              ;    ld hl,(Scanlines_album_SP)
   9+ 9602              ;    call Extrae_address
  10+ 9602
  11+ 9602              ;    inc h
  12+ 9602              ;    dec h
  13+ 9602              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9602
  15+ 9602 ED 73 0C 8C      ld (Stack),sp
  16+ 9606
  17+ 9606 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9607              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9607 2C               inc l
  20+ 9608 2C               inc l
  21+ 9609
  22+ 9609 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 960A
  24+ 960A 2C               inc l
  25+ 960B F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 960C
  27+ 960C              ;   Seleccionamos rutina de impresión:
  28+ 960C
  29+ 960C 3E 10            ld a,16
  30+ 960E B8               cp b
  31+ 960F C2 0B 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9612
  33+ 9612              ;   Rutinas:
  34+ 9612
  35+ 9612              Pinta_rapido    ;   1520 t/states.
  36+ 9612
  37+ 9612 E1               pop hl
  38+ 9613
  39+ 9613 1A               ld a,(de)
  40+ 9614 AE               xor (hl)
  41+ 9615 77               ld (hl),a
  42+ 9616 2C               inc l
  43+ 9617 1C               inc e
  44+ 9618 1A               ld a,(de)
  45+ 9619 AE               xor (hl)
  46+ 961A 77               ld (hl),a
  47+ 961B 2C               inc l
  48+ 961C 1C               inc e
  49+ 961D 1A               ld a,(de)
  50+ 961E AE               xor (hl)
  51+ 961F 77               ld (hl),a
  52+ 9620 13               inc de
  53+ 9621
  54+ 9621 E1               pop hl
  55+ 9622
  56+ 9622 1A               ld a,(de)
  57+ 9623 AE               xor (hl)
  58+ 9624 77               ld (hl),a
  59+ 9625 2C               inc l
  60+ 9626 1C               inc e
  61+ 9627 1A               ld a,(de)
  62+ 9628 AE               xor (hl)
  63+ 9629 77               ld (hl),a
  64+ 962A 2C               inc l
  65+ 962B 1C               inc e
  66+ 962C 1A               ld a,(de)
  67+ 962D AE               xor (hl)
  68+ 962E 77               ld (hl),a
  69+ 962F 13               inc de
  70+ 9630
  71+ 9630 E1               pop hl
  72+ 9631
  73+ 9631 1A               ld a,(de)
  74+ 9632 AE               xor (hl)
  75+ 9633 77               ld (hl),a
  76+ 9634 2C               inc l
  77+ 9635 1C               inc e
  78+ 9636 1A               ld a,(de)
  79+ 9637 AE               xor (hl)
  80+ 9638 77               ld (hl),a
  81+ 9639 2C               inc l
  82+ 963A 1C               inc e
  83+ 963B 1A               ld a,(de)
  84+ 963C AE               xor (hl)
  85+ 963D 77               ld (hl),a
  86+ 963E 13               inc de
  87+ 963F
  88+ 963F E1               pop hl
  89+ 9640
  90+ 9640 1A               ld a,(de)
  91+ 9641 AE               xor (hl)
  92+ 9642 77               ld (hl),a
  93+ 9643 2C               inc l
  94+ 9644 1C               inc e
  95+ 9645 1A               ld a,(de)
  96+ 9646 AE               xor (hl)
  97+ 9647 77               ld (hl),a
  98+ 9648 2C               inc l
  99+ 9649 1C               inc e
 100+ 964A 1A               ld a,(de)
 101+ 964B AE               xor (hl)
 102+ 964C 77               ld (hl),a
 103+ 964D 13               inc de
 104+ 964E
 105+ 964E E1               pop hl
 106+ 964F
 107+ 964F 1A               ld a,(de)
 108+ 9650 AE               xor (hl)
 109+ 9651 77               ld (hl),a
 110+ 9652 2C               inc l
 111+ 9653 1C               inc e
 112+ 9654 1A               ld a,(de)
 113+ 9655 AE               xor (hl)
 114+ 9656 77               ld (hl),a
 115+ 9657 2C               inc l
 116+ 9658 1C               inc e
 117+ 9659 1A               ld a,(de)
 118+ 965A AE               xor (hl)
 119+ 965B 77               ld (hl),a
 120+ 965C 13               inc de
 121+ 965D
 122+ 965D E1               pop hl
 123+ 965E
 124+ 965E 1A               ld a,(de)
 125+ 965F AE               xor (hl)
 126+ 9660 77               ld (hl),a
 127+ 9661 2C               inc l
 128+ 9662 1C               inc e
 129+ 9663 1A               ld a,(de)
 130+ 9664 AE               xor (hl)
 131+ 9665 77               ld (hl),a
 132+ 9666 2C               inc l
 133+ 9667 1C               inc e
 134+ 9668 1A               ld a,(de)
 135+ 9669 AE               xor (hl)
 136+ 966A 77               ld (hl),a
 137+ 966B 13               inc de
 138+ 966C
 139+ 966C E1               pop hl
 140+ 966D
 141+ 966D 1A               ld a,(de)
 142+ 966E AE               xor (hl)
 143+ 966F 77               ld (hl),a
 144+ 9670 2C               inc l
 145+ 9671 1C               inc e
 146+ 9672 1A               ld a,(de)
 147+ 9673 AE               xor (hl)
 148+ 9674 77               ld (hl),a
 149+ 9675 2C               inc l
 150+ 9676 1C               inc e
 151+ 9677 1A               ld a,(de)
 152+ 9678 AE               xor (hl)
 153+ 9679 77               ld (hl),a
 154+ 967A 13               inc de
 155+ 967B
 156+ 967B E1               pop hl
 157+ 967C
 158+ 967C 1A               ld a,(de)
 159+ 967D AE               xor (hl)
 160+ 967E 77               ld (hl),a
 161+ 967F 2C               inc l
 162+ 9680 1C               inc e
 163+ 9681 1A               ld a,(de)
 164+ 9682 AE               xor (hl)
 165+ 9683 77               ld (hl),a
 166+ 9684 2C               inc l
 167+ 9685 1C               inc e
 168+ 9686 1A               ld a,(de)
 169+ 9687 AE               xor (hl)
 170+ 9688 77               ld (hl),a
 171+ 9689 13               inc de
 172+ 968A
 173+ 968A E1               pop hl
 174+ 968B
 175+ 968B 1A               ld a,(de)
 176+ 968C AE               xor (hl)
 177+ 968D 77               ld (hl),a
 178+ 968E 2C               inc l
 179+ 968F 1C               inc e
 180+ 9690 1A               ld a,(de)
 181+ 9691 AE               xor (hl)
 182+ 9692 77               ld (hl),a
 183+ 9693 2C               inc l
 184+ 9694 1C               inc e
 185+ 9695 1A               ld a,(de)
 186+ 9696 AE               xor (hl)
 187+ 9697 77               ld (hl),a
 188+ 9698 13               inc de
 189+ 9699
 190+ 9699 E1               pop hl
 191+ 969A
 192+ 969A 1A               ld a,(de)
 193+ 969B AE               xor (hl)
 194+ 969C 77               ld (hl),a
 195+ 969D 2C               inc l
 196+ 969E 1C               inc e
 197+ 969F 1A               ld a,(de)
 198+ 96A0 AE               xor (hl)
 199+ 96A1 77               ld (hl),a
 200+ 96A2 2C               inc l
 201+ 96A3 1C               inc e
 202+ 96A4 1A               ld a,(de)
 203+ 96A5 AE               xor (hl)
 204+ 96A6 77               ld (hl),a
 205+ 96A7 13               inc de
 206+ 96A8
 207+ 96A8 E1               pop hl
 208+ 96A9
 209+ 96A9 1A               ld a,(de)
 210+ 96AA AE               xor (hl)
 211+ 96AB 77               ld (hl),a
 212+ 96AC 2C               inc l
 213+ 96AD 1C               inc e
 214+ 96AE 1A               ld a,(de)
 215+ 96AF AE               xor (hl)
 216+ 96B0 77               ld (hl),a
 217+ 96B1 2C               inc l
 218+ 96B2 1C               inc e
 219+ 96B3 1A               ld a,(de)
 220+ 96B4 AE               xor (hl)
 221+ 96B5 77               ld (hl),a
 222+ 96B6 13               inc de
 223+ 96B7
 224+ 96B7 E1               pop hl
 225+ 96B8
 226+ 96B8 1A               ld a,(de)
 227+ 96B9 AE               xor (hl)
 228+ 96BA 77               ld (hl),a
 229+ 96BB 2C               inc l
 230+ 96BC 1C               inc e
 231+ 96BD 1A               ld a,(de)
 232+ 96BE AE               xor (hl)
 233+ 96BF 77               ld (hl),a
 234+ 96C0 2C               inc l
 235+ 96C1 1C               inc e
 236+ 96C2 1A               ld a,(de)
 237+ 96C3 AE               xor (hl)
 238+ 96C4 77               ld (hl),a
 239+ 96C5 13               inc de
 240+ 96C6
 241+ 96C6 E1               pop hl
 242+ 96C7
 243+ 96C7 1A               ld a,(de)
 244+ 96C8 AE               xor (hl)
 245+ 96C9 77               ld (hl),a
 246+ 96CA 2C               inc l
 247+ 96CB 1C               inc e
 248+ 96CC 1A               ld a,(de)
 249+ 96CD AE               xor (hl)
 250+ 96CE 77               ld (hl),a
 251+ 96CF 2C               inc l
 252+ 96D0 1C               inc e
 253+ 96D1 1A               ld a,(de)
 254+ 96D2 AE               xor (hl)
 255+ 96D3 77               ld (hl),a
 256+ 96D4 13               inc de
 257+ 96D5
 258+ 96D5 E1               pop hl
 259+ 96D6
 260+ 96D6 1A               ld a,(de)
 261+ 96D7 AE               xor (hl)
 262+ 96D8 77               ld (hl),a
 263+ 96D9 2C               inc l
 264+ 96DA 1C               inc e
 265+ 96DB 1A               ld a,(de)
 266+ 96DC AE               xor (hl)
 267+ 96DD 77               ld (hl),a
 268+ 96DE 2C               inc l
 269+ 96DF 1C               inc e
 270+ 96E0 1A               ld a,(de)
 271+ 96E1 AE               xor (hl)
 272+ 96E2 77               ld (hl),a
 273+ 96E3 13               inc de
 274+ 96E4
 275+ 96E4 E1               pop hl
 276+ 96E5
 277+ 96E5 1A               ld a,(de)
 278+ 96E6 AE               xor (hl)
 279+ 96E7 77               ld (hl),a
 280+ 96E8 2C               inc l
 281+ 96E9 1C               inc e
 282+ 96EA 1A               ld a,(de)
 283+ 96EB AE               xor (hl)
 284+ 96EC 77               ld (hl),a
 285+ 96ED 2C               inc l
 286+ 96EE 1C               inc e
 287+ 96EF 1A               ld a,(de)
 288+ 96F0 AE               xor (hl)
 289+ 96F1 77               ld (hl),a
 290+ 96F2 13               inc de
 291+ 96F3
 292+ 96F3 E1               pop hl
 293+ 96F4
 294+ 96F4 1A               ld a,(de)
 295+ 96F5 AE               xor (hl)
 296+ 96F6 77               ld (hl),a
 297+ 96F7 2C               inc l
 298+ 96F8 1C               inc e
 299+ 96F9 1A               ld a,(de)
 300+ 96FA AE               xor (hl)
 301+ 96FB 77               ld (hl),a
 302+ 96FC 2C               inc l
 303+ 96FD 1C               inc e
 304+ 96FE 1A               ld a,(de)
 305+ 96FF AE               xor (hl)
 306+ 9700 77               ld (hl),a
 307+ 9701 13               inc de
 308+ 9702
 309+ 9702 ED 73 2D 8C      ld (Scanlines_album_SP),sp
 310+ 9706 ED 7B 0C 8C      ld sp,(Stack)
 311+ 970A C9               ret
 312+ 970B
 313+ 970B              Pinta_lento
 314+ 970B
 315+ 970B E1           1 pop hl
 316+ 970C
 317+ 970C 1A               ld a,(de)
 318+ 970D AE               xor (hl)
 319+ 970E 77               ld (hl),a
 320+ 970F 2C               inc l
 321+ 9710 1C               inc e
 322+ 9711 1A               ld a,(de)
 323+ 9712 AE               xor (hl)
 324+ 9713 77               ld (hl),a
 325+ 9714 2C               inc l
 326+ 9715 1C               inc e
 327+ 9716 1A               ld a,(de)
 328+ 9717 AE               xor (hl)
 329+ 9718 77               ld (hl),a
 330+ 9719 13               inc de
 331+ 971A
 332+ 971A 10 EF            djnz 1B
 333+ 971C
 334+ 971C ED 73 2D 8C      ld (Scanlines_album_SP),sp
 335+ 9720 ED 7B 0C 8C      ld sp,(Stack)
 336+ 9724 C9               ret
# file closed: Pinta_Sprites.asm
2059  9725              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9725              ; ******************************************************************************************************************************************************************************************
   2+ 9725              ;
   3+ 9725              ; 26/06/23
   4+ 9725              ;
   5+ 9725              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9725
   7+ 9725              Draw
   8+ 9725
   9+ 9725 CD CB 99     	call Prepara_draw
  10+ 9728 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9729 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 972A 28 05        	jr z,2F
  13+ 972C
  14+ 972C 3A DE 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 972F 18 0C        	jr 1F
  16+ 9731
  17+ 9731 2A DC 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9734 22 CF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9737 CD C3 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 973A              ;													; _la esquina superior izquierda de la pantalla.
  21+ 973A
  22+ 973A CD 6A 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 973D
  24+ 973D 3A CC 8B     1 ld a,(Ctrl_0)
  25+ 9740 CB 6F        	bit 5,a
  26+ 9742 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9744
  28+ 9744 CD 59 97     	call Comprueba_limite_horizontal
  29+ 9747 CD E9 97     	call Comprueba_limite_vertical
  30+ 974A
  31+ 974A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 974A              ; -----------------------
  33+ 974A              ; -----------------------
  34+ 974A              ; -----------------------
  35+ 974A
  36+ 974A CD 3F 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 974D CD 76 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9750
  39+ 9750 3A CC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9753 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9755 32 CC 8B     	ld (Ctrl_0),a
  42+ 9758
  43+ 9758 C9           	ret
  44+ 9759
  45+ 9759              ; *******************************************************************************************************************************************************************************************
  46+ 9759              ;	21/01/23
  47+ 9759              ;
  48+ 9759              ; 	Comprueba_limite_horizontal.
  49+ 9759              ;
  50+ 9759              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9759              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9759              ;
  53+ 9759              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9759              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9759              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9759              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9759
  58+ 9759
  59+ 9759
  60+ 9759 3A CC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 975C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 975E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9760 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9762 32 CC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9765 18 09            jr 6F
  66+ 9767 CB 5F        1 bit 3,a
  67+ 9769 28 0A            jr z,2F
  68+ 976B E6 F7            and $f7
  69+ 976D 32 CC 8B         ld (Ctrl_0),a
  70+ 9770 CD C3 98     6 call Inicializacion
  71+ 9773 18 5B            jr 5F
  72+ 9775 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9776
  74+ 9776              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9776              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9776
  77+ 9776 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9777 2A E0 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 977A CD BF 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 977D 67           	ld h,a
  81+ 977E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 977F CD BF 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9782 67           	ld h,a
  84+ 9783 A7           	and a
  85+ 9784 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9786 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9787 3A DE 8B     	ld a,(Cuad_objeto)
  88+ 978A FE 02        	cp 2
  89+ 978C 38 1E        	jr c,3F
  90+ 978E 28 1C        	jr z,3F
  91+ 9790 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9791 28 23            jr z,7F
  93+ 9793 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9795 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9797 E1           	pop hl
  96+ 9798
  97+ 9798              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9798              ; _para indicar con E="2" en caso necesario.
  99+ 9798
 100+ 9798 E5               push hl
 101+ 9799 C5               push bc
 102+ 979A CD BF 94     	call calcula_tercio
 103+ 979D FE 01        	cp 1
 104+ 979F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A1 CD D1 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A4 28 26            jr z,9F
 107+ 97A6 38 24            jr c,9F
 108+ 97A8 1E 00        11 ld e,0
 109+ 97AA 18 22            jr 8F
 110+ 97AC 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97AD 28 07        	jr z, 7F
 112+ 97AF 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B1 1E 00         	ld e,0
 114+ 97B3 E1           	pop hl
 115+ 97B4 18 04        	jr 4F
 116+ 97B6 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97B8 18 15            jr 10F
 118+ 97BA
 119+ 97BA              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97BA              ; _para indicar con E="2" en caso necesario.
 121+ 97BA
 122+ 97BA E5           4 push hl
 123+ 97BB C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97BC CD BF 94     	call calcula_tercio
 125+ 97BF FE 01        	cp 1
 126+ 97C1 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C3 CD D1 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C6 28 04            jr z,9F
 129+ 97C8 30 02            jr nc,9F
 130+ 97CA 18 02        	jr 8F
 131+ 97CC 1E 02        9 ld e,2
 132+ 97CE C1           8 pop bc
 133+ 97CF E1           10 pop hl
 134+ 97D0 C9           5 ret
 135+ 97D1
 136+ 97D1              ; --------------------
 137+ 97D1              ;
 138+ 97D1              ; 25/08/22
 139+ 97D1
 140+ 97D1 CD BF 94     Comprueba_centro call calcula_tercio
 141+ 97D4 67               ld h,a
 142+ 97D5 08           	ex af,af
 143+ 97D6 FE 02        	cp 2
 144+ 97D8 38 07        	jr c,1F
 145+ 97DA 28 05        	jr z,1F
 146+ 97DC 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97DF 18 03        	jr 2F
 148+ 97E1 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E4 08           2 ex af,af
 150+ 97E5 A7               and a
 151+ 97E6 ED 42            sbc hl,bc
 152+ 97E8 C9               ret
 153+ 97E9
 154+ 97E9              ; *********************************************************************************************************************************************************************************************
 155+ 97E9              ;
 156+ 97E9              ;   16/8/22
 157+ 97E9              ;
 158+ 97E9              ;	Comprueba_limite_vertical
 159+ 97E9              ;
 160+ 97E9              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E9              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E9              ;
 163+ 97E9
 164+ 97E9 2A CF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97EC 7D           	ld a,l
 166+ 97ED E6 1F        	and $1F
 167+ 97EF 57           	ld d,a
 168+ 97F0 3A E2 8B     	ld a,(Limite_vertical)
 169+ 97F3 BA           	cp d 											; Límite - Posición.
 170+ 97F4 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F5 3A DE 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97F8 CB 47        	bit 0,a
 173+ 97FA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97FC
 175+ 97FC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97FC
 177+ 97FC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97FD 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97FF
 180+ 97FF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97FF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97FF
 183+ 97FF 3A C0 8B         ld a,(Coordenada_X)
 184+ 9802 16 0F            ld d,Centro_izquierda
 185+ 9804 A7               and a
 186+ 9805 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9806 28 1E            jr z,3F
 188+ 9808 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 980A              ;                                                    ; _salimos sin modificar nada.
 190+ 980A 18 0E            jr 2F
 191+ 980C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 980D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 980F
 194+ 980F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 980F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 980F
 197+ 980F 3A C0 8B         ld a,(Coordenada_X)
 198+ 9812 16 10            ld d,Centro_derecha
 199+ 9814 A7               and a
 200+ 9815 92               sub d
 201+ 9816 28 0E            jr z,3F
 202+ 9818 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 981A              ;                                                    ; _salimos sin modificar nada.
 204+ 981A CB 43        2 bit 0,e
 205+ 981C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 981E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 981F CD B3 98         call Modificaccionne
 208+ 9822 C1           	pop bc
 209+ 9823 CD C3 98         call Inicializacion
 210+ 9826 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9827
 212+ 9827              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9827
 214+ 9827 C5           4 push bc
 215+ 9828 01 CE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 982B 0A           	ld a,(bc)
 217+ 982C 3D           	dec a
 218+ 982D 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 982E 7D           	ld a,l
 220+ 982F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9830 CB 47        	bit 0,a
 222+ 9832 28 03        	jr z,5F
 223+ 9834 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9835 18 2E        	jr 7F
 225+ 9837
 226+ 9837              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9837
 228+ 9837 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9838 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9839 3A CC 8B     	ld a,(Ctrl_0)
 231+ 983C CB 4F        	bit 1,a
 232+ 983E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9840 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9841
 235+ 9841              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9841
 237+ 9841 1C               inc e
 238+ 9842 1D               dec e
 239+ 9843 20 07            jr nz,12F
 240+ 9845 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9846 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9847 22 CF 8B     	ld (Posicion_actual),hl
 243+ 984A 18 44        13 jr 9F
 244+ 984C CB 43        12 bit 0,e
 245+ 984E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9850              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9850 C1           	pop bc
 248+ 9851 18 D3        	jr 3B
 249+ 9853 80           14 add b
 250+ 9854 6F               ld l,a
 251+ 9855 22 CF 8B     	ld (Posicion_actual),hl
 252+ 9858 CD B3 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 985B 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 985D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 985F 32 CC 8B         ld (Ctrl_0),a
 256+ 9862 F1           	pop af
 257+ 9863 18 2B        	jr 9F
 258+ 9865
 259+ 9865              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9865
 261+ 9865 F5           7 push af
 262+ 9866 3A CC 8B     	ld a,(Ctrl_0)
 263+ 9869 CB 47        	bit 0,a
 264+ 986B 20 1D        	jr nz,8F
 265+ 986D F1           	pop af
 266+ 986E
 267+ 986E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 986E
 269+ 986E 1C           	inc e
 270+ 986F 1D               dec e
 271+ 9870 20 07            jr nz,10F
 272+ 9872 90           	sub b
 273+ 9873 6F               ld l,a
 274+ 9874 22 CF 8B     	ld (Posicion_actual),hl
 275+ 9877 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9879              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9879 CB 43        10 bit 0,e
 278+ 987B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 987D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 987D C1           	pop bc
 281+ 987E 18 A6        	jr 3B
 282+ 9880 90           16 sub b
 283+ 9881 6F               ld l,a
 284+ 9882 22 CF 8B     	ld (Posicion_actual),hl
 285+ 9885 CD B3 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9888 18 06            jr 9F
 287+ 988A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 988C 32 CC 8B         ld (Ctrl_0),a
 289+ 988F F1           	pop af
 290+ 9890 C1           9 pop bc
 291+ 9891 1E 00        	ld e,0
 292+ 9893 CD C3 98         call Inicializacion
 293+ 9896 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9897 08           	ex af,af
 295+ 9898 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9899 18 8B            jr 3B
 297+ 989B
 298+ 989B              ; --------------------
 299+ 989B
 300+ 989B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 989D CD E6 99     1 call PreviousScan
 302+ 98A0 10 FB            djnz 1B
 303+ 98A2 22 CF 8B     	ld (Posicion_actual),hl
 304+ 98A5 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A6 C9           	ret
 306+ 98A7
 307+ 98A7              ; --------------------
 308+ 98A7
 309+ 98A7 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A9 CD D7 99     1 call NextScan
 311+ 98AC 10 FB            djnz 1B
 312+ 98AE 22 CF 8B     	ld (Posicion_actual),hl
 313+ 98B1 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B2 C9           	ret
 315+ 98B3
 316+ 98B3              ; --------------------
 317+ 98B3              ;
 318+ 98B3              ;	22/01/23
 319+ 98B3              ;
 320+ 98B3              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B3              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B3              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B3
 324+ 98B3
 325+ 98B3              Modificaccionne
 326+ 98B3
 327+ 98B3 3A DE 8B     	ld a,(Cuad_objeto)
 328+ 98B6 FE 02        	cp 2
 329+ 98B8 CC 9B 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98BB DC 9B 98         call c,Modifica_Pos_actual
 331+ 98BE C8           	ret z
 332+ 98BF CD A7 98         call Modifica_Pos_actual2
 333+ 98C2 C9               ret
 334+ 98C3
 335+ 98C3              ; *************************************************************************************************************************************************************************************************
 336+ 98C3              ;
 337+ 98C3              ;	13/8/22
 338+ 98C3              ;
 339+ 98C3              ;	Inicializacion
 340+ 98C3              ;
 341+ 98C3              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C3              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C3              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C3              ;
 345+ 98C3              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C3              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C3              ;	_ desaparece/aparece.
 348+ 98C3
 349+ 98C3              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C3              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C3              ;
 352+ 98C3              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C3              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C3              ; 		   [E] ="0"
 355+ 98C3
 356+ 98C3              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C3
 358+ 98C3 CD BF 94     Inicializacion call calcula_tercio
 359+ 98C6 28 36        	jr z,primit
 360+ 98C8 E6 02        	and 2
 361+ 98CA 20 07        	jr nz,segmit
 362+ 98CC 7D           	ld a,l
 363+ 98CD FE 7F        	cp $7f
 364+ 98CF 38 2D        	jr c,primit
 365+ 98D1 28 2B        	jr z,primit
 366+ 98D3 CD 39 99     segmit call column
 367+ 98D6 38 13        	jr c,tercuad
 368+ 98D8 3E 04        cuarcuad ld a,4
 369+ 98DA 32 DE 8B     	ld (Cuad_objeto),a
 370+ 98DD 21 20 48     	ld hl,$4820
 371+ 98E0 22 E0 8B     	ld (Limite_horizontal),hl
 372+ 98E3 21 E2 8B     	ld hl,Limite_vertical
 373+ 98E6 36 0D        	ld (hl),$0d
 374+ 98E8 08           	ex af,af
 375+ 98E9 18 3C        	jr 1F
 376+ 98EB              tercuad
 377+ 98EB 3E 03        	ld a,3
 378+ 98ED 32 DE 8B     	ld (Cuad_objeto),a
 379+ 98F0 21 20 48     	ld hl,$4820
 380+ 98F3 22 E0 8B     	ld (Limite_horizontal),hl
 381+ 98F6 21 E2 8B     	ld hl,Limite_vertical
 382+ 98F9 36 12        	ld (hl),$12
 383+ 98FB 08           	ex af,af
 384+ 98FC 18 29        	jr 1F
 385+ 98FE CD 39 99     primit call column
 386+ 9901 38 13        	jr c, primcuad
 387+ 9903              segcuad
 388+ 9903 3E 02        	ld a,2
 389+ 9905 32 DE 8B     	ld (Cuad_objeto),a
 390+ 9908 21 C0 4F     	ld hl,$4fc0
 391+ 990B 22 E0 8B     	ld (Limite_horizontal),hl
 392+ 990E 21 E2 8B     	ld hl,Limite_vertical
 393+ 9911 36 0D        	ld (hl),$0d
 394+ 9913 08           	ex af,af
 395+ 9914 18 11        	jr 1F
 396+ 9916              primcuad
 397+ 9916 3E 01        	ld a,1
 398+ 9918 32 DE 8B     	ld (Cuad_objeto),a
 399+ 991B 21 C0 4F     	ld hl,$4fc0
 400+ 991E 22 E0 8B     	ld (Limite_horizontal),hl
 401+ 9921 21 E2 8B     	ld hl,Limite_vertical
 402+ 9924 36 12        	ld (hl),$12
 403+ 9926 08           	ex af,af
 404+ 9927
 405+ 9927 C5           1 push bc
 406+ 9928 E5           	push hl
 407+ 9929 D5           	push de
 408+ 992A
 409+ 992A 2A CF 8B     	ld hl,(Posicion_actual)
 410+ 992D CD DD 94     	call Genera_coordenadas
 411+ 9930
 412+ 9930 D1           	pop de
 413+ 9931 E1           	pop hl
 414+ 9932 C1           	pop bc
 415+ 9933
 416+ 9933 21 CC 8B     	ld hl,Ctrl_0
 417+ 9936 CB EE        	set 5,(hl)
 418+ 9938 C9           	ret
 419+ 9939
 420+ 9939              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9939
 422+ 9939              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9939              ;
 424+ 9939              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9939
 426+ 9939 7D           column ld a,l
 427+ 993A E6 1F        	and $1f
 428+ 993C FE 10         	cp $10
 429+ 993E C9            	ret
 430+ 993F
 431+ 993F              ; --------------------------------------------------------------------------------------------------------------------
 432+ 993F              ;
 433+ 993F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 993F              ;
 435+ 993F              ; 14/12/22
 436+ 993F              ;
 437+ 993F              ;	Modifica: A y BC.
 438+ 993F
 439+ 993F 3A DE 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9942 E6 01        	and 1
 441+ 9944 28 17        	jr z,1F
 442+ 9946
 443+ 9946              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9946
 445+ 9946 3A C0 8B     	ld a,(Coordenada_X)
 446+ 9949 47           	ld b,a
 447+ 994A 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 994B 79           	ld a,c
 449+ 994C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 994D 38 08        	jr c,2F
 451+ 994F 47           	ld b,a
 452+ 9950 79           	ld a,c
 453+ 9951 90           	sub b
 454+ 9952 32 DF 8B     	ld (Columnas),a
 455+ 9955 18 1B        	jr 4F
 456+ 9957 79           2 ld a,c
 457+ 9958 32 DF 8B     	ld (Columnas),a
 458+ 995B 18 15        	jr 4F
 459+ 995D
 460+ 995D              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 995D
 462+ 995D 3A C0 8B     1 ld a,(Coordenada_X)
 463+ 9960 81           	add c
 464+ 9961 3D           	dec a
 465+ 9962 D6 1F        	sub $1f
 466+ 9964 38 08        	jr c,3F
 467+ 9966 47           	ld b,a
 468+ 9967 79           	ld a,c
 469+ 9968 90           	sub b
 470+ 9969 32 DF 8B     	ld (Columnas),a
 471+ 996C 18 04        	jr 4F
 472+ 996E 79           3 ld a,c
 473+ 996F 32 DF 8B     	ld (Columnas),a
 474+ 9972 D9           4 exx
 475+ 9973 4F           	ld c,a
 476+ 9974 D9           	exx
 477+ 9975 C9            ret
 478+ 9976
 479+ 9976              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9976              ;
 481+ 9976              ;   19/7/23
 482+ 9976              ;
 483+ 9976              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9976              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9976              ;
 486+ 9976              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9976              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9976              ;
 489+ 9976              ;	DESTRUYE: HL,B Y A.
 490+ 9976
 491+ 9976 3A DE 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9979 FE 02        	cp 2
 493+ 997B 38 18        	jr c,1F
 494+ 997D 28 16        	jr z,1F
 495+ 997F E6 01        	and 1
 496+ 9981 28 0D        	jr z,3F
 497+ 9983
 498+ 9983              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9983
 500+ 9983 CD BF 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9986
 502+ 9986 7D           9 ld a,l
 503+ 9987 E6 1F        	and $1f
 504+ 9989 28 2A        	jr z,7F
 505+ 998B 2B           	dec hl
 506+ 998C 10 F8        	djnz 9B
 507+ 998E 18 25        	jr 7F
 508+ 9990
 509+ 9990              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9990
 511+ 9990 2A CF 8B     3 ld hl,(Posicion_actual)
 512+ 9993 18 20        	jr 7F
 513+ 9995
 514+ 9995 28 14        1 jr z,2F
 515+ 9997
 516+ 9997              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9997
 518+ 9997 CD BF 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 999A
 520+ 999A 7D           4 ld a,l
 521+ 999B E6 1F        	and $1f
 522+ 999D 28 03        	jr z,6F
 523+ 999F 2B           	dec hl
 524+ 99A0 10 F8        	djnz 4B
 525+ 99A2 06 0F        6 ld b,15
 526+ 99A4 CD E6 99     5 call PreviousScan
 527+ 99A7 10 FB        	djnz 5B
 528+ 99A9 18 0A        	jr 7F
 529+ 99AB
 530+ 99AB              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99AB
 532+ 99AB CD BF 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99AE 06 0F        	ld b,15
 534+ 99B0 CD E6 99     8 call PreviousScan
 535+ 99B3 10 FB        	djnz 8B
 536+ 99B5
 537+ 99B5 E5           7 push hl
 538+ 99B6 DD E1        	pop ix
 539+ 99B8
 540+ 99B8 2A D1 8B     	ld hl,(Puntero_objeto)
 541+ 99BB E5           	push hl
 542+ 99BC FD E1        	pop iy
 543+ 99BE
 544+ 99BE C9           	ret
 545+ 99BF
 546+ 99BF              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99BF              ;
 548+ 99BF              ;	2/1/23
 549+ 99BF              ;
 550+ 99BF              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99BF              ;
 552+ 99BF              ;	Tras esta rutina tenemos:
 553+ 99BF              ;
 554+ 99BF              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99BF              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99BF              ;
 557+ 99BF              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99BF
 559+ 99BF 2A CF 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C2 3A DF 8B     	ld a,(Columnas)
 561+ 99C5 3D           	dec a
 562+ 99C6 20 01        	jr nz,1F
 563+ 99C8 3C           	inc a
 564+ 99C9 47           1 ld b,a
 565+ 99CA C9           	ret
 566+ 99CB
 567+ 99CB              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99CB              ;
 569+ 99CB              ;	Prepara_draw
 570+ 99CB              ;
 571+ 99CB              ;	Es una rutina de carga.
 572+ 99CB              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99CB              ;
 574+ 99CB              ;	FUNCIONAMIENTO:
 575+ 99CB              ;
 576+ 99CB              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99CB              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99CB              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99CB              ;
 580+ 99CB              ;	DESTRUYE:
 581+ 99CB              ;
 582+ 99CB              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99CB
 584+ 99CB 21 CD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99CE 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99CF 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99D0 4E           	ld c,(hl)
 588+ 99D1 2A CF 8B     	ld hl,(Posicion_actual)
 589+ 99D4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D6 C9           	ret
 591+ 99D7
 592+ 99D7              ;----------------------------------------------------------------------------------------------------------------
 593+ 99D7              ;
 594+ 99D7              ;	5/08/22
 595+ 99D7              ;
 596+ 99D7              ;   NextScan.
 597+ 99D7              ;
 598+ 99D7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99D7              ;
 600+ 99D7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99D7              ;
 602+ 99D7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99D7              ;
 604+ 99D7              ;       DESTRUIDOS: AF y HL !!!
 605+ 99D7              ;
 606+ 99D7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99D7              ;
 608+ 99D7
 609+ 99D7 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99D8 7C               ld a,h
 611+ 99D9 E6 07            and 7
 612+ 99DB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99DC
 614+ 99DC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99DD C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99DF 6F               ld l,a
 617+ 99E0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E1
 619+ 99E1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E4 67               ld h,a
 622+ 99E5 C9               ret
 623+ 99E6
 624+ 99E6              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E6              ;
 626+ 99E6              ;	5/08/22
 627+ 99E6              ;
 628+ 99E6              ;   PreviousScan.
 629+ 99E6              ;
 630+ 99E6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E6              ;
 632+ 99E6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E6              ;
 634+ 99E6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E6              ;
 636+ 99E6              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E6              ;
 638+ 99E6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E6              ;
 640+ 99E6
 641+ 99E6 7C           PreviousScan ld a,h
 642+ 99E7 25               dec h               ; Dec H.
 643+ 99E8 E6 07            and 7
 644+ 99EA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99EB
 646+ 99EB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99EC D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99EE 6F               ld l,a
 649+ 99EF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99F0
 651+ 99F0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F3 67               ld h,a
 654+ 99F4 C9               ret
 655+ 99F5
 656+ 99F5
 657+ 99F5
 658+ 99F5
 659+ 99F5
 660+ 99F5
 661+ 99F5
 662+ 99F5
 663+ 99F5
 664+ 99F5
 665+ 99F5
 666+ 99F5
# file closed: Draw_XOR.asm
2060  99F5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F5
   2+ 99F5              ; ******************************************************************************************************************************************************************************************
   3+ 99F5              ;
   4+ 99F5              ;   20/05/23
   5+ 99F5              ;
   6+ 99F5              ;	Recompone_posicion_inicio
   7+ 99F5              ;
   8+ 99F5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F5              ;	_ a una u otra rutina.
  12+ 99F5
  13+ 99F5              Recompone_posicion_inicio
  14+ 99F5
  15+ 99F5 2A DC 8B     	ld hl,(Posicion_inicio)
  16+ 99F8 7D           	ld a,l
  17+ 99F9 E6 1F        	and $1f
  18+ 99FB 28 16        	jr z,1F
  19+ 99FD
  20+ 99FD FE 1F        	cp $1f
  21+ 99FF 28 0D        	jr z,3F
  22+ 9A01
  23+ 9A01 21 CB 8B     	ld hl,Ctrl_2
  24+ 9A04 CB C6        	set 0,(hl)
  25+ 9A06 2A D1 8B     	ld hl,(Puntero_objeto)
  26+ 9A09 22 FD 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A0C 18 08        	jr 2F
  28+ 9A0E
  29+ 9A0E CD BC 9B     3 call Mov_left
  30+ 9A11 18 03        	jr 2F
  31+ 9A13
  32+ 9A13 CD 99 9A     1 call Mov_right
  33+ 9A16 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A19 22 D1 8B     	ld (Puntero_objeto),hl
  35+ 9A1C C9           	ret
  36+ 9A1D
  37+ 9A1D              ; ******************************************************************************************************************************************************************************************
  38+ 9A1D              ;
  39+ 9A1D              ;   27/05/23
  40+ 9A1D              ;
  41+ 9A1D              ;	Mov_down
  42+ 9A1D              ;
  43+ 9A1D              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A1D              ;
  45+ 9A1D              ;
  46+ 9A1D              Mov_down
  47+ 9A1D
  48+ 9A1D CD 87 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A20              ;																	; _ repone (Puntero_objeto).
  50+ 9A20 21 CC 8B     	ld hl,Ctrl_0
  51+ 9A23 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A25              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A25              ; 																	; _ en el caso de que no lo haya.
  54+ 9A25 3A E7 8B     	ld a,(Vel_down)
  55+ 9A28 47           	ld b,a
  56+ 9A29 2A CF 8B         ld hl,(Posicion_actual)
  57+ 9A2C CD BF 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A2F E6 02        	and 2
  59+ 9A31 28 17        	jr z,1F
  60+ 9A33
  61+ 9A33              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A33              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A33
  64+ 9A33 7C           	ld a,h
  65+ 9A34 FE 57        	cp $57
  66+ 9A36 20 12        	jr nz,1F
  67+ 9A38
  68+ 9A38 7D           	ld a,l
  69+ 9A39 C6 20        	add $20
  70+ 9A3B 30 0D        	jr nc,1F
  71+ 9A3D
  72+ 9A3D              ; ------------------------------
  73+ 9A3D              ;
  74+ 9A3D              ;	12/01/24
  75+ 9A3D
  76+ 9A3D              ;	call Reaparece_arriba
  77+ 9A3D CD 49 9D     	call Reinicio
  78+ 9A40
  79+ 9A40              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A40
  81+ 9A40 3A 33 8C     	ld a,(Ctrl_3)
  82+ 9A43 CB CF        	set 1,a
  83+ 9A45 32 33 8C     	ld (Ctrl_3),a
  84+ 9A48
  85+ 9A48 18 08        	jr 3F
  86+ 9A4A              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A4A              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A4A              ; ------------------------------
  89+ 9A4A
  90+ 9A4A CD D7 99     1 call NextScan
  91+ 9A4D 22 CF 8B     	ld (Posicion_actual),hl
  92+ 9A50 10 DA            djnz 2B
  93+ 9A52 CD DD 94     3 call Genera_coordenadas
  94+ 9A55 C9           	ret
  95+ 9A56
  96+ 9A56              ; ******************************************************************************************************************************************************************************************
  97+ 9A56              ;
  98+ 9A56              ;   27/05/23
  99+ 9A56              ;
 100+ 9A56              ;	Mov_up
 101+ 9A56              ;
 102+ 9A56              ; 	Mueve el Sprite hacia arriba.
 103+ 9A56              ;
 104+ 9A56              ;
 105+ 9A56              Mov_up
 106+ 9A56
 107+ 9A56 CD 87 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A59              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A59 21 CC 8B     	ld hl,Ctrl_0
 110+ 9A5C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A5E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A5E              ; 																		; _ en el caso de que no lo haya.
 113+ 9A5E 3A E6 8B     	ld a,(Vel_up)
 114+ 9A61 47           	ld b,a
 115+ 9A62 2A CF 8B     	ld hl,(Posicion_actual)
 116+ 9A65 CD BF 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A68 A7           	and a
 118+ 9A69 20 10        	jr nz,1F
 119+ 9A6B
 120+ 9A6B              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A6B              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A6B
 123+ 9A6B 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A6C FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A6E 20 0B            jr nz,1F
 126+ 9A70 7D               ld a,l
 127+ 9A71 D6 20            sub $20
 128+ 9A73 30 06            jr nc,1F
 129+ 9A75 25               dec h
 130+ 9A76
 131+ 9A76              ; -----------------------------
 132+ 9A76 CD 2A 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A79              ;	call Reinicio
 134+ 9A79              ; -----------------------------
 135+ 9A79
 136+ 9A79 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A7B CD E6 99     1 call PreviousScan
 138+ 9A7E 22 CF 8B     	ld (Posicion_actual),hl
 139+ 9A81 10 E2            djnz 3B
 140+ 9A83 CD DD 94     2 call Genera_coordenadas
 141+ 9A86 C9           	ret
 142+ 9A87
 143+ 9A87              ; -----------------------------
 144+ 9A87              ;
 145+ 9A87              ;	27/5/23
 146+ 9A87              ;
 147+ 9A87              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A87              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A87              ;
 150+ 9A87              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A87              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A87              ;
 153+ 9A87              ;	Modifica: A y (Puntero_objeto).
 154+ 9A87
 155+ 9A87 3A CB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A8A CB 47        	bit 0,a
 157+ 9A8C C8           	ret z
 158+ 9A8D CB 87        	res 0,a
 159+ 9A8F 32 CB 8B     	ld (Ctrl_2),a
 160+ 9A92 2A FD 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A95 22 D1 8B     	ld (Puntero_objeto),hl
 162+ 9A98 C9           	ret
 163+ 9A99
 164+ 9A99              ; ******************************************************************************************************************************************************************************************
 165+ 9A99              ;
 166+ 9A99              ;	19/10/22
 167+ 9A99              ;
 168+ 9A99              ;	Mov_right.
 169+ 9A99              ;
 170+ 9A99              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A99              ;
 172+ 9A99
 173+ 9A99 3A CC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A9C CB 77        	bit 6,a
 175+ 9A9E 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AA0
 177+ 9AA0 CD D8 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA4
 180+ 9AA4 21 CC 8B     	ld hl,Ctrl_0
 181+ 9AA7 CB E6        	set 4,(hl)
 182+ 9AA9 18 52        	jr 8F
 183+ 9AAB
 184+ 9AAB 21 CC 8B     10 ld hl,Ctrl_0
 185+ 9AAE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AB0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AB0              ; 																	; _ en el caso de que no lo haya.
 188+ 9AB0 3A C0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB5 20 46        	jr nz,8F
 191+ 9AB7
 192+ 9AB7 3A D3 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9ABA A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9ABB 28 40        	jr z,8F
 195+ 9ABD
 196+ 9ABD              ; ---------- ---------- ----------
 197+ 9ABD              ;
 198+ 9ABD              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ABD
 200+ 9ABD 3A E5 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AC0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC2 28 11        	jr z,1F
 203+ 9AC4 38 06        	jr c,6F
 204+ 9AC6 FE 04        	cp 4
 205+ 9AC8 28 14        	jr z,7F
 206+ 9ACA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ACC
 208+ 9ACC              ; ---------- ---------- ----------
 209+ 9ACC              ;
 210+ 9ACC              ; Perfiles de velocidad
 211+ 9ACC              ;
 212+ 9ACC
 213+ 9ACC 3A D3 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ACF FE FE        	cp $fe
 215+ 9AD1 20 2A        	jr nz,8F
 216+ 9AD3 18 10        	jr 3F
 217+ 9AD5 3A D3 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AD8 FE FD        	cp $fd
 219+ 9ADA 20 21        	jr nz,8F
 220+ 9ADC 18 07        	jr 3F
 221+ 9ADE 3A D3 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE1 FE FB        	cp $fb
 223+ 9AE3 20 18        	jr nz,8F
 224+ 9AE5
 225+ 9AE5              ; ---------- ---------- ----------
 226+ 9AE5
 227+ 9AE5              3
 228+ 9AE5 CD 18 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AE8              ;	call Reinicio
 230+ 9AE8
 231+ 9AE8              ; ---------- ---------- ----------
 232+ 9AE8              ;
 233+ 9AE8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AE8
 235+ 9AE8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AEA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AEB CD 04 9B     	call DESPLZ_DER
 238+ 9AEE C1           	pop bc
 239+ 9AEF 10 F9        	djnz 5B
 240+ 9AF1 2A CF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF5 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9AF8 CD DD 94     	call Genera_coordenadas
 244+ 9AFB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AFD
 246+ 9AFD              ; ---------- ---------- ----------
 247+ 9AFD
 248+ 9AFD 2A CF 8B     8 ld hl,(Posicion_actual)
 249+ 9B00 CD 04 9B     	call DESPLZ_DER
 250+ 9B03 C9           2 ret
 251+ 9B04
 252+ 9B04              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B04              ;
 254+ 9B04              ;	22/9/22
 255+ 9B04              ;
 256+ 9B04
 257+ 9B04 CD 13 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B07 CD 5F 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B0A CD 88 9B         call Ciclo_completo
 260+ 9B0D 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B10 CB FE        	set 7,(hl)
 262+ 9B12 C9           	ret
 263+ 9B13
 264+ 9B13              ; ******************************************************************************************************************************************************************************************
 265+ 9B13              ;	15/02/23
 266+ 9B13              ;
 267+ 9B13
 268+ 9B13 3A E5 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B16 47           	ld b,a
 270+ 9B17 2A D8 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B1A 23           1 inc hl
 272+ 9B1B 23           	inc hl
 273+ 9B1C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B1E 22 D8 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B21 CD BE 90     	call Extrae_address
 276+ 9B24 22 D1 8B     	ld (Puntero_objeto),hl
 277+ 9B27
 278+ 9B27              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B27
 280+ 9B27              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B27              ; Cuántos movimientos hemos hecho ??
 282+ 9B27              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B27
 284+ 9B27 2A D4 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B2A EB           	ex de,hl
 286+ 9B2B A7           	and a
 287+ 9B2C ED 52        	sbc hl,de
 288+ 9B2E CB 3D        	srl l
 289+ 9B30 3E 08        6 ld a,8
 290+ 9B32 95           	sub l
 291+ 9B33 30 1E        	jr nc,3F
 292+ 9B35
 293+ 9B35              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B35              ; B="0".
 295+ 9B35
 296+ 9B35 04           4 inc b
 297+ 9B36 3C           	inc a
 298+ 9B37 20 FC        	jr nz,4B
 299+ 9B39 78           	ld a,b
 300+ 9B3A 08           	ex af,af
 301+ 9B3B 2A D4 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B3E 23           5 inc hl
 303+ 9B3F 23           	inc hl
 304+ 9B40 10 FC        	djnz 5B
 305+ 9B42 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B45 CD BE 90     	call Extrae_address
 307+ 9B48 22 D1 8B     	ld (Puntero_objeto),hl
 308+ 9B4B
 309+ 9B4B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B4B              ; _(Posicion_actual).
 311+ 9B4B
 312+ 9B4B 21 CF 8B     	ld hl,Posicion_actual
 313+ 9B4E 34           	inc (hl)
 314+ 9B4F 08               ex af,af
 315+ 9B50 6F           	ld l,a
 316+ 9B51 18 DD        	jr 6B
 317+ 9B53
 318+ 9B53              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B53
 320+ 9B53 47           3 ld b,a
 321+ 9B54 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B57 23           2 inc hl
 323+ 9B58 23           	inc hl
 324+ 9B59 10 FC        	djnz 2B
 325+ 9B5B 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B5E C9           8 ret
 327+ 9B5F
 328+ 9B5F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B5F              ;
 330+ 9B5F              ;	24/7/22
 331+ 9B5F              ;
 332+ 9B5F              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B5F              ;
 334+ 9B5F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B5F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B5F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B5F
 338+ 9B5F 3A D3 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B62 A7           	and a
 340+ 9B63 20 1F        	jr nz,1F
 341+ 9B65 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B67 32 D3 8B         ld (CTRL_DESPLZ),a
 343+ 9B6A
 344+ 9B6A 21 CE 8B     	ld hl,Columns
 345+ 9B6D 34           	inc (hl)
 346+ 9B6E 3A DE 8B     	ld a,(Cuad_objeto)
 347+ 9B71 E6 01        	and 1
 348+ 9B73 28 0F        	jr z,1F
 349+ 9B75 2A CF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B78 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B79 22 CF 8B     	ld (Posicion_actual),hl
 352+ 9B7C CD DD 94     	call Genera_coordenadas
 353+ 9B7F CD E4 9C     	call Inc_CTRL_DESPLZ
 354+ 9B82 18 03        	jr 2F
 355+ 9B84 CD E4 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B87 C9           2 ret
 357+ 9B88
 358+ 9B88              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B88              ;
 360+ 9B88              ;	24/7/22
 361+ 9B88              ;
 362+ 9B88              ;	Ciclo_completo.
 363+ 9B88              ;
 364+ 9B88              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B88              ;
 366+ 9B88              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B88              ; 	Decrementamos (Columns).
 368+ 9B88              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B88              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B88
 371+ 9B88
 372+ 9B88 3A D3 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B8B FE FF        	cp $ff
 374+ 9B8D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B8F E6 F0        	and $f0
 376+ 9B91 20 28        	jr nz,3F
 377+ 9B93
 378+ 9B93              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B93
 380+ 9B93 3A D3 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B96 47           	ld b,a
 382+ 9B97 3E F8        	ld a,$f8
 383+ 9B99 80           	add b
 384+ 9B9A 32 D3 8B     	ld (CTRL_DESPLZ),a
 385+ 9B9D 18 1C        	jr 3F
 386+ 9B9F 21 CE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA4 32 D3 8B     	ld (CTRL_DESPLZ),a
 390+ 9BA7 3A DE 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BAA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BAC 20 0A        	jr nz,2F
 393+ 9BAE 2A CF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB1 23           	inc hl
 395+ 9BB2 22 CF 8B     	ld (Posicion_actual),hl
 396+ 9BB5 CD DD 94     	call Genera_coordenadas
 397+ 9BB8
 398+ 9BB8              ; Inicia el puntero de Sprite.
 399+ 9BB8
 400+ 9BB8 CD D3 90     2 call Inicia_puntero_objeto_der
 401+ 9BBB C9           3 ret
 402+ 9BBC
 403+ 9BBC              ; ******************************************************************************************************************************************************************************************
 404+ 9BBC              ;
 405+ 9BBC              ;	15/02/23
 406+ 9BBC              ;
 407+ 9BBC              ;	Mov_left.
 408+ 9BBC              ;
 409+ 9BBC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BBC              ;
 411+ 9BBC              Mov_left
 412+ 9BBC
 413+ 9BBC 21 CC 8B     	ld hl,Ctrl_0
 414+ 9BBF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC1              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC1 3A CC 8B     	ld a,(Ctrl_0)
 418+ 9BC4 CB 77        	bit 6,a
 419+ 9BC6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BC8
 421+ 9BC8 CD DE 9C     	call Stop_Amadeus_left
 422+ 9BCB C8           	ret z
 423+ 9BCC 20 4A        	jr nz,8F
 424+ 9BCE
 425+ 9BCE 3A C0 8B     11 ld a,(Coordenada_X)
 426+ 9BD1 A7           	and a
 427+ 9BD2 20 44        	jr nz,8F
 428+ 9BD4
 429+ 9BD4 3A D3 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BD7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BD8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BDA
 433+ 9BDA              ; ---------- ---------- ----------
 434+ 9BDA
 435+ 9BDA 3A E4 8B     	ld a,(Vel_left)
 436+ 9BDD FE 02        	cp 2
 437+ 9BDF 28 0F        	jr z,1F
 438+ 9BE1 38 04        	jr c,6F
 439+ 9BE3 FE 04        	cp 4
 440+ 9BE5 28 12        	jr z,7F
 441+ 9BE7
 442+ 9BE7              ; ---------- ---------- ----------
 443+ 9BE7
 444+ 9BE7 3A D3 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BEA FE F8        	cp $f8
 446+ 9BEC 20 2A        	jr nz,8F
 447+ 9BEE 18 10        	jr 4F
 448+ 9BF0 3A D3 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BF3 FE F9        	cp $f9
 450+ 9BF5 20 21        	jr nz,8F
 451+ 9BF7 18 07        	jr 4F
 452+ 9BF9 3A D3 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BFC FE FB        	cp $fb
 454+ 9BFE 20 18        	jr nz,8F
 455+ 9C00
 456+ 9C00              ; ---------- ---------- ----------
 457+ 9C00
 458+ 9C00              4
 459+ 9C00 CD 06 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C03              ;	call Reinicio
 461+ 9C03
 462+ 9C03              ; ---------- ---------- ----------
 463+ 9C03
 464+ 9C03 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C05 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C06
 467+ 9C06              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C06              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C06
 470+ 9C06 CD 1F 9C     	call DESPLZ_IZQ
 471+ 9C09 C1           	pop bc
 472+ 9C0A 10 F9        	djnz 5B
 473+ 9C0C 2A CF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C0F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C10 22 CF 8B     	ld (Posicion_actual),hl
 476+ 9C13 CD DD 94     	call Genera_coordenadas
 477+ 9C16 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C18
 479+ 9C18              ; ---------- ---------- ----------
 480+ 9C18
 481+ 9C18              ; Movemos, no hay recolocación.
 482+ 9C18
 483+ 9C18 2A CF 8B     8 ld hl,(Posicion_actual)
 484+ 9C1B CD 1F 9C     	call DESPLZ_IZQ
 485+ 9C1E C9           2 ret
 486+ 9C1F
 487+ 9C1F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C1F              ;
 489+ 9C1F              ;	22/9/22
 490+ 9C1F
 491+ 9C1F              DESPLZ_IZQ
 492+ 9C1F
 493+ 9C1F CD 2E 9C     	call Desplaza_izquierda
 494+ 9C22 CD 7A 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C25 CD A2 9C     	call Ciclo_completo_2
 496+ 9C28 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C2B CB BE        	res 7,(hl)
 498+ 9C2D C9           	ret
 499+ 9C2E
 500+ 9C2E              Desplaza_izquierda
 501+ 9C2E
 502+ 9C2E 3A E4 8B     	ld a,(Vel_left)
 503+ 9C31 47           	ld b,a
 504+ 9C32 2A DA 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C35 23           1 inc hl
 506+ 9C36 23           	inc hl
 507+ 9C37 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C39 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C3C CD BE 90     	call Extrae_address
 510+ 9C3F 22 D1 8B     	ld (Puntero_objeto),hl
 511+ 9C42
 512+ 9C42              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C42
 514+ 9C42              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C42              ; Cuántos movimientos hemos hecho ??
 516+ 9C42              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C42
 518+ 9C42 2A D6 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C45 EB           	ex de,hl
 520+ 9C46 A7           	and a
 521+ 9C47 ED 52        	sbc hl,de
 522+ 9C49 CB 3D        	srl l
 523+ 9C4B 3E 08        6 ld a,8
 524+ 9C4D 95           	sub l
 525+ 9C4E 30 1E        	jr nc,3F
 526+ 9C50
 527+ 9C50              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C50              ; B="0".
 529+ 9C50
 530+ 9C50 04           4 inc b
 531+ 9C51 3C           	inc a
 532+ 9C52 20 FC        	jr nz,4B
 533+ 9C54 78           	ld a,b
 534+ 9C55 08           	ex af,af
 535+ 9C56 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C59 23           5 inc hl
 537+ 9C5A 23           	inc hl
 538+ 9C5B 10 FC        	djnz 5B
 539+ 9C5D 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C60 CD BE 90     	call Extrae_address
 541+ 9C63 22 D1 8B     	ld (Puntero_objeto),hl
 542+ 9C66
 543+ 9C66              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C66              ; _(Posicion_actual).
 545+ 9C66
 546+ 9C66 21 CF 8B     	ld hl,Posicion_actual
 547+ 9C69 35           	dec (hl)
 548+ 9C6A 08           	ex af,af
 549+ 9C6B 6F           	ld l,a
 550+ 9C6C 18 DD        	jr 6B
 551+ 9C6E
 552+ 9C6E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C6E
 554+ 9C6E 47           3 ld b,a
 555+ 9C6F 2A D4 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C72 23           2 inc hl
 557+ 9C73 23           	inc hl
 558+ 9C74 10 FC        	djnz 2B
 559+ 9C76 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C79 C9           8 ret
 561+ 9C7A
 562+ 9C7A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C7A              ;
 564+ 9C7A              ;	modifica_parametros_1er_DESPLZ
 565+ 9C7A              ;
 566+ 9C7A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C7A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C7A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C7A
 570+ 9C7A 3A D3 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C7D A7           	and a
 572+ 9C7E 20 1E        	jr nz,1F
 573+ 9C80 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C81 32 D3 8B         ld (CTRL_DESPLZ),a
 575+ 9C84 21 CE 8B     	ld hl,Columns
 576+ 9C87 34           	inc (hl)
 577+ 9C88 3A DE 8B     	ld a,(Cuad_objeto)
 578+ 9C8B E6 01        	and 1
 579+ 9C8D 20 0F        	jr nz,1F
 580+ 9C8F 2A CF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C92 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C93 22 CF 8B     	ld (Posicion_actual),hl
 583+ 9C96 CD DD 94     	call Genera_coordenadas
 584+ 9C99 CD F5 9C     	call Dec_CTRL_DESPLZ
 585+ 9C9C 18 03        	jr 2F
 586+ 9C9E CD F5 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA1 C9           2 ret
 588+ 9CA2
 589+ 9CA2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA2
 591+ 9CA2 3A D3 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA5 FE F7        	cp $f7
 593+ 9CA7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA9 30 2C        	jr nc,3F
 595+ 9CAB
 596+ 9CAB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CAB
 598+ 9CAB 06 00        	ld b,0
 599+ 9CAD 04           4 inc b
 600+ 9CAE 3C           	inc a
 601+ 9CAF FE F7        	cp $f7
 602+ 9CB1 20 FA        	jr nz,4B
 603+ 9CB3 3E FF        	ld a,$ff
 604+ 9CB5 90           	sub b
 605+ 9CB6 32 D3 8B     	ld (CTRL_DESPLZ),a
 606+ 9CB9 18 1C        	jr 3F
 607+ 9CBB
 608+ 9CBB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CBB
 610+ 9CBB 21 CE 8B     1 ld hl,Columns
 611+ 9CBE 35           	dec (hl)
 612+ 9CBF AF           	xor a
 613+ 9CC0 32 D3 8B     	ld (CTRL_DESPLZ),a
 614+ 9CC3 3A DE 8B     	ld a,(Cuad_objeto)
 615+ 9CC6 E6 01        	and 1
 616+ 9CC8 28 0A        	jr z,2F
 617+ 9CCA 2A CF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CCD 2B           	dec hl
 619+ 9CCE 22 CF 8B     	ld (Posicion_actual),hl
 620+ 9CD1 CD DD 94     	call Genera_coordenadas
 621+ 9CD4
 622+ 9CD4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD4
 624+ 9CD4 CD E6 90     2 call Inicia_puntero_objeto_izq
 625+ 9CD7 C9           3 ret
 626+ 9CD8
 627+ 9CD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CD8              ;
 629+ 9CD8              ;	19/10/22
 630+ 9CD8              ;
 631+ 9CD8              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CD8              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CD8
 634+ 9CD8 3A C0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CDB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CDD C9           	ret
 637+ 9CDE
 638+ 9CDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CDE              ;
 640+ 9CDE              ;	19/10/22
 641+ 9CDE              ;
 642+ 9CDE              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CDE              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CDE
 645+ 9CDE 3A C0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE3 C9           	ret
 648+ 9CE4
 649+ 9CE4              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE4              ;
 651+ 9CE4              ;	24/7/22
 652+ 9CE4              ;
 653+ 9CE4              ;	Inc_CTRL_DESPLZ
 654+ 9CE4              ;
 655+ 9CE4              ;
 656+ 9CE4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE4
 658+ 9CE4 21 D3 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CE7 3A E5 8B     	ld a,(Vel_right)
 660+ 9CEA A7           	and a
 661+ 9CEB 28 06        	jr z,1F
 662+ 9CED 47           	ld b,a
 663+ 9CEE 34           3 inc (hl)
 664+ 9CEF 10 FD        	djnz 3B
 665+ 9CF1 18 01        	jr 2F
 666+ 9CF3 34           1 inc (hl)
 667+ 9CF4 C9           2 ret
 668+ 9CF5
 669+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF5              ;
 671+ 9CF5              ;	5/2/23
 672+ 9CF5              ;
 673+ 9CF5              ;	Dec_CTRL_DESPLZ
 674+ 9CF5              ;
 675+ 9CF5              ;
 676+ 9CF5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF5
 678+ 9CF5 21 D3 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CF8 3A E4 8B     	ld a,(Vel_left)
 680+ 9CFB A7           	and a
 681+ 9CFC 28 06        	jr z,1F
 682+ 9CFE 47           	ld b,a
 683+ 9CFF 35           3 dec (hl)
 684+ 9D00 10 FD        	djnz 3B
 685+ 9D02 18 01        	jr 2F
 686+ 9D04 35           1 dec (hl)
 687+ 9D05 C9           2 ret
 688+ 9D06
 689+ 9D06              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D06
 691+ 9D06 2A CF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D09 01 1F 00     	ld bc,31
 693+ 9D0C A7           	and a
 694+ 9D0D ED 4A        	adc hl,bc
 695+ 9D0F 22 CF 8B     	ld (Posicion_actual),hl
 696+ 9D12 21 CC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D15 CB C6        	set 0,(hl)
 698+ 9D17 C9           	ret
 699+ 9D18
 700+ 9D18              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D18
 702+ 9D18 2A CF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D1B 01 1F 00     	ld bc,31
 704+ 9D1E A7           	and a
 705+ 9D1F ED 42        	sbc hl,bc
 706+ 9D21 22 CF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D24 21 CC 8B     	ld hl,Ctrl_0
 708+ 9D27 CB CE        	set 1,(hl)
 709+ 9D29 C9           	ret
 710+ 9D2A
 711+ 9D2A              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D2A
 713+ 9D2A 24           Reaparece_abajo inc h
 714+ 9D2B 01 E0 17     	ld bc,$17e0
 715+ 9D2E A7           	and a
 716+ 9D2F ED 4A        	adc hl,bc
 717+ 9D31 22 CF 8B     	ld (Posicion_actual),hl
 718+ 9D34 21 CC 8B     	ld hl,Ctrl_0
 719+ 9D37 CB D6        	set 2,(hl)
 720+ 9D39 C9           	ret
 721+ 9D3A
 722+ 9D3A              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D3A
 724+ 9D3A 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D3D A7           	and a
 726+ 9D3E ED 42        	sbc hl,bc
 727+ 9D40 22 CF 8B     	ld (Posicion_actual),hl
 728+ 9D43 21 CC 8B     	ld hl,Ctrl_0
 729+ 9D46 CB DE        	set 3,(hl)
 730+ 9D48 C9           	ret
 731+ 9D49
 732+ 9D49              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D49              ;
 734+ 9D49              ;	15/07/23
 735+ 9D49
 736+ 9D49              Reinicio
 737+ 9D49
 738+ 9D49              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D49
 740+ 9D49 AF           	xor a
 741+ 9D4A 21 F4 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D4D CD 6B 9D     	call Limpia_contenido_hl
 743+ 9D50
 744+ 9D50 21 CF 8B     	ld hl,Posicion_actual
 745+ 9D53 CD 6B 9D     	call Limpia_contenido_hl
 746+ 9D56
 747+ 9D56 CD BF 92     	call Inicializa_Puntero_indice_mov
 748+ 9D59 CD 6A 9E     	call Inicia_Puntero_mov
 749+ 9D5C
 750+ 9D5C 21 F6 8B     	ld hl,Incrementa_puntero
 751+ 9D5F 06 05        	ld b,5
 752+ 9D61 77           1 ld (hl),a
 753+ 9D62 23           	inc hl
 754+ 9D63 10 FC        	djnz 1B
 755+ 9D65
 756+ 9D65 21 CB 8B     	ld hl,Ctrl_2
 757+ 9D68 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D6A
 759+ 9D6A C9           	ret
 760+ 9D6B
 761+ 9D6B 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D6C 23           	inc hl
 763+ 9D6D 77           	ld (hl),a
 764+ 9D6E C9           	ret
 765+ 9D6F
 766+ 9D6F              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D6F              ;
 768+ 9D6F              ;	18/6/24
 769+ 9D6F              ;
 770+ 9D6F
 771+ 9D6F              Amadeus_a_izquierda
 772+ 9D6F
 773+ 9D6F              ;	Actualiza contador de movimientos.
 774+ 9D6F
 775+ 9D6F 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D72 35           	dec (hl)
 777+ 9D73 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D75
 779+ 9D75 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D78 2B           	dec hl
 781+ 9D79 2B           	dec hl
 782+ 9D7A 2B           	dec hl
 783+ 9D7B 2B           	dec hl
 784+ 9D7C 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D7F
 786+ 9D7F 21 33 8C     	ld hl,Ctrl_3
 787+ 9D82 CB EE        	set 5,(hl)
 788+ 9D84
 789+ 9D84 C9           	ret
 790+ 9D85
 791+ 9D85 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D86 C9           	ret
 793+ 9D87
 794+ 9D87
 795+ 9D87              Amadeus_a_derecha
 796+ 9D87
 797+ 9D87              ;	Actualiza contador de movimientos.
 798+ 9D87
 799+ 9D87 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D8A 34           	inc (hl)
 801+ 9D8B 3E 7A        	ld a,$7a
 802+ 9D8D BE           	cp (hl)
 803+ 9D8E 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D90
 805+ 9D90 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D93 23           	inc hl
 807+ 9D94 23           	inc hl
 808+ 9D95 23           	inc hl
 809+ 9D96 23           	inc hl
 810+ 9D97 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D9A
 812+ 9D9A 21 33 8C     	ld hl,Ctrl_3
 813+ 9D9D CB EE        	set 5,(hl)
 814+ 9D9F C9           	ret
 815+ 9DA0
 816+ 9DA0 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA1 C9           	ret
# file closed: Direcciones.asm
2061  9DA2              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA2              ; ----- ----- ----- ----- -----
   2+ 9DA2              ;
   3+ 9DA2              ;   28/12/23
   4+ 9DA2
   5+ 9DA2              Movimiento
   6+ 9DA2
   7+ 9DA2              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA2
   9+ 9DA2 3A CB 8B         ld a,(Ctrl_2)
  10+ 9DA5 CB 57            bit 2,a
  11+ 9DA7 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA9
  13+ 9DA9 2A F2 8B         ld hl,(Puntero_mov)
  14+ 9DAC 7E               ld a,(hl)
  15+ 9DAD
  16+ 9DAD              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DAD
  18+ 9DAD              Inicia_desplazamiento.
  19+ 9DAD
  20+ 9DAD              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DAD
  22+ 9DAD CD A0 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DB0
  24+ 9DB0              ; Iniciamos (Repetimos_mov).
  25+ 9DB0
  26+ 9DB0 7E               ld a,(hl)
  27+ 9DB1 E6 0F            and $0f
  28+ 9DB3 32 F8 8B         ld (Repetimos_desplazamiento),a
  29+ 9DB6 32 F9 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB9
  31+ 9DB9              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB9
  33+ 9DB9 23               inc hl
  34+ 9DBA 7E               ld a,(hl)
  35+ 9DBB 32 FB 8B         ld (Cola_de_desplazamiento),a
  36+ 9DBE 2B               dec hl
  37+ 9DBF
  38+ 9DBF 21 CB 8B         ld hl,Ctrl_2
  39+ 9DC2 CB D6            set 2,(hl)
  40+ 9DC4
  41+ 9DC4              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC4              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC4
  44+ 9DC4              Desplazamiento_iniciado
  45+ 9DC4
  46+ 9DC4 CD 74 9E         call Aplica_desplazamiento
  47+ 9DC7
  48+ 9DC7              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DC7
  50+ 9DC7 3A 33 8C         ld a,(Ctrl_3)
  51+ 9DCA CB 4F            bit 1,a
  52+ 9DCC C0               ret nz
  53+ 9DCD
  54+ 9DCD 21 F8 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DD0 35               dec (hl)
  56+ 9DD1 C0               ret nz
  57+ 9DD2
  58+ 9DD2              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD2              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD2              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD2
  62+ 9DD2 3A FB 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD5 A7               and a
  64+ 9DD6 CC C9 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD9 28 30            jr z,Reinicia_el_movimiento
  66+ 9DDB
  67+ 9DDB FE FF            cp $ff
  68+ 9DDD 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DDF
  70+ 9DDF FE FE            cp $fe
  71+ 9DE1 CC 4E 9E         call z,Fijamos_bucle
  72+ 9DE4 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE6
  74+ 9DE6 FE FD            cp $fd
  75+ 9DE8 20 11            jr nz,1F
  76+ 9DEA
  77+ 9DEA              ; ---
  78+ 9DEA              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DEA
  80+ 9DEA 3A CB 8B         ld a,(Ctrl_2)
  81+ 9DED CB 5F            bit 3,a
  82+ 9DEF 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF1
  84+ 9DF1              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF1
  86+ 9DF1 21 CB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF4 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF6
  89+ 9DF6 CD 5F 9E         call Inicia_Repetimos_movimiento
  90+ 9DF9 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DFB              ; ---
  92+ 9DFB
  93+ 9DFB FE 01        1 cp 1
  94+ 9DFD CA 38 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E00
  96+ 9E00 3D               dec a
  97+ 9E01 32 FB 8B         ld (Cola_de_desplazamiento),a
  98+ 9E04
  99+ 9E04 3A F9 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E07 32 F8 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E0A              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E0A C9               ret
 103+ 9E0B
 104+ 9E0B              Reinicia_el_movimiento
 105+ 9E0B
 106+ 9E0B 3A CB 8B         ld a,(Ctrl_2)
 107+ 9E0E CB 5F            bit 3,a
 108+ 9E10 28 1B            jr z,2F
 109+ 9E12
 110+ 9E12              ; (Cola_de_desplazamiento)="254".
 111+ 9E12
 112+ 9E12 21 FA 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E15 35               dec (hl)
 114+ 9E16 20 15            jr nz,2F
 115+ 9E18
 116+ 9E18              ; Fin de las repeticiones del último movimiento.
 117+ 9E18
 118+ 9E18 21 CB 8B         ld hl,Ctrl_2
 119+ 9E1B CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E1D
 121+ 9E1D 2A F2 8B         ld hl,(Puntero_mov)
 122+ 9E20 23               inc hl
 123+ 9E21 23               inc hl
 124+ 9E22 23               inc hl
 125+ 9E23 22 F2 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E26              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E26 7E               ld a,(hl)
 128+ 9E27 32 FB 8B         ld (Cola_de_desplazamiento),a
 129+ 9E2A
 130+ 9E2A C3 D2 9D         jp Cola
 131+ 9E2D
 132+ 9E2D CD 6A 9E     2 call Inicia_Puntero_mov
 133+ 9E30
 134+ 9E30 21 CB 8B         ld hl,Ctrl_2
 135+ 9E33 CB 96            res 2,(hl)
 136+ 9E35
 137+ 9E35 C3 A2 9D         jp Movimiento
 138+ 9E38
 139+ 9E38              Siguiente_desplazamiento
 140+ 9E38
 141+ 9E38              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E38              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E38
 144+ 9E38 21 CB 8B         ld hl,Ctrl_2
 145+ 9E3B CB 96            res 2,(hl)
 146+ 9E3D
 147+ 9E3D 2A F2 8B         ld hl,(Puntero_mov)
 148+ 9E40 23               inc hl
 149+ 9E41 23               inc hl
 150+ 9E42 22 F2 8B         ld (Puntero_mov),hl
 151+ 9E45
 152+ 9E45 7E               ld a,(hl)
 153+ 9E46 A7               and a
 154+ 9E47 CC C9 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E4A CA 0B 9E         jp z,Reinicia_el_movimiento
 156+ 9E4D
 157+ 9E4D C9               ret
 158+ 9E4E
 159+ 9E4E              ; Subrutinas -----------------------------------------
 160+ 9E4E              ; ---------- --------- --------- ---------- ----------
 161+ 9E4E              ;
 162+ 9E4E              ;   24/07/23
 163+ 9E4E              ;
 164+ 9E4E              ;   Fijamos_bucle
 165+ 9E4E              ;
 166+ 9E4E              ;
 167+ 9E4E
 168+ 9E4E              Fijamos_bucle
 169+ 9E4E
 170+ 9E4E 3A F6 8B         ld a,(Incrementa_puntero)
 171+ 9E51 3C               inc a
 172+ 9E52 32 F7 8B         ld (Incrementa_puntero_backup),a
 173+ 9E55
 174+ 9E55 CD C9 9E         call Incrementa_Puntero_indice_mov
 175+ 9E58 2A F0 8B         ld hl,(Puntero_indice_mov)
 176+ 9E5B 22 F4 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E5E C9               ret
 178+ 9E5F
 179+ 9E5F              ; ---------- --------- --------- ---------- ----------
 180+ 9E5F              ;
 181+ 9E5F              ;   07/7/23
 182+ 9E5F              ;
 183+ 9E5F              ;   Inicia_Repetimos_movimiento
 184+ 9E5F              ;
 185+ 9E5F              ;
 186+ 9E5F
 187+ 9E5F              Inicia_Repetimos_movimiento
 188+ 9E5F
 189+ 9E5F              ; Iniciamos (Repetimos_movimiento).
 190+ 9E5F
 191+ 9E5F DD 2A F2 8B      ld ix,(Puntero_mov)
 192+ 9E63 DD 7E 02         ld a,(ix+2)
 193+ 9E66 32 FA 8B         ld (Repetimos_movimiento),a
 194+ 9E69
 195+ 9E69 C9               ret
 196+ 9E6A
 197+ 9E6A              ; ---------- --------- --------- ---------- ----------
 198+ 9E6A              ;
 199+ 9E6A              ;   26/6/23
 200+ 9E6A              ;
 201+ 9E6A              ;   Inicia_Puntero_mov
 202+ 9E6A              ;
 203+ 9E6A              ;
 204+ 9E6A
 205+ 9E6A 2A F0 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E6D CD BE 90         call Extrae_address
 207+ 9E70 22 F2 8B         ld (Puntero_mov),hl
 208+ 9E73 C9               ret
 209+ 9E74
 210+ 9E74              ; ---------- --------- --------- ---------- ----------
 211+ 9E74              ;
 212+ 9E74              ;   27/06/23
 213+ 9E74              ;
 214+ 9E74              ;   Aplica_movimiento.
 215+ 9E74
 216+ 9E74              Aplica_desplazamiento
 217+ 9E74
 218+ 9E74              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E74
 220+ 9E74 2A F2 8B         ld hl, (Puntero_mov)
 221+ 9E77
 222+ 9E77 7E               ld a,(hl)
 223+ 9E78 E6 F0            and $f0
 224+ 9E7A C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E7B
 226+ 9E7B CB 7E            bit 7,(hl)
 227+ 9E7D 28 03            jr z,1F
 228+ 9E7F CD 56 9A         call Mov_up
 229+ 9E82 2A F2 8B     1 ld hl, (Puntero_mov)
 230+ 9E85 CB 76            bit 6,(hl)
 231+ 9E87 28 03            jr z,2F
 232+ 9E89 CD 1D 9A         call Mov_down
 233+ 9E8C
 234+ 9E8C              ; Se ha aplicado reinicio ???
 235+ 9E8C              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E8C
 237+ 9E8C              ;    ld a,(Ctrl_3)
 238+ 9E8C              ;    bit 1,a
 239+ 9E8C              ;    ret nz
 240+ 9E8C
 241+ 9E8C 2A F2 8B     2 ld hl, (Puntero_mov)
 242+ 9E8F CB 6E            bit 5,(hl)
 243+ 9E91 28 03            jr z,3F
 244+ 9E93 CD BC 9B         call Mov_left
 245+ 9E96 2A F2 8B     3 ld hl, (Puntero_mov)
 246+ 9E99 CB 66            bit 4,(hl)
 247+ 9E9B C8               ret z
 248+ 9E9C CD 99 9A         call Mov_right
 249+ 9E9F C9               ret
 250+ 9EA0
 251+ 9EA0              ; ---------- --------- --------- ---------- ----------
 252+ 9EA0              ;
 253+ 9EA0              ;   26/06/23
 254+ 9EA0              ;
 255+ 9EA0              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EA0
 257+ 9EA0              Ajusta_velocidad_desplazamiento
 258+ 9EA0
 259+ 9EA0              ; 1er byte de la cadena de movimiento.
 260+ 9EA0              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EA0
 262+ 9EA0 CD BE 9E         call Extrae_nibble_alto
 263+ 9EA3
 264+ 9EA3 32 E6 8B         ld (Vel_up),a
 265+ 9EA6 79               ld a,c
 266+ 9EA7 E6 0F            and $0f
 267+ 9EA9 32 E7 8B         ld (Vel_down),a
 268+ 9EAC
 269+ 9EAC              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EAC              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EAC
 272+ 9EAC 23               inc hl
 273+ 9EAD CD BE 9E         call Extrae_nibble_alto
 274+ 9EB0
 275+ 9EB0 32 E4 8B         ld (Vel_left),a
 276+ 9EB3 79               ld a,c
 277+ 9EB4 E6 0F            and $0f
 278+ 9EB6 32 E5 8B         ld (Vel_right),a
 279+ 9EB9
 280+ 9EB9              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB9
 282+ 9EB9 23               inc hl
 283+ 9EBA 22 F2 8B         ld (Puntero_mov),hl
 284+ 9EBD C9               ret
 285+ 9EBE
 286+ 9EBE 06 04        Extrae_nibble_alto ld b,4
 287+ 9EC0 7E               ld a,(hl)
 288+ 9EC1 4F               ld c,a
 289+ 9EC2 E6 F0            and $f0
 290+ 9EC4 CB 3F        1 srl a
 291+ 9EC6 10 FC            djnz 1B
 292+ 9EC8 C9               ret
 293+ 9EC9
 294+ 9EC9              ; ---------- --------- --------- ---------- ----------
 295+ 9EC9              ;
 296+ 9EC9              ;   5/7/23
 297+ 9EC9              ;
 298+ 9EC9              ;   Incrementa_Puntero_indice_mov
 299+ 9EC9
 300+ 9EC9              Incrementa_Puntero_indice_mov
 301+ 9EC9
 302+ 9EC9 21 F6 8B         ld hl,Incrementa_puntero
 303+ 9ECC 34               inc (hl)
 304+ 9ECD
 305+ 9ECD 2A F0 8B         ld hl,(Puntero_indice_mov)
 306+ 9ED0 01 02 00         ld bc,2
 307+ 9ED3 A7               and a
 308+ 9ED4 09               add hl,bc
 309+ 9ED5 22 F0 8B         ld (Puntero_indice_mov),hl
 310+ 9ED8
 311+ 9ED8 7E               ld a,(hl)
 312+ 9ED9 A7               and a
 313+ 9EDA
 314+ 9EDA              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EDA
 316+ 9EDA              ;    jr z,$
 317+ 9EDA
 318+ 9EDA              ;! Reinicia el Patrón de movimiento.
 319+ 9EDA
 320+ 9EDA CC DF 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EDD
 322+ 9EDD AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EDE
 324+ 9EDE C9               ret
 325+ 9EDF
 326+ 9EDF              ; ---------- --------- --------- ---------- ----------
 327+ 9EDF              ;
 328+ 9EDF              ;   15/01/24
 329+ 9EDF              ;
 330+ 9EDF              ;   Inicializa_Puntero_indice_mov
 331+ 9EDF
 332+ 9EDF              Inicializa_Puntero_indice_mov_2
 333+ 9EDF
 334+ 9EDF              ; Existe etiqueta de bucle principal???
 335+ 9EDF
 336+ 9EDF 2A F4 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE2 24               inc h
 338+ 9EE3 25               dec h
 339+ 9EE4 28 05            jr z,2F
 340+ 9EE6
 341+ 9EE6 22 F0 8B         ld (Puntero_indice_mov),hl
 342+ 9EE9 18 14            jr 3F
 343+ 9EEB
 344+ 9EEB              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EEB
 346+ 9EEB 3A F6 8B     2 ld a,(Incrementa_puntero)
 347+ 9EEE 47               ld b,a
 348+ 9EEF
 349+ 9EEF 2A F0 8B         ld hl,(Puntero_indice_mov)
 350+ 9EF2 2B           1 dec hl
 351+ 9EF3 2B               dec hl
 352+ 9EF4 10 FC            djnz 1B
 353+ 9EF6 22 F0 8B         ld (Puntero_indice_mov),hl
 354+ 9EF9
 355+ 9EF9 AF               xor a
 356+ 9EFA 32 F6 8B         ld (Incrementa_puntero),a
 357+ 9EFD 18 06            jr 4F
 358+ 9EFF
 359+ 9EFF 3A F7 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F02 32 F6 8B         ld (Incrementa_puntero),a
 361+ 9F05 C9           4 ret
 362+ 9F06
 363+ 9F06              ; ----------------------------------------------------------------------
 364+ 9F06              ;
 365+ 9F06              ;   30/01/24
 366+ 9F06              ;
 367+ 9F06              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F06
 369+ 9F06 3A BF 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F09 CD 5A 94         call Calcula_salto_en_BC
 371+ 9F0C 21 E8 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F0F A7               and a
 373+ 9F10 ED 4A            adc hl,bc
 374+ 9F12 C9               ret
 375+ 9F13
 376+ 9F13              ; ----------------------------------------------------------------------
 377+ 9F13              ;
 378+ 9F13              ;   30/01/24
 379+ 9F13              ;
 380+ 9F13              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F13              ;
 382+ 9F13              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F13
 384+ 9F13 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F14 23               inc hl
 386+ 9F15 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F16 69               ld l,c
 388+ 9F17 60               ld h,b
 389+ 9F18 22 C8 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F1B C9               ret
 391+ 9F1C
# file closed: Movimiento.asm
2062  9F1C              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F1C              ; --------------------------------------------------------------------------------------
   2+ 9F1C              ;
   3+ 9F1C              ;   18/10/24
   4+ 9F1C              ;
   5+ 9F1C
   6+ 9F1C              Pinta_disparos_Entidades
   7+ 9F1C
   8+ 9F1C 21 35 8C         ld hl,Ctrl_5
   9+ 9F1F CB 56            bit 2,(hl)
  10+ 9F21 20 FE            jr nz,$
  11+ 9F23
  12+ 9F23 ED 73 0C 8C      ld (Stack),sp
  13+ 9F27 ED 7B 1E 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  14+ 9F2B FD E1            pop iy
  15+ 9F2D C1               pop bc                          ; 1er .db IYL
  16+ 9F2E              ;                                   ; 2º  .db IYH
  17+ 9F2E              ;                                   ; 3er .db C.
  18+ 9F2E
  19+ 9F2E 06 02            ld b,2
  20+ 9F30
  21+ 9F30              ;   Album vacío ???
  22+ 9F30
  23+ 9F30 FD 7D            ld a,iyl
  24+ 9F32 FD 84            add iyh
  25+ 9F34 81               add c
  26+ 9F35 28 23            jr z,1F
  27+ 9F37
  28+ 9F37              ;   Imprime album, (contiene datos).
  29+ 9F37
  30+ 9F37 3B               dec sp
  31+ 9F38
  32+ 9F38 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F39
  34+ 9F39              ; Imprime el 1er scanline del disparo.
  35+ 9F39
  36+ 9F39 FD 7D            ld a,iyl
  37+ 9F3B AE               xor (hl)
  38+ 9F3C 77               ld (hl),a
  39+ 9F3D
  40+ 9F3D 2C               inc l
  41+ 9F3E
  42+ 9F3E FD 7C            ld a,iyh
  43+ 9F40 AE               xor (hl)
  44+ 9F41 77               ld (hl),a
  45+ 9F42
  46+ 9F42 2C               inc l
  47+ 9F43
  48+ 9F43 79               ld a,c
  49+ 9F44 AE               xor (hl)
  50+ 9F45 77               ld (hl),a
  51+ 9F46
  52+ 9F46              ; Imprime el 2º scanline del disparo.
  53+ 9F46
  54+ 9F46 E1               pop hl
  55+ 9F47
  56+ 9F47 FD 7D            ld a,iyl
  57+ 9F49 AE               xor (hl)
  58+ 9F4A 77               ld (hl),a
  59+ 9F4B
  60+ 9F4B 2C               inc l
  61+ 9F4C
  62+ 9F4C FD 7C            ld a,iyh
  63+ 9F4E AE               xor (hl)
  64+ 9F4F 77               ld (hl),a
  65+ 9F50
  66+ 9F50 2C               inc l
  67+ 9F51
  68+ 9F51 79               ld a,c
  69+ 9F52 AE               xor (hl)
  70+ 9F53 77               ld (hl),a
  71+ 9F54
  72+ 9F54 ED 7B 18 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
  73+ 9F58 18 A5            jr 3B
  74+ 9F5A 10 F8        1 djnz 2B
  75+ 9F5C ED 7B 0C 8C      ld sp,(Stack)
  76+ 9F60 C9               ret
  77+ 9F61
  78+ 9F61              ; --------------------------------------------------------------------------------------
  79+ 9F61              ;
  80+ 9F61              ;   15/10/24
  81+ 9F61              ;
  82+ 9F61
  83+ 9F61              Motor_de_disparos_entidades
  84+ 9F61
  85+ 9F61 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
  86+ 9F64 FE 07            cp 7
  87+ 9F66 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  88+ 9F67
  89+ 9F67 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  90+ 9F69 21 23 89         ld hl,Indice_de_disparos_entidades
  91+ 9F6C
  92+ 9F6C CD BE 90     1 call Extrae_address
  93+ 9F6F 1C               inc e
  94+ 9F70 1C               inc e
  95+ 9F71 ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  96+ 9F75
  97+ 9F75               ; Caja vacía ???
  98+ 9F75
  99+ 9F75 2C               inc l
 100+ 9F76
 101+ 9F76 7E               ld a,(hl)
 102+ 9F77 A7               and a
 103+ 9F78 28 19            jr z,3F                                                              ; Caja vacía.
 104+ 9F7A
 105+ 9F7A              ; --- Trabajamos con caja:
 106+ 9F7A
 107+ 9F7A              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
 108+ 9F7A
 109+ 9F7A CD A9 9F         call Rota_disparo_si_procede
 110+ 9F7D
 111+ 9F7D              ; ------------------------------------------------------------
 112+ 9F7D
 113+ 9F7D 2D               dec l
 114+ 9F7E 2D               dec l
 115+ 9F7F 2D               dec l
 116+ 9F80
 117+ 9F80 CD BE 90         call Extrae_address
 118+ 9F83              ;   (Puntero_de_impresion) del disparo en HL.
 119+ 9F83
 120+ 9F83              ;! Velocidad del disparo de entidades.
 121+ 9F83
 122+ 9F83 CD D7 99         call NextScan
 123+ 9F86
 124+ 9F86              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 125+ 9F86
 126+ 9F86 CD 97 9F         call Fin_de_disparo_de_entidad
 127+ 9F89
 128+ 9F89 EB               ex de,hl
 129+ 9F8A
 130+ 9F8A 73               ld (hl),e
 131+ 9F8B 23               inc hl
 132+ 9F8C 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 133+ 9F8D
 134+ 9F8D 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 135+ 9F90 18 02            jr 2F
 136+ 9F92
 137+ 9F92 C9               ret
 138+ 9F93
 139+ 9F93 EB           3 ex de,hl
 140+ 9F94 10 D6        2 djnz 1B
 141+ 9F96
 142+ 9F96 C9               ret
 143+ 9F97
 144+ 9F97              ; ------------- ------------- ------------
 145+ 9F97              ;
 146+ 9F97              ;   25/9/24
 147+ 9F97
 148+ 9F97              Fin_de_disparo_de_entidad
 149+ 9F97
 150+ 9F97 7C               ld a,h
 151+ 9F98 FE 54            cp $54
 152+ 9F9A D8               ret c
 153+ 9F9B
 154+ 9F9B D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 155+ 9F9C
 156+ 9F9C 5D               ld e,l
 157+ 9F9D 54               ld d,h
 158+ 9F9E
 159+ 9F9E 21 E0 57         ld hl,$57e0
 160+ 9FA1 ED 52            sbc hl,de
 161+ 9FA3
 162+ 9FA3 38 39            jr c,Elimina_disparo_entidad
 163+ 9FA5
 164+ 9FA5 6B               ld l,e
 165+ 9FA6 62               ld h,d
 166+ 9FA7
 167+ 9FA7 D1               pop de
 168+ 9FA8
 169+ 9FA8 C9               ret
 170+ 9FA9
 171+ 9FA9              ; ----------------------------------------------------------
 172+ 9FA9              ;
 173+ 9FA9              ;   08/10/24
 174+ 9FA9
 175+ 9FA9              Rota_disparo_si_procede
 176+ 9FA9
 177+ 9FA9              ;   Nos situamos en el byte alto de (Control).
 178+ 9FA9
 179+ 9FA9 CB 76            bit 6,(hl)
 180+ 9FAB 20 03            jr nz,Decrementa_contador_de_control_de_disparo
 181+ 9FAD CB 7E            bit 7,(hl)
 182+ 9FAF C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 183+ 9FB0
 184+ 9FB0              Decrementa_contador_de_control_de_disparo
 185+ 9FB0
 186+ 9FB0 35               dec (hl)
 187+ 9FB1 7E               ld a,(hl)
 188+ 9FB2 E6 07            and 7
 189+ 9FB4 C0               ret nz
 190+ 9FB5
 191+ 9FB5              Rotamos_disparo_segun_proceda
 192+ 9FB5
 193+ 9FB5              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 194+ 9FB5
 195+ 9FB5 3E 07            ld a,7
 196+ 9FB7 86               add (hl)
 197+ 9FB8 77               ld (hl),a                                                           ; Contador reinicializado.
 198+ 9FB9
 199+ 9FB9 CD D2 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 200+ 9FBC
 201+ 9FBC CB 76            bit 6,(hl)
 202+ 9FBE 20 05            jr nz,Rota_a_derecha
 203+ 9FC0
 204+ 9FC0
 205+ 9FC0              Rota_a_izq
 206+ 9FC0
 207+ 9FC0 F3               di
 208+ 9FC1 18 FE            jr $
 209+ 9FC3 FB               ei
 210+ 9FC4
 211+ 9FC4 C9               ret
 212+ 9FC5
 213+ 9FC5              Rota_a_derecha
 214+ 9FC5
 215+ 9FC5 FD CB 00 3E      srl (iy+0)
 216+ 9FC9 FD CB 01 3E      srl (iy+1)
 217+ 9FCD FD CB 02 3E      srl (iy+2)
 218+ 9FD1
 219+ 9FD1              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 220+ 9FD1
 221+ 9FD1 C9               ret
 222+ 9FD2
 223+ 9FD2              ; ------------ ----------- ------------
 224+ 9FD2              ;
 225+ 9FD2              ;   11/10/24
 226+ 9FD2
 227+ 9FD2              Puntero_objeto_en_IY
 228+ 9FD2
 229+ 9FD2 E5               push hl
 230+ 9FD3
 231+ 9FD3 2D               dec l
 232+ 9FD4 2D               dec l
 233+ 9FD5 2D               dec l
 234+ 9FD6 2D               dec l
 235+ 9FD7 2D               dec l
 236+ 9FD8 2D               dec l
 237+ 9FD9
 238+ 9FD9 E5               push hl
 239+ 9FDA FD E1            pop iy
 240+ 9FDC
 241+ 9FDC E1               pop hl
 242+ 9FDD
 243+ 9FDD C9               ret
 244+ 9FDE
 245+ 9FDE              ; ------------ ----------- ------------
 246+ 9FDE              ;
 247+ 9FDE              ;   25/9/24
 248+ 9FDE
 249+ 9FDE              Elimina_disparo_entidad
 250+ 9FDE
 251+ 9FDE 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 252+ 9FE1 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 253+ 9FE2
 254+ 9FE2 E1               pop hl
 255+ 9FE3 E5               push hl
 256+ 9FE4
 257+ 9FE4 2B               dec hl
 258+ 9FE5 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
 259+ 9FE6
 260+ 9FE6 16 06            ld d,6                                                              ; Contador
 261+ 9FE8 AF               xor a                                                               ; Borrador
 262+ 9FE9
 263+ 9FE9 77           1 ld (hl),a
 264+ 9FEA 15               dec d
 265+ 9FEB 23               inc hl
 266+ 9FEC 20 FB            jr nz,1B
 267+ 9FEE
 268+ 9FEE D1               pop de
 269+ 9FEF
 270+ 9FEF 21 00 00         ld hl,0
 271+ 9FF2
 272+ 9FF2 C9               ret
 273+ 9FF3              ; --------------------------------------------------------------------------------------
 274+ 9FF3              ;
 275+ 9FF3              ;   12/10/24
 276+ 9FF3              ;
 277+ 9FF3
 278+ 9FF3              Genera_datos_de_impresion_disparos_Entidades
 279+ 9FF3
 280+ 9FF3 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 281+ 9FF6 47               ld b,a
 282+ 9FF7 3E 07            ld a,7
 283+ 9FF9 90               sub b
 284+ 9FFA C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 285+ 9FFB
 286+ 9FFB 08               ex af,af
 287+ 9FFC
 288+ 9FFC              ; ---------------
 289+ 9FFC
 290+ 9FFC              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 291+ 9FFC
 292+ 9FFC 21 23 89         ld hl,Indice_de_disparos_entidades
 293+ 9FFF
 294+ 9FFF CD BE 90     1 call Extrae_address
 295+ A002
 296+ A002 13               inc de
 297+ A003 13               inc de
 298+ A004
 299+ A004 ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 300+ A008
 301+ A008 2C               inc l
 302+ A009
 303+ A009 7E               ld a,(hl)
 304+ A00A A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 305+ A00B 28 39            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 306+ A00D
 307+ A00D              ; ----- ----- ----- -----
 308+ A00D
 309+ A00D 2D               dec l
 310+ A00E 2D               dec l
 311+ A00F 2D               dec l
 312+ A010
 313+ A010 CD BE 90         call Extrae_address
 314+ A013 E5               push hl
 315+ A014
 316+ A014 1D               dec e
 317+ A015
 318+ A015 EB               ex de,hl
 319+ A016
 320+ A016 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 321+ A017 2D               dec l
 322+ A018 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 323+ A019 2D               dec l
 324+ A01A 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 325+ A01B
 326+ A01B E1               pop hl                                                    ;? Puntero de impresión en HL.
 327+ A01C
 328+ A01C              Genera_scanlines_de_los_disparos_de_entidades.
 329+ A01C
 330+ A01C FD 2A 20 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 331+ A020 FD 73 00         ld (iy+0),e
 332+ A023 FD 70 01         ld (iy+1),b
 333+ A026 FD 71 02         ld (iy+2),c
 334+ A029
 335+ A029 FD 75 03         ld (iy+3),l
 336+ A02C FD 74 04         ld (iy+4),h
 337+ A02F
 338+ A02F CD D7 99         call NextScan
 339+ A032
 340+ A032 FD 75 05         ld (iy+5),l
 341+ A035 FD 74 06         ld (iy+6),h
 342+ A038
 343+ A038 FD E5            push iy
 344+ A03A E1               pop hl
 345+ A03B
 346+ A03B 3E 07            ld a,7
 347+ A03D 85               add l
 348+ A03E 6F               ld l,a
 349+ A03F
 350+ A03F 22 20 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 351+ A042
 352+ A042              ; ----- ----- ----- -----
 353+ A042
 354+ A042 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 355+ A043 3D               dec a
 356+ A044 C8               ret z
 357+ A045 08               ex af,af
 358+ A046
 359+ A046              Situa_en_siguiente_caja
 360+ A046
 361+ A046 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 362+ A049 18 B4            jr 1B
 363+ A04B
 364+ A04B              ; --------------------------------------------------------------------------------------
 365+ A04B              ;
 366+ A04B              ;   12/10/24
 367+ A04B              ;
 368+ A04B
 369+ A04B              Genera_disparo_de_entidad_maldosa
 370+ A04B
 371+ A04B              ;   Estructura de un disparo de entidades.
 372+ A04B
 373+ A04B              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A04B              ; 	defw 0											; Puntero de impresión.
 375+ A04B              ;	defw 0											; Control.
 376+ A04B
 377+ A04B              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A04B              ;   _de la entidad en el momento de disparar.
 379+ A04B
 380+ A04B              ;   El byte alto muestra la siguiente información:
 381+ A04B              ;
 382+ A04B              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A04B              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A04B              ;
 385+ A04B              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A04B              ;
 387+ A04B              ;                        10xx ..... Izquierda.
 388+ A04B              ;                        01xx ..... Derecha.
 389+ A04B              ;                        00xx ..... Recto.
 390+ A04B
 391+ A04B              ;*  Exclusiones.
 392+ A04B
 393+ A04B              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 394+ A04B              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 395+ A04B
 396+ A04B              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 397+ A04B
 398+ A04B 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 399+ A04E A7               and a
 400+ A04F C8               ret z
 401+ A050
 402+ A050 3A C1 8B         ld a,(Coordenada_y)
 403+ A053 A7               and a
 404+ A054 C8               ret z
 405+ A055
 406+ A055 3D               dec a
 407+ A056 C8               ret z
 408+ A057
 409+ A057 FE 10            cp 16
 410+ A059 D0               ret nc
 411+ A05A
 412+ A05A              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 413+ A05A              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 414+ A05A              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 415+ A05A
 416+ A05A 21 35 8C         ld hl,Ctrl_5
 417+ A05D CB D6            set 2,(hl)
 418+ A05F
 419+ A05F 21 25 8C         ld hl,Permiso_de_disparo_Entidades
 420+ A062 35               dec (hl)                                            ; No más disparos en este FRAME.
 421+ A063
 422+ A063              ;   Decrementa el numero de disparos de entidades.
 423+ A063
 424+ A063 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 425+ A066 35               dec (hl)
 426+ A067
 427+ A067 21 23 89         ld hl,Indice_de_disparos_entidades
 428+ A06A
 429+ A06A CD BE 90     1 call Extrae_address
 430+ A06D
 431+ A06D 13               inc de
 432+ A06E 13               inc de
 433+ A06F
 434+ A06F ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 435+ A073
 436+ A073              ;   Comprobamos si la caja está vacía.
 437+ A073
 438+ A073 2C               inc l
 439+ A074
 440+ A074 7E               ld a,(hl)
 441+ A075 A7               and a
 442+ A076 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 443+ A078
 444+ A078              ;   Caja vacía, vamos a generar un disparo.
 445+ A078              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 446+ A078
 447+ A078 CD 9E A0         call Genera_byte_inclinacion
 448+ A07B
 449+ A07B 7E               ld a,(hl)
 450+ A07C 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 451+ A07D
 452+ A07D 2D               dec l
 453+ A07E
 454+ A07E              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 455+ A07E
 456+ A07E 3A CA 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 457+ A081 77               ld (hl),a
 458+ A082
 459+ A082 2D               dec l
 460+ A083
 461+ A083 CD BC A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 462+ A086
 463+ A086 70               ld (hl),b
 464+ A087 2D               dec l
 465+ A088 71               ld (hl),c
 466+ A089
 467+ A089 2D               dec l
 468+ A08A
 469+ A08A              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 470+ A08A
 471+ A08A FD 7E 02         ld a,(iy+02)
 472+ A08D 77               ld (hl),a
 473+ A08E 2D               dec l
 474+ A08F
 475+ A08F FD 7E 01         ld a,(iy+01)
 476+ A092 77               ld (hl),a
 477+ A093 2D               dec l
 478+ A094
 479+ A094 FD 7E 00         ld a,(iy+00)
 480+ A097 77               ld (hl),a
 481+ A098
 482+ A098 C9               ret
 483+ A099
 484+ A099              ;   --- --- ---
 485+ A099
 486+ A099              Situa_en_siguiente_disparo
 487+ A099
 488+ A099 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 489+ A09C 18 CC            jr 1B
 490+ A09E
 491+ A09E              ; --------------------------------------------------------------------------------------
 492+ A09E              ;
 493+ A09E              ;   09/10/24
 494+ A09E              ;
 495+ A09E
 496+ A09E              Genera_byte_inclinacion
 497+ A09E
 498+ A09E 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 499+ A0A0
 500+ A0A0              ; Determina tendencia del disparo.
 501+ A0A0
 502+ A0A0 3A 75 89         ld a,(CX_Amadeus)
 503+ A0A3 47               ld b,a
 504+ A0A4 3A C0 8B         ld a,(Coordenada_X)
 505+ A0A7 90               sub b
 506+ A0A8 38 07            jr c,Disparo_a_derecha
 507+ A0AA
 508+ A0AA FE 04        Disparo_a_izquierda cp 4
 509+ A0AC
 510+ A0AC D8               ret c
 511+ A0AD C8               ret z
 512+ A0AE
 513+ A0AE CB FE            set 7,(hl)
 514+ A0B0 C9               ret
 515+ A0B1
 516+ A0B1 47           Disparo_a_derecha ld b,a
 517+ A0B2 3E FF            ld a,$ff
 518+ A0B4 90               sub b
 519+ A0B5
 520+ A0B5 FE 04            cp 4
 521+ A0B7
 522+ A0B7 D8               ret c
 523+ A0B8 C8               ret z
 524+ A0B9
 525+ A0B9 CB F6            set 6,(hl)
 526+ A0BB C9               ret
 527+ A0BC
 528+ A0BC              ; --------------------------------------------------------------------------------------
 529+ A0BC              ;
 530+ A0BC              ;   09/10/24
 531+ A0BC              ;
 532+ A0BC
 533+ A0BC              Modifica_puntero_de_impresion
 534+ A0BC
 535+ A0BC              ;   Puntero de impresión del disparo en BC.
 536+ A0BC
 537+ A0BC ED 4B 38 8C      ld bc,(Puntero_de_impresion_disparo_de_entidad)
 538+ A0C0
 539+ A0C0 08               ex af,af
 540+ A0C1 CB 77            bit 6,a
 541+ A0C3 28 06            jr z,1F
 542+ A0C5
 543+ A0C5 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 544+ A0C9 0C               inc c
 545+ A0CA C9               ret
 546+ A0CB
 547+ A0CB CB 7F        1 bit 7,a
 548+ A0CD 28 F6            jr z,2B
 549+ A0CF
 550+ A0CF FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 551+ A0D3 0D               dec c
 552+ A0D4
 553+ A0D4 C9               ret
 554+ A0D5
 555+ A0D5              ; --------------------------------------------------------------------------------------
 556+ A0D5              ;
 557+ A0D5              ;   31/08/24
 558+ A0D5              ;
 559+ A0D5
 560+ A0D5              Compara_con_coordenadas_de_disparo
 561+ A0D5
 562+ A0D5 3A C1 8B         ld a,(Coordenada_y)
 563+ A0D8 47               ld b,a
 564+ A0D9 3A 3D 8C         ld a,(Coordenadas_disparo_certero)
 565+ A0DC 90               sub b
 566+ A0DD
 567+ A0DD              ; A = "0" ok
 568+ A0DD              ; A = "1" ok
 569+ A0DD
 570+ A0DD 28 08            jr z,Comprueba_coordenada_X
 571+ A0DF 3D               dec a
 572+ A0E0 28 05            jr z,Comprueba_coordenada_X
 573+ A0E2
 574+ A0E2              ; A = "$ff" ok
 575+ A0E2
 576+ A0E2 FE FE            cp $fe
 577+ A0E4 28 01            jr z,Comprueba_coordenada_X
 578+ A0E6
 579+ A0E6 C9               ret
 580+ A0E7
 581+ A0E7              Comprueba_coordenada_X
 582+ A0E7
 583+ A0E7 3A C0 8B         ld a,(Coordenada_X)
 584+ A0EA 47               ld b,a
 585+ A0EB 21 3E 8C         ld hl,Coordenadas_disparo_certero+1
 586+ A0EE 7E               ld a,(hl)
 587+ A0EF 90               sub b
 588+ A0F0
 589+ A0F0              ; A = "0" ok
 590+ A0F0              ; A = "1" ok
 591+ A0F0
 592+ A0F0 28 09            jr z,Activa_Impacto_en_entidad
 593+ A0F2 3D               dec a
 594+ A0F3 28 06            jr z,Activa_Impacto_en_entidad
 595+ A0F5
 596+ A0F5              ; A = "2" ok
 597+ A0F5
 598+ A0F5 3D               dec a
 599+ A0F6 28 03            jr z,Activa_Impacto_en_entidad
 600+ A0F8
 601+ A0F8              ; A = "$ff"
 602+ A0F8
 603+ A0F8 FE FD            cp $fd
 604+ A0FA C0               ret nz
 605+ A0FB
 606+ A0FB              Activa_Impacto_en_entidad
 607+ A0FB
 608+ A0FB              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 609+ A0FB
 610+ A0FB 3E 02            ld a,2
 611+ A0FD 32 C3 8B         ld (Impacto),a
 612+ A100
 613+ A100              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 614+ A100
 615+ A100 11 C0 87         ld de,Indice_Explosion_entidades
 616+ A103 21 C6 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 617+ A106
 618+ A106 73               ld (hl),e
 619+ A107 23               inc hl
 620+ A108 72               ld (hl),d
 621+ A109
 622+ A109              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 623+ A109
 624+ A109 21 3A 8C         ld hl,Impacto2
 625+ A10C CB 9E            res 3,(hl)
 626+ A10E
 627+ A10E C9               ret
 628+ A10F
 629+ A10F              ; --------------------------------------------------------------------------------------
 630+ A10F              ;
 631+ A10F              ;   13/10/24
 632+ A10F              ;
 633+ A10F
 634+ A10F              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 635+ A10F
 636+ A10F              Limpia_album_de_pintado_disparos_Amadeus
 637+ A10F
 638+ A10F 2A 18 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 639+ A112 06 06            ld b,6
 640+ A114 AF               xor a
 641+ A115 77           1 ld (hl),a
 642+ A116 2C               inc l
 643+ A117 10 FC            djnz 1B
 644+ A119
 645+ A119 C9               ret
 646+ A11A
 647+ A11A              ; --------------------------------------------------------------------------------------
 648+ A11A              ;
 649+ A11A              ;   29/09/24
 650+ A11A              ;
 651+ A11A
 652+ A11A              Calcula_bytes_pintado_disparos
 653+ A11A
 654+ A11A 2A 1C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 655+ A11D 45               ld b,l
 656+ A11E 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 657+ A121 7D               ld a,l
 658+ A122
 659+ A122 90               sub b
 660+ A123 32 22 8C         ld (Num_de_bytes_album_de_disparos),a
 661+ A126
 662+ A126 C9               ret
 663+ A127
 664+ A127              ; --------------------------------------------------------------------------------------
 665+ A127              ;
 666+ A127              ;   29/09/24
 667+ A127              ;
 668+ A127              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 669+ A127              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 670+ A127              ;   _disparos que el álbum del FRAME actual).
 671+ A127
 672+ A127              Limpia_album_de_pintado_disparos_entidades
 673+ A127
 674+ A127 3A 22 8C         ld a,(Num_de_bytes_album_de_disparos)
 675+ A12A A7               and a
 676+ A12B 28 0E            jr z,Clean_only_one
 677+ A12D
 678+ A12D 47               ld b,a
 679+ A12E 3E 31            ld a,$31
 680+ A130 90               sub b
 681+ A131 47               ld b,a
 682+ A132 AF           2 xor a
 683+ A133
 684+ A133 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 685+ A136 77           1 ld (hl),a
 686+ A137 23               inc hl
 687+ A138 10 FC            djnz 1B
 688+ A13A C9               ret
 689+ A13B
 690+ A13B              Clean_only_one
 691+ A13B
 692+ A13B 06 07            ld b,7
 693+ A13D 18 F3            jr 2B
 694+ A13F
 695+ A13F              ; --------------------------------------------------------------------------------------
 696+ A13F              ;
 697+ A13F              ;   29/09/24
 698+ A13F              ;
 699+ A13F
 700+ A13F              Motor_Disparos_Amadeus
 701+ A13F
 702+ A13F 21 20 89         ld hl,Disparo_Amad+1
 703+ A142
 704+ A142 34               inc (hl)
 705+ A143 35               dec (hl)
 706+ A144
 707+ A144 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 708+ A145
 709+ A145              ;   Esta caja contiene un disparo.
 710+ A145
 711+ A145 CD 4C A1         call Consulta_Impacto
 712+ A148 CC 65 A1         call z,Mueve_disparo_Amadeus
 713+ A14B
 714+ A14B C9               ret
 715+ A14C
 716+ A14C              ; ----------------------
 717+ A14C              ;
 718+ A14C              ;
 719+ A14C              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 720+ A14C              ;
 721+ A14C              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 722+ A14C
 723+ A14C
 724+ A14C              Consulta_Impacto
 725+ A14C
 726+ A14C              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 727+ A14C              ;   _sea lo más coherente posible.
 728+ A14C
 729+ A14C E5               push hl
 730+ A14D 2B               dec hl
 731+ A14E CD 41 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 732+ A151 E1               pop hl
 733+ A152 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 734+ A153
 735+ A153 C8               ret z
 736+ A154
 737+ A154 3A 3A 8C         ld a,(Impacto2)
 738+ A157 CB DF            set 3,a
 739+ A159 32 3A 8C         ld (Impacto2),a
 740+ A15C
 741+ A15C E5               push hl
 742+ A15D CD 2E A2         call Genera_coordenadas_de_disparo_Amadeus
 743+ A160 E1               pop hl
 744+ A161 CD 7E A1         call Elimina_disparo_Amadeus
 745+ A164
 746+ A164 C9               ret
 747+ A165
 748+ A165              ; ----------------------
 749+ A165              ;
 750+ A165              ;
 751+ A165              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 752+ A165
 753+ A165              Mueve_disparo_Amadeus
 754+ A165
 755+ A165 CD BE 90         call Extrae_address
 756+ A168
 757+ A168 CD E6 99         call PreviousScan
 758+ A16B CD E6 99         call PreviousScan
 759+ A16E CD E6 99         call PreviousScan
 760+ A171 CD E6 99         call PreviousScan
 761+ A174
 762+ A174              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 763+ A174
 764+ A174 7C               ld a,h
 765+ A175 D6 40            sub $40
 766+ A177 EB               ex de,hl
 767+ A178 38 04            jr c,Elimina_disparo_Amadeus
 768+ A17A
 769+ A17A               ; Introduce nuevo puntero_de_impresión en la caja.
 770+ A17A
 771+ A17A 73               ld (hl),e
 772+ A17B 23               inc hl
 773+ A17C 72               ld (hl),d
 774+ A17D
 775+ A17D C9               ret
 776+ A17E
 777+ A17E              ; ----------------------
 778+ A17E              ;
 779+ A17E              ;   29/9/24
 780+ A17E
 781+ A17E              Elimina_disparo_Amadeus
 782+ A17E
 783+ A17E              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 784+ A17E              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 785+ A17E
 786+ A17E              ;   Disparo_1A defw 0									; Puntero objeto.
 787+ A17E              ;   	defw 0											; Puntero de impresión.
 788+ A17E
 789+ A17E 2B               dec hl
 790+ A17F 2B               dec hl
 791+ A180
 792+ A180 AF               xor a
 793+ A181 77               ld (hl),a
 794+ A182 23               inc hl
 795+ A183 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 796+ A184
 797+ A184 23               inc hl
 798+ A185 77               ld (hl),a
 799+ A186 23               inc hl
 800+ A187 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 801+ A188
 802+ A188 3E 01            ld a,1
 803+ A18A 32 24 8C         ld (Permiso_de_disparo_Amadeus),a
 804+ A18D
 805+ A18D CD 0F A1         call Limpia_album_de_pintado_disparos_Amadeus
 806+ A190
 807+ A190 AF               xor a
 808+ A191 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 809+ A192
 810+ A192 C9               ret
 811+ A193
 812+ A193              ; --------------------------------------------------------------------------------------
 813+ A193              ;
 814+ A193              ;   13/10/24
 815+ A193              ;
 816+ A193
 817+ A193              Pinta_disparos_Amadeus
 818+ A193
 819+ A193 06 02            ld b,2
 820+ A195 ED 73 0C 8C      ld (Stack),sp
 821+ A199 ED 7B 1A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 822+ A19D D1           3 pop de
 823+ A19E 14               inc d
 824+ A19F 15               dec d
 825+ A1A0 28 1C            jr z,1F
 826+ A1A2 E1               pop hl
 827+ A1A3
 828+ A1A3              Imprime_scanlines_en_pantalla
 829+ A1A3
 830+ A1A3              ; 1er scanline
 831+ A1A3
 832+ A1A3 1A               ld a,(de)
 833+ A1A4 AE               xor (hl)
 834+ A1A5 77               ld (hl),a
 835+ A1A6
 836+ A1A6 1C               inc e
 837+ A1A7 2C               inc l
 838+ A1A8
 839+ A1A8 1A               ld a,(de)
 840+ A1A9 AE               xor (hl)
 841+ A1AA 77               ld (hl),a
 842+ A1AB
 843+ A1AB 1D               dec e
 844+ A1AC E1               pop hl
 845+ A1AD
 846+ A1AD              ; 2º scanline
 847+ A1AD
 848+ A1AD 1A               ld a,(de)
 849+ A1AE AE               xor (hl)
 850+ A1AF 77               ld (hl),a
 851+ A1B0
 852+ A1B0 1C               inc e
 853+ A1B1 2C               inc l
 854+ A1B2
 855+ A1B2 1A               ld a,(de)
 856+ A1B3 AE               xor (hl)
 857+ A1B4 77               ld (hl),a
 858+ A1B5
 859+ A1B5 1D               dec e
 860+ A1B6
 861+ A1B6 18 06            jr 1F
 862+ A1B8
 863+ A1B8 ED 7B 18 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 864+ A1BC 18 DF            jr 3B
 865+ A1BE 10 F8        1 djnz 2B
 866+ A1C0 ED 7B 0C 8C      ld sp,(Stack)
 867+ A1C4 C9               ret
 868+ A1C5
 869+ A1C5              ; --------------------------------------------------------------------------------------
 870+ A1C5              ;
 871+ A1C5              ;   13/10/24
 872+ A1C5              ;
 873+ A1C5              ;   Modifica: HL,BC y DE.
 874+ A1C5
 875+ A1C5
 876+ A1C5              Genera_datos_de_impresion_disparos_Amadeus
 877+ A1C5
 878+ A1C5 ED 73 0C 8C      ld (Stack),sp
 879+ A1C9 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 880+ A1CC D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 881+ A1CD
 882+ A1CD 14               inc d                                                     ;? Salimos si no hay disparo.
 883+ A1CE 15               dec d
 884+ A1CF
 885+ A1CF 28 0E            jr z,Salida
 886+ A1D1
 887+ A1D1              Genera_scanlines_de_disparo_Amadeus
 888+ A1D1
 889+ A1D1 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 890+ A1D2              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 891+ A1D2 ED 7B 18 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 892+ A1D6
 893+ A1D6 C1               pop bc
 894+ A1D7 C1               pop bc
 895+ A1D8 C1               pop bc
 896+ A1D9
 897+ A1D9 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 898+ A1DA CD E6 99         call PreviousScan
 899+ A1DD E5               push hl                                                   ;? Sube 1er scanline al álbum.
 900+ A1DE D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 901+ A1DF
 902+ A1DF              Salida
 903+ A1DF
 904+ A1DF ED 7B 0C 8C      ld sp,(Stack)
 905+ A1E3
 906+ A1E3 C9               ret
 907+ A1E4
 908+ A1E4              ; --------------------------------------------------------------------------------------
 909+ A1E4              ;
 910+ A1E4              ;   12/09/24
 911+ A1E4              ;
 912+ A1E4
 913+ A1E4              Genera_disparo_Amadeus
 914+ A1E4
 915+ A1E4              ;*  Exclusiones.
 916+ A1E4
 917+ A1E4 3A 24 8C         ld a,(Permiso_de_disparo_Amadeus)
 918+ A1E7 A7               and a
 919+ A1E8 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 920+ A1E9
 921+ A1E9 3D               dec a
 922+ A1EA 32 24 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 923+ A1ED
 924+ A1ED              Define_puntero_objeto_disparo
 925+ A1ED
 926+ A1ED              ;   Inicializamos contador.
 927+ A1ED
 928+ A1ED 06 00            ld b,0
 929+ A1EF
 930+ A1EF 2A 79 89         ld hl,(p.imp.amadeus)
 931+ A1F2 2C               inc l
 932+ A1F3
 933+ A1F3 3E 80            ld a,$80
 934+ A1F5 BE               cp (hl)
 935+ A1F6 28 0D            jr z,1F
 936+ A1F8
 937+ A1F8 04               inc b
 938+ A1F9
 939+ A1F9 3E 60            ld a,$60
 940+ A1FB BE               cp (hl)
 941+ A1FC 28 07            jr z,1F
 942+ A1FE
 943+ A1FE
 944+ A1FE 04               inc b
 945+ A1FF
 946+ A1FF 3E 18            ld a,$18
 947+ A201 BE               cp (hl)
 948+ A202 28 01            jr z,1F
 949+ A204
 950+ A204 04               inc b
 951+ A205
 952+ A205              ;   Calcula el Puntero_de_impresión del disparo.
 953+ A205
 954+ A205              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 955+ A205
 956+ A205 CD E6 99     1 call PreviousScan
 957+ A208
 958+ A208 78               ld a,b
 959+ A209 CB 3F            srl a
 960+ A20B 28 03            jr z,4F
 961+ A20D
 962+ A20D              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 963+ A20D E5               push hl
 964+ A20E 18 02            jr 5F
 965+ A210 2D           4 dec l
 966+ A211 E5               push hl
 967+ A212              ; ---
 968+ A212
 969+ A212              ;   Calcula el Puntero_objeto del disparo.
 970+ A212
 971+ A212 21 76 83     5 ld hl,Indice_disparo_Amadeus
 972+ A215 04               inc b
 973+ A216 05               dec b
 974+ A217 28 04            jr z,2F
 975+ A219
 976+ A219              ;   Nos desplazamos por el índice de disparos.
 977+ A219
 978+ A219 2C           3 inc l
 979+ A21A 2C               inc l
 980+ A21B 10 FC            djnz 3B
 981+ A21D
 982+ A21D              ; --- Guarda el Puntero_objeto del disparo en la pila.
 983+ A21D CD BE 90     2 call Extrae_address
 984+ A220 E5               push hl
 985+ A221              ; ---
 986+ A221
 987+ A221              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 988+ A221              ; HL en el 1er .db de la caja.
 989+ A221
 990+ A221 21 1F 89         ld hl,Disparo_Amad
 991+ A224
 992+ A224 06 02            ld b,2
 993+ A226
 994+ A226 D1           6 pop de
 995+ A227 73               ld (hl),e
 996+ A228 23               inc hl
 997+ A229 72               ld (hl),d
 998+ A22A 23               inc hl
 999+ A22B
1000+ A22B 10 F9            djnz 6B
1001+ A22D
1002+ A22D C9               ret
1003+ A22E
1004+ A22E              Genera_coordenadas_de_disparo_Amadeus
1005+ A22E
1006+ A22E              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1007+ A22E              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1008+ A22E              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1009+ A22E
1010+ A22E CD BE 90         call Extrae_address
1011+ A231 CD DD 94         call Genera_coordenadas
1012+ A234
1013+ A234 3D               dec a
1014+ A235
1015+ A235 21 3D 8C         ld hl,Coordenadas_disparo_certero
1016+ A238 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1017+ A239 23               inc hl
1018+ A23A 3A C0 8B         ld a,(Coordenada_X)
1019+ A23D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1020+ A23E
1021+ A23E AF               xor a
1022+ A23F 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1023+ A240
1024+ A240 C9               ret
1025+ A241
1026+ A241              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1027+ A241              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1028+ A241              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1029+ A241
1030+ A241              ; ----------------------------------------------
1031+ A241              ;
1032+ A241              ;   27/08/24
1033+ A241              ;
1034+ A241              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1035+ A241              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1036+ A241
1037+ A241              Detecta_impacto_en_disparo_de_Amadeus
1038+ A241
1039+ A241              Extraccion_de_datos
1040+ A241
1041+ A241 13               inc de
1042+ A242 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1043+ A243
1044+ A243 5E               ld e,(hl)
1045+ A244 23               inc hl
1046+ A245 56               ld d,(hl)
1047+ A246
1048+ A246 23               inc hl
1049+ A247
1050+ A247 4E               ld c,(hl)
1051+ A248 23               inc hl
1052+ A249 46               ld b,(hl)
1053+ A24A
1054+ A24A C5               push bc
1055+ A24B E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1056+ A24C
1057+ A24C              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1058+ A24C
1059+ A24C CD E6 99         call PreviousScan
1060+ A24F CD E6 99         call PreviousScan
1061+ A252
1062+ A252              Detecta_impacto_
1063+ A252
1064+ A252 1A               ld a,(de)
1065+ A253 A6               and (hl)
1066+ A254 C0               ret nz
1067+ A255
1068+ A255 13               inc de
1069+ A256 23               inc hl
1070+ A257
1071+ A257 1A               ld a,(de)
1072+ A258 A6               and (hl)
1073+ A259 C9               ret
1074+ A25A
1075+ A25A              ; -------------------------------------------------------------------------------------------------------------
1076+ A25A              ;
1077+ A25A              ;   8/8/24
1078+ A25A              ;
1079+ A25A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1080+ A25A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1081+ A25A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1082+ A25A              ;
1083+ A25A              ;   MODIFICA: HL,DE,BC y A.
1084+ A25A              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1085+ A25A              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1086+ A25A
1087+ A25A              Colision_Entidad_Amadeus
1088+ A25A
1089+ A25A              ; Posible contacto de entidad con Amadeus. ?????
1090+ A25A
1091+ A25A              ; Exclusiones:
1092+ A25A
1093+ A25A 3A 5D 8C         ld a,(Shield)
1094+ A25D A7               and a
1095+ A25E C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1096+ A25F
1097+ A25F 21 33 8C         ld hl,Ctrl_3
1098+ A262 CB 76            bit 6,(hl)
1099+ A264 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1100+ A265
1101+ A265 21 3A 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1102+ A268 CB 56            bit 2,(hl)
1103+ A26A C0               ret nz
1104+ A26B
1105+ A26B 3A C1 8B     	ld a,(Coordenada_y)
1106+ A26E FE 14        	cp $14
1107+ A270 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1108+ A271
1109+ A271 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1110+ A274 A7               and a
1111+ A275 C0               ret nz
1112+ A276
1113+ A276              Genera_coordenadas_X
1114+ A276
1115+ A276              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1116+ A276              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1117+ A276
1118+ A276              ;   Limpiamos almacenes.
1119+ A276
1120+ A276              ;    call Limpia_Coordenadas_X
1121+ A276
1122+ A276              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1123+ A276
1124+ A276 21 3F 8C         ld hl,Coordenadas_X_Entidad
1125+ A279 3A C0 8B         ld a,(Coordenada_X)
1126+ A27C CD 9E A2         call Guarda_coordenadas_X
1127+ A27F
1128+ A27F              ;   Almacenamos las coordenadas X de Amadeus.
1129+ A27F
1130+ A27F 3A 75 89         ld a,(CX_Amadeus)
1131+ A282 CD 9E A2         call Guarda_coordenadas_X
1132+ A285 CD B2 A2         call Compara_coordenadas_X
1133+ A288 C0               ret nz
1134+ A289
1135+ A289 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1136+ A28B 32 C3 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1137+ A28E
1138+ A28E 2A FF 8B         ld hl,(Puntero_store_caja)
1139+ A291 2C               inc l
1140+ A292 2C               inc l
1141+ A293 2C               inc l
1142+ A294 2C               inc l
1143+ A295 22 3B 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1144+ A298
1145+ A298 21 3A 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1146+ A29B CB D6            set 2,(hl)
1147+ A29D
1148+ A29D C9               ret
1149+ A29E
1150+ A29E               ; ----- ----- ----- ----- -----
1151+ A29E
1152+ A29E 77           Guarda_coordenadas_X ld (hl),a
1153+ A29F 3C               inc a
1154+ A2A0 2C               inc l
1155+ A2A1 77               ld (hl),a
1156+ A2A2 3C               inc a
1157+ A2A3 2C               inc l
1158+ A2A4 77               ld (hl),a
1159+ A2A5 2C               inc l
1160+ A2A6 C9               ret
1161+ A2A7
1162+ A2A7 AF           Limpia_Coordenadas_X xor a
1163+ A2A8 06 06            ld b,6
1164+ A2AA 21 42 8C         ld hl,Coordenadas_X_Amadeus
1165+ A2AD 77           1 ld (hl),a
1166+ A2AE 23               inc hl
1167+ A2AF 10 FC            djnz 1B
1168+ A2B1 C9               ret
1169+ A2B2
1170+ A2B2              ; ----- ----- ----- ----- -----
1171+ A2B2
1172+ A2B2              Compara_coordenadas_X
1173+ A2B2
1174+ A2B2 DD 21 3F 8C      ld ix,Coordenadas_X_Entidad
1175+ A2B6 DD 7E 00         ld a,(ix+0)
1176+ A2B9 CD C7 A2         call Comparando
1177+ A2BC C8               ret z
1178+ A2BD
1179+ A2BD 3C               inc a
1180+ A2BE CD D6 A2         call Comparando_1
1181+ A2C1 C8               ret z
1182+ A2C2
1183+ A2C2 3C               inc a
1184+ A2C3 CD D6 A2         call Comparando_1
1185+ A2C6 C9               ret
1186+ A2C7
1187+ A2C7              ; ----- ----- ----- ----- -----
1188+ A2C7              ;
1189+ A2C7              ;   4/12/23
1190+ A2C7              ;
1191+ A2C7              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1192+ A2C7
1193+ A2C7              Comparando
1194+ A2C7
1195+ A2C7 DD 2C            inc ixl
1196+ A2C9 DD 2C            inc ixl
1197+ A2CB DD 2C            inc ixl
1198+ A2CD
1199+ A2CD DD 46 00         ld b,(ix+0)
1200+ A2D0 DD 4E 01         ld c,(ix+1)
1201+ A2D3 DD 56 02         ld d,(ix+2)
1202+ A2D6
1203+ A2D6 B8           Comparando_1 cp b
1204+ A2D7 C8               ret z
1205+ A2D8 B9               cp c
1206+ A2D9 C8               ret z
1207+ A2DA BA               cp d
1208+ A2DB C9               ret
1209+ A2DC
1210+ A2DC              ; -----------------------------------------------------------------------
1211+ A2DC              ;
1212+ A2DC              ;   04/7/24
1213+ A2DC              ;
1214+ A2DC
1215+ A2DC              Detecta_colision_nave_entidad
1216+ A2DC
1217+ A2DC              ; Exclusiones:
1218+ A2DC
1219+ A2DC              ; Salimos de la rutina si no hay advertencia de posible colisión.
1220+ A2DC
1221+ A2DC 21 3A 8C     	ld hl,Impacto2
1222+ A2DF CB 56        	bit 2,(hl)
1223+ A2E1 C8           	ret z
1224+ A2E2
1225+ A2E2              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1226+ A2E2
1227+ A2E2 2A 7B 89         ld hl,(Pamm_Amadeus)
1228+ A2E5 CD BE 90         call Extrae_address
1229+ A2E8 54               ld d,h
1230+ A2E9 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1231+ A2EA
1232+ A2EA 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1233+ A2ED 06 10            ld b,16                                        ; Contador de scanlines en B.
1234+ A2EF FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1235+ A2F2
1236+ A2F2 C5           1 push bc
1237+ A2F3 06 03            ld b,3
1238+ A2F5 E5               push hl
1239+ A2F6
1240+ A2F6              ; .db
1241+ A2F6
1242+ A2F6 1A           3 ld a,(de)
1243+ A2F7 A7               and a
1244+ A2F8 20 03            jr nz,4F
1245+ A2FA
1246+ A2FA 2C               inc l
1247+ A2FB 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1248+ A2FD
1249+ A2FD ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1250+ A2FF 28 04            jr z,2F
1251+ A301
1252+ A301              ; Impacto.
1253+ A301 FD 2D            dec iyl
1254+ A303 28 22            jr z,5F
1255+ A305
1256+ A305 1C           2 inc e
1257+ A306 10 EE            djnz 3B
1258+ A308
1259+ A308 E1               pop hl
1260+ A309
1261+ A309              ; Hay salto de línea en el puntero de impresión ???
1262+ A309
1263+ A309 7C               ld a,h
1264+ A30A D6 57            sub $57
1265+ A30C 20 0A            jr nz,6F
1266+ A30E
1267+ A30E              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1268+ A30E
1269+ A30E 2A 79 89         ld hl,(p.imp.amadeus)
1270+ A311 3E 20            ld a,$20
1271+ A313 A7               and a
1272+ A314 85               add l
1273+ A315 6F               ld l,a
1274+ A316 18 01            jr 7F
1275+ A318
1276+ A318 24           6 inc h
1277+ A319
1278+ A319 C1           7 pop bc
1279+ A31A 10 D6            djnz 1B
1280+ A31C
1281+ A31C              ;   Fin de la comparativa.
1282+ A31C
1283+ A31C              ;   NO HAY COLISIÓN !!!!!.
1284+ A31C              ;
1285+ A31C              ;   .db (Impacto) de Amadeus a "0".
1286+ A31C              ;   RES el bit2 de (Impacto2).
1287+ A31C              ;
1288+ A31C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1289+ A31C              ;   Lo colocamos a "0".
1290+ A31C
1291+ A31C 21 3A 8C         ld hl,Impacto2
1292+ A31F CB 96            res 2,(hl)
1293+ A321 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)
1294+ A324 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1295+ A326 C9               ret
1296+ A327
1297+ A327              ;   COLISIÓN !!!!!.
1298+ A327              ;
1299+ A327              ;   .db (Impacto) de Amadeus a "1".
1300+ A327              ;   SET el bit3 de (Impacto2).
1301+ A327              ;
1302+ A327              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1303+ A327
1304+ A327 E1           5 pop hl
1305+ A328 C1               pop bc
1306+ A329
1307+ A329 21 78 89         ld hl,Impacto_Amadeus
1308+ A32C 36 01            ld (hl),1
1309+ A32E 21 3A 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1310+ A331 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1311+ A333
1312+ A333 11 C0 87         ld de,Indice_Explosion_entidades
1313+ A336 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1314+ A339
1315+ A339 23               inc hl
1316+ A33A 23               inc hl
1317+ A33B 23               inc hl
1318+ A33C
1319+ A33C 73               ld (hl),e
1320+ A33D 23               inc hl
1321+ A33E 72               ld (hl),d
1322+ A33F
1323+ A33F              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1324+ A33F
1325+ A33F 11 60 88         ld de,Indice_Explosion_Amadeus
1326+ A342 21 7B 89         ld hl,Pamm_Amadeus
1327+ A345
1328+ A345 73               ld (hl),e
1329+ A346 23               inc hl
1330+ A347 72               ld (hl),d
1331+ A348
1332+ A348 C9               ret
1333+ A349
1334+ A349
1335+ A349
# file closed: Disparo.asm
2063  A349
2064  A349              	SAVESNA "Pruebas.sna", START
2065  A349
2066  A349
2067  A349
2068  A349
# file closed: Banco_de_Pruebas.asm
