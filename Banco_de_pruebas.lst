# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 48 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 0F 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 FF 95 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD C1 47        Posicion_inicio defw $47c1								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 02           Vel_right db 2 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 09 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_derecha_abajo  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7
 172  85D7              ; Gestión de ENTIDADES.
 173  85D7
 174  85D7 00 00        Puntero_store_entidades defw 0
 175  85D9 00 00        Puntero_restore_entidades defw 0
 176  85DB 00 00        Indice_restore defw 0
 177  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 178  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  85DF              ;														; _ (Numero_de_malotes)="0".
 182  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  85E1              ;														; _variable para almacenar lo posición del puntero_
 184  85E1              ; 														; _de pila, SP.
 185  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 189  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 192  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  85E7
 194  85E7              ; Gestión de Disparos.
 195  85E7
 196  85E7 00           Numero_de_disparotes db 0
 197  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 198  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 199  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 200  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 201  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 202  85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 203  85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 204  85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 205  85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 206  85F3
 207  85F3
 208  85F3              ; Gestión de FRAMES.
 209  85F3
 210  85F3 00           Switch db 0
 211  85F4
 212  85F4              ; Variables de Raster y localización en pantalla.
 213  85F4
 214  85F4 00 FF        Temp_Raster defw $ff00
 215  85F6
 216  85F6              ; Rutina principal *************************************************************************************************************************************************************************
 217  85F6              ;
 218  85F6              ;	14/11/22
 219  85F6
 220  85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 221  85F9
 222  85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 223  85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 224  85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 225  85FF F3           	DI
 226  8600
 227  8600 3E 07        	ld a,%00000111
 228  8602 CD 23 92     	call Cls
 229  8605
 230  8605              ;	call Pinta_FILAS
 231  8605
 232  8605 CD 5F 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 233  8608
 234  8608 21 DD 85     	ld hl,Numero_de_entidades
 235  860B 46           	ld b,(hl)
 236  860C 04           	inc b
 237  860D 05           	dec b
 238  860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 239  8610
 240  8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 241  8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 242  8610              ;	Pintamos el resto de entidades:
 243  8610
 244  8610 CD 58 87     	call Inicia_punteros_de_entidades
 245  8613
 246  8613              ;	INICIA ENTIDADES!!!!!
 247  8613
 248  8613 C5           1 push bc  												; Guardo el contador de entidades.
 249  8614 CD B2 87      	call Inicia_Puntero_objeto
 250  8617 CD 73 8C     	call Draw
 251  861A CD A0 7F     	call Guarda_foto_registros
 252  861D CD FA 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 253  8620 C1           	pop bc
 254  8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 255  8623
 256  8623              ; 	INICIA AMADEUS!!!!!
 257  8623
 258  8623 CD 3B 88     3 call Restore_Amadeus
 259  8626 CD B2 87     	call Inicia_Puntero_objeto
 260  8629 CD 73 8C     	call Draw
 261  862C CD A0 7F     	call Guarda_foto_registros
 262  862F CD 4D 88     	call Store_Amadeus
 263  8632
 264  8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 265  8632
 266  8632 CD 6E 87     	call Inicia_Puntero_Disparo_Entidades
 267  8635 CD 75 87     	call Inicia_Puntero_Disparo_Amadeus
 268  8638
 269  8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 270  8638
 271  8638 CD 58 87     	call Inicia_punteros_de_entidades
 272  863B CD 29 88     	call Restore_Primera_entidad
 273  863E
 274  863E 3A DD 85     	ld a,(Numero_de_entidades)
 275  8641 3C           	inc a
 276  8642 32 DE 85     	ld (Numero_de_malotes),a
 277  8645
 278  8645 FB           2 ei
 279  8646 18 FD        	jr 2B
 280  8648
 281  8648              ; -----------------------------------------------------------------------------------
 282  8648
 283  8648              Frame
 284  8648
 285  8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 286  8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 287  8648
 288  8648 3E 02            ld a,2
 289  864A D3 FE            out ($fe),a
 290  864C CD 77 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
 291  864F CD B0 8F     	call Extrae_foto_disparos
 292  8652 3E 01            ld a,1
 293  8654 D3 FE            out ($fe),a
 294  8656
 295  8656              ; ----------------------------------------------------------------------
 296  8656
 297  8656              ;	Existe colisión?????
 298  8656
 299  8656 3A EC 85     	ld a,(Impacto2)
 300  8659 A7           	and a
 301  865A 28 03        	jr z,5F
 302  865C
 303  865C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 304  865C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 305  865C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 306  865C
 307  865C CD 5C 8C     	call Selector_de_impactos
 308  865F
 309  865F CD 58 87     5 call Inicia_punteros_de_entidades
 310  8662 CD 29 88     	call Restore_Primera_entidad
 311  8665
 312  8665 AF           	xor a
 313  8666 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 314  8669
 315  8669 CD EE 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 316  866C 21 00 70     	ld hl,Album_de_fotos
 317  866F 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 318  8672              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 319  8672 3A DD 85         ld a,(Numero_de_entidades)
 320  8675 47               ld b,a
 321  8676 A7           	and a
 322  8677 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 323  8679
 324  8679 C5           2 push bc
 325  867A CD C3 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 326  867D
 327  867D 3A C9 85     	ld a,(Ctrl_0)
 328  8680 CB 67        	bit 4,a
 329  8682 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 330  8684
 331  8684              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 332  8684              ; Las entidades sólo generan disparo cuando se mueven.
 333  8684              ; 16/02/23.
 334  8684              ; [[[
 335  8684 CD 96 88     	call Detecta_disparo_entidad
 336  8687              ; ]]]
 337  8687 CD 1F 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 338  868A
 339  868A 21 C9 85     1 ld hl,Ctrl_0
 340  868D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 341  868F AF           	xor a
 342  8690 32 CA 85     	ld (Obj_dibujado),a
 343  8693
 344  8693 CD FA 87     6 call Store_Restore_entidades
 345  8696 C1           	pop bc
 346  8697 10 E0        	djnz 2B
 347  8699
 348  8699              ; Tras la gestión de las entidades, ... AMADEUS.
 349  8699
 350  8699 CD 3B 88     4 call Restore_Amadeus
 351  869C CD F0 86     	call Mov_Amadeus
 352  869F
 353  869F 3A C9 85     	ld a,(Ctrl_0)
 354  86A2 CB 67        	bit 4,a
 355  86A4 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 356  86A6
 357  86A6 CD 1F 87     	call Guarda_foto_entidad_a_pintar
 358  86A9
 359  86A9 21 C9 85     3 ld hl,Ctrl_0
 360  86AC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 361  86AE AF           	xor a
 362  86AF 32 CA 85     	ld (Obj_dibujado),a
 363  86B2 CD 4D 88     	call Store_Amadeus
 364  86B5
 365  86B5 CD 0C 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 366  86B8
 367  86B8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 368  86B8
 369  86B8 CD 7C 87     	call Calcula_numero_de_malotes
 370  86BB CD 94 87     	call Calcula_numero_de_disparotes
 371  86BE
 372  86BE 3E 04        	ld a,4
 373  86C0 D3 FE        	out ($fe),a
 374  86C2 C9           	ret
 375  86C3
 376  86C3              ; --------------------------------------------------------------------------------------------------------------
 377  86C3              ;
 378  86C3              ;	27/03/23
 379  86C3
 380  86C3              Mov_obj
 381  86C3
 382  86C3              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 383  86C3
 384  86C3 AF           	xor a
 385  86C4 32 CA 85     	ld (Obj_dibujado),a
 386  86C7 CD 29 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 387  86CA              ;														; Obj_dibujado="0".
 388  86CA              ; Movemos Entidades malignas.
 389  86CA
 390  86CA 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 391  86CD 24           	inc h                                               ; Salimos de la rutina.
 392  86CE 25           	dec h
 393  86CF C8           	ret z
 394  86D0
 395  86D0 CD 11 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 396  86D3
 397  86D3 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 398  86D6 CB 67        	bit 4,a
 399  86D8 C8           	ret z
 400  86D9
 401  86D9              ; Ha habido desplazamiento de la entidad maligna.
 402  86D9              ; Ha llegado a zona de AMADEUS ???
 403  86D9
 404  86D9 3A A2 85     	ld a,(Coordenada_y)
 405  86DC FE 14        	cp $14
 406  86DE D4 58 8A     	call nc, Compara_coordenadas_X
 407  86E1
 408  86E1              ; ---------
 409  86E1
 410  86E1 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 411  86E3 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 412  86E6 CD 29 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 413  86E9 CD 40 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 414  86EC CD 0F 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 415  86EF C9           	ret													; _de la misma.
 416  86F0
 417  86F0              ; --------------------------------------------------------------------------------------------------------------
 418  86F0              ;
 419  86F0              ;	29/1/23
 420  86F0
 421  86F0              Mov_Amadeus
 422  86F0
 423  86F0 AF           	xor a
 424  86F1 32 CA 85     	ld (Obj_dibujado),a
 425  86F4 CD 29 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 426  86F7              ;														; Obj_dibujado="0".
 427  86F7              ; Movemos Amadeus.
 428  86F7
 429  86F7 CD 73 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 430  86FA 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 431  86FD CB 67        	bit 4,a
 432  86FF C8           	ret z
 433  8700
 434  8700              ; ---------
 435  8700
 436  8700 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 437  8702 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 438  8705 CD 29 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 439  8708 CD 40 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 440  870B CD 0F 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 441  870E C9           	ret													; _de la nave.
 442  870F
 443  870F              ; --------------------------------------------------------------------------------------------------------------
 444  870F              ;
 445  870F              ;	31/01/23
 446  870F              ;
 447  870F              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 448  870F
 449  870F              Guarda_foto_entidad_a_borrar
 450  870F
 451  870F CD 4D 8F     	call Prepara_draw
 452  8712 CD 87 8E     	call calcula_CColumnass
 453  8715 CD BE 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 454  8718 CD 13 8F     	call Define_rutina_de_impresion
 455  871B CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 456  871E C9           	ret
 457  871F
 458  871F              ; --------------------------------------------------------------------------------------------------------------
 459  871F              ;
 460  871F              ;	31/01/23
 461  871F              ;
 462  871F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 463  871F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 464  871F
 465  871F              Guarda_foto_entidad_a_pintar
 466  871F
 467  871F CD 4C 87     	call Repone_pintar
 468  8722 CD 73 8C     	call Draw
 469  8725 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 470  8728 C9           	ret
 471  8729
 472  8729              ; --------------------------------------------------------------------------------------------------------------
 473  8729              ;
 474  8729              ;
 475  8729
 476  8729 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 477  872C 3A CA 85     	ld a,(Obj_dibujado)
 478  872F A7           	and a
 479  8730 28 05        	jr z,1F
 480  8732 11 BF 85     	ld de,Variables_de_pintado
 481  8735 18 03        	jr 2F
 482  8737 11 B5 85     1 ld de,Variables_de_borrado
 483  873A 01 08 00     2 ld bc,8
 484  873D ED B0        	ldir
 485  873F C9           	ret
 486  8740
 487  8740              ; --------------------------------------------------------------------------------------------------------------
 488  8740
 489  8740 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 490  8743 11 9B 85     	ld de,Filas
 491  8746 01 08 00     	ld bc,8
 492  8749 ED B0        	ldir
 493  874B C9           	ret
 494  874C
 495  874C 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 496  874F 11 9B 85     	ld de,Filas
 497  8752 01 08 00     	ld bc,8
 498  8755 ED B0        	ldir
 499  8757 C9           	ret
 500  8758
 501  8758              ; *************************************************************************************************************************************************************
 502  8758              ;
 503  8758              ; 8/1/23
 504  8758              ;
 505  8758              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 506  8758              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 507  8758              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 508  8758
 509  8758              ; Destruye HL y DE !!!!!
 510  8758
 511  8758              Inicia_punteros_de_entidades
 512  8758
 513  8758 21 68 84     	ld hl,Indice_de_entidades
 514  875B CD AC 87         call Extrae_address
 515  875E 22 D7 85         ld (Puntero_store_entidades),hl
 516  8761 21 6A 84     	ld hl,Indice_de_entidades+2
 517  8764 22 DB 85     	ld (Indice_restore),hl
 518  8767 CD AC 87     	call Extrae_address
 519  876A 22 D9 85     	ld (Puntero_restore_entidades),hl
 520  876D C9               ret
 521  876E
 522  876E              ; *************************************************************************************************************************************************************
 523  876E              ;
 524  876E              ; 8/1/23
 525  876E              ;
 526  876E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 527  876E
 528  876E 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 529  8771 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 530  8774 C9           	ret
 531  8775 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 532  8778 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 533  877B C9           	ret
 534  877C
 535  877C              ; -------------------------------------------------------------------------------------------------------------
 536  877C              ;
 537  877C              ; 28/2/23
 538  877C              ;
 539  877C
 540  877C              Calcula_numero_de_malotes
 541  877C
 542  877C 21 00 70     	ld hl,Album_de_fotos
 543  877F EB           	ex de,hl
 544  8780 2A E3 85     	ld hl,(Stack_snapshot)
 545  8783
 546  8783 06 00        	ld b,0
 547  8785 7D           	ld a,l
 548  8786 93           	sub e
 549  8787 28 07        	jr z,1F
 550  8789
 551  8789              ; Nº de malotes no es "0".
 552  8789
 553  8789 D6 06        2 sub 6
 554  878B 04           	inc b
 555  878C A7           	and a
 556  878D 20 FA        	jr nz,2B
 557  878F 78           	ld a,b
 558  8790
 559  8790 32 DE 85     1 ld (Numero_de_malotes),a
 560  8793 C9           	ret
 561  8794
 562  8794              ; -------------------------------------------------------------------------------------------------------------
 563  8794              ;
 564  8794              ; 28/2/23
 565  8794              ;
 566  8794
 567  8794              Calcula_numero_de_disparotes
 568  8794
 569  8794 21 60 70     	ld hl,Album_de_fotos_disparos
 570  8797 EB           	ex de,hl
 571  8798 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 572  879B
 573  879B 06 00        	ld b,0
 574  879D 7D           	ld a,l
 575  879E 93           	sub e
 576  879F 28 07        	jr z,1F
 577  87A1
 578  87A1              ; Nº de malotes no es "0".
 579  87A1
 580  87A1 D6 06        2 sub 6
 581  87A3 04           	inc b
 582  87A4 A7           	and a
 583  87A5 20 FA        	jr nz,2B
 584  87A7 78           	ld a,b
 585  87A8
 586  87A8 32 E7 85     1 ld (Numero_de_disparotes),a
 587  87AB C9           	ret
 588  87AC              ; *************************************************************************************************************************************************************
 589  87AC              ;
 590  87AC              ; 20/10/22
 591  87AC              ;
 592  87AC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 593  87AC              ;
 594  87AC              ; Destruye el puntero y DE !!!!!
 595  87AC
 596  87AC 5E           Extrae_address ld e,(hl)
 597  87AD 23           	inc hl
 598  87AE 56           	ld d,(hl)
 599  87AF 2B           	dec hl
 600  87B0 EB           	ex de,hl
 601  87B1 C9           	ret
 602  87B2
 603  87B2              ; *************************************************************************************************************************************************************
 604  87B2              ;
 605  87B2              ;	7/2/23
 606  87B2              ;
 607  87B2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 608  87B2              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 609  87B2              ;
 610  87B2              ;   Destruye HL y BC !!!!!,
 611  87B2              ;
 612  87B2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 613  87B2              ;					"0" ..... Izquierda.
 614  87B2
 615  87B2              Inicia_Puntero_objeto
 616  87B2
 617  87B2 3A AF 85     	ld a,(Cuad_objeto)
 618  87B5 E6 01        	and 1
 619  87B7 F5           	push af
 620  87B8 CC D6 87     	call z,Inicia_puntero_objeto_izq
 621  87BB F1           	pop af
 622  87BC 28 2B        	jr z,1F
 623  87BE CD C3 87     	call Inicia_puntero_objeto_der
 624  87C1 18 26        	jr 1F
 625  87C3
 626  87C3              ; Arrancamos desde la parte izquierda de la pantalla.
 627  87C3              ; Iniciamos (Indice_Sprite_der).
 628  87C3
 629  87C3 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 630  87C6 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 631  87C9 CD AC 87     	call Extrae_address
 632  87CC 22 9F 85     	ld (Puntero_objeto),hl
 633  87CF
 634  87CF 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 635  87D2              ;	call Extrae_address
 636  87D2 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 637  87D5 C9           	ret
 638  87D6
 639  87D6              ; Arrancamos desde la parte derecha de la pantalla.
 640  87D6              ; Iniciamos (Indice_Sprite_izq).
 641  87D6
 642  87D6 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 643  87D9 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 644  87DC CD AC 87     	call Extrae_address
 645  87DF 22 9F 85     	ld (Puntero_objeto),hl
 646  87E2
 647  87E2 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 648  87E5              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 649  87E5 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 650  87E8 C9           	ret
 651  87E9
 652  87E9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 653  87E9
 654  87E9 21 38 83     1 ld hl,Amadeus
 655  87EC ED 4B 9F 85  	ld bc,(Puntero_objeto)
 656  87F0 B7 ED 42     	sub hl,bc
 657  87F3 C0           	ret nz
 658  87F4 21 C9 85     	ld hl,Ctrl_0
 659  87F7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 660  87F9 C9           	ret 												; _de nuestra nave en los extremos.
 661  87FA
 662  87FA              ; *************************************************************************************************************************************************************
 663  87FA              ;
 664  87FA              ;	8/1/23
 665  87FA              ;
 666  87FA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 667  87FA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 668  87FA
 669  87FA              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 670  87FA              ;	_de la 2ª y 3ª entidad respectivamente.
 671  87FA
 672  87FA              Store_Restore_entidades
 673  87FA
 674  87FA E5           	push hl
 675  87FB D5           	push de
 676  87FC C5            	push bc
 677  87FD
 678  87FD              ;	STORE !!!!!
 679  87FD              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
 680  87FD
 681  87FD 21 9B 85     	ld hl,Filas
 682  8800 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 683  8804 01 3B 00     	ld bc,59
 684  8807 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 685  8809
 686  8809              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 687  8809
 688  8809 2A D9 85     	ld hl,(Puntero_restore_entidades)
 689  880C 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 690  880F 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 691  8812 01 3B 00     	ld bc,59
 692  8815 ED B0        	ldir
 693  8817
 694  8817              ;	Incrementa RESTORE !!!!!
 695  8817
 696  8817 2A DB 85         ld hl,(Indice_restore)
 697  881A 23           	inc hl
 698  881B 23           	inc hl
 699  881C 22 DB 85     	ld (Indice_restore),hl
 700  881F CD AC 87         call Extrae_address
 701  8822 22 D9 85         ld (Puntero_restore_entidades),hl
 702  8825 C1           	pop bc
 703  8826 D1           	pop de
 704  8827 E1           	pop hl
 705  8828 C9           	ret
 706  8829
 707  8829              ; **************************************************************************************************
 708  8829              ;
 709  8829              ;	29/10/22
 710  8829              ;
 711  8829              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 712  8829
 713  8829 E5           Restore_Primera_entidad push hl
 714  882A D5           	push de
 715  882B C5            	push bc
 716  882C 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 717  882F 11 9B 85     	ld de,Filas
 718  8832 01 3B 00     	ld bc,59
 719  8835 ED B0        	ldir
 720  8837 C1           	pop bc
 721  8838 D1           	pop de
 722  8839 E1           	pop hl
 723  883A C9           	ret
 724  883B
 725  883B              ; **************************************************************************************************
 726  883B              ;
 727  883B              ;	25/01/23
 728  883B              ;
 729  883B              ;	Restore_Amadeus
 730  883B              ;
 731  883B              ;	Cargamos en DRAW los parámetros de Amadeus.
 732  883B              ;
 733  883B
 734  883B E5           Restore_Amadeus	push hl
 735  883C D5           	push de
 736  883D C5            	push bc
 737  883E 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 738  8841 11 9B 85     	ld de,Filas
 739  8844 01 3B 00     	ld bc,59
 740  8847 ED B0        	ldir
 741  8849 C1           	pop bc
 742  884A D1           	pop de
 743  884B E1           	pop hl
 744  884C C9           	ret
 745  884D
 746  884D              ; *************************************************************************************************************************************************************
 747  884D              ;
 748  884D              ;	29/01/23
 749  884D              ;
 750  884D              ;	Store_Amadeus
 751  884D              ;
 752  884D              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 753  884D              ;
 754  884D
 755  884D E5           Store_Amadeus push hl
 756  884E D5           	push de
 757  884F C5            	push bc
 758  8850 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 759  8853 11 74 84     	ld de,Amadeus_db
 760  8856 01 3B 00     	ld bc,59
 761  8859 ED B0        	ldir
 762  885B C1           	pop bc
 763  885C D1           	pop de
 764  885D E1           	pop hl
 765  885E C9           	ret
 766  885F
 767  885F              ; **************************************************************************************************
 768  885F
 769  885F              ; Teclado.
 770  885F
 771  885F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 772  8861 DB FE        	in a,($fe)
 773  8863 E6 01        	and $01
 774  8865 28 02        	jr z,1f
 775  8867 18 F6        	jr Pulsa_ENTER
 776  8869 C9           1 ret
 777  886A
 778  886A              ; **************************************************************************************************
 779  886A              ;
 780  886A              ; Temporización.
 781  886A
 782  886A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 783  886A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 784  886A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 785  886A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 786  886A
 787  886A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 788  886A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 789  886A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 790  886A
 791  886A              ; A partir de $4f61 no hace falta DELAY.
 792  886A
 793  886A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 794  886A
 795  886A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 796  886D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 797  886E 78           	LD A,B
 798  886F A7           	AND A
 799  8870 20 FB        	JR NZ,wait
 800  8872 C9           	RET
 801  8873
 802  8873              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 803  8873              ;
 804  8873              ;	5/3/23
 805  8873              ;
 806  8873              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 807  8873
 808  8873              Movimiento_Amadeus
 809  8873
 810  8873              ; Disparo.
 811  8873
 812  8873 3E F7        	ld a,$f7												; "5" para disparar.
 813  8875 DB FE        	in a,($fe)
 814  8877 E6 10        	and $10
 815  8879 CC D3 88     	call z,Genera_disparo
 816  887C
 817  887C 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 818  887E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 819  8880 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 820  8882 CC B1 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
 821  8885 3E F7        	ld a,$f7
 822  8887 DB FE        	in a,($fe)
 823  8889 E6 01        	and $01
 824  888B C8           	ret z
 825  888C
 826  888C 3E F7        	ld a,$f7
 827  888E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 828  8890 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 829  8892 CC 93 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 830  8895 C9           	ret
 831  8896
 832  8896              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 833  8896              ;
 834  8896              ;	Rutina provisional para que los malotes cagen balas.
 835  8896
 836  8896 3E 7F        Detecta_disparo_entidad ld a,$7f
 837  8898 DB FE        	in a,($fe)
 838  889A E6 01        	and 1
 839  889C C0           	ret nz
 840  889D CD D3 88     	call Genera_disparo
 841  88A0 C9           	ret
 842  88A1
 843  88A1              ; Pinta indicadores de FILAS. ------------------------------------------------------
 844  88A1
 845  88A1 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 846  88A4
 847  88A4              ; ----------
 848  88A4 06 20        	ld b,32
 849  88A6 E5           2 push hl
 850  88A7 C5           	push bc
 851  88A8              ; ----------
 852  88A8
 853  88A8 06 BF        	ld b,$bf
 854  88AA 36 80        1 ld (hl),%10000000
 855  88AC CD 59 8F     	call NextScan
 856  88AF 10 F9        	djnz 1B
 857  88B1
 858  88B1              ; ----------
 859  88B1 C1           	pop bc
 860  88B2 E1           	pop hl
 861  88B3 2C           	inc l
 862  88B4 10 F0        	djnz 2B
 863  88B6              ; ----------
 864  88B6
 865  88B6 06 03        	ld b,3
 866  88B8 21 00 47         ld hl,$4700
 867  88BB CD C1 88     3 call Bucle_1
 868  88BE 10 FB            djnz 3B
 869  88C0 C9               ret
 870  88C1
 871  88C1 C5           Bucle_1 push bc
 872  88C2 E5                   push hl
 873  88C3 D1                   pop de
 874  88C4 13                   inc de
 875  88C5 01 FF 00             ld bc,255
 876  88C8 36 FF                ld (hl),255
 877  88CA ED B0                ldir
 878  88CC 23                   inc hl
 879  88CD 3E 07                ld a,7
 880  88CF 84                   add a,h
 881  88D0 67                   ld h,a
 882  88D1 C1                   pop bc
 883  88D2 C9                   ret
 884  88D3
 885  88D3              ; ---------------------------------------------------------------
 886  88D3
 887  88D3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88D3              ; ******************************************************************************************************************************************************************************************
   2+ 88D3              ;
   3+ 88D3              ;   27/03/23
   4+ 88D3              ;
   5+ 88D3              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88D3              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88D3              ;
   8+ 88D3              ;
   9+ 88D3              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88D3              ;
  11+ 88D3              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88D3              ;               _ hacen las entidades hacia abajo.
  13+ 88D3              ;
  14+ 88D3              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88D3              ;
  16+ 88D3              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88D3              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88D3              ;
  19+ 88D3              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88D3              ;           _ la bala.
  21+ 88D3              ;
  22+ 88D3              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88D3              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88D3              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88D3              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88D3              ;           _ en el momento de generarse la bala)).
  27+ 88D3
  28+ 88D3              Genera_disparo
  29+ 88D3
  30+ 88D3              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88D3              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88D3              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88D3              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88D3              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 88D3              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 88D3              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88D3
  38+ 88D3              ; Exclusiones:
  39+ 88D3
  40+ 88D3 3A D2 85         ld a,(Columnas)
  41+ 88D6 47               ld b,a
  42+ 88D7 3A 9C 85         ld a,(Columns)
  43+ 88DA B8               cp b
  44+ 88DB C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88DC
  46+ 88DC              ; ----- ----- -----
  47+ 88DC
  48+ 88DC 3A C9 85         ld a,(Ctrl_0)
  49+ 88DF CB 77            bit 6,a
  50+ 88E1 20 08            jr nz,16F
  51+ 88E3
  52+ 88E3 3A A2 85         ld a,(Coordenada_y)
  53+ 88E6 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 88E8 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 88E9 18 11            jr 14F
  56+ 88EB
  57+ 88EB              ; ----- ----- -----
  58+ 88EB
  59+ 88EB              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  60+ 88EB
  61+ 88EB 21 F2 83     16 ld hl,ON_Disparo_2A
  62+ 88EE CD AC 87         call Extrae_address
  63+ 88F1 24               inc h
  64+ 88F2 25               dec h
  65+ 88F3 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  66+ 88F5
  67+ 88F5 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a este scanline de pantalla,_
  68+ 88F8 A7               and a                               ; _ salimos de la rutina, (no se autorizará un 2º disparo de Amadeus).
  69+ 88F9 ED 52            sbc hl,de
  70+ 88FB D0               ret nc
  71+ 88FC
  72+ 88FC              ; ----- ----- -----
  73+ 88FC
  74+ 88FC 21 00 80     14 ld hl,Indice_disparo
  75+ 88FF 3A A3 85         ld a,(CTRL_DESPLZ)
  76+ 8902 4F               ld c,a
  77+ 8903 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  78+ 8905              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  79+ 8905              ;                                            ""        ""       "f9", B="1"
  80+ 8905              ;                                            ""        ""       "fb", B="2"
  81+ 8905              ;                                            ""        ""       "fb", B="3"
  82+ 8905 A7               and a
  83+ 8906 28 10            jr z,1F
  84+ 8908 E6 01            and 1
  85+ 890A C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  86+ 890B
  87+ 890B 79               ld a,c
  88+ 890C 16 F9            ld d,$f9
  89+ 890E 23           2 inc hl
  90+ 890F 23               inc hl
  91+ 8910 04               inc b
  92+ 8911 BA               cp d
  93+ 8912 28 04            jr z,1F
  94+ 8914 14               inc d
  95+ 8915 14               inc d
  96+ 8916 18 F6            jr 2B
  97+ 8918
  98+ 8918 CD AC 87     1 call Extrae_address
  99+ 891B E5               push hl
 100+ 891C FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 101+ 891E DD 21 EC 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 102+ 8922
 103+ 8922              ;	Se cumplen las condiciones necesarias para generar un disparo.
 104+ 8922              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 105+ 8922
 106+ 8922 3A AF 85     	ld a,(Cuad_objeto)
 107+ 8925 FE 02            cp 2
 108+ 8927 38 64            jr c,3F
 109+ 8929 28 62            jr z,3F
 110+ 892B
 111+ 892B              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 112+ 892B
 113+ 892B E6 01            and 1
 114+ 892D 28 2F            jr z,4F
 115+ 892F
 116+ 892F              ; 	Estamos en el 3er cuadrante de pantalla.
 117+ 892F              ; 	3er CUAD. ----- ----- ----- ----- -----
 118+ 892F              ;
 119+ 892F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 120+ 892F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 121+ 892F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 122+ 892F
 123+ 892F 2A 9D 85     	ld hl,(Posicion_actual)
 124+ 8932
 125+ 8932              ;   Amadeus o entidad ???.
 126+ 8932
 127+ 8932 3A C9 85         ld a,(Ctrl_0)
 128+ 8935 CB 77            bit 6,a
 129+ 8937 28 0D            jr z,8F
 130+ 8939
 131+ 8939              ; 	Dispara Amadeus.
 132+ 8939
 133+ 8939 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 134+ 893B CD 68 8F         call PreviousScan
 135+ 893E CD 68 8F         call PreviousScan
 136+ 8941
 137+ 8941              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 138+ 8941              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 139+ 8941              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 140+ 8941              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 141+ 8941
 142+ 8941 CD B7 89         call Ajusta_disparo_parte_izquierda
 143+ 8944 18 10            jr 10F
 144+ 8946
 145+ 8946              ; 	Dispara Entidad.
 146+ 8946
 147+ 8946 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
 148+ 8948
 149+ 8948              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 150+ 8948              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 151+ 8948
 152+ 8948 C5               push bc
 153+ 8949 06 10            ld b,16
 154+ 894B CD 59 8F     9 call NextScan
 155+ 894E 10 FB            djnz 9B
 156+ 8950 C1               pop bc
 157+ 8951
 158+ 8951              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 159+ 8951              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 160+ 8951              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 161+ 8951              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 162+ 8951
 163+ 8951 CD B7 89         call Ajusta_disparo_parte_izquierda
 164+ 8954 18 03            jr 17F
 165+ 8956
 166+ 8956 CD 2C 8A     10 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 167+ 8959              ;                                                     ; _al generar el disparo.
 168+ 8959
 169+ 8959              ; 	LLegados a este punto tendremos:
 170+ 8959              ;
 171+ 8959              ;       Puntero_objeto_disparo en IY.
 172+ 8959              ;       Rutinas_de_impresion en IX.
 173+ 8959              ;       Puntero_de_impresion en HL.
 174+ 8959              ;       Impacto/Dirección en BC.
 175+ 8959
 176+ 8959 CD BF 89     17 call Almacena_disparo
 177+ 895C 18 51            jr 6F                                             ; RET.
 178+ 895E
 179+ 895E
 180+ 895E              ; 	Estamos en el 4º cuadrante de pantalla.
 181+ 895E              ; 	4º CUAD. ----- ----- ----- ----- -----
 182+ 895E              ;
 183+ 895E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 184+ 895E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 185+ 895E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 186+ 895E
 187+ 895E 2A 9D 85     4 ld hl,(Posicion_actual)
 188+ 8961
 189+ 8961              ;   Amadeus o entidad ???.
 190+ 8961
 191+ 8961 3A C9 85         ld a,(Ctrl_0)
 192+ 8964 CB 77            bit 6,a
 193+ 8966 28 0D            jr z,11F
 194+ 8968
 195+ 8968              ; 	Dispara Amadeus.
 196+ 8968
 197+ 8968 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 198+ 896A CD 68 8F         call PreviousScan
 199+ 896D CD 68 8F         call PreviousScan
 200+ 8970
 201+ 8970              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 202+ 8970              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 203+ 8970              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 204+ 8970              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 205+ 8970
 206+ 8970 CD B0 89         call Ajusta_disparo_parte_derecha
 207+ 8973 18 10            jr 13F
 208+ 8975
 209+ 8975              ; 	Dispara Entidad.
 210+ 8975
 211+ 8975 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
 212+ 8977
 213+ 8977              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 214+ 8977              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 215+ 8977
 216+ 8977 C5               push bc
 217+ 8978
 218+ 8978 06 10            ld b,16
 219+ 897A CD 59 8F     12 call NextScan
 220+ 897D 10 FB            djnz 12B
 221+ 897F
 222+ 897F C1               pop bc
 223+ 8980
 224+ 8980              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 225+ 8980              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 226+ 8980              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 227+ 8980              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 228+ 8980
 229+ 8980 CD B0 89         call Ajusta_disparo_parte_derecha
 230+ 8983 18 03            jr 18F
 231+ 8985
 232+ 8985
 233+ 8985 CD 2C 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 234+ 8988              ;                                                     ; _al generar el disparo.
 235+ 8988
 236+ 8988              ; LLegados a este punto tendremos:
 237+ 8988              ;
 238+ 8988              ;       Puntero_objeto_disparo en IY.
 239+ 8988              ;       Rutinas_de_impresion en IX.
 240+ 8988              ;       Puntero_de_impresion en HL.
 241+ 8988              ;       Impacto/Dirección en BC.
 242+ 8988
 243+ 8988 CD BF 89     18 call Almacena_disparo
 244+ 898B 18 22            jr 6F                                             ; RET.
 245+ 898D
 246+ 898D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 247+ 898D
 248+ 898D 28 11        3 jr z,5F
 249+ 898F
 250+ 898F              ; 	1er CUAD. ----- ----- ----- ----- -----
 251+ 898F              ;
 252+ 898F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 253+ 898F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 254+ 898F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 255+ 898F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 256+ 898F
 257+ 898F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 258+ 898F              ;	   ""        ""       "f9", B="1"
 259+ 898F              ;	   ""        ""       "fb", B="2"
 260+ 898F              ; 	   ""        ""       "fb", B="3"
 261+ 898F
 262+ 898F 2A 9D 85     	ld hl,(Posicion_actual)
 263+ 8992 CD 59 8F     	call NextScan
 264+ 8995
 265+ 8995              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 266+ 8995              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 267+ 8995              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 268+ 8995              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 269+ 8995
 270+ 8995 CD B7 89         call Ajusta_disparo_parte_izquierda
 271+ 8998
 272+ 8998              ; 	No se produce impacto. B="$80"
 273+ 8998              ; 	Dirección del proyectil hacia abajo. C="$80"
 274+ 8998
 275+ 8998 01 80 80         ld bc,$8080
 276+ 899B
 277+ 899B              ; 	LLegados a este punto tendremos:
 278+ 899B              ;
 279+ 899B              ;       Puntero_objeto_disparo en IY.
 280+ 899B              ;       Rutinas_de_impresion en IX.
 281+ 899B              ;       Puntero_de_impresion en HL.
 282+ 899B              ;       Impacto/Dirección en BC.
 283+ 899B
 284+ 899B CD BF 89         call Almacena_disparo
 285+ 899E 18 0F            jr 6F                                           ; RET.
 286+ 89A0
 287+ 89A0              ; 	Estamos en el 2º cuadrante de pantalla.
 288+ 89A0              ; 	2º CUAD. ----- ----- ----- ----- -----
 289+ 89A0              ;
 290+ 89A0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 291+ 89A0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 292+ 89A0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 293+ 89A0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 294+ 89A0
 295+ 89A0 2A 9D 85     5 ld hl,(Posicion_actual)
 296+ 89A3 CD 59 8F     	call NextScan
 297+ 89A6
 298+ 89A6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 299+ 89A6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 300+ 89A6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 301+ 89A6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 302+ 89A6
 303+ 89A6 CD B0 89         call Ajusta_disparo_parte_derecha
 304+ 89A9
 305+ 89A9              ; 	No se produce impacto. B="$80"
 306+ 89A9              ; 	Dirección del proyectil hacia abajo. C="80"
 307+ 89A9
 308+ 89A9 01 80 80     15 ld bc,$8080
 309+ 89AC
 310+ 89AC              ; 	LLegados a este punto tendremos:
 311+ 89AC              ;
 312+ 89AC              ;       Puntero_objeto_disparo en IY.
 313+ 89AC              ;       Rutinas_de_impresion en IX.
 314+ 89AC              ;       Puntero_de_impresion en HL.
 315+ 89AC              ;       Impacto/Dirección en BC.
 316+ 89AC
 317+ 89AC CD BF 89         call Almacena_disparo
 318+ 89AF
 319+ 89AF C9           6 ret
 320+ 89B0
 321+ 89B0              ; ----------------------------------------------------------------
 322+ 89B0              ;
 323+ 89B0              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 324+ 89B0              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 325+ 89B0              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 326+ 89B0
 327+ 89B0 78           Ajusta_disparo_parte_derecha ld a,b
 328+ 89B1 FE 02            cp 2
 329+ 89B3 38 01            jr c,1F
 330+ 89B5 23               inc hl
 331+ 89B6 C9           1 ret
 332+ 89B7
 333+ 89B7 78           Ajusta_disparo_parte_izquierda ld a,b
 334+ 89B8 FE 01        	cp 1
 335+ 89BA 20 01        	jr nz,1F
 336+ 89BC 2B           	dec hl
 337+ 89BD 2B           1 dec hl
 338+ 89BE C9               ret
 339+ 89BF
 340+ 89BF              ; ----------------------------------------------------------------
 341+ 89BF              ;
 342+ 89BF              ;   25/02/23
 343+ 89BF              ;
 344+ 89BF              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 345+ 89BF              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 346+ 89BF
 347+ 89BF              Almacena_disparo
 348+ 89BF
 349+ 89BF E5               push hl  										; HL contiene el puntero de impresión.
 350+ 89C0 F1               pop af
 351+ 89C1 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 352+ 89C2
 353+ 89C2 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 354+ 89C3 E6 01            and 1
 355+ 89C5 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 356+ 89C7              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 357+ 89C7              ; 	Dispara AMADEUS.
 358+ 89C7
 359+ 89C7              ;	Comprobamos que a Amadeus aún le quedan disparos.
 360+ 89C7              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 361+ 89C7              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 362+ 89C7              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 363+ 89C7
 364+ 89C7 C5               push bc
 365+ 89C8 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 366+ 89CB 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 367+ 89CE A7               and a
 368+ 89CF ED 42            sbc hl,bc
 369+ 89D1 CC 75 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 370+ 89D4 C1               pop bc
 371+ 89D5 28 54            jr z,4F
 372+ 89D7
 373+ 89D7 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 374+ 89DA 23               inc hl
 375+ 89DB 23               inc hl
 376+ 89DC 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 377+ 89DF              ;                                                   ; _ Disparo_(+1).
 378+ 89DF 18 18            jr 2F
 379+ 89E1
 380+ 89E1              ; Dispara una entidad.
 381+ 89E1
 382+ 89E1 C5           1 push bc
 383+ 89E2 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 384+ 89E5 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 385+ 89E8 A7               and a
 386+ 89E9 ED 42            sbc hl,bc
 387+ 89EB CC 6E 87         call z,Inicia_Puntero_Disparo_Entidades
 388+ 89EE C1               pop bc
 389+ 89EF 28 3A            jr z,4F
 390+ 89F1
 391+ 89F1 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 392+ 89F4 23               inc hl
 393+ 89F5 23               inc hl
 394+ 89F6 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 395+ 89F9              ;                                                   ; _ Disparo_(+1).
 396+ 89F9 CD AC 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 397+ 89FC              ;                                                   ; _ los 8 bytes que definen el disparo:
 398+ 89FC              ;
 399+ 89FC              ;                                                     Puntero_objeto_disparo en IY.
 400+ 89FC              ;                                                     Rutinas_de_impresion en IX.
 401+ 89FC              ;                                                     Puntero_de_impresion en HL.
 402+ 89FC              ;                                                     Impacto/Dirección en BC.
 403+ 89FC
 404+ 89FC 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 405+ 89FD 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 406+ 89FE 23               inc hl                                          ; _ al siguiente.
 407+ 89FF A7               and a
 408+ 8A00 20 C0            jr nz,3B
 409+ 8A02
 410+ 8A02 08               ex af,af
 411+ 8A03 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 412+ 8A07 F9               ld sp,hl
 413+ 8A08
 414+ 8A08 DD E5            push ix                                         ; Rutina de impresión.
 415+ 8A0A F5               push af                                         ; Puntero de impresión.
 416+ 8A0B FD E5            push iy                                         ; Puntero objeto.
 417+ 8A0D C5               push bc                                         ; Control.
 418+ 8A0E
 419+ 8A0E ED 7B DF 85      ld sp,(Stack)
 420+ 8A12
 421+ 8A12              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 422+ 8A12
 423+ 8A12 21 D6 85     	ld hl,Ctrl_1
 424+ 8A15 CB C6        	set 0,(hl)
 425+ 8A17
 426+ 8A17 DD E5        	push ix
 427+ 8A19 E1               pop hl
 428+ 8A1A F5               push af
 429+ 8A1B DD E1            pop ix
 430+ 8A1D
 431+ 8A1D CD A0 7F     	call Guarda_foto_registros
 432+ 8A20
 433+ 8A20 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 434+ 8A23 CB 86        	res 0,(hl)
 435+ 8A25
 436+ 8A25              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 437+ 8A25              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 438+ 8A25
 439+ 8A25 CD 75 87         call Inicia_Puntero_Disparo_Amadeus
 440+ 8A28 CD 6E 87         call Inicia_Puntero_Disparo_Entidades
 441+ 8A2B
 442+ 8A2B C9           4 ret
 443+ 8A2C
 444+ 8A2C              ; ----------------------------------------------------------------
 445+ 8A2C              ;
 446+ 8A2C              ;   4/3/23
 447+ 8A2C              ;
 448+ 8A2C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 449+ 8A2C              ;   _ al generarse el disparo.
 450+ 8A2C              ;
 451+ 8A2C              ;       "$80" ..... No se produce colisión.
 452+ 8A2C              ;       "$81" ..... Se produce colisión.
 453+ 8A2C
 454+ 8A2C              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 455+ 8A2C              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 456+ 8A2C
 457+ 8A2C
 458+ 8A2C FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 459+ 8A2E E5               push hl                                        ; Puntero de impresión.
 460+ 8A2F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 461+ 8A31 CD 48 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 462+ 8A34 E1               pop hl
 463+ 8A35 E5               push hl
 464+ 8A36 CD 59 8F         call NextScan
 465+ 8A39
 466+ 8A39 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 467+ 8A3A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 468+ 8A3C 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 469+ 8A3E              ;                                                  ; _ 2º scanline si esto es así.
 470+ 8A3E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 471+ 8A40 CD 48 8A         call Bucle_2
 472+ 8A43
 473+ 8A43 43           2 ld b,e
 474+ 8A44 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 475+ 8A45 FD E1            pop iy
 476+ 8A47 C9               ret
 477+ 8A48
 478+ 8A48               ; ---------- ----------
 479+ 8A48
 480+ 8A48 06 02        Bucle_2 ld b,2
 481+ 8A4A FD 7E 00     2 ld a,(iy)
 482+ 8A4D A6               and (hl)
 483+ 8A4E 28 02            jr z,1F
 484+ 8A50 1E 81            ld e,$81
 485+ 8A52 23           1 inc hl
 486+ 8A53 FD 23            inc iy
 487+ 8A55 10 F3            djnz 2B
 488+ 8A57 C9               ret
 489+ 8A58
 490+ 8A58              ; -------------------------------------------------------------------------------------------------------------
 491+ 8A58              ;
 492+ 8A58              ;   11/04/23
 493+ 8A58              ;
 494+ 8A58              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 495+ 8A58              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 496+ 8A58              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 497+ 8A58              ;
 498+ 8A58              ;   MODIFICA: HL,DE,BC,A y AF´.
 499+ 8A58
 500+ 8A58              Compara_coordenadas_X
 501+ 8A58
 502+ 8A58              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 503+ 8A58
 504+ 8A58              ; Preparamos registros:
 505+ 8A58
 506+ 8A58 21 A1 85         ld hl,Filas+6
 507+ 8A5B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 508+ 8A5C 23               inc hl
 509+ 8A5D 23               inc hl
 510+ 8A5E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 511+ 8A5F 43               ld b,e
 512+ 8A60 21 AF 85         ld hl,Filas+20
 513+ 8A63 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 514+ 8A64 21 F0 85         ld hl,Coordenadas_X_Entidad
 515+ 8A67 CD 49 8C         call Guarda_coordenadas_X
 516+ 8A6A
 517+ 8A6A              ; Preparamos registros:
 518+ 8A6A
 519+ 8A6A 21 7A 84         ld hl,Amadeus_db+6
 520+ 8A6D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 521+ 8A6E 23               inc hl
 522+ 8A6F 23               inc hl
 523+ 8A70 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 524+ 8A71 7B               ld a,e
 525+ 8A72 08               ex af,af'
 526+ 8A73 21 88 84         ld hl,Amadeus_db+20
 527+ 8A76 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 528+ 8A77 21 ED 85         ld hl,Coordenadas_X_Amadeus
 529+ 8A7A CD 49 8C         call Guarda_coordenadas_X
 530+ 8A7D
 531+ 8A7D              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 532+ 8A7D              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 533+ 8A7D
 534+ 8A7D 04               inc b
 535+ 8A7E 05               dec b
 536+ 8A7F 28 04            jr z,1F
 537+ 8A81 06 03            ld b,3
 538+ 8A83 18 02            jr 2F
 539+ 8A85 06 02        1 ld b,2
 540+ 8A87 08           2 ex af,af'
 541+ 8A88 3C               inc a
 542+ 8A89 3D               dec a
 543+ 8A8A 28 04            jr z,5F
 544+ 8A8C 0E 03            ld c,3
 545+ 8A8E 18 02            jr 6F
 546+ 8A90 0E 02        5 ld c,2
 547+ 8A92 79           6 ld a,c
 548+ 8A93 08               ex af,af'
 549+ 8A94 11 F0 85         ld de,Coordenadas_X_Entidad
 550+ 8A97 1A           4 ld a,(de)
 551+ 8A98 21 ED 85         ld hl,Coordenadas_X_Amadeus
 552+ 8A9B BE           3 cp (hl)
 553+ 8A9C 28 0B            jr z,7F
 554+ 8A9E 23               inc hl
 555+ 8A9F 0D               dec c
 556+ 8AA0 20 F9            jr nz,3B
 557+ 8AA2 13               inc de
 558+ 8AA3 08               ex af,af'
 559+ 8AA4 4F               ld c,a
 560+ 8AA5 08               ex af,af'
 561+ 8AA6 10 EF            djnz 4B
 562+ 8AA8 C9           8 ret
 563+ 8AA9 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 564+ 8AAB 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 565+ 8AAE              ;                                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 566+ 8AAE 21 EC 85         ld hl,Impacto2
 567+ 8AB1 CB D6            set 2,(hl)
 568+ 8AB3 18 F3            jr 8B
 569+ 8AB5
 570+ 8AB5              ; -----------------------------------------------------------------------
 571+ 8AB5              ;
 572+ 8AB5              ;   11/04/23
 573+ 8AB5              ;
 574+ 8AB5
 575+ 8AB5              Detecta_colision_nave_entidad
 576+ 8AB5
 577+ 8AB5              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8AB5
 579+ 8AB5 2A 9D 85         ld hl,(Posicion_actual)
 580+ 8AB8 CD BE 8E         call Calcula_puntero_de_impresion
 581+ 8ABB
 582+ 8ABB              ; Ahora, IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
 583+ 8ABB              ;        IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
 584+ 8ABB
 585+ 8ABB
 586+ 8ABB              ;    jr $
 587+ 8ABB
 588+ 8ABB DD E5            push ix
 589+ 8ABD E1               pop hl
 590+ 8ABE E5               push hl
 591+ 8ABF
 592+ 8ABF              ; ----- ----- -----
 593+ 8ABF 1E 00            ld e,0                                        ; Indica impacto.
 594+ 8AC1 06 0A            ld b,10
 595+ 8AC3 CD DB 8A     2 call Bucle_3                                    ; Comprobamos el 1er scanline.
 596+ 8AC6 7B               ld a,e
 597+ 8AC7 FE 05            cp 5
 598+ 8AC9 38 00            jr c,3F
 599+ 8ACB
 600+ 8ACB              ;    ld hl,Impacto2
 601+ 8ACB              ;    set 2,(hl)
 602+ 8ACB              ;    jr 1F
 603+ 8ACB
 604+ 8ACB E1           3 pop hl
 605+ 8ACC CD 59 8F         call NextScan
 606+ 8ACF E5               push hl
 607+ 8AD0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 608+ 8AD1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 609+ 8AD3 28 04            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 610+ 8AD5 30 02            jr nc,1F
 611+ 8AD7              ;                                                  ; _ 2º scanline si esto es así.
 612+ 8AD7 10 EA            djnz 2B
 613+ 8AD9
 614+ 8AD9 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 615+ 8ADA C9               ret
 616+ 8ADB
 617+ 8ADB               ; ---------- ----------
 618+ 8ADB
 619+ 8ADB C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 620+ 8ADC 3A 9C 85         ld a,(Columns)
 621+ 8ADF 47               ld b,a
 622+ 8AE0 FD 7E 00     2 ld a,(iy)
 623+ 8AE3 BE               cp (hl)
 624+ 8AE4 28 01            jr z,1F
 625+ 8AE6
 626+ 8AE6 1C               inc e
 627+ 8AE7
 628+ 8AE7 23           1 inc hl
 629+ 8AE8 FD 23            inc iy
 630+ 8AEA 10 F4            djnz 2B
 631+ 8AEC C1               pop bc
 632+ 8AED C9               ret
 633+ 8AEE
 634+ 8AEE              ; -------------------------------------------------------------------------------------------------------------
 635+ 8AEE              ;
 636+ 8AEE              ;   13/03/23
 637+ 8AEE              ;
 638+ 8AEE              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 639+ 8AEE              ;
 640+ 8AEE              ;   DESTRUYE: HL,BC,DE y A.
 641+ 8AEE
 642+ 8AEE 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 643+ 8AF1 7E               ld a,(hl)
 644+ 8AF2 A7               and a
 645+ 8AF3 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 646+ 8AF4
 647+ 8AF4 44               ld b,h
 648+ 8AF5 4D               ld c,l
 649+ 8AF6 2A E5 85         ld hl,(Stack_snapshot_disparos)
 650+ 8AF9 E5               push hl
 651+ 8AFA A7               and a
 652+ 8AFB ED 42            sbc hl,bc
 653+ 8AFD E5               push hl
 654+ 8AFE C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 655+ 8AFF
 656+ 8AFF E1               pop hl
 657+ 8B00 54               ld d,h
 658+ 8B01 5D               ld e,l
 659+ 8B02 1B               dec de
 660+ 8B03 ED B8            lddr                                                ; Limpiamos.
 661+ 8B05
 662+ 8B05 21 60 70         ld hl,Album_de_fotos_disparos
 663+ 8B08 22 E5 85         ld (Stack_snapshot_disparos),hl
 664+ 8B0B
 665+ 8B0B C9               ret
 666+ 8B0C
 667+ 8B0C              ; -------------------------------------------------------------------------------------------------------------
 668+ 8B0C              ;
 669+ 8B0C              ;   28/03/23
 670+ 8B0C              ;
 671+ 8B0C
 672+ 8B0C 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 673+ 8B0F 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 674+ 8B12
 675+ 8B12 CD AC 87     2 call Extrae_address
 676+ 8B15 7E               ld a,(hl)
 677+ 8B16 A7               and a
 678+ 8B17 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 679+ 8B19
 680+ 8B19              ; ----- ----- ----- ----- ----- -----
 681+ 8B19
 682+ 8B19 C5               push bc
 683+ 8B1A CD C4 8B         call foto_disparo_a_borrar
 684+ 8B1D
 685+ 8B1D              ; Existe colisión con este disparo???
 686+ 8B1D
 687+ 8B1D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 688+ 8B1E 7E               ld a,(hl)
 689+ 8B1F 2B               dec hl
 690+ 8B20 E6 01            and 1
 691+ 8B22 28 0C            jr z,9F
 692+ 8B24
 693+ 8B24              ; Elimino el disparo de la base de datos.
 694+ 8B24
 695+ 8B24 E5               push hl
 696+ 8B25 CD 3E 8C         call Elimina_disparo_de_base_de_datos
 697+ 8B28 21 EC 85         ld hl,Impacto2
 698+ 8B2B CB C6            set 0,(hl)
 699+ 8B2D E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
 700+ 8B2E 18 06            jr 11F
 701+ 8B30
 702+ 8B30 CD ED 8B     9 call Mueve_disparo
 703+ 8B33 CD C4 8B         call foto_disparo_a_borrar
 704+ 8B36
 705+ 8B36 C1           11 pop bc
 706+ 8B37
 707+ 8B37 18 04            jr 7F
 708+ 8B39
 709+ 8B39              ; ----- ----- ----- ----- ----- -----
 710+ 8B39
 711+ 8B39 ED 42        1 sbc hl,bc
 712+ 8B3B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 713+ 8B3D
 714+ 8B3D 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 715+ 8B40 23               inc hl
 716+ 8B41 23               inc hl
 717+ 8B42 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 718+ 8B45 18 CB            jr 2B
 719+ 8B47
 720+ 8B47 CD 75 87     3 call Inicia_Puntero_Disparo_Amadeus
 721+ 8B4A
 722+ 8B4A 01 66 84         ld bc,Disparo_11
 723+ 8B4D 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 724+ 8B50
 725+ 8B50 CD AC 87     5 call Extrae_address
 726+ 8B53 7E               ld a,(hl)
 727+ 8B54 A7               and a
 728+ 8B55 28 5B            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 729+ 8B57
 730+ 8B57              ; ----- ----- ----- ----- ----- -----
 731+ 8B57
 732+ 8B57 C5               push bc
 733+ 8B58 CD C4 8B         call foto_disparo_a_borrar
 734+ 8B5B
 735+ 8B5B              ; Existe colisión con este disparo???
 736+ 8B5B
 737+ 8B5B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 738+ 8B5C 7E               ld a,(hl)
 739+ 8B5D 2B               dec hl
 740+ 8B5E E6 01            and 1
 741+ 8B60 28 47            jr z,10F
 742+ 8B62
 743+ 8B62              ; La colisión se produce con Amadeus???
 744+ 8B62              ; Amadeus siempre tiene (Coordenada_y)="$16".
 745+ 8B62
 746+ 8B62 E5               push hl
 747+ 8B63
 748+ 8B63 06 04            ld b,4
 749+ 8B65 23           16 inc hl
 750+ 8B66 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 751+ 8B68
 752+ 8B68 CD AC 87         call Extrae_address
 753+ 8B6B CD 70 95         call Genera_coordenadas_disparo
 754+ 8B6E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 755+ 8B6F FE 16            cp $16
 756+ 8B71 38 24            jr c,15F
 757+ 8B73
 758+ 8B73              ; (Colisiones en filas 16 y 17).
 759+ 8B73
 760+ 8B73 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 761+ 8B74
 762+ 8B74              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 763+ 8B74
 764+ 8B74 21 7A 84         ld hl,Amadeus_db+6
 765+ 8B77 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 766+ 8B78 23               inc hl
 767+ 8B79 23               inc hl
 768+ 8B7A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 769+ 8B7B 21 88 84         ld hl,Amadeus_db+20
 770+ 8B7E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 771+ 8B7F 21 ED 85         ld hl,Coordenadas_X_Amadeus
 772+ 8B82
 773+ 8B82 CD 49 8C         call Guarda_coordenadas_X
 774+ 8B85
 775+ 8B85 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 776+ 8B86
 777+ 8B86              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 778+ 8B86
 779+ 8B86 21 ED 85         ld hl,Coordenadas_X_Amadeus
 780+ 8B89 7E               ld a,(hl)
 781+ 8B8A BA           18 cp d
 782+ 8B8B 20 03            jr nz,17F
 783+ 8B8D
 784+ 8B8D              ; Colisión Amadeus !!!!!!!!!!
 785+ 8B8D
 786+ 8B8D E1               pop hl
 787+ 8B8E 18 0D            jr 14F
 788+ 8B90
 789+ 8B90 23           17 inc hl
 790+ 8B91 7E               ld a,(hl)
 791+ 8B92
 792+ 8B92 A7               and a
 793+ 8B93 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
 794+ 8B95 18 F3            jr 18B
 795+ 8B97
 796+ 8B97              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 797+ 8B97              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 798+ 8B97
 799+ 8B97 E1           15  pop hl
 800+ 8B98 23               inc hl
 801+ 8B99 35               dec (hl)
 802+ 8B9A 2B               dec hl
 803+ 8B9B 18 0C            jr 10F
 804+ 8B9D
 805+ 8B9D              ; -----------------------debug
 806+ 8B9D
 807+ 8B9D              ; Elimino el disparo de la base de datos.
 808+ 8B9D
 809+ 8B9D E5           14 push hl
 810+ 8B9E CD 3E 8C         call Elimina_disparo_de_base_de_datos
 811+ 8BA1 21 EC 85         ld hl,Impacto2
 812+ 8BA4 CB CE            set 1,(hl)
 813+ 8BA6 E1               pop hl
 814+ 8BA7 18 06            jr 12F
 815+ 8BA9
 816+ 8BA9 CD ED 8B     10 call Mueve_disparo
 817+ 8BAC CD C4 8B         call foto_disparo_a_borrar
 818+ 8BAF C1           12 pop bc
 819+ 8BB0
 820+ 8BB0 18 04            jr 8F
 821+ 8BB2
 822+ 8BB2              ; ----- ----- ----- ----- ----- -----
 823+ 8BB2
 824+ 8BB2 ED 42        4 sbc hl,bc
 825+ 8BB4 28 0A            jr z,6F
 826+ 8BB6
 827+ 8BB6 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 828+ 8BB9 23               inc hl
 829+ 8BBA 23               inc hl
 830+ 8BBB 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 831+ 8BBE 18 90            jr 5B
 832+ 8BC0
 833+ 8BC0 CD 6E 87     6 call Inicia_Puntero_Disparo_Entidades
 834+ 8BC3 C9               ret
 835+ 8BC4
 836+ 8BC4              ; ------------------------------------------------------------------
 837+ 8BC4
 838+ 8BC4              foto_disparo_a_borrar
 839+ 8BC4
 840+ 8BC4 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 841+ 8BC5 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 842+ 8BC6 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 843+ 8BC7
 844+ 8BC7 E5               push hl
 845+ 8BC8 23               inc hl
 846+ 8BC9 23               inc hl
 847+ 8BCA ED 73 DF 85      ld (Stack),sp
 848+ 8BCE F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 849+ 8BCF FD E1            pop iy
 850+ 8BD1 DD E1            pop ix
 851+ 8BD3 E1               pop hl
 852+ 8BD4 ED 7B DF 85      ld sp,(Stack)
 853+ 8BD8 3A D6 85         ld a,(Ctrl_1)
 854+ 8BDB CB C7            set 0,a
 855+ 8BDD 32 D6 85         ld (Ctrl_1),a
 856+ 8BE0 CD A0 7F         call Guarda_foto_registros
 857+ 8BE3 3A D6 85         ld a,(Ctrl_1)
 858+ 8BE6 CB 87            res 0,a
 859+ 8BE8 32 D6 85         ld (Ctrl_1),a
 860+ 8BEB E1               pop hl
 861+ 8BEC C9               ret
 862+ 8BED
 863+ 8BED E5           Mueve_disparo push hl
 864+ 8BEE 7E               ld a,(hl)
 865+ 8BEF 06 04            ld b,4
 866+ 8BF1 23           1 inc hl
 867+ 8BF2 10 FD            djnz 1B
 868+ 8BF4
 869+ 8BF4              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 870+ 8BF4
 871+ 8BF4 CD AC 87         call Extrae_address
 872+ 8BF7
 873+ 8BF7 E6 01            and 1
 874+ 8BF9 28 2A            jr z,2F
 875+ 8BFB
 876+ 8BFB              ; Disparo hacia arriba, (Amadeus).
 877+ 8BFB
 878+ 8BFB              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 879+ 8BFB              ; _ de la dificultad.
 880+ 8BFB
 881+ 8BFB CD 68 8F         call PreviousScan
 882+ 8BFE CD 68 8F         call PreviousScan
 883+ 8C01 CD 68 8F         call PreviousScan
 884+ 8C04
 885+ 8C04              ; Detecta si el disparo de Amadeus sale de pantalla:
 886+ 8C04
 887+ 8C04 7C               ld a,h
 888+ 8C05 FE 40            cp $40
 889+ 8C07 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 890+ 8C09
 891+ 8C09              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 892+ 8C09
 893+ 8C09 EB               ex de,hl
 894+ 8C0A 06 04            ld b,4
 895+ 8C0C 2B           6 dec hl
 896+ 8C0D 10 FD            djnz 6B
 897+ 8C0F
 898+ 8C0F CD 3E 8C         call Elimina_disparo_de_base_de_datos
 899+ 8C12
 900+ 8C12 18 0C            jr 4F
 901+ 8C14
 902+ 8C14              ; Se ha desplazado la bala, compruebo colisión.
 903+ 8C14
 904+ 8C14 D5           3 push de
 905+ 8C15 C5               push bc
 906+ 8C16 CD 2C 8A         call Comprueba_Colision
 907+ 8C19 78               ld a,b
 908+ 8C1A C1               pop bc
 909+ 8C1B D1               pop de
 910+ 8C1C
 911+ 8C1C EB               ex de,hl
 912+ 8C1D
 913+ 8C1D 73               ld (hl),e
 914+ 8C1E 23               inc hl
 915+ 8C1F 72               ld (hl),d
 916+ 8C20
 917+ 8C20 E1           4 pop hl
 918+ 8C21 23               inc hl
 919+ 8C22 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 920+ 8C23 2B               dec hl
 921+ 8C24 C9               ret
 922+ 8C25
 923+ 8C25              ; Disparo hacia abajo, (Entidad).
 924+ 8C25
 925+ 8C25              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 926+ 8C25              ; _ de la dificultad.
 927+ 8C25
 928+ 8C25 CD 59 8F     2 call NextScan
 929+ 8C28 CD 59 8F         call NextScan
 930+ 8C2B CD 59 8F         call NextScan
 931+ 8C2E
 932+ 8C2E              ; Detecta si el disparo de la entidad sale de la pantalla.
 933+ 8C2E
 934+ 8C2E 7C               ld a,h
 935+ 8C2F FE 58            cp $58
 936+ 8C31 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 937+ 8C33
 938+ 8C33 EB               ex de,hl
 939+ 8C34 06 04            ld b,4
 940+ 8C36 2B           5 dec hl
 941+ 8C37 10 FD            djnz 5B
 942+ 8C39
 943+ 8C39 CD 3E 8C         call Elimina_disparo_de_base_de_datos
 944+ 8C3C
 945+ 8C3C 18 E2            jr 4B
 946+ 8C3E
 947+ 8C3E              ; HL apunta al primer byte de la base de datos del disparo.
 948+ 8C3E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 949+ 8C41 AF               xor a
 950+ 8C42 77               ld (hl),a
 951+ 8C43 54               ld d,h
 952+ 8C44 5D               ld e,l
 953+ 8C45 13               inc de
 954+ 8C46 ED B0            ldir
 955+ 8C48 C9               ret
 956+ 8C49
 957+ 8C49              ; -----------------------------------------------------------------
 958+ 8C49              ;
 959+ 8C49              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 960+ 8C49              ;
 961+ 8C49              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 962+ 8C49              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 963+ 8C49              ;
 964+ 8C49              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
 965+ 8C49              ;
 966+ 8C49              ;   INPUTS:
 967+ 8C49              ;
 968+ 8C49              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
 969+ 8C49              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
 970+ 8C49              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
 971+ 8C49
 972+ 8C49              ;   MODIFICA: A, HL, DE y C
 973+ 8C49
 974+ 8C49 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
 975+ 8C4A 79               ld a,c
 976+ 8C4B E6 01            and 1
 977+ 8C4D 20 03            jr nz,1F
 978+ 8C4F 14               inc d
 979+ 8C50 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
 980+ 8C52
 981+ 8C52              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 982+ 8C52              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 983+ 8C52
 984+ 8C52 15           1 dec d
 985+ 8C53 23           2 inc hl
 986+ 8C54 72               ld (hl),d
 987+ 8C55
 988+ 8C55 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
 989+ 8C56 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
 990+ 8C57 C8               ret z
 991+ 8C58
 992+ 8C58 AF               xor a
 993+ 8C59 5F               ld e,a
 994+ 8C5A 18 ED            jr Guarda_coordenadas_X
 995+ 8C5C
 996+ 8C5C              ; -----------------------------------------------------------------
 997+ 8C5C              ;
 998+ 8C5C              ;   12/04/23
 999+ 8C5C              ;
1000+ 8C5C
1001+ 8C5C 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1002+ 8C5F FE 04            cp 4
1003+ 8C61 20 FE            jr nz,$
1004+ 8C63 CD B5 8A         call Detecta_colision_nave_entidad
1005+ 8C66
1006+ 8C66 7B               ld a,e
1007+ 8C67 C8               ret z
1008+ 8C68 FE 05            cp 5
1009+ 8C6A D8               ret c
1010+ 8C6B
1011+ 8C6B 21 B4 85         ld hl,Impacto
1012+ 8C6E 36 01            ld (hl),1
1013+ 8C70 18 FE            jr $
1014+ 8C72
1015+ 8C72 C9               ret
# file closed: Disparo.asm
 888  8C73              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8C73              ; ******************************************************************************************************************************************************************************************
   2+ 8C73              ;
   3+ 8C73              ; 01/23
   4+ 8C73              ;
   5+ 8C73              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8C73
   7+ 8C73 CD 4D 8F     Draw call Prepara_draw
   8+ 8C76 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8C77 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8C78 28 05        	jr z,2F
  11+ 8C7A
  12+ 8C7A 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8C7D 18 0C        	jr 1F
  14+ 8C7F 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8C82 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8C85 CD 14 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8C88              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8C88 CD 93 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8C8B 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8C8E CB 6F        	bit 5,a
  21+ 8C90 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8C92
  23+ 8C92 CD AA 8C     	call Comprueba_limite_horizontal
  24+ 8C95 CD 3A 8D     	call Comprueba_limite_vertical
  25+ 8C98
  26+ 8C98              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8C98
  28+ 8C98 CD 87 8E     3 call calcula_CColumnass
  29+ 8C9B CD BE 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8C9E CD 13 8F     	call Define_rutina_de_impresion
  31+ 8CA1
  32+ 8CA1 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8CA4 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8CA6 32 C9 85     	ld (Ctrl_0),a
  35+ 8CA9
  36+ 8CA9 C9           	ret
  37+ 8CAA
  38+ 8CAA              ; *******************************************************************************************************************************************************************************************
  39+ 8CAA              ;	21/01/23
  40+ 8CAA              ;
  41+ 8CAA              ; 	Comprueba_limite_horizontal.
  42+ 8CAA              ;
  43+ 8CAA              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8CAA              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8CAA              ;
  46+ 8CAA              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8CAA              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8CAA              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8CAA              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8CAA
  51+ 8CAA
  52+ 8CAA
  53+ 8CAA 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8CAD CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8CAF 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8CB1 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8CB3 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8CB6 18 09            jr 6F
  59+ 8CB8 CB 5F        1 bit 3,a
  60+ 8CBA 28 0A            jr z,2F
  61+ 8CBC E6 F7            and $f7
  62+ 8CBE 32 C9 85         ld (Ctrl_0),a
  63+ 8CC1 CD 14 8E     6 call Inicializacion
  64+ 8CC4 18 5B            jr 5F
  65+ 8CC6 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8CC7
  67+ 8CC7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8CC7              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8CC7
  70+ 8CC7 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8CC8 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8CCB CD 19 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8CCE 67           	ld h,a
  74+ 8CCF EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8CD0 CD 19 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8CD3 67           	ld h,a
  77+ 8CD4 A7           	and a
  78+ 8CD5 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8CD7 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8CD8 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8CDB FE 02        	cp 2
  82+ 8CDD 38 1E        	jr c,3F
  83+ 8CDF 28 1C        	jr z,3F
  84+ 8CE1 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8CE2 28 23            jr z,7F
  86+ 8CE4 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8CE6 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8CE8 E1           	pop hl
  89+ 8CE9
  90+ 8CE9              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8CE9              ; _para indicar con E="2" en caso necesario.
  92+ 8CE9
  93+ 8CE9 E5               push hl
  94+ 8CEA C5               push bc
  95+ 8CEB CD 19 92     	call calcula_tercio
  96+ 8CEE FE 01        	cp 1
  97+ 8CF0 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8CF2 CD 22 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8CF5 28 26            jr z,9F
 100+ 8CF7 38 24            jr c,9F
 101+ 8CF9 1E 00        11 ld e,0
 102+ 8CFB 18 22            jr 8F
 103+ 8CFD 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8CFE 28 07        	jr z, 7F
 105+ 8D00 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D02 1E 00         	ld e,0
 107+ 8D04 E1           	pop hl
 108+ 8D05 18 04        	jr 4F
 109+ 8D07 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D09 18 15            jr 10F
 111+ 8D0B
 112+ 8D0B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D0B              ; _para indicar con E="2" en caso necesario.
 114+ 8D0B
 115+ 8D0B E5           4 push hl
 116+ 8D0C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D0D CD 19 92     	call calcula_tercio
 118+ 8D10 FE 01        	cp 1
 119+ 8D12 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D14 CD 22 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D17 28 04            jr z,9F
 122+ 8D19 30 02            jr nc,9F
 123+ 8D1B 18 02        	jr 8F
 124+ 8D1D 1E 02        9 ld e,2
 125+ 8D1F C1           8 pop bc
 126+ 8D20 E1           10 pop hl
 127+ 8D21 C9           5 ret
 128+ 8D22
 129+ 8D22              ; --------------------
 130+ 8D22              ;
 131+ 8D22              ; 25/08/22
 132+ 8D22
 133+ 8D22 CD 19 92     Comprueba_centro call calcula_tercio
 134+ 8D25 67               ld h,a
 135+ 8D26 08           	ex af,af
 136+ 8D27 FE 02        	cp 2
 137+ 8D29 38 07        	jr c,1F
 138+ 8D2B 28 05        	jr z,1F
 139+ 8D2D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D30 18 03        	jr 2F
 141+ 8D32 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D35 08           2 ex af,af
 143+ 8D36 A7               and a
 144+ 8D37 ED 42            sbc hl,bc
 145+ 8D39 C9               ret
 146+ 8D3A
 147+ 8D3A              ; *********************************************************************************************************************************************************************************************
 148+ 8D3A              ;
 149+ 8D3A              ;   16/8/22
 150+ 8D3A              ;
 151+ 8D3A              ;	Comprueba_limite_vertical
 152+ 8D3A              ;
 153+ 8D3A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D3A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D3A              ;
 156+ 8D3A
 157+ 8D3A 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D3D 7D           	ld a,l
 159+ 8D3E E6 1F        	and $1F
 160+ 8D40 57           	ld d,a
 161+ 8D41 3A D5 85     	ld a,(Limite_vertical)
 162+ 8D44 BA           	cp d 											; Límite - Posición.
 163+ 8D45 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8D46 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8D49 CB 47        	bit 0,a
 166+ 8D4B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8D4D
 168+ 8D4D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8D4D
 170+ 8D4D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8D4E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8D50
 173+ 8D50              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8D50              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8D50
 176+ 8D50 3A A1 85         ld a,(Coordenada_X)
 177+ 8D53 16 0F            ld d,Centro_izquierda
 178+ 8D55 A7               and a
 179+ 8D56 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8D57 28 1E            jr z,3F
 181+ 8D59 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8D5B              ;                                                    ; _salimos sin modificar nada.
 183+ 8D5B 18 0E            jr 2F
 184+ 8D5D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8D5E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8D60
 187+ 8D60              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8D60              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8D60
 190+ 8D60 3A A1 85         ld a,(Coordenada_X)
 191+ 8D63 16 10            ld d,Centro_derecha
 192+ 8D65 A7               and a
 193+ 8D66 92               sub d
 194+ 8D67 28 0E            jr z,3F
 195+ 8D69 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8D6B              ;                                                    ; _salimos sin modificar nada.
 197+ 8D6B CB 43        2 bit 0,e
 198+ 8D6D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8D6F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8D70 CD 04 8E         call Modificaccionne
 201+ 8D73 C1           	pop bc
 202+ 8D74 CD 14 8E         call Inicializacion
 203+ 8D77 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8D78
 205+ 8D78              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8D78
 207+ 8D78 C5           4 push bc
 208+ 8D79 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8D7C 0A           	ld a,(bc)
 210+ 8D7D 3D           	dec a
 211+ 8D7E 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8D7F 7D           	ld a,l
 213+ 8D80 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8D81 CB 47        	bit 0,a
 215+ 8D83 28 03        	jr z,5F
 216+ 8D85 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8D86 18 2E        	jr 7F
 218+ 8D88
 219+ 8D88              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8D88
 221+ 8D88 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8D89 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8D8A 3A C9 85     	ld a,(Ctrl_0)
 224+ 8D8D CB 4F        	bit 1,a
 225+ 8D8F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8D91 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8D92
 228+ 8D92              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8D92
 230+ 8D92 1C               inc e
 231+ 8D93 1D               dec e
 232+ 8D94 20 07            jr nz,12F
 233+ 8D96 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8D97 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8D98 22 9D 85     	ld (Posicion_actual),hl
 236+ 8D9B 18 44        13 jr 9F
 237+ 8D9D CB 43        12 bit 0,e
 238+ 8D9F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8DA1              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8DA1 C1           	pop bc
 241+ 8DA2 18 D3        	jr 3B
 242+ 8DA4 80           14 add b
 243+ 8DA5 6F               ld l,a
 244+ 8DA6 22 9D 85     	ld (Posicion_actual),hl
 245+ 8DA9 CD 04 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8DAC 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8DAE E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8DB0 32 C9 85         ld (Ctrl_0),a
 249+ 8DB3 F1           	pop af
 250+ 8DB4 18 2B        	jr 9F
 251+ 8DB6
 252+ 8DB6              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8DB6
 254+ 8DB6 F5           7 push af
 255+ 8DB7 3A C9 85     	ld a,(Ctrl_0)
 256+ 8DBA CB 47        	bit 0,a
 257+ 8DBC 20 1D        	jr nz,8F
 258+ 8DBE F1           	pop af
 259+ 8DBF
 260+ 8DBF              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8DBF
 262+ 8DBF 1C           	inc e
 263+ 8DC0 1D               dec e
 264+ 8DC1 20 07            jr nz,10F
 265+ 8DC3 90           	sub b
 266+ 8DC4 6F               ld l,a
 267+ 8DC5 22 9D 85     	ld (Posicion_actual),hl
 268+ 8DC8 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8DCA              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8DCA CB 43        10 bit 0,e
 271+ 8DCC 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8DCE              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8DCE C1           	pop bc
 274+ 8DCF 18 A6        	jr 3B
 275+ 8DD1 90           16 sub b
 276+ 8DD2 6F               ld l,a
 277+ 8DD3 22 9D 85     	ld (Posicion_actual),hl
 278+ 8DD6 CD 04 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8DD9 18 06            jr 9F
 280+ 8DDB E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8DDD 32 C9 85         ld (Ctrl_0),a
 282+ 8DE0 F1           	pop af
 283+ 8DE1 C1           9 pop bc
 284+ 8DE2 1E 00        	ld e,0
 285+ 8DE4 CD 14 8E         call Inicializacion
 286+ 8DE7 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8DE8 08           	ex af,af
 288+ 8DE9 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8DEA 18 8B            jr 3B
 290+ 8DEC
 291+ 8DEC              ; --------------------
 292+ 8DEC
 293+ 8DEC 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8DEE CD 68 8F     1 call PreviousScan
 295+ 8DF1 10 FB            djnz 1B
 296+ 8DF3 22 9D 85     	ld (Posicion_actual),hl
 297+ 8DF6 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8DF7 C9           	ret
 299+ 8DF8
 300+ 8DF8              ; --------------------
 301+ 8DF8
 302+ 8DF8 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8DFA CD 59 8F     1 call NextScan
 304+ 8DFD 10 FB            djnz 1B
 305+ 8DFF 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E02 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E03 C9           	ret
 308+ 8E04
 309+ 8E04              ; --------------------
 310+ 8E04              ;
 311+ 8E04              ;	22/01/23
 312+ 8E04              ;
 313+ 8E04              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E04              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E04              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E04
 317+ 8E04
 318+ 8E04              Modificaccionne
 319+ 8E04
 320+ 8E04 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E07 FE 02        	cp 2
 322+ 8E09 CC EC 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E0C DC EC 8D         call c,Modifica_Pos_actual
 324+ 8E0F C8           	ret z
 325+ 8E10 CD F8 8D         call Modifica_Pos_actual2
 326+ 8E13 C9               ret
 327+ 8E14
 328+ 8E14              ; *************************************************************************************************************************************************************************************************
 329+ 8E14              ;
 330+ 8E14              ;	13/8/22
 331+ 8E14              ;
 332+ 8E14              ;	Inicializacion
 333+ 8E14              ;
 334+ 8E14              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E14              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E14              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E14              ;
 338+ 8E14              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E14              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E14              ;	_ desaparece/aparece.
 341+ 8E14
 342+ 8E14              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E14              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E14              ;
 345+ 8E14              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E14              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E14              ; 		   [E] ="0"
 348+ 8E14
 349+ 8E14              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E14
 351+ 8E14 CD 19 92     Inicializacion call calcula_tercio
 352+ 8E17 28 36        	jr z,primit
 353+ 8E19 E6 02        	and 2
 354+ 8E1B 20 07        	jr nz,segmit
 355+ 8E1D 7D           	ld a,l
 356+ 8E1E FE 7F        	cp $7f
 357+ 8E20 38 2D        	jr c,primit
 358+ 8E22 28 2B        	jr z,primit
 359+ 8E24 CD 81 8E     segmit call column
 360+ 8E27 38 13        	jr c,tercuad
 361+ 8E29 3E 04        cuarcuad ld a,4
 362+ 8E2B 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E2E 21 20 48     	ld hl,$4820
 364+ 8E31 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E34 21 D5 85     	ld hl,Limite_vertical
 366+ 8E37 36 0D        	ld (hl),$0d
 367+ 8E39 08           	ex af,af
 368+ 8E3A 18 3C        	jr 1F
 369+ 8E3C              tercuad
 370+ 8E3C 3E 03        	ld a,3
 371+ 8E3E 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E41 21 20 48     	ld hl,$4820
 373+ 8E44 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8E47 21 D5 85     	ld hl,Limite_vertical
 375+ 8E4A 36 12        	ld (hl),$12
 376+ 8E4C 08           	ex af,af
 377+ 8E4D 18 29        	jr 1F
 378+ 8E4F CD 81 8E     primit call column
 379+ 8E52 38 13        	jr c, primcuad
 380+ 8E54              segcuad
 381+ 8E54 3E 02        	ld a,2
 382+ 8E56 32 AF 85     	ld (Cuad_objeto),a
 383+ 8E59 21 C0 4F     	ld hl,$4fc0
 384+ 8E5C 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8E5F 21 D5 85     	ld hl,Limite_vertical
 386+ 8E62 36 0D        	ld (hl),$0d
 387+ 8E64 08           	ex af,af
 388+ 8E65 18 11        	jr 1F
 389+ 8E67              primcuad
 390+ 8E67 3E 01        	ld a,1
 391+ 8E69 32 AF 85     	ld (Cuad_objeto),a
 392+ 8E6C 21 C0 4F     	ld hl,$4fc0
 393+ 8E6F 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8E72 21 D5 85     	ld hl,Limite_vertical
 395+ 8E75 36 12        	ld (hl),$12
 396+ 8E77 08           	ex af,af
 397+ 8E78 CD 45 95     1 call Genera_coordenadas
 398+ 8E7B 21 C9 85     	ld hl,Ctrl_0
 399+ 8E7E CB EE        	set 5,(hl)
 400+ 8E80 C9           	ret
 401+ 8E81
 402+ 8E81              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8E81
 404+ 8E81              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8E81              ;
 406+ 8E81              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8E81
 408+ 8E81 7D           column ld a,l
 409+ 8E82 E6 1F        	and $1f
 410+ 8E84 FE 10         	cp $10
 411+ 8E86 C9            	ret
 412+ 8E87
 413+ 8E87              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8E87              ;
 415+ 8E87              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8E87              ;
 417+ 8E87              ; 14/12/22
 418+ 8E87              ;
 419+ 8E87              ;	Modifica: A y BC.
 420+ 8E87
 421+ 8E87 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8E8A E6 01        	and 1
 423+ 8E8C 28 17        	jr z,1F
 424+ 8E8E
 425+ 8E8E              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8E8E
 427+ 8E8E 3A A1 85     	ld a,(Coordenada_X)
 428+ 8E91 47           	ld b,a
 429+ 8E92 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8E93 79           	ld a,c
 431+ 8E94 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8E95 38 08        	jr c,2F
 433+ 8E97 47           	ld b,a
 434+ 8E98 79           	ld a,c
 435+ 8E99 90           	sub b
 436+ 8E9A 32 D2 85     	ld (Columnas),a
 437+ 8E9D 18 1B        	jr 4F
 438+ 8E9F 79           2 ld a,c
 439+ 8EA0 32 D2 85     	ld (Columnas),a
 440+ 8EA3 18 15        	jr 4F
 441+ 8EA5
 442+ 8EA5              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8EA5
 444+ 8EA5 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8EA8 81           	add c
 446+ 8EA9 3D           	dec a
 447+ 8EAA D6 1F        	sub $1f
 448+ 8EAC 38 08        	jr c,3F
 449+ 8EAE 47           	ld b,a
 450+ 8EAF 79           	ld a,c
 451+ 8EB0 90           	sub b
 452+ 8EB1 32 D2 85     	ld (Columnas),a
 453+ 8EB4 18 04        	jr 4F
 454+ 8EB6 79           3 ld a,c
 455+ 8EB7 32 D2 85     	ld (Columnas),a
 456+ 8EBA D9           4 exx
 457+ 8EBB 4F           	ld c,a
 458+ 8EBC D9           	exx
 459+ 8EBD C9            ret
 460+ 8EBE
 461+ 8EBE              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8EBE              ;
 463+ 8EBE              ; 7/1/23
 464+ 8EBE              ;
 465+ 8EBE              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8EBE              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8EBE              ;
 468+ 8EBE              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8EBE              ;	DESTRUYE: HL,B Y A.
 470+ 8EBE
 471+ 8EBE 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8EC1 FE 02        	cp 2
 473+ 8EC3 38 18        	jr c,1F
 474+ 8EC5 28 16        	jr z,1F
 475+ 8EC7 E6 01        	and 1
 476+ 8EC9 28 0D        	jr z,3F
 477+ 8ECB
 478+ 8ECB              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8ECB
 480+ 8ECB CD 07 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8ECE
 482+ 8ECE 7D           9 ld a,l
 483+ 8ECF E6 1F        	and $1f
 484+ 8ED1 28 2A        	jr z,7F
 485+ 8ED3 2B           	dec hl
 486+ 8ED4 10 F8        	djnz 9B
 487+ 8ED6 18 25        	jr 7F
 488+ 8ED8
 489+ 8ED8              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8ED8
 491+ 8ED8 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8EDB 18 20        	jr 7F
 493+ 8EDD
 494+ 8EDD 28 14        1 jr z,2F
 495+ 8EDF
 496+ 8EDF              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8EDF
 498+ 8EDF CD 07 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8EE2 7D           4 ld a,l
 500+ 8EE3 E6 1F        	and $1f
 501+ 8EE5 28 03        	jr z,6F
 502+ 8EE7 2B           	dec hl
 503+ 8EE8 10 F8        	djnz 4B
 504+ 8EEA 06 0F        6 ld b,15
 505+ 8EEC CD 68 8F     5 call PreviousScan
 506+ 8EEF 10 FB        	djnz 5B
 507+ 8EF1 18 0A        	jr 7F
 508+ 8EF3
 509+ 8EF3              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8EF3
 511+ 8EF3 CD 07 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8EF6 06 0F        	ld b,15
 513+ 8EF8 CD 68 8F     8 call PreviousScan
 514+ 8EFB 10 FB        	djnz 8B
 515+ 8EFD
 516+ 8EFD E5           7 push hl
 517+ 8EFE DD E1        	pop ix
 518+ 8F00
 519+ 8F00 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F03 E5           	push hl
 521+ 8F04 FD E1        	pop iy
 522+ 8F06
 523+ 8F06 C9           	ret
 524+ 8F07
 525+ 8F07              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F07              ;
 527+ 8F07              ;	2/1/23
 528+ 8F07              ;
 529+ 8F07              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F07              ;
 531+ 8F07              ;	Tras esta rutina tenemos:
 532+ 8F07              ;
 533+ 8F07              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F07              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F07              ;
 536+ 8F07              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F07
 538+ 8F07 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F0A 3A D2 85     	ld a,(Columnas)
 540+ 8F0D 3D           	dec a
 541+ 8F0E 20 01        	jr nz,1F
 542+ 8F10 3C           	inc a
 543+ 8F11 47           1 ld b,a
 544+ 8F12 C9           	ret
 545+ 8F13
 546+ 8F13              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F13              ;
 548+ 8F13              ;	3/1/23
 549+ 8F13              ;
 550+ 8F13              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F13              ;
 552+ 8F13              ;	Destruye: A,B,HL y DE.
 553+ 8F13
 554+ 8F13              Define_rutina_de_impresion
 555+ 8F13
 556+ 8F13 3A 9C 85     	ld a,(Columns)
 557+ 8F16 47           	ld b,a
 558+ 8F17 3A D2 85     	ld a,(Columnas)
 559+ 8F1A B8           	cp b
 560+ 8F1B 20 0D        	jr nz,2f
 561+ 8F1D
 562+ 8F1D              ;	La entidad se imprime entera.
 563+ 8F1D
 564+ 8F1D 21 E9 8F     	ld hl, Indice_entidades_completas
 565+ 8F20 E6 01        	and 1
 566+ 8F22 28 02        	jr z,1F
 567+ 8F24
 568+ 8F24 23           	inc hl
 569+ 8F25 23           	inc hl
 570+ 8F26
 571+ 8F26 CD AC 87     1 call Extrae_address
 572+ 8F29 C9           	ret		;	ret
 573+ 8F2A
 574+ 8F2A              ;	La entidad no se imprime entera en pantalla.
 575+ 8F2A
 576+ 8F2A 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F2D E6 01        	and 1
 578+ 8F2F 28 17        	jr z,3F
 579+ 8F31
 580+ 8F31              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F31
 582+ 8F31 21 ED 8F     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F34 3A 9C 85     4 ld a,(Columns)
 584+ 8F37 E6 01        	and 1
 585+ 8F39 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F3B
 587+ 8F3B 23           	inc hl
 588+ 8F3C 23           	inc hl
 589+ 8F3D
 590+ 8F3D 3A D2 85     	ld a,(Columnas)
 591+ 8F40 E6 01        	and 1
 592+ 8F42 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8F44
 594+ 8F44 23           	inc hl
 595+ 8F45 23           	inc hl
 596+ 8F46
 597+ 8F46 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8F48
 599+ 8F48 21 F3 8F     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8F4B 18 E7        	jr 4B
 601+ 8F4D
 602+ 8F4D              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8F4D              ;
 604+ 8F4D              ;	Prepara_draw
 605+ 8F4D              ;
 606+ 8F4D              ;	Es una rutina de carga.
 607+ 8F4D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8F4D              ;
 609+ 8F4D              ;	FUNCIONAMIENTO:
 610+ 8F4D              ;
 611+ 8F4D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8F4D              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8F4D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8F4D              ;
 615+ 8F4D              ;	DESTRUYE:
 616+ 8F4D              ;
 617+ 8F4D              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8F4D
 619+ 8F4D 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8F50 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8F51 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8F52 4E           	ld c,(hl)
 623+ 8F53 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8F56 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8F58 C9           	ret
 626+ 8F59
 627+ 8F59              ;----------------------------------------------------------------------------------------------------------------
 628+ 8F59              ;
 629+ 8F59              ;	5/08/22
 630+ 8F59              ;
 631+ 8F59              ;   NextScan.
 632+ 8F59              ;
 633+ 8F59              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8F59              ;
 635+ 8F59              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8F59              ;
 637+ 8F59              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8F59              ;
 639+ 8F59              ;       DESTRUIDOS: AF y HL !!!
 640+ 8F59              ;
 641+ 8F59              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8F59              ;
 643+ 8F59
 644+ 8F59 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8F5A 7C               ld a,h
 646+ 8F5B E6 07            and 7
 647+ 8F5D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8F5E
 649+ 8F5E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8F5F C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8F61 6F               ld l,a
 652+ 8F62 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8F63
 654+ 8F63 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8F64 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8F66 67               ld h,a
 657+ 8F67 C9               ret
 658+ 8F68
 659+ 8F68              ;----------------------------------------------------------------------------------------------------------------
 660+ 8F68              ;
 661+ 8F68              ;	5/08/22
 662+ 8F68              ;
 663+ 8F68              ;   PreviousScan.
 664+ 8F68              ;
 665+ 8F68              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8F68              ;
 667+ 8F68              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8F68              ;
 669+ 8F68              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8F68              ;
 671+ 8F68              ;       DESTRUIDOS: AF y HL !!!
 672+ 8F68              ;
 673+ 8F68              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8F68              ;
 675+ 8F68
 676+ 8F68 7C           PreviousScan ld a,h
 677+ 8F69 25               dec h               ; Dec H.
 678+ 8F6A E6 07            and 7
 679+ 8F6C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8F6D
 681+ 8F6D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8F6E D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8F70 6F               ld l,a
 684+ 8F71 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8F72
 686+ 8F72 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8F73 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8F75 67               ld h,a
 689+ 8F76 C9               ret
 690+ 8F77
 691+ 8F77              ; -----------------------------------------------------------------------------------
 692+ 8F77              ;
 693+ 8F77              ;	28/2/23
 694+ 8F77              ;
 695+ 8F77              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8F77              ;	Extrae fotos de Album_de_fotos.
 697+ 8F77
 698+ 8F77 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
 699+ 8F7A A7           	and a
 700+ 8F7B C8           	ret z
 701+ 8F7C ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8F80 31 00 70     	ld sp,Album_de_fotos
 703+ 8F83
 704+ 8F83 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8F85 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8F86 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8F87
 708+ 8F87 ED 73 E1 85  	ld (Stack_2),sp
 709+ 8F8B ED 7B DF 85  	ld sp,(Stack)
 710+ 8F8F
 711+ 8F8F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8F8F
 713+ 8F8F 3E CD        	ld a,$cd
 714+ 8F91 32 99 8F     	ld (Imprime),a
 715+ 8F94 EB           	ex de,hl
 716+ 8F95 22 9A 8F     	ld (Imprime+1),hl
 717+ 8F98 EB           	ex de,hl
 718+ 8F99
 719+ 8F99              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8F99
 721+ 8F99 00 00 00     Imprime db 0,0,0
 722+ 8F9C
 723+ 8F9C 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8F9F 3D           	dec a
 725+ 8FA0 28 09        	jr z,1F
 726+ 8FA2 32 DE 85      	ld (Numero_de_malotes),a
 727+ 8FA5
 728+ 8FA5 ED 7B E1 85   	ld sp,(Stack_2)
 729+ 8FA9 18 D8        	jr 2B
 730+ 8FAB
 731+ 8FAB AF           1 xor a
 732+ 8FAC 32 E1 85     	ld (Stack_2),a
 733+ 8FAF C9           	ret
 734+ 8FB0
 735+ 8FB0              ; -----------------------------------------------------------------------------------
 736+ 8FB0              ;
 737+ 8FB0              ;	28/2/23
 738+ 8FB0              ;
 739+ 8FB0              ;	Pinta los disparos generados.
 740+ 8FB0
 741+ 8FB0              Extrae_foto_disparos
 742+ 8FB0
 743+ 8FB0 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 8FB3 A7           	and a
 745+ 8FB4 C8           	ret z
 746+ 8FB5 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 8FB9 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 8FBC
 749+ 8FBC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 8FBE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 8FBF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 8FC0
 753+ 8FC0 ED 73 E1 85  	ld (Stack_2),sp
 754+ 8FC4 ED 7B DF 85  	ld sp,(Stack)
 755+ 8FC8
 756+ 8FC8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 8FC8
 758+ 8FC8 3E CD        	ld a,$cd
 759+ 8FCA 32 D2 8F     	ld (Imprime2),a
 760+ 8FCD EB           	ex de,hl
 761+ 8FCE 22 D3 8F     	ld (Imprime2+1),hl
 762+ 8FD1 EB           	ex de,hl
 763+ 8FD2
 764+ 8FD2              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 8FD2
 766+ 8FD2 00 00 00     Imprime2 db 0,0,0
 767+ 8FD5
 768+ 8FD5 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 8FD8 3D           	dec a
 770+ 8FD9 28 09        	jr z,1F
 771+ 8FDB 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 8FDE
 773+ 8FDE ED 7B E1 85  	ld sp,(Stack_2)
 774+ 8FE2 18 D8        	jr 2B
 775+ 8FE4
 776+ 8FE4 AF           1 xor a
 777+ 8FE5 32 E1 85     	ld (Stack_2),a
 778+ 8FE8 C9           	ret
 779+ 8FE9
# file closed: Draw_XOR.asm
 889  8FE9              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 8FE9              ;   índices de Rutinas de impresión.
   2+ 8FE9
   3+ 8FE9 F9 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 8FEB 26 90            defw Pinta_Amadeus_3x2
   5+ 8FED
   6+ 8FED 7C 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 8FEF 1C 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 8FF1 D0 90            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 8FF3
  10+ 8FF3 A6 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 8FF5 AA 91            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 8FF7 5E 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 8FF9
  14+ 8FF9
  15+ 8FF9              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 8FF9              ;
  17+ 8FF9              ;   12/12/22
  18+ 8FF9              ;
  19+ 8FF9              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 8FF9              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 8FF9              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 8FF9              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 8FF9              ;
  24+ 8FF9              ;   Modifica: DE y HL.
  25+ 8FF9
  26+ 8FF9 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 8FFD FD F9        	ld sp,iy
  28+ 8FFF 06 10            ld b,16
  29+ 9001 D1           1 pop de
  30+ 9002 7B               ld a,e
  31+ 9003 AE               xor (hl)
  32+ 9004 77           	ld (hl),a
  33+ 9005 23           	inc hl
  34+ 9006 7A               ld a,d
  35+ 9007 AE               xor (hl)
  36+ 9008 77           	ld (hl),a
  37+ 9009 2B           	dec hl
  38+ 900A 24           	inc h
  39+ 900B 7C               ld a,h
  40+ 900C E6 07            and 7
  41+ 900E 20 0A            jr nz,2F
  42+ 9010 7D               ld a,l
  43+ 9011 C6 20            add a,$20
  44+ 9013 6F               ld l,a
  45+ 9014 38 04            jr c,2F
  46+ 9016 7C               ld a,h
  47+ 9017 D6 08            sub 8
  48+ 9019 67               ld h,a
  49+ 901A 7C           2 ld a,h
  50+ 901B FE 58            cp $58
  51+ 901D 28 02            jr z,3F
  52+ 901F 10 E0            djnz 1B
  53+ 9021 ED 7B DF 85  3 ld sp,(Stack)
  54+ 9025 C9           	ret
  55+ 9026
  56+ 9026 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 902A FD F9        	ld sp,iy
  58+ 902C 06 08            ld b,8
  59+ 902E D1           1 pop de
  60+ 902F 7B               ld a,e
  61+ 9030 AE               xor (hl)
  62+ 9031 77           	ld (hl),a
  63+ 9032 23           	inc hl
  64+ 9033 7A               ld a,d
  65+ 9034 AE               xor (hl)
  66+ 9035 77           	ld (hl),a
  67+ 9036 23           	inc hl
  68+ 9037 D1           	pop de
  69+ 9038 7B               ld a,e
  70+ 9039 AE               xor (hl)
  71+ 903A 77           	ld (hl),a
  72+ 903B 2B           	dec hl
  73+ 903C 2B           	dec hl
  74+ 903D 24           	inc h
  75+ 903E 7C               ld a,h
  76+ 903F E6 07            and 7
  77+ 9041 20 0A            jr nz,2F
  78+ 9043 7D               ld a,l
  79+ 9044 C6 20            add a,$20
  80+ 9046 6F               ld l,a
  81+ 9047 38 04            jr c,2F
  82+ 9049 7C               ld a,h
  83+ 904A D6 08            sub 8
  84+ 904C 67               ld h,a
  85+ 904D 7C           2 ld a,h
  86+ 904E FE 58            cp $58
  87+ 9050 28 25            jr z,4F
  88+ 9052 7A               ld a,d
  89+ 9053 AE               xor (hl)
  90+ 9054 77               ld (hl),a
  91+ 9055 D1           	pop de
  92+ 9056 23           	inc hl
  93+ 9057 7B               ld a,e
  94+ 9058 AE               xor (hl)
  95+ 9059 77           	ld (hl),a
  96+ 905A 23           	inc hl
  97+ 905B 7A               ld a,d
  98+ 905C AE               xor (hl)
  99+ 905D 77           	ld (hl),a
 100+ 905E 2B           	dec hl
 101+ 905F 2B           	dec hl
 102+ 9060 24           	inc h
 103+ 9061 7C               ld a,h
 104+ 9062 E6 07            and 7
 105+ 9064 20 0A            jr nz,3F
 106+ 9066 7D               ld a,l
 107+ 9067 C6 20            add a,$20
 108+ 9069 6F               ld l,a
 109+ 906A 38 04            jr c,3F
 110+ 906C 7C               ld a,h
 111+ 906D D6 08            sub 8
 112+ 906F 67               ld h,a
 113+ 9070 7C           3 ld a,h
 114+ 9071 FE 58            cp $58
 115+ 9073 28 02            jr z,4F
 116+ 9075 10 B7            djnz 1B
 117+ 9077 ED 7B DF 85  4 ld sp,(Stack)
 118+ 907B C9           	ret
 119+ 907C
 120+ 907C              ; ---------------------------------------------------
 121+ 907C
 122+ 907C ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9080 FD F9        	ld sp,iy
 124+ 9082
 125+ 9082              ; >>>
 126+ 9082
 127+ 9082 06 10            ld b,16
 128+ 9084 D1           1 pop de
 129+ 9085 7A           	ld a,d
 130+ 9086 AE           	xor (hl)
 131+ 9087 77           	ld (hl),a
 132+ 9088 24           	inc h
 133+ 9089 7C               ld a,h
 134+ 908A E6 07            and 7
 135+ 908C 20 0C            jr nz,2F
 136+ 908E 7D               ld a,l
 137+ 908F C6 20            add a,$20
 138+ 9091 6F               ld l,a
 139+ 9092 38 06            jr c,2F
 140+ 9094 7C               ld a,h
 141+ 9095 D6 08            sub 8
 142+ 9097 67               ld h,a
 143+ 9098 18 00            jr 2F
 144+ 909A 7C           2 ld a,h
 145+ 909B FE 58            cp $58
 146+ 909D 28 02            jr z,3F
 147+ 909F 10 E3            djnz 1B
 148+ 90A1 ED 7B DF 85  3 ld sp,(Stack)
 149+ 90A5 C9           	ret
 150+ 90A6
 151+ 90A6 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 90AA FD F9        	ld sp,iy
 153+ 90AC
 154+ 90AC              ; >>>
 155+ 90AC
 156+ 90AC 06 10            ld b,16
 157+ 90AE D1           1 pop de
 158+ 90AF 7B           	ld a,e
 159+ 90B0 AE           	xor (hl)
 160+ 90B1 77           	ld (hl),a
 161+ 90B2 24           	inc h
 162+ 90B3 7C               ld a,h
 163+ 90B4 E6 07            and 7
 164+ 90B6 20 0C            jr nz,2F
 165+ 90B8 7D               ld a,l
 166+ 90B9 C6 20            add a,$20
 167+ 90BB 6F               ld l,a
 168+ 90BC 38 06            jr c,2F
 169+ 90BE 7C               ld a,h
 170+ 90BF D6 08            sub 8
 171+ 90C1 67               ld h,a
 172+ 90C2 18 00            jr 2F
 173+ 90C4 7C           2 ld a,h
 174+ 90C5 FE 58            cp $58
 175+ 90C7 28 02            jr z,3F
 176+ 90C9 10 E3            djnz 1B
 177+ 90CB ED 7B DF 85  3 ld sp,(Stack)
 178+ 90CF C9           	ret
 179+ 90D0
 180+ 90D0              ; ---------------------------------------------------
 181+ 90D0
 182+ 90D0 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 90D4 FD F9        	ld sp,iy
 184+ 90D6 06 08            ld b,8
 185+ 90D8 D1           1 pop de
 186+ 90D9 7A           	ld a,d
 187+ 90DA AE           	xor (hl)
 188+ 90DB 77           	ld (hl),a
 189+ 90DC 23           	inc hl
 190+ 90DD D1           	pop de
 191+ 90DE 7B           	ld a,e
 192+ 90DF AE           	xor (hl)
 193+ 90E0 77           	ld (hl),a
 194+ 90E1 2B           	dec hl
 195+ 90E2 24            	inc h
 196+ 90E3 7C               ld a,h
 197+ 90E4 E6 07            and 7
 198+ 90E6 20 0A            jr nz,2F
 199+ 90E8 7D               ld a,l
 200+ 90E9 C6 20            add a,$20
 201+ 90EB 6F               ld l,a
 202+ 90EC 38 04            jr c,2F
 203+ 90EE 7C               ld a,h
 204+ 90EF D6 08            sub 8
 205+ 90F1 67               ld h,a
 206+ 90F2 7C           2 ld a,h
 207+ 90F3 FE 58            cp $58
 208+ 90F5 28 20            jr z,4F
 209+ 90F7 D1               pop de
 210+ 90F8 7B           	ld a,e
 211+ 90F9 AE           	xor (hl)
 212+ 90FA 77           	ld (hl),a
 213+ 90FB 23           	inc hl
 214+ 90FC 7A           	ld a,d
 215+ 90FD AE           	xor (hl)
 216+ 90FE 77           	ld (hl),a
 217+ 90FF 2B           	dec hl
 218+ 9100 24           	inc h
 219+ 9101 7C               ld a,h
 220+ 9102 E6 07            and 7
 221+ 9104 20 0A            jr nz,3F
 222+ 9106 7D               ld a,l
 223+ 9107 C6 20            add a,$20
 224+ 9109 6F               ld l,a
 225+ 910A 38 04            jr c,3F
 226+ 910C 7C               ld a,h
 227+ 910D D6 08            sub 8
 228+ 910F 67               ld h,a
 229+ 9110 7C           3 ld a,h
 230+ 9111 FE 58            cp $58
 231+ 9113 28 02            jr z,4F
 232+ 9115 10 C1            djnz 1B
 233+ 9117 ED 7B DF 85  4 ld sp,(Stack)
 234+ 911B C9           	ret
 235+ 911C
 236+ 911C ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9120 FD F9        	ld sp,iy
 238+ 9122 06 08            ld b,8
 239+ 9124 D1           1 pop de
 240+ 9125 D1           	pop de
 241+ 9126 7B           	ld a,e
 242+ 9127 AE           	xor (hl)
 243+ 9128 77           	ld (hl),a
 244+ 9129 24            	inc h
 245+ 912A 7C               ld a,h
 246+ 912B E6 07            and 7
 247+ 912D 20 0A            jr nz,2F
 248+ 912F 7D               ld a,l
 249+ 9130 C6 20            add a,$20
 250+ 9132 6F               ld l,a
 251+ 9133 38 04            jr c,2F
 252+ 9135 7C               ld a,h
 253+ 9136 D6 08            sub 8
 254+ 9138 67               ld h,a
 255+ 9139 7C           2 ld a,h
 256+ 913A FE 58            cp $58
 257+ 913C 28 1B            jr z,4F
 258+ 913E D1               pop de
 259+ 913F 7A           	ld a,d
 260+ 9140 AE           	xor (hl)
 261+ 9141 77           	ld (hl),a
 262+ 9142 24           	inc h
 263+ 9143 7C               ld a,h
 264+ 9144 E6 07            and 7
 265+ 9146 20 0A            jr nz,3F
 266+ 9148 7D               ld a,l
 267+ 9149 C6 20            add a,$20
 268+ 914B 6F               ld l,a
 269+ 914C 38 04            jr c,3F
 270+ 914E 7C               ld a,h
 271+ 914F D6 08            sub 8
 272+ 9151 67               ld h,a
 273+ 9152 7C           3 ld a,h
 274+ 9153 FE 58            cp $58
 275+ 9155 28 02            jr z,4F
 276+ 9157 10 CB            djnz 1B
 277+ 9159 ED 7B DF 85  4 ld sp,(Stack)
 278+ 915D C9           	ret
 279+ 915E
 280+ 915E ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9162 FD F9        	ld sp,iy
 282+ 9164 06 08            ld b,8
 283+ 9166 D1           1 pop de
 284+ 9167 7B           	ld a,e
 285+ 9168 AE           	xor (hl)
 286+ 9169 77           	ld (hl),a
 287+ 916A 23           	inc hl
 288+ 916B 7A           	ld a,d
 289+ 916C AE           	xor (hl)
 290+ 916D 77           	ld (hl),a
 291+ 916E 2B           	dec hl
 292+ 916F 24             	inc h
 293+ 9170 7C               ld a,h
 294+ 9171 E6 07            and 7
 295+ 9173 20 0A            jr nz,2F
 296+ 9175 7D               ld a,l
 297+ 9176 C6 20            add a,$20
 298+ 9178 6F               ld l,a
 299+ 9179 38 04            jr c,2F
 300+ 917B 7C               ld a,h
 301+ 917C D6 08            sub 8
 302+ 917E 67               ld h,a
 303+ 917F 7C           2 ld a,h
 304+ 9180 FE 58            cp $58
 305+ 9182 28 21            jr z,4F
 306+ 9184 D1               pop de
 307+ 9185 7A           	ld a,d
 308+ 9186 AE           	xor (hl)
 309+ 9187 77           	ld (hl),a
 310+ 9188 23           	inc hl
 311+ 9189 D1               pop de
 312+ 918A 7B           	ld a,e
 313+ 918B AE           	xor (hl)
 314+ 918C 77           	ld (hl),a
 315+ 918D 2B           	dec hl
 316+ 918E 24           	inc h
 317+ 918F 7C               ld a,h
 318+ 9190 E6 07            and 7
 319+ 9192 20 0A            jr nz,3F
 320+ 9194 7D               ld a,l
 321+ 9195 C6 20            add a,$20
 322+ 9197 6F               ld l,a
 323+ 9198 38 04            jr c,3F
 324+ 919A 7C               ld a,h
 325+ 919B D6 08            sub 8
 326+ 919D 67               ld h,a
 327+ 919E 7C           3 ld a,h
 328+ 919F FE 58            cp $58
 329+ 91A1 28 02            jr z,4F
 330+ 91A3 10 C1            djnz 1B
 331+ 91A5 ED 7B DF 85  4 ld sp,(Stack)
 332+ 91A9 C9           	ret
 333+ 91AA
 334+ 91AA ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 91AE FD F9        	ld sp,iy
 336+ 91B0 06 08            ld b,8
 337+ 91B2 D1           1 pop de
 338+ 91B3 7B           	ld a,e
 339+ 91B4 AE           	xor (hl)
 340+ 91B5 77           	ld (hl),a
 341+ 91B6 24            	inc h
 342+ 91B7 7C               ld a,h
 343+ 91B8 E6 07            and 7
 344+ 91BA 20 0A            jr nz,2F
 345+ 91BC 7D               ld a,l
 346+ 91BD C6 20            add a,$20
 347+ 91BF 6F               ld l,a
 348+ 91C0 38 04            jr c,2F
 349+ 91C2 7C               ld a,h
 350+ 91C3 D6 08            sub 8
 351+ 91C5 67               ld h,a
 352+ 91C6 7C           2 ld a,h
 353+ 91C7 FE 58            cp $58
 354+ 91C9 28 1C            jr z,4F
 355+ 91CB D1               pop de
 356+ 91CC 7A           	ld a,d
 357+ 91CD AE           	xor (hl)
 358+ 91CE 77           	ld (hl),a
 359+ 91CF 24           	inc h
 360+ 91D0 7C               ld a,h
 361+ 91D1 E6 07            and 7
 362+ 91D3 20 0A            jr nz,3F
 363+ 91D5 7D               ld a,l
 364+ 91D6 C6 20            add a,$20
 365+ 91D8 6F               ld l,a
 366+ 91D9 38 04            jr c,3F
 367+ 91DB 7C               ld a,h
 368+ 91DC D6 08            sub 8
 369+ 91DE 67               ld h,a
 370+ 91DF 7C           3 ld a,h
 371+ 91E0 FE 58            cp $58
 372+ 91E2 28 03            jr z,4F
 373+ 91E4 D1               pop de
 374+ 91E5 10 CB            djnz 1B
 375+ 91E7 ED 7B DF 85  4 ld sp,(Stack)
 376+ 91EB C9           	ret
 377+ 91EC
 378+ 91EC              ; ---------------------------------------------------
 379+ 91EC              ;
 380+ 91EC              ;   27/02/23
 381+ 91EC              ;
 382+ 91EC              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 91EC              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 91EC              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 91EC
 386+ 91EC ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 91F0 FD F9            ld sp,iy
 388+ 91F2 06 02            ld b,2
 389+ 91F4 D1           1 pop de
 390+ 91F5 7B               ld a,e
 391+ 91F6 AE               xor (hl)
 392+ 91F7 77               ld (hl),a
 393+ 91F8 23               inc hl
 394+ 91F9 7A               ld a,d
 395+ 91FA AE               xor (hl)
 396+ 91FB 77               ld (hl),a
 397+ 91FC 2B               dec hl
 398+ 91FD
 399+ 91FD 24               inc h
 400+ 91FE 7C               ld a,h
 401+ 91FF E6 07            and 7
 402+ 9201 20 0A            jr nz,2F
 403+ 9203 7D               ld a,l
 404+ 9204 C6 20            add a,$20
 405+ 9206 6F               ld l,a
 406+ 9207 38 04            jr c,2F
 407+ 9209 7C               ld a,h
 408+ 920A D6 08            sub 8
 409+ 920C 67               ld h,a
 410+ 920D 7C           2 ld a,h
 411+ 920E FE 58            cp $58
 412+ 9210 28 02            jr z,3F
 413+ 9212
 414+ 9212 10 E0            djnz 1B
 415+ 9214 ED 7B DF 85  3 ld sp,(Stack)
 416+ 9218 C9               ret
 417+ 9219
# file closed: Rutinas_de_impresion_sprites.asm
 890  9219              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9219              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9219              ;
   3+ 9219              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9219              ;
   5+ 9219              ; *****************************************************************************************************************************************************************************************
   6+ 9219              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9219
   8+ 9219 7C           calcula_tercio ld a,h
   9+ 921A E6 18        	and $18
  10+ 921C CB 2F        	sra a
  11+ 921E CB 2F        	sra a
  12+ 9220 CB 2F        	sra a
  13+ 9222 C9           	ret
  14+ 9223
# file closed: calcula_tercio.asm
 891  9223              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9223              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9223              ;
   3+ 9223              ;
   4+ 9223              ;	CLS.
   5+ 9223              ;
   6+ 9223              ;	Limpia la pantalla y define sus atributos.
   7+ 9223              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9223              ;
   9+ 9223              ;	COLORES: 0 ..... NEGRO
  10+ 9223              ;    		 1 ..... AZUL
  11+ 9223              ; 			 2 ..... ROJO
  12+ 9223              ;			 3 ..... MAGENTA
  13+ 9223              ; 			 4 ..... VERDE
  14+ 9223              ; 			 5 ..... CIAN
  15+ 9223              ;			 6 ..... AMARILLO
  16+ 9223              ; 			 7 ..... BLANCO
  17+ 9223              ;
  18+ 9223              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9223              ;
  20+ 9223              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9223
  22+ 9223
  23+ 9223 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9226 11 01 40     	LD DE,$4001
  25+ 9229 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 922C 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 922E ED B0        	LDIR
  28+ 9230 01 FF 02     	LD BC,767
  29+ 9233 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9234 ED B0        	LDIR
  31+ 9236 C9           	ret
  32+ 9237
# file closed: Cls.asm
 892  9237              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9237              ; ******************************************************************************************************************************************************************************************
   2+ 9237              ;
   3+ 9237              ;   22/01/23
   4+ 9237              ;
   5+ 9237              ;	Mov_down
   6+ 9237              ;
   7+ 9237              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9237              ;
   9+ 9237              ;
  10+ 9237 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 923A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 923C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 923C              ; 																	; _ en el caso de que no lo haya.
  14+ 923C 3A B3 85     	ld a,(Vel_down)
  15+ 923F 47           	ld b,a
  16+ 9240 2A 9D 85         ld hl,(Posicion_actual)
  17+ 9243 CD 19 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9246 E6 02        	and 2
  19+ 9248 28 0F        	jr z,1F
  20+ 924A
  21+ 924A              ; Nos encontramos en el último tercio de pantalla.
  22+ 924A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 924A
  24+ 924A 7C           	ld a,h
  25+ 924B FE 57        	cp $57
  26+ 924D 20 0A        	jr nz,1F
  27+ 924F 7D           	ld a,l
  28+ 9250 C6 20        	add $20
  29+ 9252 30 05        	jr nc,1F
  30+ 9254
  31+ 9254              ; ------------------------------
  32+ 9254 CD 2F 95     	call Reaparece_arriba
  33+ 9257              ;	call Reinicio
  34+ 9257              ; ------------------------------
  35+ 9257
  36+ 9257 18 08        	jr 3F
  37+ 9259 CD 59 8F     1 call NextScan
  38+ 925C 22 9D 85     	ld (Posicion_actual),hl
  39+ 925F 10 E2            djnz 2B
  40+ 9261 CD 45 95     3 call Genera_coordenadas
  41+ 9264 C9           	ret
  42+ 9265
  43+ 9265              ; ******************************************************************************************************************************************************************************************
  44+ 9265              ;
  45+ 9265              ;   22/01/23
  46+ 9265              ;
  47+ 9265              ;	Mov_up
  48+ 9265              ;
  49+ 9265              ; 	Mueve el Sprite hacia arriba.
  50+ 9265              ;
  51+ 9265              ;
  52+ 9265 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9268 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 926A              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 926A              ; 																		; _ en el caso de que no lo haya.
  56+ 926A 3A B2 85     	ld a,(Vel_up)
  57+ 926D 47           	ld b,a
  58+ 926E 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9271 CD 19 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9274 A7           	and a
  61+ 9275 20 10        	jr nz,1F
  62+ 9277
  63+ 9277              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9277              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9277
  66+ 9277 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9278 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 927A 20 0B            jr nz,1F
  69+ 927C 7D               ld a,l
  70+ 927D D6 20            sub $20
  71+ 927F 30 06            jr nc,1F
  72+ 9281 25               dec h
  73+ 9282
  74+ 9282              ; -----------------------------
  75+ 9282 CD 1F 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9285              ;	call Reinicio
  77+ 9285              ; -----------------------------
  78+ 9285
  79+ 9285 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9287 CD 68 8F     1 call PreviousScan
  81+ 928A 22 9D 85     	ld (Posicion_actual),hl
  82+ 928D 10 E2            djnz 3B
  83+ 928F CD 45 95     2 call Genera_coordenadas
  84+ 9292 C9           	ret
  85+ 9293
  86+ 9293              ; ******************************************************************************************************************************************************************************************
  87+ 9293              ;
  88+ 9293              ;	19/10/22
  89+ 9293              ;
  90+ 9293              ;	Mov_right.
  91+ 9293              ;
  92+ 9293              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9293              ;
  94+ 9293
  95+ 9293 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 9296 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9298              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9298              ; 																	; _ en el caso de que no lo haya.
  99+ 9298 3A C9 85     	ld a,(Ctrl_0)
 100+ 929B CB 77        	bit 6,a
 101+ 929D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 929F
 103+ 929F CD CD 94     	call Stop_Amadeus_right
 104+ 92A2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 92A3 18 4D        	jr 8F
 106+ 92A5
 107+ 92A5 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 92A8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 92AA 20 46        	jr nz,8F
 110+ 92AC
 111+ 92AC 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 92AF A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 92B0 28 40        	jr z,8F
 114+ 92B2
 115+ 92B2              ; ---------- ---------- ----------
 116+ 92B2              ;
 117+ 92B2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 92B2
 119+ 92B2 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 92B5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 92B7 28 11        	jr z,1F
 122+ 92B9 38 06        	jr c,6F
 123+ 92BB FE 04        	cp 4
 124+ 92BD 28 14        	jr z,7F
 125+ 92BF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 92C1
 127+ 92C1              ; ---------- ---------- ----------
 128+ 92C1              ;
 129+ 92C1              ; Perfiles de velocidad
 130+ 92C1              ;
 131+ 92C1
 132+ 92C1 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 92C4 FE FE        	cp $fe
 134+ 92C6 20 2A        	jr nz,8F
 135+ 92C8 18 10        	jr 3F
 136+ 92CA 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 92CD FE FD        	cp $fd
 138+ 92CF 20 21        	jr nz,8F
 139+ 92D1 18 07        	jr 3F
 140+ 92D3 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 92D6 FE FB        	cp $fb
 142+ 92D8 20 18        	jr nz,8F
 143+ 92DA
 144+ 92DA              ; ---------- ---------- ----------
 145+ 92DA
 146+ 92DA              3
 147+ 92DA CD 0D 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 92DD              ;	call Reinicio
 149+ 92DD
 150+ 92DD              ; ---------- ---------- ----------
 151+ 92DD              ;
 152+ 92DD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 92DD
 154+ 92DD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 92DF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 92E0 CD F9 92     	call DESPLZ_DER
 157+ 92E3 C1           	pop bc
 158+ 92E4 10 F9        	djnz 5B
 159+ 92E6 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 92E9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 92EA 22 9D 85     	ld (Posicion_actual),hl
 162+ 92ED CD 45 95     	call Genera_coordenadas
 163+ 92F0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 92F2
 165+ 92F2              ; ---------- ---------- ----------
 166+ 92F2
 167+ 92F2 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 92F5 CD F9 92     	call DESPLZ_DER
 169+ 92F8 C9           2 ret
 170+ 92F9
 171+ 92F9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 92F9              ;
 173+ 92F9              ;	22/9/22
 174+ 92F9              ;
 175+ 92F9
 176+ 92F9 CD 08 93     DESPLZ_DER call Desplaza_derecha
 177+ 92FC CD 54 93         call modifica_parametros_1er_DESPLZ_2
 178+ 92FF CD 7D 93         call Ciclo_completo
 179+ 9302 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9305 CB FE        	set 7,(hl)
 181+ 9307 C9           	ret
 182+ 9308
 183+ 9308              ; ******************************************************************************************************************************************************************************************
 184+ 9308              ;	15/02/23
 185+ 9308              ;
 186+ 9308
 187+ 9308 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 930B 47           	ld b,a
 189+ 930C 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 930F 23           1 inc hl
 191+ 9310 23           	inc hl
 192+ 9311 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9313 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9316 CD AC 87     	call Extrae_address
 195+ 9319 22 9F 85     	ld (Puntero_objeto),hl
 196+ 931C
 197+ 931C              ; Modifica (Puntero_DESPLZ_izq).
 198+ 931C
 199+ 931C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 931C              ; Cuántos movimientos hemos hecho ??
 201+ 931C              ; DE contiene (Puntero_DESPLZ_der).
 202+ 931C
 203+ 931C 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 931F EB           	ex de,hl
 205+ 9320 A7           	and a
 206+ 9321 ED 52        	sbc hl,de
 207+ 9323 CB 3D        	srl l
 208+ 9325 3E 08        6 ld a,8
 209+ 9327 95           	sub l
 210+ 9328 30 1E        	jr nc,3F
 211+ 932A
 212+ 932A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 932A              ; B="0".
 214+ 932A
 215+ 932A 04           4 inc b
 216+ 932B 3C           	inc a
 217+ 932C 20 FC        	jr nz,4B
 218+ 932E 78           	ld a,b
 219+ 932F 08           	ex af,af
 220+ 9330 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 9333 23           5 inc hl
 222+ 9334 23           	inc hl
 223+ 9335 10 FC        	djnz 5B
 224+ 9337 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 933A CD AC 87     	call Extrae_address
 226+ 933D 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9340
 228+ 9340              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9340              ; _(Posicion_actual).
 230+ 9340
 231+ 9340 21 9D 85     	ld hl,Posicion_actual
 232+ 9343 34           	inc (hl)
 233+ 9344 08               ex af,af
 234+ 9345 6F           	ld l,a
 235+ 9346 18 DD        	jr 6B
 236+ 9348
 237+ 9348              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9348
 239+ 9348 47           3 ld b,a
 240+ 9349 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 934C 23           2 inc hl
 242+ 934D 23           	inc hl
 243+ 934E 10 FC        	djnz 2B
 244+ 9350 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 9353 C9           8 ret
 246+ 9354
 247+ 9354              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 9354              ;
 249+ 9354              ;	24/7/22
 250+ 9354              ;
 251+ 9354              ;	modifica_parametros_1er_DESPLZ_2
 252+ 9354              ;
 253+ 9354              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 9354              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 9354              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 9354
 257+ 9354 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9357 A7           	and a
 259+ 9358 20 1F        	jr nz,1F
 260+ 935A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 935C 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 935F
 263+ 935F 21 9C 85     	ld hl,Columns
 264+ 9362 34           	inc (hl)
 265+ 9363 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9366 E6 01        	and 1
 267+ 9368 28 0F        	jr z,1F
 268+ 936A 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 936D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 936E 22 9D 85     	ld (Posicion_actual),hl
 271+ 9371 CD 45 95     	call Genera_coordenadas
 272+ 9374 CD D9 94     	call Inc_CTRL_DESPLZ
 273+ 9377 18 03        	jr 2F
 274+ 9379 CD D9 94     1 call Inc_CTRL_DESPLZ
 275+ 937C C9           2 ret
 276+ 937D
 277+ 937D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 937D              ;
 279+ 937D              ;	24/7/22
 280+ 937D              ;
 281+ 937D              ;	Ciclo_completo.
 282+ 937D              ;
 283+ 937D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 937D              ;
 285+ 937D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 937D              ; 	Decrementamos (Columns).
 287+ 937D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 937D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 937D
 290+ 937D
 291+ 937D 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9380 FE FF        	cp $ff
 293+ 9382 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9384 E6 F0        	and $f0
 295+ 9386 20 28        	jr nz,3F
 296+ 9388
 297+ 9388              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9388
 299+ 9388 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 938B 47           	ld b,a
 301+ 938C 3E F8        	ld a,$f8
 302+ 938E 80           	add b
 303+ 938F 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 9392 18 1C        	jr 3F
 305+ 9394 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9397 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9398 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9399 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 939C 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 939F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 93A1 20 0A        	jr nz,2F
 312+ 93A3 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 93A6 23           	inc hl
 314+ 93A7 22 9D 85     	ld (Posicion_actual),hl
 315+ 93AA CD 45 95     	call Genera_coordenadas
 316+ 93AD
 317+ 93AD              ; Inicia el puntero de Sprite.
 318+ 93AD
 319+ 93AD CD C3 87     2 call Inicia_puntero_objeto_der
 320+ 93B0 C9           3 ret
 321+ 93B1
 322+ 93B1              ; ******************************************************************************************************************************************************************************************
 323+ 93B1              ;
 324+ 93B1              ;	15/02/23
 325+ 93B1              ;
 326+ 93B1              ;	Mov_left.
 327+ 93B1              ;
 328+ 93B1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 93B1              ;
 330+ 93B1              Mov_left
 331+ 93B1
 332+ 93B1 21 C9 85     	ld hl,Ctrl_0
 333+ 93B4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 93B6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 93B6              ; 																	; _ en el caso de que no lo haya.
 336+ 93B6 3A C9 85     	ld a,(Ctrl_0)
 337+ 93B9 CB 77        	bit 6,a
 338+ 93BB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 93BD
 340+ 93BD CD D3 94     	call Stop_Amadeus_left
 341+ 93C0 C8           	ret z
 342+ 93C1 20 4A        	jr nz,8F
 343+ 93C3
 344+ 93C3 3A A1 85     11 ld a,(Coordenada_X)
 345+ 93C6 A7           	and a
 346+ 93C7 20 44        	jr nz,8F
 347+ 93C9
 348+ 93C9 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 93CC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 93CD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 93CF
 352+ 93CF              ; ---------- ---------- ----------
 353+ 93CF
 354+ 93CF 3A B0 85     	ld a,(Vel_left)
 355+ 93D2 FE 02        	cp 2
 356+ 93D4 28 0F        	jr z,1F
 357+ 93D6 38 04        	jr c,6F
 358+ 93D8 FE 04        	cp 4
 359+ 93DA 28 12        	jr z,7F
 360+ 93DC
 361+ 93DC              ; ---------- ---------- ----------
 362+ 93DC
 363+ 93DC 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 93DF FE F8        	cp $f8
 365+ 93E1 20 2A        	jr nz,8F
 366+ 93E3 18 10        	jr 4F
 367+ 93E5 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 93E8 FE F9        	cp $f9
 369+ 93EA 20 21        	jr nz,8F
 370+ 93EC 18 07        	jr 4F
 371+ 93EE 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 93F1 FE FB        	cp $fb
 373+ 93F3 20 18        	jr nz,8F
 374+ 93F5
 375+ 93F5              ; ---------- ---------- ----------
 376+ 93F5
 377+ 93F5              4
 378+ 93F5 CD FB 94     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 93F8              ;	call Reinicio
 380+ 93F8
 381+ 93F8              ; ---------- ---------- ----------
 382+ 93F8
 383+ 93F8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 93FA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 93FB
 386+ 93FB              ;	ld hl,(Indice_Sprite_izq)
 387+ 93FB              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 93FB
 389+ 93FB CD 14 94     	call DESPLZ_IZQ
 390+ 93FE C1           	pop bc
 391+ 93FF 10 F9        	djnz 5B
 392+ 9401 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9404 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9405 22 9D 85     	ld (Posicion_actual),hl
 395+ 9408 CD 45 95     	call Genera_coordenadas
 396+ 940B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 940D
 398+ 940D              ; ---------- ---------- ----------
 399+ 940D
 400+ 940D              ; Movemos, no hay recolocación.
 401+ 940D
 402+ 940D 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9410 CD 14 94     	call DESPLZ_IZQ
 404+ 9413 C9           2 ret
 405+ 9414
 406+ 9414              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9414              ;
 408+ 9414              ;	22/9/22
 409+ 9414
 410+ 9414              DESPLZ_IZQ
 411+ 9414
 412+ 9414 CD 23 94     	call Desplaza_izquierda
 413+ 9417 CD 6F 94         call modifica_parametros_1er_DESPLZ
 414+ 941A CD 97 94     	call Ciclo_completo_2
 415+ 941D 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9420 CB BE        	res 7,(hl)
 417+ 9422 C9           	ret
 418+ 9423
 419+ 9423              Desplaza_izquierda
 420+ 9423
 421+ 9423 3A B0 85     	ld a,(Vel_left)
 422+ 9426 47           	ld b,a
 423+ 9427 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 942A 23           1 inc hl
 425+ 942B 23           	inc hl
 426+ 942C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 942E 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9431 CD AC 87     	call Extrae_address
 429+ 9434 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9437
 431+ 9437              ; Modifica (Puntero_DESPLZ_der).
 432+ 9437
 433+ 9437              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9437              ; Cuántos movimientos hemos hecho ??
 435+ 9437              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9437
 437+ 9437 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 943A EB           	ex de,hl
 439+ 943B A7           	and a
 440+ 943C ED 52        	sbc hl,de
 441+ 943E CB 3D        	srl l
 442+ 9440 3E 08        6 ld a,8
 443+ 9442 95           	sub l
 444+ 9443 30 1E        	jr nc,3F
 445+ 9445
 446+ 9445              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 9445              ; B="0".
 448+ 9445
 449+ 9445 04           4 inc b
 450+ 9446 3C           	inc a
 451+ 9447 20 FC        	jr nz,4B
 452+ 9449 78           	ld a,b
 453+ 944A 08           	ex af,af
 454+ 944B 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 944E 23           5 inc hl
 456+ 944F 23           	inc hl
 457+ 9450 10 FC        	djnz 5B
 458+ 9452 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 9455 CD AC 87     	call Extrae_address
 460+ 9458 22 9F 85     	ld (Puntero_objeto),hl
 461+ 945B
 462+ 945B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 945B              ; _(Posicion_actual).
 464+ 945B
 465+ 945B 21 9D 85     	ld hl,Posicion_actual
 466+ 945E 35           	dec (hl)
 467+ 945F 08           	ex af,af
 468+ 9460 6F           	ld l,a
 469+ 9461 18 DD        	jr 6B
 470+ 9463
 471+ 9463              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9463
 473+ 9463 47           3 ld b,a
 474+ 9464 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9467 23           2 inc hl
 476+ 9468 23           	inc hl
 477+ 9469 10 FC        	djnz 2B
 478+ 946B 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 946E C9           8 ret
 480+ 946F
 481+ 946F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 946F              ;
 483+ 946F              ;	modifica_parametros_1er_DESPLZ
 484+ 946F              ;
 485+ 946F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 946F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 946F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 946F
 489+ 946F 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9472 A7           	and a
 491+ 9473 20 1E        	jr nz,1F
 492+ 9475 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9476 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9479 21 9C 85     	ld hl,Columns
 495+ 947C 34           	inc (hl)
 496+ 947D 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9480 E6 01        	and 1
 498+ 9482 20 0F        	jr nz,1F
 499+ 9484 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9487 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9488 22 9D 85     	ld (Posicion_actual),hl
 502+ 948B CD 45 95     	call Genera_coordenadas
 503+ 948E CD EA 94     	call Dec_CTRL_DESPLZ
 504+ 9491 18 03        	jr 2F
 505+ 9493 CD EA 94     1 call Dec_CTRL_DESPLZ
 506+ 9496 C9           2 ret
 507+ 9497
 508+ 9497              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9497
 510+ 9497 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 949A FE F7        	cp $f7
 512+ 949C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 949E 30 2C        	jr nc,3F
 514+ 94A0
 515+ 94A0              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 94A0
 517+ 94A0 06 00        	ld b,0
 518+ 94A2 04           4 inc b
 519+ 94A3 3C           	inc a
 520+ 94A4 FE F7        	cp $f7
 521+ 94A6 20 FA        	jr nz,4B
 522+ 94A8 3E FF        	ld a,$ff
 523+ 94AA 90           	sub b
 524+ 94AB 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 94AE 18 1C        	jr 3F
 526+ 94B0
 527+ 94B0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 94B0
 529+ 94B0 21 9C 85     1 ld hl,Columns
 530+ 94B3 35           	dec (hl)
 531+ 94B4 AF           	xor a
 532+ 94B5 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 94B8 3A AF 85     	ld a,(Cuad_objeto)
 534+ 94BB E6 01        	and 1
 535+ 94BD 28 0A        	jr z,2F
 536+ 94BF 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 94C2 2B           	dec hl
 538+ 94C3 22 9D 85     	ld (Posicion_actual),hl
 539+ 94C6 CD 45 95     	call Genera_coordenadas
 540+ 94C9
 541+ 94C9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 94C9
 543+ 94C9 CD D6 87     2 call Inicia_puntero_objeto_izq
 544+ 94CC C9           3 ret
 545+ 94CD
 546+ 94CD              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 94CD              ;
 548+ 94CD              ;	19/10/22
 549+ 94CD              ;
 550+ 94CD              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 94CD              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 94CD
 553+ 94CD 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 94D0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 94D2 C9           	ret
 556+ 94D3
 557+ 94D3              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 94D3              ;
 559+ 94D3              ;	19/10/22
 560+ 94D3              ;
 561+ 94D3              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 94D3              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 94D3
 564+ 94D3 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 94D6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 94D8 C9           	ret
 567+ 94D9
 568+ 94D9              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 94D9              ;
 570+ 94D9              ;	24/7/22
 571+ 94D9              ;
 572+ 94D9              ;	Inc_CTRL_DESPLZ
 573+ 94D9              ;
 574+ 94D9              ;
 575+ 94D9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 94D9
 577+ 94D9 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 94DC 3A B1 85     	ld a,(Vel_right)
 579+ 94DF A7           	and a
 580+ 94E0 28 06        	jr z,1F
 581+ 94E2 47           	ld b,a
 582+ 94E3 34           3 inc (hl)
 583+ 94E4 10 FD        	djnz 3B
 584+ 94E6 18 01        	jr 2F
 585+ 94E8 34           1 inc (hl)
 586+ 94E9 C9           2 ret
 587+ 94EA
 588+ 94EA              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 94EA              ;
 590+ 94EA              ;	5/2/23
 591+ 94EA              ;
 592+ 94EA              ;	Dec_CTRL_DESPLZ
 593+ 94EA              ;
 594+ 94EA              ;
 595+ 94EA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 94EA
 597+ 94EA 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 94ED 3A B0 85     	ld a,(Vel_left)
 599+ 94F0 A7           	and a
 600+ 94F1 28 06        	jr z,1F
 601+ 94F3 47           	ld b,a
 602+ 94F4 35           3 dec (hl)
 603+ 94F5 10 FD        	djnz 3B
 604+ 94F7 18 01        	jr 2F
 605+ 94F9 35           1 dec (hl)
 606+ 94FA C9           2 ret
 607+ 94FB
 608+ 94FB              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 94FB
 610+ 94FB 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 94FE 01 1F 00     	ld bc,31
 612+ 9501 A7           	and a
 613+ 9502 ED 4A        	adc hl,bc
 614+ 9504 22 9D 85     	ld (Posicion_actual),hl
 615+ 9507 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 950A CB C6        	set 0,(hl)
 617+ 950C C9           	ret
 618+ 950D
 619+ 950D              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 950D
 621+ 950D 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9510 01 1F 00     	ld bc,31
 623+ 9513 A7           	and a
 624+ 9514 ED 42        	sbc hl,bc
 625+ 9516 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9519 21 C9 85     	ld hl,Ctrl_0
 627+ 951C CB CE        	set 1,(hl)
 628+ 951E C9           	ret
 629+ 951F
 630+ 951F              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 951F
 632+ 951F 24           Reaparece_abajo inc h
 633+ 9520 01 E0 17     	ld bc,$17e0
 634+ 9523 A7           	and a
 635+ 9524 ED 4A        	adc hl,bc
 636+ 9526 22 9D 85     	ld (Posicion_actual),hl
 637+ 9529 21 C9 85     	ld hl,Ctrl_0
 638+ 952C CB D6        	set 2,(hl)
 639+ 952E C9           	ret
 640+ 952F
 641+ 952F              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 952F
 643+ 952F 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9532 A7           	and a
 645+ 9533 ED 42        	sbc hl,bc
 646+ 9535 22 9D 85     	ld (Posicion_actual),hl
 647+ 9538 21 C9 85     	ld hl,Ctrl_0
 648+ 953B CB DE        	set 3,(hl)
 649+ 953D C9           	ret
 650+ 953E
 651+ 953E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 953E
 653+ 953E 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9541 22 9D 85     	ld (Posicion_actual),hl
 655+ 9544 C9           	ret
# file closed: Direcciones.asm
 893  9545              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9545              ; ------------------------------------------------------------------------
   2+ 9545              ;
   3+ 9545              ;	02/04/23
   4+ 9545              ;
   5+ 9545              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9545              ;	Fila superior "0", Columna izquierda "0".
   7+ 9545              ;
   8+ 9545              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9545              ;
  10+ 9545              ;	Modifica: A,BC y DE.
  11+ 9545
  12+ 9545 C5           Genera_coordenadas push bc
  13+ 9546 E5           	push hl
  14+ 9547 D5           	push de
  15+ 9548
  16+ 9548 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 954B
  18+ 954B 7D           	ld a,l
  19+ 954C E6 1F        	and $1f
  20+ 954E 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9551
  22+ 9551 CD 19 92     	call calcula_tercio
  23+ 9554 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9555
  25+ 9555 1E 00        	ld e,0
  26+ 9557 7D           	ld a,l
  27+ 9558 E6 E0        	and $e0
  28+ 955A 28 01        	jr z,1F
  29+ 955C 04           	inc b
  30+ 955D
  31+ 955D 04           1 inc b
  32+ 955E 05           	dec b
  33+ 955F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9561              ;														; _ , salimos.
  35+ 9561 1C           3 inc e
  36+ 9562 D6 20        	sub 32
  37+ 9564 20 FB        	jr nz,3B
  38+ 9566 10 F5        	djnz 1B
  39+ 9568
  40+ 9568 7B           2 ld a,e
  41+ 9569 32 A2 85     	ld (Coordenada_y),a
  42+ 956C
  43+ 956C D1           	pop de
  44+ 956D E1           	pop hl
  45+ 956E C1           	pop bc
  46+ 956F
  47+ 956F C9           	ret
  48+ 9570
  49+ 9570              ; ------------------------------------------------------------------------
  50+ 9570              ;	28/03/23
  51+ 9570              ;
  52+ 9570              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9570              ;	Fila superior "0", Columna izquierda "0".
  54+ 9570              ;
  55+ 9570              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9570              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9570              ;
  58+ 9570              ;		DE="$120d"
  59+ 9570              ;
  60+ 9570              ;		D, (Coordenada_X), Columnas, $12
  61+ 9570              ;		E, (Coordenada_y), Filas, $0d
  62+ 9570              ;
  63+ 9570              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9570
  65+ 9570              ;	Modifica: A,BC y DE.
  66+ 9570
  67+ 9570
  68+ 9570              Genera_coordenadas_disparo
  69+ 9570
  70+ 9570              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9570
  72+ 9570 7D           	ld a,l
  73+ 9571 E6 1F        	and $1f
  74+ 9573 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9574 CD 19 92     	call calcula_tercio
  76+ 9577 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9578 1E 00        	ld e,0
  78+ 957A 7D           	ld a,l
  79+ 957B E6 E0        	and $e0
  80+ 957D 28 01        	jr z,1F
  81+ 957F 04           	inc b
  82+ 9580 1C           1 inc e
  83+ 9581 D6 20        	sub 32
  84+ 9583 20 FB        	jr nz,1B
  85+ 9585 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9587 C9           	ret
  87+ 9588
# file closed: Genera_coordenadas.asm
 894  9588              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9588
   2+ 9588
   3+ 9588              ;   11/8/22
   4+ 9588              ;
   5+ 9588              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9588              ;
   7+ 9588              ;   Mov_obj.asm
   8+ 9588              ;
   9+ 9588              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9588              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9588              ;
  12+ 9588              ;   Codificación:
  13+ 9588              ;
  14+ 9588              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9588
  16+ 9588              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9588
  18+ 9588 02 40 00     Arriba db 2,%01000000,0
  19+ 958B 02 80 00     Abajo db 2,%10000000,0
  20+ 958E 02 20 00     Derecha db 2,%00100000,0
  21+ 9591 02 10 00     Izquierda db 2,%00010000,0
  22+ 9594 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9598 60 42 60 40
  22+ 959C 63
  23+ 959D 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 95A1 22 A3 80 A0
  24+ 95A5 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 95A9 84 A0 83 A0
  25+ 95AD 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 95B1 80 A3 22 A0
  26+ 95B5 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 95B9 40 60 42 60
  27+ 95BD 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 95C1
  29+ 95C1 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 95C5 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 95C9 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 95CD 84 00
  32+ 95CF 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 95D3 84 00
  33+ 95D5 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 95D9 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 95DD 1F 1F 1F 1F
  35+ 95E1 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 95E5 1F 1F 1F 1F
  35+ 95E9 1F
  36+ 95EA 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 95EE 2F 2F 2F 2F
  36+ 95F2 2F 2F
  37+ 95F4 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 95F8 2F 2F 00
  38+ 95FB
  39+ 95FB              ; ----- ----- ----- ----- -----
  40+ 95FB
  41+ 95FB D9 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 95FD D5 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 95FF 91 95        Indice_mov_Izquierda defw Izquierda
  44+ 9601 8E 95        Indice_mov_Derecha defw Derecha
  45+ 9603 8B 95        Indice_mov_Abajo defw Abajo
  46+ 9605 88 95        Indice_mov_Arriba defw Arriba
  47+ 9607 C5 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9609 C9 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 960B C1 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 960D CF 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 960F 94 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9611              ; ----- ----- ----- ----- -----
  53+ 9611
  54+ 9611 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9614 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9615 28 02            jr z,1F
  57+ 9617 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9619 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 961C C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 961E 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9621              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9621 2A CD 85         ld hl,(Puntero_mov)
  63+ 9624 7E               ld a,(hl)
  64+ 9625 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9628 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9629 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 962C
  68+ 962C 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 962F A7               and a
  70+ 9630 20 0C            jr nz,12F
  71+ 9632 2A CD 85         ld hl,(Puntero_mov)
  72+ 9635 7E               ld a,(hl)
  73+ 9636 A7               and a
  74+ 9637 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9639 E6 0F            and $0f
  76+ 963B 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 963E              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 963E 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9641 CB 7E            bit 7,(hl)
  80+ 9643 28 03            jr z,2F
  81+ 9645 CD 37 92         call Mov_down
  82+ 9648 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 964B CB 76            bit 6,(hl)
  84+ 964D 28 03            jr z,3F
  85+ 964F CD 65 92         call Mov_up
  86+ 9652 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 9655 CB 6E            bit 5,(hl)
  88+ 9657 28 03            jr z,4F
  89+ 9659 CD 93 92         call Mov_right
  90+ 965C 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 965F CB 66            bit 4,(hl)
  92+ 9661 28 03            jr z,5F
  93+ 9663 CD B1 93         call Mov_left
  94+ 9666
  95+ 9666              ; ---------- --------- --------- ---------- ----------
  96+ 9666
  97+ 9666 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9669 A7               and a
  99+ 966A 28 07            jr z,6F
 100+ 966C 3D               dec a
 101+ 966D 32 D1 85         ld (Repetimos_db),a
 102+ 9670 28 01            jr z,6f
 103+ 9672 C9           11 ret
 104+ 9673 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9676 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9677 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 967A 23               inc hl
 108+ 967B 22 CD 85         ld (Puntero_mov),hl
 109+ 967E 18 F2            jr 11B
 110+ 9680 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9683 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9686 47               ld b,a
 113+ 9687 23           8 inc hl
 114+ 9688 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 968A 5E               ld e,(hl)
 116+ 968B 23               inc hl
 117+ 968C 56               ld d,(hl)
 118+ 968D EB               ex de,hl
 119+ 968E 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9691 18 DF            jr 11B
 121+ 9693
 122+ 9693              ; ---------- --------- --------- ---------- ----------
 123+ 9693              ;
 124+ 9693              ;   11/8/22
 125+ 9693              ;
 126+ 9693              ;   Prepara_Puntero_mov
 127+ 9693
 128+ 9693 E5           Prepara_Puntero_mov push hl
 129+ 9694 D5               push de
 130+ 9695 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 9698 5E               ld e,(hl)
 132+ 9699 23               inc hl
 133+ 969A 56               ld d,(hl)
 134+ 969B EB               ex de,hl
 135+ 969C 22 CD 85         ld (Puntero_mov),hl
 136+ 969F D1               pop de
 137+ 96A0 E1               pop hl
 138+ 96A1 C9               ret
 139+ 96A2
 140+ 96A2              ; ---------- --------- --------- ---------- ----------
 141+ 96A2              ;
 142+ 96A2              ;   11/8/22
 143+ 96A2              ;
 144+ 96A2              ;   Reinicia_el_movimiento
 145+ 96A2
 146+ 96A2 CD 93 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 96A5 AF               xor a
 148+ 96A6 32 CF 85         ld (Contador_db_mov),a
 149+ 96A9 32 D0 85         ld (Incrementa_puntero),a
 150+ 96AC C3 11 96         jp Movimiento
 151+ 96AF C9               ret
 152+ 96B0              ; ---------- --------- --------- ---------- ----------
 153+ 96B0
 154+ 96B0
 155+ 96B0
 156+ 96B0
 157+ 96B0
 158+ 96B0
 159+ 96B0
 160+ 96B0
 161+ 96B0
 162+ 96B0
 163+ 96B0
 164+ 96B0
 165+ 96B0
 166+ 96B0
 167+ 96B0
 168+ 96B0
 169+ 96B0
 170+ 96B0
# file closed: Patrones_de_mov.asm
 895  96B0              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 96B0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 96B0              ;
   3+ 96B0              ;	3/1/23
   4+ 96B0              ;
   5+ 96B0              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 96B0
   7+ 96B0              ;	ADC HL,SP	LD (addr),SP
   8+ 96B0              ;	ADD HL,SP	LD SP,(addr)
   9+ 96B0              ;	ADD IX,SP	LD SP,nn
  10+ 96B0              ; 	ADD IY,SP	LD SP,HL
  11+ 96B0              ;				LD SP,IX
  12+ 96B0              ;	DEC SP		LD SP,IY
  13+ 96B0
  14+ 96B0              ;	EX (SP),HL
  15+ 96B0              ;	EX (SP),IX
  16+ 96B0              ;	EX (SP),IY
  17+ 96B0
  18+ 96B0              ;	INC SP
  19+ 96B0
  20+ 96B0
  21+ 96B0                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 896  7FD4
 897  7FD4              	SAVESNA "Pruebas.sna", START
 898  7FD4
 899  7FD4
 900  7FD4
# file closed: Banco_de_pruebas.asm
