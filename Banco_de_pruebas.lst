# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 67 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 38 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 88 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 98 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 03           Lives db 3
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD E9 94     	call Cls
 517  8CA2 CD 7D 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD E2 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD F8 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3              ;	Inicia los álbumes de líneas.
 529  8CB3
 530  8CB3 CD CB 90     	call Inicia_albumes_de_lineas
 531  8CB6 CD DB 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CB9 CD E8 90     	call Inicia_albumes_de_disparos
 533  8CBC
 534  8CBC              ;	Inicia 1er Nivel.
 535  8CBC
 536  8CBC CD 44 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CBF CD 12 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CC2              ;														   _reponiendo entidades eliminadas.
 539  8CC2 CD 78 93     	call Prepara_Cajas_de_Entidades
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD C9 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD B8 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD 0C 94     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 8A 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD A9 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD 04 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 88 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE              ; Gestión de disparos.
 593  8CFE
 594  8CFE CD CD 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D01 CD 7E 9F     	call Motor_de_disparos_entidades
 596  8D04 CD 13 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D07
 598  8D07              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D07              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D07              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D07
 602  8D07 CD B4 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0A
 604  8D0A              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0A
 606  8D0A 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0D 35           	dec (hl)
 608  8D0E CC 0E 8E     	call z,Autoriza_disparo_de_entidades
 609  8D11
 610  8D11 2A 7F 8C     	ld hl,(Clock_next_entity)
 611  8D14 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D18 A7           	and a
 613  8D19 ED 42        	sbc hl,bc
 614  8D1B 20 16        	jr nz,1F
 615  8D1D
 616  8D1D              ; GESTIÓN DE ENTIDADES.
 617  8D1D
 618  8D1D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1D              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1D
 621  8D1D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1D
 625  8D1D 21 37 8C     	ld hl,Numero_parcial_de_entidades
 626  8D20 46           	ld b,(hl)
 627  8D21 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D24 B8           	cp b
 629  8D25 28 0C        	jr z,1F
 630  8D27 30 0A        	jr nc,1F
 631  8D29
 632  8D29              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D29
 634  8D29 3C           	inc a
 635  8D2A 32 38 8C     	ld (Entidades_en_curso),a
 636  8D2D
 637  8D2D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2D
 639  8D2D CD F8 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D30 CD 14 8F     	call Define_Clock_next_entity
 641  8D33
 642  8D33 3A 38 8C     1 ld a,(Entidades_en_curso)
 643  8D36 A7           	and a
 644  8D37 CA B9 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3A 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3B
 647  8D3B              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3B
 649  8D3B              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3B              ;
 651  8D3B              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3B
 653  8D3B 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3E 22 61 8C     	ld (India_SP),hl
 655  8D41
 656  8D41 21 65 8C     	ld hl,Ctrl_3
 657  8D44 CB D6        	set 2,(hl)
 658  8D46 CD A2 8E     	call Change
 659  8D49
 660  8D49 C5           2 push bc 												; Nº de entidades en curso.
 661  8D4A
 662  8D4A DD 2A 2E 8C  	ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 663  8D4E
 664  8D4E              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 665  8D4E              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 666  8D4E
 667  8D4E 3A 6C 8C     	ld a,(Impacto2)
 668  8D51 CB 5F        	bit 3,a
 669  8D53 C4 AA A1     	call nz,Compara_con_coordenadas_de_disparo
 670  8D56
 671  8D56              ; Existe colisión entre esta entidad y Amadeus ???
 672  8D56
 673  8D56 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 674  8D59 CB 4F        	bit 1,a
 675  8D5B C4 65 92     	call nz,Genera_explosion
 676  8D5E 20 3C        	jr nz,Gestiona_siguiente_entidad
 677  8D60
 678  8D60 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 679  8D63 A7           	and a
 680  8D64 28 0C        	jr z,3F
 681  8D66
 682  8D66              ; IMPACTO en entidad por colisión con Amadeus.
 683  8D66
 684  8D66              ; 5/7/24
 685  8D66              ; Nota importante:
 686  8D66              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 687  8D66              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 688  8D66              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 689  8D66
 690  8D66 3A BB 89     	ld a,(Impacto_Amadeus)
 691  8D69 A7           	and a
 692  8D6A C4 65 92     	call nz,Genera_explosion
 693  8D6D 20 2D        	jr nz,Gestiona_siguiente_entidad
 694  8D6F
 695  8D6F              ; Falsa colisión !!!
 696  8D6F
 697  8D6F 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 698  8D72
 699  8D72              ; -------------------------------------------
 700  8D72
 701  8D72 CD 58 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 702  8D75 CD 7A 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 703  8D78 CD 48 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 704  8D7B
 705  8D7B DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 706  8D7D DD 2A F3 8B  	ld ix,(Puntero_de_impresion)
 707  8D81 CD 29 95     	call Genera_datos_de_impresion
 708  8D84 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 709  8D86
 710  8D86 CD 2F 94     	call Decrementa_Contador_de_mov_masticados
 711  8D89
 712  8D89              ; -------------------------------------------
 713  8D89
 714  8D89              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 715  8D89
 716  8D89 2A F3 8B     	ld hl,(Puntero_de_impresion)
 717  8D8C CD FD 94     	call Genera_coordenadas
 718  8D8F
 719  8D8F ED 4B EF 8B  	ld bc,(Coordenada_X)
 720  8D93
 721  8D93 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 722  8D96 DD 70 02     	ld (ix+2),b
 723  8D99
 724  8D99              ; TODO: Generamos disparo ???
 725  8D99
 726  8D99              ;	ld a,(Permiso_de_disparo_Entidades)
 727  8D99              ;	and a
 728  8D99              ;	call nz,Entidad_genera_disparo_si_procede
 729  8D99
 730  8D99 CD 2E A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 731  8D9C
 732  8D9C              Gestiona_siguiente_entidad
 733  8D9C
 734  8D9C CD 68 91     	call Incrementa_punteros_de_cajas
 735  8D9F
 736  8D9F C1           	pop bc
 737  8DA0 10 A7        	djnz 2B
 738  8DA2
 739  8DA2              ; Hemos gestionado todas las entidades.
 740  8DA2              ; ----- ----- -----
 741  8DA2
 742  8DA2 CD 6C 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 743  8DA5 CD 83 8F     	call Ordena_tabla_de_impresion
 744  8DA8 CD 04 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 745  8DAB
 746  8DAB CD 29 8F     	call Borra_diferencia
 747  8DAE
 748  8DAE 3A 65 8C     	ld a,(Ctrl_3)
 749  8DB1 CB 5F        	bit 3,a
 750  8DB3 20 04        	jr nz,Gestion_de_Amadeus
 751  8DB5
 752  8DB5 EB           	ex de,hl
 753  8DB6 71           	ld (hl),c
 754  8DB7 2C           	inc l
 755  8DB8 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 756  8DB9
 757  8DB9              ;! GESTIONA AMADEUS !!!!!!!!!!
 758  8DB9
 759  8DB9              Gestion_de_Amadeus
 760  8DB9
 761  8DB9 21 65 8C     	ld hl,Ctrl_3
 762  8DBC CB 76        	bit 6,(hl)
 763  8DBE 28 13        	jr z,Amadeus_vivo
 764  8DC0
 765  8DC0              ; Amadeus ha sido destruido.
 766  8DC0              ; Decrementa (Temp_new_live).
 767  8DC0
 768  8DC0 21 79 8C     	ld hl,Temp_new_live
 769  8DC3 35           	dec (hl)
 770  8DC4 20 26        	jr nz,End_frame
 771  8DC6
 772  8DC6              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 773  8DC6
 774  8DC6 21 92 8C     	ld hl,Lives
 775  8DC9 35           	dec (hl)
 776  8DCA
 777  8DCA              ;! Fin del juego
 778  8DCA
 779  8DCA F3           	di
 780  8DCB 28 FE        	jr z,$
 781  8DCD FB           	ei
 782  8DCE
 783  8DCE              ; Nueva nave.
 784  8DCE
 785  8DCE CD 40 8E     	call Reinicia_Amadeus
 786  8DD1 18 19        	jr End_frame
 787  8DD3
 788  8DD3              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 789  8DD3
 790  8DD3              Amadeus_vivo
 791  8DD3
 792  8DD3 3A BB 89     	ld a,(Impacto_Amadeus)
 793  8DD6 A7           	and a
 794  8DD7 C4 AD 92     	call nz, Genera_explosion_Amadeus
 795  8DDA 20 10        	jr nz, End_frame
 796  8DDC
 797  8DDC CD 42 92     	call Teclado
 798  8DDF 21 65 8C     	ld hl,Ctrl_3
 799  8DE2
 800  8DE2 CB 6E        	bit 5,(hl)
 801  8DE4 28 06        	jr z,End_frame
 802  8DE6
 803  8DE6              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 804  8DE6
 805  8DE6 CD BD 8E     	call Change_Amadeus
 806  8DE9 CD A9 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 807  8DEC
 808  8DEC              End_frame
 809  8DEC
 810  8DEC              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 811  8DEC              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 812  8DEC
 813  8DEC CD D5 A0     	call Genera_datos_de_impresion_disparos_Entidades
 814  8DEF CD 99 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 815  8DF2 CD EF A1     	call Calcula_bytes_pintado_disparos
 816  8DF5 CD FC A1     	call Limpia_album_de_pintado_disparos_entidades
 817  8DF8
 818  8DF8              ; ------------ ------------- --------------
 819  8DF8
 820  8DF8 2A 43 8C     	ld hl,(Album_de_borrado)
 821  8DFB 22 5F 8C     	ld (Scanlines_album_SP),hl
 822  8DFE
 823  8DFE 21 65 8C     	ld hl,Ctrl_3
 824  8E01 CB C6        	set 0,(hl) 											; Indica Frame completo.
 825  8E03 CB 9E        	res 3,(hl)
 826  8E05 CB A6        	res 4,(hl)
 827  8E07
 828  8E07 AF           	xor a
 829  8E08 D3 FE        	out ($fe),a
 830  8E0A
 831  8E0A 76           	halt
 832  8E0B
 833  8E0B              ; ----------------------------------------
 834  8E0B
 835  8E0B              ;	ld a,(Ctrl_1) 										; Existe Loop?
 836  8E0B              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 837  8E0B CA FE 8C     	jp z,Main
 838  8E0E
 839  8E0E              ;------------------------------------------
 840  8E0E              ;
 841  8E0E              ;	07/11/24
 842  8E0E
 843  8E0E              Autoriza_disparo_de_entidades
 844  8E0E
 845  8E0E 3E 01        	ld a,1
 846  8E10 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 847  8E13
 848  8E13 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 849  8E16 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 850  8E18 38 02        	jr c,1F
 851  8E1A
 852  8E1A              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 853  8E1A              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 854  8E1A              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 855  8E1A
 856  8E1A D6 03        	sub 3
 857  8E1C
 858  8E1C 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 859  8E1F 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 860  8E22
 861  8E22 C9           	ret
 862  8E23
 863  8E23              ;------------------------------------------
 864  8E23              ;
 865  8E23              ;	14/09/24
 866  8E23              ;
 867  8E23              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 868  8E23
 869  8E23              Entidad_genera_disparo_si_procede
 870  8E23
 871  8E23 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 872  8E26 CB 06        	rlc (hl)
 873  8E28
 874  8E28 DC 25 A1     	call c,Genera_disparo_de_entidad_maldosa
 875  8E2B
 876  8E2B C9           	ret
 877  8E2C
 878  8E2C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 879  8E2C              ;
 880  8E2C              ;	30/09/24
 881  8E2C
 882  8E2C              Actuaiza_sp_de_disparos_de_entidades
 883  8E2C
 884  8E2C 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 885  8E2F 23           	inc hl
 886  8E30 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 887  8E33
 888  8E33 11 FD 88     	ld de,Numeros_aleatorios+7
 889  8E36 7B           	ld a,e
 890  8E37 95           	sub l
 891  8E38 C0           	ret nz
 892  8E39
 893  8E39 21 F6 88     1 ld hl,Numeros_aleatorios
 894  8E3C 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 895  8E3F C9           	ret
 896  8E40
 897  8E40              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 898  8E40              ;
 899  8E40              ;	24/07/24
 900  8E40
 901  8E40              Reinicia_Amadeus
 902  8E40
 903  8E40              ;	Reinicia posición y estado.
 904  8E40
 905  8E40 21 CF 50     	ld hl,$50cf
 906  8E43 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 907  8E46 21 CC DC     	ld hl,$dccc
 908  8E49 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 909  8E4C 21 3D 00     	ld hl,$003d
 910  8E4F 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 911  8E52
 912  8E52              ;	limpiamos el álbum de borrado.
 913  8E52
 914  8E52 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 915  8E55
 916  8E55 AF           	xor a
 917  8E56 77           	ld (hl),a
 918  8E57
 919  8E57 E5           	push hl
 920  8E58 D1           	pop de
 921  8E59 13           	inc de
 922  8E5A
 923  8E5A 01 23 00     	ld bc,35
 924  8E5D ED B0        	ldir
 925  8E5F
 926  8E5F CD A9 90     	call Genera_datos_de_impresion_Amadeus
 927  8E62
 928  8E62              ;	Reinicia temporizaciones.
 929  8E62
 930  8E62 CD 88 91     	call Inicia_Shield
 931  8E65
 932  8E65 3E 5A        	ld a,90
 933  8E67 32 8F 8C     	ld (Shield),a
 934  8E6A
 935  8E6A 3E 64        	ld a,100
 936  8E6C 32 79 8C     	ld (Temp_new_live),a
 937  8E6F
 938  8E6F              ; 	Restauramos el FLAG: Amadeus vivo.
 939  8E6F
 940  8E6F 21 65 8C     	ld hl,Ctrl_3
 941  8E72 CB B6        	res 6,(hl)
 942  8E74
 943  8E74              ;	Fuerza la impresión de la nave en el siguiente frame.
 944  8E74
 945  8E74 21 65 8C      	ld hl,Ctrl_3
 946  8E77 CB EE        	set 5,(hl)
 947  8E79
 948  8E79 C9           	ret
 949  8E7A
 950  8E7A              ; --------------------------------------------------------------------------------------------------------------
 951  8E7A              ;
 952  8E7A              ;	23/11/24
 953  8E7A
 954  8E7A              Ajusta_velocidad_entidad
 955  8E7A
 956  8E7A DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 957  8E7D A7           	and a
 958  8E7E C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 959  8E7F              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 960  8E7F              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 961  8E7F
 962  8E7F
 963  8E7F              ; Incrementa (Contador_de_vueltas)x2.
 964  8E7F              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 965  8E7F
 966  8E7F              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 967  8E7F              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 968  8E7F              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 969  8E7F              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 970  8E7F              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 971  8E7F
 972  8E7F
 973  8E7F CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 974  8E81 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 975  8E84 E6 10        	and $10
 976  8E86 C8           	ret z
 977  8E87
 978  8E87              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 979  8E87
 980  8E87 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
 981  8E8A CB 2F        	sra a
 982  8E8C CB 2F        	sra a
 983  8E8E DD 77 0B     	ld (ix+11),a
 984  8E91
 985  8E91 DD 6E 07     	ld l,(ix+7)
 986  8E94 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
 987  8E97
 988  8E97              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
 989  8E97 23           	inc hl
 990  8E98 23           	inc hl
 991  8E99 23           	inc hl
 992  8E9A 23           	inc hl
 993  8E9B              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
 994  8E9B
 995  8E9B DD 75 07     	ld (ix+7),l
 996  8E9E DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
 997  8EA1
 998  8EA1 C9           	ret
 999  8EA2
1000  8EA2              ; --------------------------------------------------------------------------------------------------------------
1001  8EA2              ;
1002  8EA2              ;	25/08/24
1003  8EA2
1004  8EA2              Change
1005  8EA2
1006  8EA2 3A 5C 8C     	ld a,(Switch)
1007  8EA5 EE 01        	xor 1
1008  8EA7 32 5C 8C     	ld (Switch),a
1009  8EAA 2A 41 8C     	ld hl,(Album_de_pintado)
1010  8EAD ED 5B 43 8C  	ld de,(Album_de_borrado)
1011  8EB1 EB           	ex de,hl
1012  8EB2 22 41 8C     	ld (Album_de_pintado),hl
1013  8EB5 22 5F 8C     	ld (Scanlines_album_SP),hl
1014  8EB8 ED 53 43 8C  	ld (Album_de_borrado),de
1015  8EBC C9           	ret
1016  8EBD
1017  8EBD              Change_Amadeus
1018  8EBD
1019  8EBD 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1020  8EC0 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1021  8EC4 EB           	ex de,hl
1022  8EC5 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1023  8EC8 ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1024  8ECC C9           	ret
1025  8ECD
1026  8ECD              Change_Disparos
1027  8ECD
1028  8ECD              ; Álbumes de Amadeus.
1029  8ECD
1030  8ECD 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1031  8ED0 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1032  8ED4 EB           	ex de,hl
1033  8ED5 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1034  8ED8 ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1035  8EDC CD E4 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1036  8EDF
1037  8EDF              ; Álbumes de entidades.
1038  8EDF
1039  8EDF 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1040  8EE2 ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1041  8EE6 EB           	ex de,hl
1042  8EE7 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1043  8EEA ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1044  8EEE 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1045  8EF1
1046  8EF1 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1047  8EF4 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1048  8EF7
1049  8EF7 C9           	ret
1050  8EF8
1051  8EF8              ; ------------------------------------
1052  8EF8              ;
1053  8EF8              ; 1/05/24
1054  8EF8
1055  8EF8              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1056  8EF8              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1057  8EF8
1058  8EF8              ;	DESTRUYE: HL,DE,A
1059  8EF8              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1060  8EF8
1061  8EF8              ;	Variables implicadas: (RND_SP).
1062  8EF8
1063  8EF8              Extrae_numero_aleatorio_y_avanza
1064  8EF8
1065  8EF8 21 00 89     	ld hl,Tabla_de_pintado
1066  8EFB EB           	ex de,hl
1067  8EFC 2A 7A 8C     	ld hl,(RND_SP)
1068  8EFF EB           	ex de,hl
1069  8F00 A7           	and a
1070  8F01 ED 52        	sbc hl,de
1071  8F03
1072  8F03 2A 7A 8C     	ld hl,(RND_SP)
1073  8F06 20 06        	jr nz,1F
1074  8F08
1075  8F08              ; Sitúa HL al principio de la tabla de nº aleatorios.
1076  8F08
1077  8F08 21 F6 88     	ld hl,Numeros_aleatorios
1078  8F0B 22 7A 8C     	ld (RND_SP),HL
1079  8F0E
1080  8F0E              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1081  8F0E
1082  8F0E 7E           1 ld a,(hl)
1083  8F0F 23           	inc hl
1084  8F10 22 7A 8C     	ld (RND_SP),hl
1085  8F13 C9           	ret
1086  8F14
1087  8F14              ; ------------------------------------
1088  8F14              ;
1089  8F14              ; 1/05/24
1090  8F14
1091  8F14              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1092  8F14              ; (1 a 4 segundos).
1093  8F14              ; Actualizamos (Clock_next_entity) con A.
1094  8F14
1095  8F14              ;	DESTRUYE: A y B.
1096  8F14              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1097  8F14              ;			 Actualiza (Clock_next_entity) con A.
1098  8F14
1099  8F14              ;	Variables implicadas: (Clock_next_entity).
1100  8F14
1101  8F14              ; Notas:
1102  8F14
1103  8F14              ; 	$32 1 seg.
1104  8F14              ; 	$64 2 seg.
1105  8F14              ; 	$96 3 seg.
1106  8F14              ; 	$c8 4 seg.
1107  8F14              ; 	$fa 5 seg.
1108  8F14
1109  8F14              ; $ffff 1310,7 seg, 22 minutos.
1110  8F14
1111  8F14              ;	$0100  5 seg. aproximadamente.
1112  8F14              ;	$0200 10 seg. aproximadamente.
1113  8F14              ;	$0300 15 seg. aproximadamente.
1114  8F14              ;	$0400 20 seg. aproximadamente.
1115  8F14              ;	$0500 25 seg. aproximadamente.
1116  8F14              ;	$0600 30 seg. aproximadamente.
1117  8F14
1118  8F14              Define_Clock_next_entity
1119  8F14
1120  8F14 FE 34        	cp $34
1121  8F16 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1122  8F18
1123  8F18              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1124  8F18
1125  8F18 4F           3 ld c,a
1126  8F19 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1127  8F1B 2A 78 5C     	ld hl,(FRAMES)
1128  8F1E A7           	and a
1129  8F1F ED 4A        	adc hl,bc
1130  8F21 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1131  8F24 C9           	ret
1132  8F25
1133  8F25 3E 34        1 ld a,$34
1134  8F27 18 EF        	jr 3B
1135  8F29
1136  8F29              ; ------------------------------------
1137  8F29              ;
1138  8F29              ; 18/03/24
1139  8F29
1140  8F29              Borra_diferencia
1141  8F29
1142  8F29 ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1143  8F2D
1144  8F2D 3A 5C 8C     	ld a,(Switch)
1145  8F30 A7           	and a
1146  8F31 28 08        	jr z,2F
1147  8F33
1148  8F33 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1149  8F36 11 5A 8C     	ld de,Techo_Scanlines_album_2
1150  8F39 18 06        	jr 3F
1151  8F3B
1152  8F3B 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1153  8F3E 11 58 8C     	ld de,Techo_Scanlines_album
1154  8F41
1155  8F41              ; Diferencia.
1156  8F41
1157  8F41 ED 42        3 sbc hl,bc
1158  8F43
1159  8F43 C8           	ret z
1160  8F44 D8           	ret c
1161  8F45
1162  8F45              ; Nuevo techo, (más bajo que el anterior).
1163  8F45              ; Fijamos nuevo techo y borramos bytes sobrantes.
1164  8F45
1165  8F45 EB           	ex de,hl
1166  8F46
1167  8F46 71           	ld (hl),c
1168  8F47 2C           	inc l
1169  8F48 70           	ld (hl),b
1170  8F49
1171  8F49 AF           	xor a
1172  8F4A 43           	ld b,e
1173  8F4B
1174  8F4B 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1175  8F4E
1176  8F4E 77           1 ld (hl),a
1177  8F4F 23           	inc hl
1178  8F50 10 FC        	djnz 1B
1179  8F52
1180  8F52              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1181  8F52
1182  8F52 21 65 8C     	ld hl,Ctrl_3
1183  8F55 CB DE        	set 3,(hl)
1184  8F57
1185  8F57 C9           	ret
1186  8F58
1187  8F58              ; --------------------------------------------------------------------------------------------------------------
1188  8F58              ;
1189  8F58              ;	23/11/24
1190  8F58              ;
1191  8F58              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1192  8F58
1193  8F58              Entidad_a_Tabla_de_pintado
1194  8F58
1195  8F58              ; Almacena la Coordenada Y de la entidad en curso.
1196  8F58
1197  8F58              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1198  8F58
1199  8F58 DD 7E 02     	ld a,(ix+2)
1200  8F5B 2A 61 8C     	ld hl,(India_SP)
1201  8F5E 77           	ld (hl),a
1202  8F5F 2C           	inc l
1203  8F60
1204  8F60              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1205  8F60
1206  8F60 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1207  8F64
1208  8F64 73           	ld (hl),e
1209  8F65 2C           	inc l
1210  8F66 72           	ld (hl),d
1211  8F67 2C           	inc l
1212  8F68
1213  8F68 22 61 8C     	ld (India_SP),hl
1214  8F6B
1215  8F6B C9           	ret
1216  8F6C
1217  8F6C              ; --------------------------------------------------------------------------------------------------------------
1218  8F6C              ;
1219  8F6C              ;	27/03/24
1220  8F6C              ;
1221  8F6C
1222  8F6C              Inicializa_India_y_limpia_Tabla_de_impresion
1223  8F6C
1224  8F6C 2A 61 8C     	ld hl,(India_SP)
1225  8F6F 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1226  8F72
1227  8F72 79           	ld a,c
1228  8F73 95           	sub l
1229  8F74 28 06        	jr z,2F
1230  8F76 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1231  8F77              ;														; _ y pasamos a inicializar (India_SP).
1232  8F77 AF           	xor a
1233  8F78
1234  8F78 77           1 ld (hl),a
1235  8F79 2C           	inc l
1236  8F7A 10 FC        	djnz 1B												; Limpia Tabla.
1237  8F7C
1238  8F7C 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1239  8F7F 22 61 8C     	ld (India_SP),hl
1240  8F82
1241  8F82 C9           	ret
1242  8F83
1243  8F83              ; --------------------------------------------------------------------------------------------------------------
1244  8F83              ;
1245  8F83              ;	31/3/24
1246  8F83
1247  8F83              Ordena_tabla_de_impresion
1248  8F83
1249  8F83              ; 5794 T/states.
1250  8F83              ; 6278 T/states.
1251  8F83              ; 5310 T/states.
1252  8F83
1253  8F83              ; Inicializamos punteros (India_SP) e (India_2_SP).
1254  8F83              ; Inicializamos contador de comparaciones, [C].
1255  8F83              ; Cargamos los registros A y B para efectuar comparación.
1256  8F83
1257  8F83 FD 2E 00     	ld iyl,0
1258  8F86
1259  8F86 3A 38 8C     	ld a,(Entidades_en_curso)
1260  8F89 FE 04        	cp 4 	;	4
1261  8F8B D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1262  8F8C
1263  8F8C 3D           	dec a
1264  8F8D 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1265  8F8E 51           	ld d,c 										; Copia de respaldo.
1266  8F8F
1267  8F8F 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1268  8F90
1269  8F90 21 03 89     	ld hl,Tabla_de_pintado+3
1270  8F93 46           	ld b,(hl)
1271  8F94 22 63 8C     	ld (India_2_SP),hl
1272  8F97
1273  8F97 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1274  8F98 DC C0 8F     	call c, Avanza_India_2_SP
1275  8F9B CC C0 8F     	call z, Avanza_India_2_SP
1276  8F9E
1277  8F9E FD 2D        	dec iyl
1278  8FA0 28 18        	jr z,2F
1279  8FA2
1280  8FA2
1281  8FA2              ; --------------------------------------------------------------------------------------------------------------
1282  8FA2              ;
1283  8FA2              ;	7/4/24
1284  8FA2
1285  8FA2              Trueque
1286  8FA2
1287  8FA2              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1288  8FA2              ;  			A contiene en nº de fila de (India_SP).
1289  8FA2              ;			HL contiene (India_2_SP).
1290  8FA2
1291  8FA2 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1292  8FA3 E5           	push hl										; Preservo (India_2_SP).
1293  8FA4
1294  8FA4 ED 5B 61 8C  	ld de,(India_SP)
1295  8FA8 EB           	ex de,hl
1296  8FA9 70           	ld (hl),b
1297  8FAA 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1298  8FAB
1299  8FAB CD EC 8F     	call Intercambia_1_byte
1300  8FAE CD EC 8F     	call Intercambia_1_byte
1301  8FB1
1302  8FB1
1303  8FB1              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1304  8FB1              ; Recuperamos (India_2_SP) en HL.
1305  8FB1
1306  8FB1 2A 61 8C     	ld hl,(India_SP)
1307  8FB4 7E           	ld a,(hl)
1308  8FB5
1309  8FB5 E1           	pop hl
1310  8FB6 D1           	pop de
1311  8FB7
1312  8FB7              ; --------------------------------------------------------------------------------------------------------------
1313  8FB7
1314  8FB7 CD C0 8F     	call Avanza_India_2_SP
1315  8FBA
1316  8FBA 14           2 inc d
1317  8FBB 15           	dec d
1318  8FBC C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1319  8FBD 18 D8        	jr 1B
1320  8FBF
1321  8FBF C9           	ret
1322  8FC0
1323  8FC0              ; ----- ----- ----- ----- -----
1324  8FC0
1325  8FC0              Avanza_India_2_SP
1326  8FC0
1327  8FC0 0D           	dec c
1328  8FC1 28 0A        	jr z,Avanza_punteros_indios
1329  8FC3
1330  8FC3 FD 2C        	inc iyl
1331  8FC5
1332  8FC5 2C           	inc l
1333  8FC6 2C           	inc l
1334  8FC7 2C           	inc l
1335  8FC8
1336  8FC8 46           	ld b,(hl)
1337  8FC9 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1338  8FCC
1339  8FCC C9           	ret
1340  8FCD
1341  8FCD              ; ----- ----- ----- ----- -----
1342  8FCD
1343  8FCD              Avanza_punteros_indios
1344  8FCD
1345  8FCD 15           	dec d
1346  8FCE 28 15        	jr z,Prepara_salida
1347  8FD0
1348  8FD0 4A           	ld c,d
1349  8FD1
1350  8FD1 2A 61 8C     	ld hl,(India_SP)
1351  8FD4 2C           	inc l
1352  8FD5 2C           	inc l
1353  8FD6 2C           	inc l
1354  8FD7 7E           	ld a,(hl)
1355  8FD8 22 61 8C     	ld (India_SP),hl
1356  8FDB
1357  8FDB 2C           	inc l
1358  8FDC 2C           	inc l
1359  8FDD 2C           	inc l
1360  8FDE 46           	ld b,(hl)
1361  8FDF 22 63 8C     	ld (India_2_SP),hl
1362  8FE2
1363  8FE2 FD 2C        	inc iyl
1364  8FE4
1365  8FE4 C9           	ret
1366  8FE5
1367  8FE5              Prepara_salida
1368  8FE5
1369  8FE5 21 00 89     	ld hl,Tabla_de_pintado
1370  8FE8 22 61 8C     	ld (India_SP),hl
1371  8FEB C9           	ret
1372  8FEC
1373  8FEC
1374  8FEC 2C           Intercambia_1_byte inc l
1375  8FED 1C           	inc e
1376  8FEE 46           	ld b,(hl)
1377  8FEF 1A           	ld a,(de)
1378  8FF0 EB           	ex de,hl
1379  8FF1 70           	ld (hl),b
1380  8FF2 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1381  8FF3 C9           	ret
1382  8FF4
1383  8FF4              ; -----------------------------------------------------------------------------------
1384  8FF4              ;
1385  8FF4              ;	20/01/24
1386  8FF4              ;
1387  8FF4              ;
1388  8FF4
1389  8FF4              Construye_movimientos_masticados_entidad
1390  8FF4
1391  8FF4 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1392  8FF7 E5           	push hl
1393  8FF8 CD 3B 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1394  8FFB              ;															; _ el (Contador_de_mov_masticados).
1395  8FFB CD 20 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1396  8FFE              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1397  8FFE CD 10 9A     	call Recompone_posicion_inicio
1398  9001
1399  9001 CD 40 97     1 call Draw
1400  9004 CD 20 90     	call Guarda_movimiento_masticado
1401  9007
1402  9007 CD BD 9D     	call Movimiento
1403  900A
1404  900A 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1405  900D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1406  900F 28 F0        	jr z,1B
1407  9011
1408  9011              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1409  9011              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1410  9011
1411  9011 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1412  9012 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1413  9015
1414  9015              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1415  9015
1416  9015 CD 21 9F     	call Situa_en_contador_general_de_mov_masticados
1417  9018
1418  9018              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1419  9018              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1420  9018
1421  9018 ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1422  901C
1423  901C 71           	ld (hl),c
1424  901D 23           	inc hl
1425  901E 70           	ld (hl),b
1426  901F
1427  901F C9           	ret
1428  9020
1429  9020              ; -----------------------------------------------------------------------------------
1430  9020              ;
1431  9020              ;	28/12/23
1432  9020              ;
1433  9020              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1434  9020              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1435  9020
1436  9020              Guarda_movimiento_masticado
1437  9020
1438  9020 ED 73 3D 8C  	ld (Stack),sp
1439  9024 ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1440  9028
1441  9028 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1442  902A FD E5            push iy 												; Pushea Puntero_objeto.
1443  902C
1444  902C ED 7B 3D 8C      ld sp,(Stack)
1445  9030
1446  9030 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1447  9033 23           	inc hl
1448  9034 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1449  9037
1450  9037 CD 3B 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1451  903A              ;															; _ el (Contador_de_mov_masticados).
1452  903A C9               ret
1453  903B
1454  903B              ; --------------------------------------------------------------------------------------------------------------
1455  903B              ;
1456  903B              ;	12/1/24
1457  903B              ;
1458  903B              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1459  903B
1460  903B              Actualiza_Puntero_de_almacen_de_mov_masticados
1461  903B
1462  903B 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1463  903E 01 04 00     	ld bc,4
1464  9041 A7           	and a
1465  9042 ED 4A        	adc hl,bc
1466  9044 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1467  9047 C9           	ret
1468  9048
1469  9048              ; ------------------------------------------
1470  9048              ;
1471  9048              ;	23/11/24
1472  9048              ;
1473  9048              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1474  9048
1475  9048
1476  9048              Obtenemos_puntero_de_impresion
1477  9048
1478  9048 DD 6E 07     	ld l,(ix+7)
1479  904B DD 66 08     	ld h,(ix+8)
1480  904E
1481  904E              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1482  904E
1483  904E ED 73 3D 8C  	ld (Stack),sp
1484  9052 F9           	ld sp,hl
1485  9053
1486  9053 AF           	xor a
1487  9054 67           	ld h,a
1488  9055 6C           	ld l,h															; ld hl,"0"
1489  9056
1490  9056 D1           	pop de															; (Puntero_objeto) en DE.
1491  9057 C1           	pop bc
1492  9058
1493  9058              ; 	Almacena (Puntero_de_impresion) en caja.
1494  9058
1495  9058 DD 71 05     	ld (ix+5),c
1496  905B DD 70 06     	ld (ix+6),b
1497  905E
1498  905E ED 43 F3 8B  	ld (Puntero_de_impresion),bc
1499  9062
1500  9062              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1501  9062
1502  9062 39           	add hl,sp
1503  9063 DD 75 07     	ld (ix+7),l
1504  9066 DD 74 08     	ld (ix+8),h
1505  9069
1506  9069 C1           	pop bc
1507  906A
1508  906A 79           	ld a,c
1509  906B 80           	add b															; Comprueba si ya no hay datos en el almacén.
1510  906C
1511  906C ED 7B 3D 8C  	ld sp,(Stack)
1512  9070
1513  9070 CC 3D 94     	call z,Reinicia_entidad_maliciosa
1514  9073
1515  9073 C9           	ret
1516  9074
1517  9074              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1518  9074              ;
1519  9074              ;	25/11/24
1520  9074
1521  9074              Cargamos_registros_con_explosion
1522  9074
1523  9074 DD 6E 07     	ld l,(ix+7)
1524  9077 DD 66 08     	ld h,(ix+8)
1525  907A CD 1A 91     	call Extrae_address
1526  907D EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1527  907E
1528  907E DD 6E 05     	ld l,(ix+5)
1529  9081 DD 66 06     	ld h,(ix+6)
1530  9084
1531  9084 E5           	push hl
1532  9085 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1533  9087
1534  9087 C9           	ret
1535  9088
1536  9088
1537  9088              Cargamos_registros_con_explosion_Amadeus
1538  9088
1539  9088 2A BE 89     	ld hl,(Pamm_Amadeus)
1540  908B CD 1A 91     	call Extrae_address
1541  908E
1542  908E 5D           	ld e,l
1543  908F 54           	ld d,h
1544  9090
1545  9090 DD 2A BC 89  	ld ix,(p.imp.amadeus)
1546  9094
1547  9094 C9           	ret
1548  9095
1549  9095              ; --------------------------------------------------------------------------------------------------------------
1550  9095              ;
1551  9095              ;	17/06/24
1552  9095              ;
1553  9095              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1554  9095              ;
1555  9095              ;	IX contiene el puntero de impresión.
1556  9095              ;	DE contiene (Puntero_objeto).
1557  9095
1558  9095
1559  9095              Cargamos_registros_con_mov_masticado_Amadeus
1560  9095
1561  9095 ED 73 3D 8C  	ld (Stack),sp
1562  9099 ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1563  909D D1           	pop de 															; DE contiene Puntero_objeto
1564  909E DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1565  90A0 DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1566  90A4 ED 7B 3D 8C  	ld sp,(Stack)
1567  90A8 C9           	ret
1568  90A9
1569  90A9              ; ---------------------------------------------------------------------------------------------------------------------
1570  90A9              ;
1571  90A9              ;	18/6/24
1572  90A9              ;
1573  90A9              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1574  90A9
1575  90A9              Genera_datos_de_impresion_Amadeus
1576  90A9
1577  90A9 3A BB 89     	ld a,(Impacto_Amadeus)
1578  90AC A7           	and a
1579  90AD 20 03        	jr nz,1F
1580  90AF
1581  90AF              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1582  90AF              ; _apuntando a la correspondiente explosión.
1583  90AF
1584  90AF CD 95 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1585  90B2
1586  90B2 DD 7D        1 ld a,ixl
1587  90B4 E6 1F        	and $1f
1588  90B6 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1589  90B9
1590  90B9 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1591  90BC E5           	push hl
1592  90BD
1593  90BD 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1594  90C0 22 5F 8C     	ld (Scanlines_album_SP),hl
1595  90C3
1596  90C3 CD 29 95     	call Genera_datos_de_impresion
1597  90C6
1598  90C6 E1           	pop hl
1599  90C7 22 5F 8C     	ld (Scanlines_album_SP),hl
1600  90CA
1601  90CA C9           	ret
1602  90CB
1603  90CB              ; ---------------------------------------------------------------------------------------------------------------------
1604  90CB              ;
1605  90CB              ;	13/03/24
1606  90CB              ;
1607  90CB              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1608  90CB
1609  90CB              Inicia_albumes_de_lineas
1610  90CB
1611  90CB 21 00 80     	ld hl,Scanlines_album
1612  90CE 22 41 8C     	ld (Album_de_pintado),hl
1613  90D1 22 5F 8C     	ld (Scanlines_album_SP),hl
1614  90D4
1615  90D4 21 1A 81     	ld hl,Scanlines_album_2
1616  90D7 22 43 8C     	ld (Album_de_borrado),hl
1617  90DA
1618  90DA C9           	ret
1619  90DB
1620  90DB              Inicia_albumes_de_lineas_Amadeus
1621  90DB
1622  90DB 21 34 82     	ld hl,Amadeus_scanlines_album
1623  90DE 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1624  90E1 21 58 82     	ld hl,Amadeus_scanlines_album_2
1625  90E4 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1626  90E7
1627  90E7 C9           	ret
1628  90E8
1629  90E8              Inicia_albumes_de_disparos
1630  90E8
1631  90E8 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1632  90EB 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1633  90EE 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1634  90F1 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1635  90F4
1636  90F4 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1637  90F7 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1638  90FA 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1639  90FD
1640  90FD 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1641  9100 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1642  9103
1643  9103 C9           	ret
1644  9104
1645  9104              ; ---------------------------------------------------------------------------------------------------------------------
1646  9104              ;
1647  9104              ; 8/1/23
1648  9104              ;
1649  9104              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1650  9104              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1651  9104              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1652  9104
1653  9104              ; Destruye HL y DE !!!!!
1654  9104
1655  9104              Inicia_punteros_de_cajas
1656  9104
1657  9104 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1658  9107 CD 1A 91         call Extrae_address
1659  910A 22 2E 8C         ld (Puntero_store_caja),hl
1660  910D 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1661  9110 22 32 8C     	ld (Indice_restore_caja),hl
1662  9113 CD 1A 91     	call Extrae_address
1663  9116 22 30 8C     	ld (Puntero_restore_caja),hl
1664  9119 C9               ret
1665  911A
1666  911A              ; *************************************************************************************************************************************************************
1667  911A
1668  911A              ;
1669  911A              ; 20/10/22
1670  911A              ;
1671  911A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1672  911A              ;
1673  911A              ; Destruye el puntero y DE !!!!!
1674  911A
1675  911A 5E           Extrae_address ld e,(hl)
1676  911B 23           	inc hl
1677  911C 56           	ld d,(hl)
1678  911D 2B           	dec hl
1679  911E EB           	ex de,hl
1680  911F C9           	ret
1681  9120
1682  9120              ; *************************************************************************************************************************************************************
1683  9120              ;
1684  9120              ;	20/1/24
1685  9120              ;
1686  9120              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1687  9120              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1688  9120              ;
1689  9120              ;   Destruye HL y BC !!!!!,
1690  9120              ;
1691  9120              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1692  9120              ;					"0" ..... Izquierda.
1693  9120
1694  9120              Inicia_Puntero_objeto
1695  9120
1696  9120 3A 0D 8C     	ld a,(Cuad_objeto)
1697  9123 E6 01        	and 1
1698  9125 F5           	push af
1699  9126 CC 42 91     	call z,Inicia_puntero_objeto_izq
1700  9129 F1           	pop af
1701  912A C8           	ret z
1702  912B CD 2F 91     	call Inicia_puntero_objeto_der
1703  912E C9           	ret
1704  912F
1705  912F              ; Arrancamos desde la parte izquierda de la pantalla.
1706  912F              ; Iniciamos (Indice_Sprite_der).
1707  912F
1708  912F 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1709  9132 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1710  9135 CD 1A 91     	call Extrae_address
1711  9138 22 00 8C     	ld (Puntero_objeto),hl
1712  913B
1713  913B 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1714  913E 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1715  9141 C9           	ret
1716  9142
1717  9142              ; Arrancamos desde la parte derecha de la pantalla.
1718  9142              ; Iniciamos (Indice_Sprite_izq).
1719  9142
1720  9142 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1721  9145 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1722  9148 CD 1A 91     	call Extrae_address
1723  914B 22 00 8C     	ld (Puntero_objeto),hl
1724  914E
1725  914E 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1726  9151 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1727  9154 C9           	ret
1728  9155
1729  9155              ; **************************************************************************************************
1730  9155              ;
1731  9155              ;	06/07/24
1732  9155              ;
1733  9155              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1734  9155
1735  9155              Restore_entidad
1736  9155
1737  9155 2A 2E 8C     	ld hl,(Puntero_store_caja)
1738  9158 7E           	ld a,(hl)
1739  9159 A7           	and a
1740  915A CC 68 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1741  915D 28 F6        	jr z,Restore_entidad
1742  915F
1743  915F 11 EE 8B     	ld de,Bandeja_DRAW
1744  9162 01 0C 00     	ld bc,12
1745  9165 ED B0        	ldir
1746  9167 C9           	ret
1747  9168
1748  9168              ; **************************************************************************************************
1749  9168              ;
1750  9168              ;	08/05/23
1751  9168              ;
1752  9168              ;	Incrementamos los dos punteros de entidades. (+1).
1753  9168
1754  9168              Incrementa_punteros_de_cajas
1755  9168
1756  9168 2A 30 8C     	ld hl,(Puntero_restore_caja)
1757  916B 22 2E 8C     	ld (Puntero_store_caja),hl
1758  916E 2A 32 8C     	ld hl,(Indice_restore_caja)
1759  9171 23           	inc hl
1760  9172 23           	inc hl
1761  9173 22 32 8C     	ld (Indice_restore_caja),hl
1762  9176 CD 1A 91         call Extrae_address
1763  9179 22 30 8C         ld (Puntero_restore_caja),hl
1764  917C C9               ret
1765  917D
1766  917D              ; -----------------------------------------------------------
1767  917D
1768  917D              ; Teclado.
1769  917D
1770  917D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1771  917F DB FE        	in a,($fe)
1772  9181 E6 01        	and $01
1773  9183 28 02        	jr z,1f
1774  9185 18 F6        	jr Pulsa_ENTER
1775  9187 C9           1 ret
1776  9188
1777  9188              ; **************************************************************************************************
1778  9188              ;
1779  9188              ; Temporización.
1780  9188
1781  9188              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1782  9188              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1783  9188              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1784  9188              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1785  9188
1786  9188              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1787  9188              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1788  9188              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1789  9188
1790  9188              ; A partir de $4f61 no hace falta DELAY.
1791  9188
1792  9188              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1793  9188
1794  9188              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1795  9188              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1796  9188              ;	LD A,B
1797  9188              ;	AND A
1798  9188              ;	JR NZ,wait
1799  9188              ;	RET
1800  9188
1801  9188              ; ---------------------------------------------------------------------------------------------------------------
1802  9188              ;
1803  9188              ;	13/07/24
1804  9188              ;
1805  9188
1806  9188              Inicia_Shield
1807  9188
1808  9188 21 89 8C     	ld hl,Datos_Shield
1809  918B 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1810  918E
1811  918E 7E           	ld a,(hl)
1812  918F 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1813  9192
1814  9192 3E 01        	ld a,1
1815  9194 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1816  9197
1817  9197 C9           	ret
1818  9198
1819  9198              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1820  9198              ;
1821  9198              ;	4/6/24
1822  9198              ;
1823  9198              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1824  9198              ;
1825  9198              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1826  9198              ;
1827  9198
1828  9198              Actualiza_pantalla
1829  9198
1830  9198 3E 02        	ld a,2
1831  919A D3 FE        	out ($fe),a
1832  919C
1833  919C 3A 65 8C     	ld a,(Ctrl_3)
1834  919F CB 57        	bit 2,a
1835  91A1 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1836  91A3
1837  91A3              Borrando_entidades
1838  91A3
1839  91A3 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1840  91A6 CD 1A 91     	call Extrae_address
1841  91A9 24           	inc h
1842  91AA 25           	dec h
1843  91AB 28 05        	jr z,Pintando_entidades
1844  91AD CD 1D 96     	call Pinta_Sprites
1845  91B0 18 F1        	jr Borrando_entidades
1846  91B2
1847  91B2              Pintando_entidades
1848  91B2
1849  91B2 2A 61 8C     	ld hl,(India_SP)
1850  91B5 2C           	inc l
1851  91B6 CD 1A 91     	call Extrae_address
1852  91B9 24           	inc h
1853  91BA 25           	dec h
1854  91BB 28 0E        	jr z,Ejecuta_escudo
1855  91BD 1C           	inc e
1856  91BE 1C           	inc e
1857  91BF ED 53 61 8C  	ld (India_SP),de
1858  91C3 CD 1A 91     	call Extrae_address
1859  91C6 CD 1D 96     	call Pinta_Sprites
1860  91C9 18 E7        	jr Pintando_entidades
1861  91CB
1862  91CB              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1863  91CB
1864  91CB              Ejecuta_escudo
1865  91CB
1866  91CB 3A 8F 8C     	ld a,(Shield)
1867  91CE A7           	and a
1868  91CF 20 2F        	jr nz,Aplica_Shield
1869  91D1
1870  91D1              Borrando_Amadeus
1871  91D1
1872  91D1 21 65 8C     	ld hl,Ctrl_3
1873  91D4 CB 6E        	bit 5,(hl)
1874  91D6 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1875  91D8
1876  91D8 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1877  91DB CD 1A 91     	call Extrae_address
1878  91DE 24           	inc h
1879  91DF 25           	dec h
1880  91E0 28 03        	jr z,Pintando_Amadeus
1881  91E2 CD 1D 96     	call Pinta_Sprites
1882  91E5
1883  91E5              Pintando_Amadeus
1884  91E5
1885  91E5 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1886  91E8 CD 1A 91     	call Extrae_address
1887  91EB 24           	inc h
1888  91EC 25           	dec h
1889  91ED 28 03        	jr z,1F
1890  91EF CD 1D 96     	call Pinta_Sprites
1891  91F2
1892  91F2              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1893  91F2
1894  91F2 21 65 8C     1 ld hl,Ctrl_3
1895  91F5 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1896  91F7 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1897  91F9 CB AE        	res 5,(hl)
1898  91FB
1899  91FB 3E 01        	ld a,1												; Borde azul.
1900  91FD D3 FE        	out ($fe),a
1901  91FF
1902  91FF C9           	ret
1903  9200
1904  9200              Aplica_Shield
1905  9200
1906  9200              ;	Bit 1 "1" (Shield_3) Sólo borra.
1907  9200              ;		  "0"     ""     Borra/Pinta.
1908  9200              ;	Bit 2    ""  RET.	 No borra, no pinta.
1909  9200
1910  9200 21 91 8C     	ld hl,Shield_3
1911  9203
1912  9203 CB 5E        	bit 3,(hl)
1913  9205 20 DE        	jr nz,Pintando_Amadeus
1914  9207
1915  9207 CB 56        	bit 2,(hl)
1916  9209 20 E7        	jr nz,1B
1917  920B
1918  920B CB 4E        	bit 1,(hl)
1919  920D C4 14 92     	call nz,Borra_Amadeus_shield
1920  9210
1921  9210 28 BF        	jr z,Borrando_Amadeus
1922  9212 18 DE        	jr 1B
1923  9214
1924  9214              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1925  9214
1926  9214              Borra_Amadeus_shield
1927  9214
1928  9214 3A 65 8C     	ld a,(Ctrl_3)
1929  9217 CB 6F        	bit 5,a
1930  9219 28 08        	jr z,1F
1931  921B
1932  921B 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1933  921E CD 1A 91     	call Extrae_address
1934  9221 18 06        	jr 2F
1935  9223
1936  9223 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1937  9226 CD 1A 91     	call Extrae_address
1938  9229
1939  9229 CD 1D 96     2 call Pinta_Sprites
1940  922C
1941  922C AF           	xor a
1942  922D 3C           	inc a											; Asegura NZ en la salida de la rutina.
1943  922E
1944  922E C9           	ret
1945  922F
1946  922F              Pinta_Amadeus_shield
1947  922F
1948  922F 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1949  9232 CD 1A 91     	call Extrae_address
1950  9235 CD 1D 96     	call Pinta_Sprites
1951  9238
1952  9238 AF           	xor a
1953  9239 3C           	inc a											; Asegura NZ en la salida de la rutina.
1954  923A
1955  923A C9           	ret
1956  923B
1957  923B              Borra_Pinta_Amadeus_shield
1958  923B
1959  923B CD 14 92     	call Borra_Amadeus_shield
1960  923E CD 2F 92     	call Pinta_Amadeus_shield
1961  9241 C9           	ret
1962  9242
1963  9242              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1964  9242              ;
1965  9242              ;	19/6/24
1966  9242              ;
1967  9242
1968  9242              Teclado
1969  9242
1970  9242              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1971  9242
1972  9242 3E F7        	ld a,$f7												; "5" para disparar.
1973  9244 DB FE        	in a,($fe)
1974  9246 E6 10        	and $10
1975  9248
1976  9248 CC B8 A2     	call z,Genera_disparo_Amadeus
1977  924B
1978  924B 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1979  924D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1980  924F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1981  9251 CC 8A 9D         call z,Amadeus_a_izquierda
1982  9254
1983  9254 3E F7        	ld a,$f7
1984  9256 DB FE        	in a,($fe)
1985  9258 E6 01        	and $01
1986  925A C8           	ret z
1987  925B
1988  925B 3E F7        	ld a,$f7
1989  925D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1990  925F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1991  9261 CC A2 9D     	call z,Amadeus_a_derecha
1992  9264
1993  9264 C9           	ret
1994  9265
1995  9265              ; ------------------------------------------------------------------------------------------------------------------------
1996  9265              ;
1997  9265              ;	06/07/24
1998  9265              ;
1999  9265
2000  9265              Genera_explosion
2001  9265
2002  9265 21 77 8C     	ld hl,Clock_explosion
2003  9268 35           	dec (hl)
2004  9269 28 0E        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2005  926B
2006  926B              Borra_entidad_colisionada
2007  926B
2008  926B CD 58 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2009  926E
2010  926E DD E5        	push ix
2011  9270 CD 74 90     	call Cargamos_registros_con_explosion
2012  9273 CD 29 95     	call Genera_datos_de_impresion
2013  9276 DD E1        	pop ix
2014  9278
2015  9278 C9           	ret
2016  9279
2017  9279              Siguiente_frame_explosion
2018  9279
2019  9279 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2020  927B
2021  927B              ; Avanza Frame de explosión.
2022  927B
2023  927B DD 6E 07     	ld l,(ix+7)
2024  927E DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2025  9281
2026  9281 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2027  9284
2028  9284 79           	ld a,c
2029  9285 95           	sub l
2030  9286 20 1B        	jr nz,1F
2031  9288
2032  9288              ; Fín de la entidad !!!!!!!!!!!!!
2033  9288
2034  9288 21 37 8C     	ld hl,Numero_parcial_de_entidades
2035  928B 35           	dec (hl)
2036  928C 23           	inc hl
2037  928D 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2038  928E
2039  928E              ; !! Provisional. Limpia la caja de entidades.
2040  928E
2041  928E DD E5        	push ix
2042  9290 E1           	pop hl
2043  9291
2044  9291 AF           	xor a
2045  9292 77           	ld (hl),a
2046  9293
2047  9293 5D           	ld e,l
2048  9294 54           	ld d,h
2049  9295 1C           	inc e
2050  9296
2051  9296 01 0B 00     	ld bc,11
2052  9299 ED B0        	ldir
2053  929B
2054  929B AF           	xor a
2055  929C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2056  929D
2057  929D F3           	di
2058  929E 18 FE        	jr $
2059  92A0 FB           	ei
2060  92A1
2061  92A1              ;	call Limpiamos_bandeja_DRAW
2062  92A1 18 C8        	jr Borra_entidad_colisionada
2063  92A3
2064  92A3 23           1 inc hl
2065  92A4 23           	inc hl
2066  92A5
2067  92A5 DD 75 07     	ld (ix+7),l
2068  92A8 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2069  92AB
2070  92AB 18 BE        	jr Borra_entidad_colisionada
2071  92AD
2072  92AD              ; ----- ----- ----- ----- -----
2073  92AD
2074  92AD              Genera_explosion_Amadeus
2075  92AD
2076  92AD 21 78 8C     	ld hl,Clock_explosion_Amadeus
2077  92B0 35           	dec (hl)
2078  92B1 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2079  92B3
2080  92B3              Borra_Amadeus_impactado
2081  92B3
2082  92B3 CD BD 8E     	call Change_Amadeus
2083  92B6 CD 88 90     	call Cargamos_registros_con_explosion_Amadeus
2084  92B9 CD A9 90     	call Genera_datos_de_impresion_Amadeus
2085  92BC
2086  92BC 21 65 8C     	ld hl,Ctrl_3
2087  92BF CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2088  92C1
2089  92C1 AF           	xor a
2090  92C2 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2091  92C3
2092  92C3 C9           	ret
2093  92C4
2094  92C4              Siguiente_frame_explosion_Amadeus
2095  92C4
2096  92C4 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2097  92C6
2098  92C6              ; Avanza Frame de explosión.
2099  92C6
2100  92C6 2A BE 89     	ld hl,(Pamm_Amadeus)
2101  92C9 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2102  92CC
2103  92CC 79           	ld a,c
2104  92CD 95           	sub l
2105  92CE 20 0B        	jr nz,1F
2106  92D0
2107  92D0              ; Fín de Amadeus !!!!!!!!!!!!!
2108  92D0              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2109  92D0
2110  92D0 AF           	xor a
2111  92D1 32 BB 89     	ld (Impacto_Amadeus),a
2112  92D4 21 65 8C     	ld hl,Ctrl_3
2113  92D7 CB F6        	set 6,(hl)
2114  92D9
2115  92D9 18 D8        	jr Borra_Amadeus_impactado
2116  92DB
2117  92DB 23           1 inc hl
2118  92DC 23           	inc hl
2119  92DD 22 BE 89     	ld (Pamm_Amadeus),hl
2120  92E0 18 D1        	jr Borra_Amadeus_impactado
2121  92E2
2122  92E2              ; ---------------------------------------------------------------
2123  92E2
2124  92E2              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92E2              ; ******************************************************************************************************************************************************************************************
   2+ 92E2              ;
   3+ 92E2              ;   21/04/24
   4+ 92E2              ;
   5+ 92E2              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92E2              ;   (XOR) bit a bit.
   7+ 92E2              ;
   8+ 92E2              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92E2
  10+ 92E2              Derivando_RND
  11+ 92E2
  12+ 92E2 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92E5
  14+ 92E5 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92E7 C5               push bc
  16+ 92E8              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92E8 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92EB              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92EB
  20+ 92EB A7           6 and a                                 ; Carry a "0".
  21+ 92EC CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92EE 30 02            jr nc,1F
  23+ 92F0
  24+ 92F0 CB C1            set 0,c
  25+ 92F2
  26+ 92F2 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92F3 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92F5 5F               ld e,a
  29+ 92F6
  30+ 92F6 7A               ld a,d
  31+ 92F7 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92F9 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92FB
  34+ 92FB CB 3F            srl a
  35+ 92FD
  36+ 92FD AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92FE
  38+ 92FE 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92FF 28 04            jr z,4F
  40+ 9301
  41+ 9301 CB FF            set 7,a
  42+ 9303 18 02            jr 5F
  43+ 9305
  44+ 9305 CB BF        4 res 7,a
  45+ 9307
  46+ 9307 CB 21        5 sla c
  47+ 9309 10 E0            djnz 6B
  48+ 930B
  49+ 930B 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 930C
  51+ 930C 77               ld (hl),a
  52+ 930D 23               inc hl
  53+ 930E C1               pop bc
  54+ 930F 10 D4            djnz 3B
  55+ 9311
  56+ 9311 C9               ret
  57+ 9312
  58+ 9312
  59+ 9312
# file closed: RND_Derivando.asm
2125  9312              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9312              ;---------------------------------------------------------------------------------------------------------------
   2+ 9312              ;
   3+ 9312              ;   13/11/24
   4+ 9312
   5+ 9312              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9312
   7+ 9312              Genera_movimientos_masticados_del_nivel
   8+ 9312
   9+ 9312              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9312
  11+ 9312              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9312              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9312              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9312
  15+ 9312 2D           	dec l
  16+ 9313 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9314 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9315 4E           	ld c,(hl)
  19+ 9316
  20+ 9316 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9317 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9318
  23+ 9318              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9318
  25+ 9318 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9319
  27+ 9319 CD 57 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 931C
  29+ 931C              ;	Caja Master inicializada ???
  30+ 931C
  31+ 931C 7E           	ld a,(hl)
  32+ 931D A7           	and a
  33+ 931E 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9320
  35+ 9320              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9320
  37+ 9320 C1           	pop bc
  38+ 9321 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9322 C5           	push bc
  40+ 9323
  41+ 9323 CD F7 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9326 CD 8B 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9329
  44+ 9329 3A EE 8B     	ld a,(Tipo)
  45+ 932C CD 67 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 932F
  47+ 932F              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 932F
  49+ 932F              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 932F              ;	ld a,(hl)
  51+ 932F              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 932F
  53+ 932F              ;	ld hl,Posicion_inicio
  54+ 932F              ;	ld (hl),a
  55+ 932F
  56+ 932F              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 932F              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 932F
  59+ 932F CD F4 8F     	call Construye_movimientos_masticados_entidad
  60+ 9332
  61+ 9332 2A 34 8C     	ld hl,(Puntero_indice_master)
  62+ 9335 CD 1A 91     	call Extrae_address
  63+ 9338
  64+ 9338 5D           	ld e,l
  65+ 9339 54           	ld d,h
  66+ 933A
  67+ 933A CD B8 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 933D
  69+ 933D              Movimientos_masticados_construidos
  70+ 933D
  71+ 933D C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 933E
  73+ 933E E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 933F 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9340
  76+ 9340 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9341 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9343
  79+ 9343 C9           	ret
  80+ 9344
  81+ 9344              ;---------------------------------------------------------------------------------------------------------------
  82+ 9344              ;
  83+ 9344              ;   9/11/24
  84+ 9344              ;
  85+ 9344              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9344              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9344              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9344              ;	_ de la 1ª entidad del Nivel.
  89+ 9344              ;
  90+ 9344              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9344
  92+ 9344              ;	MODIFICA: HL,DE y A.
  93+ 9344              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9344
  95+ 9344              Inicializa_1er_Nivel
  96+ 9344
  97+ 9344              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9344
  99+ 9344 21 D2 8B     	ld hl,Indice_de_niveles
 100+ 9347 CD 1A 91     	call Extrae_address
 101+ 934A ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 934E
 103+ 934E 7E           	ld a,(hl)
 104+ 934F 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9352
 106+ 9352 2C           	inc l
 107+ 9353 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9356
 109+ 9356 C9           	ret
 110+ 9357
 111+ 9357              ; ----------------------
 112+ 9357              ;
 113+ 9357              ;	13/11/24
 114+ 9357              ;
 115+ 9357
 116+ 9357              Situa_en_Caja_Master
 117+ 9357
 118+ 9357 CD 76 94         call Calcula_salto_en_BC
 119+ 935A 21 61 89         ld hl,Indice_de_cajas_master
 120+ 935D A7               and a
 121+ 935E ED 4A            adc hl,bc
 122+ 9360 22 34 8C       	ld (Puntero_indice_master),hl
 123+ 9363 CD 1A 91     	call Extrae_address
 124+ 9366 C9           	ret
 125+ 9367
 126+ 9367              ; ----------------------
 127+ 9367
 128+ 9367              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9367              ; 	ld bc,4
 130+ 9367              ; 	ldir
 131+ 9367              ; 	ret
 132+ 9367
 133+ 9367 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9368 CD 76 94         call Calcula_salto_en_BC
 135+ 936B 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 936E A7               and a
 137+ 936F ED 4A            adc hl,bc
 138+ 9371 CD 1A 91         call Extrae_address
 139+ 9374 22 1F 8C         ld (Puntero_indice_mov),hl
 140+ 9377 C9               ret
 141+ 9378
 142+ 9378              ;---------------------------------------------------------------------------------------------------------------
 143+ 9378              ;
 144+ 9378              ;   13/11/24
 145+ 9378              ;
 146+ 9378              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9378
 148+ 9378
 149+ 9378              Prepara_Cajas_de_Entidades
 150+ 9378
 151+ 9378              ; Preparamos los punteros de las cajas de entidades:
 152+ 9378
 153+ 9378 CD 04 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 937B              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 937B CD C1 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 937E
 157+ 937E 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 9381
 159+ 9381              ; En este punto:
 160+ 9381              ;
 161+ 9381              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 9381              ; B contiene (Numero_parcial_de_entidades).
 163+ 9381
 164+ 9381 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 9382
 166+ 9382 7E           	ld a,(hl)
 167+ 9383
 168+ 9383 CD 57 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9386
 170+ 9386 ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 938A
 172+ 938A D5           	push de
 173+ 938B DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 938D
 175+ 938D 01 0C 00     	ld bc,12
 176+ 9390 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 9392              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 9392
 179+ 9392              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 9392              ;
 181+ 9392              ;
 182+ 9392              ; ------------------------------------------------------ IX
 183+ 9392              ; ------------------------------------------------------ IX
 184+ 9392              ; ------------------------------------------------------ IX
 185+ 9392              ; ------------------------------------------------------ IX
 186+ 9392
 187+ 9392 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 9394
 189+ 9394 CD 48 90     	call Obtenemos_puntero_de_impresion
 190+ 9397
 191+ 9397 DD 6E 05     	ld l,(ix+5)
 192+ 939A 2C           	inc l
 193+ 939B DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 939E
 195+ 939E D5           	push de														; Push (Puntero_objeto).
 196+ 939F E5           	push hl														; Push (Puntero_de_impresion).
 197+ 93A0
 198+ 93A0 CD FD 94     	call Genera_coordenadas
 199+ 93A3
 200+ 93A3 ED 4B EF 8B  	ld bc,(Coordenada_X)
 201+ 93A7
 202+ 93A7 DD 71 01     	ld (ix+1),c
 203+ 93AA DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 93AD
 205+ 93AD CD 58 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 93B0
 207+ 93B0 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 93B2 D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 93B3
 210+ 93B3 CD 29 95     	call Genera_datos_de_impresion
 211+ 93B6
 212+ 93B6 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 93B8
 214+ 93B8              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 93B8
 216+ 93B8 CD 2F 94     	call Decrementa_Contador_de_mov_masticados
 217+ 93BB CD 0C 94     	call Limpiamos_bandeja_DRAW									;! Cuando el juego funcione, probar a eliminar esta línea!!!!!!!!!!!
 218+ 93BE CD 68 91     	call Incrementa_punteros_de_cajas
 219+ 93C1
 220+ 93C1              ; Siguiente entidad del Nivel.
 221+ 93C1
 222+ 93C1 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 93C4 23           	inc hl 														; _ entidad del Nivel.
 224+ 93C5
 225+ 93C5 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 93C6
 227+ 93C6 10 B9        	djnz 1B
 228+ 93C8
 229+ 93C8 C9           	ret
 230+ 93C9
 231+ 93C9              ; -------------------------------------------------------------------------------------------------------------------
 232+ 93C9              ;
 233+ 93C9              ;	27/5/24
 234+ 93C9              ;
 235+ 93C9              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 93C9              ;
 237+ 93C9
 238+ 93C9              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 93C9              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 93C9
 241+ 93C9 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 93CC CD 8B 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 93CF
 244+ 93CF
 245+ 93CF              Construye_movimientos_masticados_Amadeus
 246+ 93CF
 247+ 93CF 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 93D2 CD 3B 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 93D5              ;															; _ el (Contador_de_mov_masticados).
 250+ 93D5 CD 20 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 93D8              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 93D8
 253+ 93D8              ; Generamos movimientos masticados de Amadeus.
 254+ 93D8
 255+ 93D8 06 79        	ld b,121												; $0079, 121d.
 256+ 93DA
 257+ 93DA C5           1 push bc
 258+ 93DB CD 40 97     	call Draw
 259+ 93DE CD 20 90     	call Guarda_movimiento_masticado
 260+ 93E1
 261+ 93E1 CD B4 9A     	call Mov_right
 262+ 93E4 CD B4 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 93E7
 264+ 93E7 C1           	pop bc
 265+ 93E8 10 F0        	djnz 1B
 266+ 93EA
 267+ 93EA              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 93EA
 269+ 93EA              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 93EA              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 93EA
 272+ 93EA 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 93ED 01 08 00     	ld bc,8
 274+ 93F0 A7           	and a
 275+ 93F1 ED 42        	sbc hl,bc
 276+ 93F3 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 93F6
 278+ 93F6 C9           	ret
 279+ 93F7
 280+ 93F7              ; ---------------------------------------------------------------------
 281+ 93F7              ;
 282+ 93F7              ;	10/02/24
 283+ 93F7              ;
 284+ 93F7              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 93F7              ;
 286+ 93F7              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 93F7
 288+ 93F7              Definicion_segun_tipo
 289+ 93F7
 290+ 93F7 CD 76 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 93FA 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 93FD CD 81 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 9400 C9           	ret
 294+ 9401
 295+ 9401              ; ---------------------------------------------------------------------
 296+ 9401              ;
 297+ 9401              ;	6/7/24
 298+ 9401
 299+ 9401
 300+ 9401              Store_Restore_cajas
 301+ 9401
 302+ 9401 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 303+ 9405 CD B8 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 9408 CD 68 91     	call Incrementa_punteros_de_cajas
 305+ 940B C9           	ret
 306+ 940C
 307+ 940C              ; ---------------------------------------------------------------------
 308+ 940C              ;
 309+ 940C              ;	23/6/24
 310+ 940C              ;
 311+ 940C              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 940C              ;
 313+ 940C              ;	MODIFY: HL
 314+ 940C
 315+ 940C              Limpiamos_bandeja_DRAW
 316+ 940C
 317+ 940C ED 73 3D 8C  	ld (Stack),sp
 318+ 9410 31 13 8C     	ld sp,Vel_left
 319+ 9413
 320+ 9413 AF           	xor a
 321+ 9414 67           	ld h,a
 322+ 9415 6F           	ld l,a
 323+ 9416
 324+ 9416 E5           	push hl
 325+ 9417 E5           	push hl
 326+ 9418 E5           	push hl
 327+ 9419 E5           	push hl
 328+ 941A E5           	push hl
 329+ 941B E5           	push hl
 330+ 941C E5           	push hl
 331+ 941D E5           	push hl
 332+ 941E E5           	push hl
 333+ 941F E5           	push hl
 334+ 9420 E5           	push hl
 335+ 9421 E5           	push hl
 336+ 9422 E5           	push hl
 337+ 9423 E5           	push hl
 338+ 9424 E5           	push hl
 339+ 9425 E5           	push hl
 340+ 9426 E5           	push hl
 341+ 9427 E5           	push hl
 342+ 9428
 343+ 9428 33           	inc sp
 344+ 9429
 345+ 9429 E5           	push hl
 346+ 942A ED 7B 3D 8C  	ld sp,(Stack)
 347+ 942E
 348+ 942E C9           	ret
 349+ 942F
 350+ 942F              ; ---------------------------------------------------------------------
 351+ 942F              ;
 352+ 942F              ;	23/11/24
 353+ 942F              ;
 354+ 942F              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 942F
 356+ 942F              Decrementa_Contador_de_mov_masticados
 357+ 942F
 358+ 942F DD 6E 09     	ld l,(ix+9)
 359+ 9432 DD 66 0A     	ld h,(ix+10)
 360+ 9435
 361+ 9435 2B           	dec hl
 362+ 9436
 363+ 9436 DD 75 09     	ld (ix+9),l
 364+ 9439 DD 74 0A     	ld (ix+10),h
 365+ 943C
 366+ 943C C9           	ret
 367+ 943D
 368+ 943D              ; ---------------------------------------------------------------------
 369+ 943D              ;
 370+ 943D              ;	24/11/24
 371+ 943D
 372+ 943D              Reinicia_entidad_maliciosa
 373+ 943D
 374+ 943D              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 943D
 376+ 943D CD 21 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 9440 CD 2E 9F     	call Transfiere_datos_de_contadores
 378+ 9443
 379+ 9443              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 9443
 381+ 9443 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 9446 CD F7 93     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 9449
 384+ 9449 7D           	ld a,l
 385+ 944A C6 0B        	add 11
 386+ 944C 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 944D
 388+ 944D CD 1A 91     	call Extrae_address
 389+ 9450
 390+ 9450 DD 75 07     	ld (ix+7),l
 391+ 9453 DD 74 08     	ld (ix+8),h
 392+ 9456
 393+ 9456 CD 48 90     	call Obtenemos_puntero_de_impresion
 394+ 9459
 395+ 9459              ; Incrementa (Contador_de_vueltas)x2.
 396+ 9459              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 9459
 398+ 9459              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 9459              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 9459              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 9459              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 9459              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 9459
 404+ 9459 DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 945D
 406+ 945D DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 9460 CB 2F        	sra a
 408+ 9462 CB 2F        	sra a
 409+ 9464
 410+ 9464 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 9467
 412+ 9467 3E 40        	ld a,$40
 413+ 9469 DD BE 03     	cp (ix+3)
 414+ 946C C0           	ret nz
 415+ 946D
 416+ 946D              ; Límitador.
 417+ 946D
 418+ 946D              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 946D
 420+ 946D DD CB 03 2E  	sra (ix+3)
 421+ 9471 DD CB 0B 2E  	sra (ix+11)
 422+ 9475
 423+ 9475 C9           	ret
 424+ 9476
 425+ 9476              ;	------------------------------------------------------------------------------------
 426+ 9476              ;
 427+ 9476              ;	09/11/24
 428+ 9476              ;
 429+ 9476              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 9476              ;
 431+ 9476              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 9476              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 9476
 434+ 9476 A7           Calcula_salto_en_BC and a
 435+ 9477 28 04        	jr z,1F
 436+ 9479 CB 27        	sla a
 437+ 947B D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 947D 4F           1 ld c,a
 439+ 947E 06 00        	ld b,0
 440+ 9480 C9           	ret
 441+ 9481
 442+ 9481              ; ------------------------------------------------------------------
 443+ 9481              ;
 444+ 9481              ;	19/1/24
 445+ 9481              ;
 446+ 9481              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 9481              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 9481
 449+ 9481 A7           Situa_en_datos_de_definicion and a
 450+ 9482 ED 4A        	adc hl,bc
 451+ 9484 CD 1A 91     	call Extrae_address
 452+ 9487 22 3B 8C         ld (Datos_de_entidad),hl
 453+ 948A C9           	ret
 454+ 948B
 455+ 948B              ; ------------------------------------------------------------------
 456+ 948B
 457+ 948B              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 458+ 948B              ; 	inc de
 459+ 948B              ; 	inc de
 460+ 948B              ; 	ex de,hl
 461+ 948B              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 462+ 948B              ; 	ret
 463+ 948B
 464+ 948B              ; ----------------------------------------------------------------------------------------------------------
 465+ 948B              ;
 466+ 948B              ;	24/6/24
 467+ 948B              ;
 468+ 948B              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 469+ 948B              ;	_ de entidad.
 470+ 948B              ;
 471+ 948B              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 472+ 948B              ;
 473+ 948B              ;
 474+ 948B              ;	MODIFICA: HL,DE y BC
 475+ 948B
 476+ 948B
 477+ 948B              Definicion_de_entidad_a_bandeja_DRAW
 478+ 948B
 479+ 948B 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 480+ 948E 7E           	ld a,(hl) 									; Volcamos Tipo.
 481+ 948F 12           	ld (de),a
 482+ 9490 23           	inc hl
 483+ 9491              ;
 484+ 9491 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 485+ 9494 01 02 00     	ld bc,2
 486+ 9497 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 487+ 9499              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 488+ 9499 11 F1 8B     	ld de,Contador_de_vueltas
 489+ 949C 7E           	ld a,(hl)
 490+ 949D 12           	ld (de),a
 491+ 949E 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 492+ 949F
 493+ 949F 11 03 8C     	ld de,Indice_Sprite_der
 494+ 94A2 01 04 00     	ld bc,4
 495+ 94A5 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 496+ 94A7
 497+ 94A7 11 0B 8C     	ld de,Posicion_inicio
 498+ 94AA 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 499+ 94AD ED B0        	ldir 									; Vuelco (Frames_explosion).
 500+ 94AF
 501+ 94AF 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 502+ 94B2 01 02 00     	ld bc,2
 503+ 94B5 ED B0        	ldir
 504+ 94B7
 505+ 94B7 C9           	ret
 506+ 94B8
 507+ 94B8              ; ----------------------------------------------------------------------------------------------------------
 508+ 94B8              ;
 509+ 94B8              ;	1/8/24
 510+ 94B8              ;
 511+ 94B8
 512+ 94B8              Parametros_de_bandeja_DRAW_a_caja
 513+ 94B8
 514+ 94B8 21 EE 8B     	ld hl,Bandeja_DRAW
 515+ 94BB 01 0C 00     	ld bc,12
 516+ 94BE ED B0        	ldir
 517+ 94C0 C9           	ret
 518+ 94C1
 519+ 94C1              ;---------------------------------------------------------------------------------------------------------------
 520+ 94C1              ;
 521+ 94C1              ;	13/11/24
 522+ 94C1              ;
 523+ 94C1              ;	INICIALIZA (Numero_parcial_de_entidades).
 524+ 94C1              ;
 525+ 94C1              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 526+ 94C1              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 527+ 94C1
 528+ 94C1              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 529+ 94C1              ;			- Actualiza (Numero_de_entidades).
 530+ 94C1
 531+ 94C1              ;	MODIFICA: A y B.
 532+ 94C1
 533+ 94C1
 534+ 94C1              Inicializa_Numero_parcial_de_entidades
 535+ 94C1
 536+ 94C1 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 537+ 94C4 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 538+ 94C6 38 0E        	jr c,1F
 539+ 94C8 28 0C        	jr z,1F
 540+ 94CA
 541+ 94CA              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 542+ 94CA              ; Actualizamos variables.
 543+ 94CA
 544+ 94CA D6 06        	sub 6
 545+ 94CC 32 36 8C     	ld (Numero_de_entidades),a
 546+ 94CF 3E 06        	ld a,6
 547+ 94D1 32 37 8C     	ld (Numero_parcial_de_entidades),a
 548+ 94D4 47           	ld b,a
 549+ 94D5 C9           	ret
 550+ 94D6
 551+ 94D6              ; El nº total de entidades no supera el nº de cajas de entidades.
 552+ 94D6              ; (Numero_de_entidades)="0".
 553+ 94D6
 554+ 94D6 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 555+ 94D9 47           	ld b,a
 556+ 94DA AF           	xor a
 557+ 94DB 32 36 8C     	ld (Numero_de_entidades),a
 558+ 94DE C9           	ret
 559+ 94DF
# file closed: Rutinas_de_inicio_y_niveles.asm
2126  94DF              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94DF              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94DF              ;
   3+ 94DF              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94DF              ;
   5+ 94DF              ; *****************************************************************************************************************************************************************************************
   6+ 94DF              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94DF
   8+ 94DF 7C           calcula_tercio ld a,h
   9+ 94E0 E6 18        	and $18
  10+ 94E2 CB 2F        	sra a
  11+ 94E4 CB 2F        	sra a
  12+ 94E6 CB 2F        	sra a
  13+ 94E8 C9           	ret
  14+ 94E9
# file closed: calcula_tercio.asm
2127  94E9              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94E9              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94E9              ;
   3+ 94E9              ;
   4+ 94E9              ;	CLS.
   5+ 94E9              ;
   6+ 94E9              ;	Limpia la pantalla y define sus atributos.
   7+ 94E9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94E9              ;
   9+ 94E9              ;	COLORES: 0 ..... NEGRO
  10+ 94E9              ;    		 1 ..... AZUL
  11+ 94E9              ; 			 2 ..... ROJO
  12+ 94E9              ;			 3 ..... MAGENTA
  13+ 94E9              ; 			 4 ..... VERDE
  14+ 94E9              ; 			 5 ..... CIAN
  15+ 94E9              ;			 6 ..... AMARILLO
  16+ 94E9              ; 			 7 ..... BLANCO
  17+ 94E9              ;
  18+ 94E9              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94E9              ;
  20+ 94E9              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94E9
  22+ 94E9
  23+ 94E9 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94EC 11 01 40     	LD DE,$4001
  25+ 94EF 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94F2 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94F4 ED B0        	LDIR
  28+ 94F6 01 FF 02     	LD BC,767
  29+ 94F9 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94FA ED B0        	LDIR
  31+ 94FC C9           	ret
  32+ 94FD
# file closed: Cls.asm
2128  94FD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94FD              ; ------------------------------------------------------------------------
   2+ 94FD              ;
   3+ 94FD              ;	30/1/24
   4+ 94FD              ;
   5+ 94FD              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94FD              ;	Fila superior "0", Columna izquierda "0".
   7+ 94FD              ;
   8+ 94FD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94FD              ;
  10+ 94FD              ;	Modifica: A,BC y DE.
  11+ 94FD
  12+ 94FD              Genera_coordenadas
  13+ 94FD
  14+ 94FD 7D           	ld a,l
  15+ 94FE E6 1F        	and $1f
  16+ 9500
  17+ 9500 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9503
  19+ 9503 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9504 FE 40        	cp $40
  21+ 9506 38 1C        	jr c,4F
  22+ 9508
  23+ 9508 CD DF 94     	call calcula_tercio
  24+ 950B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 950C
  26+ 950C 1E 00        	ld e,0
  27+ 950E 7D           	ld a,l
  28+ 950F E6 E0        	and $e0
  29+ 9511 28 01        	jr z,1F
  30+ 9513 04           	inc b
  31+ 9514
  32+ 9514 04           1 inc b
  33+ 9515 05           	dec b
  34+ 9516 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9518              ;														; _ , salimos.
  36+ 9518 1C           3 inc e
  37+ 9519 D6 20        	sub 32
  38+ 951B 20 FB        	jr nz,3B
  39+ 951D 10 F5        	djnz 1B
  40+ 951F
  41+ 951F 7B           2 ld a,e
  42+ 9520 32 F0 8B     	ld (Coordenada_y),a
  43+ 9523 C9           	ret
  44+ 9524
  45+ 9524 AF           4 xor a
  46+ 9525 32 F0 8B     	ld (Coordenada_y),a
  47+ 9528 C9           	ret
  48+ 9529
# file closed: Genera_coordenadas.asm
2129  9529              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9529              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9529              ;
   3+ 9529              ;	20/09/24
   4+ 9529              ;
   5+ 9529              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9529              ;   DE contiene Puntero_objeto.
   7+ 9529              ;   IX contiene el Puntero de impresión.
   8+ 9529
   9+ 9529              Genera_datos_de_impresion
  10+ 9529
  11+ 9529 ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 952D
  13+ 952D 2A 5F 8C         ld hl,(Scanlines_album_SP)
  14+ 9530
  15+ 9530 3E 05            ld a,5
  16+ 9532 85               add l
  17+ 9533 6F               ld l,a
  18+ 9534
  19+ 9534 F9               ld sp,hl
  20+ 9535 22 5F 8C         ld (Scanlines_album_SP),hl
  21+ 9538
  22+ 9538 21 00 00         ld hl,0
  23+ 953B
  24+ 953B DD E5            push ix
  25+ 953D 3B               dec sp
  26+ 953E ED 7A            adc hl,sp
  27+ 9540 D5               push de
  28+ 9541
  29+ 9541              ; Recuperamos SP.
  30+ 9541
  31+ 9541 ED 7B 3D 8C      ld sp,(Stack)
  32+ 9545
  33+ 9545 E5               push hl
  34+ 9546 F1               pop af
  35+ 9547 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9548
  37+ 9548              ; Tenemos el encabezado listo.
  38+ 9548              ; Preparamos registros para generar los scanlines.
  39+ 9548
  40+ 9548 DD E5            push ix
  41+ 954A E1               pop hl                                          ; 1er scanline en HL.
  42+ 954B
  43+ 954B ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  44+ 954F
  45+ 954F              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 954F              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 954F
  48+ 954F 7C               ld a,h
  49+ 9550 FE 50            cp $50
  50+ 9552 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9554
  52+ 9554 20 05            jr nz,2F
  53+ 9556
  54+ 9556 7D               ld a,l
  55+ 9557 FE E0            cp $e0
  56+ 9559 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 955B
  58+ 955B 7D           2 ld a,l
  59+ 955C FE C0            cp $c0
  60+ 955E D2 F4 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 9561
  62+ 9561              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 9561
  64+ 9561 CD F2 99         call NextScan
  65+ 9564 EB               ex de,hl
  66+ 9565
  67+ 9565 73               ld (hl),e
  68+ 9566 23               inc hl
  69+ 9567 72               ld (hl),d
  70+ 9568 23               inc hl
  71+ 9569
  72+ 9569 EB               ex de,hl
  73+ 956A
  74+ 956A CD F2 99         call NextScan
  75+ 956D EB               ex de,hl
  76+ 956E
  77+ 956E 73               ld (hl),e
  78+ 956F 23               inc hl
  79+ 9570 72               ld (hl),d
  80+ 9571 23               inc hl
  81+ 9572
  82+ 9572 EB               ex de,hl
  83+ 9573
  84+ 9573 CD F2 99         call NextScan
  85+ 9576 EB               ex de,hl
  86+ 9577
  87+ 9577 73               ld (hl),e
  88+ 9578 23               inc hl
  89+ 9579 72               ld (hl),d
  90+ 957A 23               inc hl
  91+ 957B
  92+ 957B EB               ex de,hl
  93+ 957C
  94+ 957C CD F2 99         call NextScan
  95+ 957F EB               ex de,hl
  96+ 9580
  97+ 9580 73               ld (hl),e
  98+ 9581 23               inc hl
  99+ 9582 72               ld (hl),d
 100+ 9583 23               inc hl
 101+ 9584
 102+ 9584 EB               ex de,hl
 103+ 9585
 104+ 9585 CD F2 99         call NextScan
 105+ 9588 EB               ex de,hl
 106+ 9589
 107+ 9589 73               ld (hl),e
 108+ 958A 23               inc hl
 109+ 958B 72               ld (hl),d
 110+ 958C 23               inc hl
 111+ 958D
 112+ 958D EB               ex de,hl
 113+ 958E
 114+ 958E CD F2 99         call NextScan
 115+ 9591 EB               ex de,hl
 116+ 9592
 117+ 9592 73               ld (hl),e
 118+ 9593 23               inc hl
 119+ 9594 72               ld (hl),d
 120+ 9595 23               inc hl
 121+ 9596
 122+ 9596 EB               ex de,hl
 123+ 9597
 124+ 9597 CD F2 99         call NextScan
 125+ 959A EB               ex de,hl
 126+ 959B
 127+ 959B 73               ld (hl),e
 128+ 959C 23               inc hl
 129+ 959D 72               ld (hl),d
 130+ 959E 23               inc hl
 131+ 959F
 132+ 959F EB               ex de,hl
 133+ 95A0
 134+ 95A0 CD F2 99         call NextScan
 135+ 95A3 EB               ex de,hl
 136+ 95A4
 137+ 95A4 73               ld (hl),e
 138+ 95A5 23               inc hl
 139+ 95A6 72               ld (hl),d
 140+ 95A7 23               inc hl
 141+ 95A8
 142+ 95A8 EB               ex de,hl
 143+ 95A9
 144+ 95A9 CD F2 99         call NextScan
 145+ 95AC EB               ex de,hl
 146+ 95AD
 147+ 95AD 73               ld (hl),e
 148+ 95AE 23               inc hl
 149+ 95AF 72               ld (hl),d
 150+ 95B0 23               inc hl
 151+ 95B1
 152+ 95B1 EB               ex de,hl
 153+ 95B2
 154+ 95B2 CD F2 99         call NextScan
 155+ 95B5 EB               ex de,hl
 156+ 95B6
 157+ 95B6 73               ld (hl),e
 158+ 95B7 23               inc hl
 159+ 95B8 72               ld (hl),d
 160+ 95B9 23               inc hl
 161+ 95BA
 162+ 95BA EB               ex de,hl
 163+ 95BB
 164+ 95BB CD F2 99         call NextScan
 165+ 95BE EB               ex de,hl
 166+ 95BF
 167+ 95BF 73               ld (hl),e
 168+ 95C0 23               inc hl
 169+ 95C1 72               ld (hl),d
 170+ 95C2 23               inc hl
 171+ 95C3
 172+ 95C3 EB               ex de,hl
 173+ 95C4
 174+ 95C4 CD F2 99         call NextScan
 175+ 95C7 EB               ex de,hl
 176+ 95C8
 177+ 95C8 73               ld (hl),e
 178+ 95C9 23               inc hl
 179+ 95CA 72               ld (hl),d
 180+ 95CB 23               inc hl
 181+ 95CC
 182+ 95CC EB               ex de,hl
 183+ 95CD
 184+ 95CD CD F2 99         call NextScan
 185+ 95D0 EB               ex de,hl
 186+ 95D1
 187+ 95D1 73               ld (hl),e
 188+ 95D2 23               inc hl
 189+ 95D3 72               ld (hl),d
 190+ 95D4 23               inc hl
 191+ 95D5
 192+ 95D5 EB               ex de,hl
 193+ 95D6
 194+ 95D6 CD F2 99         call NextScan
 195+ 95D9 EB               ex de,hl
 196+ 95DA
 197+ 95DA 73               ld (hl),e
 198+ 95DB 23               inc hl
 199+ 95DC 72               ld (hl),d
 200+ 95DD 23               inc hl
 201+ 95DE
 202+ 95DE EB               ex de,hl
 203+ 95DF
 204+ 95DF CD F2 99         call NextScan
 205+ 95E2 EB               ex de,hl
 206+ 95E3
 207+ 95E3              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 95E3              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 95E3              ;   _ generar sus scanlines.
 210+ 95E3
 211+ 95E3              ;    ld (Puntero_de_impresion_disparo),de
 212+ 95E3
 213+ 95E3 73               ld (hl),e
 214+ 95E4 23               inc hl
 215+ 95E5 72               ld (hl),d
 216+ 95E6 23               inc hl
 217+ 95E7
 218+ 95E7              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 95E7
 220+ 95E7 22 5F 8C         ld (Scanlines_album_SP),hl
 221+ 95EA
 222+ 95EA EB               ex de,hl
 223+ 95EB
 224+ 95EB              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 95EB
 226+ 95EB              ;    call NextScan
 227+ 95EB              ;    call NextScan
 228+ 95EB
 229+ 95EB 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 95EE
 231+ 95EE              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 95EE
 233+ 95EE 08               ex af,af
 234+ 95EF
 235+ 95EF F5               push af
 236+ 95F0 E1               pop hl
 237+ 95F1
 238+ 95F1 36 10            ld (hl),16
 239+ 95F3
 240+ 95F3 C9               ret
 241+ 95F4
 242+ 95F4              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 95F4
 244+ 95F4              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 95F4
 246+ 95F4 3E 57            ld a,$57
 247+ 95F6 94               sub h
 248+ 95F7 47               ld b,a
 249+ 95F8
 250+ 95F8 3E DF            ld a,$df
 251+ 95FA BD               cp l
 252+ 95FB 38 04            jr c,1F
 253+ 95FD
 254+ 95FD 3E 08            ld a,8
 255+ 95FF 80               add b
 256+ 9600 47               ld b,a
 257+ 9601
 258+ 9601              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 9601              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 9601
 261+ 9601 48           1 ld c,b
 262+ 9602 0C               inc c
 263+ 9603
 264+ 9603 04               inc b
 265+ 9604 05               dec b
 266+ 9605 20 02            jr nz,3F
 267+ 9607
 268+ 9607 18 0B            jr 6F
 269+ 9609
 270+ 9609 CD F2 99     3 call NextScan
 271+ 960C EB               ex de,hl
 272+ 960D
 273+ 960D 73               ld (hl),e
 274+ 960E 23               inc hl
 275+ 960F 72               ld (hl),d
 276+ 9610 23               inc hl
 277+ 9611
 278+ 9611 EB               ex de,hl
 279+ 9612 10 F5            djnz 3B
 280+ 9614
 281+ 9614 ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 282+ 9618
 283+ 9618 08           5 ex af,af
 284+ 9619 F5               push af
 285+ 961A E1               pop hl
 286+ 961B
 287+ 961B 71               ld (hl),c
 288+ 961C
 289+ 961C C9               ret
 290+ 961D
# file closed: Genera_datos_de_impresion.asm
2130  961D              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 961D              ; -----------------------------------------------------------------------------
   2+ 961D              ;
   3+ 961D              ;   11/03/24
   4+ 961D              ;
   5+ 961D
   6+ 961D              Pinta_Sprites
   7+ 961D
   8+ 961D              ;    ld hl,(Scanlines_album_SP)
   9+ 961D              ;    call Extrae_address
  10+ 961D
  11+ 961D              ;    inc h
  12+ 961D              ;    dec h
  13+ 961D              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 961D
  15+ 961D ED 73 3D 8C      ld (Stack),sp
  16+ 9621
  17+ 9621 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9622              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9622 2C               inc l
  20+ 9623 2C               inc l
  21+ 9624
  22+ 9624 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9625
  24+ 9625 2C               inc l
  25+ 9626 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9627
  27+ 9627              ;   Seleccionamos rutina de impresión:
  28+ 9627
  29+ 9627 3E 10            ld a,16
  30+ 9629 B8               cp b
  31+ 962A C2 26 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 962D
  33+ 962D              ;   Rutinas:
  34+ 962D
  35+ 962D              Pinta_rapido    ;   1520 t/states.
  36+ 962D
  37+ 962D E1               pop hl
  38+ 962E
  39+ 962E 1A               ld a,(de)
  40+ 962F AE               xor (hl)
  41+ 9630 77               ld (hl),a
  42+ 9631 2C               inc l
  43+ 9632 1C               inc e
  44+ 9633 1A               ld a,(de)
  45+ 9634 AE               xor (hl)
  46+ 9635 77               ld (hl),a
  47+ 9636 2C               inc l
  48+ 9637 1C               inc e
  49+ 9638 1A               ld a,(de)
  50+ 9639 AE               xor (hl)
  51+ 963A 77               ld (hl),a
  52+ 963B 13               inc de
  53+ 963C
  54+ 963C E1               pop hl
  55+ 963D
  56+ 963D 1A               ld a,(de)
  57+ 963E AE               xor (hl)
  58+ 963F 77               ld (hl),a
  59+ 9640 2C               inc l
  60+ 9641 1C               inc e
  61+ 9642 1A               ld a,(de)
  62+ 9643 AE               xor (hl)
  63+ 9644 77               ld (hl),a
  64+ 9645 2C               inc l
  65+ 9646 1C               inc e
  66+ 9647 1A               ld a,(de)
  67+ 9648 AE               xor (hl)
  68+ 9649 77               ld (hl),a
  69+ 964A 13               inc de
  70+ 964B
  71+ 964B E1               pop hl
  72+ 964C
  73+ 964C 1A               ld a,(de)
  74+ 964D AE               xor (hl)
  75+ 964E 77               ld (hl),a
  76+ 964F 2C               inc l
  77+ 9650 1C               inc e
  78+ 9651 1A               ld a,(de)
  79+ 9652 AE               xor (hl)
  80+ 9653 77               ld (hl),a
  81+ 9654 2C               inc l
  82+ 9655 1C               inc e
  83+ 9656 1A               ld a,(de)
  84+ 9657 AE               xor (hl)
  85+ 9658 77               ld (hl),a
  86+ 9659 13               inc de
  87+ 965A
  88+ 965A E1               pop hl
  89+ 965B
  90+ 965B 1A               ld a,(de)
  91+ 965C AE               xor (hl)
  92+ 965D 77               ld (hl),a
  93+ 965E 2C               inc l
  94+ 965F 1C               inc e
  95+ 9660 1A               ld a,(de)
  96+ 9661 AE               xor (hl)
  97+ 9662 77               ld (hl),a
  98+ 9663 2C               inc l
  99+ 9664 1C               inc e
 100+ 9665 1A               ld a,(de)
 101+ 9666 AE               xor (hl)
 102+ 9667 77               ld (hl),a
 103+ 9668 13               inc de
 104+ 9669
 105+ 9669 E1               pop hl
 106+ 966A
 107+ 966A 1A               ld a,(de)
 108+ 966B AE               xor (hl)
 109+ 966C 77               ld (hl),a
 110+ 966D 2C               inc l
 111+ 966E 1C               inc e
 112+ 966F 1A               ld a,(de)
 113+ 9670 AE               xor (hl)
 114+ 9671 77               ld (hl),a
 115+ 9672 2C               inc l
 116+ 9673 1C               inc e
 117+ 9674 1A               ld a,(de)
 118+ 9675 AE               xor (hl)
 119+ 9676 77               ld (hl),a
 120+ 9677 13               inc de
 121+ 9678
 122+ 9678 E1               pop hl
 123+ 9679
 124+ 9679 1A               ld a,(de)
 125+ 967A AE               xor (hl)
 126+ 967B 77               ld (hl),a
 127+ 967C 2C               inc l
 128+ 967D 1C               inc e
 129+ 967E 1A               ld a,(de)
 130+ 967F AE               xor (hl)
 131+ 9680 77               ld (hl),a
 132+ 9681 2C               inc l
 133+ 9682 1C               inc e
 134+ 9683 1A               ld a,(de)
 135+ 9684 AE               xor (hl)
 136+ 9685 77               ld (hl),a
 137+ 9686 13               inc de
 138+ 9687
 139+ 9687 E1               pop hl
 140+ 9688
 141+ 9688 1A               ld a,(de)
 142+ 9689 AE               xor (hl)
 143+ 968A 77               ld (hl),a
 144+ 968B 2C               inc l
 145+ 968C 1C               inc e
 146+ 968D 1A               ld a,(de)
 147+ 968E AE               xor (hl)
 148+ 968F 77               ld (hl),a
 149+ 9690 2C               inc l
 150+ 9691 1C               inc e
 151+ 9692 1A               ld a,(de)
 152+ 9693 AE               xor (hl)
 153+ 9694 77               ld (hl),a
 154+ 9695 13               inc de
 155+ 9696
 156+ 9696 E1               pop hl
 157+ 9697
 158+ 9697 1A               ld a,(de)
 159+ 9698 AE               xor (hl)
 160+ 9699 77               ld (hl),a
 161+ 969A 2C               inc l
 162+ 969B 1C               inc e
 163+ 969C 1A               ld a,(de)
 164+ 969D AE               xor (hl)
 165+ 969E 77               ld (hl),a
 166+ 969F 2C               inc l
 167+ 96A0 1C               inc e
 168+ 96A1 1A               ld a,(de)
 169+ 96A2 AE               xor (hl)
 170+ 96A3 77               ld (hl),a
 171+ 96A4 13               inc de
 172+ 96A5
 173+ 96A5 E1               pop hl
 174+ 96A6
 175+ 96A6 1A               ld a,(de)
 176+ 96A7 AE               xor (hl)
 177+ 96A8 77               ld (hl),a
 178+ 96A9 2C               inc l
 179+ 96AA 1C               inc e
 180+ 96AB 1A               ld a,(de)
 181+ 96AC AE               xor (hl)
 182+ 96AD 77               ld (hl),a
 183+ 96AE 2C               inc l
 184+ 96AF 1C               inc e
 185+ 96B0 1A               ld a,(de)
 186+ 96B1 AE               xor (hl)
 187+ 96B2 77               ld (hl),a
 188+ 96B3 13               inc de
 189+ 96B4
 190+ 96B4 E1               pop hl
 191+ 96B5
 192+ 96B5 1A               ld a,(de)
 193+ 96B6 AE               xor (hl)
 194+ 96B7 77               ld (hl),a
 195+ 96B8 2C               inc l
 196+ 96B9 1C               inc e
 197+ 96BA 1A               ld a,(de)
 198+ 96BB AE               xor (hl)
 199+ 96BC 77               ld (hl),a
 200+ 96BD 2C               inc l
 201+ 96BE 1C               inc e
 202+ 96BF 1A               ld a,(de)
 203+ 96C0 AE               xor (hl)
 204+ 96C1 77               ld (hl),a
 205+ 96C2 13               inc de
 206+ 96C3
 207+ 96C3 E1               pop hl
 208+ 96C4
 209+ 96C4 1A               ld a,(de)
 210+ 96C5 AE               xor (hl)
 211+ 96C6 77               ld (hl),a
 212+ 96C7 2C               inc l
 213+ 96C8 1C               inc e
 214+ 96C9 1A               ld a,(de)
 215+ 96CA AE               xor (hl)
 216+ 96CB 77               ld (hl),a
 217+ 96CC 2C               inc l
 218+ 96CD 1C               inc e
 219+ 96CE 1A               ld a,(de)
 220+ 96CF AE               xor (hl)
 221+ 96D0 77               ld (hl),a
 222+ 96D1 13               inc de
 223+ 96D2
 224+ 96D2 E1               pop hl
 225+ 96D3
 226+ 96D3 1A               ld a,(de)
 227+ 96D4 AE               xor (hl)
 228+ 96D5 77               ld (hl),a
 229+ 96D6 2C               inc l
 230+ 96D7 1C               inc e
 231+ 96D8 1A               ld a,(de)
 232+ 96D9 AE               xor (hl)
 233+ 96DA 77               ld (hl),a
 234+ 96DB 2C               inc l
 235+ 96DC 1C               inc e
 236+ 96DD 1A               ld a,(de)
 237+ 96DE AE               xor (hl)
 238+ 96DF 77               ld (hl),a
 239+ 96E0 13               inc de
 240+ 96E1
 241+ 96E1 E1               pop hl
 242+ 96E2
 243+ 96E2 1A               ld a,(de)
 244+ 96E3 AE               xor (hl)
 245+ 96E4 77               ld (hl),a
 246+ 96E5 2C               inc l
 247+ 96E6 1C               inc e
 248+ 96E7 1A               ld a,(de)
 249+ 96E8 AE               xor (hl)
 250+ 96E9 77               ld (hl),a
 251+ 96EA 2C               inc l
 252+ 96EB 1C               inc e
 253+ 96EC 1A               ld a,(de)
 254+ 96ED AE               xor (hl)
 255+ 96EE 77               ld (hl),a
 256+ 96EF 13               inc de
 257+ 96F0
 258+ 96F0 E1               pop hl
 259+ 96F1
 260+ 96F1 1A               ld a,(de)
 261+ 96F2 AE               xor (hl)
 262+ 96F3 77               ld (hl),a
 263+ 96F4 2C               inc l
 264+ 96F5 1C               inc e
 265+ 96F6 1A               ld a,(de)
 266+ 96F7 AE               xor (hl)
 267+ 96F8 77               ld (hl),a
 268+ 96F9 2C               inc l
 269+ 96FA 1C               inc e
 270+ 96FB 1A               ld a,(de)
 271+ 96FC AE               xor (hl)
 272+ 96FD 77               ld (hl),a
 273+ 96FE 13               inc de
 274+ 96FF
 275+ 96FF E1               pop hl
 276+ 9700
 277+ 9700 1A               ld a,(de)
 278+ 9701 AE               xor (hl)
 279+ 9702 77               ld (hl),a
 280+ 9703 2C               inc l
 281+ 9704 1C               inc e
 282+ 9705 1A               ld a,(de)
 283+ 9706 AE               xor (hl)
 284+ 9707 77               ld (hl),a
 285+ 9708 2C               inc l
 286+ 9709 1C               inc e
 287+ 970A 1A               ld a,(de)
 288+ 970B AE               xor (hl)
 289+ 970C 77               ld (hl),a
 290+ 970D 13               inc de
 291+ 970E
 292+ 970E E1               pop hl
 293+ 970F
 294+ 970F 1A               ld a,(de)
 295+ 9710 AE               xor (hl)
 296+ 9711 77               ld (hl),a
 297+ 9712 2C               inc l
 298+ 9713 1C               inc e
 299+ 9714 1A               ld a,(de)
 300+ 9715 AE               xor (hl)
 301+ 9716 77               ld (hl),a
 302+ 9717 2C               inc l
 303+ 9718 1C               inc e
 304+ 9719 1A               ld a,(de)
 305+ 971A AE               xor (hl)
 306+ 971B 77               ld (hl),a
 307+ 971C 13               inc de
 308+ 971D
 309+ 971D ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 9721 ED 7B 3D 8C      ld sp,(Stack)
 311+ 9725 C9               ret
 312+ 9726
 313+ 9726              Pinta_lento
 314+ 9726
 315+ 9726 E1           1 pop hl
 316+ 9727
 317+ 9727 1A               ld a,(de)
 318+ 9728 AE               xor (hl)
 319+ 9729 77               ld (hl),a
 320+ 972A 2C               inc l
 321+ 972B 1C               inc e
 322+ 972C 1A               ld a,(de)
 323+ 972D AE               xor (hl)
 324+ 972E 77               ld (hl),a
 325+ 972F 2C               inc l
 326+ 9730 1C               inc e
 327+ 9731 1A               ld a,(de)
 328+ 9732 AE               xor (hl)
 329+ 9733 77               ld (hl),a
 330+ 9734 13               inc de
 331+ 9735
 332+ 9735 10 EF            djnz 1B
 333+ 9737
 334+ 9737 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 973B ED 7B 3D 8C      ld sp,(Stack)
 336+ 973F C9               ret
# file closed: Pinta_Sprites.asm
2131  9740              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9740              ; ******************************************************************************************************************************************************************************************
   2+ 9740              ;
   3+ 9740              ; 26/06/23
   4+ 9740              ;
   5+ 9740              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9740
   7+ 9740              Draw
   8+ 9740
   9+ 9740 CD E6 99     	call Prepara_draw
  10+ 9743 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9744 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9745 28 05        	jr z,2F
  13+ 9747
  14+ 9747 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 974A 18 0C        	jr 1F
  16+ 974C
  17+ 974C 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 974F 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9752 CD DE 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9755              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9755
  22+ 9755 CD 85 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9758
  24+ 9758 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 975B CB 6F        	bit 5,a
  26+ 975D 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 975F
  28+ 975F CD 74 97     	call Comprueba_limite_horizontal
  29+ 9762 CD 04 98     	call Comprueba_limite_vertical
  30+ 9765
  31+ 9765              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9765              ; -----------------------
  33+ 9765              ; -----------------------
  34+ 9765              ; -----------------------
  35+ 9765
  36+ 9765 CD 5A 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9768 CD 91 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 976B
  39+ 976B 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 976E CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9770 32 FB 8B     	ld (Ctrl_0),a
  42+ 9773
  43+ 9773 C9           	ret
  44+ 9774
  45+ 9774              ; *******************************************************************************************************************************************************************************************
  46+ 9774              ;	21/01/23
  47+ 9774              ;
  48+ 9774              ; 	Comprueba_limite_horizontal.
  49+ 9774              ;
  50+ 9774              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9774              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9774              ;
  53+ 9774              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9774              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9774              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9774              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9774
  58+ 9774
  59+ 9774
  60+ 9774 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9777 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9779 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 977B E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 977D 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9780 18 09            jr 6F
  66+ 9782 CB 5F        1 bit 3,a
  67+ 9784 28 0A            jr z,2F
  68+ 9786 E6 F7            and $f7
  69+ 9788 32 FB 8B         ld (Ctrl_0),a
  70+ 978B CD DE 98     6 call Inicializacion
  71+ 978E 18 5B            jr 5F
  72+ 9790 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9791
  74+ 9791              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9791              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9791
  77+ 9791 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9792 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9795 CD DF 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9798 67           	ld h,a
  81+ 9799 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 979A CD DF 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 979D 67           	ld h,a
  84+ 979E A7           	and a
  85+ 979F ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 97A1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 97A2 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 97A5 FE 02        	cp 2
  89+ 97A7 38 1E        	jr c,3F
  90+ 97A9 28 1C        	jr z,3F
  91+ 97AB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 97AC 28 23            jr z,7F
  93+ 97AE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 97B0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97B2 E1           	pop hl
  96+ 97B3
  97+ 97B3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97B3              ; _para indicar con E="2" en caso necesario.
  99+ 97B3
 100+ 97B3 E5               push hl
 101+ 97B4 C5               push bc
 102+ 97B5 CD DF 94     	call calcula_tercio
 103+ 97B8 FE 01        	cp 1
 104+ 97BA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97BC CD EC 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97BF 28 26            jr z,9F
 107+ 97C1 38 24            jr c,9F
 108+ 97C3 1E 00        11 ld e,0
 109+ 97C5 18 22            jr 8F
 110+ 97C7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97C8 28 07        	jr z, 7F
 112+ 97CA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97CC 1E 00         	ld e,0
 114+ 97CE E1           	pop hl
 115+ 97CF 18 04        	jr 4F
 116+ 97D1 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97D3 18 15            jr 10F
 118+ 97D5
 119+ 97D5              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97D5              ; _para indicar con E="2" en caso necesario.
 121+ 97D5
 122+ 97D5 E5           4 push hl
 123+ 97D6 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97D7 CD DF 94     	call calcula_tercio
 125+ 97DA FE 01        	cp 1
 126+ 97DC 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97DE CD EC 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97E1 28 04            jr z,9F
 129+ 97E3 30 02            jr nc,9F
 130+ 97E5 18 02        	jr 8F
 131+ 97E7 1E 02        9 ld e,2
 132+ 97E9 C1           8 pop bc
 133+ 97EA E1           10 pop hl
 134+ 97EB C9           5 ret
 135+ 97EC
 136+ 97EC              ; --------------------
 137+ 97EC              ;
 138+ 97EC              ; 25/08/22
 139+ 97EC
 140+ 97EC CD DF 94     Comprueba_centro call calcula_tercio
 141+ 97EF 67               ld h,a
 142+ 97F0 08           	ex af,af
 143+ 97F1 FE 02        	cp 2
 144+ 97F3 38 07        	jr c,1F
 145+ 97F5 28 05        	jr z,1F
 146+ 97F7 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97FA 18 03        	jr 2F
 148+ 97FC 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97FF 08           2 ex af,af
 150+ 9800 A7               and a
 151+ 9801 ED 42            sbc hl,bc
 152+ 9803 C9               ret
 153+ 9804
 154+ 9804              ; *********************************************************************************************************************************************************************************************
 155+ 9804              ;
 156+ 9804              ;   16/8/22
 157+ 9804              ;
 158+ 9804              ;	Comprueba_limite_vertical
 159+ 9804              ;
 160+ 9804              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9804              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9804              ;
 163+ 9804
 164+ 9804 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9807 7D           	ld a,l
 166+ 9808 E6 1F        	and $1F
 167+ 980A 57           	ld d,a
 168+ 980B 3A 11 8C     	ld a,(Limite_vertical)
 169+ 980E BA           	cp d 											; Límite - Posición.
 170+ 980F 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9810 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9813 CB 47        	bit 0,a
 173+ 9815 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9817
 175+ 9817              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9817
 177+ 9817 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9818 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 981A
 180+ 981A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 981A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 981A
 183+ 981A 3A EF 8B         ld a,(Coordenada_X)
 184+ 981D 16 0F            ld d,Centro_izquierda
 185+ 981F A7               and a
 186+ 9820 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9821 28 1E            jr z,3F
 188+ 9823 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9825              ;                                                    ; _salimos sin modificar nada.
 190+ 9825 18 0E            jr 2F
 191+ 9827 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9828 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 982A
 194+ 982A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 982A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 982A
 197+ 982A 3A EF 8B         ld a,(Coordenada_X)
 198+ 982D 16 10            ld d,Centro_derecha
 199+ 982F A7               and a
 200+ 9830 92               sub d
 201+ 9831 28 0E            jr z,3F
 202+ 9833 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9835              ;                                                    ; _salimos sin modificar nada.
 204+ 9835 CB 43        2 bit 0,e
 205+ 9837 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9839 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 983A CD CE 98         call Modificaccionne
 208+ 983D C1           	pop bc
 209+ 983E CD DE 98         call Inicializacion
 210+ 9841 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9842
 212+ 9842              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9842
 214+ 9842 C5           4 push bc
 215+ 9843 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9846 0A           	ld a,(bc)
 217+ 9847 3D           	dec a
 218+ 9848 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9849 7D           	ld a,l
 220+ 984A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 984B CB 47        	bit 0,a
 222+ 984D 28 03        	jr z,5F
 223+ 984F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9850 18 2E        	jr 7F
 225+ 9852
 226+ 9852              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9852
 228+ 9852 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9853 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9854 3A FB 8B     	ld a,(Ctrl_0)
 231+ 9857 CB 4F        	bit 1,a
 232+ 9859 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 985B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 985C
 235+ 985C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 985C
 237+ 985C 1C               inc e
 238+ 985D 1D               dec e
 239+ 985E 20 07            jr nz,12F
 240+ 9860 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9861 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9862 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9865 18 44        13 jr 9F
 244+ 9867 CB 43        12 bit 0,e
 245+ 9869 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 986B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 986B C1           	pop bc
 248+ 986C 18 D3        	jr 3B
 249+ 986E 80           14 add b
 250+ 986F 6F               ld l,a
 251+ 9870 22 FE 8B     	ld (Posicion_actual),hl
 252+ 9873 CD CE 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9876 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9878 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 987A 32 FB 8B         ld (Ctrl_0),a
 256+ 987D F1           	pop af
 257+ 987E 18 2B        	jr 9F
 258+ 9880
 259+ 9880              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9880
 261+ 9880 F5           7 push af
 262+ 9881 3A FB 8B     	ld a,(Ctrl_0)
 263+ 9884 CB 47        	bit 0,a
 264+ 9886 20 1D        	jr nz,8F
 265+ 9888 F1           	pop af
 266+ 9889
 267+ 9889              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9889
 269+ 9889 1C           	inc e
 270+ 988A 1D               dec e
 271+ 988B 20 07            jr nz,10F
 272+ 988D 90           	sub b
 273+ 988E 6F               ld l,a
 274+ 988F 22 FE 8B     	ld (Posicion_actual),hl
 275+ 9892 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9894              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9894 CB 43        10 bit 0,e
 278+ 9896 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9898              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9898 C1           	pop bc
 281+ 9899 18 A6        	jr 3B
 282+ 989B 90           16 sub b
 283+ 989C 6F               ld l,a
 284+ 989D 22 FE 8B     	ld (Posicion_actual),hl
 285+ 98A0 CD CE 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 98A3 18 06            jr 9F
 287+ 98A5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 98A7 32 FB 8B         ld (Ctrl_0),a
 289+ 98AA F1           	pop af
 290+ 98AB C1           9 pop bc
 291+ 98AC 1E 00        	ld e,0
 292+ 98AE CD DE 98         call Inicializacion
 293+ 98B1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98B2 08           	ex af,af
 295+ 98B3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98B4 18 8B            jr 3B
 297+ 98B6
 298+ 98B6              ; --------------------
 299+ 98B6
 300+ 98B6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98B8 CD 01 9A     1 call PreviousScan
 302+ 98BB 10 FB            djnz 1B
 303+ 98BD 22 FE 8B     	ld (Posicion_actual),hl
 304+ 98C0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98C1 C9           	ret
 306+ 98C2
 307+ 98C2              ; --------------------
 308+ 98C2
 309+ 98C2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98C4 CD F2 99     1 call NextScan
 311+ 98C7 10 FB            djnz 1B
 312+ 98C9 22 FE 8B     	ld (Posicion_actual),hl
 313+ 98CC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98CD C9           	ret
 315+ 98CE
 316+ 98CE              ; --------------------
 317+ 98CE              ;
 318+ 98CE              ;	22/01/23
 319+ 98CE              ;
 320+ 98CE              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98CE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98CE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98CE
 324+ 98CE
 325+ 98CE              Modificaccionne
 326+ 98CE
 327+ 98CE 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 98D1 FE 02        	cp 2
 329+ 98D3 CC B6 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98D6 DC B6 98         call c,Modifica_Pos_actual
 331+ 98D9 C8           	ret z
 332+ 98DA CD C2 98         call Modifica_Pos_actual2
 333+ 98DD C9               ret
 334+ 98DE
 335+ 98DE              ; *************************************************************************************************************************************************************************************************
 336+ 98DE              ;
 337+ 98DE              ;	13/8/22
 338+ 98DE              ;
 339+ 98DE              ;	Inicializacion
 340+ 98DE              ;
 341+ 98DE              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98DE              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98DE              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98DE              ;
 345+ 98DE              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98DE              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98DE              ;	_ desaparece/aparece.
 348+ 98DE
 349+ 98DE              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98DE              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98DE              ;
 352+ 98DE              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98DE              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98DE              ; 		   [E] ="0"
 355+ 98DE
 356+ 98DE              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98DE
 358+ 98DE CD DF 94     Inicializacion call calcula_tercio
 359+ 98E1 28 36        	jr z,primit
 360+ 98E3 E6 02        	and 2
 361+ 98E5 20 07        	jr nz,segmit
 362+ 98E7 7D           	ld a,l
 363+ 98E8 FE 7F        	cp $7f
 364+ 98EA 38 2D        	jr c,primit
 365+ 98EC 28 2B        	jr z,primit
 366+ 98EE CD 54 99     segmit call column
 367+ 98F1 38 13        	jr c,tercuad
 368+ 98F3 3E 04        cuarcuad ld a,4
 369+ 98F5 32 0D 8C     	ld (Cuad_objeto),a
 370+ 98F8 21 20 48     	ld hl,$4820
 371+ 98FB 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 98FE 21 11 8C     	ld hl,Limite_vertical
 373+ 9901 36 0D        	ld (hl),$0d
 374+ 9903 08           	ex af,af
 375+ 9904 18 3C        	jr 1F
 376+ 9906              tercuad
 377+ 9906 3E 03        	ld a,3
 378+ 9908 32 0D 8C     	ld (Cuad_objeto),a
 379+ 990B 21 20 48     	ld hl,$4820
 380+ 990E 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 9911 21 11 8C     	ld hl,Limite_vertical
 382+ 9914 36 12        	ld (hl),$12
 383+ 9916 08           	ex af,af
 384+ 9917 18 29        	jr 1F
 385+ 9919 CD 54 99     primit call column
 386+ 991C 38 13        	jr c, primcuad
 387+ 991E              segcuad
 388+ 991E 3E 02        	ld a,2
 389+ 9920 32 0D 8C     	ld (Cuad_objeto),a
 390+ 9923 21 C0 4F     	ld hl,$4fc0
 391+ 9926 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 9929 21 11 8C     	ld hl,Limite_vertical
 393+ 992C 36 0D        	ld (hl),$0d
 394+ 992E 08           	ex af,af
 395+ 992F 18 11        	jr 1F
 396+ 9931              primcuad
 397+ 9931 3E 01        	ld a,1
 398+ 9933 32 0D 8C     	ld (Cuad_objeto),a
 399+ 9936 21 C0 4F     	ld hl,$4fc0
 400+ 9939 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 993C 21 11 8C     	ld hl,Limite_vertical
 402+ 993F 36 12        	ld (hl),$12
 403+ 9941 08           	ex af,af
 404+ 9942
 405+ 9942 C5           1 push bc
 406+ 9943 E5           	push hl
 407+ 9944 D5           	push de
 408+ 9945
 409+ 9945 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 9948 CD FD 94     	call Genera_coordenadas
 411+ 994B
 412+ 994B D1           	pop de
 413+ 994C E1           	pop hl
 414+ 994D C1           	pop bc
 415+ 994E
 416+ 994E 21 FB 8B     	ld hl,Ctrl_0
 417+ 9951 CB EE        	set 5,(hl)
 418+ 9953 C9           	ret
 419+ 9954
 420+ 9954              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9954
 422+ 9954              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9954              ;
 424+ 9954              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9954
 426+ 9954 7D           column ld a,l
 427+ 9955 E6 1F        	and $1f
 428+ 9957 FE 10         	cp $10
 429+ 9959 C9            	ret
 430+ 995A
 431+ 995A              ; --------------------------------------------------------------------------------------------------------------------
 432+ 995A              ;
 433+ 995A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 995A              ;
 435+ 995A              ; 14/12/22
 436+ 995A              ;
 437+ 995A              ;	Modifica: A y BC.
 438+ 995A
 439+ 995A 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 995D E6 01        	and 1
 441+ 995F 28 17        	jr z,1F
 442+ 9961
 443+ 9961              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9961
 445+ 9961 3A EF 8B     	ld a,(Coordenada_X)
 446+ 9964 47           	ld b,a
 447+ 9965 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9966 79           	ld a,c
 449+ 9967 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9968 38 08        	jr c,2F
 451+ 996A 47           	ld b,a
 452+ 996B 79           	ld a,c
 453+ 996C 90           	sub b
 454+ 996D 32 0E 8C     	ld (Columnas),a
 455+ 9970 18 1B        	jr 4F
 456+ 9972 79           2 ld a,c
 457+ 9973 32 0E 8C     	ld (Columnas),a
 458+ 9976 18 15        	jr 4F
 459+ 9978
 460+ 9978              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9978
 462+ 9978 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 997B 81           	add c
 464+ 997C 3D           	dec a
 465+ 997D D6 1F        	sub $1f
 466+ 997F 38 08        	jr c,3F
 467+ 9981 47           	ld b,a
 468+ 9982 79           	ld a,c
 469+ 9983 90           	sub b
 470+ 9984 32 0E 8C     	ld (Columnas),a
 471+ 9987 18 04        	jr 4F
 472+ 9989 79           3 ld a,c
 473+ 998A 32 0E 8C     	ld (Columnas),a
 474+ 998D D9           4 exx
 475+ 998E 4F           	ld c,a
 476+ 998F D9           	exx
 477+ 9990 C9            ret
 478+ 9991
 479+ 9991              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9991              ;
 481+ 9991              ;   19/7/23
 482+ 9991              ;
 483+ 9991              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9991              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9991              ;
 486+ 9991              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9991              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9991              ;
 489+ 9991              ;	DESTRUYE: HL,B Y A.
 490+ 9991
 491+ 9991 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9994 FE 02        	cp 2
 493+ 9996 38 18        	jr c,1F
 494+ 9998 28 16        	jr z,1F
 495+ 999A E6 01        	and 1
 496+ 999C 28 0D        	jr z,3F
 497+ 999E
 498+ 999E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 999E
 500+ 999E CD DA 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 99A1
 502+ 99A1 7D           9 ld a,l
 503+ 99A2 E6 1F        	and $1f
 504+ 99A4 28 2A        	jr z,7F
 505+ 99A6 2B           	dec hl
 506+ 99A7 10 F8        	djnz 9B
 507+ 99A9 18 25        	jr 7F
 508+ 99AB
 509+ 99AB              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 99AB
 511+ 99AB 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 99AE 18 20        	jr 7F
 513+ 99B0
 514+ 99B0 28 14        1 jr z,2F
 515+ 99B2
 516+ 99B2              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99B2
 518+ 99B2 CD DA 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99B5
 520+ 99B5 7D           4 ld a,l
 521+ 99B6 E6 1F        	and $1f
 522+ 99B8 28 03        	jr z,6F
 523+ 99BA 2B           	dec hl
 524+ 99BB 10 F8        	djnz 4B
 525+ 99BD 06 0F        6 ld b,15
 526+ 99BF CD 01 9A     5 call PreviousScan
 527+ 99C2 10 FB        	djnz 5B
 528+ 99C4 18 0A        	jr 7F
 529+ 99C6
 530+ 99C6              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99C6
 532+ 99C6 CD DA 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99C9 06 0F        	ld b,15
 534+ 99CB CD 01 9A     8 call PreviousScan
 535+ 99CE 10 FB        	djnz 8B
 536+ 99D0
 537+ 99D0 E5           7 push hl
 538+ 99D1 DD E1        	pop ix
 539+ 99D3
 540+ 99D3 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 99D6 E5           	push hl
 542+ 99D7 FD E1        	pop iy
 543+ 99D9
 544+ 99D9 C9           	ret
 545+ 99DA
 546+ 99DA              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99DA              ;
 548+ 99DA              ;	2/1/23
 549+ 99DA              ;
 550+ 99DA              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99DA              ;
 552+ 99DA              ;	Tras esta rutina tenemos:
 553+ 99DA              ;
 554+ 99DA              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99DA              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99DA              ;
 557+ 99DA              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99DA
 559+ 99DA 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 99DD 3A 0E 8C     	ld a,(Columnas)
 561+ 99E0 3D           	dec a
 562+ 99E1 20 01        	jr nz,1F
 563+ 99E3 3C           	inc a
 564+ 99E4 47           1 ld b,a
 565+ 99E5 C9           	ret
 566+ 99E6
 567+ 99E6              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99E6              ;
 569+ 99E6              ;	Prepara_draw
 570+ 99E6              ;
 571+ 99E6              ;	Es una rutina de carga.
 572+ 99E6              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99E6              ;
 574+ 99E6              ;	FUNCIONAMIENTO:
 575+ 99E6              ;
 576+ 99E6              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99E6              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99E6              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99E6              ;
 580+ 99E6              ;	DESTRUYE:
 581+ 99E6              ;
 582+ 99E6              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99E6
 584+ 99E6 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99E9 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99EA 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99EB 4E           	ld c,(hl)
 588+ 99EC 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99EF 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99F1 C9           	ret
 591+ 99F2
 592+ 99F2              ;----------------------------------------------------------------------------------------------------------------
 593+ 99F2              ;
 594+ 99F2              ;	5/08/22
 595+ 99F2              ;
 596+ 99F2              ;   NextScan.
 597+ 99F2              ;
 598+ 99F2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99F2              ;
 600+ 99F2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99F2              ;
 602+ 99F2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99F2              ;
 604+ 99F2              ;       DESTRUIDOS: AF y HL !!!
 605+ 99F2              ;
 606+ 99F2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99F2              ;
 608+ 99F2
 609+ 99F2 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99F3 7C               ld a,h
 611+ 99F4 E6 07            and 7
 612+ 99F6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99F7
 614+ 99F7 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99F8 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99FA 6F               ld l,a
 617+ 99FB D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99FC
 619+ 99FC 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99FD D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99FF 67               ld h,a
 622+ 9A00 C9               ret
 623+ 9A01
 624+ 9A01              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A01              ;
 626+ 9A01              ;	5/08/22
 627+ 9A01              ;
 628+ 9A01              ;   PreviousScan.
 629+ 9A01              ;
 630+ 9A01              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A01              ;
 632+ 9A01              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A01              ;
 634+ 9A01              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A01              ;
 636+ 9A01              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A01              ;
 638+ 9A01              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A01              ;
 640+ 9A01
 641+ 9A01 7C           PreviousScan ld a,h
 642+ 9A02 25               dec h               ; Dec H.
 643+ 9A03 E6 07            and 7
 644+ 9A05 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A06
 646+ 9A06 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A07 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A09 6F               ld l,a
 649+ 9A0A D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A0B
 651+ 9A0B 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A0C C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A0E 67               ld h,a
 654+ 9A0F C9               ret
 655+ 9A10
 656+ 9A10
 657+ 9A10
 658+ 9A10
 659+ 9A10
 660+ 9A10
 661+ 9A10
 662+ 9A10
 663+ 9A10
 664+ 9A10
 665+ 9A10
 666+ 9A10
# file closed: Draw_XOR.asm
2132  9A10              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A10
   2+ 9A10              ; ******************************************************************************************************************************************************************************************
   3+ 9A10              ;
   4+ 9A10              ;   20/05/23
   5+ 9A10              ;
   6+ 9A10              ;	Recompone_posicion_inicio
   7+ 9A10              ;
   8+ 9A10              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A10              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A10              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A10              ;	_ a una u otra rutina.
  12+ 9A10
  13+ 9A10              Recompone_posicion_inicio
  14+ 9A10
  15+ 9A10 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 9A13 7D           	ld a,l
  17+ 9A14 E6 1F        	and $1f
  18+ 9A16 28 16        	jr z,1F
  19+ 9A18
  20+ 9A18 FE 1F        	cp $1f
  21+ 9A1A 28 0D        	jr z,3F
  22+ 9A1C
  23+ 9A1C 21 FA 8B     	ld hl,Ctrl_2
  24+ 9A1F CB C6        	set 0,(hl)
  25+ 9A21 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 9A24 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A27 18 08        	jr 2F
  28+ 9A29
  29+ 9A29 CD D7 9B     3 call Mov_left
  30+ 9A2C 18 03        	jr 2F
  31+ 9A2E
  32+ 9A2E CD B4 9A     1 call Mov_right
  33+ 9A31 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A34 22 00 8C     	ld (Puntero_objeto),hl
  35+ 9A37 C9           	ret
  36+ 9A38
  37+ 9A38              ; ******************************************************************************************************************************************************************************************
  38+ 9A38              ;
  39+ 9A38              ;   27/05/23
  40+ 9A38              ;
  41+ 9A38              ;	Mov_down
  42+ 9A38              ;
  43+ 9A38              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A38              ;
  45+ 9A38              ;
  46+ 9A38              Mov_down
  47+ 9A38
  48+ 9A38 CD A2 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A3B              ;																	; _ repone (Puntero_objeto).
  50+ 9A3B 21 FB 8B     	ld hl,Ctrl_0
  51+ 9A3E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A40              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A40              ; 																	; _ en el caso de que no lo haya.
  54+ 9A40 3A 16 8C     	ld a,(Vel_down)
  55+ 9A43 47           	ld b,a
  56+ 9A44 2A FE 8B         ld hl,(Posicion_actual)
  57+ 9A47 CD DF 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A4A E6 02        	and 2
  59+ 9A4C 28 17        	jr z,1F
  60+ 9A4E
  61+ 9A4E              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A4E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A4E
  64+ 9A4E 7C           	ld a,h
  65+ 9A4F FE 57        	cp $57
  66+ 9A51 20 12        	jr nz,1F
  67+ 9A53
  68+ 9A53 7D           	ld a,l
  69+ 9A54 C6 20        	add $20
  70+ 9A56 30 0D        	jr nc,1F
  71+ 9A58
  72+ 9A58              ; ------------------------------
  73+ 9A58              ;
  74+ 9A58              ;	12/01/24
  75+ 9A58
  76+ 9A58              ;	call Reaparece_arriba
  77+ 9A58 CD 64 9D     	call Reinicio
  78+ 9A5B
  79+ 9A5B              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A5B
  81+ 9A5B 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A5E CB CF        	set 1,a
  83+ 9A60 32 65 8C     	ld (Ctrl_3),a
  84+ 9A63
  85+ 9A63 18 08        	jr 3F
  86+ 9A65              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A65              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A65              ; ------------------------------
  89+ 9A65
  90+ 9A65 CD F2 99     1 call NextScan
  91+ 9A68 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A6B 10 DA            djnz 2B
  93+ 9A6D CD FD 94     3 call Genera_coordenadas
  94+ 9A70 C9           	ret
  95+ 9A71
  96+ 9A71              ; ******************************************************************************************************************************************************************************************
  97+ 9A71              ;
  98+ 9A71              ;   27/05/23
  99+ 9A71              ;
 100+ 9A71              ;	Mov_up
 101+ 9A71              ;
 102+ 9A71              ; 	Mueve el Sprite hacia arriba.
 103+ 9A71              ;
 104+ 9A71              ;
 105+ 9A71              Mov_up
 106+ 9A71
 107+ 9A71 CD A2 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A74              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A74 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A77 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A79              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A79              ; 																		; _ en el caso de que no lo haya.
 113+ 9A79 3A 15 8C     	ld a,(Vel_up)
 114+ 9A7C 47           	ld b,a
 115+ 9A7D 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A80 CD DF 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A83 A7           	and a
 118+ 9A84 20 10        	jr nz,1F
 119+ 9A86
 120+ 9A86              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A86              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A86
 123+ 9A86 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A87 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A89 20 0B            jr nz,1F
 126+ 9A8B 7D               ld a,l
 127+ 9A8C D6 20            sub $20
 128+ 9A8E 30 06            jr nc,1F
 129+ 9A90 25               dec h
 130+ 9A91
 131+ 9A91              ; -----------------------------
 132+ 9A91 CD 45 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A94              ;	call Reinicio
 134+ 9A94              ; -----------------------------
 135+ 9A94
 136+ 9A94 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A96 CD 01 9A     1 call PreviousScan
 138+ 9A99 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9A9C 10 E2            djnz 3B
 140+ 9A9E CD FD 94     2 call Genera_coordenadas
 141+ 9AA1 C9           	ret
 142+ 9AA2
 143+ 9AA2              ; -----------------------------
 144+ 9AA2              ;
 145+ 9AA2              ;	27/5/23
 146+ 9AA2              ;
 147+ 9AA2              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9AA2              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9AA2              ;
 150+ 9AA2              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9AA2              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9AA2              ;
 153+ 9AA2              ;	Modifica: A y (Puntero_objeto).
 154+ 9AA2
 155+ 9AA2 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9AA5 CB 47        	bit 0,a
 157+ 9AA7 C8           	ret z
 158+ 9AA8 CB 87        	res 0,a
 159+ 9AAA 32 FA 8B     	ld (Ctrl_2),a
 160+ 9AAD 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9AB0 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9AB3 C9           	ret
 163+ 9AB4
 164+ 9AB4              ; ******************************************************************************************************************************************************************************************
 165+ 9AB4              ;
 166+ 9AB4              ;	19/10/22
 167+ 9AB4              ;
 168+ 9AB4              ;	Mov_right.
 169+ 9AB4              ;
 170+ 9AB4              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AB4              ;
 172+ 9AB4
 173+ 9AB4 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AB7 CB 77        	bit 6,a
 175+ 9AB9 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9ABB
 177+ 9ABB CD F3 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9ABE C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9ABF
 180+ 9ABF 21 FB 8B     	ld hl,Ctrl_0
 181+ 9AC2 CB E6        	set 4,(hl)
 182+ 9AC4 18 52        	jr 8F
 183+ 9AC6
 184+ 9AC6 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9AC9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9ACB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9ACB              ; 																	; _ en el caso de que no lo haya.
 188+ 9ACB 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9ACE FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AD0 20 46        	jr nz,8F
 191+ 9AD2
 192+ 9AD2 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AD5 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AD6 28 40        	jr z,8F
 195+ 9AD8
 196+ 9AD8              ; ---------- ---------- ----------
 197+ 9AD8              ;
 198+ 9AD8              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AD8
 200+ 9AD8 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ADB FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9ADD 28 11        	jr z,1F
 203+ 9ADF 38 06        	jr c,6F
 204+ 9AE1 FE 04        	cp 4
 205+ 9AE3 28 14        	jr z,7F
 206+ 9AE5 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AE7
 208+ 9AE7              ; ---------- ---------- ----------
 209+ 9AE7              ;
 210+ 9AE7              ; Perfiles de velocidad
 211+ 9AE7              ;
 212+ 9AE7
 213+ 9AE7 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AEA FE FE        	cp $fe
 215+ 9AEC 20 2A        	jr nz,8F
 216+ 9AEE 18 10        	jr 3F
 217+ 9AF0 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AF3 FE FD        	cp $fd
 219+ 9AF5 20 21        	jr nz,8F
 220+ 9AF7 18 07        	jr 3F
 221+ 9AF9 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AFC FE FB        	cp $fb
 223+ 9AFE 20 18        	jr nz,8F
 224+ 9B00
 225+ 9B00              ; ---------- ---------- ----------
 226+ 9B00
 227+ 9B00              3
 228+ 9B00 CD 33 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B03              ;	call Reinicio
 230+ 9B03
 231+ 9B03              ; ---------- ---------- ----------
 232+ 9B03              ;
 233+ 9B03              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B03
 235+ 9B03 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B05 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B06 CD 1F 9B     	call DESPLZ_DER
 238+ 9B09 C1           	pop bc
 239+ 9B0A 10 F9        	djnz 5B
 240+ 9B0C 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B0F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B10 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9B13 CD FD 94     	call Genera_coordenadas
 244+ 9B16 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B18
 246+ 9B18              ; ---------- ---------- ----------
 247+ 9B18
 248+ 9B18 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9B1B CD 1F 9B     	call DESPLZ_DER
 250+ 9B1E C9           2 ret
 251+ 9B1F
 252+ 9B1F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B1F              ;
 254+ 9B1F              ;	22/9/22
 255+ 9B1F              ;
 256+ 9B1F
 257+ 9B1F CD 2E 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B22 CD 7A 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B25 CD A3 9B         call Ciclo_completo
 260+ 9B28 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B2B CB FE        	set 7,(hl)
 262+ 9B2D C9           	ret
 263+ 9B2E
 264+ 9B2E              ; ******************************************************************************************************************************************************************************************
 265+ 9B2E              ;	15/02/23
 266+ 9B2E              ;
 267+ 9B2E
 268+ 9B2E 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B31 47           	ld b,a
 270+ 9B32 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B35 23           1 inc hl
 272+ 9B36 23           	inc hl
 273+ 9B37 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B39 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B3C CD 1A 91     	call Extrae_address
 276+ 9B3F 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9B42
 278+ 9B42              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B42
 280+ 9B42              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B42              ; Cuántos movimientos hemos hecho ??
 282+ 9B42              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B42
 284+ 9B42 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B45 EB           	ex de,hl
 286+ 9B46 A7           	and a
 287+ 9B47 ED 52        	sbc hl,de
 288+ 9B49 CB 3D        	srl l
 289+ 9B4B 3E 08        6 ld a,8
 290+ 9B4D 95           	sub l
 291+ 9B4E 30 1E        	jr nc,3F
 292+ 9B50
 293+ 9B50              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B50              ; B="0".
 295+ 9B50
 296+ 9B50 04           4 inc b
 297+ 9B51 3C           	inc a
 298+ 9B52 20 FC        	jr nz,4B
 299+ 9B54 78           	ld a,b
 300+ 9B55 08           	ex af,af
 301+ 9B56 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B59 23           5 inc hl
 303+ 9B5A 23           	inc hl
 304+ 9B5B 10 FC        	djnz 5B
 305+ 9B5D 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B60 CD 1A 91     	call Extrae_address
 307+ 9B63 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B66
 309+ 9B66              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B66              ; _(Posicion_actual).
 311+ 9B66
 312+ 9B66 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B69 34           	inc (hl)
 314+ 9B6A 08               ex af,af
 315+ 9B6B 6F           	ld l,a
 316+ 9B6C 18 DD        	jr 6B
 317+ 9B6E
 318+ 9B6E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B6E
 320+ 9B6E 47           3 ld b,a
 321+ 9B6F 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B72 23           2 inc hl
 323+ 9B73 23           	inc hl
 324+ 9B74 10 FC        	djnz 2B
 325+ 9B76 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B79 C9           8 ret
 327+ 9B7A
 328+ 9B7A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B7A              ;
 330+ 9B7A              ;	24/7/22
 331+ 9B7A              ;
 332+ 9B7A              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B7A              ;
 334+ 9B7A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B7A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B7A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B7A
 338+ 9B7A 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B7D A7           	and a
 340+ 9B7E 20 1F        	jr nz,1F
 341+ 9B80 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B82 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B85
 344+ 9B85 21 FD 8B     	ld hl,Columns
 345+ 9B88 34           	inc (hl)
 346+ 9B89 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B8C E6 01        	and 1
 348+ 9B8E 28 0F        	jr z,1F
 349+ 9B90 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B93 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B94 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9B97 CD FD 94     	call Genera_coordenadas
 353+ 9B9A CD FF 9C     	call Inc_CTRL_DESPLZ
 354+ 9B9D 18 03        	jr 2F
 355+ 9B9F CD FF 9C     1 call Inc_CTRL_DESPLZ
 356+ 9BA2 C9           2 ret
 357+ 9BA3
 358+ 9BA3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9BA3              ;
 360+ 9BA3              ;	24/7/22
 361+ 9BA3              ;
 362+ 9BA3              ;	Ciclo_completo.
 363+ 9BA3              ;
 364+ 9BA3              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9BA3              ;
 366+ 9BA3              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9BA3              ; 	Decrementamos (Columns).
 368+ 9BA3              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9BA3              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9BA3
 371+ 9BA3
 372+ 9BA3 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9BA6 FE FF        	cp $ff
 374+ 9BA8 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9BAA E6 F0        	and $f0
 376+ 9BAC 20 28        	jr nz,3F
 377+ 9BAE
 378+ 9BAE              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9BAE
 380+ 9BAE 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9BB1 47           	ld b,a
 382+ 9BB2 3E F8        	ld a,$f8
 383+ 9BB4 80           	add b
 384+ 9BB5 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9BB8 18 1C        	jr 3F
 386+ 9BBA 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BBD 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BBE AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BBF 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9BC2 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BC5 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BC7 20 0A        	jr nz,2F
 393+ 9BC9 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BCC 23           	inc hl
 395+ 9BCD 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9BD0 CD FD 94     	call Genera_coordenadas
 397+ 9BD3
 398+ 9BD3              ; Inicia el puntero de Sprite.
 399+ 9BD3
 400+ 9BD3 CD 2F 91     2 call Inicia_puntero_objeto_der
 401+ 9BD6 C9           3 ret
 402+ 9BD7
 403+ 9BD7              ; ******************************************************************************************************************************************************************************************
 404+ 9BD7              ;
 405+ 9BD7              ;	15/02/23
 406+ 9BD7              ;
 407+ 9BD7              ;	Mov_left.
 408+ 9BD7              ;
 409+ 9BD7              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BD7              ;
 411+ 9BD7              Mov_left
 412+ 9BD7
 413+ 9BD7 21 FB 8B     	ld hl,Ctrl_0
 414+ 9BDA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BDC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BDC              ; 																	; _ en el caso de que no lo haya.
 417+ 9BDC 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9BDF CB 77        	bit 6,a
 419+ 9BE1 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BE3
 421+ 9BE3 CD F9 9C     	call Stop_Amadeus_left
 422+ 9BE6 C8           	ret z
 423+ 9BE7 20 4A        	jr nz,8F
 424+ 9BE9
 425+ 9BE9 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BEC A7           	and a
 427+ 9BED 20 44        	jr nz,8F
 428+ 9BEF
 429+ 9BEF 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BF2 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BF3 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BF5
 433+ 9BF5              ; ---------- ---------- ----------
 434+ 9BF5
 435+ 9BF5 3A 13 8C     	ld a,(Vel_left)
 436+ 9BF8 FE 02        	cp 2
 437+ 9BFA 28 0F        	jr z,1F
 438+ 9BFC 38 04        	jr c,6F
 439+ 9BFE FE 04        	cp 4
 440+ 9C00 28 12        	jr z,7F
 441+ 9C02
 442+ 9C02              ; ---------- ---------- ----------
 443+ 9C02
 444+ 9C02 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C05 FE F8        	cp $f8
 446+ 9C07 20 2A        	jr nz,8F
 447+ 9C09 18 10        	jr 4F
 448+ 9C0B 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C0E FE F9        	cp $f9
 450+ 9C10 20 21        	jr nz,8F
 451+ 9C12 18 07        	jr 4F
 452+ 9C14 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C17 FE FB        	cp $fb
 454+ 9C19 20 18        	jr nz,8F
 455+ 9C1B
 456+ 9C1B              ; ---------- ---------- ----------
 457+ 9C1B
 458+ 9C1B              4
 459+ 9C1B CD 21 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C1E              ;	call Reinicio
 461+ 9C1E
 462+ 9C1E              ; ---------- ---------- ----------
 463+ 9C1E
 464+ 9C1E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C20 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C21
 467+ 9C21              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C21              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C21
 470+ 9C21 CD 3A 9C     	call DESPLZ_IZQ
 471+ 9C24 C1           	pop bc
 472+ 9C25 10 F9        	djnz 5B
 473+ 9C27 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C2A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C2B 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9C2E CD FD 94     	call Genera_coordenadas
 477+ 9C31 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C33
 479+ 9C33              ; ---------- ---------- ----------
 480+ 9C33
 481+ 9C33              ; Movemos, no hay recolocación.
 482+ 9C33
 483+ 9C33 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9C36 CD 3A 9C     	call DESPLZ_IZQ
 485+ 9C39 C9           2 ret
 486+ 9C3A
 487+ 9C3A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C3A              ;
 489+ 9C3A              ;	22/9/22
 490+ 9C3A
 491+ 9C3A              DESPLZ_IZQ
 492+ 9C3A
 493+ 9C3A CD 49 9C     	call Desplaza_izquierda
 494+ 9C3D CD 95 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C40 CD BD 9C     	call Ciclo_completo_2
 496+ 9C43 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C46 CB BE        	res 7,(hl)
 498+ 9C48 C9           	ret
 499+ 9C49
 500+ 9C49              Desplaza_izquierda
 501+ 9C49
 502+ 9C49 3A 13 8C     	ld a,(Vel_left)
 503+ 9C4C 47           	ld b,a
 504+ 9C4D 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C50 23           1 inc hl
 506+ 9C51 23           	inc hl
 507+ 9C52 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C54 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C57 CD 1A 91     	call Extrae_address
 510+ 9C5A 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C5D
 512+ 9C5D              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C5D
 514+ 9C5D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C5D              ; Cuántos movimientos hemos hecho ??
 516+ 9C5D              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C5D
 518+ 9C5D 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C60 EB           	ex de,hl
 520+ 9C61 A7           	and a
 521+ 9C62 ED 52        	sbc hl,de
 522+ 9C64 CB 3D        	srl l
 523+ 9C66 3E 08        6 ld a,8
 524+ 9C68 95           	sub l
 525+ 9C69 30 1E        	jr nc,3F
 526+ 9C6B
 527+ 9C6B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C6B              ; B="0".
 529+ 9C6B
 530+ 9C6B 04           4 inc b
 531+ 9C6C 3C           	inc a
 532+ 9C6D 20 FC        	jr nz,4B
 533+ 9C6F 78           	ld a,b
 534+ 9C70 08           	ex af,af
 535+ 9C71 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C74 23           5 inc hl
 537+ 9C75 23           	inc hl
 538+ 9C76 10 FC        	djnz 5B
 539+ 9C78 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C7B CD 1A 91     	call Extrae_address
 541+ 9C7E 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C81
 543+ 9C81              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C81              ; _(Posicion_actual).
 545+ 9C81
 546+ 9C81 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C84 35           	dec (hl)
 548+ 9C85 08           	ex af,af
 549+ 9C86 6F           	ld l,a
 550+ 9C87 18 DD        	jr 6B
 551+ 9C89
 552+ 9C89              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C89
 554+ 9C89 47           3 ld b,a
 555+ 9C8A 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C8D 23           2 inc hl
 557+ 9C8E 23           	inc hl
 558+ 9C8F 10 FC        	djnz 2B
 559+ 9C91 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C94 C9           8 ret
 561+ 9C95
 562+ 9C95              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C95              ;
 564+ 9C95              ;	modifica_parametros_1er_DESPLZ
 565+ 9C95              ;
 566+ 9C95              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C95              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C95              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C95
 570+ 9C95 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C98 A7           	and a
 572+ 9C99 20 1E        	jr nz,1F
 573+ 9C9B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C9C 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9C9F 21 FD 8B     	ld hl,Columns
 576+ 9CA2 34           	inc (hl)
 577+ 9CA3 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9CA6 E6 01        	and 1
 579+ 9CA8 20 0F        	jr nz,1F
 580+ 9CAA 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9CAD 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9CAE 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9CB1 CD FD 94     	call Genera_coordenadas
 584+ 9CB4 CD 10 9D     	call Dec_CTRL_DESPLZ
 585+ 9CB7 18 03        	jr 2F
 586+ 9CB9 CD 10 9D     1 call Dec_CTRL_DESPLZ
 587+ 9CBC C9           2 ret
 588+ 9CBD
 589+ 9CBD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CBD
 591+ 9CBD 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CC0 FE F7        	cp $f7
 593+ 9CC2 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CC4 30 2C        	jr nc,3F
 595+ 9CC6
 596+ 9CC6              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CC6
 598+ 9CC6 06 00        	ld b,0
 599+ 9CC8 04           4 inc b
 600+ 9CC9 3C           	inc a
 601+ 9CCA FE F7        	cp $f7
 602+ 9CCC 20 FA        	jr nz,4B
 603+ 9CCE 3E FF        	ld a,$ff
 604+ 9CD0 90           	sub b
 605+ 9CD1 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9CD4 18 1C        	jr 3F
 607+ 9CD6
 608+ 9CD6              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CD6
 610+ 9CD6 21 FD 8B     1 ld hl,Columns
 611+ 9CD9 35           	dec (hl)
 612+ 9CDA AF           	xor a
 613+ 9CDB 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9CDE 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9CE1 E6 01        	and 1
 616+ 9CE3 28 0A        	jr z,2F
 617+ 9CE5 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CE8 2B           	dec hl
 619+ 9CE9 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CEC CD FD 94     	call Genera_coordenadas
 621+ 9CEF
 622+ 9CEF              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CEF
 624+ 9CEF CD 42 91     2 call Inicia_puntero_objeto_izq
 625+ 9CF2 C9           3 ret
 626+ 9CF3
 627+ 9CF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CF3              ;
 629+ 9CF3              ;	19/10/22
 630+ 9CF3              ;
 631+ 9CF3              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CF3              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CF3
 634+ 9CF3 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CF6 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CF8 C9           	ret
 637+ 9CF9
 638+ 9CF9              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CF9              ;
 640+ 9CF9              ;	19/10/22
 641+ 9CF9              ;
 642+ 9CF9              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CF9              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CF9
 645+ 9CF9 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CFC FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CFE C9           	ret
 648+ 9CFF
 649+ 9CFF              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CFF              ;
 651+ 9CFF              ;	24/7/22
 652+ 9CFF              ;
 653+ 9CFF              ;	Inc_CTRL_DESPLZ
 654+ 9CFF              ;
 655+ 9CFF              ;
 656+ 9CFF              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CFF
 658+ 9CFF 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D02 3A 14 8C     	ld a,(Vel_right)
 660+ 9D05 A7           	and a
 661+ 9D06 28 06        	jr z,1F
 662+ 9D08 47           	ld b,a
 663+ 9D09 34           3 inc (hl)
 664+ 9D0A 10 FD        	djnz 3B
 665+ 9D0C 18 01        	jr 2F
 666+ 9D0E 34           1 inc (hl)
 667+ 9D0F C9           2 ret
 668+ 9D10
 669+ 9D10              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D10              ;
 671+ 9D10              ;	5/2/23
 672+ 9D10              ;
 673+ 9D10              ;	Dec_CTRL_DESPLZ
 674+ 9D10              ;
 675+ 9D10              ;
 676+ 9D10              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D10
 678+ 9D10 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D13 3A 13 8C     	ld a,(Vel_left)
 680+ 9D16 A7           	and a
 681+ 9D17 28 06        	jr z,1F
 682+ 9D19 47           	ld b,a
 683+ 9D1A 35           3 dec (hl)
 684+ 9D1B 10 FD        	djnz 3B
 685+ 9D1D 18 01        	jr 2F
 686+ 9D1F 35           1 dec (hl)
 687+ 9D20 C9           2 ret
 688+ 9D21
 689+ 9D21              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D21
 691+ 9D21 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D24 01 1F 00     	ld bc,31
 693+ 9D27 A7           	and a
 694+ 9D28 ED 4A        	adc hl,bc
 695+ 9D2A 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9D2D 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D30 CB C6        	set 0,(hl)
 698+ 9D32 C9           	ret
 699+ 9D33
 700+ 9D33              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D33
 702+ 9D33 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D36 01 1F 00     	ld bc,31
 704+ 9D39 A7           	and a
 705+ 9D3A ED 42        	sbc hl,bc
 706+ 9D3C 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D3F 21 FB 8B     	ld hl,Ctrl_0
 708+ 9D42 CB CE        	set 1,(hl)
 709+ 9D44 C9           	ret
 710+ 9D45
 711+ 9D45              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D45
 713+ 9D45 24           Reaparece_abajo inc h
 714+ 9D46 01 E0 17     	ld bc,$17e0
 715+ 9D49 A7           	and a
 716+ 9D4A ED 4A        	adc hl,bc
 717+ 9D4C 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D4F 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D52 CB D6        	set 2,(hl)
 720+ 9D54 C9           	ret
 721+ 9D55
 722+ 9D55              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D55
 724+ 9D55 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D58 A7           	and a
 726+ 9D59 ED 42        	sbc hl,bc
 727+ 9D5B 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D5E 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D61 CB DE        	set 3,(hl)
 730+ 9D63 C9           	ret
 731+ 9D64
 732+ 9D64              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D64              ;
 734+ 9D64              ;	15/07/23
 735+ 9D64
 736+ 9D64              Reinicio
 737+ 9D64
 738+ 9D64              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D64
 740+ 9D64 AF           	xor a
 741+ 9D65 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D68 CD 86 9D     	call Limpia_contenido_hl
 743+ 9D6B
 744+ 9D6B 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D6E CD 86 9D     	call Limpia_contenido_hl
 746+ 9D71
 747+ 9D71 CD 67 93     	call Situa_Puntero_indice_mov
 748+ 9D74 CD 85 9E     	call Inicia_Puntero_mov
 749+ 9D77
 750+ 9D77 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D7A 06 05        	ld b,5
 752+ 9D7C 77           1 ld (hl),a
 753+ 9D7D 23           	inc hl
 754+ 9D7E 10 FC        	djnz 1B
 755+ 9D80
 756+ 9D80 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D83 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D85
 759+ 9D85 C9           	ret
 760+ 9D86
 761+ 9D86 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D87 23           	inc hl
 763+ 9D88 77           	ld (hl),a
 764+ 9D89 C9           	ret
 765+ 9D8A
 766+ 9D8A              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D8A              ;
 768+ 9D8A              ;	18/6/24
 769+ 9D8A              ;
 770+ 9D8A
 771+ 9D8A              Amadeus_a_izquierda
 772+ 9D8A
 773+ 9D8A              ;	Actualiza contador de movimientos.
 774+ 9D8A
 775+ 9D8A 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D8D 35           	dec (hl)
 777+ 9D8E 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D90
 779+ 9D90 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D93 2B           	dec hl
 781+ 9D94 2B           	dec hl
 782+ 9D95 2B           	dec hl
 783+ 9D96 2B           	dec hl
 784+ 9D97 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D9A
 786+ 9D9A 21 65 8C     	ld hl,Ctrl_3
 787+ 9D9D CB EE        	set 5,(hl)
 788+ 9D9F
 789+ 9D9F C9           	ret
 790+ 9DA0
 791+ 9DA0 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9DA1 C9           	ret
 793+ 9DA2
 794+ 9DA2
 795+ 9DA2              Amadeus_a_derecha
 796+ 9DA2
 797+ 9DA2              ;	Actualiza contador de movimientos.
 798+ 9DA2
 799+ 9DA2 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9DA5 34           	inc (hl)
 801+ 9DA6 3E 7A        	ld a,$7a
 802+ 9DA8 BE           	cp (hl)
 803+ 9DA9 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9DAB
 805+ 9DAB 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9DAE 23           	inc hl
 807+ 9DAF 23           	inc hl
 808+ 9DB0 23           	inc hl
 809+ 9DB1 23           	inc hl
 810+ 9DB2 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DB5
 812+ 9DB5 21 65 8C     	ld hl,Ctrl_3
 813+ 9DB8 CB EE        	set 5,(hl)
 814+ 9DBA C9           	ret
 815+ 9DBB
 816+ 9DBB 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DBC C9           	ret
# file closed: Direcciones.asm
2133  9DBD              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DBD              ; ----- ----- ----- ----- -----
   2+ 9DBD              ;
   3+ 9DBD              ;   28/12/23
   4+ 9DBD
   5+ 9DBD              Movimiento
   6+ 9DBD
   7+ 9DBD              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DBD
   9+ 9DBD 3A FA 8B         ld a,(Ctrl_2)
  10+ 9DC0 CB 57            bit 2,a
  11+ 9DC2 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DC4
  13+ 9DC4 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9DC7 7E               ld a,(hl)
  15+ 9DC8
  16+ 9DC8              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DC8
  18+ 9DC8              Inicia_desplazamiento.
  19+ 9DC8
  20+ 9DC8              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DC8
  22+ 9DC8 CD BB 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DCB
  24+ 9DCB              ; Iniciamos (Repetimos_mov).
  25+ 9DCB
  26+ 9DCB 7E               ld a,(hl)
  27+ 9DCC E6 0F            and $0f
  28+ 9DCE 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9DD1 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DD4
  31+ 9DD4              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DD4
  33+ 9DD4 23               inc hl
  34+ 9DD5 7E               ld a,(hl)
  35+ 9DD6 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9DD9 2B               dec hl
  37+ 9DDA
  38+ 9DDA 21 FA 8B         ld hl,Ctrl_2
  39+ 9DDD CB D6            set 2,(hl)
  40+ 9DDF
  41+ 9DDF              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DDF              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DDF
  44+ 9DDF              Desplazamiento_iniciado
  45+ 9DDF
  46+ 9DDF CD 8F 9E         call Aplica_desplazamiento
  47+ 9DE2
  48+ 9DE2              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DE2
  50+ 9DE2 3A 65 8C         ld a,(Ctrl_3)
  51+ 9DE5 CB 4F            bit 1,a
  52+ 9DE7 C0               ret nz
  53+ 9DE8
  54+ 9DE8 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DEB 35               dec (hl)
  56+ 9DEC C0               ret nz
  57+ 9DED
  58+ 9DED              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DED              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DED              ; Analiza (Cola_de_desplazamiento).
  61+ 9DED
  62+ 9DED 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DF0 A7               and a
  64+ 9DF1 CC E4 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DF4 28 30            jr z,Reinicia_el_movimiento
  66+ 9DF6
  67+ 9DF6 FE FF            cp $ff
  68+ 9DF8 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DFA
  70+ 9DFA FE FE            cp $fe
  71+ 9DFC CC 69 9E         call z,Fijamos_bucle
  72+ 9DFF 28 25            jr z,Reinicia_el_movimiento
  73+ 9E01
  74+ 9E01 FE FD            cp $fd
  75+ 9E03 20 11            jr nz,1F
  76+ 9E05
  77+ 9E05              ; ---
  78+ 9E05              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E05
  80+ 9E05 3A FA 8B         ld a,(Ctrl_2)
  81+ 9E08 CB 5F            bit 3,a
  82+ 9E0A 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E0C
  84+ 9E0C              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E0C
  86+ 9E0C 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E0F CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E11
  89+ 9E11 CD 7A 9E         call Inicia_Repetimos_movimiento
  90+ 9E14 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E16              ; ---
  92+ 9E16
  93+ 9E16 FE 01        1 cp 1
  94+ 9E18 CA 53 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E1B
  96+ 9E1B 3D               dec a
  97+ 9E1C 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9E1F
  99+ 9E1F 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E22 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E25              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E25 C9               ret
 103+ 9E26
 104+ 9E26              Reinicia_el_movimiento
 105+ 9E26
 106+ 9E26 3A FA 8B         ld a,(Ctrl_2)
 107+ 9E29 CB 5F            bit 3,a
 108+ 9E2B 28 1B            jr z,2F
 109+ 9E2D
 110+ 9E2D              ; (Cola_de_desplazamiento)="254".
 111+ 9E2D
 112+ 9E2D 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E30 35               dec (hl)
 114+ 9E31 20 15            jr nz,2F
 115+ 9E33
 116+ 9E33              ; Fin de las repeticiones del último movimiento.
 117+ 9E33
 118+ 9E33 21 FA 8B         ld hl,Ctrl_2
 119+ 9E36 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E38
 121+ 9E38 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9E3B 23               inc hl
 123+ 9E3C 23               inc hl
 124+ 9E3D 23               inc hl
 125+ 9E3E 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E41              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E41 7E               ld a,(hl)
 128+ 9E42 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9E45
 130+ 9E45 C3 ED 9D         jp Cola
 131+ 9E48
 132+ 9E48 CD 85 9E     2 call Inicia_Puntero_mov
 133+ 9E4B
 134+ 9E4B 21 FA 8B         ld hl,Ctrl_2
 135+ 9E4E CB 96            res 2,(hl)
 136+ 9E50
 137+ 9E50 C3 BD 9D         jp Movimiento
 138+ 9E53
 139+ 9E53              Siguiente_desplazamiento
 140+ 9E53
 141+ 9E53              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E53              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E53
 144+ 9E53 21 FA 8B         ld hl,Ctrl_2
 145+ 9E56 CB 96            res 2,(hl)
 146+ 9E58
 147+ 9E58 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E5B 23               inc hl
 149+ 9E5C 23               inc hl
 150+ 9E5D 22 21 8C         ld (Puntero_mov),hl
 151+ 9E60
 152+ 9E60 7E               ld a,(hl)
 153+ 9E61 A7               and a
 154+ 9E62 CC E4 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E65 CA 26 9E         jp z,Reinicia_el_movimiento
 156+ 9E68
 157+ 9E68 C9               ret
 158+ 9E69
 159+ 9E69              ; Subrutinas -----------------------------------------
 160+ 9E69              ; ---------- --------- --------- ---------- ----------
 161+ 9E69              ;
 162+ 9E69              ;   24/07/23
 163+ 9E69              ;
 164+ 9E69              ;   Fijamos_bucle
 165+ 9E69              ;
 166+ 9E69              ;
 167+ 9E69
 168+ 9E69              Fijamos_bucle
 169+ 9E69
 170+ 9E69 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E6C 3C               inc a
 172+ 9E6D 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E70
 174+ 9E70 CD E4 9E         call Incrementa_Puntero_indice_mov
 175+ 9E73 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E76 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E79 C9               ret
 178+ 9E7A
 179+ 9E7A              ; ---------- --------- --------- ---------- ----------
 180+ 9E7A              ;
 181+ 9E7A              ;   07/7/23
 182+ 9E7A              ;
 183+ 9E7A              ;   Inicia_Repetimos_movimiento
 184+ 9E7A              ;
 185+ 9E7A              ;
 186+ 9E7A
 187+ 9E7A              Inicia_Repetimos_movimiento
 188+ 9E7A
 189+ 9E7A              ; Iniciamos (Repetimos_movimiento).
 190+ 9E7A
 191+ 9E7A DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E7E DD 7E 02         ld a,(ix+2)
 193+ 9E81 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E84
 195+ 9E84 C9               ret
 196+ 9E85
 197+ 9E85              ; ---------- --------- --------- ---------- ----------
 198+ 9E85              ;
 199+ 9E85              ;   26/6/23
 200+ 9E85              ;
 201+ 9E85              ;   Inicia_Puntero_mov
 202+ 9E85              ;
 203+ 9E85              ;
 204+ 9E85
 205+ 9E85 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E88 CD 1A 91         call Extrae_address
 207+ 9E8B 22 21 8C         ld (Puntero_mov),hl
 208+ 9E8E C9               ret
 209+ 9E8F
 210+ 9E8F              ; ---------- --------- --------- ---------- ----------
 211+ 9E8F              ;
 212+ 9E8F              ;   27/06/23
 213+ 9E8F              ;
 214+ 9E8F              ;   Aplica_movimiento.
 215+ 9E8F
 216+ 9E8F              Aplica_desplazamiento
 217+ 9E8F
 218+ 9E8F              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E8F
 220+ 9E8F 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E92
 222+ 9E92 7E               ld a,(hl)
 223+ 9E93 E6 F0            and $f0
 224+ 9E95 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E96
 226+ 9E96 CB 7E            bit 7,(hl)
 227+ 9E98 28 03            jr z,1F
 228+ 9E9A CD 71 9A         call Mov_up
 229+ 9E9D 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9EA0 CB 76            bit 6,(hl)
 231+ 9EA2 28 03            jr z,2F
 232+ 9EA4 CD 38 9A         call Mov_down
 233+ 9EA7
 234+ 9EA7              ; Se ha aplicado reinicio ???
 235+ 9EA7              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9EA7
 237+ 9EA7              ;    ld a,(Ctrl_3)
 238+ 9EA7              ;    bit 1,a
 239+ 9EA7              ;    ret nz
 240+ 9EA7
 241+ 9EA7 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9EAA CB 6E            bit 5,(hl)
 243+ 9EAC 28 03            jr z,3F
 244+ 9EAE CD D7 9B         call Mov_left
 245+ 9EB1 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9EB4 CB 66            bit 4,(hl)
 247+ 9EB6 C8               ret z
 248+ 9EB7 CD B4 9A         call Mov_right
 249+ 9EBA C9               ret
 250+ 9EBB
 251+ 9EBB              ; ---------- --------- --------- ---------- ----------
 252+ 9EBB              ;
 253+ 9EBB              ;   26/06/23
 254+ 9EBB              ;
 255+ 9EBB              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EBB
 257+ 9EBB              Ajusta_velocidad_desplazamiento
 258+ 9EBB
 259+ 9EBB              ; 1er byte de la cadena de movimiento.
 260+ 9EBB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EBB
 262+ 9EBB CD D9 9E         call Extrae_nibble_alto
 263+ 9EBE
 264+ 9EBE 32 15 8C         ld (Vel_up),a
 265+ 9EC1 79               ld a,c
 266+ 9EC2 E6 0F            and $0f
 267+ 9EC4 32 16 8C         ld (Vel_down),a
 268+ 9EC7
 269+ 9EC7              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EC7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EC7
 272+ 9EC7 23               inc hl
 273+ 9EC8 CD D9 9E         call Extrae_nibble_alto
 274+ 9ECB
 275+ 9ECB 32 13 8C         ld (Vel_left),a
 276+ 9ECE 79               ld a,c
 277+ 9ECF E6 0F            and $0f
 278+ 9ED1 32 14 8C         ld (Vel_right),a
 279+ 9ED4
 280+ 9ED4              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9ED4
 282+ 9ED4 23               inc hl
 283+ 9ED5 22 21 8C         ld (Puntero_mov),hl
 284+ 9ED8 C9               ret
 285+ 9ED9
 286+ 9ED9 06 04        Extrae_nibble_alto ld b,4
 287+ 9EDB 7E               ld a,(hl)
 288+ 9EDC 4F               ld c,a
 289+ 9EDD E6 F0            and $f0
 290+ 9EDF CB 3F        1 srl a
 291+ 9EE1 10 FC            djnz 1B
 292+ 9EE3 C9               ret
 293+ 9EE4
 294+ 9EE4              ; ---------- --------- --------- ---------- ----------
 295+ 9EE4              ;
 296+ 9EE4              ;   5/7/23
 297+ 9EE4              ;
 298+ 9EE4              ;   Incrementa_Puntero_indice_mov
 299+ 9EE4
 300+ 9EE4              Incrementa_Puntero_indice_mov
 301+ 9EE4
 302+ 9EE4 21 25 8C         ld hl,Incrementa_puntero
 303+ 9EE7 34               inc (hl)
 304+ 9EE8
 305+ 9EE8 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9EEB 01 02 00         ld bc,2
 307+ 9EEE A7               and a
 308+ 9EEF 09               add hl,bc
 309+ 9EF0 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9EF3
 311+ 9EF3 7E               ld a,(hl)
 312+ 9EF4 A7               and a
 313+ 9EF5
 314+ 9EF5              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EF5
 316+ 9EF5              ;    jr z,$
 317+ 9EF5
 318+ 9EF5              ;! Reinicia el Patrón de movimiento.
 319+ 9EF5
 320+ 9EF5 CC FA 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EF8
 322+ 9EF8 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EF9
 324+ 9EF9 C9               ret
 325+ 9EFA
 326+ 9EFA              ; ---------- --------- --------- ---------- ----------
 327+ 9EFA              ;
 328+ 9EFA              ;   15/01/24
 329+ 9EFA              ;
 330+ 9EFA              ;   Inicializa_Puntero_indice_mov
 331+ 9EFA
 332+ 9EFA              Inicializa_Puntero_indice_mov_2
 333+ 9EFA
 334+ 9EFA              ; Existe etiqueta de bucle principal???
 335+ 9EFA
 336+ 9EFA 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EFD 24               inc h
 338+ 9EFE 25               dec h
 339+ 9EFF 28 05            jr z,2F
 340+ 9F01
 341+ 9F01 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9F04 18 14            jr 3F
 343+ 9F06
 344+ 9F06              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F06
 346+ 9F06 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9F09 47               ld b,a
 348+ 9F0A
 349+ 9F0A 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9F0D 2B           1 dec hl
 351+ 9F0E 2B               dec hl
 352+ 9F0F 10 FC            djnz 1B
 353+ 9F11 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9F14
 355+ 9F14 AF               xor a
 356+ 9F15 32 25 8C         ld (Incrementa_puntero),a
 357+ 9F18 18 06            jr 4F
 358+ 9F1A
 359+ 9F1A 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F1D 32 25 8C         ld (Incrementa_puntero),a
 361+ 9F20 C9           4 ret
 362+ 9F21
 363+ 9F21              ; ----------------------------------------------------------------------
 364+ 9F21              ;
 365+ 9F21              ;   24/11/24
 366+ 9F21              ;
 367+ 9F21              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F21
 369+ 9F21 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F24 CD 76 94         call Calcula_salto_en_BC
 371+ 9F27 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F2A A7               and a
 373+ 9F2B ED 4A            adc hl,bc
 374+ 9F2D C9               ret
 375+ 9F2E
 376+ 9F2E              ; ----------------------------------------------------------------------
 377+ 9F2E              ;
 378+ 9F2E              ;   24/11/24
 379+ 9F2E              ;
 380+ 9F2E              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F2E              ;
 382+ 9F2E              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F2E
 384+ 9F2E 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F2F 23               inc hl
 386+ 9F30 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F31 DD 71 09         ld (ix+9),c
 388+ 9F34 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F37 C9               ret
 390+ 9F38
# file closed: Movimiento.asm
2134  9F38              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F38              ; --------------------------------------------------------------------------------------
   2+ 9F38              ;
   3+ 9F38              ;   25/10/24
   4+ 9F38              ;
   5+ 9F38
   6+ 9F38              Pinta_disparos_Entidades
   7+ 9F38
   8+ 9F38 ED 73 3D 8C      ld (Stack),sp
   9+ 9F3C ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F40
  11+ 9F40 3E 02            ld a,2
  12+ 9F42 08               ex af,af
  13+ 9F43
  14+ 9F43 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F45              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F45              ;                                     _ No encontraría "0".
  17+ 9F45 FD E1        4 pop iy
  18+ 9F47 D1               pop de                          ; 1er .db IYL
  19+ 9F48              ;                                   ; 2º  .db IYH
  20+ 9F48              ;                                   ; 3er .db E.
  21+ 9F48              ;   Album vacío ???
  22+ 9F48
  23+ 9F48 FD 7D            ld a,iyl
  24+ 9F4A FD 84            add iyh
  25+ 9F4C 83               add e
  26+ 9F4D 28 1F            jr z,1F
  27+ 9F4F
  28+ 9F4F              ;   Imprime album, (contiene datos).
  29+ 9F4F
  30+ 9F4F 3B               dec sp
  31+ 9F50
  32+ 9F50 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F51
  34+ 9F51              ; Imprime el 1er scanline del disparo.
  35+ 9F51
  36+ 9F51 FD 7D            ld a,iyl
  37+ 9F53 AE               xor (hl)
  38+ 9F54 77               ld (hl),a
  39+ 9F55
  40+ 9F55 2C               inc l
  41+ 9F56
  42+ 9F56 FD 7C            ld a,iyh
  43+ 9F58 AE               xor (hl)
  44+ 9F59 77               ld (hl),a
  45+ 9F5A
  46+ 9F5A 2C               inc l
  47+ 9F5B
  48+ 9F5B 7B               ld a,e
  49+ 9F5C AE               xor (hl)
  50+ 9F5D 77               ld (hl),a
  51+ 9F5E
  52+ 9F5E              ; Imprime el 2º scanline del disparo.
  53+ 9F5E
  54+ 9F5E E1               pop hl
  55+ 9F5F
  56+ 9F5F FD 7D            ld a,iyl
  57+ 9F61 AE               xor (hl)
  58+ 9F62 77               ld (hl),a
  59+ 9F63
  60+ 9F63 2C               inc l
  61+ 9F64
  62+ 9F64 FD 7C            ld a,iyh
  63+ 9F66 AE               xor (hl)
  64+ 9F67 77               ld (hl),a
  65+ 9F68
  66+ 9F68 2C               inc l
  67+ 9F69
  68+ 9F69 7B               ld a,e
  69+ 9F6A AE               xor (hl)
  70+ 9F6B 77               ld (hl),a
  71+ 9F6C
  72+ 9F6C 10 D7            djnz 4B
  73+ 9F6E
  74+ 9F6E 08           1 ex af,af
  75+ 9F6F 3D               dec a
  76+ 9F70 20 05            jr nz,2F
  77+ 9F72
  78+ 9F72 ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F76 C9               ret
  80+ 9F77
  81+ 9F77 ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F7B 08               ex af,af
  83+ 9F7C 18 C5            jr 3B
  84+ 9F7E
  85+ 9F7E              ; --------------------------------------------------------------------------------------
  86+ 9F7E              ;
  87+ 9F7E              ;   30/10/24
  88+ 9F7E              ;
  89+ 9F7E
  90+ 9F7E              Motor_de_disparos_entidades
  91+ 9F7E
  92+ 9F7E 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F81 FE 07            cp 7
  94+ 9F83 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F84
  96+ 9F84 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F86 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F89
  99+ 9F89 CD 1A 91     1 call Extrae_address
 100+ 9F8C 1C               inc e
 101+ 9F8D 1C               inc e
 102+ 9F8E ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F92
 104+ 9F92               ; Caja vacía ???
 105+ 9F92
 106+ 9F92 2D               dec l
 107+ 9F93 7E               ld a,(hl)
 108+ 9F94 A7               and a
 109+ 9F95 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F97
 111+ 9F97              ; --- Trabajamos con caja:
 112+ 9F97
 113+ 9F97 2C               inc l
 114+ 9F98
 115+ 9F98              ; --- Existe posibilidad de impacto ???
 116+ 9F98
 117+ 9F98 CB 46            bit 0,(hl)
 118+ 9F9A C4 DA 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F9D 20 37            jr nz,3F
 120+ 9F9F
 121+ 9F9F CD 61 A0         call Rota_disparo_si_procede
 122+ 9FA2
 123+ 9FA2              ; ------------------------------------------------------------
 124+ 9FA2
 125+ 9FA2 2D               dec l
 126+ 9FA3 2D               dec l
 127+ 9FA4
 128+ 9FA4 CD 1A 91         call Extrae_address
 129+ 9FA7
 130+ 9FA7              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9FA7              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9FA7
 133+ 9FA7 3A 67 8C         ld a,(Ctrl_5)
 134+ 9FAA CB 57            bit 2,a
 135+ 9FAC 28 09            jr z,4F
 136+ 9FAE
 137+ 9FAE CB 97            res 2,a
 138+ 9FB0 32 67 8C         ld (Ctrl_5),a
 139+ 9FB3 2C               inc l
 140+ 9FB4 2C               inc l
 141+ 9FB5 18 0C            jr 5F
 142+ 9FB7
 143+ 9FB7 CB 5F        4 bit 3,a
 144+ 9FB9 28 08            jr z,5F
 145+ 9FBB
 146+ 9FBB CB 9F            res 3,a
 147+ 9FBD 32 67 8C         ld (Ctrl_5),a
 148+ 9FC0 2D               dec l
 149+ 9FC1 2D               dec l
 150+ 9FC2 2D               dec l
 151+ 9FC3
 152+ 9FC3              ; ---------------------------------------------------------------------
 153+ 9FC3
 154+ 9FC3              ;! Velocidad del disparo de entidades.
 155+ 9FC3
 156+ 9FC3 CD F2 99     5 call NextScan
 157+ 9FC6 CD F2 99         call NextScan
 158+ 9FC9
 159+ 9FC9              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FC9
 161+ 9FC9 CD 3E A0         call Fin_de_disparo_de_entidad
 162+ 9FCC
 163+ 9FCC EB               ex de,hl
 164+ 9FCD
 165+ 9FCD 73               ld (hl),e
 166+ 9FCE 23               inc hl
 167+ 9FCF 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FD0
 169+ 9FD0 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FD3 18 02            jr 2F
 171+ 9FD5
 172+ 9FD5 C9               ret
 173+ 9FD6
 174+ 9FD6 EB           3 ex de,hl
 175+ 9FD7 10 B0        2 djnz 1B
 176+ 9FD9
 177+ 9FD9 C9               ret
 178+ 9FDA
 179+ 9FDA              ; ------------- ------------- ------------
 180+ 9FDA              ;
 181+ 9FDA              ;   1/11/24
 182+ 9FDA
 183+ 9FDA              Comprueba_impacto_con_Amadeus
 184+ 9FDA
 185+ 9FDA              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FDA              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FDA
 188+ 9FDA              ;   Modificamos registros, así que guardamos ...
 189+ 9FDA
 190+ 9FDA C5               push bc
 191+ 9FDB E5               push hl
 192+ 9FDC D5               push de
 193+ 9FDD
 194+ 9FDD 2D               dec l
 195+ 9FDE 2D               dec l
 196+ 9FDF
 197+ 9FDF CD 1A 91         call Extrae_address
 198+ 9FE2
 199+ 9FE2 3A B8 89         ld a,(CX_Amadeus)
 200+ 9FE5 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FE6
 202+ 9FE6 7D               ld a,l
 203+ 9FE7 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FE9
 205+ 9FE9 06 03            ld b,3
 206+ 9FEB
 207+ 9FEB B9           1 cp c
 208+ 9FEC 28 15            jr z,Coincidencia
 209+ 9FEE 0C               inc c
 210+ 9FEF 10 FA            djnz 1B
 211+ 9FF1
 212+ 9FF1 0D               dec c
 213+ 9FF2 0D               dec c
 214+ 9FF3 0D               dec c
 215+ 9FF4
 216+ 9FF4 3C               inc a
 217+ 9FF5 B9               cp c
 218+ 9FF6 28 0B            jr z,Coincidencia
 219+ 9FF8
 220+ 9FF8 3C               inc a
 221+ 9FF9 B9               cp c
 222+ 9FFA 28 07            jr z,Coincidencia
 223+ 9FFC
 224+ 9FFC D1           2 pop de
 225+ 9FFD E1               pop hl
 226+ 9FFE C1               pop bc
 227+ 9FFF
 228+ 9FFF              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FFF
 230+ 9FFF CB 86            res 0,(hl)
 231+ A001 AF               xor a                       ; Z before RET.
 232+ A002 C9               ret
 233+ A003
 234+ A003              Coincidencia
 235+ A003
 236+ A003              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ A003              ;   Existe posibilidad de impacto.
 238+ A003              ;   Vamos a averiguarlo ...
 239+ A003
 240+ A003 1D               dec e
 241+ A004 1D               dec e
 242+ A005 1D               dec e
 243+ A006
 244+ A006              ; DE en Puntero_objeto del disparo.
 245+ A006              ; HL en Puntero_de_impresión del disparo.
 246+ A006
 247+ A006              ; Comparador:
 248+ A006
 249+ A006 06 03            ld b,3
 250+ A008
 251+ A008 1A           3 ld a,(de)
 252+ A009 4F               ld c,a
 253+ A00A A6               and (hl)
 254+ A00B B9               cp c
 255+ A00C 20 06            jr nz,Amadeus_impactado
 256+ A00E
 257+ A00E 2C               inc l
 258+ A00F 1C               inc e
 259+ A010
 260+ A010 10 F6            djnz 3B
 261+ A012
 262+ A012 18 E8            jr 2B
 263+ A014
 264+ A014              Amadeus_impactado
 265+ A014
 266+ A014              ; Borramos disparo.
 267+ A014
 268+ A014 D1               pop de
 269+ A015 E1               pop hl
 270+ A016
 271+ A016 E5               push hl
 272+ A017 D5               push de
 273+ A018
 274+ A018 CD CC A0         call Borra_6_bytes
 275+ A01B
 276+ A01B 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A01E 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A01F
 279+ A01F              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A01F
 281+ A01F 21 BB 89         ld hl,Impacto_Amadeus
 282+ A022 36 01            ld (hl),1
 283+ A024
 284+ A024              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A024              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A024
 287+ A024 3A BC 89         ld a,(p.imp.amadeus)
 288+ A027 FE DE            cp $de
 289+ A029 20 04            jr nz,1F
 290+ A02B
 291+ A02B 3D               dec a
 292+ A02C 32 BC 89         ld (p.imp.amadeus),a
 293+ A02F
 294+ A02F              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A02F
 296+ A02F 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A032 21 BE 89         ld hl,Pamm_Amadeus
 298+ A035
 299+ A035 73               ld (hl),e
 300+ A036 23               inc hl
 301+ A037 72               ld (hl),d
 302+ A038
 303+ A038 D1               pop de
 304+ A039 E1               pop hl
 305+ A03A C1               pop bc
 306+ A03B
 307+ A03B AF               xor a
 308+ A03C 3C               inc a               ; NZ before RET.
 309+ A03D C9               ret
 310+ A03E
 311+ A03E              ; ------------- ------------- ------------
 312+ A03E              ;
 313+ A03E              ;   31/10/24
 314+ A03E
 315+ A03E              Fin_de_disparo_de_entidad
 316+ A03E
 317+ A03E              ; Estamos en zona de Amadeus ??
 318+ A03E
 319+ A03E 7C               ld a,h
 320+ A03F FE 54            cp $54
 321+ A041 38 0D            jr c,1F
 322+ A043
 323+ A043 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A044
 325+ A044 5D               ld e,l
 326+ A045 54               ld d,h
 327+ A046
 328+ A046 21 E0 57         ld hl,$57e0
 329+ A049 ED 52            sbc hl,de
 330+ A04B
 331+ A04B 38 6F            jr c,Elimina_disparo_entidad
 332+ A04D
 333+ A04D 6B               ld l,e
 334+ A04E 62               ld h,d
 335+ A04F
 336+ A04F D1               pop de
 337+ A050
 338+ A050 7C           1 ld a,h
 339+ A051 FE 50            cp $50
 340+ A053 D8               ret c
 341+ A054
 342+ A054 7D               ld a,l
 343+ A055 FE C0            cp $c0
 344+ A057 D8               ret c
 345+ A058
 346+ A058              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A058              ; Así podremos comprobar si hay colisión más adelante.
 348+ A058
 349+ A058 1C               inc e
 350+ A059 1C               inc e
 351+ A05A
 352+ A05A EB               ex de,hl
 353+ A05B CB C6            set 0,(hl)
 354+ A05D EB               ex de,hl
 355+ A05E
 356+ A05E 1D               dec e
 357+ A05F 1D               dec e
 358+ A060
 359+ A060 C9               ret
 360+ A061
 361+ A061              ; ----------------------------------------------------------
 362+ A061              ;
 363+ A061              ;   08/10/24
 364+ A061
 365+ A061              ;   Estructura de un disparo de entidades.
 366+ A061
 367+ A061              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A061              ; 	defw 0											; Puntero de impresión.
 369+ A061              ;	defw 0											; Control.
 370+ A061
 371+ A061              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A061              ;   _de la entidad en el momento de disparar.
 373+ A061
 374+ A061              ;   El byte alto muestra la siguiente información:
 375+ A061              ;
 376+ A061              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A061              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A061              ;
 379+ A061              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A061              ;
 381+ A061              ;                        10xx ..... Izquierda.
 382+ A061              ;                        01xx ..... Derecha.
 383+ A061              ;                        00xx ..... Recto.
 384+ A061
 385+ A061              Rota_disparo_si_procede
 386+ A061
 387+ A061              ;   Nos situamos en el byte alto de (Control).
 388+ A061
 389+ A061 CB 76            bit 6,(hl)
 390+ A063 20 2D            jr nz,Rota_a_derecha
 391+ A065 CB 7E            bit 7,(hl)
 392+ A067 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A068
 394+ A068              Rota_a_izq
 395+ A068
 396+ A068 E5               push hl
 397+ A069
 398+ A069 7D               ld a,l
 399+ A06A D6 05            sub 5
 400+ A06C 6F               ld l,a
 401+ A06D
 402+ A06D E5               push hl
 403+ A06E FD E1            pop iy
 404+ A070
 405+ A070 A7               and a
 406+ A071
 407+ A071 FD CB 02 16      rl (iy+02)
 408+ A075 FD CB 01 16      rl (iy+01)
 409+ A079 FD CB 00 16      rl (iy+00)
 410+ A07D
 411+ A07D 30 3B            jr nc,Exit
 412+ A07F
 413+ A07F              ; Desplazamiento completo hasta Carry.
 414+ A07F              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A07F
 416+ A07F FD 36 02 03      ld (iy+02),$03
 417+ A083 FD 36 01 00      ld (iy+01),$00
 418+ A087 FD 36 00 00      ld (iy+00),$00
 419+ A08B
 420+ A08B 21 67 8C         ld hl,Ctrl_5
 421+ A08E CB DE            set 3,(hl)
 422+ A090
 423+ A090 18 28            jr Exit
 424+ A092
 425+ A092              Rota_a_derecha
 426+ A092
 427+ A092 E5               push hl
 428+ A093
 429+ A093 7D               ld a,l
 430+ A094 D6 05            sub 5
 431+ A096 6F               ld l,a
 432+ A097
 433+ A097 E5               push hl
 434+ A098 FD E1            pop iy
 435+ A09A
 436+ A09A A7               and a
 437+ A09B
 438+ A09B FD CB 00 1E      rr (iy+00)
 439+ A09F FD CB 01 1E      rr (iy+01)
 440+ A0A3 FD CB 02 1E      rr (iy+02)
 441+ A0A7
 442+ A0A7 30 11            jr nc,Exit
 443+ A0A9
 444+ A0A9              ; Desplazamiento completo hasta Carry.
 445+ A0A9              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A0A9
 447+ A0A9 FD 36 00 01      ld (iy+00),$01
 448+ A0AD FD 36 01 80      ld (iy+01),$80
 449+ A0B1 FD 36 02 00      ld (iy+02),$00
 450+ A0B5
 451+ A0B5 21 67 8C         ld hl,Ctrl_5
 452+ A0B8 CB D6            set 2,(hl)
 453+ A0BA
 454+ A0BA E1           Exit pop hl
 455+ A0BB C9               ret
 456+ A0BC
 457+ A0BC              ; ------------ ----------- ------------
 458+ A0BC              ;
 459+ A0BC              ;   25/9/24
 460+ A0BC
 461+ A0BC              Elimina_disparo_entidad
 462+ A0BC
 463+ A0BC 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0BF 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0C0
 466+ A0C0 E1               pop hl
 467+ A0C1 E5               push hl
 468+ A0C2
 469+ A0C2 2C               inc l
 470+ A0C3 2C               inc l
 471+ A0C4
 472+ A0C4 CD CC A0         call Borra_6_bytes
 473+ A0C7
 474+ A0C7 D1               pop de
 475+ A0C8
 476+ A0C8 21 00 00         ld hl,0
 477+ A0CB
 478+ A0CB C9               ret
 479+ A0CC
 480+ A0CC              ; ----- ----- ----- ----- -----
 481+ A0CC
 482+ A0CC              Borra_6_bytes
 483+ A0CC
 484+ A0CC 16 06            ld d,6                                                    ; Contador
 485+ A0CE AF               xor a                                                     ; Borrador
 486+ A0CF 77           1 ld (hl),a
 487+ A0D0 2D               dec l
 488+ A0D1 15               dec d
 489+ A0D2 20 FB            jr nz,1B
 490+ A0D4
 491+ A0D4 C9               ret
 492+ A0D5
 493+ A0D5              ; --------------------------------------------------------------------------------------
 494+ A0D5              ;
 495+ A0D5              ;   12/10/24
 496+ A0D5              ;
 497+ A0D5
 498+ A0D5              Genera_datos_de_impresion_disparos_Entidades
 499+ A0D5
 500+ A0D5 3E 07            ld a,7
 501+ A0D7 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0D8
 503+ A0D8              ; ---------------
 504+ A0D8
 505+ A0D8              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0D8
 507+ A0D8 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0DB
 509+ A0DB CD 1A 91     1 call Extrae_address
 510+ A0DE
 511+ A0DE 13               inc de
 512+ A0DF 13               inc de
 513+ A0E0
 514+ A0E0 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0E4
 516+ A0E4 2D               dec l
 517+ A0E5 7E               ld a,(hl)
 518+ A0E6 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0E7 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0E9
 521+ A0E9              ; ----- ----- ----- -----
 522+ A0E9
 523+ A0E9 2D               dec l
 524+ A0EA CD 1A 91         call Extrae_address
 525+ A0ED E5               push hl
 526+ A0EE
 527+ A0EE 1D               dec e
 528+ A0EF
 529+ A0EF EB               ex de,hl
 530+ A0F0
 531+ A0F0 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0F1 2D               dec l
 533+ A0F2 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0F3 2D               dec l
 535+ A0F4 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0F5
 537+ A0F5 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0F6
 539+ A0F6              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0F6
 541+ A0F6 FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0FA FD 73 00         ld (iy+0),e
 543+ A0FD FD 70 01         ld (iy+1),b
 544+ A100 FD 71 02         ld (iy+2),c
 545+ A103
 546+ A103 FD 75 03         ld (iy+3),l
 547+ A106 FD 74 04         ld (iy+4),h
 548+ A109
 549+ A109 CD F2 99         call NextScan
 550+ A10C
 551+ A10C FD 75 05         ld (iy+5),l
 552+ A10F FD 74 06         ld (iy+6),h
 553+ A112
 554+ A112 FD E5            push iy
 555+ A114 E1               pop hl
 556+ A115
 557+ A115 3E 07            ld a,7
 558+ A117 85               add l
 559+ A118 6F               ld l,a
 560+ A119
 561+ A119 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A11C
 563+ A11C              ; ----- ----- ----- -----
 564+ A11C
 565+ A11C              Situa_en_siguiente_caja
 566+ A11C
 567+ A11C 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A11D 3D               dec a
 569+ A11E C8               ret z
 570+ A11F
 571+ A11F 08               ex af,af
 572+ A120 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A123 18 B6            jr 1B
 574+ A125
 575+ A125              ; --------------------------------------------------------------------------------------
 576+ A125              ;
 577+ A125              ;   12/10/24
 578+ A125              ;
 579+ A125
 580+ A125              Genera_disparo_de_entidad_maldosa
 581+ A125
 582+ A125              ;   Estructura de un disparo de entidades.
 583+ A125
 584+ A125              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A125              ; 	defw 0											; Puntero de impresión.
 586+ A125              ;	defw 0											; Control.
 587+ A125
 588+ A125              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A125              ;   _de la entidad en el momento de disparar.
 590+ A125
 591+ A125              ;   El byte de control muestra la siguiente información:
 592+ A125
 593+ A125              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A125              ;
 595+ A125              ;                        10xx ..... Izquierda.
 596+ A125              ;                        01xx ..... Derecha.
 597+ A125              ;                        00xx ..... Recto.
 598+ A125
 599+ A125              ;*  Exclusiones.
 600+ A125
 601+ A125              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A125              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A125
 604+ A125 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A128 A7               and a
 606+ A129 C8               ret z
 607+ A12A
 608+ A12A 3A F0 8B         ld a,(Coordenada_y)
 609+ A12D A7               and a
 610+ A12E C8               ret z
 611+ A12F
 612+ A12F 3D               dec a
 613+ A130 C8               ret z
 614+ A131
 615+ A131 FE 10            cp 16
 616+ A133 D0               ret nc
 617+ A134
 618+ A134              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A134              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A134              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A134
 622+ A134 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A137 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A138
 625+ A138              ;   Decrementa el numero de disparos de entidades.
 626+ A138
 627+ A138 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A13B 35               dec (hl)
 629+ A13C
 630+ A13C 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A13F
 632+ A13F CD 1A 91     1 call Extrae_address
 633+ A142
 634+ A142 13               inc de
 635+ A143 13               inc de
 636+ A144
 637+ A144 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A148
 639+ A148              ;   Comprobamos si la caja está vacía.
 640+ A148
 641+ A148 2D               dec l
 642+ A149 7E               ld a,(hl)
 643+ A14A A7               and a
 644+ A14B 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A14D 2C               inc l
 646+ A14E
 647+ A14E              ;   Caja vacía, vamos a generar un disparo.
 648+ A14E              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A14E
 650+ A14E CD 6F A1         call Genera_byte_inclinacion
 651+ A151
 652+ A151 7E               ld a,(hl)
 653+ A152 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A153
 655+ A153 2D               dec l
 656+ A154
 657+ A154 CD 8B A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A157
 659+ A157 70               ld (hl),b
 660+ A158 2D               dec l
 661+ A159 71               ld (hl),c
 662+ A15A
 663+ A15A 2D               dec l
 664+ A15B
 665+ A15B              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A15B
 667+ A15B FD 7E 02         ld a,(iy+02)
 668+ A15E 77               ld (hl),a
 669+ A15F 2D               dec l
 670+ A160
 671+ A160 FD 7E 01         ld a,(iy+01)
 672+ A163 77               ld (hl),a
 673+ A164 2D               dec l
 674+ A165
 675+ A165 FD 7E 00         ld a,(iy+00)
 676+ A168 77               ld (hl),a
 677+ A169
 678+ A169 C9               ret
 679+ A16A
 680+ A16A              ;   --- --- ---
 681+ A16A
 682+ A16A              Situa_en_siguiente_disparo
 683+ A16A
 684+ A16A 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A16D 18 D0            jr 1B
 686+ A16F
 687+ A16F              ; --------------------------------------------------------------------------------------
 688+ A16F              ;
 689+ A16F              ;   09/10/24
 690+ A16F              ;
 691+ A16F
 692+ A16F              Genera_byte_inclinacion
 693+ A16F
 694+ A16F              ; Determina tendencia del disparo.
 695+ A16F
 696+ A16F 3A B8 89         ld a,(CX_Amadeus)
 697+ A172 47               ld b,a
 698+ A173 3A EF 8B         ld a,(Coordenada_X)
 699+ A176 90               sub b
 700+ A177 38 07            jr c,Disparo_a_derecha
 701+ A179
 702+ A179 FE 06        Disparo_a_izquierda cp 6
 703+ A17B
 704+ A17B D8               ret c
 705+ A17C C8               ret z
 706+ A17D
 707+ A17D CB FE            set 7,(hl)
 708+ A17F C9               ret
 709+ A180
 710+ A180 47           Disparo_a_derecha ld b,a
 711+ A181 3E FF            ld a,$ff
 712+ A183 90               sub b
 713+ A184
 714+ A184 FE 05            cp 5
 715+ A186
 716+ A186 D8               ret c
 717+ A187 C8               ret z
 718+ A188
 719+ A188 CB F6            set 6,(hl)
 720+ A18A C9               ret
 721+ A18B
 722+ A18B              ; --------------------------------------------------------------------------------------
 723+ A18B              ;
 724+ A18B              ;   09/10/24
 725+ A18B              ;
 726+ A18B
 727+ A18B              Modifica_puntero_de_impresion
 728+ A18B
 729+ A18B              ;   Puntero de impresión del disparo en BC.
 730+ A18B
 731+ A18B E5               push hl
 732+ A18C
 733+ A18C 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A18F CD F2 99         call NextScan
 735+ A192
 736+ A192 4D               ld c,l
 737+ A193 44               ld b,h
 738+ A194
 739+ A194 E1               pop hl
 740+ A195
 741+ A195 08               ex af,af
 742+ A196 CB 77            bit 6,a
 743+ A198 28 06            jr z,1F
 744+ A19A
 745+ A19A FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A19E 0C               inc c
 747+ A19F C9               ret
 748+ A1A0
 749+ A1A0 CB 7F        1 bit 7,a
 750+ A1A2 28 F6            jr z,2B
 751+ A1A4
 752+ A1A4 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A1A8 0D               dec c
 754+ A1A9
 755+ A1A9 C9               ret
 756+ A1AA
 757+ A1AA              ; --------------------------------------------------------------------------------------
 758+ A1AA              ;
 759+ A1AA              ;   31/08/24
 760+ A1AA              ;
 761+ A1AA
 762+ A1AA              Compara_con_coordenadas_de_disparo
 763+ A1AA
 764+ A1AA 3A F0 8B         ld a,(Coordenada_y)
 765+ A1AD 47               ld b,a
 766+ A1AE 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A1B1 90               sub b
 768+ A1B2
 769+ A1B2              ; A = "0" ok
 770+ A1B2              ; A = "1" ok
 771+ A1B2
 772+ A1B2 28 08            jr z,Comprueba_coordenada_X
 773+ A1B4 3D               dec a
 774+ A1B5 28 05            jr z,Comprueba_coordenada_X
 775+ A1B7
 776+ A1B7              ; A = "$ff" ok
 777+ A1B7
 778+ A1B7 FE FE            cp $fe
 779+ A1B9 28 01            jr z,Comprueba_coordenada_X
 780+ A1BB
 781+ A1BB C9               ret
 782+ A1BC
 783+ A1BC              Comprueba_coordenada_X
 784+ A1BC
 785+ A1BC 3A EF 8B         ld a,(Coordenada_X)
 786+ A1BF 47               ld b,a
 787+ A1C0 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1C3 7E               ld a,(hl)
 789+ A1C4 90               sub b
 790+ A1C5
 791+ A1C5              ; A = "0" ok
 792+ A1C5              ; A = "1" ok
 793+ A1C5
 794+ A1C5 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1C7 3D               dec a
 796+ A1C8 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1CA
 798+ A1CA              ; A = "2" ok
 799+ A1CA
 800+ A1CA 3D               dec a
 801+ A1CB 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1CD
 803+ A1CD              ; A = "$ff"
 804+ A1CD
 805+ A1CD FE FD            cp $fd
 806+ A1CF C0               ret nz
 807+ A1D0
 808+ A1D0              Activa_Impacto_en_entidad
 809+ A1D0
 810+ A1D0              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1D0
 812+ A1D0 3E 02            ld a,2
 813+ A1D2 32 F2 8B         ld (Impacto),a
 814+ A1D5
 815+ A1D5              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1D5
 817+ A1D5 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1D8 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1DB
 820+ A1DB 73               ld (hl),e
 821+ A1DC 23               inc hl
 822+ A1DD 72               ld (hl),d
 823+ A1DE
 824+ A1DE              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1DE
 826+ A1DE 21 6C 8C         ld hl,Impacto2
 827+ A1E1 CB 9E            res 3,(hl)
 828+ A1E3
 829+ A1E3 C9               ret
 830+ A1E4
 831+ A1E4              ; --------------------------------------------------------------------------------------
 832+ A1E4              ;
 833+ A1E4              ;   13/10/24
 834+ A1E4              ;
 835+ A1E4
 836+ A1E4              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1E4
 838+ A1E4              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1E4
 840+ A1E4 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1E7 06 06            ld b,6
 842+ A1E9 AF               xor a
 843+ A1EA 77           1 ld (hl),a
 844+ A1EB 2C               inc l
 845+ A1EC 10 FC            djnz 1B
 846+ A1EE
 847+ A1EE C9               ret
 848+ A1EF
 849+ A1EF              ; --------------------------------------------------------------------------------------
 850+ A1EF              ;
 851+ A1EF              ;   29/09/24
 852+ A1EF              ;
 853+ A1EF
 854+ A1EF              Calcula_bytes_pintado_disparos
 855+ A1EF
 856+ A1EF 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1F2 45               ld b,l
 858+ A1F3 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1F6 7D               ld a,l
 860+ A1F7
 861+ A1F7 90               sub b
 862+ A1F8 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1FB
 864+ A1FB C9               ret
 865+ A1FC
 866+ A1FC              ; --------------------------------------------------------------------------------------
 867+ A1FC              ;
 868+ A1FC              ;   26/10/24
 869+ A1FC              ;
 870+ A1FC              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1FC              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1FC              ;   _disparos que el álbum del FRAME actual).
 873+ A1FC
 874+ A1FC              Limpia_album_de_pintado_disparos_entidades
 875+ A1FC
 876+ A1FC 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1FF 7E               ld a,(hl)
 878+ A200 2D               dec l
 879+ A201 46               ld b,(hl)
 880+ A202 90               sub b
 881+ A203
 882+ A203 D8               ret c
 883+ A204 C8               ret z
 884+ A205
 885+ A205 F5               push af
 886+ A206 80               add b
 887+ A207 77               ld (hl),a
 888+ A208 F1               pop af
 889+ A209
 890+ A209              ; Clean.
 891+ A209
 892+ A209 47           2 ld b,a
 893+ A20A AF               xor a
 894+ A20B 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A20E 77           1 ld (hl),a
 896+ A20F 23               inc hl
 897+ A210 10 FC            djnz 1B
 898+ A212
 899+ A212 C9               ret
 900+ A213
 901+ A213              ; --------------------------------------------------------------------------------------
 902+ A213              ;
 903+ A213              ;   29/09/24
 904+ A213              ;
 905+ A213
 906+ A213              Motor_Disparos_Amadeus
 907+ A213
 908+ A213 21 26 89         ld hl,Disparo_Amad+1
 909+ A216
 910+ A216 34               inc (hl)
 911+ A217 35               dec (hl)
 912+ A218
 913+ A218 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A219
 915+ A219              ;   Esta caja contiene un disparo.
 916+ A219
 917+ A219 CD 20 A2         call Consulta_Impacto
 918+ A21C CC 39 A2         call z,Mueve_disparo_Amadeus
 919+ A21F
 920+ A21F C9               ret
 921+ A220
 922+ A220              ; ----------------------
 923+ A220              ;
 924+ A220              ;
 925+ A220              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A220              ;
 927+ A220              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A220
 929+ A220
 930+ A220              Consulta_Impacto
 931+ A220
 932+ A220              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A220              ;   _sea lo más coherente posible.
 934+ A220
 935+ A220 E5               push hl
 936+ A221 2B               dec hl
 937+ A222 CD 15 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A225 E1               pop hl
 939+ A226 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A227
 941+ A227 C8               ret z
 942+ A228
 943+ A228 3A 6C 8C         ld a,(Impacto2)
 944+ A22B CB DF            set 3,a
 945+ A22D 32 6C 8C         ld (Impacto2),a
 946+ A230
 947+ A230 E5               push hl
 948+ A231 CD 02 A3         call Genera_coordenadas_de_disparo_Amadeus
 949+ A234 E1               pop hl
 950+ A235 CD 52 A2         call Elimina_disparo_Amadeus
 951+ A238
 952+ A238 C9               ret
 953+ A239
 954+ A239              ; ----------------------
 955+ A239              ;
 956+ A239              ;
 957+ A239              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A239
 959+ A239              Mueve_disparo_Amadeus
 960+ A239
 961+ A239 CD 1A 91         call Extrae_address
 962+ A23C
 963+ A23C CD 01 9A         call PreviousScan
 964+ A23F CD 01 9A         call PreviousScan
 965+ A242 CD 01 9A         call PreviousScan
 966+ A245 CD 01 9A         call PreviousScan
 967+ A248
 968+ A248              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A248
 970+ A248 7C               ld a,h
 971+ A249 D6 40            sub $40
 972+ A24B EB               ex de,hl
 973+ A24C 38 04            jr c,Elimina_disparo_Amadeus
 974+ A24E
 975+ A24E               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A24E
 977+ A24E 73               ld (hl),e
 978+ A24F 23               inc hl
 979+ A250 72               ld (hl),d
 980+ A251
 981+ A251 C9               ret
 982+ A252
 983+ A252              ; ----------------------
 984+ A252              ;
 985+ A252              ;   29/9/24
 986+ A252
 987+ A252              Elimina_disparo_Amadeus
 988+ A252
 989+ A252              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A252              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A252
 992+ A252              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A252              ;   	defw 0											; Puntero de impresión.
 994+ A252
 995+ A252 2B               dec hl
 996+ A253 2B               dec hl
 997+ A254
 998+ A254 AF               xor a
 999+ A255 77               ld (hl),a
1000+ A256 23               inc hl
1001+ A257 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A258
1003+ A258 23               inc hl
1004+ A259 77               ld (hl),a
1005+ A25A 23               inc hl
1006+ A25B 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A25C
1008+ A25C 3E 01            ld a,1
1009+ A25E 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A261
1011+ A261 CD E4 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A264
1013+ A264 AF               xor a
1014+ A265 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A266
1016+ A266 C9               ret
1017+ A267
1018+ A267              ; --------------------------------------------------------------------------------------
1019+ A267              ;
1020+ A267              ;   13/10/24
1021+ A267              ;
1022+ A267
1023+ A267              Pinta_disparos_Amadeus
1024+ A267
1025+ A267 06 02            ld b,2
1026+ A269 ED 73 3D 8C      ld (Stack),sp
1027+ A26D ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A271 D1           3 pop de
1029+ A272 14               inc d
1030+ A273 15               dec d
1031+ A274 28 1C            jr z,1F
1032+ A276 E1               pop hl
1033+ A277
1034+ A277              Imprime_scanlines_en_pantalla
1035+ A277
1036+ A277              ; 1er scanline
1037+ A277
1038+ A277 1A               ld a,(de)
1039+ A278 AE               xor (hl)
1040+ A279 77               ld (hl),a
1041+ A27A
1042+ A27A 1C               inc e
1043+ A27B 2C               inc l
1044+ A27C
1045+ A27C 1A               ld a,(de)
1046+ A27D AE               xor (hl)
1047+ A27E 77               ld (hl),a
1048+ A27F
1049+ A27F 1D               dec e
1050+ A280 E1               pop hl
1051+ A281
1052+ A281              ; 2º scanline
1053+ A281
1054+ A281 1A               ld a,(de)
1055+ A282 AE               xor (hl)
1056+ A283 77               ld (hl),a
1057+ A284
1058+ A284 1C               inc e
1059+ A285 2C               inc l
1060+ A286
1061+ A286 1A               ld a,(de)
1062+ A287 AE               xor (hl)
1063+ A288 77               ld (hl),a
1064+ A289
1065+ A289 1D               dec e
1066+ A28A
1067+ A28A 18 06            jr 1F
1068+ A28C
1069+ A28C ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A290 18 DF            jr 3B
1071+ A292 10 F8        1 djnz 2B
1072+ A294 ED 7B 3D 8C      ld sp,(Stack)
1073+ A298 C9               ret
1074+ A299
1075+ A299              ; --------------------------------------------------------------------------------------
1076+ A299              ;
1077+ A299              ;   13/10/24
1078+ A299              ;
1079+ A299              ;   Modifica: HL,BC y DE.
1080+ A299
1081+ A299
1082+ A299              Genera_datos_de_impresion_disparos_Amadeus
1083+ A299
1084+ A299 ED 73 3D 8C      ld (Stack),sp
1085+ A29D 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A2A0 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A2A1
1088+ A2A1 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A2A2 15               dec d
1090+ A2A3
1091+ A2A3 28 0E            jr z,Salida
1092+ A2A5
1093+ A2A5              Genera_scanlines_de_disparo_Amadeus
1094+ A2A5
1095+ A2A5 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A2A6              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A2A6 ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A2AA
1099+ A2AA C1               pop bc
1100+ A2AB C1               pop bc
1101+ A2AC C1               pop bc
1102+ A2AD
1103+ A2AD E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A2AE CD 01 9A         call PreviousScan
1105+ A2B1 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A2B2 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A2B3
1108+ A2B3              Salida
1109+ A2B3
1110+ A2B3 ED 7B 3D 8C      ld sp,(Stack)
1111+ A2B7
1112+ A2B7 C9               ret
1113+ A2B8
1114+ A2B8              ; --------------------------------------------------------------------------------------
1115+ A2B8              ;
1116+ A2B8              ;   12/09/24
1117+ A2B8              ;
1118+ A2B8
1119+ A2B8              Genera_disparo_Amadeus
1120+ A2B8
1121+ A2B8              ;*  Exclusiones.
1122+ A2B8
1123+ A2B8 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A2BB A7               and a
1125+ A2BC C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2BD
1127+ A2BD 3D               dec a
1128+ A2BE 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2C1
1130+ A2C1              Define_puntero_objeto_disparo
1131+ A2C1
1132+ A2C1              ;   Inicializamos contador.
1133+ A2C1
1134+ A2C1 06 00            ld b,0
1135+ A2C3
1136+ A2C3 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A2C6 2C               inc l
1138+ A2C7
1139+ A2C7 3E 80            ld a,$80
1140+ A2C9 BE               cp (hl)
1141+ A2CA 28 0D            jr z,1F
1142+ A2CC
1143+ A2CC 04               inc b
1144+ A2CD
1145+ A2CD 3E 60            ld a,$60
1146+ A2CF BE               cp (hl)
1147+ A2D0 28 07            jr z,1F
1148+ A2D2
1149+ A2D2
1150+ A2D2 04               inc b
1151+ A2D3
1152+ A2D3 3E 18            ld a,$18
1153+ A2D5 BE               cp (hl)
1154+ A2D6 28 01            jr z,1F
1155+ A2D8
1156+ A2D8 04               inc b
1157+ A2D9
1158+ A2D9              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2D9
1160+ A2D9              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2D9
1162+ A2D9 CD 01 9A     1 call PreviousScan
1163+ A2DC
1164+ A2DC 78               ld a,b
1165+ A2DD CB 3F            srl a
1166+ A2DF 28 03            jr z,4F
1167+ A2E1
1168+ A2E1              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2E1 E5               push hl
1170+ A2E2 18 02            jr 5F
1171+ A2E4 2D           4 dec l
1172+ A2E5 E5               push hl
1173+ A2E6              ; ---
1174+ A2E6
1175+ A2E6              ;   Calcula el Puntero_objeto del disparo.
1176+ A2E6
1177+ A2E6 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2E9 04               inc b
1179+ A2EA 05               dec b
1180+ A2EB 28 04            jr z,2F
1181+ A2ED
1182+ A2ED              ;   Nos desplazamos por el índice de disparos.
1183+ A2ED
1184+ A2ED 2C           3 inc l
1185+ A2EE 2C               inc l
1186+ A2EF 10 FC            djnz 3B
1187+ A2F1
1188+ A2F1              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2F1 CD 1A 91     2 call Extrae_address
1190+ A2F4 E5               push hl
1191+ A2F5              ; ---
1192+ A2F5
1193+ A2F5              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2F5              ; HL en el 1er .db de la caja.
1195+ A2F5
1196+ A2F5 21 25 89         ld hl,Disparo_Amad
1197+ A2F8
1198+ A2F8 06 02            ld b,2
1199+ A2FA
1200+ A2FA D1           6 pop de
1201+ A2FB 73               ld (hl),e
1202+ A2FC 23               inc hl
1203+ A2FD 72               ld (hl),d
1204+ A2FE 23               inc hl
1205+ A2FF
1206+ A2FF 10 F9            djnz 6B
1207+ A301
1208+ A301 C9               ret
1209+ A302
1210+ A302              Genera_coordenadas_de_disparo_Amadeus
1211+ A302
1212+ A302              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A302              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A302              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A302
1216+ A302 CD 1A 91         call Extrae_address
1217+ A305 CD FD 94         call Genera_coordenadas
1218+ A308
1219+ A308 3D               dec a
1220+ A309
1221+ A309 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A30C 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A30D 23               inc hl
1224+ A30E 3A EF 8B         ld a,(Coordenada_X)
1225+ A311 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A312
1227+ A312 AF               xor a
1228+ A313 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A314
1230+ A314 C9               ret
1231+ A315
1232+ A315              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A315              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A315              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A315
1236+ A315              ; ----------------------------------------------
1237+ A315              ;
1238+ A315              ;   27/08/24
1239+ A315              ;
1240+ A315              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A315              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A315
1243+ A315              Detecta_impacto_en_disparo_de_Amadeus
1244+ A315
1245+ A315              Extraccion_de_datos
1246+ A315
1247+ A315 13               inc de
1248+ A316 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A317
1250+ A317 5E               ld e,(hl)
1251+ A318 23               inc hl
1252+ A319 56               ld d,(hl)
1253+ A31A
1254+ A31A 23               inc hl
1255+ A31B
1256+ A31B 4E               ld c,(hl)
1257+ A31C 23               inc hl
1258+ A31D 46               ld b,(hl)
1259+ A31E
1260+ A31E C5               push bc
1261+ A31F E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A320
1263+ A320              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A320
1265+ A320 CD 01 9A         call PreviousScan
1266+ A323 CD 01 9A         call PreviousScan
1267+ A326
1268+ A326              Detecta_impacto_
1269+ A326
1270+ A326 1A               ld a,(de)
1271+ A327 A6               and (hl)
1272+ A328 C0               ret nz
1273+ A329
1274+ A329 13               inc de
1275+ A32A 23               inc hl
1276+ A32B
1277+ A32B 1A               ld a,(de)
1278+ A32C A6               and (hl)
1279+ A32D C9               ret
1280+ A32E
1281+ A32E              ; -------------------------------------------------------------------------------------------------------------
1282+ A32E              ;
1283+ A32E              ;   25/11//24
1284+ A32E              ;
1285+ A32E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A32E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A32E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A32E              ;
1289+ A32E              ;   MODIFICA: HL,DE,BC y A.
1290+ A32E              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A32E              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A32E
1293+ A32E              Colision_Entidad_Amadeus
1294+ A32E
1295+ A32E              ; Posible contacto de entidad con Amadeus. ?????
1296+ A32E
1297+ A32E              ; Exclusiones:
1298+ A32E
1299+ A32E 3A 8F 8C         ld a,(Shield)
1300+ A331 A7               and a
1301+ A332 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A333
1303+ A333 21 65 8C         ld hl,Ctrl_3
1304+ A336 CB 76            bit 6,(hl)
1305+ A338 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A339
1307+ A339 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A33C CB 56            bit 2,(hl)
1309+ A33E C0               ret nz
1310+ A33F
1311+ A33F DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1312+ A342 FE 14        	cp $14
1313+ A344 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A345
1315+ A345 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A348 A7               and a
1317+ A349 C0               ret nz
1318+ A34A
1319+ A34A              Genera_coordenadas_X
1320+ A34A
1321+ A34A              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A34A              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A34A
1324+ A34A              ;   Limpiamos almacenes.
1325+ A34A
1326+ A34A              ;    call Limpia_Coordenadas_X
1327+ A34A
1328+ A34A              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A34A
1330+ A34A 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A34D DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1332+ A350 CD 76 A3         call Guarda_coordenadas_X
1333+ A353
1334+ A353              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A353
1336+ A353 3A B8 89         ld a,(CX_Amadeus)
1337+ A356 CD 76 A3         call Guarda_coordenadas_X
1338+ A359
1339+ A359 DD E5            push ix
1340+ A35B CD 8A A3         call Compara_coordenadas_X
1341+ A35E DD E1            pop ix
1342+ A360
1343+ A360 C0               ret nz
1344+ A361
1345+ A361 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1346+ A363 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1347+ A366
1348+ A366 DD 7D            ld a,ixl
1349+ A368 C6 04            add 4
1350+ A36A DD 6F            ld ixl,a
1351+ A36C
1352+ A36C DD 22 6D 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1353+ A370
1354+ A370 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1355+ A373 CB D6            set 2,(hl)
1356+ A375
1357+ A375 C9               ret
1358+ A376
1359+ A376               ; ----- ----- ----- ----- -----
1360+ A376
1361+ A376 77           Guarda_coordenadas_X ld (hl),a
1362+ A377 3C               inc a
1363+ A378 2C               inc l
1364+ A379 77               ld (hl),a
1365+ A37A 3C               inc a
1366+ A37B 2C               inc l
1367+ A37C 77               ld (hl),a
1368+ A37D 2C               inc l
1369+ A37E C9               ret
1370+ A37F
1371+ A37F AF           Limpia_Coordenadas_X xor a
1372+ A380 06 06            ld b,6
1373+ A382 21 74 8C         ld hl,Coordenadas_X_Amadeus
1374+ A385 77           1 ld (hl),a
1375+ A386 23               inc hl
1376+ A387 10 FC            djnz 1B
1377+ A389 C9               ret
1378+ A38A
1379+ A38A              ; ----- ----- ----- ----- -----
1380+ A38A
1381+ A38A              Compara_coordenadas_X
1382+ A38A
1383+ A38A DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1384+ A38E DD 7E 00         ld a,(ix+0)
1385+ A391 CD 9F A3         call Comparando
1386+ A394 C8               ret z
1387+ A395
1388+ A395 3C               inc a
1389+ A396 CD AE A3         call Comparando_1
1390+ A399 C8               ret z
1391+ A39A
1392+ A39A 3C               inc a
1393+ A39B CD AE A3         call Comparando_1
1394+ A39E C9               ret
1395+ A39F
1396+ A39F              ; ----- ----- ----- ----- -----
1397+ A39F              ;
1398+ A39F              ;   4/12/23
1399+ A39F              ;
1400+ A39F              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1401+ A39F
1402+ A39F              Comparando
1403+ A39F
1404+ A39F DD 2C            inc ixl
1405+ A3A1 DD 2C            inc ixl
1406+ A3A3 DD 2C            inc ixl
1407+ A3A5
1408+ A3A5 DD 46 00         ld b,(ix+0)
1409+ A3A8 DD 4E 01         ld c,(ix+1)
1410+ A3AB DD 56 02         ld d,(ix+2)
1411+ A3AE
1412+ A3AE B8           Comparando_1 cp b
1413+ A3AF C8               ret z
1414+ A3B0 B9               cp c
1415+ A3B1 C8               ret z
1416+ A3B2 BA               cp d
1417+ A3B3 C9               ret
1418+ A3B4
1419+ A3B4              ; -----------------------------------------------------------------------
1420+ A3B4              ;
1421+ A3B4              ;   04/7/24
1422+ A3B4              ;
1423+ A3B4
1424+ A3B4              Detecta_colision_nave_entidad
1425+ A3B4
1426+ A3B4              ; Exclusiones:
1427+ A3B4
1428+ A3B4              ; Salimos de la rutina si no hay advertencia de posible colisión.
1429+ A3B4
1430+ A3B4 21 6C 8C     	ld hl,Impacto2
1431+ A3B7 CB 56        	bit 2,(hl)
1432+ A3B9 C8           	ret z
1433+ A3BA
1434+ A3BA              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1435+ A3BA
1436+ A3BA 2A BE 89         ld hl,(Pamm_Amadeus)
1437+ A3BD CD 1A 91         call Extrae_address
1438+ A3C0 54               ld d,h
1439+ A3C1 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1440+ A3C2
1441+ A3C2 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1442+ A3C5 06 10            ld b,16                                        ; Contador de scanlines en B.
1443+ A3C7 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1444+ A3CA
1445+ A3CA C5           1 push bc
1446+ A3CB 06 03            ld b,3
1447+ A3CD E5               push hl
1448+ A3CE
1449+ A3CE              ; .db
1450+ A3CE
1451+ A3CE 1A           3 ld a,(de)
1452+ A3CF A7               and a
1453+ A3D0 20 03            jr nz,4F
1454+ A3D2
1455+ A3D2 2C               inc l
1456+ A3D3 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1457+ A3D5
1458+ A3D5 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1459+ A3D7 28 04            jr z,2F
1460+ A3D9
1461+ A3D9              ; Impacto.
1462+ A3D9 FD 2D            dec iyl
1463+ A3DB 28 22            jr z,5F
1464+ A3DD
1465+ A3DD 1C           2 inc e
1466+ A3DE 10 EE            djnz 3B
1467+ A3E0
1468+ A3E0 E1               pop hl
1469+ A3E1
1470+ A3E1              ; Hay salto de línea en el puntero de impresión ???
1471+ A3E1
1472+ A3E1 7C               ld a,h
1473+ A3E2 D6 57            sub $57
1474+ A3E4 20 0A            jr nz,6F
1475+ A3E6
1476+ A3E6              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1477+ A3E6
1478+ A3E6 2A BC 89         ld hl,(p.imp.amadeus)
1479+ A3E9 3E 20            ld a,$20
1480+ A3EB A7               and a
1481+ A3EC 85               add l
1482+ A3ED 6F               ld l,a
1483+ A3EE 18 01            jr 7F
1484+ A3F0
1485+ A3F0 24           6 inc h
1486+ A3F1
1487+ A3F1 C1           7 pop bc
1488+ A3F2 10 D6            djnz 1B
1489+ A3F4
1490+ A3F4              ;   Fin de la comparativa.
1491+ A3F4
1492+ A3F4              ;   NO HAY COLISIÓN !!!!!.
1493+ A3F4              ;
1494+ A3F4              ;   .db (Impacto) de Amadeus a "0".
1495+ A3F4              ;   RES el bit2 de (Impacto2).
1496+ A3F4              ;
1497+ A3F4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1498+ A3F4              ;   Lo colocamos a "0".
1499+ A3F4
1500+ A3F4 21 6C 8C         ld hl,Impacto2
1501+ A3F7 CB 96            res 2,(hl)
1502+ A3F9 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1503+ A3FC 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1504+ A3FE C9               ret
1505+ A3FF
1506+ A3FF              ;   COLISIÓN !!!!!.
1507+ A3FF              ;
1508+ A3FF              ;   .db (Impacto) de Amadeus a "1".
1509+ A3FF              ;   SET el bit3 de (Impacto2).
1510+ A3FF              ;
1511+ A3FF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1512+ A3FF
1513+ A3FF E1           5 pop hl
1514+ A400 C1               pop bc
1515+ A401
1516+ A401 21 BB 89         ld hl,Impacto_Amadeus
1517+ A404 36 01            ld (hl),1
1518+ A406 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1519+ A409 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1520+ A40B
1521+ A40B 11 C0 87         ld de,Indice_Explosion_entidades
1522+ A40E 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1523+ A411
1524+ A411 23               inc hl
1525+ A412 23               inc hl
1526+ A413 23               inc hl
1527+ A414
1528+ A414 73               ld (hl),e
1529+ A415 23               inc hl
1530+ A416 72               ld (hl),d
1531+ A417
1532+ A417              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1533+ A417
1534+ A417 11 60 88         ld de,Indice_Explosion_Amadeus
1535+ A41A 21 BE 89         ld hl,Pamm_Amadeus
1536+ A41D
1537+ A41D 73               ld (hl),e
1538+ A41E 23               inc hl
1539+ A41F 72               ld (hl),d
1540+ A420
1541+ A420 C9               ret
1542+ A421
1543+ A421
1544+ A421
# file closed: Disparo.asm
2135  A421
2136  A421              	SAVESNA "Pruebas.sna", START
2137  A421
2138  A421
2139  A421
2140  A421
# file closed: Banco_de_pruebas.asm
