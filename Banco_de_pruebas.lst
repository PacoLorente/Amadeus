# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 D3 87  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD 1A 8D     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD 2A 8D     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 DD 87     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B D3 87  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 15/01/24
   6+ 84EC
   7+ 84EC 15 9C        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 C6 85        	defw Caja_1
 109+ 8572 D9 85        	defw Caja_2
 110+ 8574 EC 85        	defw Caja_3
 111+ 8576 FF 85        	defw Caja_4
 112+ 8578 12 86        	defw Caja_5
 113+ 857A 25 86        	defw Caja_6
 114+ 857C 38 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C
 128+ 858C 05           	db %00000101										; (Attr).
 129+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 130+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 131+ 8591
 132+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 133+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 134+ 8595
 135+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 136+ 8597 04           	db 4 												; (Cuad_objeto).
 137+ 8598 02 02 00 00  	db 2,2,0,0											; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 138+ 859C
 139+ 859C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 140+ 859D
 141+ 859D 00 00 00...  	ds 6												; Variables_de_borrado
 142+ 85A3
 143+ 85A3 00 00        	db 0,0												; Variables_de_pintado
 144+ 85A5 00 00        	defw 0												;	" " " " " " "
 145+ 85A7 00 00        	defw 0												;	" " " " " " "
 146+ 85A9 00 00 00 00  	db 0,0,0,0											;	" " " " " " "
 147+ 85AD
 148+ 85AD 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 149+ 85AF
 150+ 85AF 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 151+ 85B1 00 00        	defw 0 												; Contador_de_mov_masticados
 152+ 85B3
 153+ 85B3 40           	db $40												; (Ctrl_0).
 154+ 85B4
 155+ 85B4 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 155+ 85B8 00 00
 156+ 85BA 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 157+ 85BD
 158+ 85BD 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 159+ 85BF 00           	db 0												; (Cola_de_desplazamiento).
 160+ 85C0
 161+ 85C0 00           	db 0 												; (Columnas).
 162+ 85C1 00 00        	defw 0												; (Limite_horizontal).
 163+ 85C3 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 164+ 85C6
 165+ 85C6              ; ---------- ---------- ---------- ---------- ----------
 166+ 85C6
 167+ 85C6              ; Cada caja tiene 19 bytes !!!
 168+ 85C6
 169+ 85C6 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 170+ 85C8 00           	db %00000000										; (Attr).
 171+ 85C9 00           	db 0												; (Cuad_objeto).
 172+ 85CA 00           	db 0												; (Impacto).
 173+ 85CB 00 00 00...  	ds 6												; (Variables_de_borrado).
 174+ 85D1 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 85D3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 85D5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 85D7 00           	db 0												; (Ctrl_0).
 178+ 85D8 00           	db 0												; (Ctrl_2).
 179+ 85D9
 180+ 85D9              ; ---------- ---------- ---------- ---------- ----------
 181+ 85D9
 182+ 85D9 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 183+ 85DB 00           	db %00000000										; (Attr).
 184+ 85DC 00           	db 0												; (Cuad_objeto).
 185+ 85DD 00           	db 0												; (Impacto).
 186+ 85DE 00 00 00...  	ds 6												; (Variables_de_borrado).
 187+ 85E4 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 85E6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 85E8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 85EA 00           	db 0												; (Ctrl_0).
 191+ 85EB 00           	db 0												; (Ctrl_2).
 192+ 85EC
 193+ 85EC              ; ---------- ---------- ---------- ---------- ----------
 194+ 85EC
 195+ 85EC 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 196+ 85EE 00           	db %00000000										; (Attr).
 197+ 85EF 00           	db 0												; (Cuad_objeto).
 198+ 85F0 00           	db 0												; (Impacto).
 199+ 85F1 00 00 00...  	ds 6												; (Variables_de_borrado).
 200+ 85F7 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 85F9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 85FB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 85FD 00           	db 0												; (Ctrl_0).
 204+ 85FE 00           	db 0												; (Ctrl_2).
 205+ 85FF
 206+ 85FF              ; ---------- ---------- ---------- ---------- ----------
 207+ 85FF
 208+ 85FF 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 209+ 8601 00           	db %00000000										; (Attr).
 210+ 8602 00           	db 0												; (Cuad_objeto).
 211+ 8603 00           	db 0												; (Impacto).
 212+ 8604 00 00 00...  	ds 6												; (Variables_de_borrado).
 213+ 860A 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 860C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 860E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8610 00           	db 0												; (Ctrl_0).
 217+ 8611 00           	db 0												; (Ctrl_2).
 218+ 8612
 219+ 8612              ; ---------- ---------- ---------- ---------- ----------
 220+ 8612
 221+ 8612 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 222+ 8614 00           	db %00000000										; (Attr).
 223+ 8615 00           	db 0												; (Cuad_objeto).
 224+ 8616 00           	db 0												; (Impacto).
 225+ 8617 00 00 00...  	ds 6												; (Variables_de_borrado).
 226+ 861D 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 861F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8621 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8623 00           	db 0												; (Ctrl_0).
 230+ 8624 00           	db 0												; (Ctrl_2).
 231+ 8625
 232+ 8625              ; ---------- ---------- ---------- ---------- ----------
 233+ 8625
 234+ 8625 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 235+ 8627 00           	db %00000000										; (Attr).
 236+ 8628 00           	db 0												; (Cuad_objeto).
 237+ 8629 00           	db 0												; (Impacto).
 238+ 862A 00 00 00...  	ds 6												; (Variables_de_borrado).
 239+ 8630 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8632 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 8634 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 8636 00           	db 0												; (Ctrl_0).
 243+ 8637 00           	db 0												; (Ctrl_2).
 244+ 8638
 245+ 8638              ; ---------- ---------- ---------- ---------- ----------
 246+ 8638
 247+ 8638 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 248+ 863A 00           	db %00000000										; (Attr).
 249+ 863B 00           	db 0												; (Cuad_objeto).
 250+ 863C 00           	db 0												; (Impacto).
 251+ 863D 00 00 00...  	ds 6												; (Variables_de_borrado).
 252+ 8643 00 00        	defw 0												; (Puntero_de_impresion).
 253+ 8645 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 254+ 8647 00 00        	defw 0 												; (Contador_de_mov_masticados).
 255+ 8649 00           	db 0												; (Ctrl_0).
 256+ 864A 00           	db 0												; (Ctrl_2).
 257+ 864B
 258+ 864B              ; -------------------------------------------------------------------------------------
 259+ 864B              ;
 260+ 864B              ;	11/1/24
 261+ 864B              ;
 262+ 864B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 263+ 864B              ;
 264+ 864B              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 265+ 864B              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 266+ 864B              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 267+ 864B              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 268+ 864B
 269+ 864B              Indice_de_entidades
 270+ 864B
 271+ 864B 4F 86        	defw Entidad_1
 272+ 864D 61 86        	defw Entidad_2
 273+ 864F
 274+ 864F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 275+ 864F
 276+ 864F              ;	BADSAT, (Satélite malvado).
 277+ 864F
 278+ 864F 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 279+ 8652 02           	db %00000010										; (Attr).
 280+ 8653 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 281+ 8655 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 282+ 8657 40 50        	defw $5040                                      	; (Posicion_inicio).
 283+ 8659 01           	db 1												; (Cuad_objeto).
 284+ 865A 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 285+ 865E 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 286+ 8660 03           	db 3												; (Frames_explosion).
 287+ 8661
 288+ 8661 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 289+ 8664 02           	db %00000010										; (Attr).
 290+ 8665 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 291+ 8667 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 292+ 8669 40 50        	defw $5040                                      	; (Posicion_inicio).
 293+ 866B 01           	db 1												; (Cuad_objeto).
 294+ 866C 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 295+ 8670 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8672 03           	db 3												; (Frames_explosion).
# file closed: Cajas_y_disparos.asm
 105  8673              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8673              ; 13/05/23
   2+ 8673
   3+ 8673              Indice_de_niveles
   4+ 8673
   5+ 8673 81 86        	defw Nivel_1
   6+ 8675 83 86        	defw Nivel_2
   7+ 8677 90 86        	defw Nivel_3
   8+ 8679 A0 86        	defw Nivel_4
   9+ 867B B2 86        	defw Nivel_5
  10+ 867D              ;	...
  11+ 867D              ;	...
  12+ 867D              ;	+ Niveles ...
  13+ 867D
  14+ 867D 00 00        	defw 0
  15+ 867F 00 00        	defw 0
  16+ 8681
  17+ 8681 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 8682 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8683 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8684 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 8688 01 02
  21+ 868A 02 01 01 01  	db 2,1,1,1,1,2
  21+ 868E 01 02
  22+ 8690 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 8691 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 8695 01
  24+ 8696 03 01 01 01  	db 3,1,1,1,1
  24+ 869A 01
  25+ 869B 03 01 01 01  	db 3,1,1,1,1
  25+ 869F 01
  26+ 86A0 11           Nivel_4 db 17									; Nº de entidades.
  27+ 86A1 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 86A5 01
  28+ 86A6 04 01 01 01  	db 4,1,1,1,1
  28+ 86AA 01
  29+ 86AB 04 01 01 01  	db 4,1,1,1,1
  29+ 86AF 01
  30+ 86B0 02 03        	db 2,3
  31+ 86B2 14           Nivel_5 db 20									; Nº de entidades.
  32+ 86B3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 86B7 01
  33+ 86B8 05 01 01 01  	db 5,1,1,1,1
  33+ 86BC 01
  34+ 86BD 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 86C1 01
  35+ 86C2 05 01 01 01  	db 5,1,1,1,1
  35+ 86C6 01
  36+ 86C7
  37+ 86C7              ;---------------------------------------------------------------------------------------------------------------
  38+ 86C7              ;
  39+ 86C7              ;   5/1/24
  40+ 86C7              ;
  41+ 86C7              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 86C7              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 86C7              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 86C7              ;	_en la caja DRAW correspondiente.
  45+ 86C7              ;
  46+ 86C7              ;	MODIFICA: HL,DE y A.
  47+ 86C7              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 86C7
  49+ 86C7              Inicializa_Punteros_de_nivel
  50+ 86C7
  51+ 86C7 21 73 86     	ld hl,Indice_de_niveles
  52+ 86CA 22 FC 87     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 86CD CD AC 8B     	call Extrae_address
  54+ 86D0 7E           	ld a,(hl)
  55+ 86D1 32 C7 87     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 86D4 23           	inc hl
  57+ 86D5 22 FE 87     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 86D8 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 86D9
  60+ 86D9              ;---------------------------------------------------------------------------------------------------------------
  61+ 86D9              ;
  62+ 86D9              ;   5/1/24
  63+ 86D9              ;
  64+ 86D9              ;	Destruye A,BC,HL,DE
  65+ 86D9
  66+ 86D9              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 86D9              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 86D9
  69+ 86D9              Prepara_cajas_de_entidades
  70+ 86D9
  71+ 86D9              ; Preparamos los punteros de las cajas de entidades:
  72+ 86D9
  73+ 86D9 21 70 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 86DC CD AC 8B     	call Extrae_address
  75+ 86DF CD 1C 87     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 86E2              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 86E2
  78+ 86E2 CD 5F 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 86E5
  80+ 86E5 2A FE 87     	ld hl,(Datos_de_nivel)
  81+ 86E8
  82+ 86E8              ; En este punto:
  83+ 86E8              ;
  84+ 86E8              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  85+ 86E8              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  86+ 86E8
  87+ 86E8 C5           1 push bc 										; Guardo el nº de cajas a rellenar.
  88+ 86E9
  89+ 86E9 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  90+ 86EA CD 0A 87     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
  91+ 86ED
  92+ 86ED 21 4B 86     	ld hl,Indice_de_entidades
  93+ 86F0 CD 12 87     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
  94+ 86F3              ;												; Actualiza (Datos_de_entidad) con esa dirección.
  95+ 86F3
  96+ 86F3 CD 26 87     	call Datos_de_entidad_a_caja				; Vuelca los datos de la entidad en la caja.
  97+ 86F6
  98+ 86F6 2A C5 87     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
  99+ 86F9 CD AC 8B     	call Extrae_address
 100+ 86FC CD 1C 87     	call Avanza_caja_de_entidades
 101+ 86FF
 102+ 86FF 2A FE 87     	ld hl,(Datos_de_nivel)
 103+ 8702 23           	inc hl
 104+ 8703 22 FE 87     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 105+ 8706
 106+ 8706 C1           	pop bc
 107+ 8707 10 DF        	djnz 1B
 108+ 8709
 109+ 8709 C9           	ret
 110+ 870A
 111+ 870A              ;	------------------------------------------------------------------------------------
 112+ 870A              ;
 113+ 870A              ;	12/01/24
 114+ 870A              ;
 115+ 870A              ;	INPUTS:	A contiene el (Tipo) de entidad.
 116+ 870A              ;
 117+ 870A              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 118+ 870A              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 119+ 870A
 120+ 870A CB 27        Calcula_salto_en_BC sla a
 121+ 870C D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 122+ 870E 4F           	ld c,a
 123+ 870F 06 00        	ld b,0
 124+ 8711 C9           	ret
 125+ 8712
 126+ 8712              ; ------------------------------------------------------------------
 127+ 8712              ;
 128+ 8712              ;	5/1/24
 129+ 8712              ;
 130+ 8712              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 131+ 8712              ;	Actualiza (Datos_de_entidad) con esa dirección.
 132+ 8712
 133+ 8712 A7           Situa_en_datos_de_entidad and a
 134+ 8713 ED 4A        	adc hl,bc
 135+ 8715 CD AC 8B     	call Extrae_address
 136+ 8718 22 CD 87         ld (Datos_de_entidad),hl
 137+ 871B C9           	ret
 138+ 871C
 139+ 871C              ; ------------------------------------------------------------------
 140+ 871C
 141+ 871C 22 C1 87     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 142+ 871F 13           	inc de
 143+ 8720 13           	inc de
 144+ 8721 EB           	ex de,hl
 145+ 8722 22 C5 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 146+ 8725 C9           	ret
 147+ 8726
 148+ 8726              ; ----------------------------------------------------------------------------------------------------------
 149+ 8726              ;
 150+ 8726              ;	11/1/24
 151+ 8726              ;
 152+ 8726              ;	Vuelca los .db significativos del tipo de entidad a la caja de entidades.
 153+ 8726
 154+ 8726              Datos_de_entidad_a_caja
 155+ 8726
 156+ 8726              ; En este punto:
 157+ 8726              ; HL apunta al 1er .db de DATOS de la entidad que tenemos que volcar en la caja DRAW.
 158+ 8726
 159+ 8726 ED 5B C1 87  	ld de,(Puntero_store_caja) 					; DE apunta al 1er .db de la caja de entidades vacía.
 160+ 872A
 161+ 872A 01 03 00     	ld bc,3
 162+ 872D ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 163+ 872F              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 164+ 872F 01 07 00     	ld bc,7
 165+ 8732 CD 59 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 166+ 8735
 167+ 8735 01 05 00     	ld bc,5
 168+ 8738 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 169+ 873A              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 170+ 873A 01 04 00     	ld bc,4
 171+ 873D CD 59 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 172+ 8740
 173+ 8740 01 07 00     	ld bc,7
 174+ 8743 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 175+ 8745              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 176+ 8745
 177+ 8745 01 13 00     	ld bc,19
 178+ 8748 CD 59 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 179+ 874B
 180+ 874B 01 02 00     	ld bc,2
 181+ 874E ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 182+ 8750              ;												; HL, (origen), apunta ahora al .db (Frames_explosion), hay que situar DE.
 183+ 8750
 184+ 8750 01 08 00     	ld bc,8
 185+ 8753 CD 59 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 186+ 8756
 187+ 8756 7E           	ld a,(hl)
 188+ 8757 12           	ld (de),a 									; Vuelco (Frames_explosion).
 189+ 8758
 190+ 8758 C9           	ret
 191+ 8759
 192+ 8759              ; ---------- -------------- ----------------
 193+ 8759
 194+ 8759 EB           Situa_DE ex de,hl
 195+ 875A A7           	and a
 196+ 875B ED 4A        	adc hl,bc
 197+ 875D EB           	ex de,hl
 198+ 875E C9           	ret
 199+ 875F
 200+ 875F              ;---------------------------------------------------------------------------------------------------------------
 201+ 875F              ;
 202+ 875F              ;	5/1/24
 203+ 875F              ;
 204+ 875F              ;	INICIALIZA (Numero_parcial_de_entidades).
 205+ 875F              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 206+ 875F              ;
 207+ 875F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 208+ 875F              ;
 209+ 875F              ;	(Numero_parcial_de_entidades)="7".
 210+ 875F              ;
 211+ 875F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 212+ 875F              ;
 213+ 875F              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 214+ 875F              ;
 215+ 875F              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 216+ 875F              ;	MODIFICA: A y B.
 217+ 875F              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 218+ 875F
 219+ 875F              Inicializa_Numero_parcial_de_entidades
 220+ 875F
 221+ 875F              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 222+ 875F
 223+ 875F 3A C7 87     	ld a,(Numero_de_entidades)
 224+ 8762 A7           	and a
 225+ 8763
 226+ 8763              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 227+ 8763              ;	jr z,$
 228+ 8763              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 229+ 8763
 230+ 8763 20 03        	jr nz,3F
 231+ 8765
 232+ 8765              ; ---------- ---------- ----------
 233+ 8765
 234+ 8765              ;! RESET para pruebas. Omitir esta línea en modo normal.
 235+ 8765              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 236+ 8765
 237+ 8765 CD C7 86     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 238+ 8768
 239+ 8768              ; ---------- ---------- ----------
 240+ 8768
 241+ 8768 3A C7 87     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 242+ 876B FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 243+ 876D 38 08        	jr c,1F
 244+ 876F
 245+ 876F              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 246+ 876F              ; Actualizamos variables.
 247+ 876F
 248+ 876F 3E 07        	ld a,7
 249+ 8771 32 C8 87     	ld (Numero_parcial_de_entidades),a
 250+ 8774 47           	ld b,a
 251+ 8775 18 04        	jr 2F
 252+ 8777
 253+ 8777              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 254+ 8777              ; (Numero_de_entidades)="0".
 255+ 8777
 256+ 8777 32 C8 87     1 ld (Numero_parcial_de_entidades),a
 257+ 877A 47           	ld b,a
 258+ 877B C9           2 ret
# file closed: Niveles.asm
 106  877C
 107  877C              ; ******************************************************************************************************************************************************************************************
 108  877C              ; Constantes.
 109  877C              ; ******************************************************************************************************************************************************************************************
 110  877C              ;
 111  877C              ; 25/12/23
 112  877C
 113  877C              ;
 114  877C              ; Constantes.
 115  877C              ;
 116  877C
 117  877C              Sprite_vacio equ $f000
 118  877C              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  877C              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  877C              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  877C              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  877C
 123  877C              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  877C              ;														;
 125  877C              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  877C
 127  877C              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  877C              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  877C              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  877C              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  877C              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  877C
 133  877C              ;														; 55 Bytes.
 134  877C              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  877C              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  877C
 137  877C              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  877C
 139  877C              ; ******************************************************************************************************************************************************************************************
 140  877C              ; Variables.
 141  877C              ; ******************************************************************************************************************************************************************************************
 142  877C              ;
 143  877C              ; 12/01/24
 144  877C              ;
 145  877C              ; Variables de DRAW. (Motor principal).
 146  877C              ;
 147  877C              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 148  877C
 149  877C              Variables_DRAW ; -----------------------------------------------------------------------------------------------
 150  877C
 151  877C 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  877D              ;															- Patrón de movimiento.
 153  877D              ;															- Aspecto
 154  877D 00           Filas db 0												; Filas. [DRAW]
 155  877E 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  877F 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8781 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8783 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8784 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8785
 161  8785              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8785
 163  8785 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8786              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8786              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8786 00           Attr db 0												; Atributos de la entidad:
 167  8787
 168  8787              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8787              ;
 170  8787              ;	COLORES: 0 ..... NEGRO
 171  8787              ;    		 1 ..... AZUL
 172  8787              ; 			 2 ..... ROJO
 173  8787              ;			 3 ..... MAGENTA
 174  8787              ; 			 4 ..... VERDE
 175  8787              ; 			 5 ..... CIAN
 176  8787              ;			 6 ..... AMARILLO
 177  8787              ; 			 7 ..... BLANCO
 178  8787
 179  8787 00 00        Indice_Sprite_der defw 0
 180  8789 00 00        Indice_Sprite_izq defw 0
 181  878B 00 00        Puntero_DESPLZ_der defw 0
 182  878D 00 00        Puntero_DESPLZ_izq defw 0
 183  878F
 184  878F 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8791 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8792
 187  8792              ; Variables de objeto. (Características).
 188  8792
 189  8792 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 190  8793 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 191  8794 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 192  8795 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 193  8796
 194  8796 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 195  8797              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 196  8797              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 197  8797 00 00 00...  Variables_de_borrado ds 6
 198  879D
 199  879D              ;Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 200  879D              ;	defw 0
 201  879D              ;	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 202  879D              ;	db 0,0,0,0
 203  879D
 204  879D 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 205  879F              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 206  879F
 207  879F 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 208  87A1
 209  87A1              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 210  87A1              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 211  87A1
 212  87A1 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 213  87A3              ;														; _palabras que componen el "movimiento_masticado".
 214  87A3
 215  87A3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 216  87A3
 217  87A3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  87A4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  87A4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  87A4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  87A4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  87A4              ;
 223  87A4              ; 														DESCRIPCIÖN:
 224  87A4              ;
 225  87A4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  87A4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  87A4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  87A4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  87A4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  87A4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  87A4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  87A4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  87A4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  87A4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  87A4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  87A4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  87A4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  87A4              ;
 239  87A4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  87A4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  87A4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  87A4
 243  87A4              ; Variables de funcionamiento. [DRAW].
 244  87A4
 245  87A4 00           Columnas db 0
 246  87A5 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 247  87A7              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 248  87A7 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 249  87A8
 250  87A8              ; variables de control general.
 251  87A8
 252  87A8 00           Ctrl_2 db 0
 253  87A9              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 254  87A9              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 255  87A9              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 256  87A9              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 257  87A9              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 258  87A9              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 259  87A9              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 260  87A9              ;
 261  87A9              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 262  87A9              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 263  87A9              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 264  87A9              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 265  87A9              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 266  87A9              ;														BIT 4, ???
 267  87A9              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 268  87A9
 269  87A9 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 270  87AA
 271  87AA              ;! 56 Bytes por entidad.
 272  87AA
 273  87AA              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 274  87AA              ;					         		---------;      ;---------
 275  87AA
 276  87AA
 277  87AA              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 278  87AA
 279  87AA              ; Contadores de 16 bits.
 280  87AA
 281  87AA 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 282  87AC 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 283  87AE 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 284  87B0 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 285  87B2
 286  87B2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 287  87B2
 288  87B2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 289  87B4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 290  87B6 00 00        Puntero_indice_mov_bucle defw 0							;
 291  87B8              ;
 292  87B8              ;
 293  87B8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 294  87B9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 295  87B9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 296  87B9 00           Incrementa_puntero_backup db 0
 297  87BA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 298  87BB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 299  87BB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 300  87BC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 301  87BD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 302  87BE              ;
 303  87BE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 304  87BE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 305  87BE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 306  87BE              ;
 307  87BE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 308  87BE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 309  87BE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 310  87BE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 311  87BE              ;
 312  87BE              ;														;	"$ff" ..... Bucle infinito de repetición.
 313  87BE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 314  87BE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 315  87BE              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 316  87BE
 317  87BE 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 318  87BF
 319  87BF              ;														DESCRIPCIÓN:
 320  87BF              ;
 321  87BF              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 322  87BF              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 323  87BF              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 324  87BF              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 325  87BF              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 326  87BF              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 327  87BF
 328  87BF              ;														BIT 3, Recarga de nueva oleada.
 329  87BF              ;														BIT 4, Recarga de nueva oleada.
 330  87BF              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 331  87BF              ;														BIT 6, **** Frame completo.
 332  87BF              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 333  87BF
 334  87BF 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 335  87C1              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 336  87C1              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 337  87C1              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 338  87C1
 339  87C1              ; Gestión de ENTIDADES y CAJAS.
 340  87C1
 341  87C1 00 00        Puntero_store_caja defw 0
 342  87C3 00 00        Puntero_restore_caja defw 0
 343  87C5 00 00        Indice_restore_caja defw 0
 344  87C7 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 345  87C8 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 346  87C9 00           Entidades_en_curso db 0									; ..... ..... .....
 347  87CA 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 348  87CB              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 349  87CB              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 350  87CB              ;														; _ (Numero_de_malotes)="0".
 351  87CB 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 352  87CD 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 353  87CF              ;														; _ puntero (Indice_entidades).
 354  87CF
 355  87CF              ;---------------------------------------------------------------------------------------------------------------
 356  87CF              ;
 357  87CF              ;	11/01/24
 358  87CF              ;
 359  87CF              ;	Álbumes.
 360  87CF
 361  87CF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 362  87D1              ;														; _variable para almacenar lo posición del puntero_
 363  87D1              ; 														; _de pila, SP.
 364  87D1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 365  87D3              ;														; La utiliza la rutina [Extrae_foto_registros].
 366  87D3 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 367  87D5 00 70        Stack_snapshot defw Album_de_fotos
 368  87D7 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 369  87D9
 370  87D9              ;End_Snapshot defw Album_de_fotos
 371  87D9              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 372  87D9 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 373  87DB              ;														; _el snapshot de los registros del siguiente disparo.
 374  87DB              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 375  87DB AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 376  87DD
 377  87DD 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 378  87DE              ;
 379  87DE              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 380  87DE              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 381  87DE              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 382  87DE
 383  87DE 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 384  87DF              ;
 385  87DF              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 386  87DF
 387  87DF              ; Gestión de Disparos.
 388  87DF
 389  87DF 00           Numero_de_disparotes db 0
 390  87E0 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 391  87E2 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 392  87E4 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 393  87E5              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 394  87E5              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 395  87E5 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 396  87E7              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 397  87E7              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 398  87E7              ;														; _produzca colisión.
 399  87E7 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 400  87E9              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 401  87E9 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 402  87EC              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 403  87EC 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 404  87EF              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 405  87EF 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 406  87F0
 407  87F0              ;---------------------------------------------------------------------------------------------------------------
 408  87F0
 409  87F0              ; Relojes y temporizaciones.
 410  87F0
 411  87F0 00           Contador_de_frames db 0
 412  87F1 00           Contador_de_frames_2 db 0
 413  87F2
 414  87F2 04           Clock_explosion db 4
 415  87F3 14           Clock_Entidades_en_curso db 20
 416  87F4 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 417  87F5              ;														; Repite la oleada de entidades.
 418  87F5 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 419  87F6 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 420  87F7 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 421  87F8
 422  87F8 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 423  87F9 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 424  87FA 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 425  87FB
 426  87FB              ;---------------------------------------------------------------------------------------------------------------
 427  87FB
 428  87FB              ; Gestión de NIVELES.
 429  87FB
 430  87FB 00           Nivel db 0												; Nivel actual del juego.
 431  87FC 00 00        Puntero_indice_NIVELES defw 0
 432  87FE 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 433  8800              ; 														; _ que definen el NIVEL.
 434  8800              ; Y todo comienza aquí .....
 435  8800              ;
 436  8800              ; 	INICIO  *************************************************************************************************************************************************************************
 437  8800              ;
 438  8800              ;	5/1/24
 439  8800
 440  8800              START
 441  8800
 442  8800 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 443  8803 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 444  8805 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 445  8807 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 446  8809 F3           	DI
 447  880A
 448  880A 3E 07        	ld a,%00000111
 449  880C CD 35 98     	call Cls
 450  880F
 451  880F CD 89 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 452  8812
 453  8812              ; INICIALIZACIÓN.
 454  8812
 455  8812 CD C7 86     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 456  8815              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 457  8815              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 458  8815              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 459  8815 CD D9 86     4 call Prepara_cajas_de_entidades
 460  8818
 461  8818 CD 14 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 462  881B              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 463  881B CD 39 8C     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 464  881E
 465  881E 21 C8 87     	ld hl,Numero_parcial_de_entidades
 466  8821 46           	ld b,(hl)
 467  8822              ;	inc b
 468  8822              ;	dec b
 469  8822              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 470  8822
 471  8822              ;	INICIA ENTIDADES !!!!!
 472  8822
 473  8822 C5           1 push bc  												; Guardo el contador de entidades.
 474  8823 CD 08 8A     	call Inicia_entidad
 475  8826
 476  8826
 477  8826 18 FE        	jr $
 478  8828
 479  8828
 480  8828 C1           	pop bc
 481  8829 10 F7        	djnz 1B  											; Decremento el contador de entidades.
 482  882B
 483  882B              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 484  882B              ; (Esto se dá cuando se inicia una nueva oleada).
 485  882B
 486  882B              ;	ld a,(Ctrl_1)
 487  882B              ;	bit 3,a
 488  882B              ;	jr nz,5F											; Loop
 489  882B
 490  882B              ; 	INICIA AMADEUS !!!!!
 491  882B
 492  882B              ;3 call Restore_Amadeus
 493  882B              ;	call Inicia_Puntero_objeto
 494  882B              ;	call Draw
 495  882B
 496  882B              ;	call Guarda_movimiento_masticado	;! Provisional
 497  882B
 498  882B              ;	call Guarda_foto_registros
 499  882B              ;	call Guarda_datos_de_borrado_Amadeus
 500  882B
 501  882B              ;	ld de,Amadeus_db
 502  882B              ;	call Store_Amadeus
 503  882B
 504  882B              ; 	INICIA DISPAROS !!!!!
 505  882B
 506  882B              ;	call Inicia_Puntero_Disparo_Entidades
 507  882B              ;	call Inicia_Puntero_Disparo_Amadeus
 508  882B
 509  882B              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 510  882B
 511  882B CD 14 8B     5 call Inicia_punteros_de_cajas
 512  882E CD 39 8C     	call Restore_entidad
 513  8831
 514  8831 3A BE 87     	ld a,(Ctrl_1)
 515  8834 CB 5F        	bit 3,a
 516  8836 28 07        	jr z,6F
 517  8838
 518  8838              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 519  8838
 520  8838 21 BE 87     	ld hl,Ctrl_1
 521  883B CB 9E        	res 3,(hl)
 522  883D 18 07        	jr Main
 523  883F
 524  883F              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 525  883F
 526  883F 21 DD 87     6 ld hl,Ctrl_3
 527  8842 CB C6        	set 0,(hl)											; Frame completo.
 528  8844 FB           	ei
 529  8845 76           	halt
 530  8846
 531  8846              ; ------------------------------------
 532  8846
 533  8846              Main
 534  8846              ;
 535  8846              ;	11/12/23
 536  8846
 537  8846              ; Aparece nueva entidad ???
 538  8846
 539  8846              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 540  8846              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 541  8846              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 542  8846              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 543  8846              ;														; _un 2º bloque.
 544  8846
 545  8846 3E 01        	ld a,1
 546  8848 D3 FE        	out ($fe),a
 547  884A
 548  884A 3A F3 87     	ld a,(Clock_Entidades_en_curso)
 549  884D 47           	ld b,a
 550  884E 3A F0 87     	ld a,(Contador_de_frames)
 551  8851 B8           	cp b
 552  8852 20 18        	jr nz,13F
 553  8854
 554  8854              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 555  8854              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 556  8854
 557  8854 3A C8 87     21 ld a,(Numero_parcial_de_entidades)
 558  8857 47           	ld b,a
 559  8858 3A C9 87     	ld a,(Entidades_en_curso)
 560  885B B8           	cp b
 561  885C 28 0E        	jr z,13F
 562  885E 30 0C        	jr nc,13F
 563  8860
 564  8860 3C           	inc a
 565  8861 32 C9 87     	ld (Entidades_en_curso),a
 566  8864
 567  8864              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 568  8864
 569  8864 3A F3 87     	ld a,(Clock_Entidades_en_curso)
 570  8867              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 571  8867              ;! _ IMPREDECIBLE !!!!
 572  8867 C6 64        	add 100
 573  8869 32 F3 87     	ld (Clock_Entidades_en_curso),a
 574  886C
 575  886C              ; -------------------------------------------------------------------------------------------------------------
 576  886C
 577  886C              ; Habilita disparos.
 578  886C
 579  886C 21 F5 87     13 ld hl,Disparo_Amadeus
 580  886F 11 F7 87     	ld de,CLOCK_repone_disparo_Amadeus
 581  8872 CD 06 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 582  8875
 583  8875 21 F8 87     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 584  8878 11 FA 87     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 585  887B CD 06 9C     	call Habilita_disparos
 586  887E
 587  887E              ; COLISIONES.
 588  887E
 589  887E CD 28 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 590  8881
 591  8881              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 592  8881              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 593  8881              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 594  8881
 595  8881 AF           	xor a
 596  8882 32 E4 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 597  8885
 598  8885 CD 14 8B     	call Inicia_punteros_de_cajas
 599  8888 CD 39 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 600  888B              ; 														; _ en DRAW.
 601  888B 3A 7D 87     	ld a,(Filas)
 602  888E A7           	and a
 603  888F 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 604  8891 CD 4B 8C     	call Incrementa_punteros_de_cajas
 605  8894 18 F2        	jr 12B
 606  8896
 607  8896              ; ---------------------------------------------------------------------------------------
 608  8896
 609  8896 3A C8 87     10 ld a,(Numero_parcial_de_entidades)
 610  8899 47               ld b,a
 611  889A A7           	and a
 612  889B 20 14        	jr nz,11F
 613  889D
 614  889D 21 BE 87     	ld hl,Ctrl_1
 615  88A0 CB 66        	bit 4,(hl)
 616  88A2 C2 4A 89     	jp nz,16F
 617  88A5
 618  88A5              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 619  88A5
 620  88A5 21 BE 87     	ld hl,Ctrl_1
 621  88A8 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 622  88AA
 623  88AA 3A F0 87     	ld a,(Contador_de_frames)
 624  88AD 3C           	inc a
 625  88AE 32 F4 87     	ld (Activa_recarga_cajas),a
 626  88B1
 627  88B1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 628  88B1
 629  88B1 3A C9 87     11 ld a,(Entidades_en_curso)
 630  88B4 A7           	and a
 631  88B5 CA 4A 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 632  88B8 47           	ld b,a												; No hay entidades que gestionar.
 633  88B9
 634  88B9              ; ( Código que ejecutamos con cada entidad: ).
 635  88B9
 636  88B9              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 637  88B9
 638  88B9 C5           15 push bc 												; Nº de entidades en curso.
 639  88BA
 640  88BA              ; Existe "Entidad_guía" ???.
 641  88BA              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 642  88BA
 643  88BA 3A DD 87     	ld a,(Ctrl_3)
 644  88BD CB 4F        	bit 1,a
 645  88BF 20 11        	jr nz,22F
 646  88C1
 647  88C1              ; Almacén de "Movimientos_masticados" lleno ???
 648  88C1              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 649  88C1              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 650  88C1
 651  88C1 3A DD 87     	ld a,(Ctrl_3)
 652  88C4 CB 5F        	bit 3,a
 653  88C6 20 0A        	jr nz,22F
 654  88C8
 655  88C8              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 656  88C8
 657  88C8 21 A8 87     	ld hl,Ctrl_2
 658  88CB CB EE        	set 5,(hl)
 659  88CD 21 DD 87     	ld hl,Ctrl_3
 660  88D0 CB CE        	set 1,(hl)
 661  88D2
 662  88D2              ; Impacto ???
 663  88D2
 664  88D2 3A 96 87     22 ld a,(Impacto)
 665  88D5 A7           	and a
 666  88D6 28 31        	jr z,8F
 667  88D8
 668  88D8              ; Hay Impacto en esta entidad.
 669  88D8
 670  88D8 21 F2 87     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 671  88DB 35           	dec (hl)
 672  88DC C2 3D 89     	jp nz,17F
 673  88DF
 674  88DF              ;! Velocidad de la animación de la explosión.
 675  88DF
 676  88DF 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 677  88E1              ;														; _,(velocidad de la explosión).
 678  88E1              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 679  88E1
 680  88E1 CD FD 8C     	call Repone_datos_de_borrado
 681  88E4 CD 52 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 682  88E7
 683  88E7              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 684  88E7
 685  88E7 3A A8 87     	ld a,(Ctrl_2)
 686  88EA CB 4F        	bit 1,a
 687  88EC 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 688  88EE
 689  88EE              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 690  88EE
 691  88EE 3A 85 87     	ld a,(CTRL_DESPLZ)
 692  88F1 A7           	and a
 693  88F2 20 08        	jr nz,18F
 694  88F4
 695  88F4 21 84 84     	ld hl,Indice_Explosion_2x2-2
 696  88F7 22 8B 87     	ld (Puntero_DESPLZ_der),hl
 697  88FA 18 06        	jr 19F
 698  88FC
 699  88FC 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 700  88FF 22 8B 87     	ld (Puntero_DESPLZ_der),hl
 701  8902
 702  8902 21 A8 87     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 703  8905 CB CE        	set 1,(hl)
 704  8907 18 22        	jr 7F
 705  8909
 706  8909              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 707  8909              ; _con las coordenadas de la entidad almacenada en DRAW.
 708  8909
 709  8909 3A BE 87     8 ld a,(Ctrl_1)
 710  890C CB 57        	bit 2,a
 711  890E 28 1B        	jr z,7F
 712  8910
 713  8910 2A E7 87     	ld hl,(Coordenadas_disparo_certero)
 714  8913 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 715  8914              ;														; E contiene la coordenada_X del disparo.
 716  8914 2A 83 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 717  8917              ;														; H FILA, (Coordenada_y de la entidad).
 718  8917 A7           	and a
 719  8918 ED 52        	sbc hl,de
 720  891A
 721  891A CD 41 91     	call Determina_resultado_comparativa
 722  891D
 723  891D 78           	ld a,b
 724  891E A7           	and a
 725  891F 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 726  8921
 727  8921              ; ----- ----- -----
 728  8921
 729  8921 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 730  8923 32 96 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 731  8926
 732  8926 21 BE 87     	ld hl,Ctrl_1
 733  8929 CB 96        	res 2,(hl)
 734  892B
 735  892B CD 9B 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 736  892E
 737  892E 3A A3 87     	ld a,(Ctrl_0)
 738  8931 CB 67        	bit 4,a
 739  8933 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 740  8935
 741  8935              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 742  8935              ; [[[
 743  8935              ;	call Detecta_disparo_entidad
 744  8935              ; ]]]
 745  8935
 746  8935 CD 95 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 747  8938
 748  8938 21 A3 87     	ld hl,Ctrl_0
 749  893B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 750  893D
 751  893D CD FA 8B     17 call Store_Restore_cajas
 752  8940
 753  8940 C1           	pop bc
 754  8941
 755  8941 05           	dec b
 756  8942 C2 B9 88     	jp nz,15B
 757  8945
 758  8945              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 759  8945              ; Hemos gestionado todas las unidades.
 760  8945              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 761  8945
 762  8945 21 BE 87     	ld hl,Ctrl_1
 763  8948 CB 96        	res 2,(hl)
 764  894A
 765  894A 21 DD 87     16 ld hl,Ctrl_3
 766  894D CB C6        	set 0,(hl)											; Frame completo.
 767  894F
 768  894F AF           	xor a
 769  8950 D3 FE        	out ($fe),a
 770  8952
 771  8952 FB           	ei
 772  8953 76           	halt
 773  8954
 774  8954              ; ----------------------------------------
 775  8954
 776  8954 3A BE 87     	ld a,(Ctrl_1) 										; Existe Loop?
 777  8957 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 778  8959 CA 46 88     	jp z,Main
 779  895C
 780  895C              ; RECARGA DE NUEVA OLEADA.
 781  895C
 782  895C 3A F0 87     	ld a,(Contador_de_frames)
 783  895F 47           	ld b,a
 784  8960 3A F4 87     	ld a,(Activa_recarga_cajas)
 785  8963 B8           	cp b
 786  8964 28 08        	jr z,20F
 787  8966
 788  8966 21 BE 87     	ld hl,Ctrl_1
 789  8969 CB E6        	set 4,(hl)
 790  896B C3 46 88     	jp Main
 791  896E
 792  896E 21 BE 87     20 ld hl,Ctrl_1
 793  8971 CB A6        	res 4,(hl)
 794  8973
 795  8973 3A F0 87     	ld a,(Contador_de_frames)
 796  8976
 797  8976              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 798  8976              ;! _ IMPREDECIBLE !!!!
 799  8976
 800  8976 C6 0A        	add 10
 801  8978 32 F3 87     	ld (Clock_Entidades_en_curso),a
 802  897B
 803  897B C3 15 88     	jp 4B
 804  897E
 805  897E C9           	ret
 806  897F
 807  897F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 808  897F              ;
 809  897F              ;	16/11/23
 810  897F
 811  897F              Gestiona_Amadeus
 812  897F
 813  897F              ;! Activa/desactiva impacto con Amadeus.
 814  897F
 815  897F              ;	ld a,(Impacto)
 816  897F              ;	and a
 817  897F              ;	jr nz,2F
 818  897F
 819  897F CD F8 89     	call Mov_Amadeus
 820  8982
 821  8982 3A A3 87     2 ld a,(Ctrl_0)
 822  8985 CB 67        	bit 4,a
 823  8987 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 824  8989
 825  8989 CD 95 8A     	call Guarda_foto_entidad_a_pintar
 826  898C CD DD 8C     	call Guarda_datos_de_borrado_Amadeus
 827  898F
 828  898F 21 A3 87     1 ld hl,Ctrl_0
 829  8992 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 830  8994
 831  8994 CD CC 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 832  8997
 833  8997              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 834  8997
 835  8997 CD 94 8B     	call Calcula_numero_de_disparotes
 836  899A
 837  899A C9           	ret
 838  899B
 839  899B              ; --------------------------------------------------------------------------------------------------------------
 840  899B              ;
 841  899B              ;	15/12/23
 842  899B
 843  899B              Mov_obj
 844  899B
 845  899B 3A A8 87     	ld a,(Ctrl_2)
 846  899E CB 4F        	bit 1,a
 847  89A0 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 848  89A2
 849  89A2              ; Explosión:
 850  89A2
 851  89A2 3A A9 87     	ld a,(Frames_explosion)
 852  89A5 A7           	and a
 853  89A6 20 1D        	jr nz,4F
 854  89A8
 855  89A8              ;!  Una alimaña menos!!!!!!!!!1
 856  89A8
 857  89A8              ; Se trataba de una Entidad_guía ???
 858  89A8
 859  89A8 3A A8 87     	ld a,(Ctrl_2)
 860  89AB CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 861  89AD 28 05        	jr z,5F
 862  89AF
 863  89AF 21 DD 87     	ld hl,Ctrl_3
 864  89B2 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 865  89B4
 866  89B4              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 867  89B4              ;!! _generado puede ser distinto, (aletoriedad).
 868  89B4
 869  89B4 CD 7B 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 870  89B7 21 C8 87     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 871  89BA 35           	dec (hl)
 872  89BB 21 C9 87     	ld hl,Entidades_en_curso
 873  89BE 35           	dec (hl)
 874  89BF 21 C7 87     	ld hl,Numero_de_entidades
 875  89C2 35           	dec (hl)
 876  89C3 18 32        	jr 3F
 877  89C5
 878  89C5              ; -----
 879  89C5
 880  89C5              ;	`Movemos´ la explosión.
 881  89C5
 882  89C5 2A 8B 87     4 ld hl,(Puntero_DESPLZ_der)
 883  89C8 23           	inc hl
 884  89C9 23           	inc hl
 885  89CA 22 8B 87     	ld (Puntero_DESPLZ_der),hl
 886  89CD CD AC 8B     	call Extrae_address
 887  89D0 22 81 87     	ld (Puntero_objeto),hl
 888  89D3
 889  89D3 21 A9 87     	ld hl,Frames_explosion
 890  89D6 35           	dec (hl)
 891  89D7
 892  89D7 21 A3 87     	ld hl,Ctrl_0
 893  89DA CB E6        	set 4,(hl)
 894  89DC
 895  89DC 18 19        	jr 3F
 896  89DE
 897  89DE              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 898  89DE
 899  89DE AF           2 xor a
 900  89DF 32 A3 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 901  89E2
 902  89E2              ; Movemos Entidades malignas.
 903  89E2              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 904  89E2
 905  89E2              ;	ld a,(Ctrl_2)
 906  89E2              ;	bit 5,a
 907  89E2              ;	jr nz,8F
 908  89E2
 909  89E2              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 910  89E2              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 911  89E2              ;	jr 7F
 912  89E2
 913  89E2              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 914  89E2
 915  89E2              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 916  89E2              ;	bit 4,a
 917  89E2              ;	ret z
 918  89E2
 919  89E2              ; Ha habido desplazamiento de la entidad maligna.
 920  89E2              ; Ha llegado a zona de AMADEUS ???
 921  89E2
 922  89E2 3A 84 87     7 ld a,(Coordenada_y)
 923  89E5 FE 14        	cp $14
 924  89E7 38 08        	jr c,1F
 925  89E9
 926  89E9              ; ---------
 927  89E9
 928  89E9              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 929  89E9              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 930  89E9
 931  89E9 F3           	di
 932  89EA CD F1 8E     	call Genera_coordenadas_X
 933  89ED CD 2D 8F     	call Compara_coordenadas_X
 934  89F0 FB           	ei
 935  89F1
 936  89F1              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 937  89F1
 938  89F1              ; ---------
 939  89F1
 940  89F1              1
 941  89F1
 942  89F1              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 943  89F1 CD FD 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 944  89F4 CD 52 8B     	call Limpia_Variables_de_borrado
 945  89F7
 946  89F7 C9           3 ret
 947  89F8
 948  89F8              ; --------------------------------------------------------------------------------------------------------------
 949  89F8              ;
 950  89F8              ;	29/1/23
 951  89F8
 952  89F8              Mov_Amadeus
 953  89F8
 954  89F8              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 955  89F8
 956  89F8 CD ED 98     	call Mov_right
 957  89FB
 958  89FB 3A A3 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 959  89FE CB 67        	bit 4,a
 960  8A00 C8           	ret z
 961  8A01
 962  8A01              ; ---------
 963  8A01
 964  8A01              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 965  8A01 CD ED 8C     	call Repone_datos_de_borrado_Amadeus
 966  8A04 CD 52 8B     	call Limpia_Variables_de_borrado
 967  8A07
 968  8A07 C9           	ret
 969  8A08
 970  8A08              ; -----------------------------------------------------------------------------------
 971  8A08              ;
 972  8A08              ;	12/12/23
 973  8A08              ;
 974  8A08              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 975  8A08
 976  8A08              Inicia_entidad
 977  8A08
 978  8A08              ; Averiguamos el tipo de entidad.
 979  8A08
 980  8A08 3A 7C 87     	ld a,(Tipo)
 981  8A0B 3D           	dec a
 982  8A0C 28 02        	jr z,Entidad_tipo_1
 983  8A0E 18 FE        	jr $
 984  8A10
 985  8A10              Entidad_tipo_1
 986  8A10
 987  8A10 21 DE 87     	ld hl,Ctrl_4
 988  8A13 CB 46        	bit 0,(hl)
 989  8A15 20 FE        	jr nz,$
 990  8A17
 991  8A17 CB E6        	set 4,(hl)											; Activa FLAG. Indica que el Almacen_de_mov_masticados de la Entidad_1 está completo.
 992  8A19
 993  8A19              ; Inicializa el puntero (Puntero_indice_mov).
 994  8A19
 995  8A19 CD 22 9F     	call Inicializa_Puntero_indice_mov
 996  8A1C
 997  8A1C              ; Construimos los movimientos masticados de este tipo de entidad.
 998  8A1C
 999  8A1C CD 2A 8A     	call Construye_movimientos_masticados_entidad
1000  8A1F
1001  8A1F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
1002  8A1F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
1003  8A1F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
1004  8A1F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
1005  8A1F
1006  8A1F CD 7F 8A     	call Cargamos_registros_con_mov_masticado
1007  8A22 CD 16 71     	call Guarda_foto_registros
1008  8A25
1009  8A25 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
1010  8A26              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
1011  8A26              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
1012  8A26 CD FA 8B     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
1013  8A29 C9           	ret
1014  8A2A
1015  8A2A              ; -----------------------------------------------------------------------------------
1016  8A2A              ;
1017  8A2A              ;	10/01/24
1018  8A2A              ;
1019  8A2A              ;
1020  8A2A
1021  8A2A              Construye_movimientos_masticados_entidad
1022  8A2A
1023  8A2A 2A 9F 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1024  8A2D E5           	push hl
1025  8A2E
1026  8A2E CD 72 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1027  8A31              ;															; _ el (Contador_de_mov_masticados).
1028  8A31 CD B2 8B     	call Inicia_Puntero_objeto
1029  8A34 CD 49 98     	call Recompone_posicion_inicio
1030  8A37 CD 28 92     1 call Draw
1031  8A3A CD 56 8A     	call Guarda_movimiento_masticado
1032  8A3D CD B1 9D     	call Movimiento
1033  8A40
1034  8A40 3A DD 87     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1035  8A43 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1036  8A45 28 F0        	jr z,1B
1037  8A47
1038  8A47              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1039  8A47              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1040  8A47
1041  8A47 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1042  8A48 22 9F 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1043  8A4B
1044  8A4B
1045  8A4B              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1046  8A4B
1047  8A4B CD 35 9F     	call Situa_en_Contador_general_de_mov_masticados
1048  8A4E
1049  8A4E              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1050  8A4E              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1051  8A4E
1052  8A4E ED 4B A1 87  	ld bc,(Contador_de_mov_masticados)
1053  8A52 71           	ld (hl),c
1054  8A53 23           	inc hl
1055  8A54 70           	ld (hl),b
1056  8A55
1057  8A55 C9           	ret
1058  8A56
1059  8A56              ; -----------------------------------------------------------------------------------
1060  8A56              ;
1061  8A56              ;	28/12/23
1062  8A56              ;
1063  8A56              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1064  8A56              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1065  8A56
1066  8A56              Guarda_movimiento_masticado
1067  8A56
1068  8A56 ED 73 CF 87  	ld (Stack),sp
1069  8A5A ED 7B 9F 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1070  8A5E
1071  8A5E E5           	push hl
1072  8A5F DD E5            push ix
1073  8A61 FD E5            push iy
1074  8A63
1075  8A63 ED 7B CF 87      ld sp,(Stack)
1076  8A67
1077  8A67              ;    push hl
1078  8A67
1079  8A67 2A A1 87        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1080  8A6A 23           	inc hl
1081  8A6B 22 A1 87     	ld (Contador_de_mov_masticados),hl
1082  8A6E
1083  8A6E              ;	pop hl
1084  8A6E
1085  8A6E CD 72 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1086  8A71              ;															; _ el (Contador_de_mov_masticados).
1087  8A71 C9               ret
1088  8A72
1089  8A72              ; --------------------------------------------------------------------------------------------------------------
1090  8A72              ;
1091  8A72              ;	12/1/24
1092  8A72              ;
1093  8A72              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1094  8A72
1095  8A72              Actualiza_Puntero_de_almacen_de_mov_masticados
1096  8A72
1097  8A72              ;	push hl
1098  8A72              ;	push bc
1099  8A72
1100  8A72 2A 9F 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1101  8A75 01 06 00     	ld bc,6
1102  8A78 A7           	and a
1103  8A79 ED 4A        	adc hl,bc
1104  8A7B 22 9F 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1105  8A7E
1106  8A7E              ;	pop bc
1107  8A7E              ;	pop hl
1108  8A7E
1109  8A7E C9           	ret
1110  8A7F
1111  8A7F              ; --------------------------------------------------------------------------------------------------------------
1112  8A7F              ;
1113  8A7F              ;	15/01/24
1114  8A7F              ;
1115  8A7F              ;	Cargamos los registros_
1116  8A7F              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1117  8A7F              ;
1118  8A7F              ;	HL contiene la dirección de la rutina de impresión.
1119  8A7F              ;	IX contiene el puntero de impresión.
1120  8A7F              ;	IY contiene (Puntero_objeto).
1121  8A7F
1122  8A7F
1123  8A7F ED 73 CF 87  Cargamos_registros_con_mov_masticado ld (Stack),sp
1124  8A83 ED 7B 9F 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1125  8A87
1126  8A87 FD E1        	pop iy
1127  8A89 DD E1        	pop ix
1128  8A8B E1           	pop hl
1129  8A8C
1130  8A8C ED 73 9F 87  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1131  8A90
1132  8A90 ED 7B CF 87  	ld sp,(Stack)
1133  8A94
1134  8A94 C9           	ret
1135  8A95
1136  8A95              ; --------------------------------------------------------------------------------------------------------------
1137  8A95              ;
1138  8A95              ;	28/12/23
1139  8A95              ;
1140  8A95              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1141  8A95              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1142  8A95
1143  8A95              Guarda_foto_entidad_a_pintar
1144  8A95
1145  8A95 3A A3 87     	ld a,(Ctrl_0)
1146  8A98 CB 77        	bit 6,a
1147  8A9A 28 0A        	jr z,5F
1148  8A9C
1149  8A9C              ; Guarda la foto de Amadeus.
1150  8A9C
1151  8A9C CD 28 92     	call Draw
1152  8A9F
1153  8A9F CD 56 8A     	call Guarda_movimiento_masticado	;! Provisional
1154  8AA2
1155  8AA2 CD 16 71     	call Guarda_foto_registros
1156  8AA5
1157  8AA5              ;	di
1158  8AA5              ;	jr $
1159  8AA5              ;	ei
1160  8AA5
1161  8AA5 C9           	ret
1162  8AA6
1163  8AA6              ; ENTIDADES!
1164  8AA6              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1165  8AA6
1166  8AA6 3A DD 87     5 ld a,(Ctrl_3)
1167  8AA9 CB 5F        	bit 3,a
1168  8AAB 28 04        	jr z,1F
1169  8AAD
1170  8AAD              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1171  8AAD
1172  8AAD CD E8 8A     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1173  8AB0 C9           	ret
1174  8AB1
1175  8AB1              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1176  8AB1
1177  8AB1 3A DD 87     1 ld a,(Ctrl_3)
1178  8AB4 CB 57        	bit 2,a
1179  8AB6 20 10        	jr nz,6F
1180  8AB8
1181  8AB8              ; Entidad guía o fantasma ???
1182  8AB8
1183  8AB8 3A A8 87     	ld a,(Ctrl_2)
1184  8ABB CB 6F        	bit 5,a
1185  8ABD 20 10        	jr nz,3F
1186  8ABF
1187  8ABF              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1188  8ABF
1189  8ABF 18 EC        	jr 4B
1190  8AC1
1191  8AC1              ; ENTIDAD_GUÍA:
1192  8AC1              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1193  8AC1              ; _guardando "movimientos_masticados".
1194  8AC1
1195  8AC1 3A DD 87     2 ld a,(Ctrl_3)
1196  8AC4 CB 57        	bit 2,a
1197  8AC6 28 07        	jr z,3F
1198  8AC8
1199  8AC8              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1200  8AC8              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1201  8AC8
1202  8AC8 CB 97        6 res 2,a
1203  8ACA CB DF        	set 3,a
1204  8ACC 32 DD 87     	ld (Ctrl_3),a
1205  8ACF
1206  8ACF
1207  8ACF              ;	Esto sólo lo ejecuta una entidad guía.
1208  8ACF
1209  8ACF CD 28 92     3 	call Draw
1210  8AD2 CD 56 8A     	call Guarda_movimiento_masticado
1211  8AD5 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1212  8AD8
1213  8AD8              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1214  8AD8              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1215  8AD8
1216  8AD8 CD DC 8A     	call Convierte_guia_en_fantasma
1217  8ADB C9           	ret
1218  8ADC
1219  8ADC              ; --------------------------------------------------------------------------------------------------------------
1220  8ADC              ;
1221  8ADC              ;	28/12/23
1222  8ADC              ;
1223  8ADC
1224  8ADC 3A DD 87     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1225  8ADF CB 5F        	bit 3,a
1226  8AE1 C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1227  8AE2
1228  8AE2              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1229  8AE2
1230  8AE2 21 A8 87     	ld hl,Ctrl_2
1231  8AE5 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1232  8AE7
1233  8AE7 C9           	ret
1234  8AE8
1235  8AE8              ; --------------------------------------------------------------------------------------------------------------
1236  8AE8              ;
1237  8AE8              ;	21/12/23
1238  8AE8              ;
1239  8AE8              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1240  8AE8              ;
1241  8AE8              ;		IY contiene (Puntero_objeto).
1242  8AE8              ;		IX contiene el puntero de impresión.
1243  8AE8              ;		HL contiene la dirección de la rutina de impresión.
1244  8AE8              ;
1245  8AE8              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1246  8AE8              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1247  8AE8              ;	Decrementa el (Contador_de_mov_masticados)
1248  8AE8              ;
1249  8AE8              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1250  8AE8              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1251  8AE8              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1252  8AE8
1253  8AE8
1254  8AE8 ED 73 CF 87  Prepara_registros_con_mov_masticados ld (Stack),sp
1255  8AEC ED 7B 9F 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1256  8AF0
1257  8AF0 FD E1        	pop iy
1258  8AF2 DD E1        	pop ix
1259  8AF4 E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1260  8AF5
1261  8AF5 ED 73 9F 87  	ld (Puntero_de_almacen_de_mov_masticados),sp
1262  8AF9 ED 7B CF 87  	ld sp,(Stack)
1263  8AFD
1264  8AFD CD 16 71     	call Guarda_foto_registros
1265  8B00
1266  8B00 E5           	push hl
1267  8B01
1268  8B01 2A A1 87     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1269  8B04 23           	inc hl
1270  8B05 22 A1 87     	ld (Contador_de_mov_masticados),hl
1271  8B08
1272  8B08              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1273  8B08
1274  8B08 ED 4B AA 87  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1275  8B0C A7           	and a
1276  8B0D ED 42        	sbc hl,bc
1277  8B0F CC DC 8A     	call z,Convierte_guia_en_fantasma
1278  8B12
1279  8B12 E1           	pop hl
1280  8B13
1281  8B13 C9           	ret
1282  8B14
1283  8B14              ; --------------------------------------------------------------------------------------------------------------
1284  8B14              ;
1285  8B14              ;	19/9/23
1286  8B14
1287  8B14              ;Prepara_var_pintado
1288  8B14
1289  8B14              ;	ld hl,Filas
1290  8B14              ;	ld de,Variables_de_pintado
1291  8B14              ;	ld bc,8
1292  8B14              ;	ldir
1293  8B14              ;	ret
1294  8B14
1295  8B14              ; --------------------------------------------------------------------------------------------------------------
1296  8B14
1297  8B14              ;Repone_pintar
1298  8B14
1299  8B14              ;	ld hl,Variables_de_pintado
1300  8B14              ;	ld de,Filas
1301  8B14              ;	ld bc,8
1302  8B14              ;	ldir
1303  8B14              ;	ret
1304  8B14
1305  8B14              ; *************************************************************************************************************************************************************
1306  8B14              ;
1307  8B14              ; 8/1/23
1308  8B14              ;
1309  8B14              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1310  8B14              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1311  8B14              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1312  8B14
1313  8B14              ; Destruye HL y DE !!!!!
1314  8B14
1315  8B14              Inicia_punteros_de_cajas
1316  8B14
1317  8B14 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1318  8B17 CD AC 8B         call Extrae_address
1319  8B1A 22 C1 87         ld (Puntero_store_caja),hl
1320  8B1D 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1321  8B20 22 C5 87     	ld (Indice_restore_caja),hl
1322  8B23 CD AC 8B     	call Extrae_address
1323  8B26 22 C3 87     	ld (Puntero_restore_caja),hl
1324  8B29 C9               ret
1325  8B2A
1326  8B2A              ; *************************************************************************************************************************************************************
1327  8B2A              ;
1328  8B2A              ; 8/1/23
1329  8B2A              ;
1330  8B2A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1331  8B2A
1332  8B2A 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1333  8B2D 22 E0 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1334  8B30 C9           	ret
1335  8B31 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1336  8B34 22 E2 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1337  8B37 C9           	ret
1338  8B38
1339  8B38              ; -------------------------------------------------------------------------------------------------------------
1340  8B38              ;
1341  8B38              ; 21/9/23
1342  8B38              ;
1343  8B38
1344  8B38              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1345  8B38
1346  8B38              Limpia_album_Amadeus
1347  8B38
1348  8B38 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1349  8B3B 7E           	ld a,(hl)
1350  8B3C A7           	and a
1351  8B3D C8           	ret z
1352  8B3E
1353  8B3E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1354  8B41 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1355  8B44 01 0B 00     	ld bc,11
1356  8B47 AF           	xor a
1357  8B48 77           	ld (hl),a
1358  8B49 ED B0        	ldir
1359  8B4B
1360  8B4B 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1361  8B4E 22 DB 87     	ld (End_Snapshot_Amadeus),hl
1362  8B51
1363  8B51 C9           	ret
1364  8B52
1365  8B52 21 97 87     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1366  8B55 11 98 87     	ld de,Variables_de_borrado+1
1367  8B58 01 05 00     	ld bc,5
1368  8B5B AF           	xor a
1369  8B5C 77           	ld (hl),a
1370  8B5D ED B0        	ldir
1371  8B5F C9           	ret
1372  8B60
1373  8B60              ; -------------------------------------------------------------------------------------------------------------
1374  8B60              ;
1375  8B60              ; 8/9/23
1376  8B60              ;
1377  8B60
1378  8B60              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1379  8B60              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1380  8B60
1381  8B60              Calcula_numero_de_malotes
1382  8B60
1383  8B60 21 00 70     	ld hl,Album_de_fotos
1384  8B63 EB           	ex de,hl
1385  8B64 2A D5 87     	ld hl,(Stack_snapshot)
1386  8B67
1387  8B67 06 00        	ld b,0
1388  8B69 7D           	ld a,l
1389  8B6A 93           	sub e
1390  8B6B 28 07        	jr z,1F
1391  8B6D
1392  8B6D              ; Nº de malotes no es "0".
1393  8B6D
1394  8B6D D6 06        2 sub 6
1395  8B6F 04           	inc b
1396  8B70 A7           	and a
1397  8B71 20 FA        	jr nz,2B
1398  8B73 78           	ld a,b
1399  8B74
1400  8B74 32 CA 87     1 ld (Numero_de_malotes),a
1401  8B77 C9           	ret
1402  8B78
1403  8B78              ; -------------------------------------------------------------------------------------------------------------
1404  8B78              ;
1405  8B78              ; 8/9/23
1406  8B78              ;
1407  8B78
1408  8B78              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1409  8B78              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1410  8B78
1411  8B78              Calcula_malotes_Amadeus
1412  8B78
1413  8B78 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1414  8B7B EB           	ex de,hl
1415  8B7C 2A DB 87     	ld hl,(End_Snapshot_Amadeus)
1416  8B7F
1417  8B7F 7C           	ld a,h
1418  8B80 A7           	and a
1419  8B81 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1420  8B83
1421  8B83 06 00        	ld b,0
1422  8B85 7D           	ld a,l
1423  8B86 93           	sub e
1424  8B87 28 07        	jr z,1F
1425  8B89
1426  8B89              ; Nº de malotes no es "0".
1427  8B89
1428  8B89 D6 06        2 sub 6
1429  8B8B 04           	inc b
1430  8B8C A7           	and a
1431  8B8D 20 FA        	jr nz,2B
1432  8B8F 78           	ld a,b
1433  8B90
1434  8B90 32 CA 87     1 ld (Numero_de_malotes),a
1435  8B93 C9           	ret
1436  8B94
1437  8B94              ; -------------------------------------------------------------------------------------------------------------
1438  8B94              ;
1439  8B94              ; 28/2/23
1440  8B94              ;
1441  8B94
1442  8B94              Calcula_numero_de_disparotes
1443  8B94
1444  8B94 21 56 70     	ld hl,Album_de_fotos_disparos
1445  8B97 EB           	ex de,hl
1446  8B98 2A D9 87     	ld hl,(End_Snapshot_disparos)
1447  8B9B
1448  8B9B 06 00        	ld b,0
1449  8B9D 7D           	ld a,l
1450  8B9E 93           	sub e
1451  8B9F 28 07        	jr z,1F
1452  8BA1
1453  8BA1              ; Nº de malotes no es "0".
1454  8BA1
1455  8BA1 D6 06        2 sub 6
1456  8BA3 04           	inc b
1457  8BA4 A7           	and a
1458  8BA5 20 FA        	jr nz,2B
1459  8BA7 78           	ld a,b
1460  8BA8
1461  8BA8 32 DF 87     1 ld (Numero_de_disparotes),a
1462  8BAB C9           	ret
1463  8BAC
1464  8BAC              ; *************************************************************************************************************************************************************
1465  8BAC              ;
1466  8BAC              ; 20/10/22
1467  8BAC              ;
1468  8BAC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1469  8BAC              ;
1470  8BAC              ; Destruye el puntero y DE !!!!!
1471  8BAC
1472  8BAC 5E           Extrae_address ld e,(hl)
1473  8BAD 23           	inc hl
1474  8BAE 56           	ld d,(hl)
1475  8BAF 2B           	dec hl
1476  8BB0 EB           	ex de,hl
1477  8BB1 C9           	ret
1478  8BB2
1479  8BB2              ; *************************************************************************************************************************************************************
1480  8BB2              ;
1481  8BB2              ;	7/2/23
1482  8BB2              ;
1483  8BB2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1484  8BB2              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1485  8BB2              ;
1486  8BB2              ;   Destruye HL y BC !!!!!,
1487  8BB2              ;
1488  8BB2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1489  8BB2              ;					"0" ..... Izquierda.
1490  8BB2
1491  8BB2              Inicia_Puntero_objeto
1492  8BB2
1493  8BB2 3A 91 87     	ld a,(Cuad_objeto)
1494  8BB5 E6 01        	and 1
1495  8BB7 F5           	push af
1496  8BB8 CC D6 8B     	call z,Inicia_puntero_objeto_izq
1497  8BBB F1           	pop af
1498  8BBC 28 2B        	jr z,1F
1499  8BBE CD C3 8B     	call Inicia_puntero_objeto_der
1500  8BC1 18 26        	jr 1F
1501  8BC3
1502  8BC3              ; Arrancamos desde la parte izquierda de la pantalla.
1503  8BC3              ; Iniciamos (Indice_Sprite_der).
1504  8BC3
1505  8BC3 2A 87 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1506  8BC6 22 8B 87     	ld (Puntero_DESPLZ_der),hl
1507  8BC9 CD AC 8B     	call Extrae_address
1508  8BCC 22 81 87     	ld (Puntero_objeto),hl
1509  8BCF
1510  8BCF 2A 89 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1511  8BD2 22 8D 87     	ld (Puntero_DESPLZ_izq),hl
1512  8BD5 C9           	ret
1513  8BD6
1514  8BD6              ; Arrancamos desde la parte derecha de la pantalla.
1515  8BD6              ; Iniciamos (Indice_Sprite_izq).
1516  8BD6
1517  8BD6 2A 89 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1518  8BD9 22 8D 87     	ld (Puntero_DESPLZ_izq),hl
1519  8BDC CD AC 8B     	call Extrae_address
1520  8BDF 22 81 87     	ld (Puntero_objeto),hl
1521  8BE2
1522  8BE2 2A 87 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1523  8BE5 22 8B 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1524  8BE8 C9           	ret
1525  8BE9
1526  8BE9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1527  8BE9
1528  8BE9 21 40 83     1 ld hl,Amadeus
1529  8BEC ED 4B 81 87  	ld bc,(Puntero_objeto)
1530  8BF0 B7 ED 42     	sub hl,bc
1531  8BF3 C0           	ret nz
1532  8BF4 21 A3 87     	ld hl,Ctrl_0
1533  8BF7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1534  8BF9 C9           	ret 												; _de nuestra nave en los extremos.
1535  8BFA
1536  8BFA              ; *************************************************************************************************************************************************************
1537  8BFA              ;
1538  8BFA              ;	21/12/23
1539  8BFA              ;
1540  8BFA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1541  8BFA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1542  8BFA
1543  8BFA              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1544  8BFA              ;	_de la 2ª y 3ª entidad respectivamente.
1545  8BFA
1546  8BFA              Store_Restore_cajas
1547  8BFA
1548  8BFA              ;	push hl
1549  8BFA              ;	push de
1550  8BFA              ; 	push bc
1551  8BFA
1552  8BFA              ;	STORE !!!!!
1553  8BFA              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1554  8BFA
1555  8BFA
1556  8BFA F3           	di
1557  8BFB 21 7C 87     	ld hl,Variables_DRAW
1558  8BFE ED 5B C1 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1559  8C02 01 38 00     	ld bc,56
1560  8C05 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1561  8C07 FB           	ei
1562  8C08
1563  8C08 18 FE        	jr $
1564  8C0A
1565  8C0A              ; 	Entidad_sospechosa. 20/4/23
1566  8C0A
1567  8C0A 3A 96 87     	ld a,(Impacto)
1568  8C0D A7           	and a
1569  8C0E 28 0C        	jr z,1F
1570  8C10
1571  8C10 2A C1 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1572  8C13 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1573  8C16 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1574  8C17 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1575  8C19 22 E5 87     	ld (Entidad_sospechosa_de_colision),hl
1576  8C1C
1577  8C1C              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1578  8C1C
1579  8C1C 2A C3 87     1 ld hl,(Puntero_restore_caja)
1580  8C1F 7E           	ld a,(hl)
1581  8C20 A7           	and a
1582  8C21 F5           	push af
1583  8C22 28 0E        	jr z,2F
1584  8C24
1585  8C24 F3           	di
1586  8C25 18 FE        	jr $
1587  8C27 FB           	ei
1588  8C28
1589  8C28 F3           	di
1590  8C29 11 7C 87     	ld de,Variables_DRAW
1591  8C2C 01 38 00     	ld bc,56
1592  8C2F ED B0        	ldir
1593  8C31 FB           	ei
1594  8C32
1595  8C32 CD 4B 8C     2 call Incrementa_punteros_de_cajas
1596  8C35
1597  8C35 F1           	pop af
1598  8C36 28 E4        	jr z,1B
1599  8C38
1600  8C38              ;	pop bc
1601  8C38              ;	pop de
1602  8C38              ;	pop hl
1603  8C38
1604  8C38 C9           	ret
1605  8C39
1606  8C39              ; **************************************************************************************************
1607  8C39              ;
1608  8C39              ;	21/12/23
1609  8C39              ;
1610  8C39              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1611  8C39
1612  8C39 E5           Restore_entidad push hl
1613  8C3A D5           	push de
1614  8C3B C5            	push bc
1615  8C3C
1616  8C3C 2A C1 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1617  8C3F 11 7C 87     	ld de,Variables_DRAW
1618  8C42 01 38 00     	ld bc,56
1619  8C45 ED B0        	ldir
1620  8C47
1621  8C47 C1           	pop bc
1622  8C48 D1           	pop de
1623  8C49 E1           	pop hl
1624  8C4A C9           	ret
1625  8C4B
1626  8C4B              ; **************************************************************************************************
1627  8C4B              ;
1628  8C4B              ;	08/05/23
1629  8C4B              ;
1630  8C4B              ;	Incrementamos los dos punteros de entidades. (+1).
1631  8C4B
1632  8C4B              Incrementa_punteros_de_cajas
1633  8C4B
1634  8C4B 2A C3 87     	ld hl,(Puntero_restore_caja)
1635  8C4E 22 C1 87     	ld (Puntero_store_caja),hl
1636  8C51 2A C5 87     	ld hl,(Indice_restore_caja)
1637  8C54 23           	inc hl
1638  8C55 23           	inc hl
1639  8C56 22 C5 87     	ld (Indice_restore_caja),hl
1640  8C59 CD AC 8B         call Extrae_address
1641  8C5C 22 C3 87         ld (Puntero_restore_caja),hl
1642  8C5F C9               ret
1643  8C60
1644  8C60              ; **************************************************************************************************
1645  8C60              ;
1646  8C60              ;	21/12/23
1647  8C60              ;
1648  8C60              ;	Restore_Amadeus
1649  8C60              ;
1650  8C60              ;	Cargamos en DRAW los parámetros de Amadeus.
1651  8C60              ;
1652  8C60
1653  8C60 E5           Restore_Amadeus	push hl
1654  8C61 D5           	push de
1655  8C62 C5            	push bc
1656  8C63 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1657  8C66 11 7C 87     	ld de,Variables_DRAW
1658  8C69 01 38 00     	ld bc,56
1659  8C6C ED B0        	ldir
1660  8C6E C1           	pop bc
1661  8C6F D1           	pop de
1662  8C70 E1           	pop hl
1663  8C71 C9           	ret
1664  8C72
1665  8C72              ; *************************************************************************************************************************************************************
1666  8C72              ;
1667  8C72              ;	21/12/23
1668  8C72              ;
1669  8C72              ;	Store_Amadeus
1670  8C72              ;
1671  8C72              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1672  8C72              ;
1673  8C72              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1674  8C72              ;
1675  8C72              ;	DESTRUYE: HL y BC y DE.
1676  8C72
1677  8C72 21 7C 87     Store_Amadeus ld hl,Variables_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1678  8C75 01 38 00     	ld bc,56
1679  8C78 ED B0        	ldir
1680  8C7A C9           	ret
1681  8C7B
1682  8C7B              ; -----------------------------------------------------------
1683  8C7B              ;
1684  8C7B              ;	21/12/23
1685  8C7B              ;
1686  8C7B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1687  8C7B              ;
1688  8C7B              ;	Destruye: HL,BC,DE,A
1689  8C7B
1690  8C7B 21 7C 87     Borra_datos_entidad ld hl,Variables_DRAW
1691  8C7E 01 37 00     	ld bc,55
1692  8C81 AF           	xor a
1693  8C82 77           	ld (hl),a
1694  8C83 11 7D 87     	ld de,Variables_DRAW+1
1695  8C86 ED B0        	ldir
1696  8C88 C9           	ret
1697  8C89
1698  8C89              ; -----------------------------------------------------------
1699  8C89
1700  8C89              ; Teclado.
1701  8C89
1702  8C89 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1703  8C8B DB FE        	in a,($fe)
1704  8C8D E6 01        	and $01
1705  8C8F 28 02        	jr z,1f
1706  8C91 18 F6        	jr Pulsa_ENTER
1707  8C93 C9           1 ret
1708  8C94
1709  8C94              ; **************************************************************************************************
1710  8C94              ;
1711  8C94              ; Temporización.
1712  8C94
1713  8C94              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1714  8C94              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1715  8C94              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1716  8C94              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1717  8C94
1718  8C94              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1719  8C94              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1720  8C94              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1721  8C94
1722  8C94              ; A partir de $4f61 no hace falta DELAY.
1723  8C94
1724  8C94              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1725  8C94
1726  8C94 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1727  8C97 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1728  8C98 78           	LD A,B
1729  8C99 A7           	AND A
1730  8C9A 20 FB        	JR NZ,wait
1731  8C9C C9           	RET
1732  8C9D
1733  8C9D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1734  8C9D              ;
1735  8C9D              ;	5/3/23
1736  8C9D              ;
1737  8C9D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1738  8C9D
1739  8C9D              Movimiento_Amadeus
1740  8C9D
1741  8C9D              ; Disparo.
1742  8C9D
1743  8C9D 3A F5 87     	ld a,(Disparo_Amadeus)
1744  8CA0 A7           	and a
1745  8CA1 20 02        	jr nz,1F
1746  8CA3 18 15        	jr 2F
1747  8CA5
1748  8CA5 3E F7        1 ld a,$f7													; "5" para disparar.
1749  8CA7 DB FE        	in a,($fe)
1750  8CA9 E6 10        	and $10
1751  8CAB
1752  8CAB F5           	push af
1753  8CAC CC 54 8D     	call z,Genera_disparo
1754  8CAF F1           	pop af
1755  8CB0 20 08        	jr nz,2F
1756  8CB2
1757  8CB2 3A F5 87     	ld a,(Disparo_Amadeus)
1758  8CB5 EE 01        	xor 1
1759  8CB7 32 F5 87     	ld (Disparo_Amadeus),a
1760  8CBA 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1761  8CBC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1762  8CBE E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1763  8CC0 CC 10 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1764  8CC3
1765  8CC3 3E F7        	ld a,$f7
1766  8CC5 DB FE        	in a,($fe)
1767  8CC7 E6 01        	and $01
1768  8CC9 C8           	ret z
1769  8CCA
1770  8CCA 3E F7        	ld a,$f7
1771  8CCC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1772  8CCE E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1773  8CD0 CC ED 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1774  8CD3 C9           	ret
1775  8CD4
1776  8CD4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1777  8CD4              ;
1778  8CD4              ;	Rutina provisional para que los malotes cagen balas.
1779  8CD4
1780  8CD4              Detecta_disparo_entidad
1781  8CD4
1782  8CD4 3A F8 87     	ld a,(Disparo_entidad)
1783  8CD7 A7           	and a
1784  8CD8 C8           	ret z
1785  8CD9
1786  8CD9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1787  8CD9
1788  8CD9              ;	ld a,$7f				; Detecta SPACE.
1789  8CD9              ;	in a,($fe)
1790  8CD9              ;	and 1
1791  8CD9              ;	ret nz
1792  8CD9
1793  8CD9 CD 54 8D     	call Genera_disparo
1794  8CDC C9           	ret
1795  8CDD
1796  8CDD              ; ----------------------------------------------------------------------
1797  8CDD              ;
1798  8CDD              ;	8/9/23
1799  8CDD
1800  8CDD 2A DB 87     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1801  8CE0 2B            	dec hl
1802  8CE1 7E           	ld a,(hl)
1803  8CE2 A7           	and a
1804  8CE3 C8           	ret z										; Salimos si es álbum está vacío.
1805  8CE4
1806  8CE4 11 9C 87     	ld de,Variables_de_borrado+5
1807  8CE7 01 06 00     	ld bc,6
1808  8CEA ED B8        	lddr
1809  8CEC C9           	ret
1810  8CED
1811  8CED              ; ----------------------------------------------------------------------
1812  8CED              ;
1813  8CED              ;	9/9/23
1814  8CED
1815  8CED              Repone_datos_de_borrado_Amadeus
1816  8CED
1817  8CED 21 97 87     	ld hl,Variables_de_borrado
1818  8CF0 11 AC 70     	ld de,Album_de_fotos_Amadeus
1819  8CF3 01 06 00     	ld bc,6
1820  8CF6 ED B0        	ldir
1821  8CF8
1822  8CF8 EB           	ex de,hl
1823  8CF9 22 DB 87     	ld (End_Snapshot_Amadeus),hl
1824  8CFC
1825  8CFC C9           	ret
1826  8CFD
1827  8CFD              ; ----------------------------------------------------------------------
1828  8CFD              ;
1829  8CFD              ;	27/10/23
1830  8CFD              ;
1831  8CFD
1832  8CFD              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1833  8CFD              ;	_ Album_de_fotos correspondiente.
1834  8CFD
1835  8CFD              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1836  8CFD              ;	_ durante el proceso de escritura.
1837  8CFD
1838  8CFD              Repone_datos_de_borrado
1839  8CFD
1840  8CFD F3           	di
1841  8CFE ED 5B D5 87  	ld de,(Stack_snapshot)
1842  8D02 21 97 87     	ld hl,Variables_de_borrado
1843  8D05 01 06 00     	ld bc,6
1844  8D08 ED B0        	ldir
1845  8D0A FB           	ei
1846  8D0B
1847  8D0B EB           	ex de,hl
1848  8D0C 22 D5 87     	ld (Stack_snapshot),hl
1849  8D0F
1850  8D0F C9           	ret
1851  8D10
1852  8D10              ; --------------------------------------------------------------------------------------
1853  8D10
1854  8D10              Pinta_Amadeus
1855  8D10
1856  8D10 CD 78 8B        	call Calcula_malotes_Amadeus
1857  8D13 CD B8 95     	call Extrae_foto_Amadeus
1858  8D16 CD 38 8B     	call Limpia_album_Amadeus
1859  8D19
1860  8D19 C9           	ret
1861  8D1A
1862  8D1A              Pinta_entidades
1863  8D1A
1864  8D1A              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1865  8D1A
1866  8D1A 3A DD 87     	ld a,(Ctrl_3)
1867  8D1D CB 47        	bit 0,a
1868  8D1F C8           	ret z
1869  8D20
1870  8D20 CD 60 8B     	call Calcula_numero_de_malotes
1871  8D23 CD 36 95     	call Extrae_foto_entidades
1872  8D26 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1873  8D29
1874  8D29 C9           	ret
1875  8D2A
1876  8D2A              ; -----------------------------------------------------------------------------------
1877  8D2A              ;
1878  8D2A              ;	10/12/23
1879  8D2A              ;
1880  8D2A              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1881  8D2A
1882  8D2A              Actualiza_relojes
1883  8D2A
1884  8D2A 3A DD 87     	ld a,(Ctrl_3)
1885  8D2D CB 47        	bit 0,a
1886  8D2F C8           	ret z 						;	Salimos si no hemos pintado unidades.
1887  8D30
1888  8D30 21 F0 87     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1889  8D33 34           	inc (hl)
1890  8D34
1891  8D34 34           	inc (hl)
1892  8D35 35           	dec (hl)
1893  8D36 C0           	ret nz
1894  8D37
1895  8D37 21 F1 87     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1896  8D3A 34           	inc (hl)
1897  8D3B C9           	ret
1898  8D3C
1899  8D3C              ; ---------------------------------------------------------------
1900  8D3C              ;
1901  8D3C              ;	21/12/23
1902  8D3C
1903  8D3C              Guarda_parametros_DRAW
1904  8D3C
1905  8D3C 21 7C 87     	ld hl,Variables_DRAW
1906  8D3F 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1907  8D42 01 38 00     	ld bc,56
1908  8D45 ED B0        	ldir
1909  8D47 C9           	ret
1910  8D48
1911  8D48              Recupera_parametros_DRAW
1912  8D48
1913  8D48 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1914  8D4B 11 7C 87     	ld de,Variables_DRAW
1915  8D4E 01 38 00     	ld bc,56
1916  8D51 ED B0        	ldir
1917  8D53 C9           	ret
1918  8D54
1919  8D54              ; ---------------------------------------------------------------
1920  8D54
1921  8D54              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D54              ; ******************************************************************************************************************************************************************************************
   2+ 8D54              ;
   3+ 8D54              ;   21/07/23
   4+ 8D54              ;
   5+ 8D54              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D54              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D54              ;
   8+ 8D54              ;
   9+ 8D54              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D54              ;
  11+ 8D54              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D54              ;               _ hacen las entidades hacia abajo.
  13+ 8D54              ;
  14+ 8D54              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D54              ;
  16+ 8D54              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D54              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D54              ;
  19+ 8D54              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D54              ;           _ la bala.
  21+ 8D54              ;
  22+ 8D54              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D54              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D54              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D54              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D54              ;           _ en el momento de generarse la bala)).
  27+ 8D54
  28+ 8D54              Genera_disparo
  29+ 8D54
  30+ 8D54              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D54              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D54              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D54              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D54              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D54              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D54              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D54
  38+ 8D54              ; Exclusiones:
  39+ 8D54
  40+ 8D54 3A 95 87         ld a,(Vel_down)
  41+ 8D57 47               ld b,a
  42+ 8D58 3A EF 87         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D5B B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D5C D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D5D 3A A4 87         ld a,(Columnas)
  46+ 8D60 47               ld b,a
  47+ 8D61 3A 7E 87         ld a,(Columns)
  48+ 8D64 B8               cp b
  49+ 8D65 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D66
  51+ 8D66              ; ----- ----- -----
  52+ 8D66
  53+ 8D66 3A A3 87         ld a,(Ctrl_0)
  54+ 8D69 CB 77            bit 6,a
  55+ 8D6B 20 06            jr nz,14F
  56+ 8D6D
  57+ 8D6D 3A 84 87         ld a,(Coordenada_y)
  58+ 8D70 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D72 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D73
  61+ 8D73 21 00 80     14 ld hl,Indice_disparo
  62+ 8D76 3A 85 87         ld a,(CTRL_DESPLZ)
  63+ 8D79 4F               ld c,a
  64+ 8D7A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D7C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D7C              ;                                            ""        ""       "f9", B="1"
  67+ 8D7C              ;                                            ""        ""       "fb", B="2"
  68+ 8D7C              ;                                            ""        ""       "fb", B="3"
  69+ 8D7C A7               and a
  70+ 8D7D 28 10            jr z,1F
  71+ 8D7F E6 01            and 1
  72+ 8D81 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D82
  74+ 8D82 79               ld a,c
  75+ 8D83 16 F9            ld d,$f9
  76+ 8D85 23           2 inc hl
  77+ 8D86 23               inc hl
  78+ 8D87 04               inc b
  79+ 8D88 BA               cp d
  80+ 8D89 28 04            jr z,1F
  81+ 8D8B 14               inc d
  82+ 8D8C 14               inc d
  83+ 8D8D 18 F6            jr 2B
  84+ 8D8F
  85+ 8D8F CD AC 8B     1 call Extrae_address
  86+ 8D92 E5               push hl
  87+ 8D93 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D95 DD 21 FE 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D99
  90+ 8D99              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D99              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D99
  93+ 8D99 3A A3 87         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D9C CB 77            bit 6,a
  95+ 8D9E 20 04            jr nz,19F
  96+ 8DA0
  97+ 8DA0 AF               xor a
  98+ 8DA1 32 F8 87         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8DA4
 100+ 8DA4 3A 91 87     19 ld a,(Cuad_objeto)
 101+ 8DA7 FE 02            cp 2
 102+ 8DA9 38 66            jr c,3F
 103+ 8DAB 28 64            jr z,3F
 104+ 8DAD
 105+ 8DAD              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8DAD
 107+ 8DAD E6 01            and 1
 108+ 8DAF 28 30            jr z,4F
 109+ 8DB1
 110+ 8DB1              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8DB1              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8DB1              ;
 113+ 8DB1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8DB1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8DB1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8DB1
 117+ 8DB1 2A 7F 87     	ld hl,(Posicion_actual)
 118+ 8DB4
 119+ 8DB4              ;   Amadeus o entidad ???.
 120+ 8DB4
 121+ 8DB4 3A A3 87         ld a,(Ctrl_0)
 122+ 8DB7 CB 77            bit 6,a
 123+ 8DB9 28 0A            jr z,8F
 124+ 8DBB
 125+ 8DBB              ; 	Dispara Amadeus.
 126+ 8DBB
 127+ 8DBB 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8DBD CD 27 95         call PreviousScan
 129+ 8DC0 CD 27 95         call PreviousScan
 130+ 8DC3
 131+ 8DC3              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8DC3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8DC3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8DC3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8DC3
 136+ 8DC3 18 11            jr 10F
 137+ 8DC5
 138+ 8DC5              ; 	Dispara Entidad.
 139+ 8DC5
 140+ 8DC5 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8DC8              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8DC8
 143+ 8DC8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8DC8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8DC8
 146+ 8DC8 C5               push bc
 147+ 8DC9 06 10            ld b,16
 148+ 8DCB CD 18 95     9 call NextScan
 149+ 8DCE 10 FB            djnz 9B
 150+ 8DD0 C1               pop bc
 151+ 8DD1 CD 3B 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DD4 18 06            jr 17F
 153+ 8DD6
 154+ 8DD6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DD6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DD6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DD6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DD6
 159+ 8DD6 CD 3B 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DD9 CD B0 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DDC              ;                                                      ; _al generar el disparo.
 162+ 8DDC
 163+ 8DDC              ; 	LLegados a este punto tendremos:
 164+ 8DDC              ;
 165+ 8DDC              ;       Puntero_objeto_disparo en IY.
 166+ 8DDC              ;       Rutinas_de_impresion en IX.
 167+ 8DDC              ;       Puntero_de_impresion en HL.
 168+ 8DDC              ;       Impacto/Dirección en BC.
 169+ 8DDC
 170+ 8DDC CD 43 8E     17 call Almacena_disparo
 171+ 8DDF 18 52            jr 6F                                             ; RET.
 172+ 8DE1
 173+ 8DE1              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DE1              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DE1              ;
 176+ 8DE1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DE1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DE1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DE1
 180+ 8DE1 2A 7F 87     4 ld hl,(Posicion_actual)
 181+ 8DE4
 182+ 8DE4              ;   Amadeus o entidad ???.
 183+ 8DE4
 184+ 8DE4 3A A3 87         ld a,(Ctrl_0)
 185+ 8DE7 CB 77            bit 6,a
 186+ 8DE9 28 0A            jr z,11F
 187+ 8DEB
 188+ 8DEB              ; 	Dispara Amadeus.
 189+ 8DEB
 190+ 8DEB 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DED CD 27 95         call PreviousScan
 192+ 8DF0 CD 27 95         call PreviousScan
 193+ 8DF3
 194+ 8DF3              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DF3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DF3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DF3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DF3
 199+ 8DF3 18 11            jr 13F
 200+ 8DF5
 201+ 8DF5              ; 	Dispara Entidad.
 202+ 8DF5
 203+ 8DF5 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DF8              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DF8
 206+ 8DF8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DF8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DF8
 209+ 8DF8 C5               push bc
 210+ 8DF9 06 10            ld b,16
 211+ 8DFB CD 18 95     12 call NextScan
 212+ 8DFE 10 FB            djnz 12B
 213+ 8E00 C1               pop bc
 214+ 8E01
 215+ 8E01 CD 34 8E         call Ajusta_disparo_parte_derecha
 216+ 8E04 18 06            jr 18F
 217+ 8E06
 218+ 8E06              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E06              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E06              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E06              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E06
 223+ 8E06 CD 34 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E09 CD B0 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E0C              ;                                                       ; _al generar el disparo.
 226+ 8E0C
 227+ 8E0C              ; LLegados a este punto tendremos:
 228+ 8E0C              ;
 229+ 8E0C              ;       Puntero_objeto_disparo en IY.
 230+ 8E0C              ;       Rutinas_de_impresion en IX.
 231+ 8E0C              ;       Puntero_de_impresion en HL.
 232+ 8E0C              ;       Impacto/Dirección en BC.
 233+ 8E0C
 234+ 8E0C CD 43 8E     18 call Almacena_disparo
 235+ 8E0F 18 22            jr 6F                                               ; RET.
 236+ 8E11
 237+ 8E11              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E11
 239+ 8E11 28 11        3 jr z,5F
 240+ 8E13
 241+ 8E13              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E13              ;
 243+ 8E13              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E13              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E13              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E13              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E13
 248+ 8E13              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E13              ;	   ""        ""       "f9", B="1"
 250+ 8E13              ;	   ""        ""       "fb", B="2"
 251+ 8E13              ; 	   ""        ""       "fb", B="3"
 252+ 8E13
 253+ 8E13 2A 7F 87     	ld hl,(Posicion_actual)
 254+ 8E16 CD 18 95     	call NextScan
 255+ 8E19
 256+ 8E19              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E19              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E19              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E19              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E19
 261+ 8E19 CD 3B 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E1C
 263+ 8E1C              ; 	No se produce impacto. B="$80"
 264+ 8E1C              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E1C
 266+ 8E1C 01 80 80         ld bc,$8080
 267+ 8E1F
 268+ 8E1F              ; 	LLegados a este punto tendremos:
 269+ 8E1F              ;
 270+ 8E1F              ;       Puntero_objeto_disparo en IY.
 271+ 8E1F              ;       Rutinas_de_impresion en IX.
 272+ 8E1F              ;       Puntero_de_impresion en HL.
 273+ 8E1F              ;       Impacto/Dirección en BC.
 274+ 8E1F
 275+ 8E1F CD 43 8E         call Almacena_disparo
 276+ 8E22 18 0F            jr 6F                                           ; RET.
 277+ 8E24
 278+ 8E24              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E24              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E24              ;
 281+ 8E24              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E24              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E24              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E24              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E24
 286+ 8E24 2A 7F 87     5 ld hl,(Posicion_actual)
 287+ 8E27 CD 18 95     	call NextScan
 288+ 8E2A
 289+ 8E2A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E2A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E2A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E2A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E2A
 294+ 8E2A CD 34 8E         call Ajusta_disparo_parte_derecha
 295+ 8E2D
 296+ 8E2D              ; 	No se produce impacto. B="$80"
 297+ 8E2D              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E2D
 299+ 8E2D 01 80 80     15 ld bc,$8080
 300+ 8E30
 301+ 8E30              ; 	LLegados a este punto tendremos:
 302+ 8E30              ;
 303+ 8E30              ;       Puntero_objeto_disparo en IY.
 304+ 8E30              ;       Rutinas_de_impresion en IX.
 305+ 8E30              ;       Puntero_de_impresion en HL.
 306+ 8E30              ;       Impacto/Dirección en BC.
 307+ 8E30
 308+ 8E30 CD 43 8E         call Almacena_disparo
 309+ 8E33
 310+ 8E33 C9           6 ret
 311+ 8E34
 312+ 8E34              ; ----------------------------------------------------------------
 313+ 8E34              ;
 314+ 8E34              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E34              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E34              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E34
 318+ 8E34 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E35 FE 02            cp 2
 320+ 8E37 38 01            jr c,1F
 321+ 8E39 23               inc hl
 322+ 8E3A C9           1 ret
 323+ 8E3B
 324+ 8E3B 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E3C FE 01        	cp 1
 326+ 8E3E 20 01        	jr nz,1F
 327+ 8E40 2B           	dec hl
 328+ 8E41 2B           1 dec hl
 329+ 8E42 C9               ret
 330+ 8E43
 331+ 8E43              ; ----------------------------------------------------------------
 332+ 8E43              ;
 333+ 8E43              ;   25/02/23
 334+ 8E43              ;
 335+ 8E43              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E43              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E43              ;
 338+ 8E43              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E43              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E43
 341+ 8E43              Almacena_disparo
 342+ 8E43
 343+ 8E43 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E44 F1               pop af
 345+ 8E45 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E46
 347+ 8E46 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E47 E6 01            and 1
 349+ 8E49 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E4B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E4B              ; 	Dispara AMADEUS.
 352+ 8E4B
 353+ 8E4B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E4B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E4B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E4B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E4B
 358+ 8E4B C5               push bc
 359+ 8E4C 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E4F 2A E2 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E52 A7               and a
 362+ 8E53 ED 42            sbc hl,bc
 363+ 8E55 CC 31 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E58 C1               pop bc
 365+ 8E59 28 54            jr z,4F
 366+ 8E5B
 367+ 8E5B 2A E2 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E5E 23               inc hl
 369+ 8E5F 23               inc hl
 370+ 8E60 22 E2 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E63              ;                                                   ; _ Disparo_(+1).
 372+ 8E63 18 18            jr 2F
 373+ 8E65
 374+ 8E65              ; Dispara una entidad.
 375+ 8E65
 376+ 8E65 C5           1 push bc
 377+ 8E66 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E69 2A E0 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E6C A7               and a
 380+ 8E6D ED 42            sbc hl,bc
 381+ 8E6F CC 2A 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E72 C1               pop bc
 383+ 8E73 28 3A            jr z,4F
 384+ 8E75
 385+ 8E75 2A E0 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E78 23               inc hl
 387+ 8E79 23               inc hl
 388+ 8E7A 22 E0 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E7D              ;                                                   ; _ Disparo_(+1).
 390+ 8E7D CD AC 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E80              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E80              ;
 393+ 8E80              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E80              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E80              ;                                                     Puntero_de_impresion en HL.
 396+ 8E80              ;                                                     Impacto/Dirección en BC.
 397+ 8E80
 398+ 8E80 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E81 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E82 23               inc hl                                          ; _ al siguiente.
 401+ 8E83 A7               and a
 402+ 8E84 20 C0            jr nz,3B
 403+ 8E86
 404+ 8E86 08               ex af,af
 405+ 8E87 ED 73 CF 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E8B F9               ld sp,hl
 407+ 8E8C
 408+ 8E8C DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E8E F5               push af                                         ; Puntero de impresión.
 410+ 8E8F FD E5            push iy                                         ; Puntero objeto.
 411+ 8E91 C5               push bc                                         ; Control.
 412+ 8E92
 413+ 8E92 ED 7B CF 87      ld sp,(Stack)
 414+ 8E96
 415+ 8E96              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E96
 417+ 8E96 21 BE 87     	ld hl,Ctrl_1
 418+ 8E99 CB C6        	set 0,(hl)
 419+ 8E9B
 420+ 8E9B DD E5        	push ix
 421+ 8E9D E1               pop hl
 422+ 8E9E F5               push af
 423+ 8E9F DD E1            pop ix
 424+ 8EA1
 425+ 8EA1 CD 16 71     	call Guarda_foto_registros
 426+ 8EA4
 427+ 8EA4 21 BE 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8EA7 CB 86        	res 0,(hl)
 429+ 8EA9
 430+ 8EA9              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8EA9              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8EA9
 433+ 8EA9 CD 31 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8EAC CD 2A 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8EAF
 436+ 8EAF C9           4 ret
 437+ 8EB0
 438+ 8EB0              ; ----------------------------------------------------------------
 439+ 8EB0              ;
 440+ 8EB0              ;   4/3/23
 441+ 8EB0              ;
 442+ 8EB0              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8EB0              ;   _ al generarse el disparo.
 444+ 8EB0              ;
 445+ 8EB0              ;       "$80" ..... No se produce colisión.
 446+ 8EB0              ;       "$81" ..... Se produce colisión.
 447+ 8EB0              ;
 448+ 8EB0              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8EB0              ;         _ que forman el disparo.
 450+ 8EB0
 451+ 8EB0
 452+ 8EB0              Comprueba_Colision
 453+ 8EB0
 454+ 8EB0              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8EB0
 456+ 8EB0 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8EB2 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8EB3
 459+ 8EB3 CD E9 8E         call Modifica_H_Velocidad_disparo
 460+ 8EB6
 461+ 8EB6 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8EB7 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8EB9 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8EBB
 465+ 8EBB 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8EBD CD D9 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8EC0
 468+ 8EC0 7B               ld a,e
 469+ 8EC1 E6 01            and 1
 470+ 8EC3 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8EC5              ;                                                  ; _ para activar IMPACTO.
 472+ 8EC5 E1               pop hl
 473+ 8EC6 E5               push hl
 474+ 8EC7 CD 18 95         call NextScan
 475+ 8ECA
 476+ 8ECA 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8ECB FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8ECD 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8ECF              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8ECF 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8ED1 CD D9 8E         call Bucle_2
 482+ 8ED4
 483+ 8ED4 43           1 ld b,e
 484+ 8ED5 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8ED6 FD E1            pop iy
 486+ 8ED8 C9               ret
 487+ 8ED9
 488+ 8ED9              ; ---------- ----------
 489+ 8ED9
 490+ 8ED9 06 02        Bucle_2 ld b,2
 491+ 8EDB FD 7E 00     2 ld a,(iy)
 492+ 8EDE A6               and (hl)
 493+ 8EDF 28 02            jr z,1F
 494+ 8EE1 1E 81            ld e,$81
 495+ 8EE3 23           1 inc hl
 496+ 8EE4 FD 23            inc iy
 497+ 8EE6 10 F3            djnz 2B
 498+ 8EE8 C9               ret
 499+ 8EE9
 500+ 8EE9              ; ---------- ----------
 501+ 8EE9              ;
 502+ 8EE9              ;   21/7/23
 503+ 8EE9
 504+ 8EE9              Modifica_H_Velocidad_disparo
 505+ 8EE9
 506+ 8EE9 3A EF 87         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EEC FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EEE D0               ret nc                                         ; _ incrementamos H.
 509+ 8EEF 24               inc h
 510+ 8EF0
 511+ 8EF0 C9               ret
 512+ 8EF1
 513+ 8EF1              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EF1              ;
 515+ 8EF1              ;   04/12/23
 516+ 8EF1              ;
 517+ 8EF1              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EF1              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EF1              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EF1              ;
 521+ 8EF1              ;   MODIFICA: HL,DE,B y A.
 522+ 8EF1
 523+ 8EF1              Genera_coordenadas_X
 524+ 8EF1
 525+ 8EF1              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EF1              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EF1
 528+ 8EF1              ;   Limpiamos almacenes.
 529+ 8EF1
 530+ 8EF1 CD 22 8F         call Limpia_Coordenadas_X
 531+ 8EF4
 532+ 8EF4              ;   Almacenamos coordenadas X.
 533+ 8EF4
 534+ 8EF4              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8EF4
 536+ 8EF4 2A 9D 87         ld hl,(Puntero_de_impresion)
 537+ 8EF7 11 EC 87         ld de,Coordenadas_X_Entidad
 538+ 8EFA 06 02            ld b,2
 539+ 8EFC
 540+ 8EFC 3A 85 87         ld a,(CTRL_DESPLZ)
 541+ 8EFF A7               and a
 542+ 8F00 28 01            jr z,1F
 543+ 8F02 04               inc b
 544+ 8F03
 545+ 8F03 CD 19 8F     1 call Guarda_coordenadas_X
 546+ 8F06
 547+ 8F06              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8F06
 549+ 8F06 2A AD 85         ld hl,(p.imp.amadeus)
 550+ 8F09 11 E9 87         ld de,Coordenadas_X_Amadeus
 551+ 8F0C 06 02            ld b,2
 552+ 8F0E
 553+ 8F0E 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8F11 A7               and a
 555+ 8F12 28 01            jr z,2F
 556+ 8F14 04               inc b
 557+ 8F15
 558+ 8F15 CD 19 8F     2 call Guarda_coordenadas_X
 559+ 8F18
 560+ 8F18              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8F18
 562+ 8F18 C9               ret
 563+ 8F19
 564+ 8F19              ; ----- ----- ----- ----- -----
 565+ 8F19
 566+ 8F19 7D           Guarda_coordenadas_X  ld a,l
 567+ 8F1A E6 1F            and $1f
 568+ 8F1C 12           1 ld (de),a
 569+ 8F1D 3C               inc a
 570+ 8F1E 13               inc de
 571+ 8F1F 10 FB            djnz 1B
 572+ 8F21 C9               ret
 573+ 8F22
 574+ 8F22 AF           Limpia_Coordenadas_X xor a
 575+ 8F23 06 06            ld b,6
 576+ 8F25 21 E9 87         ld hl,Coordenadas_X_Amadeus
 577+ 8F28 77           1 ld (hl),a
 578+ 8F29 23               inc hl
 579+ 8F2A 10 FC            djnz 1B
 580+ 8F2C C9               ret
 581+ 8F2D
 582+ 8F2D              ; ----- ----- ----- ----- -----
 583+ 8F2D
 584+ 8F2D              Compara_coordenadas_X
 585+ 8F2D
 586+ 8F2D 06 03            ld b,3
 587+ 8F2F 11 EE 87         ld de,Coordenadas_X_Entidad+2
 588+ 8F32
 589+ 8F32 1A               ld a,(de)
 590+ 8F33 A7               and a
 591+ 8F34 20 01            jr nz,2F
 592+ 8F36 05               dec b
 593+ 8F37
 594+ 8F37 1B           2 dec de
 595+ 8F38 1B               dec de
 596+ 8F39 21 E9 87         ld hl,Coordenadas_X_Amadeus
 597+ 8F3C
 598+ 8F3C D5           1 push de
 599+ 8F3D E5               push hl
 600+ 8F3E C5               push bc
 601+ 8F3F
 602+ 8F3F CD 49 8F         call Comparando
 603+ 8F42
 604+ 8F42 C1               pop bc
 605+ 8F43 E1               pop hl
 606+ 8F44 D1               pop de
 607+ 8F45
 608+ 8F45 13               inc de
 609+ 8F46 10 F4            djnz 1B
 610+ 8F48
 611+ 8F48 C9               ret
 612+ 8F49
 613+ 8F49              ; ----- ----- ----- ----- -----
 614+ 8F49              ;
 615+ 8F49              ;   4/12/23
 616+ 8F49              ;
 617+ 8F49              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8F49
 619+ 8F49 06 03        Comparando ld b,3
 620+ 8F4B 1A               ld a,(de)
 621+ 8F4C 4E           2 ld c,(hl)
 622+ 8F4D B9               cp c
 623+ 8F4E 28 04            jr z,1F
 624+ 8F50 23               inc hl
 625+ 8F51 10 F9            djnz 2B
 626+ 8F53 C9               ret
 627+ 8F54
 628+ 8F54 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F56 32 96 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F59 21 E4 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F5C CB D6            set 2,(hl)
 632+ 8F5E C9               ret
 633+ 8F5F
 634+ 8F5F              ; -----------------------------------------------------------------------
 635+ 8F5F              ;
 636+ 8F5F              ;   7/12/23
 637+ 8F5F              ;
 638+ 8F5F
 639+ 8F5F              Detecta_colision_nave_entidad
 640+ 8F5F
 641+ 8F5F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F5F
 643+ 8F5F FD 2A 81 87      ld iy,(Puntero_objeto)
 644+ 8F63 2A 9D 87         ld hl,(Puntero_de_impresion)
 645+ 8F66
 646+ 8F66 E5               push hl
 647+ 8F67
 648+ 8F67              ; ----- ----- -----
 649+ 8F67 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F69 06 0A            ld b,10
 651+ 8F6B CD 9B 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F6E 7B               ld a,e
 653+ 8F6F FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F71 38 0E            jr c,3F
 655+ 8F73
 656+ 8F73              ; LLegados a este punto:
 657+ 8F73              ;
 658+ 8F73              ;   HAY COLISIÓN !!!!!.
 659+ 8F73              ;
 660+ 8F73              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F73              ;   SET el bit3 de (Impacto2).
 662+ 8F73              ;
 663+ 8F73              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F73
 665+ 8F73 21 96 87         ld hl,Impacto
 666+ 8F76 36 01            ld (hl),1
 667+ 8F78 21 E4 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F7B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F7D CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F7F
 671+ 8F7F 18 18            jr 1F
 672+ 8F81
 673+ 8F81              ; -----
 674+ 8F81
 675+ 8F81 E1           3 pop hl
 676+ 8F82 CD 18 95         call NextScan
 677+ 8F85 E5               push hl
 678+ 8F86 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F87 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F89 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F8B 30 0C            jr nc,1F
 682+ 8F8D              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F8D 10 DC            djnz 2B
 684+ 8F8F
 685+ 8F8F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F8F
 687+ 8F8F              ; LLegados a este punto:
 688+ 8F8F              ;
 689+ 8F8F              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F8F              ;
 691+ 8F8F              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F8F              ;   RES el bit2 de (Impacto2).
 693+ 8F8F              ;
 694+ 8F8F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F8F              ;   Lo colocamos a "0".
 696+ 8F8F
 697+ 8F8F 21 E4 87         ld hl,Impacto2
 698+ 8F92 CB 96            res 2,(hl)
 699+ 8F94 2A E5 87         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F97 36 00            ld (hl),0
 701+ 8F99
 702+ 8F99 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F9A C9               ret
 704+ 8F9B
 705+ 8F9B               ; ---------- ----------
 706+ 8F9B
 707+ 8F9B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F9C 3A 7E 87         ld a,(Columns)
 709+ 8F9F 47               ld b,a
 710+ 8FA0 FD 7E 00     2 ld a,(iy)
 711+ 8FA3 BE               cp (hl)
 712+ 8FA4 28 01            jr z,1F
 713+ 8FA6
 714+ 8FA6 1C               inc e
 715+ 8FA7
 716+ 8FA7 23           1 inc hl
 717+ 8FA8 FD 23            inc iy
 718+ 8FAA 10 F4            djnz 2B
 719+ 8FAC C1               pop bc
 720+ 8FAD C9               ret
 721+ 8FAE
 722+ 8FAE              ; -------------------------------------------------------------------------------------------------------------
 723+ 8FAE              ;
 724+ 8FAE              ;   13/03/23
 725+ 8FAE              ;
 726+ 8FAE              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8FAE              ;
 728+ 8FAE              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8FAE
 730+ 8FAE 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8FB1 7E               ld a,(hl)
 732+ 8FB2 A7               and a
 733+ 8FB3 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8FB4
 735+ 8FB4 44               ld b,h
 736+ 8FB5 4D               ld c,l
 737+ 8FB6 2A D7 87         ld hl,(Stack_snapshot_disparos)
 738+ 8FB9 E5               push hl
 739+ 8FBA A7               and a
 740+ 8FBB ED 42            sbc hl,bc
 741+ 8FBD E5               push hl
 742+ 8FBE C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8FBF
 744+ 8FBF E1               pop hl
 745+ 8FC0 54               ld d,h
 746+ 8FC1 5D               ld e,l
 747+ 8FC2 1B               dec de
 748+ 8FC3 ED B8            lddr                                                ; Limpiamos.
 749+ 8FC5
 750+ 8FC5 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8FC8 22 D7 87         ld (Stack_snapshot_disparos),hl
 752+ 8FCB
 753+ 8FCB C9               ret
 754+ 8FCC
 755+ 8FCC              ; -------------------------------------------------------------------------------------------------------------
 756+ 8FCC              ;
 757+ 8FCC              ;   18/07/23
 758+ 8FCC              ;
 759+ 8FCC
 760+ 8FCC              Motor_de_disparos
 761+ 8FCC
 762+ 8FCC              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8FCC
 764+ 8FCC 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8FCF 2A E2 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8FD2
 767+ 8FD2 CD AC 8B     2 call Extrae_address
 768+ 8FD5 7E               ld a,(hl)
 769+ 8FD6 A7               and a
 770+ 8FD7 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8FD9
 772+ 8FD9              ; ----- ----- ----- ----- ----- -----
 773+ 8FD9
 774+ 8FD9 C5               push bc
 775+ 8FDA CD 9E 90         call foto_disparo_a_borrar
 776+ 8FDD
 777+ 8FDD              ; Existe colisión con este disparo???
 778+ 8FDD
 779+ 8FDD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8FDE 7E               ld a,(hl)
 781+ 8FDF 2B               dec hl
 782+ 8FE0 E6 01            and 1
 783+ 8FE2 28 1D            jr z,9F
 784+ 8FE4
 785+ 8FE4              ;   En este punto:
 786+ 8FE4              ;
 787+ 8FE4              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8FE4              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8FE4              ;   _con la entidad).
 790+ 8FE4              ;
 791+ 8FE4              ;   Disparo_2A defw 0                                ; Control.
 792+ 8FE4              ;    defw 0                                          ; Puntero objeto.
 793+ 8FE4              ;    defw 0                                          ; Puntero de impresión.
 794+ 8FE4              ;    defw 0                                          ; Rutina de impresión.
 795+ 8FE4
 796+ 8FE4 E5               push hl
 797+ 8FE5
 798+ 8FE5 06 04            ld b,4
 799+ 8FE7 23           19 inc hl
 800+ 8FE8 10 FD            djnz 19B
 801+ 8FEA
 802+ 8FEA CD AC 8B         call Extrae_address
 803+ 8FED CD EE 9B         call Genera_coordenadas_disparo
 804+ 8FF0
 805+ 8FF0              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FF0
 807+ 8FF0 21 E7 87         ld hl,Coordenadas_disparo_certero
 808+ 8FF3 72               ld (hl),d
 809+ 8FF4 23               inc hl
 810+ 8FF5 73               ld (hl),e
 811+ 8FF6
 812+ 8FF6              ; Elimino el disparo de la base de datos.
 813+ 8FF6
 814+ 8FF6 E1               pop hl
 815+ 8FF7 CD 1D 91         call Elimina_disparo_de_base_de_datos
 816+ 8FFA 21 E4 87         ld hl,Impacto2
 817+ 8FFD CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FFF
 819+ 8FFF 18 06            jr 11F
 820+ 9001
 821+ 9001 CD C7 90     9 call Mueve_disparo
 822+ 9004 CD 9E 90         call foto_disparo_a_borrar
 823+ 9007
 824+ 9007 C1           11 pop bc
 825+ 9008 18 04            jr 7F
 826+ 900A
 827+ 900A              ; ----- ----- ----- ----- ----- -----
 828+ 900A
 829+ 900A ED 42        1 sbc hl,bc
 830+ 900C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 900E
 832+ 900E 2A E2 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9011 23               inc hl
 834+ 9012 23               inc hl
 835+ 9013 22 E2 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9016 18 BA            jr 2B
 837+ 9018
 838+ 9018 CD 31 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 901B              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 901B
 841+ 901B              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 901B
 843+ 901B 01 6E 85         ld bc,Disparo_11
 844+ 901E 2A E0 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9021
 846+ 9021 CD AC 8B     5 call Extrae_address
 847+ 9024 7E               ld a,(hl)
 848+ 9025 A7               and a
 849+ 9026 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9028
 851+ 9028              ; ----- ----- ----- ----- ----- -----
 852+ 9028
 853+ 9028 C5               push bc
 854+ 9029 CD 9E 90         call foto_disparo_a_borrar
 855+ 902C
 856+ 902C              ; Existe colisión con este disparo???
 857+ 902C
 858+ 902C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 902D 7E               ld a,(hl)
 860+ 902E 2B               dec hl
 861+ 902F E6 01            and 1
 862+ 9031 28 4D            jr z,10F
 863+ 9033
 864+ 9033              ;! La colisión se produce con Amadeus???
 865+ 9033              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9033
 867+ 9033 E5               push hl
 868+ 9034
 869+ 9034 06 04            ld b,4
 870+ 9036 23           16 inc hl
 871+ 9037 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9039
 873+ 9039 CD AC 8B         call Extrae_address
 874+ 903C CD EE 9B         call Genera_coordenadas_disparo
 875+ 903F
 876+ 903F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9040 FE 16            cp $16
 878+ 9042 38 2A            jr c,15F
 879+ 9044
 880+ 9044
 881+ 9044              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9044
 883+ 9044 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9045
 885+ 9045              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9045
 887+ 9045 2A AD 85         ld hl,(p.imp.amadeus)
 888+ 9048
 889+ 9048              ; Coordenada X de Amadeus en D.
 890+ 9048
 891+ 9048 7D               ld a,l
 892+ 9049 E6 1F            and $1F
 893+ 904B 57               ld d,a
 894+ 904C
 895+ 904C 21 8A 85         ld hl,Amadeus_db+8
 896+ 904F 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9050
 898+ 9050 21 E9 87         ld hl,Coordenadas_X_Amadeus
 899+ 9053 CD 19 8F         call Guarda_coordenadas_X
 900+ 9056
 901+ 9056 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9057
 903+ 9057              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9057
 905+ 9057 06 02            ld b,2
 906+ 9059 C5           20 push bc
 907+ 905A
 908+ 905A 06 03            ld b,3
 909+ 905C 21 E9 87         ld hl,Coordenadas_X_Amadeus
 910+ 905F 7E           18 ld a,(hl)
 911+ 9060 BA               cp d
 912+ 9061 20 04            jr nz,17F
 913+ 9063
 914+ 9063              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9063
 916+ 9063 C1               pop bc
 917+ 9064 E1               pop hl
 918+ 9065 18 0D            jr 14F
 919+ 9067
 920+ 9067 23           17 inc hl
 921+ 9068 10 F5            djnz 18B
 922+ 906A
 923+ 906A 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 906B
 925+ 906B C1               pop bc
 926+ 906C 10 EB            djnz 20B
 927+ 906E
 928+ 906E
 929+ 906E              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 906E              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 906E
 932+ 906E E1           15 pop hl
 933+ 906F 23               inc hl
 934+ 9070 35               dec (hl)
 935+ 9071 2B               dec hl
 936+ 9072 18 0C            jr 10F
 937+ 9074
 938+ 9074              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9074              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9074
 941+ 9074 E5           14 push hl
 942+ 9075 CD 1D 91         call Elimina_disparo_de_base_de_datos
 943+ 9078 21 E4 87         ld hl,Impacto2
 944+ 907B CB CE            set 1,(hl)
 945+ 907D E1               pop hl
 946+ 907E 18 06            jr 12F
 947+ 9080
 948+ 9080              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9080
 950+ 9080 CD C7 90     10 call Mueve_disparo
 951+ 9083 CD 9E 90         call foto_disparo_a_borrar
 952+ 9086 C1           12 pop bc
 953+ 9087
 954+ 9087 18 04            jr 8F
 955+ 9089
 956+ 9089              ; ----- ----- ----- ----- ----- -----
 957+ 9089
 958+ 9089 ED 42        4 sbc hl,bc
 959+ 908B 28 0A            jr z,6F
 960+ 908D
 961+ 908D 2A E0 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9090 23               inc hl
 963+ 9091 23               inc hl
 964+ 9092 22 E0 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9095 18 8A            jr 5B
 966+ 9097
 967+ 9097 CD 2A 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 909A CD 22 8F         call Limpia_Coordenadas_X
 969+ 909D C9               ret
 970+ 909E
 971+ 909E              ; ------------------------------------------------------------------
 972+ 909E
 973+ 909E              foto_disparo_a_borrar
 974+ 909E
 975+ 909E 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 909F A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 90A0 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 90A1
 979+ 90A1 E5               push hl
 980+ 90A2 23               inc hl
 981+ 90A3 23               inc hl
 982+ 90A4 ED 73 CF 87      ld (Stack),sp
 983+ 90A8 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 90A9 FD E1            pop iy
 985+ 90AB DD E1            pop ix
 986+ 90AD E1               pop hl
 987+ 90AE ED 7B CF 87      ld sp,(Stack)
 988+ 90B2 3A BE 87         ld a,(Ctrl_1)
 989+ 90B5 CB C7            set 0,a
 990+ 90B7 32 BE 87         ld (Ctrl_1),a
 991+ 90BA CD 16 71         call Guarda_foto_registros
 992+ 90BD 3A BE 87         ld a,(Ctrl_1)
 993+ 90C0 CB 87            res 0,a
 994+ 90C2 32 BE 87         ld (Ctrl_1),a
 995+ 90C5 E1               pop hl
 996+ 90C6 C9               ret
 997+ 90C7
 998+ 90C7              ;---------------------------------------------------
 999+ 90C7              ;
1000+ 90C7              ;   18/07/23
1001+ 90C7              ;
1002+ 90C7
1003+ 90C7              Mueve_disparo
1004+ 90C7
1005+ 90C7              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 90C7              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 90C7              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 90C7
1009+ 90C7 E5               push hl
1010+ 90C8
1011+ 90C8 7E               ld a,(hl)
1012+ 90C9
1013+ 90C9 06 04            ld b,4
1014+ 90CB 23           1 inc hl
1015+ 90CC 10 FD            djnz 1B
1016+ 90CE
1017+ 90CE              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 90CE
1019+ 90CE CD AC 8B         call Extrae_address
1020+ 90D1
1021+ 90D1 E6 01            and 1
1022+ 90D3 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 90D5
1024+ 90D5              ; Disparo hacia arriba, (Amadeus).
1025+ 90D5
1026+ 90D5              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 90D5              ; _ de la dificultad.
1028+ 90D5
1029+ 90D5 CD 27 95         call PreviousScan
1030+ 90D8 CD 27 95         call PreviousScan
1031+ 90DB CD 27 95         call PreviousScan
1032+ 90DE CD 27 95         call PreviousScan
1033+ 90E1
1034+ 90E1              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 90E1
1036+ 90E1 7C               ld a,h
1037+ 90E2 FE 40            cp $40
1038+ 90E4 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 90E6
1040+ 90E6              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 90E6
1042+ 90E6 EB               ex de,hl
1043+ 90E7 06 04            ld b,4
1044+ 90E9 2B           6 dec hl
1045+ 90EA 10 FD            djnz 6B
1046+ 90EC
1047+ 90EC CD 1D 91         call Elimina_disparo_de_base_de_datos
1048+ 90EF E1               pop hl
1049+ 90F0 18 10            jr 7F
1050+ 90F2
1051+ 90F2              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90F2              ; HL contiene el puntero de impresión del disparo.
1053+ 90F2              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90F2
1055+ 90F2 D5           3 push de
1056+ 90F3 C5               push bc
1057+ 90F4
1058+ 90F4 CD B0 8E         call Comprueba_Colision
1059+ 90F7
1060+ 90F7              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90F7
1062+ 90F7 78               ld a,b
1063+ 90F8
1064+ 90F8 C1               pop bc
1065+ 90F9 D1               pop de
1066+ 90FA
1067+ 90FA EB               ex de,hl
1068+ 90FB
1069+ 90FB 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90FC 23               inc hl                                      ; _ movimiento.
1071+ 90FD 72               ld (hl),d
1072+ 90FE
1073+ 90FE E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90FF
1075+ 90FF 23               inc hl                                      ; _ en curso.
1076+ 9100 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9101 2B               dec hl
1078+ 9102
1079+ 9102 C9           7 ret
1080+ 9103
1081+ 9103              ; Disparo hacia abajo, (Entidad).
1082+ 9103
1083+ 9103 3A EF 87     2 ld a,(Velocidad_disparo_entidades)
1084+ 9106 47               ld b,a
1085+ 9107
1086+ 9107 CD 18 95     4 call NextScan
1087+ 910A 10 FB            djnz 4B
1088+ 910C
1089+ 910C              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 910C
1091+ 910C 7C               ld a,h
1092+ 910D FE 58            cp $58
1093+ 910F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9111
1095+ 9111 EB               ex de,hl
1096+ 9112 06 04            ld b,4
1097+ 9114 2B           5 dec hl
1098+ 9115 10 FD            djnz 5B
1099+ 9117
1100+ 9117 CD 1D 91         call Elimina_disparo_de_base_de_datos
1101+ 911A E1               pop hl
1102+ 911B 18 E5            jr 7B
1103+ 911D
1104+ 911D              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 911D
1106+ 911D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9120 AF               xor a
1108+ 9121 77               ld (hl),a
1109+ 9122 54               ld d,h
1110+ 9123 5D               ld e,l
1111+ 9124 13               inc de
1112+ 9125 ED B0            ldir
1113+ 9127 C9               ret
1114+ 9128
1115+ 9128              ; -----------------------------------------------------------------
1116+ 9128              ;
1117+ 9128              ;   7/12/23
1118+ 9128              ;
1119+ 9128
1120+ 9128 3A E4 87     Selector_de_impactos ld a,(Impacto2)
1121+ 912B A7               and a
1122+ 912C C8               ret z
1123+ 912D
1124+ 912D              ; Analizamos si hay impacto por disparos.
1125+ 912D
1126+ 912D              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 912D
1128+ 912D CB 4F            bit 1,a
1129+ 912F 28 07            jr z,1F
1130+ 9131
1131+ 9131 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9134 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9136 18 08            jr 2F
1134+ 9138
1135+ 9138 CB 47        1 bit 0,a
1136+ 913A C8               ret z
1137+ 913B
1138+ 913B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 913B
1140+ 913B 21 BE 87         ld hl,Ctrl_1
1141+ 913E CB D6            set 2,(hl)
1142+ 9140
1143+ 9140 C9           2 ret
1144+ 9141
1145+ 9141              ; -----------------------------------------------------------------
1146+ 9141              ;
1147+ 9141              ;   25/04/23
1148+ 9141              ;
1149+ 9141
1150+ 9141              Determina_resultado_comparativa
1151+ 9141
1152+ 9141              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9141              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9141              ;
1155+ 9141              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9141              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9141              ;
1158+ 9141              ;   SBC HL,DE
1159+ 9141
1160+ 9141              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9141              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9141
1163+ 9141              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9141              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9141
1166+ 9141
1167+ 9141 3A 91 87         ld a,(Cuad_objeto)
1168+ 9144 FE 02            cp 2
1169+ 9146 28 26            jr z,2F
1170+ 9148 38 24            jr c,2F
1171+ 914A
1172+ 914A              ; Cuadrantes 3º y 4º
1173+ 914A
1174+ 914A E6 01            and 1
1175+ 914C 28 10            jr z,4F
1176+ 914E
1177+ 914E              ; Cuadrante 3º
1178+ 914E
1179+ 914E 7C               ld a,h
1180+ 914F 06 00            ld b,0
1181+ 9151
1182+ 9151 CD DC 91         call Compara_cositas_H3
1183+ 9154
1184+ 9154 04               inc b
1185+ 9155 05               dec b
1186+ 9156 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9157
1188+ 9157 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9158 06 00            ld b,0
1190+ 915A
1191+ 915A CD EE 91         call Compara_cositas_L3
1192+ 915D C9               ret
1193+ 915E
1194+ 915E              ; Cuadrante 4º
1195+ 915E
1196+ 915E 7C           4 ld a,h
1197+ 915F 06 00            ld b,0
1198+ 9161
1199+ 9161 CD 00 92         call Compara_cositas_H4
1200+ 9164
1201+ 9164 04               inc b
1202+ 9165 05               dec b
1203+ 9166 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9167
1205+ 9167 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9168 06 00            ld b,0
1207+ 916A
1208+ 916A CD 16 92         call Compara_cositas_L4
1209+ 916D C9               ret
1210+ 916E
1211+ 916E              ; Cuadrantes 1º y 2º.
1212+ 916E
1213+ 916E 28 10        2 jr z,3F
1214+ 9170
1215+ 9170              ; 1er Cuadrante
1216+ 9170
1217+ 9170 7C               ld a,h
1218+ 9171 06 00            ld b,0
1219+ 9173
1220+ 9173 CD B4 91         call Compara_cositas_H1
1221+ 9176
1222+ 9176 04               inc b
1223+ 9177 05               dec b
1224+ 9178 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9179
1226+ 9179 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 917A 06 00            ld b,0
1228+ 917C
1229+ 917C CD CA 91         call Compara_cositas_L1
1230+ 917F C9               ret
1231+ 9180
1232+ 9180
1233+ 9180              ; 2º Cuadrante
1234+ 9180
1235+ 9180 7C           3 ld a,h
1236+ 9181 06 00            ld b,0
1237+ 9183
1238+ 9183 CD 90 91         call Compara_cositas_H2
1239+ 9186
1240+ 9186 04               inc b
1241+ 9187 05               dec b
1242+ 9188 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9189
1244+ 9189 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 918A 06 00            ld b,0
1246+ 918C
1247+ 918C CD A2 91         call Compara_cositas_L2
1248+ 918F C9               ret
1249+ 9190
1250+ 9190 A7           Compara_cositas_H2 and a
1251+ 9191 28 0D            jr z,1F
1252+ 9193              ;    cp $fd
1253+ 9193              ;    jr z,1F
1254+ 9193              ;    cp $fe
1255+ 9193              ;    jr z,1F
1256+ 9193 FE FF            cp $ff
1257+ 9195 28 09            jr z,1F
1258+ 9197 FE 01            cp $01
1259+ 9199 28 05            jr z,1F
1260+ 919B FE 02            cp $02
1261+ 919D 28 01            jr z,1F
1262+ 919F C0               ret nz
1263+ 91A0 04           1 inc b
1264+ 91A1 C9               ret
1265+ 91A2
1266+ 91A2 A7           Compara_cositas_L2 and a
1267+ 91A3 28 0D            jr z,1F
1268+ 91A5              ;    cp $fd
1269+ 91A5              ;    jr z,1F
1270+ 91A5 FE FE            cp $fe
1271+ 91A7 28 09            jr z,1F
1272+ 91A9 FE FF            cp $ff
1273+ 91AB 28 05            jr z,1F
1274+ 91AD FE 01            cp $01
1275+ 91AF 28 01            jr z,1F
1276+ 91B1              ;    cp $02
1277+ 91B1              ;    jr z,1F
1278+ 91B1 C0               ret nz
1279+ 91B2 04           1 inc b
1280+ 91B3 C9               ret
1281+ 91B4
1282+ 91B4 A7           Compara_cositas_H1 and a
1283+ 91B5 28 11            jr z,1F
1284+ 91B7              ;    cp $fd
1285+ 91B7              ;    jr z,1F
1286+ 91B7              ;    cp $fe
1287+ 91B7              ;    jr z,1F
1288+ 91B7 FE FF            cp $ff
1289+ 91B9 28 0D            jr z,1F
1290+ 91BB FE 01            cp $01
1291+ 91BD 28 09            jr z,1F
1292+ 91BF FE 02            cp $02
1293+ 91C1 28 05            jr z,1F
1294+ 91C3 FE 03            cp $03
1295+ 91C5 28 01            jr z,1F
1296+ 91C7 C0               ret nz
1297+ 91C8 04           1 inc b
1298+ 91C9 C9               ret
1299+ 91CA
1300+ 91CA A7           Compara_cositas_L1 and a
1301+ 91CB 28 0D            jr z,1F
1302+ 91CD              ;    cp $fd
1303+ 91CD              ;    jr z,1F
1304+ 91CD              ;    cp $fe
1305+ 91CD              ;    jr z,1F
1306+ 91CD              ;    cp $ff
1307+ 91CD              ;    jr z,1F
1308+ 91CD FE 01            cp $01
1309+ 91CF 28 09            jr z,1F
1310+ 91D1 FE 02            cp $02
1311+ 91D3 28 05            jr z,1F
1312+ 91D5 FE 03            cp $03
1313+ 91D7 28 01            jr z,1F
1314+ 91D9 C0               ret nz
1315+ 91DA 04           1 inc b
1316+ 91DB C9               ret
1317+ 91DC
1318+ 91DC A7           Compara_cositas_H3 and a
1319+ 91DD 28 0D            jr z,1F
1320+ 91DF              ;    cp $fd
1321+ 91DF              ;    jr z,1F
1322+ 91DF FE FE            cp $fe
1323+ 91E1 28 09            jr z,1F
1324+ 91E3 FE FF            cp $ff
1325+ 91E5 28 05            jr z,1F
1326+ 91E7 FE 01            cp $01
1327+ 91E9 28 01            jr z,1F
1328+ 91EB              ;    cp $02
1329+ 91EB              ;    jr z,1F
1330+ 91EB              ;    cp $03
1331+ 91EB              ;    jr z,1F
1332+ 91EB C0               ret nz
1333+ 91EC 04           1 inc b
1334+ 91ED C9               ret
1335+ 91EE
1336+ 91EE A7           Compara_cositas_L3 and a
1337+ 91EF 28 0D            jr z,1F
1338+ 91F1              ;    cp $fd
1339+ 91F1              ;    jr z,1F
1340+ 91F1              ;    cp $fe
1341+ 91F1              ;    jr z,1F
1342+ 91F1              ;    cp $ff
1343+ 91F1              ;    jr z,1F
1344+ 91F1 FE 01            cp $01
1345+ 91F3 28 09            jr z,1F
1346+ 91F5 FE 02            cp $02
1347+ 91F7 28 05            jr z,1F
1348+ 91F9 FE 03            cp $03
1349+ 91FB 28 01            jr z,1F
1350+ 91FD C0               ret nz
1351+ 91FE 04           1 inc b
1352+ 91FF C9               ret
1353+ 9200
1354+ 9200 A7           Compara_cositas_H4 and a
1355+ 9201 28 11            jr z,1F
1356+ 9203 FE FD            cp $fd
1357+ 9205 28 0D            jr z,1F
1358+ 9207 FE FE            cp $fe
1359+ 9209 28 09            jr z,1F
1360+ 920B FE FF            cp $ff
1361+ 920D 28 05            jr z,1F
1362+ 920F FE 01            cp $01
1363+ 9211 28 01            jr z,1F
1364+ 9213              ;    cp $02
1365+ 9213              ;    jr z,1F
1366+ 9213              ;    cp $03
1367+ 9213              ;    jr z,1F
1368+ 9213 C0               ret nz
1369+ 9214 04           1 inc b
1370+ 9215 C9               ret
1371+ 9216
1372+ 9216 A7           Compara_cositas_L4 and a
1373+ 9217 28 0D            jr z,1F
1374+ 9219              ;    cp $fd
1375+ 9219              ;    jr z,1F
1376+ 9219 FE FE            cp $fe
1377+ 921B 28 09            jr z,1F
1378+ 921D FE FF            cp $ff
1379+ 921F 28 05            jr z,1F
1380+ 9221 FE 01            cp $01
1381+ 9223 28 01            jr z,1F
1382+ 9225              ;    cp $02
1383+ 9225              ;    jr z,1F
1384+ 9225              ;    cp $03
1385+ 9225              ;    jr z,1F
1386+ 9225 C0               ret nz
1387+ 9226 04           1 inc b
1388+ 9227 C9               ret
# file closed: Disparo.asm
1922  9228              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9228              ; ******************************************************************************************************************************************************************************************
   2+ 9228              ;
   3+ 9228              ; 26/06/23
   4+ 9228              ;
   5+ 9228              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9228
   7+ 9228              Draw
   8+ 9228
   9+ 9228 CD 0C 95     	call Prepara_draw
  10+ 922B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 922C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 922D 28 05        	jr z,2F
  13+ 922F
  14+ 922F 3A 91 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9232 18 0C        	jr 1F
  16+ 9234
  17+ 9234 2A 8F 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9237 22 7F 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 923A CD C9 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 923D              ;													; _la esquina superior izquierda de la pantalla.
  21+ 923D CD 7F 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 9240
  23+ 9240 3A A3 87     1 ld a,(Ctrl_0)
  24+ 9243 CB 6F        	bit 5,a
  25+ 9245 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 9247
  27+ 9247 CD 5F 92     	call Comprueba_limite_horizontal
  28+ 924A CD EF 92     	call Comprueba_limite_vertical
  29+ 924D
  30+ 924D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 924D              ; -----------------------
  32+ 924D              ; -----------------------
  33+ 924D              ; -----------------------
  34+ 924D
  35+ 924D CD 3C 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 9250 CD 73 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 9253 CD D2 94     	call Define_rutina_de_impresion
  38+ 9256
  39+ 9256 3A A3 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9259 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 925B 32 A3 87     	ld (Ctrl_0),a
  42+ 925E
  43+ 925E C9           	ret
  44+ 925F
  45+ 925F              ; *******************************************************************************************************************************************************************************************
  46+ 925F              ;	21/01/23
  47+ 925F              ;
  48+ 925F              ; 	Comprueba_limite_horizontal.
  49+ 925F              ;
  50+ 925F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 925F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 925F              ;
  53+ 925F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 925F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 925F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 925F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 925F
  58+ 925F
  59+ 925F
  60+ 925F 3A A3 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9262 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9264 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9266 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9268 32 A3 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 926B 18 09            jr 6F
  66+ 926D CB 5F        1 bit 3,a
  67+ 926F 28 0A            jr z,2F
  68+ 9271 E6 F7            and $f7
  69+ 9273 32 A3 87         ld (Ctrl_0),a
  70+ 9276 CD C9 93     6 call Inicializacion
  71+ 9279 18 5B            jr 5F
  72+ 927B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 927C
  74+ 927C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 927C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 927C
  77+ 927C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 927D 2A A5 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9280 CD 2B 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9283 67           	ld h,a
  81+ 9284 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9285 CD 2B 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9288 67           	ld h,a
  84+ 9289 A7           	and a
  85+ 928A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 928C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 928D 3A 91 87     	ld a,(Cuad_objeto)
  88+ 9290 FE 02        	cp 2
  89+ 9292 38 1E        	jr c,3F
  90+ 9294 28 1C        	jr z,3F
  91+ 9296 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9297 28 23            jr z,7F
  93+ 9299 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 929B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 929D E1           	pop hl
  96+ 929E
  97+ 929E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 929E              ; _para indicar con E="2" en caso necesario.
  99+ 929E
 100+ 929E E5               push hl
 101+ 929F C5               push bc
 102+ 92A0 CD 2B 98     	call calcula_tercio
 103+ 92A3 FE 01        	cp 1
 104+ 92A5 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92A7 CD D7 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92AA 28 26            jr z,9F
 107+ 92AC 38 24            jr c,9F
 108+ 92AE 1E 00        11 ld e,0
 109+ 92B0 18 22            jr 8F
 110+ 92B2 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92B3 28 07        	jr z, 7F
 112+ 92B5 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92B7 1E 00         	ld e,0
 114+ 92B9 E1           	pop hl
 115+ 92BA 18 04        	jr 4F
 116+ 92BC 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92BE 18 15            jr 10F
 118+ 92C0
 119+ 92C0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92C0              ; _para indicar con E="2" en caso necesario.
 121+ 92C0
 122+ 92C0 E5           4 push hl
 123+ 92C1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92C2 CD 2B 98     	call calcula_tercio
 125+ 92C5 FE 01        	cp 1
 126+ 92C7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92C9 CD D7 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92CC 28 04            jr z,9F
 129+ 92CE 30 02            jr nc,9F
 130+ 92D0 18 02        	jr 8F
 131+ 92D2 1E 02        9 ld e,2
 132+ 92D4 C1           8 pop bc
 133+ 92D5 E1           10 pop hl
 134+ 92D6 C9           5 ret
 135+ 92D7
 136+ 92D7              ; --------------------
 137+ 92D7              ;
 138+ 92D7              ; 25/08/22
 139+ 92D7
 140+ 92D7 CD 2B 98     Comprueba_centro call calcula_tercio
 141+ 92DA 67               ld h,a
 142+ 92DB 08           	ex af,af
 143+ 92DC FE 02        	cp 2
 144+ 92DE 38 07        	jr c,1F
 145+ 92E0 28 05        	jr z,1F
 146+ 92E2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92E5 18 03        	jr 2F
 148+ 92E7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92EA 08           2 ex af,af
 150+ 92EB A7               and a
 151+ 92EC ED 42            sbc hl,bc
 152+ 92EE C9               ret
 153+ 92EF
 154+ 92EF              ; *********************************************************************************************************************************************************************************************
 155+ 92EF              ;
 156+ 92EF              ;   16/8/22
 157+ 92EF              ;
 158+ 92EF              ;	Comprueba_limite_vertical
 159+ 92EF              ;
 160+ 92EF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 92EF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 92EF              ;
 163+ 92EF
 164+ 92EF 2A 7F 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 92F2 7D           	ld a,l
 166+ 92F3 E6 1F        	and $1F
 167+ 92F5 57           	ld d,a
 168+ 92F6 3A A7 87     	ld a,(Limite_vertical)
 169+ 92F9 BA           	cp d 											; Límite - Posición.
 170+ 92FA 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 92FB 3A 91 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 92FE CB 47        	bit 0,a
 173+ 9300 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9302
 175+ 9302              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9302
 177+ 9302 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9303 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9305
 180+ 9305              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9305              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9305
 183+ 9305 3A 83 87         ld a,(Coordenada_X)
 184+ 9308 16 0F            ld d,Centro_izquierda
 185+ 930A A7               and a
 186+ 930B 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 930C 28 1E            jr z,3F
 188+ 930E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9310              ;                                                    ; _salimos sin modificar nada.
 190+ 9310 18 0E            jr 2F
 191+ 9312 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9313 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9315
 194+ 9315              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9315              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9315
 197+ 9315 3A 83 87         ld a,(Coordenada_X)
 198+ 9318 16 10            ld d,Centro_derecha
 199+ 931A A7               and a
 200+ 931B 92               sub d
 201+ 931C 28 0E            jr z,3F
 202+ 931E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9320              ;                                                    ; _salimos sin modificar nada.
 204+ 9320 CB 43        2 bit 0,e
 205+ 9322 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9324 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9325 CD B9 93         call Modificaccionne
 208+ 9328 C1           	pop bc
 209+ 9329 CD C9 93         call Inicializacion
 210+ 932C C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 932D
 212+ 932D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 932D
 214+ 932D C5           4 push bc
 215+ 932E 01 7E 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9331 0A           	ld a,(bc)
 217+ 9332 3D           	dec a
 218+ 9333 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9334 7D           	ld a,l
 220+ 9335 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9336 CB 47        	bit 0,a
 222+ 9338 28 03        	jr z,5F
 223+ 933A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 933B 18 2E        	jr 7F
 225+ 933D
 226+ 933D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 933D
 228+ 933D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 933E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 933F 3A A3 87     	ld a,(Ctrl_0)
 231+ 9342 CB 4F        	bit 1,a
 232+ 9344 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9346 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9347
 235+ 9347              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9347
 237+ 9347 1C               inc e
 238+ 9348 1D               dec e
 239+ 9349 20 07            jr nz,12F
 240+ 934B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 934C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 934D 22 7F 87     	ld (Posicion_actual),hl
 243+ 9350 18 44        13 jr 9F
 244+ 9352 CB 43        12 bit 0,e
 245+ 9354 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9356              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9356 C1           	pop bc
 248+ 9357 18 D3        	jr 3B
 249+ 9359 80           14 add b
 250+ 935A 6F               ld l,a
 251+ 935B 22 7F 87     	ld (Posicion_actual),hl
 252+ 935E CD B9 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9361 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9363 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9365 32 A3 87         ld (Ctrl_0),a
 256+ 9368 F1           	pop af
 257+ 9369 18 2B        	jr 9F
 258+ 936B
 259+ 936B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 936B
 261+ 936B F5           7 push af
 262+ 936C 3A A3 87     	ld a,(Ctrl_0)
 263+ 936F CB 47        	bit 0,a
 264+ 9371 20 1D        	jr nz,8F
 265+ 9373 F1           	pop af
 266+ 9374
 267+ 9374              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9374
 269+ 9374 1C           	inc e
 270+ 9375 1D               dec e
 271+ 9376 20 07            jr nz,10F
 272+ 9378 90           	sub b
 273+ 9379 6F               ld l,a
 274+ 937A 22 7F 87     	ld (Posicion_actual),hl
 275+ 937D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 937F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 937F CB 43        10 bit 0,e
 278+ 9381 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9383              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9383 C1           	pop bc
 281+ 9384 18 A6        	jr 3B
 282+ 9386 90           16 sub b
 283+ 9387 6F               ld l,a
 284+ 9388 22 7F 87     	ld (Posicion_actual),hl
 285+ 938B CD B9 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 938E 18 06            jr 9F
 287+ 9390 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9392 32 A3 87         ld (Ctrl_0),a
 289+ 9395 F1           	pop af
 290+ 9396 C1           9 pop bc
 291+ 9397 1E 00        	ld e,0
 292+ 9399 CD C9 93         call Inicializacion
 293+ 939C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 939D 08           	ex af,af
 295+ 939E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 939F 18 8B            jr 3B
 297+ 93A1
 298+ 93A1              ; --------------------
 299+ 93A1
 300+ 93A1 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93A3 CD 27 95     1 call PreviousScan
 302+ 93A6 10 FB            djnz 1B
 303+ 93A8 22 7F 87     	ld (Posicion_actual),hl
 304+ 93AB AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93AC C9           	ret
 306+ 93AD
 307+ 93AD              ; --------------------
 308+ 93AD
 309+ 93AD 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93AF CD 18 95     1 call NextScan
 311+ 93B2 10 FB            djnz 1B
 312+ 93B4 22 7F 87     	ld (Posicion_actual),hl
 313+ 93B7 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93B8 C9           	ret
 315+ 93B9
 316+ 93B9              ; --------------------
 317+ 93B9              ;
 318+ 93B9              ;	22/01/23
 319+ 93B9              ;
 320+ 93B9              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93B9              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93B9              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93B9
 324+ 93B9
 325+ 93B9              Modificaccionne
 326+ 93B9
 327+ 93B9 3A 91 87     	ld a,(Cuad_objeto)
 328+ 93BC FE 02        	cp 2
 329+ 93BE CC A1 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93C1 DC A1 93         call c,Modifica_Pos_actual
 331+ 93C4 C8           	ret z
 332+ 93C5 CD AD 93         call Modifica_Pos_actual2
 333+ 93C8 C9               ret
 334+ 93C9
 335+ 93C9              ; *************************************************************************************************************************************************************************************************
 336+ 93C9              ;
 337+ 93C9              ;	13/8/22
 338+ 93C9              ;
 339+ 93C9              ;	Inicializacion
 340+ 93C9              ;
 341+ 93C9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93C9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93C9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93C9              ;
 345+ 93C9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93C9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93C9              ;	_ desaparece/aparece.
 348+ 93C9
 349+ 93C9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93C9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93C9              ;
 352+ 93C9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93C9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93C9              ; 		   [E] ="0"
 355+ 93C9
 356+ 93C9              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93C9
 358+ 93C9 CD 2B 98     Inicializacion call calcula_tercio
 359+ 93CC 28 36        	jr z,primit
 360+ 93CE E6 02        	and 2
 361+ 93D0 20 07        	jr nz,segmit
 362+ 93D2 7D           	ld a,l
 363+ 93D3 FE 7F        	cp $7f
 364+ 93D5 38 2D        	jr c,primit
 365+ 93D7 28 2B        	jr z,primit
 366+ 93D9 CD 36 94     segmit call column
 367+ 93DC 38 13        	jr c,tercuad
 368+ 93DE 3E 04        cuarcuad ld a,4
 369+ 93E0 32 91 87     	ld (Cuad_objeto),a
 370+ 93E3 21 20 48     	ld hl,$4820
 371+ 93E6 22 A5 87     	ld (Limite_horizontal),hl
 372+ 93E9 21 A7 87     	ld hl,Limite_vertical
 373+ 93EC 36 0D        	ld (hl),$0d
 374+ 93EE 08           	ex af,af
 375+ 93EF 18 3C        	jr 1F
 376+ 93F1              tercuad
 377+ 93F1 3E 03        	ld a,3
 378+ 93F3 32 91 87     	ld (Cuad_objeto),a
 379+ 93F6 21 20 48     	ld hl,$4820
 380+ 93F9 22 A5 87     	ld (Limite_horizontal),hl
 381+ 93FC 21 A7 87     	ld hl,Limite_vertical
 382+ 93FF 36 12        	ld (hl),$12
 383+ 9401 08           	ex af,af
 384+ 9402 18 29        	jr 1F
 385+ 9404 CD 36 94     primit call column
 386+ 9407 38 13        	jr c, primcuad
 387+ 9409              segcuad
 388+ 9409 3E 02        	ld a,2
 389+ 940B 32 91 87     	ld (Cuad_objeto),a
 390+ 940E 21 C0 4F     	ld hl,$4fc0
 391+ 9411 22 A5 87     	ld (Limite_horizontal),hl
 392+ 9414 21 A7 87     	ld hl,Limite_vertical
 393+ 9417 36 0D        	ld (hl),$0d
 394+ 9419 08           	ex af,af
 395+ 941A 18 11        	jr 1F
 396+ 941C              primcuad
 397+ 941C 3E 01        	ld a,1
 398+ 941E 32 91 87     	ld (Cuad_objeto),a
 399+ 9421 21 C0 4F     	ld hl,$4fc0
 400+ 9424 22 A5 87     	ld (Limite_horizontal),hl
 401+ 9427 21 A7 87     	ld hl,Limite_vertical
 402+ 942A 36 12        	ld (hl),$12
 403+ 942C 08           	ex af,af
 404+ 942D CD C3 9B     1 call Genera_coordenadas
 405+ 9430 21 A3 87     	ld hl,Ctrl_0
 406+ 9433 CB EE        	set 5,(hl)
 407+ 9435 C9           	ret
 408+ 9436
 409+ 9436              ; ------------------------------------------------------------------------------------------------------------------
 410+ 9436
 411+ 9436              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 9436              ;
 413+ 9436              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 9436
 415+ 9436 7D           column ld a,l
 416+ 9437 E6 1F        	and $1f
 417+ 9439 FE 10         	cp $10
 418+ 943B C9            	ret
 419+ 943C
 420+ 943C              ; --------------------------------------------------------------------------------------------------------------------
 421+ 943C              ;
 422+ 943C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 943C              ;
 424+ 943C              ; 14/12/22
 425+ 943C              ;
 426+ 943C              ;	Modifica: A y BC.
 427+ 943C
 428+ 943C 3A 91 87     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 943F E6 01        	and 1
 430+ 9441 28 17        	jr z,1F
 431+ 9443
 432+ 9443              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 9443
 434+ 9443 3A 83 87     	ld a,(Coordenada_X)
 435+ 9446 47           	ld b,a
 436+ 9447 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 9448 79           	ld a,c
 438+ 9449 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 944A 38 08        	jr c,2F
 440+ 944C 47           	ld b,a
 441+ 944D 79           	ld a,c
 442+ 944E 90           	sub b
 443+ 944F 32 A4 87     	ld (Columnas),a
 444+ 9452 18 1B        	jr 4F
 445+ 9454 79           2 ld a,c
 446+ 9455 32 A4 87     	ld (Columnas),a
 447+ 9458 18 15        	jr 4F
 448+ 945A
 449+ 945A              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 945A
 451+ 945A 3A 83 87     1 ld a,(Coordenada_X)
 452+ 945D 81           	add c
 453+ 945E 3D           	dec a
 454+ 945F D6 1F        	sub $1f
 455+ 9461 38 08        	jr c,3F
 456+ 9463 47           	ld b,a
 457+ 9464 79           	ld a,c
 458+ 9465 90           	sub b
 459+ 9466 32 A4 87     	ld (Columnas),a
 460+ 9469 18 04        	jr 4F
 461+ 946B 79           3 ld a,c
 462+ 946C 32 A4 87     	ld (Columnas),a
 463+ 946F D9           4 exx
 464+ 9470 4F           	ld c,a
 465+ 9471 D9           	exx
 466+ 9472 C9            ret
 467+ 9473
 468+ 9473              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9473              ;
 470+ 9473              ;   19/7/23
 471+ 9473              ;
 472+ 9473              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9473              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9473              ;
 475+ 9473              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9473              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9473              ;
 478+ 9473              ;	DESTRUYE: HL,B Y A.
 479+ 9473
 480+ 9473 3A 91 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 9476 FE 02        	cp 2
 482+ 9478 38 18        	jr c,1F
 483+ 947A 28 16        	jr z,1F
 484+ 947C E6 01        	and 1
 485+ 947E 28 0D        	jr z,3F
 486+ 9480
 487+ 9480              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 9480
 489+ 9480 CD C6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9483
 491+ 9483 7D           9 ld a,l
 492+ 9484 E6 1F        	and $1f
 493+ 9486 28 2A        	jr z,7F
 494+ 9488 2B           	dec hl
 495+ 9489 10 F8        	djnz 9B
 496+ 948B 18 25        	jr 7F
 497+ 948D
 498+ 948D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 948D
 500+ 948D 2A 7F 87     3 ld hl,(Posicion_actual)
 501+ 9490 18 20        	jr 7F
 502+ 9492
 503+ 9492 28 14        1 jr z,2F
 504+ 9494
 505+ 9494              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9494
 507+ 9494 CD C6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9497
 509+ 9497 7D           4 ld a,l
 510+ 9498 E6 1F        	and $1f
 511+ 949A 28 03        	jr z,6F
 512+ 949C 2B           	dec hl
 513+ 949D 10 F8        	djnz 4B
 514+ 949F 06 0F        6 ld b,15
 515+ 94A1 CD 27 95     5 call PreviousScan
 516+ 94A4 10 FB        	djnz 5B
 517+ 94A6 18 0A        	jr 7F
 518+ 94A8
 519+ 94A8              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 94A8
 521+ 94A8 CD C6 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 94AB 06 0F        	ld b,15
 523+ 94AD CD 27 95     8 call PreviousScan
 524+ 94B0 10 FB        	djnz 8B
 525+ 94B2
 526+ 94B2 E5           7 push hl
 527+ 94B3 DD E1        	pop ix
 528+ 94B5
 529+ 94B5 2A 81 87     	ld hl,(Puntero_objeto)
 530+ 94B8 E5           	push hl
 531+ 94B9 FD E1        	pop iy
 532+ 94BB
 533+ 94BB              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 94BB
 535+ 94BB 3A A3 87     	ld a,(Ctrl_0)
 536+ 94BE CB 77        	bit 6,a
 537+ 94C0 C8           	ret z
 538+ 94C1
 539+ 94C1              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 94C1              ; _ entidad / Amadeus´.
 541+ 94C1
 542+ 94C1 DD 22 AD 85  	ld (p.imp.amadeus),ix
 543+ 94C5
 544+ 94C5 C9           	ret
 545+ 94C6
 546+ 94C6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 94C6              ;
 548+ 94C6              ;	2/1/23
 549+ 94C6              ;
 550+ 94C6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 94C6              ;
 552+ 94C6              ;	Tras esta rutina tenemos:
 553+ 94C6              ;
 554+ 94C6              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 94C6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 94C6              ;
 557+ 94C6              ;	DESTRUYE!!!!! HL,B y A.
 558+ 94C6
 559+ 94C6 2A 7F 87     Operandos ld hl,(Posicion_actual)
 560+ 94C9 3A A4 87     	ld a,(Columnas)
 561+ 94CC 3D           	dec a
 562+ 94CD 20 01        	jr nz,1F
 563+ 94CF 3C           	inc a
 564+ 94D0 47           1 ld b,a
 565+ 94D1 C9           	ret
 566+ 94D2
 567+ 94D2              ; --------------------------------------------------------------------------------------------------------------------
 568+ 94D2              ;
 569+ 94D2              ;	3/1/23
 570+ 94D2              ;
 571+ 94D2              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 94D2              ;
 573+ 94D2              ;	Destruye: A,B,HL y DE.
 574+ 94D2
 575+ 94D2              Define_rutina_de_impresion
 576+ 94D2
 577+ 94D2 3A 7E 87     	ld a,(Columns)
 578+ 94D5 47           	ld b,a
 579+ 94D6 3A A4 87     	ld a,(Columnas)
 580+ 94D9 B8           	cp b
 581+ 94DA 20 0D        	jr nz,2f
 582+ 94DC
 583+ 94DC              ;	La entidad se imprime entera.
 584+ 94DC
 585+ 94DC 21 FB 95     	ld hl, Indice_entidades_completas
 586+ 94DF E6 01        	and 1
 587+ 94E1 28 02        	jr z,1F
 588+ 94E3
 589+ 94E3 23           	inc hl
 590+ 94E4 23           	inc hl
 591+ 94E5
 592+ 94E5 CD AC 8B     1 call Extrae_address
 593+ 94E8 C9           	ret		;	ret
 594+ 94E9
 595+ 94E9              ;	La entidad no se imprime entera en pantalla.
 596+ 94E9
 597+ 94E9 3A 91 87     2 ld a,(Cuad_objeto)
 598+ 94EC E6 01        	and 1
 599+ 94EE 28 17        	jr z,3F
 600+ 94F0
 601+ 94F0              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 94F0
 603+ 94F0 21 FF 95     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 94F3 3A 7E 87     4 ld a,(Columns)
 605+ 94F6 E6 01        	and 1
 606+ 94F8 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 94FA
 608+ 94FA 23           	inc hl
 609+ 94FB 23           	inc hl
 610+ 94FC
 611+ 94FC 3A A4 87     	ld a,(Columnas)
 612+ 94FF E6 01        	and 1
 613+ 9501 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9503
 615+ 9503 23           	inc hl
 616+ 9504 23           	inc hl
 617+ 9505
 618+ 9505 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9507
 620+ 9507 21 05 96     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 950A 18 E7        	jr 4B
 622+ 950C
 623+ 950C              ; --------------------------------------------------------------------------------------------------------------------
 624+ 950C              ;
 625+ 950C              ;	Prepara_draw
 626+ 950C              ;
 627+ 950C              ;	Es una rutina de carga.
 628+ 950C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 950C              ;
 630+ 950C              ;	FUNCIONAMIENTO:
 631+ 950C              ;
 632+ 950C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 950C              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 950C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 950C              ;
 636+ 950C              ;	DESTRUYE:
 637+ 950C              ;
 638+ 950C              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 950C
 640+ 950C 21 7D 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 950F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 9510 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 9511 4E           	ld c,(hl)
 644+ 9512 2A 7F 87     	ld hl,(Posicion_actual)
 645+ 9515 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 9517 C9           	ret
 647+ 9518
 648+ 9518              ;----------------------------------------------------------------------------------------------------------------
 649+ 9518              ;
 650+ 9518              ;	5/08/22
 651+ 9518              ;
 652+ 9518              ;   NextScan.
 653+ 9518              ;
 654+ 9518              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 9518              ;
 656+ 9518              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 9518              ;
 658+ 9518              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 9518              ;
 660+ 9518              ;       DESTRUIDOS: AF y HL !!!
 661+ 9518              ;
 662+ 9518              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 9518              ;
 664+ 9518
 665+ 9518 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 9519 7C               ld a,h
 667+ 951A E6 07            and 7
 668+ 951C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 951D
 670+ 951D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 951E C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 9520 6F               ld l,a
 673+ 9521 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 9522
 675+ 9522 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 9523 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 9525 67               ld h,a
 678+ 9526 C9               ret
 679+ 9527
 680+ 9527              ;----------------------------------------------------------------------------------------------------------------
 681+ 9527              ;
 682+ 9527              ;	5/08/22
 683+ 9527              ;
 684+ 9527              ;   PreviousScan.
 685+ 9527              ;
 686+ 9527              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 9527              ;
 688+ 9527              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 9527              ;
 690+ 9527              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 9527              ;
 692+ 9527              ;       DESTRUIDOS: AF y HL !!!
 693+ 9527              ;
 694+ 9527              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 9527              ;
 696+ 9527
 697+ 9527 7C           PreviousScan ld a,h
 698+ 9528 25               dec h               ; Dec H.
 699+ 9529 E6 07            and 7
 700+ 952B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 952C
 702+ 952C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 952D D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 952F 6F               ld l,a
 705+ 9530 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 9531
 707+ 9531 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 9532 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 9534 67               ld h,a
 710+ 9535 C9               ret
 711+ 9536
 712+ 9536              ; -----------------------------------------------------------------------------------
 713+ 9536              ;
 714+ 9536              ;	31/7/23
 715+ 9536              ;
 716+ 9536              ;	Rutina principal de pintado de entidades.
 717+ 9536              ;	Extrae la foto del frame, (entidades).
 718+ 9536
 719+ 9536              Extrae_foto_entidades
 720+ 9536
 721+ 9536 21 01 70     	ld hl,Album_de_fotos+1
 722+ 9539 7E           	ld a,(hl)
 723+ 953A A7           	and a
 724+ 953B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 953C
 726+ 953C              ;	No hay datos, (entidades para pintar en este frame).
 727+ 953C
 728+ 953C 3A CA 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 953F A7           	and a
 730+ 9540 C8           	ret z
 731+ 9541
 732+ 9541              ; -----------------------------------
 733+ 9541
 734+ 9541 ED 73 CF 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9545 31 00 70     	ld sp,Album_de_fotos
 736+ 9548
 737+ 9548 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 954A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 954B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 954C
 741+ 954C ED 73 D1 87  	ld (Stack_2),sp
 742+ 9550 ED 7B CF 87  	ld sp,(Stack)
 743+ 9554
 744+ 9554              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9554
 746+ 9554 3E CD        	ld a,$cd
 747+ 9556 32 5E 95     	ld (Imprime),a
 748+ 9559 EB           	ex de,hl
 749+ 955A 22 5F 95     	ld (Imprime+1),hl
 750+ 955D EB           	ex de,hl
 751+ 955E
 752+ 955E              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 955E
 754+ 955E 00 00 00     Imprime db 0,0,0
 755+ 9561
 756+ 9561 ED 73 CF 87  	ld (Stack),sp
 757+ 9565
 758+ 9565 3A CA 87     	ld a,(Numero_de_malotes)
 759+ 9568 3D           	dec a
 760+ 9569 28 09        	jr z,1F
 761+ 956B 32 CA 87      	ld (Numero_de_malotes),a
 762+ 956E
 763+ 956E ED 7B D1 87  	ld sp,(Stack_2)
 764+ 9572 18 D4        	jr 2B
 765+ 9574
 766+ 9574 AF           1 xor a
 767+ 9575 32 D1 87     	ld (Stack_2),a
 768+ 9578
 769+ 9578 C9           	ret
 770+ 9579
 771+ 9579              ; -----------------------------------------------------------------------------------
 772+ 9579              ;
 773+ 9579              ;	28/2/23
 774+ 9579              ;
 775+ 9579              ;	Pinta los disparos generados.
 776+ 9579
 777+ 9579              Extrae_foto_disparos
 778+ 9579
 779+ 9579 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 957C 7E               ld a,(hl)
 781+ 957D A7               and a
 782+ 957E C8               ret z
 783+ 957F
 784+ 957F 3A DF 87     	ld a,(Numero_de_disparotes)
 785+ 9582 A7           	and a
 786+ 9583 C8           	ret z
 787+ 9584 ED 73 CF 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9588 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 958B
 790+ 958B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 958D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 958E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 958F
 794+ 958F ED 73 D1 87  	ld (Stack_2),sp
 795+ 9593 ED 7B CF 87  	ld sp,(Stack)
 796+ 9597
 797+ 9597              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9597
 799+ 9597 3E CD        	ld a,$cd
 800+ 9599 32 A1 95     	ld (Imprime2),a
 801+ 959C EB           	ex de,hl
 802+ 959D 22 A2 95     	ld (Imprime2+1),hl
 803+ 95A0 EB           	ex de,hl
 804+ 95A1
 805+ 95A1              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 95A1
 807+ 95A1 00 00 00     Imprime2 db 0,0,0
 808+ 95A4
 809+ 95A4 3A DF 87     	ld a,(Numero_de_disparotes)
 810+ 95A7 3D           	dec a
 811+ 95A8 28 09        	jr z,1F
 812+ 95AA 32 DF 87      	ld (Numero_de_disparotes),a
 813+ 95AD
 814+ 95AD ED 7B D1 87  	ld sp,(Stack_2)
 815+ 95B1 18 D8        	jr 2B
 816+ 95B3
 817+ 95B3 AF           1 xor a
 818+ 95B4 32 D1 87     	ld (Stack_2),a
 819+ 95B7 C9           	ret
 820+ 95B8
 821+ 95B8              ; -----------------------------------------------------------------------------------
 822+ 95B8              ;
 823+ 95B8              ;	4/9/23
 824+ 95B8              ;
 825+ 95B8              ;	Rutina principal de pintado de Amadeus.
 826+ 95B8              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 95B8
 828+ 95B8 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 95BB 7E           	ld a,(hl)
 830+ 95BC A7           	and a
 831+ 95BD C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 95BE
 833+ 95BE 3A CA 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 95C1 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 95C2 C8           	ret z
 836+ 95C3
 837+ 95C3              ; -----------------------------------
 838+ 95C3
 839+ 95C3 ED 73 CF 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 95C7 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 95CA
 842+ 95CA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 95CC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 95CD D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 95CE
 846+ 95CE ED 73 D1 87  	ld (Stack_2),sp
 847+ 95D2 ED 7B CF 87  	ld sp,(Stack)
 848+ 95D6
 849+ 95D6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 95D6
 851+ 95D6 3E CD        	ld a,$cd
 852+ 95D8 32 E0 95     	ld (Imprime_Amadeus),a
 853+ 95DB EB           	ex de,hl
 854+ 95DC 22 E1 95     	ld (Imprime_Amadeus+1),hl
 855+ 95DF EB           	ex de,hl
 856+ 95E0
 857+ 95E0              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 95E0
 859+ 95E0 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 95E3
 861+ 95E3 ED 73 CF 87  	ld (Stack),sp
 862+ 95E7
 863+ 95E7 3A CA 87     	ld a,(Numero_de_malotes)
 864+ 95EA 3D           	dec a
 865+ 95EB 28 09        	jr z,1F
 866+ 95ED 32 CA 87      	ld (Numero_de_malotes),a
 867+ 95F0
 868+ 95F0 ED 7B D1 87  	ld sp,(Stack_2)
 869+ 95F4 18 D4        	jr 2B
 870+ 95F6
 871+ 95F6 AF           1 xor a
 872+ 95F7 32 D1 87     	ld (Stack_2),a
 873+ 95FA
 874+ 95FA C9           	ret
# file closed: Draw_XOR.asm
1923  95FB              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95FB              ;   índices de Rutinas de impresión.
   2+ 95FB
   3+ 95FB 0B 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95FD 38 96            defw Pinta_Amadeus_3x2
   5+ 95FF
   6+ 95FF 8E 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9601 2E 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9603 E2 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9605
  10+ 9605 B8 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9607 BC 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9609 70 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 960B
  14+ 960B
  15+ 960B              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 960B              ;
  17+ 960B              ;   12/12/22
  18+ 960B              ;
  19+ 960B              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 960B              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 960B              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 960B              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 960B              ;
  24+ 960B              ;   Modifica: DE y HL.
  25+ 960B
  26+ 960B ED 73 CF 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 960F FD F9        	ld sp,iy
  28+ 9611 06 10            ld b,16
  29+ 9613 D1           1 pop de
  30+ 9614 7B               ld a,e
  31+ 9615 AE               xor (hl)
  32+ 9616 77           	ld (hl),a
  33+ 9617 23           	inc hl
  34+ 9618 7A               ld a,d
  35+ 9619 AE               xor (hl)
  36+ 961A 77           	ld (hl),a
  37+ 961B 2B           	dec hl
  38+ 961C 24           	inc h
  39+ 961D 7C               ld a,h
  40+ 961E E6 07            and 7
  41+ 9620 20 0A            jr nz,2F
  42+ 9622 7D               ld a,l
  43+ 9623 C6 20            add a,$20
  44+ 9625 6F               ld l,a
  45+ 9626 38 04            jr c,2F
  46+ 9628 7C               ld a,h
  47+ 9629 D6 08            sub 8
  48+ 962B 67               ld h,a
  49+ 962C 7C           2 ld a,h
  50+ 962D FE 58            cp $58
  51+ 962F 28 02            jr z,3F
  52+ 9631 10 E0            djnz 1B
  53+ 9633 ED 7B CF 87  3 ld sp,(Stack)
  54+ 9637 C9           	ret
  55+ 9638
  56+ 9638 ED 73 CF 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 963C FD F9        	ld sp,iy
  58+ 963E 06 08            ld b,8
  59+ 9640 D1           1 pop de
  60+ 9641 7B               ld a,e
  61+ 9642 AE               xor (hl)
  62+ 9643 77           	ld (hl),a
  63+ 9644 23           	inc hl
  64+ 9645 7A               ld a,d
  65+ 9646 AE               xor (hl)
  66+ 9647 77           	ld (hl),a
  67+ 9648 23           	inc hl
  68+ 9649 D1           	pop de
  69+ 964A 7B               ld a,e
  70+ 964B AE               xor (hl)
  71+ 964C 77           	ld (hl),a
  72+ 964D 2B           	dec hl
  73+ 964E 2B           	dec hl
  74+ 964F 24           	inc h
  75+ 9650 7C               ld a,h
  76+ 9651 E6 07            and 7
  77+ 9653 20 0A            jr nz,2F
  78+ 9655 7D               ld a,l
  79+ 9656 C6 20            add a,$20
  80+ 9658 6F               ld l,a
  81+ 9659 38 04            jr c,2F
  82+ 965B 7C               ld a,h
  83+ 965C D6 08            sub 8
  84+ 965E 67               ld h,a
  85+ 965F 7C           2 ld a,h
  86+ 9660 FE 58            cp $58
  87+ 9662 28 25            jr z,4F
  88+ 9664 7A               ld a,d
  89+ 9665 AE               xor (hl)
  90+ 9666 77               ld (hl),a
  91+ 9667 D1           	pop de
  92+ 9668 23           	inc hl
  93+ 9669 7B               ld a,e
  94+ 966A AE               xor (hl)
  95+ 966B 77           	ld (hl),a
  96+ 966C 23           	inc hl
  97+ 966D 7A               ld a,d
  98+ 966E AE               xor (hl)
  99+ 966F 77           	ld (hl),a
 100+ 9670 2B           	dec hl
 101+ 9671 2B           	dec hl
 102+ 9672 24           	inc h
 103+ 9673 7C               ld a,h
 104+ 9674 E6 07            and 7
 105+ 9676 20 0A            jr nz,3F
 106+ 9678 7D               ld a,l
 107+ 9679 C6 20            add a,$20
 108+ 967B 6F               ld l,a
 109+ 967C 38 04            jr c,3F
 110+ 967E 7C               ld a,h
 111+ 967F D6 08            sub 8
 112+ 9681 67               ld h,a
 113+ 9682 7C           3 ld a,h
 114+ 9683 FE 58            cp $58
 115+ 9685 28 02            jr z,4F
 116+ 9687 10 B7            djnz 1B
 117+ 9689 ED 7B CF 87  4 ld sp,(Stack)
 118+ 968D C9           	ret
 119+ 968E
 120+ 968E              ; ---------------------------------------------------
 121+ 968E
 122+ 968E ED 73 CF 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9692 FD F9        	ld sp,iy
 124+ 9694
 125+ 9694              ; >>>
 126+ 9694
 127+ 9694 06 10            ld b,16
 128+ 9696 D1           1 pop de
 129+ 9697 7A           	ld a,d
 130+ 9698 AE           	xor (hl)
 131+ 9699 77           	ld (hl),a
 132+ 969A 24           	inc h
 133+ 969B 7C               ld a,h
 134+ 969C E6 07            and 7
 135+ 969E 20 0C            jr nz,2F
 136+ 96A0 7D               ld a,l
 137+ 96A1 C6 20            add a,$20
 138+ 96A3 6F               ld l,a
 139+ 96A4 38 06            jr c,2F
 140+ 96A6 7C               ld a,h
 141+ 96A7 D6 08            sub 8
 142+ 96A9 67               ld h,a
 143+ 96AA 18 00            jr 2F
 144+ 96AC 7C           2 ld a,h
 145+ 96AD FE 58            cp $58
 146+ 96AF 28 02            jr z,3F
 147+ 96B1 10 E3            djnz 1B
 148+ 96B3 ED 7B CF 87  3 ld sp,(Stack)
 149+ 96B7 C9           	ret
 150+ 96B8
 151+ 96B8 ED 73 CF 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 96BC FD F9        	ld sp,iy
 153+ 96BE
 154+ 96BE              ; >>>
 155+ 96BE
 156+ 96BE 06 10            ld b,16
 157+ 96C0 D1           1 pop de
 158+ 96C1 7B           	ld a,e
 159+ 96C2 AE           	xor (hl)
 160+ 96C3 77           	ld (hl),a
 161+ 96C4 24           	inc h
 162+ 96C5 7C               ld a,h
 163+ 96C6 E6 07            and 7
 164+ 96C8 20 0C            jr nz,2F
 165+ 96CA 7D               ld a,l
 166+ 96CB C6 20            add a,$20
 167+ 96CD 6F               ld l,a
 168+ 96CE 38 06            jr c,2F
 169+ 96D0 7C               ld a,h
 170+ 96D1 D6 08            sub 8
 171+ 96D3 67               ld h,a
 172+ 96D4 18 00            jr 2F
 173+ 96D6 7C           2 ld a,h
 174+ 96D7 FE 58            cp $58
 175+ 96D9 28 02            jr z,3F
 176+ 96DB 10 E3            djnz 1B
 177+ 96DD ED 7B CF 87  3 ld sp,(Stack)
 178+ 96E1 C9           	ret
 179+ 96E2
 180+ 96E2              ; ---------------------------------------------------
 181+ 96E2
 182+ 96E2 ED 73 CF 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96E6 FD F9        	ld sp,iy
 184+ 96E8 06 08            ld b,8
 185+ 96EA D1           1 pop de
 186+ 96EB 7A           	ld a,d
 187+ 96EC AE           	xor (hl)
 188+ 96ED 77           	ld (hl),a
 189+ 96EE 23           	inc hl
 190+ 96EF D1           	pop de
 191+ 96F0 7B           	ld a,e
 192+ 96F1 AE           	xor (hl)
 193+ 96F2 77           	ld (hl),a
 194+ 96F3 2B           	dec hl
 195+ 96F4 24            	inc h
 196+ 96F5 7C               ld a,h
 197+ 96F6 E6 07            and 7
 198+ 96F8 20 0A            jr nz,2F
 199+ 96FA 7D               ld a,l
 200+ 96FB C6 20            add a,$20
 201+ 96FD 6F               ld l,a
 202+ 96FE 38 04            jr c,2F
 203+ 9700 7C               ld a,h
 204+ 9701 D6 08            sub 8
 205+ 9703 67               ld h,a
 206+ 9704 7C           2 ld a,h
 207+ 9705 FE 58            cp $58
 208+ 9707 28 20            jr z,4F
 209+ 9709 D1               pop de
 210+ 970A 7B           	ld a,e
 211+ 970B AE           	xor (hl)
 212+ 970C 77           	ld (hl),a
 213+ 970D 23           	inc hl
 214+ 970E 7A           	ld a,d
 215+ 970F AE           	xor (hl)
 216+ 9710 77           	ld (hl),a
 217+ 9711 2B           	dec hl
 218+ 9712 24           	inc h
 219+ 9713 7C               ld a,h
 220+ 9714 E6 07            and 7
 221+ 9716 20 0A            jr nz,3F
 222+ 9718 7D               ld a,l
 223+ 9719 C6 20            add a,$20
 224+ 971B 6F               ld l,a
 225+ 971C 38 04            jr c,3F
 226+ 971E 7C               ld a,h
 227+ 971F D6 08            sub 8
 228+ 9721 67               ld h,a
 229+ 9722 7C           3 ld a,h
 230+ 9723 FE 58            cp $58
 231+ 9725 28 02            jr z,4F
 232+ 9727 10 C1            djnz 1B
 233+ 9729 ED 7B CF 87  4 ld sp,(Stack)
 234+ 972D C9           	ret
 235+ 972E
 236+ 972E ED 73 CF 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9732 FD F9        	ld sp,iy
 238+ 9734 06 08            ld b,8
 239+ 9736 D1           1 pop de
 240+ 9737 D1           	pop de
 241+ 9738 7B           	ld a,e
 242+ 9739 AE           	xor (hl)
 243+ 973A 77           	ld (hl),a
 244+ 973B 24            	inc h
 245+ 973C 7C               ld a,h
 246+ 973D E6 07            and 7
 247+ 973F 20 0A            jr nz,2F
 248+ 9741 7D               ld a,l
 249+ 9742 C6 20            add a,$20
 250+ 9744 6F               ld l,a
 251+ 9745 38 04            jr c,2F
 252+ 9747 7C               ld a,h
 253+ 9748 D6 08            sub 8
 254+ 974A 67               ld h,a
 255+ 974B 7C           2 ld a,h
 256+ 974C FE 58            cp $58
 257+ 974E 28 1B            jr z,4F
 258+ 9750 D1               pop de
 259+ 9751 7A           	ld a,d
 260+ 9752 AE           	xor (hl)
 261+ 9753 77           	ld (hl),a
 262+ 9754 24           	inc h
 263+ 9755 7C               ld a,h
 264+ 9756 E6 07            and 7
 265+ 9758 20 0A            jr nz,3F
 266+ 975A 7D               ld a,l
 267+ 975B C6 20            add a,$20
 268+ 975D 6F               ld l,a
 269+ 975E 38 04            jr c,3F
 270+ 9760 7C               ld a,h
 271+ 9761 D6 08            sub 8
 272+ 9763 67               ld h,a
 273+ 9764 7C           3 ld a,h
 274+ 9765 FE 58            cp $58
 275+ 9767 28 02            jr z,4F
 276+ 9769 10 CB            djnz 1B
 277+ 976B ED 7B CF 87  4 ld sp,(Stack)
 278+ 976F C9           	ret
 279+ 9770
 280+ 9770 ED 73 CF 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9774 FD F9        	ld sp,iy
 282+ 9776 06 08            ld b,8
 283+ 9778 D1           1 pop de
 284+ 9779 7B           	ld a,e
 285+ 977A AE           	xor (hl)
 286+ 977B 77           	ld (hl),a
 287+ 977C 23           	inc hl
 288+ 977D 7A           	ld a,d
 289+ 977E AE           	xor (hl)
 290+ 977F 77           	ld (hl),a
 291+ 9780 2B           	dec hl
 292+ 9781 24             	inc h
 293+ 9782 7C               ld a,h
 294+ 9783 E6 07            and 7
 295+ 9785 20 0A            jr nz,2F
 296+ 9787 7D               ld a,l
 297+ 9788 C6 20            add a,$20
 298+ 978A 6F               ld l,a
 299+ 978B 38 04            jr c,2F
 300+ 978D 7C               ld a,h
 301+ 978E D6 08            sub 8
 302+ 9790 67               ld h,a
 303+ 9791 7C           2 ld a,h
 304+ 9792 FE 58            cp $58
 305+ 9794 28 21            jr z,4F
 306+ 9796 D1               pop de
 307+ 9797 7A           	ld a,d
 308+ 9798 AE           	xor (hl)
 309+ 9799 77           	ld (hl),a
 310+ 979A 23           	inc hl
 311+ 979B D1               pop de
 312+ 979C 7B           	ld a,e
 313+ 979D AE           	xor (hl)
 314+ 979E 77           	ld (hl),a
 315+ 979F 2B           	dec hl
 316+ 97A0 24           	inc h
 317+ 97A1 7C               ld a,h
 318+ 97A2 E6 07            and 7
 319+ 97A4 20 0A            jr nz,3F
 320+ 97A6 7D               ld a,l
 321+ 97A7 C6 20            add a,$20
 322+ 97A9 6F               ld l,a
 323+ 97AA 38 04            jr c,3F
 324+ 97AC 7C               ld a,h
 325+ 97AD D6 08            sub 8
 326+ 97AF 67               ld h,a
 327+ 97B0 7C           3 ld a,h
 328+ 97B1 FE 58            cp $58
 329+ 97B3 28 02            jr z,4F
 330+ 97B5 10 C1            djnz 1B
 331+ 97B7 ED 7B CF 87  4 ld sp,(Stack)
 332+ 97BB C9           	ret
 333+ 97BC
 334+ 97BC ED 73 CF 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 97C0 FD F9        	ld sp,iy
 336+ 97C2 06 08            ld b,8
 337+ 97C4 D1           1 pop de
 338+ 97C5 7B           	ld a,e
 339+ 97C6 AE           	xor (hl)
 340+ 97C7 77           	ld (hl),a
 341+ 97C8 24            	inc h
 342+ 97C9 7C               ld a,h
 343+ 97CA E6 07            and 7
 344+ 97CC 20 0A            jr nz,2F
 345+ 97CE 7D               ld a,l
 346+ 97CF C6 20            add a,$20
 347+ 97D1 6F               ld l,a
 348+ 97D2 38 04            jr c,2F
 349+ 97D4 7C               ld a,h
 350+ 97D5 D6 08            sub 8
 351+ 97D7 67               ld h,a
 352+ 97D8 7C           2 ld a,h
 353+ 97D9 FE 58            cp $58
 354+ 97DB 28 1C            jr z,4F
 355+ 97DD D1               pop de
 356+ 97DE 7A           	ld a,d
 357+ 97DF AE           	xor (hl)
 358+ 97E0 77           	ld (hl),a
 359+ 97E1 24           	inc h
 360+ 97E2 7C               ld a,h
 361+ 97E3 E6 07            and 7
 362+ 97E5 20 0A            jr nz,3F
 363+ 97E7 7D               ld a,l
 364+ 97E8 C6 20            add a,$20
 365+ 97EA 6F               ld l,a
 366+ 97EB 38 04            jr c,3F
 367+ 97ED 7C               ld a,h
 368+ 97EE D6 08            sub 8
 369+ 97F0 67               ld h,a
 370+ 97F1 7C           3 ld a,h
 371+ 97F2 FE 58            cp $58
 372+ 97F4 28 03            jr z,4F
 373+ 97F6 D1               pop de
 374+ 97F7 10 CB            djnz 1B
 375+ 97F9 ED 7B CF 87  4 ld sp,(Stack)
 376+ 97FD C9           	ret
 377+ 97FE
 378+ 97FE              ; ---------------------------------------------------
 379+ 97FE              ;
 380+ 97FE              ;   27/02/23
 381+ 97FE              ;
 382+ 97FE              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97FE              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97FE              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97FE
 386+ 97FE ED 73 CF 87  Pinta_Disparo ld (Stack),sp
 387+ 9802 FD F9            ld sp,iy
 388+ 9804 06 03            ld b,3
 389+ 9806 D1           1 pop de
 390+ 9807 7B               ld a,e
 391+ 9808 AE               xor (hl)
 392+ 9809 77               ld (hl),a
 393+ 980A 23               inc hl
 394+ 980B 7A               ld a,d
 395+ 980C AE               xor (hl)
 396+ 980D 77               ld (hl),a
 397+ 980E 2B               dec hl
 398+ 980F
 399+ 980F 24               inc h
 400+ 9810 7C               ld a,h
 401+ 9811 E6 07            and 7
 402+ 9813 20 0A            jr nz,2F
 403+ 9815 7D               ld a,l
 404+ 9816 C6 20            add a,$20
 405+ 9818 6F               ld l,a
 406+ 9819 38 04            jr c,2F
 407+ 981B 7C               ld a,h
 408+ 981C D6 08            sub 8
 409+ 981E 67               ld h,a
 410+ 981F 7C           2 ld a,h
 411+ 9820 FE 58            cp $58
 412+ 9822 28 02            jr z,3F
 413+ 9824
 414+ 9824 10 E0            djnz 1B
 415+ 9826 ED 7B CF 87  3 ld sp,(Stack)
 416+ 982A C9               ret
 417+ 982B
# file closed: Rutinas_de_impresion_sprites.asm
1924  982B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 982B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 982B              ;
   3+ 982B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 982B              ;
   5+ 982B              ; *****************************************************************************************************************************************************************************************
   6+ 982B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 982B
   8+ 982B 7C           calcula_tercio ld a,h
   9+ 982C E6 18        	and $18
  10+ 982E CB 2F        	sra a
  11+ 9830 CB 2F        	sra a
  12+ 9832 CB 2F        	sra a
  13+ 9834 C9           	ret
  14+ 9835
# file closed: calcula_tercio.asm
1925  9835              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9835              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9835              ;
   3+ 9835              ;
   4+ 9835              ;	CLS.
   5+ 9835              ;
   6+ 9835              ;	Limpia la pantalla y define sus atributos.
   7+ 9835              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9835              ;
   9+ 9835              ;	COLORES: 0 ..... NEGRO
  10+ 9835              ;    		 1 ..... AZUL
  11+ 9835              ; 			 2 ..... ROJO
  12+ 9835              ;			 3 ..... MAGENTA
  13+ 9835              ; 			 4 ..... VERDE
  14+ 9835              ; 			 5 ..... CIAN
  15+ 9835              ;			 6 ..... AMARILLO
  16+ 9835              ; 			 7 ..... BLANCO
  17+ 9835              ;
  18+ 9835              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9835              ;
  20+ 9835              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9835
  22+ 9835
  23+ 9835 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9838 11 01 40     	LD DE,$4001
  25+ 983B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 983E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9840 ED B0        	LDIR
  28+ 9842 01 FF 02     	LD BC,767
  29+ 9845 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9846 ED B0        	LDIR
  31+ 9848 C9           	ret
  32+ 9849
# file closed: Cls.asm
1926  9849              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9849              ; ******************************************************************************************************************************************************************************************
   2+ 9849              ;
   3+ 9849              ;   20/05/23
   4+ 9849              ;
   5+ 9849              ;	Recompone_posicion_inicio
   6+ 9849              ;
   7+ 9849              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9849              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9849              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9849              ;	_ a una u otra rutina.
  11+ 9849
  12+ 9849              Recompone_posicion_inicio
  13+ 9849
  14+ 9849 2A 8F 87     	ld hl,(Posicion_inicio)
  15+ 984C 7D           	ld a,l
  16+ 984D E6 1F        	and $1f
  17+ 984F 28 16        	jr z,1F
  18+ 9851
  19+ 9851 FE 1F        	cp $1f
  20+ 9853 28 0D        	jr z,3F
  21+ 9855
  22+ 9855 21 A8 87     	ld hl,Ctrl_2
  23+ 9858 CB C6        	set 0,(hl)
  24+ 985A 2A 81 87     	ld hl,(Puntero_objeto)
  25+ 985D 22 BF 87     	ld (Repone_puntero_objeto),hl
  26+ 9860 18 08        	jr 2F
  27+ 9862
  28+ 9862 CD 10 9A     3 call Mov_left
  29+ 9865 18 03        	jr 2F
  30+ 9867
  31+ 9867 CD ED 98     1 call Mov_right
  32+ 986A 21 00 F0     2 ld hl,Sprite_vacio
  33+ 986D 22 81 87     	ld (Puntero_objeto),hl
  34+ 9870 C9           	ret
  35+ 9871
  36+ 9871              ; ******************************************************************************************************************************************************************************************
  37+ 9871              ;
  38+ 9871              ;   27/05/23
  39+ 9871              ;
  40+ 9871              ;	Mov_down
  41+ 9871              ;
  42+ 9871              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9871              ;
  44+ 9871              ;
  45+ 9871              Mov_down
  46+ 9871
  47+ 9871 CD DB 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9874              ;																	; _ repone (Puntero_objeto).
  49+ 9874 21 A3 87     	ld hl,Ctrl_0
  50+ 9877 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9879              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9879              ; 																	; _ en el caso de que no lo haya.
  53+ 9879 3A 95 87     	ld a,(Vel_down)
  54+ 987C 47           	ld b,a
  55+ 987D 2A 7F 87         ld hl,(Posicion_actual)
  56+ 9880 CD 2B 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9883 E6 02        	and 2
  58+ 9885 28 17        	jr z,1F
  59+ 9887
  60+ 9887              ; Nos encontramos en el último tercio de pantalla.
  61+ 9887              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9887
  63+ 9887 7C           	ld a,h
  64+ 9888 FE 57        	cp $57
  65+ 988A 20 12        	jr nz,1F
  66+ 988C
  67+ 988C 7D           	ld a,l
  68+ 988D C6 20        	add $20
  69+ 988F 30 0D        	jr nc,1F
  70+ 9891
  71+ 9891              ; ------------------------------
  72+ 9891              ;
  73+ 9891              ;	12/01/24
  74+ 9891
  75+ 9891              ;	call Reaparece_arriba
  76+ 9891 CD 9D 9B     	call Reinicio
  77+ 9894
  78+ 9894              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 9894
  80+ 9894 3A DD 87     	ld a,(Ctrl_3)
  81+ 9897 CB CF        	set 1,a
  82+ 9899 32 DD 87     	ld (Ctrl_3),a
  83+ 989C
  84+ 989C 18 08        	jr 3F
  85+ 989E              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  86+ 989E              ;															; _a la siguiente entidad como "Entidad_guía".
  87+ 989E              ; ------------------------------
  88+ 989E
  89+ 989E CD 18 95     1 call NextScan
  90+ 98A1 22 7F 87     	ld (Posicion_actual),hl
  91+ 98A4 10 DA            djnz 2B
  92+ 98A6 CD C3 9B     3 call Genera_coordenadas
  93+ 98A9 C9           	ret
  94+ 98AA
  95+ 98AA              ; ******************************************************************************************************************************************************************************************
  96+ 98AA              ;
  97+ 98AA              ;   27/05/23
  98+ 98AA              ;
  99+ 98AA              ;	Mov_up
 100+ 98AA              ;
 101+ 98AA              ; 	Mueve el Sprite hacia arriba.
 102+ 98AA              ;
 103+ 98AA              ;
 104+ 98AA              Mov_up
 105+ 98AA
 106+ 98AA CD DB 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 107+ 98AD              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 108+ 98AD 21 A3 87     	ld hl,Ctrl_0
 109+ 98B0 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 110+ 98B2              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 111+ 98B2              ; 																		; _ en el caso de que no lo haya.
 112+ 98B2 3A 94 87     	ld a,(Vel_up)
 113+ 98B5 47           	ld b,a
 114+ 98B6 2A 7F 87     	ld hl,(Posicion_actual)
 115+ 98B9 CD 2B 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 116+ 98BC A7           	and a
 117+ 98BD 20 10        	jr nz,1F
 118+ 98BF
 119+ 98BF              ; Nos encontramos en el 1er tercio de pantalla.
 120+ 98BF              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 121+ 98BF
 122+ 98BF 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 123+ 98C0 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 124+ 98C2 20 0B            jr nz,1F
 125+ 98C4 7D               ld a,l
 126+ 98C5 D6 20            sub $20
 127+ 98C7 30 06            jr nc,1F
 128+ 98C9 25               dec h
 129+ 98CA
 130+ 98CA              ; -----------------------------
 131+ 98CA CD 7E 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 132+ 98CD              ;	call Reinicio
 133+ 98CD              ; -----------------------------
 134+ 98CD
 135+ 98CD 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 136+ 98CF CD 27 95     1 call PreviousScan
 137+ 98D2 22 7F 87     	ld (Posicion_actual),hl
 138+ 98D5 10 E2            djnz 3B
 139+ 98D7 CD C3 9B     2 call Genera_coordenadas
 140+ 98DA C9           	ret
 141+ 98DB
 142+ 98DB              ; -----------------------------
 143+ 98DB              ;
 144+ 98DB              ;	27/5/23
 145+ 98DB              ;
 146+ 98DB              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 147+ 98DB              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 148+ 98DB              ;
 149+ 98DB              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 150+ 98DB              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 151+ 98DB              ;
 152+ 98DB              ;	Modifica: A y (Puntero_objeto).
 153+ 98DB
 154+ 98DB 3A A8 87     Reponne_punntero_objeto	ld a,(Ctrl_2)
 155+ 98DE CB 47        	bit 0,a
 156+ 98E0 C8           	ret z
 157+ 98E1 CB 87        	res 0,a
 158+ 98E3 32 A8 87     	ld (Ctrl_2),a
 159+ 98E6 2A BF 87     	ld hl,(Repone_puntero_objeto)
 160+ 98E9 22 81 87     	ld (Puntero_objeto),hl
 161+ 98EC C9           	ret
 162+ 98ED
 163+ 98ED              ; ******************************************************************************************************************************************************************************************
 164+ 98ED              ;
 165+ 98ED              ;	19/10/22
 166+ 98ED              ;
 167+ 98ED              ;	Mov_right.
 168+ 98ED              ;
 169+ 98ED              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 170+ 98ED              ;
 171+ 98ED
 172+ 98ED 3A A3 87     Mov_right ld a,(Ctrl_0)
 173+ 98F0 CB 77        	bit 6,a
 174+ 98F2 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 175+ 98F4
 176+ 98F4 CD 2C 9B     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 177+ 98F7 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 178+ 98F8
 179+ 98F8 21 A3 87     	ld hl,Ctrl_0
 180+ 98FB CB E6        	set 4,(hl)
 181+ 98FD 18 52        	jr 8F
 182+ 98FF
 183+ 98FF 21 A3 87     10 ld hl,Ctrl_0
 184+ 9902 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 185+ 9904              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 186+ 9904              ; 																	; _ en el caso de que no lo haya.
 187+ 9904 3A 83 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 188+ 9907 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 189+ 9909 20 46        	jr nz,8F
 190+ 990B
 191+ 990B 3A 85 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 192+ 990E A7           	and a 															; _[3] para continuar con el DESPLZ.
 193+ 990F 28 40        	jr z,8F
 194+ 9911
 195+ 9911              ; ---------- ---------- ----------
 196+ 9911              ;
 197+ 9911              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 198+ 9911
 199+ 9911 3A 93 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 200+ 9914 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 201+ 9916 28 11        	jr z,1F
 202+ 9918 38 06        	jr c,6F
 203+ 991A FE 04        	cp 4
 204+ 991C 28 14        	jr z,7F
 205+ 991E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 206+ 9920
 207+ 9920              ; ---------- ---------- ----------
 208+ 9920              ;
 209+ 9920              ; Perfiles de velocidad
 210+ 9920              ;
 211+ 9920
 212+ 9920 3A 85 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 213+ 9923 FE FE        	cp $fe
 214+ 9925 20 2A        	jr nz,8F
 215+ 9927 18 10        	jr 3F
 216+ 9929 3A 85 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 217+ 992C FE FD        	cp $fd
 218+ 992E 20 21        	jr nz,8F
 219+ 9930 18 07        	jr 3F
 220+ 9932 3A 85 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 221+ 9935 FE FB        	cp $fb
 222+ 9937 20 18        	jr nz,8F
 223+ 9939
 224+ 9939              ; ---------- ---------- ----------
 225+ 9939
 226+ 9939              3
 227+ 9939 CD 6C 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 228+ 993C              ;	call Reinicio
 229+ 993C
 230+ 993C              ; ---------- ---------- ----------
 231+ 993C              ;
 232+ 993C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 233+ 993C
 234+ 993C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 235+ 993E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 236+ 993F CD 58 99     	call DESPLZ_DER
 237+ 9942 C1           	pop bc
 238+ 9943 10 F9        	djnz 5B
 239+ 9945 2A 7F 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 240+ 9948 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 241+ 9949 22 7F 87     	ld (Posicion_actual),hl
 242+ 994C CD C3 9B     	call Genera_coordenadas
 243+ 994F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 244+ 9951
 245+ 9951              ; ---------- ---------- ----------
 246+ 9951
 247+ 9951 2A 7F 87     8 ld hl,(Posicion_actual)
 248+ 9954 CD 58 99     	call DESPLZ_DER
 249+ 9957 C9           2 ret
 250+ 9958
 251+ 9958              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 252+ 9958              ;
 253+ 9958              ;	22/9/22
 254+ 9958              ;
 255+ 9958
 256+ 9958 CD 67 99     DESPLZ_DER call Desplaza_derecha
 257+ 995B CD B3 99         call modifica_parametros_1er_DESPLZ_2
 258+ 995E CD DC 99         call Ciclo_completo
 259+ 9961 21 A3 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 260+ 9964 CB FE        	set 7,(hl)
 261+ 9966 C9           	ret
 262+ 9967
 263+ 9967              ; ******************************************************************************************************************************************************************************************
 264+ 9967              ;	15/02/23
 265+ 9967              ;
 266+ 9967
 267+ 9967 3A 93 87     Desplaza_derecha ld a,(Vel_right)
 268+ 996A 47           	ld b,a
 269+ 996B 2A 8B 87     	ld hl,(Puntero_DESPLZ_der)
 270+ 996E 23           1 inc hl
 271+ 996F 23           	inc hl
 272+ 9970 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 273+ 9972 22 8B 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 274+ 9975 CD AC 8B     	call Extrae_address
 275+ 9978 22 81 87     	ld (Puntero_objeto),hl
 276+ 997B
 277+ 997B              ; Modifica (Puntero_DESPLZ_izq).
 278+ 997B
 279+ 997B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 280+ 997B              ; Cuántos movimientos hemos hecho ??
 281+ 997B              ; DE contiene (Puntero_DESPLZ_der).
 282+ 997B
 283+ 997B 2A 87 87     7 ld hl,(Indice_Sprite_der)
 284+ 997E EB           	ex de,hl
 285+ 997F A7           	and a
 286+ 9980 ED 52        	sbc hl,de
 287+ 9982 CB 3D        	srl l
 288+ 9984 3E 08        6 ld a,8
 289+ 9986 95           	sub l
 290+ 9987 30 1E        	jr nc,3F
 291+ 9989
 292+ 9989              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 293+ 9989              ; B="0".
 294+ 9989
 295+ 9989 04           4 inc b
 296+ 998A 3C           	inc a
 297+ 998B 20 FC        	jr nz,4B
 298+ 998D 78           	ld a,b
 299+ 998E 08           	ex af,af
 300+ 998F 2A 87 87     	ld hl,(Indice_Sprite_der)
 301+ 9992 23           5 inc hl
 302+ 9993 23           	inc hl
 303+ 9994 10 FC        	djnz 5B
 304+ 9996 22 8B 87     	ld (Puntero_DESPLZ_der),hl
 305+ 9999 CD AC 8B     	call Extrae_address
 306+ 999C 22 81 87     	ld (Puntero_objeto),hl
 307+ 999F
 308+ 999F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 309+ 999F              ; _(Posicion_actual).
 310+ 999F
 311+ 999F 21 7F 87     	ld hl,Posicion_actual
 312+ 99A2 34           	inc (hl)
 313+ 99A3 08               ex af,af
 314+ 99A4 6F           	ld l,a
 315+ 99A5 18 DD        	jr 6B
 316+ 99A7
 317+ 99A7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 318+ 99A7
 319+ 99A7 47           3 ld b,a
 320+ 99A8 2A 89 87     	ld hl,(Indice_Sprite_izq)
 321+ 99AB 23           2 inc hl
 322+ 99AC 23           	inc hl
 323+ 99AD 10 FC        	djnz 2B
 324+ 99AF 22 8D 87     	ld (Puntero_DESPLZ_izq),hl
 325+ 99B2 C9           8 ret
 326+ 99B3
 327+ 99B3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 328+ 99B3              ;
 329+ 99B3              ;	24/7/22
 330+ 99B3              ;
 331+ 99B3              ;	modifica_parametros_1er_DESPLZ_2
 332+ 99B3              ;
 333+ 99B3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 334+ 99B3              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 99B3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 336+ 99B3
 337+ 99B3 3A 85 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 338+ 99B6 A7           	and a
 339+ 99B7 20 1F        	jr nz,1F
 340+ 99B9 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 341+ 99BB 32 85 87         ld (CTRL_DESPLZ),a
 342+ 99BE
 343+ 99BE 21 7E 87     	ld hl,Columns
 344+ 99C1 34           	inc (hl)
 345+ 99C2 3A 91 87     	ld a,(Cuad_objeto)
 346+ 99C5 E6 01        	and 1
 347+ 99C7 28 0F        	jr z,1F
 348+ 99C9 2A 7F 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 349+ 99CC 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 350+ 99CD 22 7F 87     	ld (Posicion_actual),hl
 351+ 99D0 CD C3 9B     	call Genera_coordenadas
 352+ 99D3 CD 38 9B     	call Inc_CTRL_DESPLZ
 353+ 99D6 18 03        	jr 2F
 354+ 99D8 CD 38 9B     1 call Inc_CTRL_DESPLZ
 355+ 99DB C9           2 ret
 356+ 99DC
 357+ 99DC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 358+ 99DC              ;
 359+ 99DC              ;	24/7/22
 360+ 99DC              ;
 361+ 99DC              ;	Ciclo_completo.
 362+ 99DC              ;
 363+ 99DC              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 364+ 99DC              ;
 365+ 99DC              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 366+ 99DC              ; 	Decrementamos (Columns).
 367+ 99DC              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 368+ 99DC              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 369+ 99DC
 370+ 99DC
 371+ 99DC 3A 85 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 372+ 99DF FE FF        	cp $ff
 373+ 99E1 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 374+ 99E3 E6 F0        	and $f0
 375+ 99E5 20 28        	jr nz,3F
 376+ 99E7
 377+ 99E7              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 378+ 99E7
 379+ 99E7 3A 85 87     	ld a,(CTRL_DESPLZ)
 380+ 99EA 47           	ld b,a
 381+ 99EB 3E F8        	ld a,$f8
 382+ 99ED 80           	add b
 383+ 99EE 32 85 87     	ld (CTRL_DESPLZ),a
 384+ 99F1 18 1C        	jr 3F
 385+ 99F3 21 7E 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 386+ 99F6 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 387+ 99F7 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 388+ 99F8 32 85 87     	ld (CTRL_DESPLZ),a
 389+ 99FB 3A 91 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 390+ 99FE E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 391+ 9A00 20 0A        	jr nz,2F
 392+ 9A02 2A 7F 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 393+ 9A05 23           	inc hl
 394+ 9A06 22 7F 87     	ld (Posicion_actual),hl
 395+ 9A09 CD C3 9B     	call Genera_coordenadas
 396+ 9A0C
 397+ 9A0C              ; Inicia el puntero de Sprite.
 398+ 9A0C
 399+ 9A0C CD C3 8B     2 call Inicia_puntero_objeto_der
 400+ 9A0F C9           3 ret
 401+ 9A10
 402+ 9A10              ; ******************************************************************************************************************************************************************************************
 403+ 9A10              ;
 404+ 9A10              ;	15/02/23
 405+ 9A10              ;
 406+ 9A10              ;	Mov_left.
 407+ 9A10              ;
 408+ 9A10              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 409+ 9A10              ;
 410+ 9A10              Mov_left
 411+ 9A10
 412+ 9A10 21 A3 87     	ld hl,Ctrl_0
 413+ 9A13 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 414+ 9A15              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 415+ 9A15              ; 																	; _ en el caso de que no lo haya.
 416+ 9A15 3A A3 87     	ld a,(Ctrl_0)
 417+ 9A18 CB 77        	bit 6,a
 418+ 9A1A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 419+ 9A1C
 420+ 9A1C CD 32 9B     	call Stop_Amadeus_left
 421+ 9A1F C8           	ret z
 422+ 9A20 20 4A        	jr nz,8F
 423+ 9A22
 424+ 9A22 3A 83 87     11 ld a,(Coordenada_X)
 425+ 9A25 A7           	and a
 426+ 9A26 20 44        	jr nz,8F
 427+ 9A28
 428+ 9A28 3A 85 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 429+ 9A2B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 430+ 9A2C 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 431+ 9A2E
 432+ 9A2E              ; ---------- ---------- ----------
 433+ 9A2E
 434+ 9A2E 3A 92 87     	ld a,(Vel_left)
 435+ 9A31 FE 02        	cp 2
 436+ 9A33 28 0F        	jr z,1F
 437+ 9A35 38 04        	jr c,6F
 438+ 9A37 FE 04        	cp 4
 439+ 9A39 28 12        	jr z,7F
 440+ 9A3B
 441+ 9A3B              ; ---------- ---------- ----------
 442+ 9A3B
 443+ 9A3B 3A 85 87     6 ld a,(CTRL_DESPLZ)
 444+ 9A3E FE F8        	cp $f8
 445+ 9A40 20 2A        	jr nz,8F
 446+ 9A42 18 10        	jr 4F
 447+ 9A44 3A 85 87     1 ld a,(CTRL_DESPLZ)
 448+ 9A47 FE F9        	cp $f9
 449+ 9A49 20 21        	jr nz,8F
 450+ 9A4B 18 07        	jr 4F
 451+ 9A4D 3A 85 87     7 ld a,(CTRL_DESPLZ)
 452+ 9A50 FE FB        	cp $fb
 453+ 9A52 20 18        	jr nz,8F
 454+ 9A54
 455+ 9A54              ; ---------- ---------- ----------
 456+ 9A54
 457+ 9A54              4
 458+ 9A54 CD 5A 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 459+ 9A57              ;	call Reinicio
 460+ 9A57
 461+ 9A57              ; ---------- ---------- ----------
 462+ 9A57
 463+ 9A57 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 464+ 9A59 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 465+ 9A5A
 466+ 9A5A              ;	ld hl,(Indice_Sprite_izq)
 467+ 9A5A              ;	ld (Puntero_DESPLZ_izq),hl
 468+ 9A5A
 469+ 9A5A CD 73 9A     	call DESPLZ_IZQ
 470+ 9A5D C1           	pop bc
 471+ 9A5E 10 F9        	djnz 5B
 472+ 9A60 2A 7F 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 473+ 9A63 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 474+ 9A64 22 7F 87     	ld (Posicion_actual),hl
 475+ 9A67 CD C3 9B     	call Genera_coordenadas
 476+ 9A6A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 477+ 9A6C
 478+ 9A6C              ; ---------- ---------- ----------
 479+ 9A6C
 480+ 9A6C              ; Movemos, no hay recolocación.
 481+ 9A6C
 482+ 9A6C 2A 7F 87     8 ld hl,(Posicion_actual)
 483+ 9A6F CD 73 9A     	call DESPLZ_IZQ
 484+ 9A72 C9           2 ret
 485+ 9A73
 486+ 9A73              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 487+ 9A73              ;
 488+ 9A73              ;	22/9/22
 489+ 9A73
 490+ 9A73              DESPLZ_IZQ
 491+ 9A73
 492+ 9A73 CD 82 9A     	call Desplaza_izquierda
 493+ 9A76 CD CE 9A         call modifica_parametros_1er_DESPLZ
 494+ 9A79 CD F6 9A     	call Ciclo_completo_2
 495+ 9A7C 21 A3 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 496+ 9A7F CB BE        	res 7,(hl)
 497+ 9A81 C9           	ret
 498+ 9A82
 499+ 9A82              Desplaza_izquierda
 500+ 9A82
 501+ 9A82 3A 92 87     	ld a,(Vel_left)
 502+ 9A85 47           	ld b,a
 503+ 9A86 2A 8D 87     	ld hl,(Puntero_DESPLZ_izq)
 504+ 9A89 23           1 inc hl
 505+ 9A8A 23           	inc hl
 506+ 9A8B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 507+ 9A8D 22 8D 87     	ld (Puntero_DESPLZ_izq),hl
 508+ 9A90 CD AC 8B     	call Extrae_address
 509+ 9A93 22 81 87     	ld (Puntero_objeto),hl
 510+ 9A96
 511+ 9A96              ; Modifica (Puntero_DESPLZ_der).
 512+ 9A96
 513+ 9A96              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 514+ 9A96              ; Cuántos movimientos hemos hecho ??
 515+ 9A96              ; DE contiene (Puntero_DESPLZ_izq).
 516+ 9A96
 517+ 9A96 2A 89 87     7 ld hl,(Indice_Sprite_izq)
 518+ 9A99 EB           	ex de,hl
 519+ 9A9A A7           	and a
 520+ 9A9B ED 52        	sbc hl,de
 521+ 9A9D CB 3D        	srl l
 522+ 9A9F 3E 08        6 ld a,8
 523+ 9AA1 95           	sub l
 524+ 9AA2 30 1E        	jr nc,3F
 525+ 9AA4
 526+ 9AA4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 527+ 9AA4              ; B="0".
 528+ 9AA4
 529+ 9AA4 04           4 inc b
 530+ 9AA5 3C           	inc a
 531+ 9AA6 20 FC        	jr nz,4B
 532+ 9AA8 78           	ld a,b
 533+ 9AA9 08           	ex af,af
 534+ 9AAA 2A 89 87     	ld hl,(Indice_Sprite_izq)
 535+ 9AAD 23           5 inc hl
 536+ 9AAE 23           	inc hl
 537+ 9AAF 10 FC        	djnz 5B
 538+ 9AB1 22 8D 87     	ld (Puntero_DESPLZ_izq),hl
 539+ 9AB4 CD AC 8B     	call Extrae_address
 540+ 9AB7 22 81 87     	ld (Puntero_objeto),hl
 541+ 9ABA
 542+ 9ABA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 543+ 9ABA              ; _(Posicion_actual).
 544+ 9ABA
 545+ 9ABA 21 7F 87     	ld hl,Posicion_actual
 546+ 9ABD 35           	dec (hl)
 547+ 9ABE 08           	ex af,af
 548+ 9ABF 6F           	ld l,a
 549+ 9AC0 18 DD        	jr 6B
 550+ 9AC2
 551+ 9AC2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 552+ 9AC2
 553+ 9AC2 47           3 ld b,a
 554+ 9AC3 2A 87 87     	ld hl,(Indice_Sprite_der)
 555+ 9AC6 23           2 inc hl
 556+ 9AC7 23           	inc hl
 557+ 9AC8 10 FC        	djnz 2B
 558+ 9ACA 22 8B 87     	ld (Puntero_DESPLZ_der),hl
 559+ 9ACD C9           8 ret
 560+ 9ACE
 561+ 9ACE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 562+ 9ACE              ;
 563+ 9ACE              ;	modifica_parametros_1er_DESPLZ
 564+ 9ACE              ;
 565+ 9ACE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 566+ 9ACE              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 567+ 9ACE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 568+ 9ACE
 569+ 9ACE 3A 85 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 570+ 9AD1 A7           	and a
 571+ 9AD2 20 1E        	jr nz,1F
 572+ 9AD4 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 573+ 9AD5 32 85 87         ld (CTRL_DESPLZ),a
 574+ 9AD8 21 7E 87     	ld hl,Columns
 575+ 9ADB 34           	inc (hl)
 576+ 9ADC 3A 91 87     	ld a,(Cuad_objeto)
 577+ 9ADF E6 01        	and 1
 578+ 9AE1 20 0F        	jr nz,1F
 579+ 9AE3 2A 7F 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 580+ 9AE6 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 581+ 9AE7 22 7F 87     	ld (Posicion_actual),hl
 582+ 9AEA CD C3 9B     	call Genera_coordenadas
 583+ 9AED CD 49 9B     	call Dec_CTRL_DESPLZ
 584+ 9AF0 18 03        	jr 2F
 585+ 9AF2 CD 49 9B     1 call Dec_CTRL_DESPLZ
 586+ 9AF5 C9           2 ret
 587+ 9AF6
 588+ 9AF6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 589+ 9AF6
 590+ 9AF6 3A 85 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 591+ 9AF9 FE F7        	cp $f7
 592+ 9AFB 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 593+ 9AFD 30 2C        	jr nc,3F
 594+ 9AFF
 595+ 9AFF              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 596+ 9AFF
 597+ 9AFF 06 00        	ld b,0
 598+ 9B01 04           4 inc b
 599+ 9B02 3C           	inc a
 600+ 9B03 FE F7        	cp $f7
 601+ 9B05 20 FA        	jr nz,4B
 602+ 9B07 3E FF        	ld a,$ff
 603+ 9B09 90           	sub b
 604+ 9B0A 32 85 87     	ld (CTRL_DESPLZ),a
 605+ 9B0D 18 1C        	jr 3F
 606+ 9B0F
 607+ 9B0F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 608+ 9B0F
 609+ 9B0F 21 7E 87     1 ld hl,Columns
 610+ 9B12 35           	dec (hl)
 611+ 9B13 AF           	xor a
 612+ 9B14 32 85 87     	ld (CTRL_DESPLZ),a
 613+ 9B17 3A 91 87     	ld a,(Cuad_objeto)
 614+ 9B1A E6 01        	and 1
 615+ 9B1C 28 0A        	jr z,2F
 616+ 9B1E 2A 7F 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 617+ 9B21 2B           	dec hl
 618+ 9B22 22 7F 87     	ld (Posicion_actual),hl
 619+ 9B25 CD C3 9B     	call Genera_coordenadas
 620+ 9B28
 621+ 9B28              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 622+ 9B28
 623+ 9B28 CD D6 8B     2 call Inicia_puntero_objeto_izq
 624+ 9B2B C9           3 ret
 625+ 9B2C
 626+ 9B2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 627+ 9B2C              ;
 628+ 9B2C              ;	19/10/22
 629+ 9B2C              ;
 630+ 9B2C              ;	(cp 29) para un Amadeus de 3 Columns.
 631+ 9B2C              ;	(cp 30)   ""  ""    ""     2 Columns.
 632+ 9B2C
 633+ 9B2C 3A 83 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 634+ 9B2F FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 635+ 9B31 C9           	ret
 636+ 9B32
 637+ 9B32              ; ---------- ---------- ---------- ---------- ---------- ----------
 638+ 9B32              ;
 639+ 9B32              ;	19/10/22
 640+ 9B32              ;
 641+ 9B32              ;	(cp 2) para un Amadeus de 3 Columns.
 642+ 9B32              ;	(cp 1)   ""  ""    ""     2 Columns.
 643+ 9B32
 644+ 9B32 3A 83 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 645+ 9B35 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 646+ 9B37 C9           	ret
 647+ 9B38
 648+ 9B38              ; ---------- ---------- ---------- ---------- ---------- ----------
 649+ 9B38              ;
 650+ 9B38              ;	24/7/22
 651+ 9B38              ;
 652+ 9B38              ;	Inc_CTRL_DESPLZ
 653+ 9B38              ;
 654+ 9B38              ;
 655+ 9B38              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 656+ 9B38
 657+ 9B38 21 85 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 658+ 9B3B 3A 93 87     	ld a,(Vel_right)
 659+ 9B3E A7           	and a
 660+ 9B3F 28 06        	jr z,1F
 661+ 9B41 47           	ld b,a
 662+ 9B42 34           3 inc (hl)
 663+ 9B43 10 FD        	djnz 3B
 664+ 9B45 18 01        	jr 2F
 665+ 9B47 34           1 inc (hl)
 666+ 9B48 C9           2 ret
 667+ 9B49
 668+ 9B49              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 9B49              ;
 670+ 9B49              ;	5/2/23
 671+ 9B49              ;
 672+ 9B49              ;	Dec_CTRL_DESPLZ
 673+ 9B49              ;
 674+ 9B49              ;
 675+ 9B49              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 676+ 9B49
 677+ 9B49 21 85 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 678+ 9B4C 3A 92 87     	ld a,(Vel_left)
 679+ 9B4F A7           	and a
 680+ 9B50 28 06        	jr z,1F
 681+ 9B52 47           	ld b,a
 682+ 9B53 35           3 dec (hl)
 683+ 9B54 10 FD        	djnz 3B
 684+ 9B56 18 01        	jr 2F
 685+ 9B58 35           1 dec (hl)
 686+ 9B59 C9           2 ret
 687+ 9B5A
 688+ 9B5A              ; ---------- ---------- ---------- ---------- ---------- ----------
 689+ 9B5A
 690+ 9B5A 2A 7F 87     Reaparece_derecha ld hl,(Posicion_actual)
 691+ 9B5D 01 1F 00     	ld bc,31
 692+ 9B60 A7           	and a
 693+ 9B61 ED 4A        	adc hl,bc
 694+ 9B63 22 7F 87     	ld (Posicion_actual),hl
 695+ 9B66 21 A3 87     	ld hl,Ctrl_0														; $xxx1
 696+ 9B69 CB C6        	set 0,(hl)
 697+ 9B6B C9           	ret
 698+ 9B6C
 699+ 9B6C              ; ---------- ---------- ---------- ---------- ---------- ----------
 700+ 9B6C
 701+ 9B6C 2A 7F 87     Reaparece_izquierda ld hl,(Posicion_actual)
 702+ 9B6F 01 1F 00     	ld bc,31
 703+ 9B72 A7           	and a
 704+ 9B73 ED 42        	sbc hl,bc
 705+ 9B75 22 7F 87     	ld (Posicion_actual),hl 											; $xx1x
 706+ 9B78 21 A3 87     	ld hl,Ctrl_0
 707+ 9B7B CB CE        	set 1,(hl)
 708+ 9B7D C9           	ret
 709+ 9B7E
 710+ 9B7E              ; ---------- ---------- ---------- ---------- ---------- ----------
 711+ 9B7E
 712+ 9B7E 24           Reaparece_abajo inc h
 713+ 9B7F 01 E0 17     	ld bc,$17e0
 714+ 9B82 A7           	and a
 715+ 9B83 ED 4A        	adc hl,bc
 716+ 9B85 22 7F 87     	ld (Posicion_actual),hl
 717+ 9B88 21 A3 87     	ld hl,Ctrl_0
 718+ 9B8B CB D6        	set 2,(hl)
 719+ 9B8D C9           	ret
 720+ 9B8E
 721+ 9B8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 722+ 9B8E
 723+ 9B8E 01 E0 17     Reaparece_arriba ld bc,$17e0
 724+ 9B91 A7           	and a
 725+ 9B92 ED 42        	sbc hl,bc
 726+ 9B94 22 7F 87     	ld (Posicion_actual),hl
 727+ 9B97 21 A3 87     	ld hl,Ctrl_0
 728+ 9B9A CB DE        	set 3,(hl)
 729+ 9B9C C9           	ret
 730+ 9B9D
 731+ 9B9D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 732+ 9B9D              ;
 733+ 9B9D              ;	15/07/23
 734+ 9B9D
 735+ 9B9D              Reinicio
 736+ 9B9D
 737+ 9B9D              ; Vamos a reiniciar los punteros y variables de movimiento.
 738+ 9B9D
 739+ 9B9D AF           	xor a
 740+ 9B9E 21 B6 87     	ld hl,Puntero_indice_mov_bucle
 741+ 9BA1 CD BF 9B     	call Limpia_contenido_hl
 742+ 9BA4
 743+ 9BA4 21 7F 87     	ld hl,Posicion_actual
 744+ 9BA7 CD BF 9B     	call Limpia_contenido_hl
 745+ 9BAA
 746+ 9BAA CD 22 9F     	call Inicializa_Puntero_indice_mov
 747+ 9BAD CD 7F 9E     	call Inicia_Puntero_mov
 748+ 9BB0
 749+ 9BB0 21 B8 87     	ld hl,Incrementa_puntero
 750+ 9BB3 06 05        	ld b,5
 751+ 9BB5 77           1 ld (hl),a
 752+ 9BB6 23           	inc hl
 753+ 9BB7 10 FC        	djnz 1B
 754+ 9BB9
 755+ 9BB9 21 A8 87     	ld hl,Ctrl_2
 756+ 9BBC CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 757+ 9BBE
 758+ 9BBE C9           	ret
 759+ 9BBF
 760+ 9BBF 77           Limpia_contenido_hl	ld (hl),a
 761+ 9BC0 23           	inc hl
 762+ 9BC1 77           	ld (hl),a
 763+ 9BC2 C9           	ret
 764+ 9BC3
 765+ 9BC3
# file closed: Direcciones.asm
1927  9BC3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BC3              ; ------------------------------------------------------------------------
   2+ 9BC3              ;
   3+ 9BC3              ;	02/04/23
   4+ 9BC3              ;
   5+ 9BC3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BC3              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BC3              ;
   8+ 9BC3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BC3              ;
  10+ 9BC3              ;	Modifica: A,BC y DE.
  11+ 9BC3
  12+ 9BC3 C5           Genera_coordenadas push bc
  13+ 9BC4 E5           	push hl
  14+ 9BC5 D5           	push de
  15+ 9BC6
  16+ 9BC6 2A 7F 87     	ld hl,(Posicion_actual)
  17+ 9BC9
  18+ 9BC9 7D           	ld a,l
  19+ 9BCA E6 1F        	and $1f
  20+ 9BCC 32 83 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9BCF
  22+ 9BCF CD 2B 98     	call calcula_tercio
  23+ 9BD2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9BD3
  25+ 9BD3 1E 00        	ld e,0
  26+ 9BD5 7D           	ld a,l
  27+ 9BD6 E6 E0        	and $e0
  28+ 9BD8 28 01        	jr z,1F
  29+ 9BDA 04           	inc b
  30+ 9BDB
  31+ 9BDB 04           1 inc b
  32+ 9BDC 05           	dec b
  33+ 9BDD 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9BDF              ;														; _ , salimos.
  35+ 9BDF 1C           3 inc e
  36+ 9BE0 D6 20        	sub 32
  37+ 9BE2 20 FB        	jr nz,3B
  38+ 9BE4 10 F5        	djnz 1B
  39+ 9BE6
  40+ 9BE6 7B           2 ld a,e
  41+ 9BE7 32 84 87     	ld (Coordenada_y),a
  42+ 9BEA
  43+ 9BEA D1           	pop de
  44+ 9BEB E1           	pop hl
  45+ 9BEC C1           	pop bc
  46+ 9BED
  47+ 9BED C9           	ret
  48+ 9BEE
  49+ 9BEE              ; ------------------------------------------------------------------------
  50+ 9BEE              ;	28/05/23
  51+ 9BEE              ;
  52+ 9BEE              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9BEE              ;	Fila superior "0", Columna izquierda "0".
  54+ 9BEE              ;
  55+ 9BEE              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9BEE              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9BEE              ;
  58+ 9BEE              ;		DE="$120d"
  59+ 9BEE              ;
  60+ 9BEE              ;		D, (Coordenada_X), Columnas, $12
  61+ 9BEE              ;		E, (Coordenada_y), Filas, $0d
  62+ 9BEE              ;
  63+ 9BEE              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9BEE
  65+ 9BEE              ;	Modifica: A,BC y DE.
  66+ 9BEE
  67+ 9BEE
  68+ 9BEE              Genera_coordenadas_disparo
  69+ 9BEE
  70+ 9BEE              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9BEE
  72+ 9BEE 7D           	ld a,l
  73+ 9BEF E6 1F        	and $1f
  74+ 9BF1 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9BF2 CD 2B 98     	call calcula_tercio
  76+ 9BF5 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9BF6 1E 00        	ld e,0
  78+ 9BF8 7D           	ld a,l
  79+ 9BF9 E6 E0        	and $e0
  80+ 9BFB 28 01        	jr z,1F
  81+ 9BFD 04           	inc b
  82+ 9BFE 1C           1 inc e
  83+ 9BFF D6 20        	sub 32
  84+ 9C01 20 FB        	jr nz,1B
  85+ 9C03 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C05 C9           	ret
  87+ 9C06
# file closed: Genera_coordenadas.asm
1928  9C06              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C06              ; Relojes y temporizaciones.
   2+ 9C06
   3+ 9C06              ; ------------------------------------------------------
   4+ 9C06              ;
   5+ 9C06              ;	16/7/23
   6+ 9C06              ;
   7+ 9C06              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C06              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C06              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C06              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C06              ;
  12+ 9C06              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C06              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C06
  15+ 9C06              ; Disparo_entidad db 1
  16+ 9C06              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C06              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C06
  19+ 9C06              Habilita_disparos
  20+ 9C06
  21+ 9C06 7E           	ld a,(hl)
  22+ 9C07 A7           	and a
  23+ 9C08 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C09
  25+ 9C09 EB           	ex de,hl
  26+ 9C0A
  27+ 9C0A 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C0B C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C0C
  30+ 9C0C              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C0C
  32+ 9C0C 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C0D 7E           	ld a,(hl)
  34+ 9C0E 23           	inc hl
  35+ 9C0F 77           	ld (hl),a
  36+ 9C10
  37+ 9C10 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C11 3E 01        	ld a,1
  39+ 9C13 77           	ld (hl),a
  40+ 9C14 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1929  9C15              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C15
   2+ 9C15
   3+ 9C15              ;   07/07/23
   4+ 9C15              ;
   5+ 9C15              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C15              ;
   7+ 9C15              ;   Codificación:
   8+ 9C15              ;
   9+ 9C15              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C15              ;
  11+ 9C15              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C15              ;
  13+ 9C15              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C15              ;
  15+ 9C15              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C15              ;
  17+ 9C15              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C15              ;                               ..... %01000010 Vel_up 4
  19+ 9C15              ;                                               Vel_down 2
  20+ 9C15              ;                               ..... $42
  21+ 9C15              ;
  22+ 9C15              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C15              ;
  24+ 9C15              ;                               ..... %01000010 Vel_left 4
  25+ 9C15              ;                                               Vel_right 2
  26+ 9C15              ;                               ..... $42
  27+ 9C15              ;
  28+ 9C15              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C15              ;
  30+ 9C15              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C15              ;
  32+ 9C15              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C15              ;
  34+ 9C15              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C15              ;                                     $53
  36+ 9C15              ;
  37+ 9C15              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C15              ;
  39+ 9C15              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C15              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C15              ;
  42+ 9C15              ;                       Arriba ..... $81
  43+ 9C15              ;                       Arriba - izquierda ..... $a1
  44+ 9C15              ;                       Arriba - derecha ..... $91
  45+ 9C15              ;
  46+ 9C15              ;                       Abajo ..... $41
  47+ 9C15              ;                       Abajo - izquierda ..... $61
  48+ 9C15              ;                       Abajo - derecha ..... $51
  49+ 9C15              ;
  50+ 9C15              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C15              ;
  52+ 9C15              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C15              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C15              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C15              ;
  56+ 9C15              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C15              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C15              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C15              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C15              ;
  61+ 9C15              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C15              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C15              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C15              ;
  65+ 9C15              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C15              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C15              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C15              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C15
  70+ 9C15              ; ----- ----- ----- ----- -----
  71+ 9C15
  72+ 9C15 41 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C17 49 9C            defw F_1
  74+ 9C19 53 9C            defw F_2
  75+ 9C1B 5D 9C            defw Codo_abajo_derecha
  76+ 9C1D 91 9C            defw Derecha_y_subiendo
  77+ 9C1F 9B 9C            defw Derecha_y_subiendo_1
  78+ 9C21 A5 9C            defw F_3
  79+ 9C23 AF 9C            defw F_4
  80+ 9C25 B9 9C            defw Derecha_y_bajando
  81+ 9C27 C3 9C            defw Derecha_y_bajando_1
  82+ 9C29 CD 9C            defw Derecha_y_bajando_2
  83+ 9C2B D7 9C            defw Codo_derecha_abajo
  84+ 9C2D 07 9D            defw Codo_abajo_izq.
  85+ 9C2F 3B 9D            defw Izquierda_y_subiendo
  86+ 9C31 45 9D            defw Izquierda_y_subiendo_1
  87+ 9C33 4F 9D            defw F_5
  88+ 9C35 59 9D            defw F_6
  89+ 9C37 63 9D            defw Izquierda_y_bajando
  90+ 9C39 6D 9D            defw Izquierda_y_bajando_1
  91+ 9C3B 77 9D            defw Izquierda_y_bajando_2
  92+ 9C3D 81 9D            defw Codo_izquierda_abajo
  93+ 9C3F 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C41
  95+ 9C41 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C45 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C49
  98+ 9C49 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C4D 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C51 08 00
 100+ 9C53 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C57 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C5B 0F FE
 102+ 9C5D
 103+ 9C5D 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C61 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C65 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C69 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C6D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C71 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C75 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C79 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C7D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C81 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C85 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C89 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C8D 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C91
 117+ 9C91 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C95 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C99 06 00
 119+ 9C9B
 120+ 9C9B 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C9F 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9CA3 02 00
 122+ 9CA5
 123+ 9CA5 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9CA9 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9CAD 04 00
 125+ 9CAF 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9CB3 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9CB7 08 00
 127+ 9CB9
 128+ 9CB9 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9CBD 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9CC1 02 00
 130+ 9CC3
 131+ 9CC3 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CC7 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CCB 06 00
 133+ 9CCD
 134+ 9CCD 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CD1 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CD5 06 00
 136+ 9CD7
 137+ 9CD7              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CD7
 139+ 9CD7 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CDB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9CDF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9CE3 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CE7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CEB 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CEF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CF3 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CF7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CFB 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CFF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D03 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D07
 152+ 9D07 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D0B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D0F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D13 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D17 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D1B 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D1F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D23 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D27 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D2B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D2F 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D33 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D37 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D3B
 166+ 9D3B 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D3F 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D43 06 00
 168+ 9D45
 169+ 9D45 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D49 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D4D 02 00
 171+ 9D4F
 172+ 9D4F 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D53 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D57 04 00
 174+ 9D59 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D5D 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D61 08 00
 176+ 9D63
 177+ 9D63 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D67 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D6B 02 00
 179+ 9D6D
 180+ 9D6D 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D71 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D75 06 00
 182+ 9D77
 183+ 9D77 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D7B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D7F 06 00
 185+ 9D81
 186+ 9D81 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D85 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D89 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D8D 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D91 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D95 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D99 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D9D 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9DA1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9DA5 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9DA9 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9DAD 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9DB1
 199+ 9DB1              ; ----- ----- ----- ----- -----
 200+ 9DB1              ;
 201+ 9DB1              ;   28/12/23
 202+ 9DB1
 203+ 9DB1              Movimiento
 204+ 9DB1
 205+ 9DB1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9DB1
 207+ 9DB1 3A A8 87         ld a,(Ctrl_2)
 208+ 9DB4 CB 57            bit 2,a
 209+ 9DB6 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9DB8
 211+ 9DB8 2A B4 87         ld hl,(Puntero_mov)
 212+ 9DBB 7E               ld a,(hl)
 213+ 9DBC
 214+ 9DBC              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9DBC
 216+ 9DBC              Inicia_desplazamiento.
 217+ 9DBC
 218+ 9DBC              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9DBC
 220+ 9DBC CD BC 9E         call Ajusta_velocidad_desplazamiento
 221+ 9DBF
 222+ 9DBF              ; Iniciamos (Repetimos_mov).
 223+ 9DBF
 224+ 9DBF 7E               ld a,(hl)
 225+ 9DC0 E6 0F            and $0f
 226+ 9DC2 32 BA 87         ld (Repetimos_desplazamiento),a
 227+ 9DC5 32 BB 87         ld (Repetimos_desplazamiento_backup),a
 228+ 9DC8
 229+ 9DC8              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9DC8
 231+ 9DC8 23               inc hl
 232+ 9DC9 7E               ld a,(hl)
 233+ 9DCA 32 BD 87         ld (Cola_de_desplazamiento),a
 234+ 9DCD 2B               dec hl
 235+ 9DCE
 236+ 9DCE 21 A8 87         ld hl,Ctrl_2
 237+ 9DD1 CB D6            set 2,(hl)
 238+ 9DD3
 239+ 9DD3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9DD3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9DD3
 242+ 9DD3              Desplazamiento_iniciado
 243+ 9DD3
 244+ 9DD3 CD 8A 9E         call Aplica_desplazamiento
 245+ 9DD6
 246+ 9DD6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9DD6
 248+ 9DD6 3A DD 87         ld a,(Ctrl_3)
 249+ 9DD9 CB 57            bit 2,a
 250+ 9DDB C0               ret nz
 251+ 9DDC
 252+ 9DDC 3A A8 87         ld a,(Ctrl_2)
 253+ 9DDF CB 67            bit 4,a
 254+ 9DE1 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9DE2
 256+ 9DE2 21 BA 87     3 ld hl,Repetimos_desplazamiento
 257+ 9DE5 35               dec (hl)
 258+ 9DE6 C0               ret nz
 259+ 9DE7
 260+ 9DE7              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DE7              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DE7              ; Analiza (Cola_de_desplazamiento).
 263+ 9DE7
 264+ 9DE7 3A BD 87     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DEA A7               and a
 266+ 9DEB CC E5 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DEE 28 30            jr z,Reinicia_el_movimiento
 268+ 9DF0
 269+ 9DF0 FE FF            cp $ff
 270+ 9DF2 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DF4
 272+ 9DF4 FE FE            cp $fe
 273+ 9DF6 CC 63 9E         call z,Fijamos_bucle
 274+ 9DF9 28 25            jr z,Reinicia_el_movimiento
 275+ 9DFB
 276+ 9DFB FE FD            cp $fd
 277+ 9DFD 20 11            jr nz,1F
 278+ 9DFF
 279+ 9DFF              ; ---
 280+ 9DFF              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DFF
 282+ 9DFF 3A A8 87         ld a,(Ctrl_2)
 283+ 9E02 CB 5F            bit 3,a
 284+ 9E04 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9E06
 286+ 9E06              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9E06
 288+ 9E06 21 A8 87         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9E09 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9E0B
 291+ 9E0B CD 74 9E         call Inicia_Repetimos_movimiento
 292+ 9E0E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9E10              ; ---
 294+ 9E10
 295+ 9E10 FE 01        1 cp 1
 296+ 9E12 CA 4D 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9E15
 298+ 9E15 3D               dec a
 299+ 9E16 32 BD 87         ld (Cola_de_desplazamiento),a
 300+ 9E19
 301+ 9E19 3A BB 87         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9E1C 32 BA 87         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9E1F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9E1F C9               ret
 305+ 9E20
 306+ 9E20              Reinicia_el_movimiento
 307+ 9E20
 308+ 9E20 3A A8 87         ld a,(Ctrl_2)
 309+ 9E23 CB 5F            bit 3,a
 310+ 9E25 28 1B            jr z,2F
 311+ 9E27
 312+ 9E27              ; (Cola_de_desplazamiento)="254".
 313+ 9E27
 314+ 9E27 21 BC 87         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9E2A 35               dec (hl)
 316+ 9E2B 20 15            jr nz,2F
 317+ 9E2D
 318+ 9E2D              ; Fin de las repeticiones del último movimiento.
 319+ 9E2D
 320+ 9E2D 21 A8 87         ld hl,Ctrl_2
 321+ 9E30 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9E32
 323+ 9E32 2A B4 87         ld hl,(Puntero_mov)
 324+ 9E35 23               inc hl
 325+ 9E36 23               inc hl
 326+ 9E37 23               inc hl
 327+ 9E38 22 B4 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9E3B              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9E3B 7E               ld a,(hl)
 330+ 9E3C 32 BD 87         ld (Cola_de_desplazamiento),a
 331+ 9E3F
 332+ 9E3F C3 E7 9D         jp Cola
 333+ 9E42
 334+ 9E42 CD 7F 9E     2 call Inicia_Puntero_mov
 335+ 9E45
 336+ 9E45 21 A8 87         ld hl,Ctrl_2
 337+ 9E48 CB 96            res 2,(hl)
 338+ 9E4A
 339+ 9E4A C3 B1 9D         jp Movimiento
 340+ 9E4D
 341+ 9E4D              Siguiente_desplazamiento
 342+ 9E4D
 343+ 9E4D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E4D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E4D
 346+ 9E4D 21 A8 87         ld hl,Ctrl_2
 347+ 9E50 CB 96            res 2,(hl)
 348+ 9E52
 349+ 9E52 2A B4 87         ld hl,(Puntero_mov)
 350+ 9E55 23               inc hl
 351+ 9E56 23               inc hl
 352+ 9E57 22 B4 87         ld (Puntero_mov),hl
 353+ 9E5A
 354+ 9E5A 7E               ld a,(hl)
 355+ 9E5B A7               and a
 356+ 9E5C CC E5 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E5F CA 20 9E         jp z,Reinicia_el_movimiento
 358+ 9E62
 359+ 9E62 C9               ret
 360+ 9E63
 361+ 9E63              ; Subrutinas -----------------------------------------
 362+ 9E63              ; ---------- --------- --------- ---------- ----------
 363+ 9E63              ;
 364+ 9E63              ;   24/07/23
 365+ 9E63              ;
 366+ 9E63              ;   Fijamos_bucle
 367+ 9E63              ;
 368+ 9E63              ;
 369+ 9E63
 370+ 9E63              Fijamos_bucle
 371+ 9E63
 372+ 9E63 3A B8 87         ld a,(Incrementa_puntero)
 373+ 9E66 3C               inc a
 374+ 9E67 32 B9 87         ld (Incrementa_puntero_backup),a
 375+ 9E6A
 376+ 9E6A CD E5 9E         call Incrementa_Puntero_indice_mov
 377+ 9E6D 2A B2 87         ld hl,(Puntero_indice_mov)
 378+ 9E70 22 B6 87         ld (Puntero_indice_mov_bucle),hl
 379+ 9E73 C9               ret
 380+ 9E74
 381+ 9E74              ; ---------- --------- --------- ---------- ----------
 382+ 9E74              ;
 383+ 9E74              ;   07/7/23
 384+ 9E74              ;
 385+ 9E74              ;   Inicia_Repetimos_movimiento
 386+ 9E74              ;
 387+ 9E74              ;
 388+ 9E74
 389+ 9E74              Inicia_Repetimos_movimiento
 390+ 9E74
 391+ 9E74              ; Iniciamos (Repetimos_movimiento).
 392+ 9E74
 393+ 9E74 DD 2A B4 87      ld ix,(Puntero_mov)
 394+ 9E78 DD 7E 02         ld a,(ix+2)
 395+ 9E7B 32 BC 87         ld (Repetimos_movimiento),a
 396+ 9E7E
 397+ 9E7E C9               ret
 398+ 9E7F
 399+ 9E7F              ; ---------- --------- --------- ---------- ----------
 400+ 9E7F              ;
 401+ 9E7F              ;   26/6/23
 402+ 9E7F              ;
 403+ 9E7F              ;   Inicia_Puntero_mov
 404+ 9E7F              ;
 405+ 9E7F              ;
 406+ 9E7F
 407+ 9E7F 2A B2 87     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E82 5E               ld e,(hl)
 409+ 9E83 23               inc hl
 410+ 9E84 56               ld d,(hl)
 411+ 9E85 EB               ex de,hl
 412+ 9E86 22 B4 87         ld (Puntero_mov),hl
 413+ 9E89 C9               ret
 414+ 9E8A
 415+ 9E8A              ; ---------- --------- --------- ---------- ----------
 416+ 9E8A              ;
 417+ 9E8A              ;   27/06/23
 418+ 9E8A              ;
 419+ 9E8A              ;   Aplica_movimiento.
 420+ 9E8A
 421+ 9E8A              Aplica_desplazamiento
 422+ 9E8A
 423+ 9E8A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E8A
 425+ 9E8A 2A B4 87         ld hl, (Puntero_mov)
 426+ 9E8D
 427+ 9E8D 7E               ld a,(hl)
 428+ 9E8E E6 F0            and $f0
 429+ 9E90 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E91
 431+ 9E91 CB 7E            bit 7,(hl)
 432+ 9E93 28 03            jr z,1F
 433+ 9E95 CD AA 98         call Mov_up
 434+ 9E98 2A B4 87     1 ld hl, (Puntero_mov)
 435+ 9E9B CB 76            bit 6,(hl)
 436+ 9E9D 28 09            jr z,2F
 437+ 9E9F CD 71 98         call Mov_down
 438+ 9EA2
 439+ 9EA2              ; Se ha aplicado reinicio ???
 440+ 9EA2              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9EA2
 442+ 9EA2 3A DD 87         ld a,(Ctrl_3)
 443+ 9EA5 CB 57            bit 2,a
 444+ 9EA7 C0               ret nz
 445+ 9EA8
 446+ 9EA8 2A B4 87     2 ld hl, (Puntero_mov)
 447+ 9EAB CB 6E            bit 5,(hl)
 448+ 9EAD 28 03            jr z,3F
 449+ 9EAF CD 10 9A         call Mov_left
 450+ 9EB2 2A B4 87     3 ld hl, (Puntero_mov)
 451+ 9EB5 CB 66            bit 4,(hl)
 452+ 9EB7 C8               ret z
 453+ 9EB8 CD ED 98         call Mov_right
 454+ 9EBB C9               ret
 455+ 9EBC
 456+ 9EBC              ; ---------- --------- --------- ---------- ----------
 457+ 9EBC              ;
 458+ 9EBC              ;   26/06/23
 459+ 9EBC              ;
 460+ 9EBC              ;   Ajusta_velocidad_desplazamiento.
 461+ 9EBC
 462+ 9EBC              Ajusta_velocidad_desplazamiento
 463+ 9EBC
 464+ 9EBC              ; 1er byte de la cadena de movimiento.
 465+ 9EBC              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9EBC
 467+ 9EBC CD DA 9E         call Extrae_nibble_alto
 468+ 9EBF
 469+ 9EBF 32 94 87         ld (Vel_up),a
 470+ 9EC2 79               ld a,c
 471+ 9EC3 E6 0F            and $0f
 472+ 9EC5 32 95 87         ld (Vel_down),a
 473+ 9EC8
 474+ 9EC8              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9EC8              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9EC8
 477+ 9EC8 23               inc hl
 478+ 9EC9 CD DA 9E         call Extrae_nibble_alto
 479+ 9ECC
 480+ 9ECC 32 92 87         ld (Vel_left),a
 481+ 9ECF 79               ld a,c
 482+ 9ED0 E6 0F            and $0f
 483+ 9ED2 32 93 87         ld (Vel_right),a
 484+ 9ED5
 485+ 9ED5              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9ED5
 487+ 9ED5 23               inc hl
 488+ 9ED6 22 B4 87         ld (Puntero_mov),hl
 489+ 9ED9 C9               ret
 490+ 9EDA
 491+ 9EDA 06 04        Extrae_nibble_alto ld b,4
 492+ 9EDC 7E               ld a,(hl)
 493+ 9EDD 4F               ld c,a
 494+ 9EDE E6 F0            and $f0
 495+ 9EE0 CB 3F        1 srl a
 496+ 9EE2 10 FC            djnz 1B
 497+ 9EE4 C9               ret
 498+ 9EE5
 499+ 9EE5              ; ---------- --------- --------- ---------- ----------
 500+ 9EE5              ;
 501+ 9EE5              ;   5/7/23
 502+ 9EE5              ;
 503+ 9EE5              ;   Incrementa_Puntero_indice_mov
 504+ 9EE5
 505+ 9EE5              Incrementa_Puntero_indice_mov
 506+ 9EE5
 507+ 9EE5 21 B8 87         ld hl,Incrementa_puntero
 508+ 9EE8 34               inc (hl)
 509+ 9EE9
 510+ 9EE9 2A B2 87         ld hl,(Puntero_indice_mov)
 511+ 9EEC 01 02 00         ld bc,2
 512+ 9EEF A7               and a
 513+ 9EF0 09               add hl,bc
 514+ 9EF1 22 B2 87         ld (Puntero_indice_mov),hl
 515+ 9EF4
 516+ 9EF4 7E               ld a,(hl)
 517+ 9EF5 A7               and a
 518+ 9EF6
 519+ 9EF6              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9EF6
 521+ 9EF6              ;    jr z,$
 522+ 9EF6
 523+ 9EF6              ;! Reinicia el Patrón de movimiento.
 524+ 9EF6
 525+ 9EF6 CC FB 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9EF9
 527+ 9EF9 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9EFA
 529+ 9EFA C9               ret
 530+ 9EFB
 531+ 9EFB
 532+ 9EFB              ; ---------- --------- --------- ---------- ----------
 533+ 9EFB              ;
 534+ 9EFB              ;   15/01/24
 535+ 9EFB              ;
 536+ 9EFB              ;   Inicializa_Puntero_indice_mov
 537+ 9EFB
 538+ 9EFB              Inicializa_Puntero_indice_mov_2
 539+ 9EFB
 540+ 9EFB              ; Existe etiqueta de bucle principal???
 541+ 9EFB
 542+ 9EFB 2A B6 87         ld hl,(Puntero_indice_mov_bucle)
 543+ 9EFE 24               inc h
 544+ 9EFF 25               dec h
 545+ 9F00 28 05            jr z,2F
 546+ 9F02
 547+ 9F02 22 B2 87         ld (Puntero_indice_mov),hl
 548+ 9F05 18 14            jr 3F
 549+ 9F07
 550+ 9F07              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ 9F07
 552+ 9F07 3A B8 87     2 ld a,(Incrementa_puntero)
 553+ 9F0A 47               ld b,a
 554+ 9F0B
 555+ 9F0B 2A B2 87         ld hl,(Puntero_indice_mov)
 556+ 9F0E 2B           1 dec hl
 557+ 9F0F 2B               dec hl
 558+ 9F10 10 FC            djnz 1B
 559+ 9F12 22 B2 87         ld (Puntero_indice_mov),hl
 560+ 9F15
 561+ 9F15 AF               xor a
 562+ 9F16 32 B8 87         ld (Incrementa_puntero),a
 563+ 9F19 18 06            jr 4F
 564+ 9F1B
 565+ 9F1B 3A B9 87     3 ld a,(Incrementa_puntero_backup)
 566+ 9F1E 32 B8 87         ld (Incrementa_puntero),a
 567+ 9F21 C9           4 ret
 568+ 9F22
 569+ 9F22 3A 7C 87     Inicializa_Puntero_indice_mov ld a,(Tipo)
 570+ 9F25 CD 0A 87         call Calcula_salto_en_BC
 571+ 9F28 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
 572+ 9F2B A7               and a
 573+ 9F2C ED 4A            adc hl,bc
 574+ 9F2E CD AC 8B         call Extrae_address
 575+ 9F31 22 B2 87         ld (Puntero_indice_mov),hl
 576+ 9F34 C9               ret
 577+ 9F35
 578+ 9F35 3A 7C 87     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 579+ 9F38 CD 0A 87         call Calcula_salto_en_BC
 580+ 9F3B 21 AA 87         ld hl,Contador_general_de_mov_masticados_Entidad_1
 581+ 9F3E A7               and a
 582+ 9F3F ED 4A            adc hl,bc
 583+ 9F41 C9               ret
# file closed: Patrones_de_mov.asm
1930  9F42              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F42              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F42              ;
   3+ 9F42              ;	12/12/23
   4+ 9F42              ;
   5+ 9F42              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F42
   7+ 9F42              ;	ADC HL,SP	LD (addr),SP
   8+ 9F42              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F42              ;	ADD IX,SP	LD SP,nn
  10+ 9F42              ; 	ADD IY,SP	LD SP,HL
  11+ 9F42              ;				LD SP,IX
  12+ 9F42              ;	DEC SP		LD SP,IY
  13+ 9F42
  14+ 9F42              ;	EX (SP),HL
  15+ 9F42              ;	EX (SP),IX
  16+ 9F42              ;	EX (SP),IY
  17+ 9F42
  18+ 9F42              ;	INC SP
  19+ 9F42
  20+ 9F42                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 CF 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 9D 87         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 9F 87         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A BE 87         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A D7 87         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A A3 87     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A DB 87         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A D5 87     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A BE 87         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 D7 87         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A A3 87     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 DB 87         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B CF 87      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 D5 87     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B CF 87  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A D5 87         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 D5 87         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1931  718B
1932  718B              	SAVESNA "Pruebas.sna", START
1933  718B
1934  718B
1935  718B
1936  718B
# file closed: Banco_de_pruebas.asm
