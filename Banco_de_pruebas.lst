# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 31 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 0D A1     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 5B 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD 0C 91     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 59 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 59 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 5C 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD 1C 91     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B 06 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 63 89        Indice_de_disparos_entidades_00 defw Disparo_1-4
  39+ 8925 5D 89        	defw Disparo_2-4
  40+ 8927 57 89        	defw Disparo_3-4
  41+ 8929 51 89        	defw Disparo_4-4
  42+ 892B 4B 89        	defw Disparo_5-4
  43+ 892D 45 89        	defw Disparo_6-4
  44+ 892F 3F 89        	defw Disparo_7-4
  45+ 8931
  46+ 8931 67 89        Indice_de_disparos_entidades defw Disparo_1
  47+ 8933 61 89        	defw Disparo_2
  48+ 8935 5B 89        	defw Disparo_3
  49+ 8937 55 89        	defw Disparo_4
  50+ 8939 4F 89        	defw Disparo_5
  51+ 893B 49 89        	defw Disparo_6
  52+ 893D 43 89        	defw Disparo_7
  53+ 893F
  54+ 893F 00 00        	defw 0									; Puntero objeto.
  55+ 8941 00 00        	defw 0									; Puntero de impresión.
  56+ 8943 00 00        Disparo_7 defw 0							; Control.
  57+ 8945
  58+ 8945 00 00        	defw 0									; Puntero objeto.
  59+ 8947 00 00        	defw 0									; Puntero de impresión.
  60+ 8949 00 00        Disparo_6 defw 0							; Control.
  61+ 894B
  62+ 894B 00 00        	defw 0									; Puntero objeto.
  63+ 894D 00 00        	defw 0									; Puntero de impresión.
  64+ 894F 00 00        Disparo_5 defw 0							; Control.
  65+ 8951
  66+ 8951 00 00        	defw 0									; Puntero objeto.
  67+ 8953 00 00        	defw 0									; Puntero de impresión.
  68+ 8955 00 00        Disparo_4 defw 0							; Control.
  69+ 8957
  70+ 8957 00 00        	defw 0									; Puntero objeto.
  71+ 8959 00 00        	defw 0									; Puntero de impresión.
  72+ 895B 00 00        Disparo_3 defw 0							; Control.
  73+ 895D
  74+ 895D 00 00        	defw 0									; Puntero objeto.
  75+ 895F 00 00        	defw 0									; Puntero de impresión.
  76+ 8961 00 00        Disparo_2 defw 0							; Control.
  77+ 8963
  78+ 8963 00 00        	defw 0									; Puntero objeto.
  79+ 8965 00 00        	defw 0									; Puntero de impresión.
  80+ 8967 00 00        Disparo_1 defw 0							; Control.
  81+ 8969
  82+ 8969              ; -------------------------------------------------------------------------------------
  83+ 8969              ;
  84+ 8969              ;	Índice de cajas de entidades.
  85+ 8969              ;
  86+ 8969              ;	18/1/24
  87+ 8969              ;
  88+ 8969
  89+ 8969              Indice_de_cajas_de_entidades
  90+ 8969
  91+ 8969 87 89        	defw Caja_1
  92+ 896B 93 89        	defw Caja_2
  93+ 896D 9F 89        	defw Caja_3
  94+ 896F AB 89        	defw Caja_4
  95+ 8971 B7 89        	defw Caja_5
  96+ 8973 C3 89        	defw Caja_6
  97+ 8975 CF 89        	defw Caja_7
  98+ 8977
  99+ 8977 00 00        	defw 0
 100+ 8979 00 00        	defw 0
 101+ 897B
 102+ 897B              ; -------------------------
 103+ 897B
 104+ 897B              ; Relleno para que no se corrompa el movimiento. ?????
 105+ 897B
 106+ 897B              ;	db 0
 107+ 897B
 108+ 897B              ; ---------- ---------- ---------- ---------- ----------
 109+ 897B              ;
 110+ 897B              ;	28/05/24
 111+ 897B              ;
 112+ 897B              ; 	Cada caja tiene 14 bytes !!!
 113+ 897B              ;
 114+ 897B              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 115+ 897B
 116+ 897B 00           Amadeus_BOX db 0										; (Tipo).
 117+ 897C 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 118+ 897E 00           	db 0												; (Contador_de_vueltas).
 119+ 897F 00           Impacto_Amadeus	db 0									; (Impacto).
 120+ 8980 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 121+ 8982 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 122+ 8984 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 123+ 8986 00           	db 0												; (Velocidad).
 124+ 8987
 125+ 8987              ; ---------- ---------- ---------- ---------- ----------
 126+ 8987              ;
 127+ 8987              ;	22/01/24
 128+ 8987              ;
 129+ 8987              ; 	Cada caja tiene 12 bytes !!!
 130+ 8987
 131+ 8987 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 132+ 898A 00           	db 0												; (Contador_de_vueltas).
 133+ 898B 00           	db 0												; (Impacto).
 134+ 898C 00 00        	defw 0												; (Puntero_de_impresion).
 135+ 898E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 136+ 8990 00 00        	defw 0 												; (Contador_de_mov_masticados).
 137+ 8992 00           	db 0												; (Velocidad).
 138+ 8993
 139+ 8993              ; ---------- ---------- ---------- ---------- ----------
 140+ 8993
 141+ 8993 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 142+ 8996 00           	db 0 												; (Contador_de_vueltas).
 143+ 8997 00           	db 0												; (Impacto).
 144+ 8998 00 00        	defw 0												; (Puntero_de_impresion).
 145+ 899A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 146+ 899C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 147+ 899E 00           	db 0												; (Velocidad).
 148+ 899F
 149+ 899F              ; ---------- ---------- ---------- ---------- ----------
 150+ 899F
 151+ 899F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 152+ 89A2 00           	db 0 												; (Contador_de_vueltas).
 153+ 89A3 00           	db 0												; (Impacto).
 154+ 89A4 00 00        	defw 0												; (Puntero_de_impresion).
 155+ 89A6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 156+ 89A8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 157+ 89AA 00           	db 0												; (Velocidad).
 158+ 89AB
 159+ 89AB              ; ---------- ---------- ---------- ---------- ----------
 160+ 89AB
 161+ 89AB 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 162+ 89AE 00           	db 0 												; (Contador_de_vueltas).
 163+ 89AF 00           	db 0												; (Impacto).
 164+ 89B0 00 00        	defw 0												; (Puntero_de_impresion).
 165+ 89B2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 166+ 89B4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 167+ 89B6 00           	db 0												; (Velocidad).
 168+ 89B7
 169+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 170+ 89B7
 171+ 89B7 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 89BA 00           	db 0 												; (Contador_de_vueltas).
 173+ 89BB 00           	db 0												; (Impacto).
 174+ 89BC 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 89BE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 89C0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 89C2 00           	db 0												; (Velocidad).
 178+ 89C3
 179+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 180+ 89C3
 181+ 89C3 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 182+ 89C6 00           	db 0 												; (Contador_de_vueltas).
 183+ 89C7 00           	db 0												; (Impacto).
 184+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 185+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 186+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 187+ 89CE 00           	db 0												; (Velocidad).
 188+ 89CF
 189+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 190+ 89CF
 191+ 89CF 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 192+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 193+ 89D3 00           	db 0												; (Impacto).
 194+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 195+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 196+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 197+ 89DA 00           	db 0												; (Velocidad).
 198+ 89DB
 199+ 89DB              ; -------------------------------------------------------------------------------------
 200+ 89DB              ;
 201+ 89DB              ;	11/1/24
 202+ 89DB              ;
 203+ 89DB              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 204+ 89DB              ;
 205+ 89DB              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 206+ 89DB              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 207+ 89DB              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 208+ 89DB              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 209+ 89DB
 210+ 89DB              Indice_de_definiciones_de_entidades
 211+ 89DB
 212+ 89DB DF 89        	defw Entidad_1
 213+ 89DD EC 89        	defw Entidad_2
 214+ 89DF
 215+ 89DF              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 216+ 89DF
 217+ 89DF              ;	BADSAT, (Satélite malvado).
 218+ 89DF
 219+ 89DF 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E2 01           	db 1												; (Contador_de_vueltas).
 221+ 89E3 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E5 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E7 03 40        	defw $4003	                                     	; (Posicion_inicio).
 224+ 89E9 01           	db 1												; (Cuad_objeto).
 225+ 89EA 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EC
 227+ 89EC 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 228+ 89EF 01           	db 1												; (Contador_de_vueltas).
 229+ 89F0 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 230+ 89F2 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 231+ 89F4 40 50        	defw $5040                                      	; (Posicion_inicio).
 232+ 89F6 01           	db 1												; (Cuad_objeto).
 233+ 89F7 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 234+ 89F9
 235+ 89F9              ; -------------------------------------------------------------------------------------
 236+ 89F9              ;
 237+ 89F9              ;	28/05/24
 238+ 89F9              ;
 239+ 89F9              ;	Definición de Amadeus.
 240+ 89F9              ;
 241+ 89F9              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 242+ 89F9              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 243+ 89F9
 244+ 89F9 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 245+ 89FC 00           	db 0												; (Contador_de_vueltas).
 246+ 89FD C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 247+ 89FF D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 248+ 8A01 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 249+ 8A03 03           	db 3												; (Cuad_objeto).
 250+ 8A04 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  8A06              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A06
   2+ 8A06
   3+ 8A06              ;   07/07/23
   4+ 8A06              ;
   5+ 8A06              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A06              ;
   7+ 8A06              ;   Codificación:
   8+ 8A06              ;
   9+ 8A06              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A06              ;
  11+ 8A06              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A06              ;
  13+ 8A06              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A06              ;
  15+ 8A06              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A06              ;
  17+ 8A06              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A06              ;                               ..... %01000010 Vel_up 4
  19+ 8A06              ;                                               Vel_down 2
  20+ 8A06              ;                               ..... $42
  21+ 8A06              ;
  22+ 8A06              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A06              ;
  24+ 8A06              ;                               ..... %01000010 Vel_left 4
  25+ 8A06              ;                                               Vel_right 2
  26+ 8A06              ;                               ..... $42
  27+ 8A06              ;
  28+ 8A06              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A06              ;
  30+ 8A06              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A06              ;
  32+ 8A06              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A06              ;
  34+ 8A06              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A06              ;                                     $53
  36+ 8A06              ;
  37+ 8A06              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A06              ;
  39+ 8A06              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A06              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A06              ;
  42+ 8A06              ;                       Arriba ..... $81
  43+ 8A06              ;                       Arriba - izquierda ..... $a1
  44+ 8A06              ;                       Arriba - derecha ..... $91
  45+ 8A06              ;
  46+ 8A06              ;                       Abajo ..... $41
  47+ 8A06              ;                       Abajo - izquierda ..... $61
  48+ 8A06              ;                       Abajo - derecha ..... $51
  49+ 8A06              ;
  50+ 8A06              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A06              ;
  52+ 8A06              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A06              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A06              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A06              ;
  56+ 8A06              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A06              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A06              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A06              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A06              ;
  61+ 8A06              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A06              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A06              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A06              ;
  65+ 8A06              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A06              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A06              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A06              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A06
  70+ 8A06              ; ----- ----- ----- ----- -----
  71+ 8A06
  72+ 8A06 32 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A08 3A 8A            defw F_1
  74+ 8A0A 44 8A            defw F_2
  75+ 8A0C 4E 8A            defw Codo_abajo_derecha
  76+ 8A0E 82 8A            defw Derecha_y_subiendo
  77+ 8A10 8C 8A            defw Derecha_y_subiendo_1
  78+ 8A12 96 8A            defw F_3
  79+ 8A14 A0 8A            defw F_4
  80+ 8A16 AA 8A            defw Derecha_y_bajando
  81+ 8A18 B4 8A            defw Derecha_y_bajando_1
  82+ 8A1A BE 8A            defw Derecha_y_bajando_2
  83+ 8A1C C8 8A            defw Codo_derecha_abajo
  84+ 8A1E F8 8A            defw Codo_abajo_izq.
  85+ 8A20 2C 8B            defw Izquierda_y_subiendo
  86+ 8A22 36 8B            defw Izquierda_y_subiendo_1
  87+ 8A24 40 8B            defw F_5
  88+ 8A26 4A 8B            defw F_6
  89+ 8A28 54 8B            defw Izquierda_y_bajando
  90+ 8A2A 5E 8B            defw Izquierda_y_bajando_1
  91+ 8A2C 68 8B            defw Izquierda_y_bajando_2
  92+ 8A2E 72 8B            defw Codo_izquierda_abajo
  93+ 8A30 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A32
  95+ 8A32 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A36 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A3A
  98+ 8A3A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A3E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A42 08 00
 100+ 8A44
 101+ 8A44 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A48 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A4C 0F FE
 103+ 8A4E
 104+ 8A4E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A52 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A56 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A5A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A5E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A62 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A66 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A6A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A6E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A72 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A76 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A7A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A7E 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A82
 118+ 8A82 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A86 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A8A 06 00
 120+ 8A8C
 121+ 8A8C 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A90 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A94 02 00
 123+ 8A96
 124+ 8A96 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A9A 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A9E 04 00
 126+ 8AA0
 127+ 8AA0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AA4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA8 08 00
 129+ 8AAA
 130+ 8AAA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AAE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AB2 02 00
 132+ 8AB4
 133+ 8AB4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8ABC 06 00
 135+ 8ABE
 136+ 8ABE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AC2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AC6 06 00
 138+ 8AC8
 139+ 8AC8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC8
 141+ 8AC8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ACC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AD0 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AD4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ADC 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AE0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AE4 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AEC 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AF0 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AF4 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF8
 154+ 8AF8 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AFC 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B00 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B04 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B08 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B0C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B10 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B14 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B18 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B1C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B20 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B24 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B28 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B2C
 168+ 8B2C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B30 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B34 06 00
 170+ 8B36
 171+ 8B36 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B3A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B3E 02 00
 173+ 8B40
 174+ 8B40 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B44 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B48 04 00
 176+ 8B4A
 177+ 8B4A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B4E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B52 08 00
 179+ 8B54
 180+ 8B54 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B58 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B5C 02 00
 182+ 8B5E
 183+ 8B5E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B62 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B66 06 00
 185+ 8B68
 186+ 8B68 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B6C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B70 06 00
 188+ 8B72
 189+ 8B72 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B76 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B7A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B7E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B82 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B86 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B8A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B8E 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B92 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B96 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B9A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B9E 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BA2
 202+ 8BA2
 203+ 8BA2
 204+ 8BA2
 205+ 8BA2
 206+ 8BA2
 207+ 8BA2
 208+ 8BA2
 209+ 8BA2
 210+ 8BA2
# file closed: Patrones_de_mov.asm
 143  8BA2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BA2              ; 19/1/24
   2+ 8BA2
   3+ 8BA2              Indice_de_niveles
   4+ 8BA2
   5+ 8BA2 AA 8B        	defw Nivel_1
   6+ 8BA4 B0 8B        	defw Nivel_2
   7+ 8BA6
   8+ 8BA6              ;	...
   9+ 8BA6              ;	...
  10+ 8BA6              ;	+ Niveles ...
  11+ 8BA6
  12+ 8BA6 00 00        	defw 0
  13+ 8BA8 00 00        	defw 0
  14+ 8BAA
  15+ 8BAA 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BAB 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BAF 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BB0
  19+ 8BB0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BB1 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB9 01 02
  22+ 8BBB 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBF 01 02
  23+ 8BC1
# file closed: Niveles.asm
 144  8BC1
 145  8BC1              ; --------------------------------------------------------------------------------
 146  8BC1              ;
 147  8BC1              ; 12/05/24
 148  8BC1              ;
 149  8BC1              ; Parámetros DRAW.
 150  8BC1              ;
 151  8BC1
 152  8BC1              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BC1
 154  8BC1 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BC2              ;															- Patrón de movimiento.
 156  8BC2 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BC3 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BC4
 159  8BC4 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BC5              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BC5
 162  8BC5              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BC5              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BC5              ; Ejemplos.
 165  8BC5
 166  8BC5              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BC5              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BC5              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BC5              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BC5              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BC5
 172  8BC5 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC6              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC6              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC6
 176  8BC6 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC8              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC8
 179  8BC8 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BCA
 181  8BCA              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BCA
 183  8BCA 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BCC              ;														; _palabras que componen el "movimiento_masticado".
 185  8BCC
 186  8BCC              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BCC
 188  8BCC 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BCD              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BCD              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BCD              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BCD              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BCD
 194  8BCD 00           Ctrl_2 db 0
 195  8BCE              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BCE              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BCE              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BCE              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BCE              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BCE              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BCE              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BCE              ;
 203  8BCE              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BCE              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BCE              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BCE              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BCE              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BCE              ;														BIT 4, ???
 209  8BCE              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BCE
 211  8BCE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BCF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BCF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BCF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BCF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BCF              ;
 217  8BCF              ; 														DESCRIPCIÖN:
 218  8BCF              ;
 219  8BCF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BCF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BCF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BCF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BCF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BCF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BCF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BCF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BCF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BCF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BCF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BCF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BCF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BCF              ;
 233  8BCF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BCF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BCF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BCF
 237  8BCF              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BCF
 239  8BCF 00           Filas db 0												; Filas. [DRAW]
 240  8BD0 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BD1 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BD3 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BD5
 244  8BD5              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BD5
 246  8BD5 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BD6              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BD6              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BD6
 250  8BD6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BD6
 252  8BD6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BD6              ;
 254  8BD6              ;	COLORES: 0 ..... NEGRO
 255  8BD6              ;    		 1 ..... AZUL
 256  8BD6              ; 			 2 ..... ROJO
 257  8BD6              ;			 3 ..... MAGENTA
 258  8BD6              ; 			 4 ..... VERDE
 259  8BD6              ; 			 5 ..... CIAN
 260  8BD6              ;			 6 ..... AMARILLO
 261  8BD6              ; 			 7 ..... BLANCO
 262  8BD6
 263  8BD6 00 00        Indice_Sprite_der defw 0
 264  8BD8 00 00        Indice_Sprite_izq defw 0
 265  8BDA 00 00        Puntero_DESPLZ_der defw 0
 266  8BDC 00 00        Puntero_DESPLZ_izq defw 0
 267  8BDE
 268  8BDE 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BE0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BE1 00           Columnas db 0
 271  8BE2 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BE4              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BE4 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BE5
 275  8BE5              ; variables de control general.
 276  8BE5
 277  8BE5 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BE6
 279  8BE6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BE6
 281  8BE6              Perfiles_de_velocidad
 282  8BE6
 283  8BE6 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BE7 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BE8 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BE9 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BEA
 288  8BEA              ; Contadores de 16 bits.
 289  8BEA
 290  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BEC 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BEE 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BF0 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BF2
 295  8BF2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BF2
 297  8BF2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BF4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BF6 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BF8              ;
 301  8BF8              ;
 302  8BF8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BF9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BF9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BF9 00           Incrementa_puntero_backup db 0
 306  8BFA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BFB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BFB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BFC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BFD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BFE              ;
 312  8BFE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BFE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BFE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BFE              ;
 316  8BFE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BFE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BFE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BFE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BFE              ;
 321  8BFE              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BFE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BFE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BFE
 325  8BFE 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BFF
 327  8BFF              ;														DESCRIPCIÓN:
 328  8BFF              ;
 329  8BFF              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BFF              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BFF              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BFF              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BFF              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BFF              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BFF
 336  8BFF              ;														BIT 3, Recarga de nueva oleada.
 337  8BFF              ;														BIT 4, Recarga de nueva oleada.
 338  8BFF              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BFF              ;														BIT 6, **** Frame completo.
 340  8BFF              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BFF
 342  8BFF 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8C01              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8C01              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8C01              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8C01
 347  8C01              ; Gestión de ENTIDADES y CAJAS.
 348  8C01
 349  8C01 00 00        Puntero_store_caja defw 0
 350  8C03 00 00        Puntero_restore_caja defw 0
 351  8C05 00 00        Indice_restore_caja defw 0
 352  8C07 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8C08 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8C09 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8C0A
 356  8C0A 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8C0C 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C0E              ;														; _ puntero (Indice_entidades).
 359  8C0E
 360  8C0E              ;---------------------------------------------------------------------------------------------------------------
 361  8C0E              ;
 362  8C0E              ;	11/09/24
 363  8C0E              ;
 364  8C0E              ;	Álbumes.
 365  8C0E
 366  8C0E 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C10              ;														; _variable para almacenar lo posición del puntero_
 368  8C10              ; 														; _de pila, SP.
 369  8C10 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C12              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C12
 372  8C12              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C12
 374  8C12 00 00        Album_de_pintado defw 0
 375  8C14 00 00        Album_de_borrado defw 0
 376  8C16 00 00        Album_de_pintado_Amadeus defw 0
 377  8C18 00 00        Album_de_borrado_Amadeus defw 0
 378  8C1A 00 00        Album_de_pintado_disparos defw 0
 379  8C1C 00 00        Album_de_borrado_disparos defw 0
 380  8C1E
 381  8C1E 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C20 00           Num_de_bytes_album_de_disparos db 0
 383  8C21
 384  8C21 07           Numero_de_disparos_de_entidades db 7
 385  8C22
 386  8C22 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 387  8C23 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 388  8C24
 389  8C24 00 00        Techo_Scanlines_album defw 0
 390  8C26 00 00        Techo_Scanlines_album_2 defw 0
 391  8C28 00           Switch db 0
 392  8C29 00 00        Techo defw 0
 393  8C2B 00 00        Scanlines_album_SP defw 0
 394  8C2D 00 89        India_SP defw Tabla_de_pintado
 395  8C2F 03 89        India_2_SP defw Tabla_de_pintado+3
 396  8C31
 397  8C31 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 398  8C32              ;
 399  8C32              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 400  8C32              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 401  8C32              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 402  8C32              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 403  8C32              ;																Habilita el borrado/pintado de sprites.
 404  8C32              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 405  8C32              ;																_ a la baja.
 406  8C32              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 407  8C32              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 408  8C32              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 409  8C32              ; 																_ el último frame de la explosión de nuestra nave.
 410  8C32              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 411  8C32              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 412  8C32
 413  8C32 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 414  8C33              ;
 415  8C33              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 416  8C33              ;
 417  8C33              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 418  8C33              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 419  8C33              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 420  8C33              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 421  8C33              ;
 422  8C33              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 423  8C33              ;															_ masticados ya generados.
 424  8C33              ;
 425  8C33              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 426  8C33              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 427  8C33              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 428  8C33              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 429  8C33
 430  8C33 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 431  8C34              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 432  8C34              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 433  8C34
 434  8C34
 435  8C34
 436  8C34
 437  8C34
 438  8C34              ; Gestión de Disparos.
 439  8C34
 440  8C34 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 441  8C36 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 442  8C38 00           Impacto2 db 0											; Byte de control de impactos.
 443  8C39
 444  8C39              ;
 445  8C39              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 446  8C39              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 447  8C39              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 448  8C39              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 449  8C39
 450  8C39
 451  8C39
 452  8C39
 453  8C39
 454  8C39
 455  8C39
 456  8C39 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 457  8C3B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 458  8C3B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 459  8C3B
 460  8C3B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 461  8C3D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 462  8C3D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C40              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 464  8C40 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C43              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 466  8C43
 467  8C43              ;---------------------------------------------------------------------------------------------------------------
 468  8C43
 469  8C43              ; Relojes y temporizaciones.
 470  8C43
 471  8C43 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 472  8C44 05           Clock_explosion_Amadeus db 5
 473  8C45 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 474  8C46
 475  8C46 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 476  8C48 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 477  8C4A 00           Numero_rnd_disparos db 0
 478  8C4B
 479  8C4B 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 480  8C4D 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 481  8C4E              ;														; Repite la oleada de entidades.
 482  8C4E A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 483  8C4F A0           CLOCK_disparos_de_entidades db $a0
 484  8C50
 485  8C50              ;---------------------------------------------------------------------------------------------------------------
 486  8C50
 487  8C50              ; Gestión de NIVELES.
 488  8C50
 489  8C50 00           Nivel db 0												; Nivel actual del juego.
 490  8C51 00 00        Puntero_indice_NIVELES defw 0
 491  8C53 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 492  8C55              ; 														; _ que definen el NIVEL.
 493  8C55
 494  8C55              ; ---------------------------------------------------------------------------------------------------------------
 495  8C55
 496  8C55              ; Temporizaciones Shield.
 497  8C55
 498  8C55 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 499  8C59 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 500  8C5B 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 501  8C5C 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 502  8C5D 00           Shield_3 db 0
 503  8C5E
 504  8C5E 06           Lives db 6
 505  8C5F
 506  8C5F              ; 	INICIO  *************************************************************************************************************************************************************************
 507  8C5F              ;
 508  8C5F              ;	5/1/24
 509  8C5F
 510  8C5F              START
 511  8C5F
 512  8C5F 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 513  8C62 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 514  8C64 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 515  8C66 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 516  8C68 F3           	DI
 517  8C69
 518  8C69              ; Limpiamos pantalla.
 519  8C69
 520  8C69              ;	ld a,%00000111
 521  8C69              ;	call Cls
 522  8C69              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 523  8C69
 524  8C69              ; INICIALIZACIÓN.
 525  8C69
 526  8C69 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 527  8C6B CD 4E 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 528  8C6E
 529  8C6E 3E 07        	ld a,%00000111
 530  8C70              ;	call Cls
 531  8C70 CD 01 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 532  8C73
 533  8C73 CD 9F 8E     	call Extrae_numero_aleatorio_y_avanza
 534  8C76
 535  8C76 6F           	ld l,a
 536  8C77 26 00        	ld h,0
 537  8C79 22 4B 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 538  8C7C
 539  8C7C              ;	Inicializa 1er Nivel.
 540  8C7C
 541  8C7C 21 A2 8B     	ld hl,Indice_de_niveles
 542  8C7F 22 51 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 543  8C82 CD 7E 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 544  8C85              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 545  8C85              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 546  8C85              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 547  8C85
 548  8C85              ;	Inicia los álbumes de líneas.
 549  8C85
 550  8C85 CD 58 90     	call Inicia_albumes_de_lineas
 551  8C88              ;
 552  8C88 CD 68 90     	call Inicia_albumes_de_lineas_Amadeus
 553  8C8B CD 75 90     	call Inicia_albumes_de_disparos
 554  8C8E
 555  8C8E CD C3 92     4 call Inicia_Entidades
 556  8C91 CD 26 93     	call Inicia_Amadeus
 557  8C94
 558  8C94              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 559  8C94              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 560  8C94              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 561  8C94
 562  8C94 11 7B 89     	ld de,Amadeus_BOX
 563  8C97 CD 79 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 564  8C9A CD 69 93     	call Limpiamos_bandeja_DRAW
 565  8C9D
 566  8C9D              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 567  8C9D
 568  8C9D 06 3C        	ld b,60
 569  8C9F CD 4F 9D     2 call Amadeus_a_izquierda
 570  8CA2 10 FB        	djnz 2B
 571  8CA4
 572  8CA4 CD 36 90     	call Genera_datos_de_impresion_Amadeus
 573  8CA7
 574  8CA7              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 575  8CA7
 576  8CA7 CD 88 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 577  8CAA              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 578  8CAA
 579  8CAA              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 580  8CAA              ; (Esto se dá cuando se inicia una nueva oleada).
 581  8CAA
 582  8CAA              ;	ld a,(Ctrl_1)
 583  8CAA              ;	bit 3,a
 584  8CAA              ;	jr nz,5F											 ; Loop
 585  8CAA
 586  8CAA              ;	ld de,Amadeus_db
 587  8CAA              ;	call Store_Amadeus
 588  8CAA
 589  8CAA              ; 	INICIA DISPAROS !!!!!
 590  8CAA
 591  8CAA              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CAA
 593  8CAA              ;5 call Inicia_punteros_de_cajas
 594  8CAA              ;	call Restore_entidad
 595  8CAA
 596  8CAA              ;	ld a,(Ctrl_1)
 597  8CAA              ;	bit 3,a
 598  8CAA              ;	jr z,6F
 599  8CAA
 600  8CAA              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CAA
 602  8CAA              ;	ld hl,Ctrl_1
 603  8CAA              ;	res 3,(hl)
 604  8CAA              ;	jr Main
 605  8CAA
 606  8CAA              ; Damos por concluida la construcción del FRAME.
 607  8CAA              ;
 608  8CAA
 609  8CAA CD 0C 91     	call Inicia_Shield
 610  8CAD
 611  8CAD
 612  8CAD 2A 2B 8C     6 ld hl,(Scanlines_album_SP)
 613  8CB0 22 24 8C     	ld (Techo_Scanlines_album),hl
 614  8CB3
 615  8CB3 2A 14 8C     	ld hl,(Album_de_borrado)
 616  8CB6 22 2B 8C     	ld (Scanlines_album_SP),hl
 617  8CB9
 618  8CB9 21 00 89     	ld hl,Tabla_de_pintado
 619  8CBC 22 2D 8C     	ld (India_SP),hl
 620  8CBF
 621  8CBF 21 31 8C     	ld hl,Ctrl_3
 622  8CC2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CC4 CB D6        	set 2,(hl)
 624  8CC6 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC8
 626  8CC8 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC9
 628  8CC9 76           	halt
 629  8CCA
 630  8CCA              ; ------------------------------------
 631  8CCA
 632  8CCA              Main
 633  8CCA              ;
 634  8CCA              ; 20/09/24
 635  8CCA
 636  8CCA              ; Gestión de disparos.
 637  8CCA
 638  8CCA CD FC 9E     	call Motor_de_disparos_entidades
 639  8CCD CD B7 A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 640  8CD0 CD 8C 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 641  8CD3
 642  8CD3              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 643  8CD3              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 644  8CD3              ; Este hecho lo indica el bit2 de (Impacto2).
 645  8CD3
 646  8CD3 CD 81 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CD6
 648  8CD6              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 649  8CD6
 650  8CD6 21 4F 8C     	ld hl,CLOCK_disparos_de_entidades
 651  8CD9 35           	dec (hl)
 652  8CDA CC D5 8D     	call z,Autoriza_disparo_de_entidades
 653  8CDD
 654  8CDD 2A 4B 8C     	ld hl,(Clock_next_entity)
 655  8CE0 ED 4B 78 5C  	ld bc,(FRAMES)
 656  8CE4 A7           	and a
 657  8CE5 ED 42        	sbc hl,bc
 658  8CE7 20 16        	jr nz,1F
 659  8CE9
 660  8CE9              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 661  8CE9              ; _ (Clock_next_entity) para la siguiente entidad.
 662  8CE9
 663  8CE9 3A 08 8C     	ld a,(Numero_parcial_de_entidades)
 664  8CEC 47           	ld b,a
 665  8CED 3A 09 8C     	ld a,(Entidades_en_curso)
 666  8CF0 B8           	cp b
 667  8CF1 28 0C        	jr z,1F
 668  8CF3 30 0A        	jr nc,1F
 669  8CF5
 670  8CF5 3C           	inc a
 671  8CF6 32 09 8C     	ld (Entidades_en_curso),a
 672  8CF9
 673  8CF9              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 674  8CF9
 675  8CF9 CD 9F 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 676  8CFC CD BB 8E     	call Define_Clock_next_entity
 677  8CFF
 678  8CFF 3A 09 8C     1 ld a,(Entidades_en_curso)
 679  8D02 A7           	and a
 680  8D03 CA 7D 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 681  8D06 47           	ld b,a												; No hay entidades que gestionar.
 682  8D07
 683  8D07              ; ( Código que ejecutamos con cada entidad: ).
 684  8D07
 685  8D07              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 686  8D07              ;
 687  8D07              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 688  8D07
 689  8D07 21 00 89     	ld hl,Tabla_de_pintado
 690  8D0A 22 2D 8C     	ld (India_SP),hl
 691  8D0D
 692  8D0D 21 31 8C     	ld hl,Ctrl_3
 693  8D10 CB D6        	set 2,(hl)
 694  8D12 CD 61 8E     	call Change
 695  8D15
 696  8D15 C5           2 push bc 												; Nº de entidades en curso.
 697  8D16
 698  8D16 CD D9 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 699  8D19 ED 5B 2B 8C  	ld de,(Scanlines_album_SP)
 700  8D1D
 701  8D1D              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 702  8D1D
 703  8D1D              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 704  8D1D              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 705  8D1D
 706  8D1D 3A 38 8C     	ld a,(Impacto2)
 707  8D20 CB 5F        	bit 3,a
 708  8D22 C4 44 A0     	call nz,Compara_con_coordenadas_de_disparo
 709  8D25
 710  8D25 3A C5 8B     	ld a,(Impacto)
 711  8D28 CB 4F        	bit 1,a
 712  8D2A C4 E9 91     	call nz,Genera_explosion
 713  8D2D 20 31        	jr nz,Gestiona_siguiente_entidad
 714  8D2F
 715  8D2F 3A C5 8B     	ld a,(Impacto)
 716  8D32 A7           	and a
 717  8D33 28 0C        	jr z,3F
 718  8D35
 719  8D35              ; IMPACTO en entidad por colisión con Amadeus.
 720  8D35
 721  8D35              ; 5/7/24
 722  8D35              ; Nota importante:
 723  8D35              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 724  8D35              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 725  8D35              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 726  8D35
 727  8D35 3A 7F 89     	ld a,(Impacto_Amadeus)
 728  8D38 A7           	and a
 729  8D39 C4 E9 91     	call nz,Genera_explosion
 730  8D3C 20 22        	jr nz,Gestiona_siguiente_entidad
 731  8D3E
 732  8D3E              ; Falsa colisión !!!
 733  8D3E
 734  8D3E 32 C5 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 735  8D41
 736  8D41              ; -------------------------------------------
 737  8D41
 738  8D41 CD FF 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 739  8D44 CD 41 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 740  8D47 CD EF 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 741  8D4A CD E9 94     	call Genera_datos_de_impresion
 742  8D4D CD 8C 93     	call Decrementa_Contador_de_mov_masticados
 743  8D50
 744  8D50              ; -------------------------------------------
 745  8D50
 746  8D50              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 747  8D50
 748  8D50 2A C6 8B     	ld hl,(Puntero_de_impresion)
 749  8D53 CD BD 94     	call Genera_coordenadas
 750  8D56
 751  8D56              ; TODO: Generamos disparo ???
 752  8D56
 753  8D56 3A 23 8C     	ld a,(Permiso_de_disparo_Entidades)
 754  8D59 A7           	and a
 755  8D5A C4 EA 8D     	call nz,Entidad_genera_disparo_si_procede
 756  8D5D
 757  8D5D CD FF A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 758  8D60
 759  8D60              Gestiona_siguiente_entidad
 760  8D60
 761  8D60 CD 5E 93      	call Store_Restore_cajas
 762  8D63 C1           	pop bc
 763  8D64 10 AF        	djnz 2B
 764  8D66
 765  8D66              ; Hemos gestionado todas las entidades.
 766  8D66              ; ----- ----- -----
 767  8D66
 768  8D66 CD 13 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 769  8D69 CD 2A 8F     	call Ordena_tabla_de_impresion
 770  8D6C CD 88 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 771  8D6F
 772  8D6F CD D0 8E     	call Borra_diferencia
 773  8D72
 774  8D72 3A 31 8C     	ld a,(Ctrl_3)
 775  8D75 CB 5F        	bit 3,a
 776  8D77 20 04        	jr nz,Gestion_de_Amadeus
 777  8D79
 778  8D79 EB           	ex de,hl
 779  8D7A 71           	ld (hl),c
 780  8D7B 2C           	inc l
 781  8D7C 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 782  8D7D
 783  8D7D              ;! GESTIONA AMADEUS !!!!!!!!!!
 784  8D7D
 785  8D7D              Gestion_de_Amadeus
 786  8D7D
 787  8D7D 21 31 8C     	ld hl,Ctrl_3
 788  8D80 CB 76        	bit 6,(hl)
 789  8D82 28 13        	jr z,Amadeus_vivo
 790  8D84
 791  8D84              ; Amadeus ha sido destruido.
 792  8D84              ; Decrementa (Temp_new_live).
 793  8D84
 794  8D84 21 45 8C     	ld hl,Temp_new_live
 795  8D87 35           	dec (hl)
 796  8D88 20 26        	jr nz,End_frame
 797  8D8A
 798  8D8A              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 799  8D8A
 800  8D8A 21 5E 8C     	ld hl,Lives
 801  8D8D 35           	dec (hl)
 802  8D8E
 803  8D8E              ;! Fin del juego
 804  8D8E
 805  8D8E F3           	di
 806  8D8F 28 FE        	jr z,$
 807  8D91 FB           	ei
 808  8D92
 809  8D92              ; Nueva nave.
 810  8D92
 811  8D92 CD 07 8E     	call Reinicia_Amadeus
 812  8D95 18 19        	jr End_frame
 813  8D97
 814  8D97              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 815  8D97
 816  8D97              Amadeus_vivo
 817  8D97
 818  8D97 3A 7F 89     	ld a,(Impacto_Amadeus)
 819  8D9A A7           	and a
 820  8D9B C4 19 92     	call nz, Genera_explosion_Amadeus
 821  8D9E 20 10        	jr nz, End_frame
 822  8DA0
 823  8DA0 CD C6 91     	call Teclado
 824  8DA3
 825  8DA3 21 31 8C     	ld hl,Ctrl_3
 826  8DA6 CB 6E        	bit 5,(hl)
 827  8DA8 28 06        	jr z,End_frame
 828  8DAA
 829  8DAA              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 830  8DAA
 831  8DAA CD 7C 8E     	call Change_Amadeus
 832  8DAD CD 36 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 833  8DB0
 834  8DB0              End_frame
 835  8DB0
 836  8DB0              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 837  8DB0              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 838  8DB0
 839  8DB0 CD 8C 9F     	call Genera_datos_de_impresion_disparos_Entidades
 840  8DB3 CD 66 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 841  8DB6 CD 92 A0     	call Calcula_bytes_pintado_disparos
 842  8DB9 CD 9F A0     	call Limpia_album_de_pintado_disparos
 843  8DBC
 844  8DBC              ; ------------ ------------- --------------
 845  8DBC
 846  8DBC              ;	xor a
 847  8DBC              ;	ld (Permiso_de_disparo_Entidades),a
 848  8DBC
 849  8DBC CD F3 8D     	call Actuaiza_sp_de_disparos_de_entidades
 850  8DBF
 851  8DBF 2A 14 8C     	ld hl,(Album_de_borrado)
 852  8DC2 22 2B 8C     	ld (Scanlines_album_SP),hl
 853  8DC5
 854  8DC5 21 31 8C     	ld hl,Ctrl_3
 855  8DC8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8DCA CB 9E        	res 3,(hl)
 857  8DCC CB A6        	res 4,(hl)
 858  8DCE
 859  8DCE AF           	xor a
 860  8DCF D3 FE        	out ($fe),a
 861  8DD1
 862  8DD1 76           	halt
 863  8DD2
 864  8DD2              ; ----------------------------------------
 865  8DD2
 866  8DD2              ;	ld a,(Ctrl_1) 										; Existe Loop?
 867  8DD2              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 868  8DD2 CA CA 8C     	jp z,Main
 869  8DD5
 870  8DD5              ;------------------------------------------
 871  8DD5              ;
 872  8DD5              ;	2/10/24
 873  8DD5
 874  8DD5              Autoriza_disparo_de_entidades
 875  8DD5
 876  8DD5 3E 01        	ld a,1
 877  8DD7 32 23 8C     	ld (Permiso_de_disparo_Entidades),a
 878  8DDA
 879  8DDA 3A 4E 8C     	ld a,(Repone_CLOCK_disparos)
 880  8DDD FE 19        	cp 25
 881  8DDF 38 02        	jr c,1F
 882  8DE1
 883  8DE1 D6 05        	sub 5
 884  8DE3
 885  8DE3 32 4E 8C     1 ld (Repone_CLOCK_disparos),a
 886  8DE6 32 4F 8C     	ld (CLOCK_disparos_de_entidades),a
 887  8DE9
 888  8DE9 C9           	ret
 889  8DEA
 890  8DEA              ;------------------------------------------
 891  8DEA              ;
 892  8DEA              ;	14/09/24
 893  8DEA              ;
 894  8DEA              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 895  8DEA
 896  8DEA              Entidad_genera_disparo_si_procede
 897  8DEA
 898  8DEA 2A 48 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 899  8DED CB 06        	rlc (hl)
 900  8DEF
 901  8DEF DC C6 9F     	call c,Genera_disparo_de_entidad_maldosa
 902  8DF2
 903  8DF2 C9           	ret
 904  8DF3
 905  8DF3              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 906  8DF3              ;
 907  8DF3              ;	30/09/24
 908  8DF3
 909  8DF3              Actuaiza_sp_de_disparos_de_entidades
 910  8DF3
 911  8DF3 2A 48 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 912  8DF6 23           	inc hl
 913  8DF7 22 48 8C     	ld (Puntero_num_aleatorios_disparos),hl
 914  8DFA
 915  8DFA 11 FD 88     	ld de,Numeros_aleatorios+7
 916  8DFD 7B           	ld a,e
 917  8DFE 95           	sub l
 918  8DFF C0           	ret nz
 919  8E00
 920  8E00 21 F6 88     1 ld hl,Numeros_aleatorios
 921  8E03 22 48 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 922  8E06 C9           	ret
 923  8E07
 924  8E07              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 925  8E07              ;
 926  8E07              ;	24/07/24
 927  8E07
 928  8E07              Reinicia_Amadeus
 929  8E07
 930  8E07              ;	Reinicia posición y estado.
 931  8E07
 932  8E07 21 CF 50     	ld hl,$50cf
 933  8E0A 22 80 89     	ld (p.imp.amadeus),hl
 934  8E0D 21 F0 E0     	ld hl,$e0f0
 935  8E10 22 82 89     	ld (Pamm_Amadeus),hl
 936  8E13 21 3D 00     	ld hl,$003d
 937  8E16 22 84 89     	ld (Comm_Amadeus),hl
 938  8E19
 939  8E19              ;	limpiamos el álbum de borrado.
 940  8E19
 941  8E19 2A 18 8C     	ld hl,(Album_de_borrado_Amadeus)
 942  8E1C
 943  8E1C AF           	xor a
 944  8E1D 77           	ld (hl),a
 945  8E1E
 946  8E1E E5           	push hl
 947  8E1F D1           	pop de
 948  8E20 13           	inc de
 949  8E21
 950  8E21 01 23 00     	ld bc,35
 951  8E24 ED B0        	ldir
 952  8E26
 953  8E26 CD 36 90     	call Genera_datos_de_impresion_Amadeus
 954  8E29
 955  8E29              ;	Reinicia temporizaciones.
 956  8E29
 957  8E29 CD 0C 91     	call Inicia_Shield
 958  8E2C
 959  8E2C 3E 5A        	ld a,90
 960  8E2E 32 5B 8C     	ld (Shield),a
 961  8E31
 962  8E31 3E 64        	ld a,100
 963  8E33 32 45 8C     	ld (Temp_new_live),a
 964  8E36
 965  8E36              ; 	Restauramos el FLAG: Amadeus vivo.
 966  8E36
 967  8E36 21 31 8C     	ld hl,Ctrl_3
 968  8E39 CB B6        	res 6,(hl)
 969  8E3B
 970  8E3B              ;	Fuerza la impresión de la nave en el siguiente frame.
 971  8E3B
 972  8E3B 21 31 8C      	ld hl,Ctrl_3
 973  8E3E CB EE        	set 5,(hl)
 974  8E40
 975  8E40 C9           	ret
 976  8E41
 977  8E41              ; --------------------------------------------------------------------------------------------------------------
 978  8E41              ;
 979  8E41              ;	12/05/24
 980  8E41
 981  8E41 3A CC 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 982  8E44 CB 27        	sla a
 983  8E46 32 CC 8B     	ld (Velocidad),a
 984  8E49 E6 10        	and $10
 985  8E4B C8           	ret z
 986  8E4C
 987  8E4C              ; Restaura (Velocidad) a razón del nº de vueltas.
 988  8E4C
 989  8E4C 3A C4 8B     	ld a,(Contador_de_vueltas)
 990  8E4F CB 2F        	sra a
 991  8E51 CB 2F        	sra a
 992  8E53 32 CC 8B     	ld (Velocidad),a
 993  8E56
 994  8E56 2A C8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 995  8E59 23           	inc hl
 996  8E5A 23           	inc hl
 997  8E5B 23           	inc hl
 998  8E5C 23           	inc hl
 999  8E5D 22 C8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1000  8E60
1001  8E60 C9           	ret
1002  8E61
1003  8E61              ; --------------------------------------------------------------------------------------------------------------
1004  8E61              ;
1005  8E61              ;	25/08/24
1006  8E61
1007  8E61              Change
1008  8E61
1009  8E61 3A 28 8C     	ld a,(Switch)
1010  8E64 EE 01        	xor 1
1011  8E66 32 28 8C     	ld (Switch),a
1012  8E69 2A 12 8C     	ld hl,(Album_de_pintado)
1013  8E6C ED 5B 14 8C  	ld de,(Album_de_borrado)
1014  8E70 EB           	ex de,hl
1015  8E71 22 12 8C     	ld (Album_de_pintado),hl
1016  8E74 22 2B 8C     	ld (Scanlines_album_SP),hl
1017  8E77 ED 53 14 8C  	ld (Album_de_borrado),de
1018  8E7B C9           	ret
1019  8E7C
1020  8E7C              Change_Amadeus
1021  8E7C
1022  8E7C 2A 16 8C     	ld hl,(Album_de_pintado_Amadeus)
1023  8E7F ED 5B 18 8C  	ld de,(Album_de_borrado_Amadeus)
1024  8E83 EB           	ex de,hl
1025  8E84 22 16 8C     	ld (Album_de_pintado_Amadeus),hl
1026  8E87 ED 53 18 8C  	ld (Album_de_borrado_Amadeus),de
1027  8E8B C9           	ret
1028  8E8C
1029  8E8C              Change_Disparos
1030  8E8C
1031  8E8C 2A 1A 8C     	ld hl,(Album_de_pintado_disparos)
1032  8E8F ED 5B 1C 8C  	ld de,(Album_de_borrado_disparos)
1033  8E93 EB           	ex de,hl
1034  8E94 22 1A 8C     	ld (Album_de_pintado_disparos),hl
1035  8E97 ED 53 1C 8C  	ld (Album_de_borrado_disparos),de
1036  8E9B 22 1E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1037  8E9E
1038  8E9E C9           	ret
1039  8E9F
1040  8E9F              ; ------------------------------------
1041  8E9F              ;
1042  8E9F              ; 1/05/24
1043  8E9F
1044  8E9F              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1045  8E9F              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1046  8E9F
1047  8E9F              ;	DESTRUYE: HL,DE,A
1048  8E9F              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1049  8E9F
1050  8E9F              ;	Variables implicadas: (RND_SP).
1051  8E9F
1052  8E9F              Extrae_numero_aleatorio_y_avanza
1053  8E9F
1054  8E9F 21 00 89     	ld hl,Tabla_de_pintado
1055  8EA2 EB           	ex de,hl
1056  8EA3 2A 46 8C     	ld hl,(RND_SP)
1057  8EA6 EB           	ex de,hl
1058  8EA7 A7           	and a
1059  8EA8 ED 52        	sbc hl,de
1060  8EAA
1061  8EAA 2A 46 8C     	ld hl,(RND_SP)
1062  8EAD 20 06        	jr nz,1F
1063  8EAF
1064  8EAF              ; Sitúa HL al principio de la tabla de nº aleatorios.
1065  8EAF
1066  8EAF 21 F6 88     	ld hl,Numeros_aleatorios
1067  8EB2 22 46 8C     	ld (RND_SP),HL
1068  8EB5
1069  8EB5              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1070  8EB5
1071  8EB5 7E           1 ld a,(hl)
1072  8EB6 23           	inc hl
1073  8EB7 22 46 8C     	ld (RND_SP),hl
1074  8EBA C9           	ret
1075  8EBB
1076  8EBB              ; ------------------------------------
1077  8EBB              ;
1078  8EBB              ; 1/05/24
1079  8EBB
1080  8EBB              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1081  8EBB              ; (1 a 4 segundos).
1082  8EBB              ; Actualizamos (Clock_next_entity) con A.
1083  8EBB
1084  8EBB              ;	DESTRUYE: A y B.
1085  8EBB              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1086  8EBB              ;			 Actualiza (Clock_next_entity) con A.
1087  8EBB
1088  8EBB              ;	Variables implicadas: (Clock_next_entity).
1089  8EBB
1090  8EBB              ; Notas:
1091  8EBB
1092  8EBB              ; 	$32 1 seg.
1093  8EBB              ; 	$64 2 seg.
1094  8EBB              ; 	$96 3 seg.
1095  8EBB              ; 	$c8 4 seg.
1096  8EBB              ; 	$fa 5 seg.
1097  8EBB
1098  8EBB              ; $ffff 1310,7 seg, 22 minutos.
1099  8EBB
1100  8EBB              ;	$0100  5 seg. aproximadamente.
1101  8EBB              ;	$0200 10 seg. aproximadamente.
1102  8EBB              ;	$0300 15 seg. aproximadamente.
1103  8EBB              ;	$0400 20 seg. aproximadamente.
1104  8EBB              ;	$0500 25 seg. aproximadamente.
1105  8EBB              ;	$0600 30 seg. aproximadamente.
1106  8EBB
1107  8EBB              Define_Clock_next_entity
1108  8EBB
1109  8EBB FE 34        	cp $34
1110  8EBD 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1111  8EBF
1112  8EBF              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1113  8EBF
1114  8EBF 4F           3 ld c,a
1115  8EC0 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1116  8EC2 2A 78 5C     	ld hl,(FRAMES)
1117  8EC5 A7           	and a
1118  8EC6 ED 4A        	adc hl,bc
1119  8EC8 22 4B 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1120  8ECB C9           	ret
1121  8ECC
1122  8ECC 3E 34        1 ld a,$34
1123  8ECE 18 EF        	jr 3B
1124  8ED0
1125  8ED0              ; ------------------------------------
1126  8ED0              ;
1127  8ED0              ; 18/03/24
1128  8ED0
1129  8ED0              Borra_diferencia
1130  8ED0
1131  8ED0 ED 4B 2B 8C  	ld bc,(Scanlines_album_SP)
1132  8ED4
1133  8ED4 3A 28 8C     	ld a,(Switch)
1134  8ED7 A7           	and a
1135  8ED8 28 08        	jr z,2F
1136  8EDA
1137  8EDA 2A 26 8C     	ld hl,(Techo_Scanlines_album_2)
1138  8EDD 11 26 8C     	ld de,Techo_Scanlines_album_2
1139  8EE0 18 06        	jr 3F
1140  8EE2
1141  8EE2 2A 24 8C     2 ld hl,(Techo_Scanlines_album)
1142  8EE5 11 24 8C     	ld de,Techo_Scanlines_album
1143  8EE8
1144  8EE8              ; Diferencia.
1145  8EE8
1146  8EE8 ED 42        3 sbc hl,bc
1147  8EEA
1148  8EEA C8           	ret z
1149  8EEB D8           	ret c
1150  8EEC
1151  8EEC              ; Nuevo techo, (más bajo que el anterior).
1152  8EEC              ; Fijamos nuevo techo y borramos bytes sobrantes.
1153  8EEC
1154  8EEC EB           	ex de,hl
1155  8EED
1156  8EED 71           	ld (hl),c
1157  8EEE 2C           	inc l
1158  8EEF 70           	ld (hl),b
1159  8EF0
1160  8EF0 AF           	xor a
1161  8EF1 43           	ld b,e
1162  8EF2
1163  8EF2 2A 2B 8C     	ld hl,(Scanlines_album_SP)
1164  8EF5
1165  8EF5 77           1 ld (hl),a
1166  8EF6 23           	inc hl
1167  8EF7 10 FC        	djnz 1B
1168  8EF9
1169  8EF9              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1170  8EF9
1171  8EF9 21 31 8C     	ld hl,Ctrl_3
1172  8EFC CB DE        	set 3,(hl)
1173  8EFE
1174  8EFE C9           	ret
1175  8EFF
1176  8EFF              ; --------------------------------------------------------------------------------------------------------------
1177  8EFF              ;
1178  8EFF              ;	26/3/24
1179  8EFF
1180  8EFF              Recauda_informacion_de_entidad_en_curso
1181  8EFF
1182  8EFF              ; Almacena la Coordenada Y de la entidad en curso.
1183  8EFF
1184  8EFF              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1185  8EFF
1186  8EFF 3A C3 8B     	ld a,(Coordenada_y)
1187  8F02 2A 2D 8C     	ld hl,(India_SP)
1188  8F05 77           	ld (hl),a
1189  8F06 2C           	inc l
1190  8F07
1191  8F07              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1192  8F07
1193  8F07 ED 5B 2B 8C  	ld de,(Scanlines_album_SP)
1194  8F0B
1195  8F0B 73           	ld (hl),e
1196  8F0C 2C           	inc l
1197  8F0D 72           	ld (hl),d
1198  8F0E 2C           	inc l
1199  8F0F
1200  8F0F 22 2D 8C     	ld (India_SP),hl
1201  8F12
1202  8F12 C9           	ret
1203  8F13
1204  8F13              ; --------------------------------------------------------------------------------------------------------------
1205  8F13              ;
1206  8F13              ;	27/03/24
1207  8F13              ;
1208  8F13
1209  8F13              Inicializa_India_y_limpia_Tabla_de_impresion
1210  8F13
1211  8F13 2A 2D 8C     	ld hl,(India_SP)
1212  8F16 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1213  8F19
1214  8F19 79           	ld a,c
1215  8F1A 95           	sub l
1216  8F1B 28 06        	jr z,2F
1217  8F1D 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1218  8F1E              ;														; _ y pasamos a inicializar (India_SP).
1219  8F1E AF           	xor a
1220  8F1F
1221  8F1F 77           1 ld (hl),a
1222  8F20 2C           	inc l
1223  8F21 10 FC        	djnz 1B												; Limpia Tabla.
1224  8F23
1225  8F23 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1226  8F26 22 2D 8C     	ld (India_SP),hl
1227  8F29
1228  8F29 C9           	ret
1229  8F2A
1230  8F2A              ; --------------------------------------------------------------------------------------------------------------
1231  8F2A              ;
1232  8F2A              ;	31/3/24
1233  8F2A
1234  8F2A              Ordena_tabla_de_impresion
1235  8F2A
1236  8F2A              ; 5794 T/states.
1237  8F2A              ; 6278 T/states.
1238  8F2A              ; 5310 T/states.
1239  8F2A
1240  8F2A              ; Inicializamos punteros (India_SP) e (India_2_SP).
1241  8F2A              ; Inicializamos contador de comparaciones, [C].
1242  8F2A              ; Cargamos los registros A y B para efectuar comparación.
1243  8F2A
1244  8F2A FD 2E 00     	ld iyl,0
1245  8F2D
1246  8F2D 3A 09 8C     	ld a,(Entidades_en_curso)
1247  8F30 FE 04        	cp 4 	;	4
1248  8F32 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1249  8F33
1250  8F33 3D           	dec a
1251  8F34 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1252  8F35 51           	ld d,c 										; Copia de respaldo.
1253  8F36
1254  8F36 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1255  8F37
1256  8F37 21 03 89     	ld hl,Tabla_de_pintado+3
1257  8F3A 46           	ld b,(hl)
1258  8F3B 22 2F 8C     	ld (India_2_SP),hl
1259  8F3E
1260  8F3E B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1261  8F3F DC 67 8F     	call c, Avanza_India_2_SP
1262  8F42 CC 67 8F     	call z, Avanza_India_2_SP
1263  8F45
1264  8F45 FD 2D        	dec iyl
1265  8F47 28 18        	jr z,2F
1266  8F49
1267  8F49
1268  8F49              ; --------------------------------------------------------------------------------------------------------------
1269  8F49              ;
1270  8F49              ;	7/4/24
1271  8F49
1272  8F49              Trueque
1273  8F49
1274  8F49              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1275  8F49              ;  			A contiene en nº de fila de (India_SP).
1276  8F49              ;			HL contiene (India_2_SP).
1277  8F49
1278  8F49 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1279  8F4A E5           	push hl										; Preservo (India_2_SP).
1280  8F4B
1281  8F4B ED 5B 2D 8C  	ld de,(India_SP)
1282  8F4F EB           	ex de,hl
1283  8F50 70           	ld (hl),b
1284  8F51 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1285  8F52
1286  8F52 CD 93 8F     	call Intercambia_1_byte
1287  8F55 CD 93 8F     	call Intercambia_1_byte
1288  8F58
1289  8F58
1290  8F58              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1291  8F58              ; Recuperamos (India_2_SP) en HL.
1292  8F58
1293  8F58 2A 2D 8C     	ld hl,(India_SP)
1294  8F5B 7E           	ld a,(hl)
1295  8F5C
1296  8F5C E1           	pop hl
1297  8F5D D1           	pop de
1298  8F5E
1299  8F5E              ; --------------------------------------------------------------------------------------------------------------
1300  8F5E
1301  8F5E CD 67 8F     	call Avanza_India_2_SP
1302  8F61
1303  8F61 14           2 inc d
1304  8F62 15           	dec d
1305  8F63 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1306  8F64 18 D8        	jr 1B
1307  8F66
1308  8F66 C9           	ret
1309  8F67
1310  8F67              ; ----- ----- ----- ----- -----
1311  8F67
1312  8F67              Avanza_India_2_SP
1313  8F67
1314  8F67 0D           	dec c
1315  8F68 28 0A        	jr z,Avanza_punteros_indios
1316  8F6A
1317  8F6A FD 2C        	inc iyl
1318  8F6C
1319  8F6C 2C           	inc l
1320  8F6D 2C           	inc l
1321  8F6E 2C           	inc l
1322  8F6F
1323  8F6F 46           	ld b,(hl)
1324  8F70 22 2F 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1325  8F73
1326  8F73 C9           	ret
1327  8F74
1328  8F74              ; ----- ----- ----- ----- -----
1329  8F74
1330  8F74              Avanza_punteros_indios
1331  8F74
1332  8F74 15           	dec d
1333  8F75 28 15        	jr z,Prepara_salida
1334  8F77
1335  8F77 4A           	ld c,d
1336  8F78
1337  8F78 2A 2D 8C     	ld hl,(India_SP)
1338  8F7B 2C           	inc l
1339  8F7C 2C           	inc l
1340  8F7D 2C           	inc l
1341  8F7E 7E           	ld a,(hl)
1342  8F7F 22 2D 8C     	ld (India_SP),hl
1343  8F82
1344  8F82 2C           	inc l
1345  8F83 2C           	inc l
1346  8F84 2C           	inc l
1347  8F85 46           	ld b,(hl)
1348  8F86 22 2F 8C     	ld (India_2_SP),hl
1349  8F89
1350  8F89 FD 2C        	inc iyl
1351  8F8B
1352  8F8B C9           	ret
1353  8F8C
1354  8F8C              Prepara_salida
1355  8F8C
1356  8F8C 21 00 89     	ld hl,Tabla_de_pintado
1357  8F8F 22 2D 8C     	ld (India_SP),hl
1358  8F92 C9           	ret
1359  8F93
1360  8F93
1361  8F93 2C           Intercambia_1_byte inc l
1362  8F94 1C           	inc e
1363  8F95 46           	ld b,(hl)
1364  8F96 1A           	ld a,(de)
1365  8F97 EB           	ex de,hl
1366  8F98 70           	ld (hl),b
1367  8F99 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1368  8F9A C9           	ret
1369  8F9B
1370  8F9B              ; -----------------------------------------------------------------------------------
1371  8F9B              ;
1372  8F9B              ;	20/01/24
1373  8F9B              ;
1374  8F9B              ;
1375  8F9B
1376  8F9B              Construye_movimientos_masticados_entidad
1377  8F9B
1378  8F9B 2A C8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1379  8F9E E5           	push hl
1380  8F9F CD E2 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1381  8FA2              ;															; _ el (Contador_de_mov_masticados).
1382  8FA2 CD A4 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1383  8FA5              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1384  8FA5 CD D5 99     	call Recompone_posicion_inicio
1385  8FA8
1386  8FA8 CD 05 97     1 call Draw
1387  8FAB CD C7 8F     	call Guarda_movimiento_masticado
1388  8FAE
1389  8FAE CD 82 9D     	call Movimiento
1390  8FB1
1391  8FB1 3A 31 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1392  8FB4 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1393  8FB6 28 F0        	jr z,1B
1394  8FB8
1395  8FB8              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1396  8FB8              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1397  8FB8
1398  8FB8 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1399  8FB9 22 C8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1400  8FBC
1401  8FBC              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1402  8FBC
1403  8FBC CD E6 9E     	call Situa_en_contador_general_de_mov_masticados
1404  8FBF
1405  8FBF              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1406  8FBF              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1407  8FBF
1408  8FBF ED 4B CA 8B  	ld bc,(Contador_de_mov_masticados)
1409  8FC3
1410  8FC3 71           	ld (hl),c
1411  8FC4 23           	inc hl
1412  8FC5 70           	ld (hl),b
1413  8FC6
1414  8FC6 C9           	ret
1415  8FC7
1416  8FC7              ; -----------------------------------------------------------------------------------
1417  8FC7              ;
1418  8FC7              ;	28/12/23
1419  8FC7              ;
1420  8FC7              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1421  8FC7              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1422  8FC7
1423  8FC7              Guarda_movimiento_masticado
1424  8FC7
1425  8FC7 ED 73 0E 8C  	ld (Stack),sp
1426  8FCB ED 7B C8 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1427  8FCF
1428  8FCF DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1429  8FD1 FD E5            push iy 												; Pushea Puntero_objeto.
1430  8FD3
1431  8FD3 ED 7B 0E 8C      ld sp,(Stack)
1432  8FD7
1433  8FD7 2A CA 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1434  8FDA 23           	inc hl
1435  8FDB 22 CA 8B     	ld (Contador_de_mov_masticados),hl
1436  8FDE
1437  8FDE CD E2 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1438  8FE1              ;															; _ el (Contador_de_mov_masticados).
1439  8FE1 C9               ret
1440  8FE2
1441  8FE2              ; --------------------------------------------------------------------------------------------------------------
1442  8FE2              ;
1443  8FE2              ;	12/1/24
1444  8FE2              ;
1445  8FE2              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1446  8FE2
1447  8FE2              Actualiza_Puntero_de_almacen_de_mov_masticados
1448  8FE2
1449  8FE2 2A C8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1450  8FE5 01 04 00     	ld bc,4
1451  8FE8 A7           	and a
1452  8FE9 ED 4A        	adc hl,bc
1453  8FEB 22 C8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1454  8FEE C9           	ret
1455  8FEF
1456  8FEF              ; --------------------------------------------------------------------------------------------------------------
1457  8FEF              ;
1458  8FEF              ;	24/03/24
1459  8FEF              ;
1460  8FEF              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1461  8FEF              ;
1462  8FEF              ;	IX contiene el puntero de impresión.
1463  8FEF              ;	DE contiene (Puntero_objeto).
1464  8FEF
1465  8FEF
1466  8FEF              Cargamos_registros_con_mov_masticado
1467  8FEF
1468  8FEF ED 73 0E 8C  	ld (Stack),sp
1469  8FF3 ED 7B C8 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1470  8FF7
1471  8FF7 D1           	pop de 															; DE contiene Puntero_objeto
1472  8FF8 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1473  8FFA
1474  8FFA ED 73 C8 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1475  8FFE ED 7B 0E 8C  	ld sp,(Stack)
1476  9002
1477  9002 7B           	ld a,e
1478  9003 82           	add d															; Comprueba si ya no hay datos en el almacén.
1479  9004
1480  9004 CC 94 93     	call z,Reinicia_entidad_maliciosa
1481  9007
1482  9007 C9           	ret
1483  9008
1484  9008              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1485  9008              ;
1486  9008              ;	22/7/24
1487  9008
1488  9008              Cargamos_registros_con_explosion
1489  9008
1490  9008
1491  9008 2A C8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1492  900B CD 9E 90     	call Extrae_address
1493  900E
1494  900E 5D           	ld e,l
1495  900F 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1496  9010
1497  9010 DD 2A C6 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1498  9014
1499  9014 C9           	ret
1500  9015
1501  9015
1502  9015              Cargamos_registros_con_explosion_Amadeus
1503  9015
1504  9015 2A 82 89     	ld hl,(Pamm_Amadeus)
1505  9018 CD 9E 90     	call Extrae_address
1506  901B
1507  901B 5D           	ld e,l
1508  901C 54           	ld d,h
1509  901D
1510  901D DD 2A 80 89  	ld ix,(p.imp.amadeus)
1511  9021
1512  9021 C9           	ret
1513  9022
1514  9022              ; --------------------------------------------------------------------------------------------------------------
1515  9022              ;
1516  9022              ;	17/06/24
1517  9022              ;
1518  9022              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1519  9022              ;
1520  9022              ;	IX contiene el puntero de impresión.
1521  9022              ;	DE contiene (Puntero_objeto).
1522  9022
1523  9022
1524  9022              Cargamos_registros_con_mov_masticado_Amadeus
1525  9022
1526  9022 ED 73 0E 8C  	ld (Stack),sp
1527  9026 ED 7B 82 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1528  902A D1           	pop de 															; DE contiene Puntero_objeto
1529  902B DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1530  902D DD 22 80 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1531  9031 ED 7B 0E 8C  	ld sp,(Stack)
1532  9035 C9           	ret
1533  9036
1534  9036              ; ---------------------------------------------------------------------------------------------------------------------
1535  9036              ;
1536  9036              ;	18/6/24
1537  9036              ;
1538  9036              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1539  9036
1540  9036              Genera_datos_de_impresion_Amadeus
1541  9036
1542  9036 3A 7F 89     	ld a,(Impacto_Amadeus)
1543  9039 A7           	and a
1544  903A 20 03        	jr nz,1F
1545  903C
1546  903C              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1547  903C              ; _apuntando a la correspondiente explosión.
1548  903C
1549  903C CD 22 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1550  903F
1551  903F DD 7D        1 ld a,ixl
1552  9041 E6 1F        	and $1f
1553  9043 32 7C 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1554  9046
1555  9046 2A 2B 8C     	ld hl,(Scanlines_album_SP)
1556  9049 E5           	push hl
1557  904A
1558  904A 2A 16 8C     	ld hl,(Album_de_pintado_Amadeus)
1559  904D 22 2B 8C     	ld (Scanlines_album_SP),hl
1560  9050
1561  9050 CD E9 94     	call Genera_datos_de_impresion
1562  9053
1563  9053 E1           	pop hl
1564  9054 22 2B 8C     	ld (Scanlines_album_SP),hl
1565  9057
1566  9057 C9           	ret
1567  9058
1568  9058              ; ---------------------------------------------------------------------------------------------------------------------
1569  9058              ;
1570  9058              ;	13/03/24
1571  9058              ;
1572  9058              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1573  9058
1574  9058              Inicia_albumes_de_lineas
1575  9058
1576  9058 21 00 80     	ld hl,Scanlines_album
1577  905B 22 12 8C     	ld (Album_de_pintado),hl
1578  905E 22 2B 8C     	ld (Scanlines_album_SP),hl
1579  9061
1580  9061 21 1A 81     	ld hl,Scanlines_album_2
1581  9064 22 14 8C     	ld (Album_de_borrado),hl
1582  9067
1583  9067 C9           	ret
1584  9068
1585  9068              Inicia_albumes_de_lineas_Amadeus
1586  9068
1587  9068 21 34 82     	ld hl,Amadeus_scanlines_album
1588  906B 22 16 8C     	ld (Album_de_pintado_Amadeus),hl
1589  906E 21 58 82     	ld hl,Amadeus_scanlines_album_2
1590  9071 22 18 8C     	ld (Album_de_borrado_Amadeus),hl
1591  9074
1592  9074 C9           	ret
1593  9075
1594  9075              Inicia_albumes_de_disparos
1595  9075
1596  9075 21 7C 82     	ld hl,Disparos_scanlines_album
1597  9078 22 1A 8C     	ld (Album_de_pintado_disparos),hl
1598  907B 21 B8 82     	ld hl,Disparos_scanlines_album_2
1599  907E 22 1C 8C     	ld (Album_de_borrado_disparos),hl
1600  9081
1601  9081 21 7C 82     	ld hl,Disparos_scanlines_album
1602  9084 22 1E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1603  9087
1604  9087 C9           	ret
1605  9088
1606  9088              ; ---------------------------------------------------------------------------------------------------------------------
1607  9088              ;
1608  9088              ; 8/1/23
1609  9088              ;
1610  9088              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1611  9088              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1612  9088              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1613  9088
1614  9088              ; Destruye HL y DE !!!!!
1615  9088
1616  9088              Inicia_punteros_de_cajas
1617  9088
1618  9088 21 69 89     	ld hl,Indice_de_cajas_de_entidades
1619  908B CD 9E 90         call Extrae_address
1620  908E 22 01 8C         ld (Puntero_store_caja),hl
1621  9091 21 6B 89     	ld hl,Indice_de_cajas_de_entidades+2
1622  9094 22 05 8C     	ld (Indice_restore_caja),hl
1623  9097 CD 9E 90     	call Extrae_address
1624  909A 22 03 8C     	ld (Puntero_restore_caja),hl
1625  909D C9               ret
1626  909E
1627  909E              ; *************************************************************************************************************************************************************
1628  909E
1629  909E              ;
1630  909E              ; 20/10/22
1631  909E              ;
1632  909E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1633  909E              ;
1634  909E              ; Destruye el puntero y DE !!!!!
1635  909E
1636  909E 5E           Extrae_address ld e,(hl)
1637  909F 23           	inc hl
1638  90A0 56           	ld d,(hl)
1639  90A1 2B           	dec hl
1640  90A2 EB           	ex de,hl
1641  90A3 C9           	ret
1642  90A4
1643  90A4              ; *************************************************************************************************************************************************************
1644  90A4              ;
1645  90A4              ;	20/1/24
1646  90A4              ;
1647  90A4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1648  90A4              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1649  90A4              ;
1650  90A4              ;   Destruye HL y BC !!!!!,
1651  90A4              ;
1652  90A4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1653  90A4              ;					"0" ..... Izquierda.
1654  90A4
1655  90A4              Inicia_Puntero_objeto
1656  90A4
1657  90A4 3A E0 8B     	ld a,(Cuad_objeto)
1658  90A7 E6 01        	and 1
1659  90A9 F5           	push af
1660  90AA CC C6 90     	call z,Inicia_puntero_objeto_izq
1661  90AD F1           	pop af
1662  90AE C8           	ret z
1663  90AF CD B3 90     	call Inicia_puntero_objeto_der
1664  90B2 C9           	ret
1665  90B3
1666  90B3              ; Arrancamos desde la parte izquierda de la pantalla.
1667  90B3              ; Iniciamos (Indice_Sprite_der).
1668  90B3
1669  90B3 2A D6 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1670  90B6 22 DA 8B     	ld (Puntero_DESPLZ_der),hl
1671  90B9 CD 9E 90     	call Extrae_address
1672  90BC 22 D3 8B     	ld (Puntero_objeto),hl
1673  90BF
1674  90BF 2A D8 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1675  90C2 22 DC 8B     	ld (Puntero_DESPLZ_izq),hl
1676  90C5 C9           	ret
1677  90C6
1678  90C6              ; Arrancamos desde la parte derecha de la pantalla.
1679  90C6              ; Iniciamos (Indice_Sprite_izq).
1680  90C6
1681  90C6 2A D8 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1682  90C9 22 DC 8B     	ld (Puntero_DESPLZ_izq),hl
1683  90CC CD 9E 90     	call Extrae_address
1684  90CF 22 D3 8B     	ld (Puntero_objeto),hl
1685  90D2
1686  90D2 2A D6 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1687  90D5 22 DA 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1688  90D8 C9           	ret
1689  90D9
1690  90D9              ; **************************************************************************************************
1691  90D9              ;
1692  90D9              ;	06/07/24
1693  90D9              ;
1694  90D9              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1695  90D9
1696  90D9              Restore_entidad
1697  90D9
1698  90D9 2A 01 8C     	ld hl,(Puntero_store_caja)
1699  90DC 7E           	ld a,(hl)
1700  90DD A7           	and a
1701  90DE CC EC 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1702  90E1 28 F6        	jr z,Restore_entidad
1703  90E3
1704  90E3 11 C1 8B     	ld de,Bandeja_DRAW
1705  90E6 01 0C 00     	ld bc,12
1706  90E9 ED B0        	ldir
1707  90EB C9           	ret
1708  90EC
1709  90EC              ; **************************************************************************************************
1710  90EC              ;
1711  90EC              ;	08/05/23
1712  90EC              ;
1713  90EC              ;	Incrementamos los dos punteros de entidades. (+1).
1714  90EC
1715  90EC              Incrementa_punteros_de_cajas
1716  90EC
1717  90EC 2A 03 8C     	ld hl,(Puntero_restore_caja)
1718  90EF 22 01 8C     	ld (Puntero_store_caja),hl
1719  90F2 2A 05 8C     	ld hl,(Indice_restore_caja)
1720  90F5 23           	inc hl
1721  90F6 23           	inc hl
1722  90F7 22 05 8C     	ld (Indice_restore_caja),hl
1723  90FA CD 9E 90         call Extrae_address
1724  90FD 22 03 8C         ld (Puntero_restore_caja),hl
1725  9100 C9               ret
1726  9101
1727  9101              ; -----------------------------------------------------------
1728  9101
1729  9101              ; Teclado.
1730  9101
1731  9101 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1732  9103 DB FE        	in a,($fe)
1733  9105 E6 01        	and $01
1734  9107 28 02        	jr z,1f
1735  9109 18 F6        	jr Pulsa_ENTER
1736  910B C9           1 ret
1737  910C
1738  910C              ; **************************************************************************************************
1739  910C              ;
1740  910C              ; Temporización.
1741  910C
1742  910C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1743  910C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1744  910C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1745  910C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1746  910C
1747  910C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1748  910C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1749  910C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1750  910C
1751  910C              ; A partir de $4f61 no hace falta DELAY.
1752  910C
1753  910C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1754  910C
1755  910C              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1756  910C              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1757  910C              ;	LD A,B
1758  910C              ;	AND A
1759  910C              ;	JR NZ,wait
1760  910C              ;	RET
1761  910C
1762  910C              ; ---------------------------------------------------------------------------------------------------------------
1763  910C              ;
1764  910C              ;	13/07/24
1765  910C              ;
1766  910C
1767  910C              Inicia_Shield
1768  910C
1769  910C 21 55 8C     	ld hl,Datos_Shield
1770  910F 22 59 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1771  9112
1772  9112 7E           	ld a,(hl)
1773  9113 32 5C 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1774  9116
1775  9116 3E 01        	ld a,1
1776  9118 32 5D 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1777  911B
1778  911B C9           	ret
1779  911C
1780  911C              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1781  911C              ;
1782  911C              ;	4/6/24
1783  911C              ;
1784  911C              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1785  911C              ;
1786  911C              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1787  911C              ;
1788  911C
1789  911C              Actualiza_pantalla
1790  911C
1791  911C 3E 02        	ld a,2
1792  911E D3 FE        	out ($fe),a
1793  9120
1794  9120 3A 31 8C     	ld a,(Ctrl_3)
1795  9123 CB 57        	bit 2,a
1796  9125 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1797  9127
1798  9127              Borrando_entidades
1799  9127
1800  9127 2A 2B 8C     	ld hl,(Scanlines_album_SP)
1801  912A CD 9E 90     	call Extrae_address
1802  912D 24           	inc h
1803  912E 25           	dec h
1804  912F 28 05        	jr z,Pintando_entidades
1805  9131 CD E2 95     	call Pinta_Sprites
1806  9134 18 F1        	jr Borrando_entidades
1807  9136
1808  9136              Pintando_entidades
1809  9136
1810  9136 2A 2D 8C     	ld hl,(India_SP)
1811  9139 2C           	inc l
1812  913A CD 9E 90     	call Extrae_address
1813  913D 24           	inc h
1814  913E 25           	dec h
1815  913F 28 0E        	jr z,Ejecuta_escudo
1816  9141 1C           	inc e
1817  9142 1C           	inc e
1818  9143 ED 53 2D 8C  	ld (India_SP),de
1819  9147 CD 9E 90     	call Extrae_address
1820  914A CD E2 95     	call Pinta_Sprites
1821  914D 18 E7        	jr Pintando_entidades
1822  914F
1823  914F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1824  914F
1825  914F              Ejecuta_escudo
1826  914F
1827  914F 3A 5B 8C     	ld a,(Shield)
1828  9152 A7           	and a
1829  9153 20 2F        	jr nz,Aplica_Shield
1830  9155
1831  9155              Borrando_Amadeus
1832  9155
1833  9155 21 31 8C     	ld hl,Ctrl_3
1834  9158 CB 6E        	bit 5,(hl)
1835  915A 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1836  915C
1837  915C 2A 18 8C     	ld hl,(Album_de_borrado_Amadeus)
1838  915F CD 9E 90     	call Extrae_address
1839  9162 24           	inc h
1840  9163 25           	dec h
1841  9164 28 03        	jr z,Pintando_Amadeus
1842  9166 CD E2 95     	call Pinta_Sprites
1843  9169
1844  9169              Pintando_Amadeus
1845  9169
1846  9169 2A 16 8C     	ld hl,(Album_de_pintado_Amadeus)
1847  916C CD 9E 90     	call Extrae_address
1848  916F 24           	inc h
1849  9170 25           	dec h
1850  9171 28 03        	jr z,1F
1851  9173 CD E2 95     	call Pinta_Sprites
1852  9176
1853  9176              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1854  9176
1855  9176 21 31 8C     1 ld hl,Ctrl_3
1856  9179 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1857  917B CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1858  917D CB AE        	res 5,(hl)
1859  917F
1860  917F 3E 01        	ld a,1												; Borde azul.
1861  9181 D3 FE        	out ($fe),a
1862  9183
1863  9183 C9           	ret
1864  9184
1865  9184              Aplica_Shield
1866  9184
1867  9184              ;	Bit 1 "1" (Shield_3) Sólo borra.
1868  9184              ;		  "0"     ""     Borra/Pinta.
1869  9184              ;	Bit 2    ""  RET.	 No borra, no pinta.
1870  9184
1871  9184 21 5D 8C     	ld hl,Shield_3
1872  9187
1873  9187 CB 5E        	bit 3,(hl)
1874  9189 20 DE        	jr nz,Pintando_Amadeus
1875  918B
1876  918B CB 56        	bit 2,(hl)
1877  918D 20 E7        	jr nz,1B
1878  918F
1879  918F CB 4E        	bit 1,(hl)
1880  9191 C4 98 91     	call nz,Borra_Amadeus_shield
1881  9194
1882  9194 28 BF        	jr z,Borrando_Amadeus
1883  9196 18 DE        	jr 1B
1884  9198
1885  9198              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1886  9198
1887  9198              Borra_Amadeus_shield
1888  9198
1889  9198 3A 31 8C     	ld a,(Ctrl_3)
1890  919B CB 6F        	bit 5,a
1891  919D 28 08        	jr z,1F
1892  919F
1893  919F 2A 18 8C     	ld hl,(Album_de_borrado_Amadeus)
1894  91A2 CD 9E 90     	call Extrae_address
1895  91A5 18 06        	jr 2F
1896  91A7
1897  91A7 2A 16 8C     1 ld hl,(Album_de_pintado_Amadeus)
1898  91AA CD 9E 90     	call Extrae_address
1899  91AD
1900  91AD CD E2 95     2 call Pinta_Sprites
1901  91B0
1902  91B0 AF           	xor a
1903  91B1 3C           	inc a											; Asegura NZ en la salida de la rutina.
1904  91B2
1905  91B2 C9           	ret
1906  91B3
1907  91B3              Pinta_Amadeus_shield
1908  91B3
1909  91B3 2A 16 8C     	ld hl,(Album_de_pintado_Amadeus)
1910  91B6 CD 9E 90     	call Extrae_address
1911  91B9 CD E2 95     	call Pinta_Sprites
1912  91BC
1913  91BC AF           	xor a
1914  91BD 3C           	inc a											; Asegura NZ en la salida de la rutina.
1915  91BE
1916  91BE C9           	ret
1917  91BF
1918  91BF              Borra_Pinta_Amadeus_shield
1919  91BF
1920  91BF CD 98 91     	call Borra_Amadeus_shield
1921  91C2 CD B3 91     	call Pinta_Amadeus_shield
1922  91C5 C9           	ret
1923  91C6
1924  91C6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1925  91C6              ;
1926  91C6              ;	19/6/24
1927  91C6              ;
1928  91C6
1929  91C6              Teclado
1930  91C6
1931  91C6              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1932  91C6
1933  91C6 3E F7        	ld a,$f7												; "5" para disparar.
1934  91C8 DB FE        	in a,($fe)
1935  91CA E6 10        	and $10
1936  91CC
1937  91CC CC 89 A1     	call z,Genera_disparo_Amadeus
1938  91CF
1939  91CF 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1940  91D1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1941  91D3 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1942  91D5 CC 4F 9D         call z,Amadeus_a_izquierda
1943  91D8
1944  91D8 3E F7        	ld a,$f7
1945  91DA DB FE        	in a,($fe)
1946  91DC E6 01        	and $01
1947  91DE C8           	ret z
1948  91DF
1949  91DF 3E F7        	ld a,$f7
1950  91E1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1951  91E3 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1952  91E5 CC 67 9D     	call z,Amadeus_a_derecha
1953  91E8
1954  91E8 C9           	ret
1955  91E9
1956  91E9              ; ------------------------------------------------------------------------------------------------------------------------
1957  91E9              ;
1958  91E9              ;	06/07/24
1959  91E9              ;
1960  91E9
1961  91E9              Genera_explosion
1962  91E9
1963  91E9 21 43 8C     	ld hl,Clock_explosion
1964  91EC 35           	dec (hl)
1965  91ED 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1966  91EF
1967  91EF              Borra_entidad_colisionada
1968  91EF
1969  91EF CD FF 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1970  91F2 CD 08 90     	call Cargamos_registros_con_explosion
1971  91F5 CD E9 94     	call Genera_datos_de_impresion
1972  91F8
1973  91F8 AF           	xor a
1974  91F9 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1975  91FA
1976  91FA C9           	ret
1977  91FB
1978  91FB              Siguiente_frame_explosion
1979  91FB
1980  91FB 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1981  91FD
1982  91FD              ; Avanza Frame de explosión.
1983  91FD
1984  91FD 2A C8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1985  9200 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1986  9203
1987  9203 79           	ld a,c
1988  9204 95           	sub l
1989  9205 20 0B        	jr nz,1F
1990  9207
1991  9207              ; Fín de la entidad !!!!!!!!!!!!!
1992  9207
1993  9207 21 08 8C     	ld hl,Numero_parcial_de_entidades
1994  920A 35           	dec (hl)
1995  920B 23           	inc hl
1996  920C 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1997  920D
1998  920D CD 69 93     	call Limpiamos_bandeja_DRAW
1999  9210 18 DD        	jr Borra_entidad_colisionada
2000  9212
2001  9212 23           1 inc hl
2002  9213 23           	inc hl
2003  9214 22 C8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2004  9217 18 D6        	jr Borra_entidad_colisionada
2005  9219
2006  9219              ; ----- ----- ----- ----- -----
2007  9219
2008  9219              Genera_explosion_Amadeus
2009  9219
2010  9219 21 44 8C     	ld hl,Clock_explosion_Amadeus
2011  921C 35           	dec (hl)
2012  921D 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2013  921F
2014  921F              Borra_Amadeus_impactado
2015  921F
2016  921F CD 7C 8E     	call Change_Amadeus
2017  9222 CD 15 90     	call Cargamos_registros_con_explosion_Amadeus
2018  9225 CD 36 90     	call Genera_datos_de_impresion_Amadeus
2019  9228
2020  9228 21 31 8C     	ld hl,Ctrl_3
2021  922B CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2022  922D
2023  922D AF           	xor a
2024  922E 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2025  922F
2026  922F C9           	ret
2027  9230
2028  9230              Siguiente_frame_explosion_Amadeus
2029  9230
2030  9230 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2031  9232
2032  9232              ; Avanza Frame de explosión.
2033  9232
2034  9232 2A 82 89     	ld hl,(Pamm_Amadeus)
2035  9235 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2036  9238
2037  9238 79           	ld a,c
2038  9239 95           	sub l
2039  923A 20 0B        	jr nz,1F
2040  923C
2041  923C              ; Fín de Amadeus !!!!!!!!!!!!!
2042  923C              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2043  923C
2044  923C AF           	xor a
2045  923D 32 7F 89     	ld (Impacto_Amadeus),a
2046  9240 21 31 8C     	ld hl,Ctrl_3
2047  9243 CB F6        	set 6,(hl)
2048  9245
2049  9245 18 D8        	jr Borra_Amadeus_impactado
2050  9247
2051  9247 23           1 inc hl
2052  9248 23           	inc hl
2053  9249 22 82 89     	ld (Pamm_Amadeus),hl
2054  924C 18 D1        	jr Borra_Amadeus_impactado
2055  924E
2056  924E              ; ---------------------------------------------------------------
2057  924E
2058  924E              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 924E              ; ******************************************************************************************************************************************************************************************
   2+ 924E              ;
   3+ 924E              ;   21/04/24
   4+ 924E              ;
   5+ 924E              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 924E              ;   (XOR) bit a bit.
   7+ 924E              ;
   8+ 924E              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 924E
  10+ 924E              Derivando_RND
  11+ 924E
  12+ 924E 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9251
  14+ 9251 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9253 C5               push bc
  16+ 9254              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9254 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9257              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9257
  20+ 9257 A7           6 and a                                 ; Carry a "0".
  21+ 9258 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 925A 30 02            jr nc,1F
  23+ 925C
  24+ 925C CB C1            set 0,c
  25+ 925E
  26+ 925E 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 925F E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9261 5F               ld e,a
  29+ 9262
  30+ 9262 7A               ld a,d
  31+ 9263 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9265 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9267
  34+ 9267 CB 3F            srl a
  35+ 9269
  36+ 9269 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 926A
  38+ 926A 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 926B 28 04            jr z,4F
  40+ 926D
  41+ 926D CB FF            set 7,a
  42+ 926F 18 02            jr 5F
  43+ 9271
  44+ 9271 CB BF        4 res 7,a
  45+ 9273
  46+ 9273 CB 21        5 sla c
  47+ 9275 10 E0            djnz 6B
  48+ 9277
  49+ 9277 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9278
  51+ 9278 77               ld (hl),a
  52+ 9279 23               inc hl
  53+ 927A C1               pop bc
  54+ 927B 10 D4            djnz 3B
  55+ 927D
  56+ 927D C9               ret
  57+ 927E
  58+ 927E
  59+ 927E
# file closed: RND_Derivando.asm
2059  927E              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 927E              ;---------------------------------------------------------------------------------------------------------------
   2+ 927E              ;
   3+ 927E              ;   8/3/24
   4+ 927E              ;
   5+ 927E              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 927E              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 927E              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 927E              ;	_ de la 1ª entidad del Nivel.
   9+ 927E              ;
  10+ 927E              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 927E
  12+ 927E              ;	MODIFICA: HL,DE y A.
  13+ 927E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 927E
  15+ 927E              Inicializa_Nivel
  16+ 927E
  17+ 927E 2A 51 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9281 CD 9E 90     	call Extrae_address
  19+ 9284 7E           	ld a,(hl)
  20+ 9285 32 07 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9288 23           	inc hl
  22+ 9289 CD 96 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 928C 22 53 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 928F CD 9F 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9292
  26+ 9292 CD B0 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9295 C9           	ret
  28+ 9296
  29+ 9296              ; ----------------------
  30+ 9296
  31+ 9296 11 E6 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9299 01 04 00     	ld bc,4
  33+ 929C ED B0        	ldir
  34+ 929E C9           	ret
  35+ 929F
  36+ 929F 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92A0 CD 3A 94         call Calcula_salto_en_BC
  38+ 92A3 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92A6 A7               and a
  40+ 92A7 ED 4A            adc hl,bc
  41+ 92A9 CD 9E 90         call Extrae_address
  42+ 92AC 22 F2 8B         ld (Puntero_indice_mov),hl
  43+ 92AF C9               ret
  44+ 92B0
  45+ 92B0 3A C1 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92B3 CD 3A 94     	call Calcula_salto_en_BC
  47+ 92B6 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92B9 A7               and a
  49+ 92BA ED 4A            adc hl,bc
  50+ 92BC CD 9E 90         call Extrae_address
  51+ 92BF 22 C8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92C2 C9           	ret
  53+ 92C3
  54+ 92C3              ;---------------------------------------------------------------------------------------------------------------
  55+ 92C3              ;
  56+ 92C3              ;   5/1/24
  57+ 92C3              ;
  58+ 92C3              ;	Destruye A,BC,HL,DE
  59+ 92C3
  60+ 92C3              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92C3              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92C3
  63+ 92C3              Inicia_Entidades
  64+ 92C3
  65+ 92C3              ; Preparamos los punteros de las cajas de entidades:
  66+ 92C3
  67+ 92C3 CD 88 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92C6              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92C6 CD 82 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92C9
  71+ 92C9 2A 53 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92CC
  73+ 92CC 22 53 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92CF
  75+ 92CF CD E8 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92D2
  77+ 92D2 2A 53 8C     	ld hl,(Datos_de_nivel)
  78+ 92D5
  79+ 92D5              ; En este punto:
  80+ 92D5              ;
  81+ 92D5              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92D5              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92D5
  84+ 92D5 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92D6
  86+ 92D6 7E           	ld a,(hl)
  87+ 92D7 CD 54 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92DA
  89+ 92DA CD 4C 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92DD
  91+ 92DD              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92DD
  93+ 92DD CD 0A 94     	call Busca_mov_masticados_segun_tipo
  94+ 92E0
  95+ 92E0 A7           	and a
  96+ 92E1 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92E3
  98+ 92E3              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92E3
 100+ 92E3              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92E3              ;	_ de este tipo de entidad.
 102+ 92E3
 103+ 92E3 CD E6 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92E6 CD F3 9E     	call Transfiere_datos_de_contadores
 105+ 92E9
 106+ 92E9 18 06        	jr 4F
 107+ 92EB
 108+ 92EB CD 9B 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92EE
 110+ 92EE              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92EE              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92EE              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92EE              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92EE              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92EE
 116+ 92EE CD C8 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92F1              ;																; _ Mov_masticados ya generados.
 118+ 92F1
 119+ 92F1 CD EF 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92F4
 121+ 92F4 DD E5        	push ix
 122+ 92F6 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92F7
 124+ 92F7 D5           	push de
 125+ 92F8 CD BD 94     	call Genera_coordenadas
 126+ 92FB
 127+ 92FB ED 5B 2B 8C  	ld de,(Scanlines_album_SP)
 128+ 92FF CD FF 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9302 D1           	pop de
 130+ 9303
 131+ 9303 CD E9 94     	call Genera_datos_de_impresion
 132+ 9306              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9306              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9306              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9306              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9306
 137+ 9306 CD 8C 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9309
 139+ 9309              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9309
 141+ 9309 ED 5B 01 8C  	ld de,(Puntero_store_caja)
 142+ 930D CD 79 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9310
 144+ 9310 CD 69 93     	call Limpiamos_bandeja_DRAW
 145+ 9313 CD EC 90     	call Incrementa_punteros_de_cajas
 146+ 9316
 147+ 9316              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9316              ; _ entidad del Nivel.
 149+ 9316
 150+ 9316 3A 32 8C     	ld a,(Ctrl_4)
 151+ 9319 E6 F0        	and $f0
 152+ 931B 32 32 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 931E
 154+ 931E              ; Siguiente entidad del Nivel.
 155+ 931E
 156+ 931E 2A 53 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9321 23           	inc hl 														; _ entidad del Nivel.
 158+ 9322
 159+ 9322 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9323
 161+ 9323 10 A7        	djnz 2B
 162+ 9325
 163+ 9325 C9           	ret
 164+ 9326
 165+ 9326              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9326              ;
 167+ 9326              ;	27/5/24
 168+ 9326              ;
 169+ 9326              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9326              ;
 171+ 9326
 172+ 9326              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9326              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9326
 175+ 9326 21 F9 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9329 CD 4C 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 932C
 178+ 932C
 179+ 932C              Construye_movimientos_masticados_Amadeus
 180+ 932C
 181+ 932C 2A C8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 932F CD E2 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9332              ;															; _ el (Contador_de_mov_masticados).
 184+ 9332 CD A4 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9335              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9335
 187+ 9335              ; Generamos movimientos masticados de Amadeus.
 188+ 9335
 189+ 9335 06 79        	ld b,121												; $0079, 121d.
 190+ 9337
 191+ 9337 C5           1 push bc
 192+ 9338 CD 05 97     	call Draw
 193+ 933B CD C7 8F     	call Guarda_movimiento_masticado
 194+ 933E
 195+ 933E CD 79 9A     	call Mov_right
 196+ 9341 CD 79 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9344
 198+ 9344 C1           	pop bc
 199+ 9345 10 F0        	djnz 1B
 200+ 9347
 201+ 9347              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9347
 203+ 9347              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9347              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9347
 206+ 9347 2A C8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 934A 01 08 00     	ld bc,8
 208+ 934D A7           	and a
 209+ 934E ED 42        	sbc hl,bc
 210+ 9350 22 C8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9353
 212+ 9353 C9           	ret
 213+ 9354
 214+ 9354              ; ---------------------------------------------------------------------
 215+ 9354              ;
 216+ 9354              ;	10/02/24
 217+ 9354              ;
 218+ 9354              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9354              ;
 220+ 9354              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9354
 222+ 9354              Definicion_segun_tipo
 223+ 9354
 224+ 9354 CD 3A 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9357 21 DB 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 935A CD 42 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 935D C9           	ret
 228+ 935E
 229+ 935E              ; ---------------------------------------------------------------------
 230+ 935E              ;
 231+ 935E              ;	6/7/24
 232+ 935E
 233+ 935E
 234+ 935E              Store_Restore_cajas
 235+ 935E
 236+ 935E ED 5B 01 8C  	ld de,(Puntero_store_caja)
 237+ 9362 CD 79 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9365 CD EC 90     	call Incrementa_punteros_de_cajas
 239+ 9368 C9           	ret
 240+ 9369
 241+ 9369              ; ---------------------------------------------------------------------
 242+ 9369              ;
 243+ 9369              ;	23/6/24
 244+ 9369              ;
 245+ 9369              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9369              ;
 247+ 9369              ;	MODIFY: HL
 248+ 9369
 249+ 9369              Limpiamos_bandeja_DRAW
 250+ 9369
 251+ 9369 ED 73 0E 8C  	ld (Stack),sp
 252+ 936D 31 E6 8B     	ld sp,Vel_left
 253+ 9370
 254+ 9370 AF           	xor a
 255+ 9371 67           	ld h,a
 256+ 9372 6F           	ld l,a
 257+ 9373
 258+ 9373 E5           	push hl
 259+ 9374 E5           	push hl
 260+ 9375 E5           	push hl
 261+ 9376 E5           	push hl
 262+ 9377 E5           	push hl
 263+ 9378 E5           	push hl
 264+ 9379 E5           	push hl
 265+ 937A E5           	push hl
 266+ 937B E5           	push hl
 267+ 937C E5           	push hl
 268+ 937D E5           	push hl
 269+ 937E E5           	push hl
 270+ 937F E5           	push hl
 271+ 9380 E5           	push hl
 272+ 9381 E5           	push hl
 273+ 9382 E5           	push hl
 274+ 9383 E5           	push hl
 275+ 9384 E5           	push hl
 276+ 9385
 277+ 9385 33           	inc sp
 278+ 9386
 279+ 9386 E5           	push hl
 280+ 9387 ED 7B 0E 8C  	ld sp,(Stack)
 281+ 938B
 282+ 938B C9           	ret
 283+ 938C
 284+ 938C              ; ---------------------------------------------------------------------
 285+ 938C              ;
 286+ 938C              ;	24/03/24
 287+ 938C
 288+ 938C 2A CA 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 938F 2B           	dec hl
 290+ 9390 22 CA 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9393 C9           	ret
 292+ 9394
 293+ 9394              ; ---------------------------------------------------------------------
 294+ 9394              ;
 295+ 9394              ;	8/5/24
 296+ 9394
 297+ 9394              Reinicia_entidad_maliciosa
 298+ 9394
 299+ 9394              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9394
 301+ 9394 CD E6 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9397 CD F3 9E     	call Transfiere_datos_de_contadores
 303+ 939A
 304+ 939A              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 939A
 306+ 939A 3A C1 8B     	ld a,(Tipo)
 307+ 939D CD 54 93     	call Definicion_segun_tipo
 308+ 93A0
 309+ 93A0 E5           	push hl
 310+ 93A1 DD E1        	pop ix
 311+ 93A3
 312+ 93A3 DD 6E 0B     	ld l,(ix+11)
 313+ 93A6 DD 66 0C     	ld h,(ix+12)
 314+ 93A9
 315+ 93A9 22 C8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93AC
 317+ 93AC CD EF 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93AF
 319+ 93AF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93AF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93AF              ; Ejemplos.
 322+ 93AF
 323+ 93AF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93AF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93AF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93AF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93AF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93AF
 329+ 93AF 21 C4 8B     	ld hl,Contador_de_vueltas
 330+ 93B2 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93B4
 332+ 93B4 7E           	ld a,(hl)
 333+ 93B5 CB 2F        	sra a
 334+ 93B7 CB 2F        	sra a
 335+ 93B9
 336+ 93B9 32 CC 8B     	ld (Velocidad),a
 337+ 93BC
 338+ 93BC 3E 40        	ld a,$40
 339+ 93BE BE           	cp (hl)
 340+ 93BF C0           	ret nz
 341+ 93C0
 342+ 93C0              ; Límitador.
 343+ 93C0
 344+ 93C0              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93C0
 346+ 93C0 CB 2E        	sra (hl)
 347+ 93C2 21 CC 8B     	ld hl,Velocidad
 348+ 93C5 CB 2E        	sra (hl)
 349+ 93C7
 350+ 93C7 C9           	ret
 351+ 93C8
 352+ 93C8              ; ---------------------------------------------------------------------
 353+ 93C8              ;
 354+ 93C8              ;	22/01/24
 355+ 93C8
 356+ 93C8 21 32 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93CB CB 46        	bit 0,(hl)
 358+ 93CD 20 0D        	jr nz,1F
 359+ 93CF CB 4E        	bit 1,(hl)
 360+ 93D1 20 0C        	jr nz,2F
 361+ 93D3 CB 56        	bit 2,(hl)
 362+ 93D5 20 0B        	jr nz,3F
 363+ 93D7 CB 5E        	bit 3,(hl)
 364+ 93D9 20 0A        	jr nz,4F
 365+ 93DB C9           	ret
 366+ 93DC
 367+ 93DC CB E6        1 set 4,(hl)
 368+ 93DE C9           	ret
 369+ 93DF CB EE        2 set 5,(hl)
 370+ 93E1 C9           	ret
 371+ 93E2 CB F6        3 set 6,(hl)
 372+ 93E4 C9           	ret
 373+ 93E5 CB FE        4 set 7,(hl)
 374+ 93E7 C9           	ret
 375+ 93E8
 376+ 93E8              ; ---------------------------------------------------------------------
 377+ 93E8              ;
 378+ 93E8              ;	23/01/24
 379+ 93E8              ;
 380+ 93E8              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93E8              ;
 382+ 93E8              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93E8              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93E8              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93E8              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93E8
 387+ 93E8              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93E8
 389+ 93E8 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93E9 3D           	dec a
 391+ 93EA 20 06        	jr nz,1F
 392+ 93EC
 393+ 93EC              ; --- Tipo_1
 394+ 93EC
 395+ 93EC 21 32 8C     	ld hl,Ctrl_4
 396+ 93EF CB C6        	set 0,(hl)
 397+ 93F1 C9           	ret
 398+ 93F2
 399+ 93F2 3D           1 dec a
 400+ 93F3 20 06        	jr nz,2F
 401+ 93F5
 402+ 93F5              ; --- Tipo_2
 403+ 93F5
 404+ 93F5 21 32 8C     	ld hl,Ctrl_4
 405+ 93F8 CB CE        	set 1,(hl)
 406+ 93FA C9           	ret
 407+ 93FB
 408+ 93FB 3D           2 dec a
 409+ 93FC 20 06        	jr nz,3F
 410+ 93FE
 411+ 93FE              ; --- Tipo_3
 412+ 93FE
 413+ 93FE 21 32 8C     	ld hl,Ctrl_4
 414+ 9401 CB D6        	set 2,(hl)
 415+ 9403 C9           	ret
 416+ 9404
 417+ 9404              ; --- Tipo_3
 418+ 9404
 419+ 9404 21 32 8C     3 ld hl,Ctrl_4
 420+ 9407 CB D6        	set 2,(hl)
 421+ 9409 C9           	ret
 422+ 940A
 423+ 940A              ; ---------------------------------------------------------------------
 424+ 940A              ;
 425+ 940A              ;	22/01/24
 426+ 940A
 427+ 940A 21 32 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 940D CB 46        	bit 0,(hl)
 429+ 940F 20 0E        	jr nz,1F
 430+ 9411
 431+ 9411 CB 4E        	bit 1,(hl)
 432+ 9413 20 10        	jr nz,2F
 433+ 9415
 434+ 9415 CB 56        	bit 2,(hl)
 435+ 9417 20 12        	jr nz,3F
 436+ 9419
 437+ 9419 CB 5E        	bit 3,(hl)
 438+ 941B 20 14        	jr nz,4F
 439+ 941D 18 19        	jr 6F
 440+ 941F
 441+ 941F              ; Entidad_de_Tipo_1.
 442+ 941F
 443+ 941F CB 66        1 bit 4,(hl)
 444+ 9421 28 15        	jr z,6F
 445+ 9423 18 10        	jr 5F
 446+ 9425
 447+ 9425              ; Entidad_de_Tipo_2.
 448+ 9425
 449+ 9425 CB 6E        2 bit 5,(hl)
 450+ 9427 28 0F        	jr z,6F
 451+ 9429 18 0A        	jr 5F
 452+ 942B
 453+ 942B              ; Entidad_de_Tipo_3.
 454+ 942B
 455+ 942B CB 76        3 bit 6,(hl)
 456+ 942D 28 09        	jr z,6F
 457+ 942F 18 04        	jr 5F
 458+ 9431
 459+ 9431              ; Entidad_de_Tipo_4.
 460+ 9431
 461+ 9431 CB 7E        4 bit 7,(hl)
 462+ 9433 28 03        	jr z,6F
 463+ 9435
 464+ 9435              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9435
 466+ 9435 AF           5 xor a
 467+ 9436 3C           	inc a
 468+ 9437 C9           	ret
 469+ 9438
 470+ 9438              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9438
 472+ 9438 AF           6 xor a
 473+ 9439 C9           	ret
 474+ 943A
 475+ 943A              ;	------------------------------------------------------------------------------------
 476+ 943A              ;
 477+ 943A              ;	12/01/24
 478+ 943A              ;
 479+ 943A              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 943A              ;
 481+ 943A              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 943A              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 943A
 484+ 943A CB 27        Calcula_salto_en_BC sla a
 485+ 943C D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 943E 4F           	ld c,a
 487+ 943F 06 00        	ld b,0
 488+ 9441 C9           	ret
 489+ 9442
 490+ 9442              ; ------------------------------------------------------------------
 491+ 9442              ;
 492+ 9442              ;	19/1/24
 493+ 9442              ;
 494+ 9442              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9442              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9442
 497+ 9442 A7           Situa_en_datos_de_definicion and a
 498+ 9443 ED 4A        	adc hl,bc
 499+ 9445 CD 9E 90     	call Extrae_address
 500+ 9448 22 0C 8C         ld (Datos_de_entidad),hl
 501+ 944B C9           	ret
 502+ 944C
 503+ 944C              ; ------------------------------------------------------------------
 504+ 944C
 505+ 944C              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 944C              ; 	inc de
 507+ 944C              ; 	inc de
 508+ 944C              ; 	ex de,hl
 509+ 944C              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 944C              ; 	ret
 511+ 944C
 512+ 944C              ; ----------------------------------------------------------------------------------------------------------
 513+ 944C              ;
 514+ 944C              ;	24/6/24
 515+ 944C              ;
 516+ 944C              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 944C              ;	_ de entidad.
 518+ 944C              ;
 519+ 944C              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 944C              ;
 521+ 944C              ;
 522+ 944C              ;	MODIFICA: HL,DE y BC
 523+ 944C
 524+ 944C
 525+ 944C              Definicion_de_entidad_a_bandeja_DRAW
 526+ 944C
 527+ 944C 11 C1 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 944F 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9450 12           	ld (de),a
 530+ 9451 23           	inc hl
 531+ 9452              ;
 532+ 9452 11 CF 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9455 01 02 00     	ld bc,2
 534+ 9458 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 945A              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 945A 11 C4 8B     	ld de,Contador_de_vueltas
 537+ 945D 7E           	ld a,(hl)
 538+ 945E 12           	ld (de),a
 539+ 945F 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9460
 541+ 9460 11 D6 8B     	ld de,Indice_Sprite_der
 542+ 9463 01 04 00     	ld bc,4
 543+ 9466 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9468
 545+ 9468 11 DE 8B     	ld de,Posicion_inicio
 546+ 946B 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 946E ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9470
 549+ 9470 11 C8 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9473 01 02 00     	ld bc,2
 551+ 9476 ED B0        	ldir
 552+ 9478
 553+ 9478 C9           	ret
 554+ 9479
 555+ 9479              ; ----------------------------------------------------------------------------------------------------------
 556+ 9479              ;
 557+ 9479              ;	1/8/24
 558+ 9479              ;
 559+ 9479
 560+ 9479              Parametros_de_bandeja_DRAW_a_caja
 561+ 9479
 562+ 9479 21 C1 8B     	ld hl,Bandeja_DRAW
 563+ 947C 01 0C 00     	ld bc,12
 564+ 947F ED B0        	ldir
 565+ 9481 C9           	ret
 566+ 9482
 567+ 9482              ;---------------------------------------------------------------------------------------------------------------
 568+ 9482              ;
 569+ 9482              ;	5/1/24
 570+ 9482              ;
 571+ 9482              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9482              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9482              ;
 574+ 9482              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9482              ;
 576+ 9482              ;	(Numero_parcial_de_entidades)="7".
 577+ 9482              ;
 578+ 9482              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9482              ;
 580+ 9482              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9482              ;
 582+ 9482              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9482              ;	MODIFICA: A y B.
 584+ 9482              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9482
 586+ 9482              Inicializa_Numero_parcial_de_entidades
 587+ 9482
 588+ 9482              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9482
 590+ 9482 3A 07 8C     	ld a,(Numero_de_entidades)
 591+ 9485 A7           	and a
 592+ 9486
 593+ 9486              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9486              ;	jr z,$
 595+ 9486              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9486
 597+ 9486 20 03        	jr nz,3F
 598+ 9488
 599+ 9488              ; ---------- ---------- ----------
 600+ 9488
 601+ 9488              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9488              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9488
 604+ 9488 CD 7E 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 948B
 606+ 948B              ; ---------- ---------- ----------
 607+ 948B
 608+ 948B 3A 07 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 948E FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9490 38 08        	jr c,1F
 611+ 9492
 612+ 9492              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9492              ; Actualizamos variables.
 614+ 9492
 615+ 9492 3E 07        	ld a,7
 616+ 9494 32 08 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9497 47           	ld b,a
 618+ 9498 18 04        	jr 2F
 619+ 949A
 620+ 949A              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 949A              ; (Numero_de_entidades)="0".
 622+ 949A
 623+ 949A 32 08 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 949D 47           	ld b,a
 625+ 949E C9           2 ret
 626+ 949F
# file closed: Rutinas_de_inicio_y_niveles.asm
2060  949F              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 949F              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 949F              ;
   3+ 949F              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 949F              ;
   5+ 949F              ; *****************************************************************************************************************************************************************************************
   6+ 949F              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 949F
   8+ 949F 7C           calcula_tercio ld a,h
   9+ 94A0 E6 18        	and $18
  10+ 94A2 CB 2F        	sra a
  11+ 94A4 CB 2F        	sra a
  12+ 94A6 CB 2F        	sra a
  13+ 94A8 C9           	ret
  14+ 94A9
# file closed: calcula_tercio.asm
2061  94A9              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94A9              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94A9              ;
   3+ 94A9              ;
   4+ 94A9              ;	CLS.
   5+ 94A9              ;
   6+ 94A9              ;	Limpia la pantalla y define sus atributos.
   7+ 94A9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94A9              ;
   9+ 94A9              ;	COLORES: 0 ..... NEGRO
  10+ 94A9              ;    		 1 ..... AZUL
  11+ 94A9              ; 			 2 ..... ROJO
  12+ 94A9              ;			 3 ..... MAGENTA
  13+ 94A9              ; 			 4 ..... VERDE
  14+ 94A9              ; 			 5 ..... CIAN
  15+ 94A9              ;			 6 ..... AMARILLO
  16+ 94A9              ; 			 7 ..... BLANCO
  17+ 94A9              ;
  18+ 94A9              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94A9              ;
  20+ 94A9              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94A9
  22+ 94A9
  23+ 94A9 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94AC 11 01 40     	LD DE,$4001
  25+ 94AF 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94B2 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94B4 ED B0        	LDIR
  28+ 94B6 01 FF 02     	LD BC,767
  29+ 94B9 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94BA ED B0        	LDIR
  31+ 94BC C9           	ret
  32+ 94BD
# file closed: Cls.asm
2062  94BD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94BD              ; ------------------------------------------------------------------------
   2+ 94BD              ;
   3+ 94BD              ;	30/1/24
   4+ 94BD              ;
   5+ 94BD              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94BD              ;	Fila superior "0", Columna izquierda "0".
   7+ 94BD              ;
   8+ 94BD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94BD              ;
  10+ 94BD              ;	Modifica: A,BC y DE.
  11+ 94BD
  12+ 94BD 7D           Genera_coordenadas ld a,l
  13+ 94BE E6 1F        	and $1f
  14+ 94C0 32 C2 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94C3
  16+ 94C3 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94C4 FE 40        	cp $40
  18+ 94C6 38 1C        	jr c,4F
  19+ 94C8
  20+ 94C8 CD 9F 94     	call calcula_tercio
  21+ 94CB 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94CC
  23+ 94CC 1E 00        	ld e,0
  24+ 94CE 7D           	ld a,l
  25+ 94CF E6 E0        	and $e0
  26+ 94D1 28 01        	jr z,1F
  27+ 94D3 04           	inc b
  28+ 94D4
  29+ 94D4 04           1 inc b
  30+ 94D5 05           	dec b
  31+ 94D6 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94D8              ;														; _ , salimos.
  33+ 94D8 1C           3 inc e
  34+ 94D9 D6 20        	sub 32
  35+ 94DB 20 FB        	jr nz,3B
  36+ 94DD 10 F5        	djnz 1B
  37+ 94DF
  38+ 94DF 7B           2 ld a,e
  39+ 94E0 32 C3 8B     	ld (Coordenada_y),a
  40+ 94E3 C9           	ret
  41+ 94E4
  42+ 94E4 AF           4 xor a
  43+ 94E5 32 C3 8B     	ld (Coordenada_y),a
  44+ 94E8 C9           	ret
  45+ 94E9
# file closed: Genera_coordenadas.asm
2063  94E9              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94E9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94E9              ;
   3+ 94E9              ;	20/09/24
   4+ 94E9              ;
   5+ 94E9              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94E9              ;   DE contiene Puntero_objeto.
   7+ 94E9              ;   IX contiene el Puntero de impresión.
   8+ 94E9
   9+ 94E9              Genera_datos_de_impresion
  10+ 94E9
  11+ 94E9 ED 73 0E 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94ED
  13+ 94ED 31 C8 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94F0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94F2
  16+ 94F2 2A 2B 8C         ld hl,(Scanlines_album_SP)
  17+ 94F5
  18+ 94F5 3E 05            ld a,5
  19+ 94F7 85               add l
  20+ 94F8 6F               ld l,a
  21+ 94F9
  22+ 94F9 F9               ld sp,hl
  23+ 94FA 22 2B 8C         ld (Scanlines_album_SP),hl
  24+ 94FD
  25+ 94FD 21 00 00         ld hl,0
  26+ 9500
  27+ 9500 DD E5            push ix
  28+ 9502 3B               dec sp
  29+ 9503 ED 7A            adc hl,sp
  30+ 9505 D5               push de
  31+ 9506
  32+ 9506              ; Recuperamos SP.
  33+ 9506
  34+ 9506 ED 7B 0E 8C      ld sp,(Stack)
  35+ 950A
  36+ 950A E5               push hl
  37+ 950B F1               pop af
  38+ 950C 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 950D
  40+ 950D              ; Tenemos el encabezado listo.
  41+ 950D              ; Preparamos registros para generar los scanlines.
  42+ 950D
  43+ 950D DD E5            push ix
  44+ 950F E1               pop hl                                          ; 1er scanline en HL.
  45+ 9510
  46+ 9510 ED 5B 2B 8C      ld de,(Scanlines_album_SP)
  47+ 9514
  48+ 9514              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9514              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9514
  51+ 9514 7C               ld a,h
  52+ 9515 FE 50            cp $50
  53+ 9517 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9519
  55+ 9519 20 05            jr nz,2F
  56+ 951B
  57+ 951B 7D               ld a,l
  58+ 951C FE E0            cp $e0
  59+ 951E 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9520
  61+ 9520 7D           2 ld a,l
  62+ 9521 FE C0            cp $c0
  63+ 9523 D2 B9 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9526
  65+ 9526              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9526
  67+ 9526 CD B7 99         call NextScan
  68+ 9529 EB               ex de,hl
  69+ 952A
  70+ 952A 73               ld (hl),e
  71+ 952B 23               inc hl
  72+ 952C 72               ld (hl),d
  73+ 952D 23               inc hl
  74+ 952E
  75+ 952E EB               ex de,hl
  76+ 952F
  77+ 952F CD B7 99         call NextScan
  78+ 9532 EB               ex de,hl
  79+ 9533
  80+ 9533 73               ld (hl),e
  81+ 9534 23               inc hl
  82+ 9535 72               ld (hl),d
  83+ 9536 23               inc hl
  84+ 9537
  85+ 9537 EB               ex de,hl
  86+ 9538
  87+ 9538 CD B7 99         call NextScan
  88+ 953B EB               ex de,hl
  89+ 953C
  90+ 953C 73               ld (hl),e
  91+ 953D 23               inc hl
  92+ 953E 72               ld (hl),d
  93+ 953F 23               inc hl
  94+ 9540
  95+ 9540 EB               ex de,hl
  96+ 9541
  97+ 9541 CD B7 99         call NextScan
  98+ 9544 EB               ex de,hl
  99+ 9545
 100+ 9545 73               ld (hl),e
 101+ 9546 23               inc hl
 102+ 9547 72               ld (hl),d
 103+ 9548 23               inc hl
 104+ 9549
 105+ 9549 EB               ex de,hl
 106+ 954A
 107+ 954A CD B7 99         call NextScan
 108+ 954D EB               ex de,hl
 109+ 954E
 110+ 954E 73               ld (hl),e
 111+ 954F 23               inc hl
 112+ 9550 72               ld (hl),d
 113+ 9551 23               inc hl
 114+ 9552
 115+ 9552 EB               ex de,hl
 116+ 9553
 117+ 9553 CD B7 99         call NextScan
 118+ 9556 EB               ex de,hl
 119+ 9557
 120+ 9557 73               ld (hl),e
 121+ 9558 23               inc hl
 122+ 9559 72               ld (hl),d
 123+ 955A 23               inc hl
 124+ 955B
 125+ 955B EB               ex de,hl
 126+ 955C
 127+ 955C CD B7 99         call NextScan
 128+ 955F EB               ex de,hl
 129+ 9560
 130+ 9560 73               ld (hl),e
 131+ 9561 23               inc hl
 132+ 9562 72               ld (hl),d
 133+ 9563 23               inc hl
 134+ 9564
 135+ 9564 EB               ex de,hl
 136+ 9565
 137+ 9565 CD B7 99         call NextScan
 138+ 9568 EB               ex de,hl
 139+ 9569
 140+ 9569 73               ld (hl),e
 141+ 956A 23               inc hl
 142+ 956B 72               ld (hl),d
 143+ 956C 23               inc hl
 144+ 956D
 145+ 956D EB               ex de,hl
 146+ 956E
 147+ 956E CD B7 99         call NextScan
 148+ 9571 EB               ex de,hl
 149+ 9572
 150+ 9572 73               ld (hl),e
 151+ 9573 23               inc hl
 152+ 9574 72               ld (hl),d
 153+ 9575 23               inc hl
 154+ 9576
 155+ 9576 EB               ex de,hl
 156+ 9577
 157+ 9577 CD B7 99         call NextScan
 158+ 957A EB               ex de,hl
 159+ 957B
 160+ 957B 73               ld (hl),e
 161+ 957C 23               inc hl
 162+ 957D 72               ld (hl),d
 163+ 957E 23               inc hl
 164+ 957F
 165+ 957F EB               ex de,hl
 166+ 9580
 167+ 9580 CD B7 99         call NextScan
 168+ 9583 EB               ex de,hl
 169+ 9584
 170+ 9584 73               ld (hl),e
 171+ 9585 23               inc hl
 172+ 9586 72               ld (hl),d
 173+ 9587 23               inc hl
 174+ 9588
 175+ 9588 EB               ex de,hl
 176+ 9589
 177+ 9589 CD B7 99         call NextScan
 178+ 958C EB               ex de,hl
 179+ 958D
 180+ 958D 73               ld (hl),e
 181+ 958E 23               inc hl
 182+ 958F 72               ld (hl),d
 183+ 9590 23               inc hl
 184+ 9591
 185+ 9591 EB               ex de,hl
 186+ 9592
 187+ 9592 CD B7 99         call NextScan
 188+ 9595 EB               ex de,hl
 189+ 9596
 190+ 9596 73               ld (hl),e
 191+ 9597 23               inc hl
 192+ 9598 72               ld (hl),d
 193+ 9599 23               inc hl
 194+ 959A
 195+ 959A EB               ex de,hl
 196+ 959B
 197+ 959B CD B7 99         call NextScan
 198+ 959E EB               ex de,hl
 199+ 959F
 200+ 959F 73               ld (hl),e
 201+ 95A0 23               inc hl
 202+ 95A1 72               ld (hl),d
 203+ 95A2 23               inc hl
 204+ 95A3
 205+ 95A3 EB               ex de,hl
 206+ 95A4
 207+ 95A4 CD B7 99         call NextScan
 208+ 95A7 EB               ex de,hl
 209+ 95A8
 210+ 95A8              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95A8              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95A8              ;   _ generar sus scanlines.
 213+ 95A8
 214+ 95A8              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95A8
 216+ 95A8 73               ld (hl),e
 217+ 95A9 23               inc hl
 218+ 95AA 72               ld (hl),d
 219+ 95AB 23               inc hl
 220+ 95AC
 221+ 95AC              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95AC
 223+ 95AC 22 2B 8C         ld (Scanlines_album_SP),hl
 224+ 95AF
 225+ 95AF EB               ex de,hl
 226+ 95B0
 227+ 95B0              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95B0
 229+ 95B0              ;    call NextScan
 230+ 95B0              ;    call NextScan
 231+ 95B0
 232+ 95B0 22 36 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95B3
 234+ 95B3              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95B3
 236+ 95B3 08               ex af,af
 237+ 95B4
 238+ 95B4 F5               push af
 239+ 95B5 E1               pop hl
 240+ 95B6
 241+ 95B6 36 10            ld (hl),16
 242+ 95B8
 243+ 95B8 C9               ret
 244+ 95B9
 245+ 95B9              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95B9
 247+ 95B9              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95B9
 249+ 95B9 3E 57            ld a,$57
 250+ 95BB 94               sub h
 251+ 95BC 47               ld b,a
 252+ 95BD
 253+ 95BD 3E DF            ld a,$df
 254+ 95BF BD               cp l
 255+ 95C0 38 04            jr c,1F
 256+ 95C2
 257+ 95C2 3E 08            ld a,8
 258+ 95C4 80               add b
 259+ 95C5 47               ld b,a
 260+ 95C6
 261+ 95C6              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95C6              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95C6
 264+ 95C6 48           1 ld c,b
 265+ 95C7 0C               inc c
 266+ 95C8
 267+ 95C8 04               inc b
 268+ 95C9 05               dec b
 269+ 95CA 20 02            jr nz,3F
 270+ 95CC
 271+ 95CC 18 0B            jr 6F
 272+ 95CE
 273+ 95CE CD B7 99     3 call NextScan
 274+ 95D1 EB               ex de,hl
 275+ 95D2
 276+ 95D2 73               ld (hl),e
 277+ 95D3 23               inc hl
 278+ 95D4 72               ld (hl),d
 279+ 95D5 23               inc hl
 280+ 95D6
 281+ 95D6 EB               ex de,hl
 282+ 95D7 10 F5            djnz 3B
 283+ 95D9
 284+ 95D9 ED 53 2B 8C  6 ld (Scanlines_album_SP),de
 285+ 95DD
 286+ 95DD 08           5 ex af,af
 287+ 95DE F5               push af
 288+ 95DF E1               pop hl
 289+ 95E0
 290+ 95E0 71               ld (hl),c
 291+ 95E1
 292+ 95E1 C9               ret
 293+ 95E2
# file closed: Genera_datos_de_impresion.asm
2064  95E2              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95E2              ; -----------------------------------------------------------------------------
   2+ 95E2              ;
   3+ 95E2              ;   11/03/24
   4+ 95E2              ;
   5+ 95E2
   6+ 95E2              Pinta_Sprites
   7+ 95E2
   8+ 95E2              ;    ld hl,(Scanlines_album_SP)
   9+ 95E2              ;    call Extrae_address
  10+ 95E2
  11+ 95E2              ;    inc h
  12+ 95E2              ;    dec h
  13+ 95E2              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95E2
  15+ 95E2 ED 73 0E 8C      ld (Stack),sp
  16+ 95E6
  17+ 95E6 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95E7              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95E7 2C               inc l
  20+ 95E8 2C               inc l
  21+ 95E9
  22+ 95E9 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95EA
  24+ 95EA 2C               inc l
  25+ 95EB F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95EC
  27+ 95EC              ;   Seleccionamos rutina de impresión:
  28+ 95EC
  29+ 95EC 3E 10            ld a,16
  30+ 95EE B8               cp b
  31+ 95EF C2 EB 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95F2
  33+ 95F2              ;   Rutinas:
  34+ 95F2
  35+ 95F2              Pinta_rapido    ;   1520 t/states.
  36+ 95F2
  37+ 95F2 E1               pop hl
  38+ 95F3
  39+ 95F3 1A               ld a,(de)
  40+ 95F4 AE               xor (hl)
  41+ 95F5 77               ld (hl),a
  42+ 95F6 2C               inc l
  43+ 95F7 1C               inc e
  44+ 95F8 1A               ld a,(de)
  45+ 95F9 AE               xor (hl)
  46+ 95FA 77               ld (hl),a
  47+ 95FB 2C               inc l
  48+ 95FC 1C               inc e
  49+ 95FD 1A               ld a,(de)
  50+ 95FE AE               xor (hl)
  51+ 95FF 77               ld (hl),a
  52+ 9600 13               inc de
  53+ 9601
  54+ 9601 E1               pop hl
  55+ 9602
  56+ 9602 1A               ld a,(de)
  57+ 9603 AE               xor (hl)
  58+ 9604 77               ld (hl),a
  59+ 9605 2C               inc l
  60+ 9606 1C               inc e
  61+ 9607 1A               ld a,(de)
  62+ 9608 AE               xor (hl)
  63+ 9609 77               ld (hl),a
  64+ 960A 2C               inc l
  65+ 960B 1C               inc e
  66+ 960C 1A               ld a,(de)
  67+ 960D AE               xor (hl)
  68+ 960E 77               ld (hl),a
  69+ 960F 13               inc de
  70+ 9610
  71+ 9610 E1               pop hl
  72+ 9611
  73+ 9611 1A               ld a,(de)
  74+ 9612 AE               xor (hl)
  75+ 9613 77               ld (hl),a
  76+ 9614 2C               inc l
  77+ 9615 1C               inc e
  78+ 9616 1A               ld a,(de)
  79+ 9617 AE               xor (hl)
  80+ 9618 77               ld (hl),a
  81+ 9619 2C               inc l
  82+ 961A 1C               inc e
  83+ 961B 1A               ld a,(de)
  84+ 961C AE               xor (hl)
  85+ 961D 77               ld (hl),a
  86+ 961E 13               inc de
  87+ 961F
  88+ 961F E1               pop hl
  89+ 9620
  90+ 9620 1A               ld a,(de)
  91+ 9621 AE               xor (hl)
  92+ 9622 77               ld (hl),a
  93+ 9623 2C               inc l
  94+ 9624 1C               inc e
  95+ 9625 1A               ld a,(de)
  96+ 9626 AE               xor (hl)
  97+ 9627 77               ld (hl),a
  98+ 9628 2C               inc l
  99+ 9629 1C               inc e
 100+ 962A 1A               ld a,(de)
 101+ 962B AE               xor (hl)
 102+ 962C 77               ld (hl),a
 103+ 962D 13               inc de
 104+ 962E
 105+ 962E E1               pop hl
 106+ 962F
 107+ 962F 1A               ld a,(de)
 108+ 9630 AE               xor (hl)
 109+ 9631 77               ld (hl),a
 110+ 9632 2C               inc l
 111+ 9633 1C               inc e
 112+ 9634 1A               ld a,(de)
 113+ 9635 AE               xor (hl)
 114+ 9636 77               ld (hl),a
 115+ 9637 2C               inc l
 116+ 9638 1C               inc e
 117+ 9639 1A               ld a,(de)
 118+ 963A AE               xor (hl)
 119+ 963B 77               ld (hl),a
 120+ 963C 13               inc de
 121+ 963D
 122+ 963D E1               pop hl
 123+ 963E
 124+ 963E 1A               ld a,(de)
 125+ 963F AE               xor (hl)
 126+ 9640 77               ld (hl),a
 127+ 9641 2C               inc l
 128+ 9642 1C               inc e
 129+ 9643 1A               ld a,(de)
 130+ 9644 AE               xor (hl)
 131+ 9645 77               ld (hl),a
 132+ 9646 2C               inc l
 133+ 9647 1C               inc e
 134+ 9648 1A               ld a,(de)
 135+ 9649 AE               xor (hl)
 136+ 964A 77               ld (hl),a
 137+ 964B 13               inc de
 138+ 964C
 139+ 964C E1               pop hl
 140+ 964D
 141+ 964D 1A               ld a,(de)
 142+ 964E AE               xor (hl)
 143+ 964F 77               ld (hl),a
 144+ 9650 2C               inc l
 145+ 9651 1C               inc e
 146+ 9652 1A               ld a,(de)
 147+ 9653 AE               xor (hl)
 148+ 9654 77               ld (hl),a
 149+ 9655 2C               inc l
 150+ 9656 1C               inc e
 151+ 9657 1A               ld a,(de)
 152+ 9658 AE               xor (hl)
 153+ 9659 77               ld (hl),a
 154+ 965A 13               inc de
 155+ 965B
 156+ 965B E1               pop hl
 157+ 965C
 158+ 965C 1A               ld a,(de)
 159+ 965D AE               xor (hl)
 160+ 965E 77               ld (hl),a
 161+ 965F 2C               inc l
 162+ 9660 1C               inc e
 163+ 9661 1A               ld a,(de)
 164+ 9662 AE               xor (hl)
 165+ 9663 77               ld (hl),a
 166+ 9664 2C               inc l
 167+ 9665 1C               inc e
 168+ 9666 1A               ld a,(de)
 169+ 9667 AE               xor (hl)
 170+ 9668 77               ld (hl),a
 171+ 9669 13               inc de
 172+ 966A
 173+ 966A E1               pop hl
 174+ 966B
 175+ 966B 1A               ld a,(de)
 176+ 966C AE               xor (hl)
 177+ 966D 77               ld (hl),a
 178+ 966E 2C               inc l
 179+ 966F 1C               inc e
 180+ 9670 1A               ld a,(de)
 181+ 9671 AE               xor (hl)
 182+ 9672 77               ld (hl),a
 183+ 9673 2C               inc l
 184+ 9674 1C               inc e
 185+ 9675 1A               ld a,(de)
 186+ 9676 AE               xor (hl)
 187+ 9677 77               ld (hl),a
 188+ 9678 13               inc de
 189+ 9679
 190+ 9679 E1               pop hl
 191+ 967A
 192+ 967A 1A               ld a,(de)
 193+ 967B AE               xor (hl)
 194+ 967C 77               ld (hl),a
 195+ 967D 2C               inc l
 196+ 967E 1C               inc e
 197+ 967F 1A               ld a,(de)
 198+ 9680 AE               xor (hl)
 199+ 9681 77               ld (hl),a
 200+ 9682 2C               inc l
 201+ 9683 1C               inc e
 202+ 9684 1A               ld a,(de)
 203+ 9685 AE               xor (hl)
 204+ 9686 77               ld (hl),a
 205+ 9687 13               inc de
 206+ 9688
 207+ 9688 E1               pop hl
 208+ 9689
 209+ 9689 1A               ld a,(de)
 210+ 968A AE               xor (hl)
 211+ 968B 77               ld (hl),a
 212+ 968C 2C               inc l
 213+ 968D 1C               inc e
 214+ 968E 1A               ld a,(de)
 215+ 968F AE               xor (hl)
 216+ 9690 77               ld (hl),a
 217+ 9691 2C               inc l
 218+ 9692 1C               inc e
 219+ 9693 1A               ld a,(de)
 220+ 9694 AE               xor (hl)
 221+ 9695 77               ld (hl),a
 222+ 9696 13               inc de
 223+ 9697
 224+ 9697 E1               pop hl
 225+ 9698
 226+ 9698 1A               ld a,(de)
 227+ 9699 AE               xor (hl)
 228+ 969A 77               ld (hl),a
 229+ 969B 2C               inc l
 230+ 969C 1C               inc e
 231+ 969D 1A               ld a,(de)
 232+ 969E AE               xor (hl)
 233+ 969F 77               ld (hl),a
 234+ 96A0 2C               inc l
 235+ 96A1 1C               inc e
 236+ 96A2 1A               ld a,(de)
 237+ 96A3 AE               xor (hl)
 238+ 96A4 77               ld (hl),a
 239+ 96A5 13               inc de
 240+ 96A6
 241+ 96A6 E1               pop hl
 242+ 96A7
 243+ 96A7 1A               ld a,(de)
 244+ 96A8 AE               xor (hl)
 245+ 96A9 77               ld (hl),a
 246+ 96AA 2C               inc l
 247+ 96AB 1C               inc e
 248+ 96AC 1A               ld a,(de)
 249+ 96AD AE               xor (hl)
 250+ 96AE 77               ld (hl),a
 251+ 96AF 2C               inc l
 252+ 96B0 1C               inc e
 253+ 96B1 1A               ld a,(de)
 254+ 96B2 AE               xor (hl)
 255+ 96B3 77               ld (hl),a
 256+ 96B4 13               inc de
 257+ 96B5
 258+ 96B5 E1               pop hl
 259+ 96B6
 260+ 96B6 1A               ld a,(de)
 261+ 96B7 AE               xor (hl)
 262+ 96B8 77               ld (hl),a
 263+ 96B9 2C               inc l
 264+ 96BA 1C               inc e
 265+ 96BB 1A               ld a,(de)
 266+ 96BC AE               xor (hl)
 267+ 96BD 77               ld (hl),a
 268+ 96BE 2C               inc l
 269+ 96BF 1C               inc e
 270+ 96C0 1A               ld a,(de)
 271+ 96C1 AE               xor (hl)
 272+ 96C2 77               ld (hl),a
 273+ 96C3 13               inc de
 274+ 96C4
 275+ 96C4 E1               pop hl
 276+ 96C5
 277+ 96C5 1A               ld a,(de)
 278+ 96C6 AE               xor (hl)
 279+ 96C7 77               ld (hl),a
 280+ 96C8 2C               inc l
 281+ 96C9 1C               inc e
 282+ 96CA 1A               ld a,(de)
 283+ 96CB AE               xor (hl)
 284+ 96CC 77               ld (hl),a
 285+ 96CD 2C               inc l
 286+ 96CE 1C               inc e
 287+ 96CF 1A               ld a,(de)
 288+ 96D0 AE               xor (hl)
 289+ 96D1 77               ld (hl),a
 290+ 96D2 13               inc de
 291+ 96D3
 292+ 96D3 E1               pop hl
 293+ 96D4
 294+ 96D4 1A               ld a,(de)
 295+ 96D5 AE               xor (hl)
 296+ 96D6 77               ld (hl),a
 297+ 96D7 2C               inc l
 298+ 96D8 1C               inc e
 299+ 96D9 1A               ld a,(de)
 300+ 96DA AE               xor (hl)
 301+ 96DB 77               ld (hl),a
 302+ 96DC 2C               inc l
 303+ 96DD 1C               inc e
 304+ 96DE 1A               ld a,(de)
 305+ 96DF AE               xor (hl)
 306+ 96E0 77               ld (hl),a
 307+ 96E1 13               inc de
 308+ 96E2
 309+ 96E2 ED 73 2B 8C      ld (Scanlines_album_SP),sp
 310+ 96E6 ED 7B 0E 8C      ld sp,(Stack)
 311+ 96EA C9               ret
 312+ 96EB
 313+ 96EB              Pinta_lento
 314+ 96EB
 315+ 96EB E1           1 pop hl
 316+ 96EC
 317+ 96EC 1A               ld a,(de)
 318+ 96ED AE               xor (hl)
 319+ 96EE 77               ld (hl),a
 320+ 96EF 2C               inc l
 321+ 96F0 1C               inc e
 322+ 96F1 1A               ld a,(de)
 323+ 96F2 AE               xor (hl)
 324+ 96F3 77               ld (hl),a
 325+ 96F4 2C               inc l
 326+ 96F5 1C               inc e
 327+ 96F6 1A               ld a,(de)
 328+ 96F7 AE               xor (hl)
 329+ 96F8 77               ld (hl),a
 330+ 96F9 13               inc de
 331+ 96FA
 332+ 96FA 10 EF            djnz 1B
 333+ 96FC
 334+ 96FC ED 73 2B 8C      ld (Scanlines_album_SP),sp
 335+ 9700 ED 7B 0E 8C      ld sp,(Stack)
 336+ 9704 C9               ret
# file closed: Pinta_Sprites.asm
2065  9705              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9705              ; ******************************************************************************************************************************************************************************************
   2+ 9705              ;
   3+ 9705              ; 26/06/23
   4+ 9705              ;
   5+ 9705              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9705
   7+ 9705              Draw
   8+ 9705
   9+ 9705 CD AB 99     	call Prepara_draw
  10+ 9708 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9709 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 970A 28 05        	jr z,2F
  13+ 970C
  14+ 970C 3A E0 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 970F 18 0C        	jr 1F
  16+ 9711
  17+ 9711 2A DE 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9714 22 D1 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9717 CD A3 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 971A              ;													; _la esquina superior izquierda de la pantalla.
  21+ 971A
  22+ 971A CD 4A 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 971D
  24+ 971D 3A CE 8B     1 ld a,(Ctrl_0)
  25+ 9720 CB 6F        	bit 5,a
  26+ 9722 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9724
  28+ 9724 CD 39 97     	call Comprueba_limite_horizontal
  29+ 9727 CD C9 97     	call Comprueba_limite_vertical
  30+ 972A
  31+ 972A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 972A              ; -----------------------
  33+ 972A              ; -----------------------
  34+ 972A              ; -----------------------
  35+ 972A
  36+ 972A CD 1F 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 972D CD 56 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9730
  39+ 9730 3A CE 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9733 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9735 32 CE 8B     	ld (Ctrl_0),a
  42+ 9738
  43+ 9738 C9           	ret
  44+ 9739
  45+ 9739              ; *******************************************************************************************************************************************************************************************
  46+ 9739              ;	21/01/23
  47+ 9739              ;
  48+ 9739              ; 	Comprueba_limite_horizontal.
  49+ 9739              ;
  50+ 9739              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9739              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9739              ;
  53+ 9739              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9739              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9739              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9739              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9739
  58+ 9739
  59+ 9739
  60+ 9739 3A CE 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 973C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 973E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9740 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9742 32 CE 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9745 18 09            jr 6F
  66+ 9747 CB 5F        1 bit 3,a
  67+ 9749 28 0A            jr z,2F
  68+ 974B E6 F7            and $f7
  69+ 974D 32 CE 8B         ld (Ctrl_0),a
  70+ 9750 CD A3 98     6 call Inicializacion
  71+ 9753 18 5B            jr 5F
  72+ 9755 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9756
  74+ 9756              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9756              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9756
  77+ 9756 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9757 2A E2 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 975A CD 9F 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 975D 67           	ld h,a
  81+ 975E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 975F CD 9F 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9762 67           	ld h,a
  84+ 9763 A7           	and a
  85+ 9764 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9766 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9767 3A E0 8B     	ld a,(Cuad_objeto)
  88+ 976A FE 02        	cp 2
  89+ 976C 38 1E        	jr c,3F
  90+ 976E 28 1C        	jr z,3F
  91+ 9770 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9771 28 23            jr z,7F
  93+ 9773 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9775 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9777 E1           	pop hl
  96+ 9778
  97+ 9778              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9778              ; _para indicar con E="2" en caso necesario.
  99+ 9778
 100+ 9778 E5               push hl
 101+ 9779 C5               push bc
 102+ 977A CD 9F 94     	call calcula_tercio
 103+ 977D FE 01        	cp 1
 104+ 977F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9781 CD B1 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9784 28 26            jr z,9F
 107+ 9786 38 24            jr c,9F
 108+ 9788 1E 00        11 ld e,0
 109+ 978A 18 22            jr 8F
 110+ 978C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 978D 28 07        	jr z, 7F
 112+ 978F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9791 1E 00         	ld e,0
 114+ 9793 E1           	pop hl
 115+ 9794 18 04        	jr 4F
 116+ 9796 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9798 18 15            jr 10F
 118+ 979A
 119+ 979A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 979A              ; _para indicar con E="2" en caso necesario.
 121+ 979A
 122+ 979A E5           4 push hl
 123+ 979B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 979C CD 9F 94     	call calcula_tercio
 125+ 979F FE 01        	cp 1
 126+ 97A1 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97A3 CD B1 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97A6 28 04            jr z,9F
 129+ 97A8 30 02            jr nc,9F
 130+ 97AA 18 02        	jr 8F
 131+ 97AC 1E 02        9 ld e,2
 132+ 97AE C1           8 pop bc
 133+ 97AF E1           10 pop hl
 134+ 97B0 C9           5 ret
 135+ 97B1
 136+ 97B1              ; --------------------
 137+ 97B1              ;
 138+ 97B1              ; 25/08/22
 139+ 97B1
 140+ 97B1 CD 9F 94     Comprueba_centro call calcula_tercio
 141+ 97B4 67               ld h,a
 142+ 97B5 08           	ex af,af
 143+ 97B6 FE 02        	cp 2
 144+ 97B8 38 07        	jr c,1F
 145+ 97BA 28 05        	jr z,1F
 146+ 97BC 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97BF 18 03        	jr 2F
 148+ 97C1 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97C4 08           2 ex af,af
 150+ 97C5 A7               and a
 151+ 97C6 ED 42            sbc hl,bc
 152+ 97C8 C9               ret
 153+ 97C9
 154+ 97C9              ; *********************************************************************************************************************************************************************************************
 155+ 97C9              ;
 156+ 97C9              ;   16/8/22
 157+ 97C9              ;
 158+ 97C9              ;	Comprueba_limite_vertical
 159+ 97C9              ;
 160+ 97C9              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97C9              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97C9              ;
 163+ 97C9
 164+ 97C9 2A D1 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97CC 7D           	ld a,l
 166+ 97CD E6 1F        	and $1F
 167+ 97CF 57           	ld d,a
 168+ 97D0 3A E4 8B     	ld a,(Limite_vertical)
 169+ 97D3 BA           	cp d 											; Límite - Posición.
 170+ 97D4 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97D5 3A E0 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97D8 CB 47        	bit 0,a
 173+ 97DA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97DC
 175+ 97DC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97DC
 177+ 97DC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97DD 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97DF
 180+ 97DF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97DF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97DF
 183+ 97DF 3A C2 8B         ld a,(Coordenada_X)
 184+ 97E2 16 0F            ld d,Centro_izquierda
 185+ 97E4 A7               and a
 186+ 97E5 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97E6 28 1E            jr z,3F
 188+ 97E8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97EA              ;                                                    ; _salimos sin modificar nada.
 190+ 97EA 18 0E            jr 2F
 191+ 97EC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97ED 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97EF
 194+ 97EF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97EF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97EF
 197+ 97EF 3A C2 8B         ld a,(Coordenada_X)
 198+ 97F2 16 10            ld d,Centro_derecha
 199+ 97F4 A7               and a
 200+ 97F5 92               sub d
 201+ 97F6 28 0E            jr z,3F
 202+ 97F8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97FA              ;                                                    ; _salimos sin modificar nada.
 204+ 97FA CB 43        2 bit 0,e
 205+ 97FC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97FE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97FF CD 93 98         call Modificaccionne
 208+ 9802 C1           	pop bc
 209+ 9803 CD A3 98         call Inicializacion
 210+ 9806 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9807
 212+ 9807              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9807
 214+ 9807 C5           4 push bc
 215+ 9808 01 D0 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 980B 0A           	ld a,(bc)
 217+ 980C 3D           	dec a
 218+ 980D 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 980E 7D           	ld a,l
 220+ 980F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9810 CB 47        	bit 0,a
 222+ 9812 28 03        	jr z,5F
 223+ 9814 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9815 18 2E        	jr 7F
 225+ 9817
 226+ 9817              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9817
 228+ 9817 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9818 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9819 3A CE 8B     	ld a,(Ctrl_0)
 231+ 981C CB 4F        	bit 1,a
 232+ 981E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9820 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9821
 235+ 9821              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9821
 237+ 9821 1C               inc e
 238+ 9822 1D               dec e
 239+ 9823 20 07            jr nz,12F
 240+ 9825 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9826 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9827 22 D1 8B     	ld (Posicion_actual),hl
 243+ 982A 18 44        13 jr 9F
 244+ 982C CB 43        12 bit 0,e
 245+ 982E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9830              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9830 C1           	pop bc
 248+ 9831 18 D3        	jr 3B
 249+ 9833 80           14 add b
 250+ 9834 6F               ld l,a
 251+ 9835 22 D1 8B     	ld (Posicion_actual),hl
 252+ 9838 CD 93 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 983B 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 983D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 983F 32 CE 8B         ld (Ctrl_0),a
 256+ 9842 F1           	pop af
 257+ 9843 18 2B        	jr 9F
 258+ 9845
 259+ 9845              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9845
 261+ 9845 F5           7 push af
 262+ 9846 3A CE 8B     	ld a,(Ctrl_0)
 263+ 9849 CB 47        	bit 0,a
 264+ 984B 20 1D        	jr nz,8F
 265+ 984D F1           	pop af
 266+ 984E
 267+ 984E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 984E
 269+ 984E 1C           	inc e
 270+ 984F 1D               dec e
 271+ 9850 20 07            jr nz,10F
 272+ 9852 90           	sub b
 273+ 9853 6F               ld l,a
 274+ 9854 22 D1 8B     	ld (Posicion_actual),hl
 275+ 9857 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9859              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9859 CB 43        10 bit 0,e
 278+ 985B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 985D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 985D C1           	pop bc
 281+ 985E 18 A6        	jr 3B
 282+ 9860 90           16 sub b
 283+ 9861 6F               ld l,a
 284+ 9862 22 D1 8B     	ld (Posicion_actual),hl
 285+ 9865 CD 93 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9868 18 06            jr 9F
 287+ 986A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 986C 32 CE 8B         ld (Ctrl_0),a
 289+ 986F F1           	pop af
 290+ 9870 C1           9 pop bc
 291+ 9871 1E 00        	ld e,0
 292+ 9873 CD A3 98         call Inicializacion
 293+ 9876 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9877 08           	ex af,af
 295+ 9878 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9879 18 8B            jr 3B
 297+ 987B
 298+ 987B              ; --------------------
 299+ 987B
 300+ 987B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 987D CD C6 99     1 call PreviousScan
 302+ 9880 10 FB            djnz 1B
 303+ 9882 22 D1 8B     	ld (Posicion_actual),hl
 304+ 9885 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9886 C9           	ret
 306+ 9887
 307+ 9887              ; --------------------
 308+ 9887
 309+ 9887 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9889 CD B7 99     1 call NextScan
 311+ 988C 10 FB            djnz 1B
 312+ 988E 22 D1 8B     	ld (Posicion_actual),hl
 313+ 9891 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9892 C9           	ret
 315+ 9893
 316+ 9893              ; --------------------
 317+ 9893              ;
 318+ 9893              ;	22/01/23
 319+ 9893              ;
 320+ 9893              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9893              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9893              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9893
 324+ 9893
 325+ 9893              Modificaccionne
 326+ 9893
 327+ 9893 3A E0 8B     	ld a,(Cuad_objeto)
 328+ 9896 FE 02        	cp 2
 329+ 9898 CC 7B 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 989B DC 7B 98         call c,Modifica_Pos_actual
 331+ 989E C8           	ret z
 332+ 989F CD 87 98         call Modifica_Pos_actual2
 333+ 98A2 C9               ret
 334+ 98A3
 335+ 98A3              ; *************************************************************************************************************************************************************************************************
 336+ 98A3              ;
 337+ 98A3              ;	13/8/22
 338+ 98A3              ;
 339+ 98A3              ;	Inicializacion
 340+ 98A3              ;
 341+ 98A3              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98A3              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98A3              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98A3              ;
 345+ 98A3              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98A3              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98A3              ;	_ desaparece/aparece.
 348+ 98A3
 349+ 98A3              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98A3              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98A3              ;
 352+ 98A3              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98A3              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98A3              ; 		   [E] ="0"
 355+ 98A3
 356+ 98A3              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98A3
 358+ 98A3 CD 9F 94     Inicializacion call calcula_tercio
 359+ 98A6 28 36        	jr z,primit
 360+ 98A8 E6 02        	and 2
 361+ 98AA 20 07        	jr nz,segmit
 362+ 98AC 7D           	ld a,l
 363+ 98AD FE 7F        	cp $7f
 364+ 98AF 38 2D        	jr c,primit
 365+ 98B1 28 2B        	jr z,primit
 366+ 98B3 CD 19 99     segmit call column
 367+ 98B6 38 13        	jr c,tercuad
 368+ 98B8 3E 04        cuarcuad ld a,4
 369+ 98BA 32 E0 8B     	ld (Cuad_objeto),a
 370+ 98BD 21 20 48     	ld hl,$4820
 371+ 98C0 22 E2 8B     	ld (Limite_horizontal),hl
 372+ 98C3 21 E4 8B     	ld hl,Limite_vertical
 373+ 98C6 36 0D        	ld (hl),$0d
 374+ 98C8 08           	ex af,af
 375+ 98C9 18 3C        	jr 1F
 376+ 98CB              tercuad
 377+ 98CB 3E 03        	ld a,3
 378+ 98CD 32 E0 8B     	ld (Cuad_objeto),a
 379+ 98D0 21 20 48     	ld hl,$4820
 380+ 98D3 22 E2 8B     	ld (Limite_horizontal),hl
 381+ 98D6 21 E4 8B     	ld hl,Limite_vertical
 382+ 98D9 36 12        	ld (hl),$12
 383+ 98DB 08           	ex af,af
 384+ 98DC 18 29        	jr 1F
 385+ 98DE CD 19 99     primit call column
 386+ 98E1 38 13        	jr c, primcuad
 387+ 98E3              segcuad
 388+ 98E3 3E 02        	ld a,2
 389+ 98E5 32 E0 8B     	ld (Cuad_objeto),a
 390+ 98E8 21 C0 4F     	ld hl,$4fc0
 391+ 98EB 22 E2 8B     	ld (Limite_horizontal),hl
 392+ 98EE 21 E4 8B     	ld hl,Limite_vertical
 393+ 98F1 36 0D        	ld (hl),$0d
 394+ 98F3 08           	ex af,af
 395+ 98F4 18 11        	jr 1F
 396+ 98F6              primcuad
 397+ 98F6 3E 01        	ld a,1
 398+ 98F8 32 E0 8B     	ld (Cuad_objeto),a
 399+ 98FB 21 C0 4F     	ld hl,$4fc0
 400+ 98FE 22 E2 8B     	ld (Limite_horizontal),hl
 401+ 9901 21 E4 8B     	ld hl,Limite_vertical
 402+ 9904 36 12        	ld (hl),$12
 403+ 9906 08           	ex af,af
 404+ 9907
 405+ 9907 C5           1 push bc
 406+ 9908 E5           	push hl
 407+ 9909 D5           	push de
 408+ 990A
 409+ 990A 2A D1 8B     	ld hl,(Posicion_actual)
 410+ 990D CD BD 94     	call Genera_coordenadas
 411+ 9910
 412+ 9910 D1           	pop de
 413+ 9911 E1           	pop hl
 414+ 9912 C1           	pop bc
 415+ 9913
 416+ 9913 21 CE 8B     	ld hl,Ctrl_0
 417+ 9916 CB EE        	set 5,(hl)
 418+ 9918 C9           	ret
 419+ 9919
 420+ 9919              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9919
 422+ 9919              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9919              ;
 424+ 9919              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9919
 426+ 9919 7D           column ld a,l
 427+ 991A E6 1F        	and $1f
 428+ 991C FE 10         	cp $10
 429+ 991E C9            	ret
 430+ 991F
 431+ 991F              ; --------------------------------------------------------------------------------------------------------------------
 432+ 991F              ;
 433+ 991F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 991F              ;
 435+ 991F              ; 14/12/22
 436+ 991F              ;
 437+ 991F              ;	Modifica: A y BC.
 438+ 991F
 439+ 991F 3A E0 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9922 E6 01        	and 1
 441+ 9924 28 17        	jr z,1F
 442+ 9926
 443+ 9926              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9926
 445+ 9926 3A C2 8B     	ld a,(Coordenada_X)
 446+ 9929 47           	ld b,a
 447+ 992A 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 992B 79           	ld a,c
 449+ 992C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 992D 38 08        	jr c,2F
 451+ 992F 47           	ld b,a
 452+ 9930 79           	ld a,c
 453+ 9931 90           	sub b
 454+ 9932 32 E1 8B     	ld (Columnas),a
 455+ 9935 18 1B        	jr 4F
 456+ 9937 79           2 ld a,c
 457+ 9938 32 E1 8B     	ld (Columnas),a
 458+ 993B 18 15        	jr 4F
 459+ 993D
 460+ 993D              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 993D
 462+ 993D 3A C2 8B     1 ld a,(Coordenada_X)
 463+ 9940 81           	add c
 464+ 9941 3D           	dec a
 465+ 9942 D6 1F        	sub $1f
 466+ 9944 38 08        	jr c,3F
 467+ 9946 47           	ld b,a
 468+ 9947 79           	ld a,c
 469+ 9948 90           	sub b
 470+ 9949 32 E1 8B     	ld (Columnas),a
 471+ 994C 18 04        	jr 4F
 472+ 994E 79           3 ld a,c
 473+ 994F 32 E1 8B     	ld (Columnas),a
 474+ 9952 D9           4 exx
 475+ 9953 4F           	ld c,a
 476+ 9954 D9           	exx
 477+ 9955 C9            ret
 478+ 9956
 479+ 9956              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9956              ;
 481+ 9956              ;   19/7/23
 482+ 9956              ;
 483+ 9956              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9956              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9956              ;
 486+ 9956              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9956              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9956              ;
 489+ 9956              ;	DESTRUYE: HL,B Y A.
 490+ 9956
 491+ 9956 3A E0 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9959 FE 02        	cp 2
 493+ 995B 38 18        	jr c,1F
 494+ 995D 28 16        	jr z,1F
 495+ 995F E6 01        	and 1
 496+ 9961 28 0D        	jr z,3F
 497+ 9963
 498+ 9963              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9963
 500+ 9963 CD 9F 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9966
 502+ 9966 7D           9 ld a,l
 503+ 9967 E6 1F        	and $1f
 504+ 9969 28 2A        	jr z,7F
 505+ 996B 2B           	dec hl
 506+ 996C 10 F8        	djnz 9B
 507+ 996E 18 25        	jr 7F
 508+ 9970
 509+ 9970              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9970
 511+ 9970 2A D1 8B     3 ld hl,(Posicion_actual)
 512+ 9973 18 20        	jr 7F
 513+ 9975
 514+ 9975 28 14        1 jr z,2F
 515+ 9977
 516+ 9977              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9977
 518+ 9977 CD 9F 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 997A
 520+ 997A 7D           4 ld a,l
 521+ 997B E6 1F        	and $1f
 522+ 997D 28 03        	jr z,6F
 523+ 997F 2B           	dec hl
 524+ 9980 10 F8        	djnz 4B
 525+ 9982 06 0F        6 ld b,15
 526+ 9984 CD C6 99     5 call PreviousScan
 527+ 9987 10 FB        	djnz 5B
 528+ 9989 18 0A        	jr 7F
 529+ 998B
 530+ 998B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 998B
 532+ 998B CD 9F 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 998E 06 0F        	ld b,15
 534+ 9990 CD C6 99     8 call PreviousScan
 535+ 9993 10 FB        	djnz 8B
 536+ 9995
 537+ 9995 E5           7 push hl
 538+ 9996 DD E1        	pop ix
 539+ 9998
 540+ 9998 2A D3 8B     	ld hl,(Puntero_objeto)
 541+ 999B E5           	push hl
 542+ 999C FD E1        	pop iy
 543+ 999E
 544+ 999E C9           	ret
 545+ 999F
 546+ 999F              ; --------------------------------------------------------------------------------------------------------------------
 547+ 999F              ;
 548+ 999F              ;	2/1/23
 549+ 999F              ;
 550+ 999F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 999F              ;
 552+ 999F              ;	Tras esta rutina tenemos:
 553+ 999F              ;
 554+ 999F              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 999F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 999F              ;
 557+ 999F              ;	DESTRUYE!!!!! HL,B y A.
 558+ 999F
 559+ 999F 2A D1 8B     Operandos ld hl,(Posicion_actual)
 560+ 99A2 3A E1 8B     	ld a,(Columnas)
 561+ 99A5 3D           	dec a
 562+ 99A6 20 01        	jr nz,1F
 563+ 99A8 3C           	inc a
 564+ 99A9 47           1 ld b,a
 565+ 99AA C9           	ret
 566+ 99AB
 567+ 99AB              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99AB              ;
 569+ 99AB              ;	Prepara_draw
 570+ 99AB              ;
 571+ 99AB              ;	Es una rutina de carga.
 572+ 99AB              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99AB              ;
 574+ 99AB              ;	FUNCIONAMIENTO:
 575+ 99AB              ;
 576+ 99AB              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99AB              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99AB              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99AB              ;
 580+ 99AB              ;	DESTRUYE:
 581+ 99AB              ;
 582+ 99AB              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99AB
 584+ 99AB 21 CF 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99AE 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99AF 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99B0 4E           	ld c,(hl)
 588+ 99B1 2A D1 8B     	ld hl,(Posicion_actual)
 589+ 99B4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99B6 C9           	ret
 591+ 99B7
 592+ 99B7              ;----------------------------------------------------------------------------------------------------------------
 593+ 99B7              ;
 594+ 99B7              ;	5/08/22
 595+ 99B7              ;
 596+ 99B7              ;   NextScan.
 597+ 99B7              ;
 598+ 99B7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99B7              ;
 600+ 99B7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99B7              ;
 602+ 99B7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99B7              ;
 604+ 99B7              ;       DESTRUIDOS: AF y HL !!!
 605+ 99B7              ;
 606+ 99B7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99B7              ;
 608+ 99B7
 609+ 99B7 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99B8 7C               ld a,h
 611+ 99B9 E6 07            and 7
 612+ 99BB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99BC
 614+ 99BC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99BD C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99BF 6F               ld l,a
 617+ 99C0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99C1
 619+ 99C1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99C2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99C4 67               ld h,a
 622+ 99C5 C9               ret
 623+ 99C6
 624+ 99C6              ;----------------------------------------------------------------------------------------------------------------
 625+ 99C6              ;
 626+ 99C6              ;	5/08/22
 627+ 99C6              ;
 628+ 99C6              ;   PreviousScan.
 629+ 99C6              ;
 630+ 99C6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99C6              ;
 632+ 99C6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99C6              ;
 634+ 99C6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99C6              ;
 636+ 99C6              ;       DESTRUIDOS: AF y HL !!!
 637+ 99C6              ;
 638+ 99C6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99C6              ;
 640+ 99C6
 641+ 99C6 7C           PreviousScan ld a,h
 642+ 99C7 25               dec h               ; Dec H.
 643+ 99C8 E6 07            and 7
 644+ 99CA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99CB
 646+ 99CB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99CC D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99CE 6F               ld l,a
 649+ 99CF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99D0
 651+ 99D0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99D1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99D3 67               ld h,a
 654+ 99D4 C9               ret
 655+ 99D5
 656+ 99D5
 657+ 99D5
 658+ 99D5
 659+ 99D5
 660+ 99D5
 661+ 99D5
 662+ 99D5
 663+ 99D5
 664+ 99D5
 665+ 99D5
 666+ 99D5
# file closed: Draw_XOR.asm
2066  99D5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D5
   2+ 99D5              ; ******************************************************************************************************************************************************************************************
   3+ 99D5              ;
   4+ 99D5              ;   20/05/23
   5+ 99D5              ;
   6+ 99D5              ;	Recompone_posicion_inicio
   7+ 99D5              ;
   8+ 99D5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99D5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99D5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99D5              ;	_ a una u otra rutina.
  12+ 99D5
  13+ 99D5              Recompone_posicion_inicio
  14+ 99D5
  15+ 99D5 2A DE 8B     	ld hl,(Posicion_inicio)
  16+ 99D8 7D           	ld a,l
  17+ 99D9 E6 1F        	and $1f
  18+ 99DB 28 16        	jr z,1F
  19+ 99DD
  20+ 99DD FE 1F        	cp $1f
  21+ 99DF 28 0D        	jr z,3F
  22+ 99E1
  23+ 99E1 21 CD 8B     	ld hl,Ctrl_2
  24+ 99E4 CB C6        	set 0,(hl)
  25+ 99E6 2A D3 8B     	ld hl,(Puntero_objeto)
  26+ 99E9 22 FF 8B     	ld (Repone_puntero_objeto),hl
  27+ 99EC 18 08        	jr 2F
  28+ 99EE
  29+ 99EE CD 9C 9B     3 call Mov_left
  30+ 99F1 18 03        	jr 2F
  31+ 99F3
  32+ 99F3 CD 79 9A     1 call Mov_right
  33+ 99F6 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99F9 22 D3 8B     	ld (Puntero_objeto),hl
  35+ 99FC C9           	ret
  36+ 99FD
  37+ 99FD              ; ******************************************************************************************************************************************************************************************
  38+ 99FD              ;
  39+ 99FD              ;   27/05/23
  40+ 99FD              ;
  41+ 99FD              ;	Mov_down
  42+ 99FD              ;
  43+ 99FD              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99FD              ;
  45+ 99FD              ;
  46+ 99FD              Mov_down
  47+ 99FD
  48+ 99FD CD 67 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A00              ;																	; _ repone (Puntero_objeto).
  50+ 9A00 21 CE 8B     	ld hl,Ctrl_0
  51+ 9A03 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A05              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A05              ; 																	; _ en el caso de que no lo haya.
  54+ 9A05 3A E9 8B     	ld a,(Vel_down)
  55+ 9A08 47           	ld b,a
  56+ 9A09 2A D1 8B         ld hl,(Posicion_actual)
  57+ 9A0C CD 9F 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A0F E6 02        	and 2
  59+ 9A11 28 17        	jr z,1F
  60+ 9A13
  61+ 9A13              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A13              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A13
  64+ 9A13 7C           	ld a,h
  65+ 9A14 FE 57        	cp $57
  66+ 9A16 20 12        	jr nz,1F
  67+ 9A18
  68+ 9A18 7D           	ld a,l
  69+ 9A19 C6 20        	add $20
  70+ 9A1B 30 0D        	jr nc,1F
  71+ 9A1D
  72+ 9A1D              ; ------------------------------
  73+ 9A1D              ;
  74+ 9A1D              ;	12/01/24
  75+ 9A1D
  76+ 9A1D              ;	call Reaparece_arriba
  77+ 9A1D CD 29 9D     	call Reinicio
  78+ 9A20
  79+ 9A20              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A20
  81+ 9A20 3A 31 8C     	ld a,(Ctrl_3)
  82+ 9A23 CB CF        	set 1,a
  83+ 9A25 32 31 8C     	ld (Ctrl_3),a
  84+ 9A28
  85+ 9A28 18 08        	jr 3F
  86+ 9A2A              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A2A              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A2A              ; ------------------------------
  89+ 9A2A
  90+ 9A2A CD B7 99     1 call NextScan
  91+ 9A2D 22 D1 8B     	ld (Posicion_actual),hl
  92+ 9A30 10 DA            djnz 2B
  93+ 9A32 CD BD 94     3 call Genera_coordenadas
  94+ 9A35 C9           	ret
  95+ 9A36
  96+ 9A36              ; ******************************************************************************************************************************************************************************************
  97+ 9A36              ;
  98+ 9A36              ;   27/05/23
  99+ 9A36              ;
 100+ 9A36              ;	Mov_up
 101+ 9A36              ;
 102+ 9A36              ; 	Mueve el Sprite hacia arriba.
 103+ 9A36              ;
 104+ 9A36              ;
 105+ 9A36              Mov_up
 106+ 9A36
 107+ 9A36 CD 67 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A39              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A39 21 CE 8B     	ld hl,Ctrl_0
 110+ 9A3C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A3E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A3E              ; 																		; _ en el caso de que no lo haya.
 113+ 9A3E 3A E8 8B     	ld a,(Vel_up)
 114+ 9A41 47           	ld b,a
 115+ 9A42 2A D1 8B     	ld hl,(Posicion_actual)
 116+ 9A45 CD 9F 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A48 A7           	and a
 118+ 9A49 20 10        	jr nz,1F
 119+ 9A4B
 120+ 9A4B              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A4B              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A4B
 123+ 9A4B 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A4C FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A4E 20 0B            jr nz,1F
 126+ 9A50 7D               ld a,l
 127+ 9A51 D6 20            sub $20
 128+ 9A53 30 06            jr nc,1F
 129+ 9A55 25               dec h
 130+ 9A56
 131+ 9A56              ; -----------------------------
 132+ 9A56 CD 0A 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A59              ;	call Reinicio
 134+ 9A59              ; -----------------------------
 135+ 9A59
 136+ 9A59 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A5B CD C6 99     1 call PreviousScan
 138+ 9A5E 22 D1 8B     	ld (Posicion_actual),hl
 139+ 9A61 10 E2            djnz 3B
 140+ 9A63 CD BD 94     2 call Genera_coordenadas
 141+ 9A66 C9           	ret
 142+ 9A67
 143+ 9A67              ; -----------------------------
 144+ 9A67              ;
 145+ 9A67              ;	27/5/23
 146+ 9A67              ;
 147+ 9A67              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A67              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A67              ;
 150+ 9A67              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A67              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A67              ;
 153+ 9A67              ;	Modifica: A y (Puntero_objeto).
 154+ 9A67
 155+ 9A67 3A CD 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A6A CB 47        	bit 0,a
 157+ 9A6C C8           	ret z
 158+ 9A6D CB 87        	res 0,a
 159+ 9A6F 32 CD 8B     	ld (Ctrl_2),a
 160+ 9A72 2A FF 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A75 22 D3 8B     	ld (Puntero_objeto),hl
 162+ 9A78 C9           	ret
 163+ 9A79
 164+ 9A79              ; ******************************************************************************************************************************************************************************************
 165+ 9A79              ;
 166+ 9A79              ;	19/10/22
 167+ 9A79              ;
 168+ 9A79              ;	Mov_right.
 169+ 9A79              ;
 170+ 9A79              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A79              ;
 172+ 9A79
 173+ 9A79 3A CE 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A7C CB 77        	bit 6,a
 175+ 9A7E 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A80
 177+ 9A80 CD B8 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A83 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A84
 180+ 9A84 21 CE 8B     	ld hl,Ctrl_0
 181+ 9A87 CB E6        	set 4,(hl)
 182+ 9A89 18 52        	jr 8F
 183+ 9A8B
 184+ 9A8B 21 CE 8B     10 ld hl,Ctrl_0
 185+ 9A8E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A90              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A90              ; 																	; _ en el caso de que no lo haya.
 188+ 9A90 3A C2 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A93 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A95 20 46        	jr nz,8F
 191+ 9A97
 192+ 9A97 3A D5 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A9A A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A9B 28 40        	jr z,8F
 195+ 9A9D
 196+ 9A9D              ; ---------- ---------- ----------
 197+ 9A9D              ;
 198+ 9A9D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A9D
 200+ 9A9D 3A E7 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AA0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AA2 28 11        	jr z,1F
 203+ 9AA4 38 06        	jr c,6F
 204+ 9AA6 FE 04        	cp 4
 205+ 9AA8 28 14        	jr z,7F
 206+ 9AAA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AAC
 208+ 9AAC              ; ---------- ---------- ----------
 209+ 9AAC              ;
 210+ 9AAC              ; Perfiles de velocidad
 211+ 9AAC              ;
 212+ 9AAC
 213+ 9AAC 3A D5 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AAF FE FE        	cp $fe
 215+ 9AB1 20 2A        	jr nz,8F
 216+ 9AB3 18 10        	jr 3F
 217+ 9AB5 3A D5 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AB8 FE FD        	cp $fd
 219+ 9ABA 20 21        	jr nz,8F
 220+ 9ABC 18 07        	jr 3F
 221+ 9ABE 3A D5 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AC1 FE FB        	cp $fb
 223+ 9AC3 20 18        	jr nz,8F
 224+ 9AC5
 225+ 9AC5              ; ---------- ---------- ----------
 226+ 9AC5
 227+ 9AC5              3
 228+ 9AC5 CD F8 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AC8              ;	call Reinicio
 230+ 9AC8
 231+ 9AC8              ; ---------- ---------- ----------
 232+ 9AC8              ;
 233+ 9AC8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AC8
 235+ 9AC8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9ACA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ACB CD E4 9A     	call DESPLZ_DER
 238+ 9ACE C1           	pop bc
 239+ 9ACF 10 F9        	djnz 5B
 240+ 9AD1 2A D1 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AD4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AD5 22 D1 8B     	ld (Posicion_actual),hl
 243+ 9AD8 CD BD 94     	call Genera_coordenadas
 244+ 9ADB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9ADD
 246+ 9ADD              ; ---------- ---------- ----------
 247+ 9ADD
 248+ 9ADD 2A D1 8B     8 ld hl,(Posicion_actual)
 249+ 9AE0 CD E4 9A     	call DESPLZ_DER
 250+ 9AE3 C9           2 ret
 251+ 9AE4
 252+ 9AE4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AE4              ;
 254+ 9AE4              ;	22/9/22
 255+ 9AE4              ;
 256+ 9AE4
 257+ 9AE4 CD F3 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AE7 CD 3F 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AEA CD 68 9B         call Ciclo_completo
 260+ 9AED 21 CE 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AF0 CB FE        	set 7,(hl)
 262+ 9AF2 C9           	ret
 263+ 9AF3
 264+ 9AF3              ; ******************************************************************************************************************************************************************************************
 265+ 9AF3              ;	15/02/23
 266+ 9AF3              ;
 267+ 9AF3
 268+ 9AF3 3A E7 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AF6 47           	ld b,a
 270+ 9AF7 2A DA 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AFA 23           1 inc hl
 272+ 9AFB 23           	inc hl
 273+ 9AFC 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AFE 22 DA 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B01 CD 9E 90     	call Extrae_address
 276+ 9B04 22 D3 8B     	ld (Puntero_objeto),hl
 277+ 9B07
 278+ 9B07              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B07
 280+ 9B07              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B07              ; Cuántos movimientos hemos hecho ??
 282+ 9B07              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B07
 284+ 9B07 2A D6 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B0A EB           	ex de,hl
 286+ 9B0B A7           	and a
 287+ 9B0C ED 52        	sbc hl,de
 288+ 9B0E CB 3D        	srl l
 289+ 9B10 3E 08        6 ld a,8
 290+ 9B12 95           	sub l
 291+ 9B13 30 1E        	jr nc,3F
 292+ 9B15
 293+ 9B15              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B15              ; B="0".
 295+ 9B15
 296+ 9B15 04           4 inc b
 297+ 9B16 3C           	inc a
 298+ 9B17 20 FC        	jr nz,4B
 299+ 9B19 78           	ld a,b
 300+ 9B1A 08           	ex af,af
 301+ 9B1B 2A D6 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B1E 23           5 inc hl
 303+ 9B1F 23           	inc hl
 304+ 9B20 10 FC        	djnz 5B
 305+ 9B22 22 DA 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B25 CD 9E 90     	call Extrae_address
 307+ 9B28 22 D3 8B     	ld (Puntero_objeto),hl
 308+ 9B2B
 309+ 9B2B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B2B              ; _(Posicion_actual).
 311+ 9B2B
 312+ 9B2B 21 D1 8B     	ld hl,Posicion_actual
 313+ 9B2E 34           	inc (hl)
 314+ 9B2F 08               ex af,af
 315+ 9B30 6F           	ld l,a
 316+ 9B31 18 DD        	jr 6B
 317+ 9B33
 318+ 9B33              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B33
 320+ 9B33 47           3 ld b,a
 321+ 9B34 2A D8 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B37 23           2 inc hl
 323+ 9B38 23           	inc hl
 324+ 9B39 10 FC        	djnz 2B
 325+ 9B3B 22 DC 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B3E C9           8 ret
 327+ 9B3F
 328+ 9B3F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B3F              ;
 330+ 9B3F              ;	24/7/22
 331+ 9B3F              ;
 332+ 9B3F              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B3F              ;
 334+ 9B3F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B3F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B3F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B3F
 338+ 9B3F 3A D5 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B42 A7           	and a
 340+ 9B43 20 1F        	jr nz,1F
 341+ 9B45 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B47 32 D5 8B         ld (CTRL_DESPLZ),a
 343+ 9B4A
 344+ 9B4A 21 D0 8B     	ld hl,Columns
 345+ 9B4D 34           	inc (hl)
 346+ 9B4E 3A E0 8B     	ld a,(Cuad_objeto)
 347+ 9B51 E6 01        	and 1
 348+ 9B53 28 0F        	jr z,1F
 349+ 9B55 2A D1 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B58 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B59 22 D1 8B     	ld (Posicion_actual),hl
 352+ 9B5C CD BD 94     	call Genera_coordenadas
 353+ 9B5F CD C4 9C     	call Inc_CTRL_DESPLZ
 354+ 9B62 18 03        	jr 2F
 355+ 9B64 CD C4 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B67 C9           2 ret
 357+ 9B68
 358+ 9B68              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B68              ;
 360+ 9B68              ;	24/7/22
 361+ 9B68              ;
 362+ 9B68              ;	Ciclo_completo.
 363+ 9B68              ;
 364+ 9B68              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B68              ;
 366+ 9B68              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B68              ; 	Decrementamos (Columns).
 368+ 9B68              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B68              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B68
 371+ 9B68
 372+ 9B68 3A D5 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B6B FE FF        	cp $ff
 374+ 9B6D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B6F E6 F0        	and $f0
 376+ 9B71 20 28        	jr nz,3F
 377+ 9B73
 378+ 9B73              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B73
 380+ 9B73 3A D5 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B76 47           	ld b,a
 382+ 9B77 3E F8        	ld a,$f8
 383+ 9B79 80           	add b
 384+ 9B7A 32 D5 8B     	ld (CTRL_DESPLZ),a
 385+ 9B7D 18 1C        	jr 3F
 386+ 9B7F 21 D0 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B82 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B83 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B84 32 D5 8B     	ld (CTRL_DESPLZ),a
 390+ 9B87 3A E0 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B8A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B8C 20 0A        	jr nz,2F
 393+ 9B8E 2A D1 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B91 23           	inc hl
 395+ 9B92 22 D1 8B     	ld (Posicion_actual),hl
 396+ 9B95 CD BD 94     	call Genera_coordenadas
 397+ 9B98
 398+ 9B98              ; Inicia el puntero de Sprite.
 399+ 9B98
 400+ 9B98 CD B3 90     2 call Inicia_puntero_objeto_der
 401+ 9B9B C9           3 ret
 402+ 9B9C
 403+ 9B9C              ; ******************************************************************************************************************************************************************************************
 404+ 9B9C              ;
 405+ 9B9C              ;	15/02/23
 406+ 9B9C              ;
 407+ 9B9C              ;	Mov_left.
 408+ 9B9C              ;
 409+ 9B9C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B9C              ;
 411+ 9B9C              Mov_left
 412+ 9B9C
 413+ 9B9C 21 CE 8B     	ld hl,Ctrl_0
 414+ 9B9F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BA1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BA1              ; 																	; _ en el caso de que no lo haya.
 417+ 9BA1 3A CE 8B     	ld a,(Ctrl_0)
 418+ 9BA4 CB 77        	bit 6,a
 419+ 9BA6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BA8
 421+ 9BA8 CD BE 9C     	call Stop_Amadeus_left
 422+ 9BAB C8           	ret z
 423+ 9BAC 20 4A        	jr nz,8F
 424+ 9BAE
 425+ 9BAE 3A C2 8B     11 ld a,(Coordenada_X)
 426+ 9BB1 A7           	and a
 427+ 9BB2 20 44        	jr nz,8F
 428+ 9BB4
 429+ 9BB4 3A D5 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BB7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BB8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BBA
 433+ 9BBA              ; ---------- ---------- ----------
 434+ 9BBA
 435+ 9BBA 3A E6 8B     	ld a,(Vel_left)
 436+ 9BBD FE 02        	cp 2
 437+ 9BBF 28 0F        	jr z,1F
 438+ 9BC1 38 04        	jr c,6F
 439+ 9BC3 FE 04        	cp 4
 440+ 9BC5 28 12        	jr z,7F
 441+ 9BC7
 442+ 9BC7              ; ---------- ---------- ----------
 443+ 9BC7
 444+ 9BC7 3A D5 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BCA FE F8        	cp $f8
 446+ 9BCC 20 2A        	jr nz,8F
 447+ 9BCE 18 10        	jr 4F
 448+ 9BD0 3A D5 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BD3 FE F9        	cp $f9
 450+ 9BD5 20 21        	jr nz,8F
 451+ 9BD7 18 07        	jr 4F
 452+ 9BD9 3A D5 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BDC FE FB        	cp $fb
 454+ 9BDE 20 18        	jr nz,8F
 455+ 9BE0
 456+ 9BE0              ; ---------- ---------- ----------
 457+ 9BE0
 458+ 9BE0              4
 459+ 9BE0 CD E6 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BE3              ;	call Reinicio
 461+ 9BE3
 462+ 9BE3              ; ---------- ---------- ----------
 463+ 9BE3
 464+ 9BE3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BE5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BE6
 467+ 9BE6              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BE6              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BE6
 470+ 9BE6 CD FF 9B     	call DESPLZ_IZQ
 471+ 9BE9 C1           	pop bc
 472+ 9BEA 10 F9        	djnz 5B
 473+ 9BEC 2A D1 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BEF 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BF0 22 D1 8B     	ld (Posicion_actual),hl
 476+ 9BF3 CD BD 94     	call Genera_coordenadas
 477+ 9BF6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BF8
 479+ 9BF8              ; ---------- ---------- ----------
 480+ 9BF8
 481+ 9BF8              ; Movemos, no hay recolocación.
 482+ 9BF8
 483+ 9BF8 2A D1 8B     8 ld hl,(Posicion_actual)
 484+ 9BFB CD FF 9B     	call DESPLZ_IZQ
 485+ 9BFE C9           2 ret
 486+ 9BFF
 487+ 9BFF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BFF              ;
 489+ 9BFF              ;	22/9/22
 490+ 9BFF
 491+ 9BFF              DESPLZ_IZQ
 492+ 9BFF
 493+ 9BFF CD 0E 9C     	call Desplaza_izquierda
 494+ 9C02 CD 5A 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C05 CD 82 9C     	call Ciclo_completo_2
 496+ 9C08 21 CE 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C0B CB BE        	res 7,(hl)
 498+ 9C0D C9           	ret
 499+ 9C0E
 500+ 9C0E              Desplaza_izquierda
 501+ 9C0E
 502+ 9C0E 3A E6 8B     	ld a,(Vel_left)
 503+ 9C11 47           	ld b,a
 504+ 9C12 2A DC 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C15 23           1 inc hl
 506+ 9C16 23           	inc hl
 507+ 9C17 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C19 22 DC 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C1C CD 9E 90     	call Extrae_address
 510+ 9C1F 22 D3 8B     	ld (Puntero_objeto),hl
 511+ 9C22
 512+ 9C22              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C22
 514+ 9C22              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C22              ; Cuántos movimientos hemos hecho ??
 516+ 9C22              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C22
 518+ 9C22 2A D8 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C25 EB           	ex de,hl
 520+ 9C26 A7           	and a
 521+ 9C27 ED 52        	sbc hl,de
 522+ 9C29 CB 3D        	srl l
 523+ 9C2B 3E 08        6 ld a,8
 524+ 9C2D 95           	sub l
 525+ 9C2E 30 1E        	jr nc,3F
 526+ 9C30
 527+ 9C30              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C30              ; B="0".
 529+ 9C30
 530+ 9C30 04           4 inc b
 531+ 9C31 3C           	inc a
 532+ 9C32 20 FC        	jr nz,4B
 533+ 9C34 78           	ld a,b
 534+ 9C35 08           	ex af,af
 535+ 9C36 2A D8 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C39 23           5 inc hl
 537+ 9C3A 23           	inc hl
 538+ 9C3B 10 FC        	djnz 5B
 539+ 9C3D 22 DC 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C40 CD 9E 90     	call Extrae_address
 541+ 9C43 22 D3 8B     	ld (Puntero_objeto),hl
 542+ 9C46
 543+ 9C46              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C46              ; _(Posicion_actual).
 545+ 9C46
 546+ 9C46 21 D1 8B     	ld hl,Posicion_actual
 547+ 9C49 35           	dec (hl)
 548+ 9C4A 08           	ex af,af
 549+ 9C4B 6F           	ld l,a
 550+ 9C4C 18 DD        	jr 6B
 551+ 9C4E
 552+ 9C4E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C4E
 554+ 9C4E 47           3 ld b,a
 555+ 9C4F 2A D6 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C52 23           2 inc hl
 557+ 9C53 23           	inc hl
 558+ 9C54 10 FC        	djnz 2B
 559+ 9C56 22 DA 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C59 C9           8 ret
 561+ 9C5A
 562+ 9C5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C5A              ;
 564+ 9C5A              ;	modifica_parametros_1er_DESPLZ
 565+ 9C5A              ;
 566+ 9C5A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C5A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C5A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C5A
 570+ 9C5A 3A D5 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C5D A7           	and a
 572+ 9C5E 20 1E        	jr nz,1F
 573+ 9C60 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C61 32 D5 8B         ld (CTRL_DESPLZ),a
 575+ 9C64 21 D0 8B     	ld hl,Columns
 576+ 9C67 34           	inc (hl)
 577+ 9C68 3A E0 8B     	ld a,(Cuad_objeto)
 578+ 9C6B E6 01        	and 1
 579+ 9C6D 20 0F        	jr nz,1F
 580+ 9C6F 2A D1 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C72 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C73 22 D1 8B     	ld (Posicion_actual),hl
 583+ 9C76 CD BD 94     	call Genera_coordenadas
 584+ 9C79 CD D5 9C     	call Dec_CTRL_DESPLZ
 585+ 9C7C 18 03        	jr 2F
 586+ 9C7E CD D5 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C81 C9           2 ret
 588+ 9C82
 589+ 9C82              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C82
 591+ 9C82 3A D5 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C85 FE F7        	cp $f7
 593+ 9C87 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C89 30 2C        	jr nc,3F
 595+ 9C8B
 596+ 9C8B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C8B
 598+ 9C8B 06 00        	ld b,0
 599+ 9C8D 04           4 inc b
 600+ 9C8E 3C           	inc a
 601+ 9C8F FE F7        	cp $f7
 602+ 9C91 20 FA        	jr nz,4B
 603+ 9C93 3E FF        	ld a,$ff
 604+ 9C95 90           	sub b
 605+ 9C96 32 D5 8B     	ld (CTRL_DESPLZ),a
 606+ 9C99 18 1C        	jr 3F
 607+ 9C9B
 608+ 9C9B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C9B
 610+ 9C9B 21 D0 8B     1 ld hl,Columns
 611+ 9C9E 35           	dec (hl)
 612+ 9C9F AF           	xor a
 613+ 9CA0 32 D5 8B     	ld (CTRL_DESPLZ),a
 614+ 9CA3 3A E0 8B     	ld a,(Cuad_objeto)
 615+ 9CA6 E6 01        	and 1
 616+ 9CA8 28 0A        	jr z,2F
 617+ 9CAA 2A D1 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CAD 2B           	dec hl
 619+ 9CAE 22 D1 8B     	ld (Posicion_actual),hl
 620+ 9CB1 CD BD 94     	call Genera_coordenadas
 621+ 9CB4
 622+ 9CB4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CB4
 624+ 9CB4 CD C6 90     2 call Inicia_puntero_objeto_izq
 625+ 9CB7 C9           3 ret
 626+ 9CB8
 627+ 9CB8              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CB8              ;
 629+ 9CB8              ;	19/10/22
 630+ 9CB8              ;
 631+ 9CB8              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CB8              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CB8
 634+ 9CB8 3A C2 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CBB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CBD C9           	ret
 637+ 9CBE
 638+ 9CBE              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CBE              ;
 640+ 9CBE              ;	19/10/22
 641+ 9CBE              ;
 642+ 9CBE              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CBE              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CBE
 645+ 9CBE 3A C2 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CC1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CC3 C9           	ret
 648+ 9CC4
 649+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CC4              ;
 651+ 9CC4              ;	24/7/22
 652+ 9CC4              ;
 653+ 9CC4              ;	Inc_CTRL_DESPLZ
 654+ 9CC4              ;
 655+ 9CC4              ;
 656+ 9CC4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CC4
 658+ 9CC4 21 D5 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CC7 3A E7 8B     	ld a,(Vel_right)
 660+ 9CCA A7           	and a
 661+ 9CCB 28 06        	jr z,1F
 662+ 9CCD 47           	ld b,a
 663+ 9CCE 34           3 inc (hl)
 664+ 9CCF 10 FD        	djnz 3B
 665+ 9CD1 18 01        	jr 2F
 666+ 9CD3 34           1 inc (hl)
 667+ 9CD4 C9           2 ret
 668+ 9CD5
 669+ 9CD5              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CD5              ;
 671+ 9CD5              ;	5/2/23
 672+ 9CD5              ;
 673+ 9CD5              ;	Dec_CTRL_DESPLZ
 674+ 9CD5              ;
 675+ 9CD5              ;
 676+ 9CD5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CD5
 678+ 9CD5 21 D5 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CD8 3A E6 8B     	ld a,(Vel_left)
 680+ 9CDB A7           	and a
 681+ 9CDC 28 06        	jr z,1F
 682+ 9CDE 47           	ld b,a
 683+ 9CDF 35           3 dec (hl)
 684+ 9CE0 10 FD        	djnz 3B
 685+ 9CE2 18 01        	jr 2F
 686+ 9CE4 35           1 dec (hl)
 687+ 9CE5 C9           2 ret
 688+ 9CE6
 689+ 9CE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CE6
 691+ 9CE6 2A D1 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CE9 01 1F 00     	ld bc,31
 693+ 9CEC A7           	and a
 694+ 9CED ED 4A        	adc hl,bc
 695+ 9CEF 22 D1 8B     	ld (Posicion_actual),hl
 696+ 9CF2 21 CE 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CF5 CB C6        	set 0,(hl)
 698+ 9CF7 C9           	ret
 699+ 9CF8
 700+ 9CF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CF8
 702+ 9CF8 2A D1 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CFB 01 1F 00     	ld bc,31
 704+ 9CFE A7           	and a
 705+ 9CFF ED 42        	sbc hl,bc
 706+ 9D01 22 D1 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D04 21 CE 8B     	ld hl,Ctrl_0
 708+ 9D07 CB CE        	set 1,(hl)
 709+ 9D09 C9           	ret
 710+ 9D0A
 711+ 9D0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D0A
 713+ 9D0A 24           Reaparece_abajo inc h
 714+ 9D0B 01 E0 17     	ld bc,$17e0
 715+ 9D0E A7           	and a
 716+ 9D0F ED 4A        	adc hl,bc
 717+ 9D11 22 D1 8B     	ld (Posicion_actual),hl
 718+ 9D14 21 CE 8B     	ld hl,Ctrl_0
 719+ 9D17 CB D6        	set 2,(hl)
 720+ 9D19 C9           	ret
 721+ 9D1A
 722+ 9D1A              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D1A
 724+ 9D1A 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D1D A7           	and a
 726+ 9D1E ED 42        	sbc hl,bc
 727+ 9D20 22 D1 8B     	ld (Posicion_actual),hl
 728+ 9D23 21 CE 8B     	ld hl,Ctrl_0
 729+ 9D26 CB DE        	set 3,(hl)
 730+ 9D28 C9           	ret
 731+ 9D29
 732+ 9D29              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D29              ;
 734+ 9D29              ;	15/07/23
 735+ 9D29
 736+ 9D29              Reinicio
 737+ 9D29
 738+ 9D29              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D29
 740+ 9D29 AF           	xor a
 741+ 9D2A 21 F6 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D2D CD 4B 9D     	call Limpia_contenido_hl
 743+ 9D30
 744+ 9D30 21 D1 8B     	ld hl,Posicion_actual
 745+ 9D33 CD 4B 9D     	call Limpia_contenido_hl
 746+ 9D36
 747+ 9D36 CD 9F 92     	call Inicializa_Puntero_indice_mov
 748+ 9D39 CD 4A 9E     	call Inicia_Puntero_mov
 749+ 9D3C
 750+ 9D3C 21 F8 8B     	ld hl,Incrementa_puntero
 751+ 9D3F 06 05        	ld b,5
 752+ 9D41 77           1 ld (hl),a
 753+ 9D42 23           	inc hl
 754+ 9D43 10 FC        	djnz 1B
 755+ 9D45
 756+ 9D45 21 CD 8B     	ld hl,Ctrl_2
 757+ 9D48 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D4A
 759+ 9D4A C9           	ret
 760+ 9D4B
 761+ 9D4B 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D4C 23           	inc hl
 763+ 9D4D 77           	ld (hl),a
 764+ 9D4E C9           	ret
 765+ 9D4F
 766+ 9D4F              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D4F              ;
 768+ 9D4F              ;	18/6/24
 769+ 9D4F              ;
 770+ 9D4F
 771+ 9D4F              Amadeus_a_izquierda
 772+ 9D4F
 773+ 9D4F              ;	Actualiza contador de movimientos.
 774+ 9D4F
 775+ 9D4F 21 84 89     	ld hl,Comm_Amadeus
 776+ 9D52 35           	dec (hl)
 777+ 9D53 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D55
 779+ 9D55 2A 82 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D58 2B           	dec hl
 781+ 9D59 2B           	dec hl
 782+ 9D5A 2B           	dec hl
 783+ 9D5B 2B           	dec hl
 784+ 9D5C 22 82 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D5F
 786+ 9D5F 21 31 8C     	ld hl,Ctrl_3
 787+ 9D62 CB EE        	set 5,(hl)
 788+ 9D64
 789+ 9D64 C9           	ret
 790+ 9D65
 791+ 9D65 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D66 C9           	ret
 793+ 9D67
 794+ 9D67
 795+ 9D67              Amadeus_a_derecha
 796+ 9D67
 797+ 9D67              ;	Actualiza contador de movimientos.
 798+ 9D67
 799+ 9D67 21 84 89     	ld hl,Comm_Amadeus
 800+ 9D6A 34           	inc (hl)
 801+ 9D6B 3E 7A        	ld a,$7a
 802+ 9D6D BE           	cp (hl)
 803+ 9D6E 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D70
 805+ 9D70 2A 82 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D73 23           	inc hl
 807+ 9D74 23           	inc hl
 808+ 9D75 23           	inc hl
 809+ 9D76 23           	inc hl
 810+ 9D77 22 82 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D7A
 812+ 9D7A 21 31 8C     	ld hl,Ctrl_3
 813+ 9D7D CB EE        	set 5,(hl)
 814+ 9D7F C9           	ret
 815+ 9D80
 816+ 9D80 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D81 C9           	ret
# file closed: Direcciones.asm
2067  9D82              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D82              ; ----- ----- ----- ----- -----
   2+ 9D82              ;
   3+ 9D82              ;   28/12/23
   4+ 9D82
   5+ 9D82              Movimiento
   6+ 9D82
   7+ 9D82              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D82
   9+ 9D82 3A CD 8B         ld a,(Ctrl_2)
  10+ 9D85 CB 57            bit 2,a
  11+ 9D87 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D89
  13+ 9D89 2A F4 8B         ld hl,(Puntero_mov)
  14+ 9D8C 7E               ld a,(hl)
  15+ 9D8D
  16+ 9D8D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D8D
  18+ 9D8D              Inicia_desplazamiento.
  19+ 9D8D
  20+ 9D8D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D8D
  22+ 9D8D CD 80 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D90
  24+ 9D90              ; Iniciamos (Repetimos_mov).
  25+ 9D90
  26+ 9D90 7E               ld a,(hl)
  27+ 9D91 E6 0F            and $0f
  28+ 9D93 32 FA 8B         ld (Repetimos_desplazamiento),a
  29+ 9D96 32 FB 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D99
  31+ 9D99              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D99
  33+ 9D99 23               inc hl
  34+ 9D9A 7E               ld a,(hl)
  35+ 9D9B 32 FD 8B         ld (Cola_de_desplazamiento),a
  36+ 9D9E 2B               dec hl
  37+ 9D9F
  38+ 9D9F 21 CD 8B         ld hl,Ctrl_2
  39+ 9DA2 CB D6            set 2,(hl)
  40+ 9DA4
  41+ 9DA4              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DA4              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DA4
  44+ 9DA4              Desplazamiento_iniciado
  45+ 9DA4
  46+ 9DA4 CD 54 9E         call Aplica_desplazamiento
  47+ 9DA7
  48+ 9DA7              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DA7
  50+ 9DA7 3A 31 8C         ld a,(Ctrl_3)
  51+ 9DAA CB 4F            bit 1,a
  52+ 9DAC C0               ret nz
  53+ 9DAD
  54+ 9DAD 21 FA 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DB0 35               dec (hl)
  56+ 9DB1 C0               ret nz
  57+ 9DB2
  58+ 9DB2              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DB2              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DB2              ; Analiza (Cola_de_desplazamiento).
  61+ 9DB2
  62+ 9DB2 3A FD 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DB5 A7               and a
  64+ 9DB6 CC A9 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DB9 28 30            jr z,Reinicia_el_movimiento
  66+ 9DBB
  67+ 9DBB FE FF            cp $ff
  68+ 9DBD 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DBF
  70+ 9DBF FE FE            cp $fe
  71+ 9DC1 CC 2E 9E         call z,Fijamos_bucle
  72+ 9DC4 28 25            jr z,Reinicia_el_movimiento
  73+ 9DC6
  74+ 9DC6 FE FD            cp $fd
  75+ 9DC8 20 11            jr nz,1F
  76+ 9DCA
  77+ 9DCA              ; ---
  78+ 9DCA              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DCA
  80+ 9DCA 3A CD 8B         ld a,(Ctrl_2)
  81+ 9DCD CB 5F            bit 3,a
  82+ 9DCF 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DD1
  84+ 9DD1              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DD1
  86+ 9DD1 21 CD 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DD4 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DD6
  89+ 9DD6 CD 3F 9E         call Inicia_Repetimos_movimiento
  90+ 9DD9 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DDB              ; ---
  92+ 9DDB
  93+ 9DDB FE 01        1 cp 1
  94+ 9DDD CA 18 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DE0
  96+ 9DE0 3D               dec a
  97+ 9DE1 32 FD 8B         ld (Cola_de_desplazamiento),a
  98+ 9DE4
  99+ 9DE4 3A FB 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DE7 32 FA 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DEA              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DEA C9               ret
 103+ 9DEB
 104+ 9DEB              Reinicia_el_movimiento
 105+ 9DEB
 106+ 9DEB 3A CD 8B         ld a,(Ctrl_2)
 107+ 9DEE CB 5F            bit 3,a
 108+ 9DF0 28 1B            jr z,2F
 109+ 9DF2
 110+ 9DF2              ; (Cola_de_desplazamiento)="254".
 111+ 9DF2
 112+ 9DF2 21 FC 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DF5 35               dec (hl)
 114+ 9DF6 20 15            jr nz,2F
 115+ 9DF8
 116+ 9DF8              ; Fin de las repeticiones del último movimiento.
 117+ 9DF8
 118+ 9DF8 21 CD 8B         ld hl,Ctrl_2
 119+ 9DFB CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DFD
 121+ 9DFD 2A F4 8B         ld hl,(Puntero_mov)
 122+ 9E00 23               inc hl
 123+ 9E01 23               inc hl
 124+ 9E02 23               inc hl
 125+ 9E03 22 F4 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E06              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E06 7E               ld a,(hl)
 128+ 9E07 32 FD 8B         ld (Cola_de_desplazamiento),a
 129+ 9E0A
 130+ 9E0A C3 B2 9D         jp Cola
 131+ 9E0D
 132+ 9E0D CD 4A 9E     2 call Inicia_Puntero_mov
 133+ 9E10
 134+ 9E10 21 CD 8B         ld hl,Ctrl_2
 135+ 9E13 CB 96            res 2,(hl)
 136+ 9E15
 137+ 9E15 C3 82 9D         jp Movimiento
 138+ 9E18
 139+ 9E18              Siguiente_desplazamiento
 140+ 9E18
 141+ 9E18              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E18              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E18
 144+ 9E18 21 CD 8B         ld hl,Ctrl_2
 145+ 9E1B CB 96            res 2,(hl)
 146+ 9E1D
 147+ 9E1D 2A F4 8B         ld hl,(Puntero_mov)
 148+ 9E20 23               inc hl
 149+ 9E21 23               inc hl
 150+ 9E22 22 F4 8B         ld (Puntero_mov),hl
 151+ 9E25
 152+ 9E25 7E               ld a,(hl)
 153+ 9E26 A7               and a
 154+ 9E27 CC A9 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E2A CA EB 9D         jp z,Reinicia_el_movimiento
 156+ 9E2D
 157+ 9E2D C9               ret
 158+ 9E2E
 159+ 9E2E              ; Subrutinas -----------------------------------------
 160+ 9E2E              ; ---------- --------- --------- ---------- ----------
 161+ 9E2E              ;
 162+ 9E2E              ;   24/07/23
 163+ 9E2E              ;
 164+ 9E2E              ;   Fijamos_bucle
 165+ 9E2E              ;
 166+ 9E2E              ;
 167+ 9E2E
 168+ 9E2E              Fijamos_bucle
 169+ 9E2E
 170+ 9E2E 3A F8 8B         ld a,(Incrementa_puntero)
 171+ 9E31 3C               inc a
 172+ 9E32 32 F9 8B         ld (Incrementa_puntero_backup),a
 173+ 9E35
 174+ 9E35 CD A9 9E         call Incrementa_Puntero_indice_mov
 175+ 9E38 2A F2 8B         ld hl,(Puntero_indice_mov)
 176+ 9E3B 22 F6 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E3E C9               ret
 178+ 9E3F
 179+ 9E3F              ; ---------- --------- --------- ---------- ----------
 180+ 9E3F              ;
 181+ 9E3F              ;   07/7/23
 182+ 9E3F              ;
 183+ 9E3F              ;   Inicia_Repetimos_movimiento
 184+ 9E3F              ;
 185+ 9E3F              ;
 186+ 9E3F
 187+ 9E3F              Inicia_Repetimos_movimiento
 188+ 9E3F
 189+ 9E3F              ; Iniciamos (Repetimos_movimiento).
 190+ 9E3F
 191+ 9E3F DD 2A F4 8B      ld ix,(Puntero_mov)
 192+ 9E43 DD 7E 02         ld a,(ix+2)
 193+ 9E46 32 FC 8B         ld (Repetimos_movimiento),a
 194+ 9E49
 195+ 9E49 C9               ret
 196+ 9E4A
 197+ 9E4A              ; ---------- --------- --------- ---------- ----------
 198+ 9E4A              ;
 199+ 9E4A              ;   26/6/23
 200+ 9E4A              ;
 201+ 9E4A              ;   Inicia_Puntero_mov
 202+ 9E4A              ;
 203+ 9E4A              ;
 204+ 9E4A
 205+ 9E4A 2A F2 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E4D CD 9E 90         call Extrae_address
 207+ 9E50 22 F4 8B         ld (Puntero_mov),hl
 208+ 9E53 C9               ret
 209+ 9E54
 210+ 9E54              ; ---------- --------- --------- ---------- ----------
 211+ 9E54              ;
 212+ 9E54              ;   27/06/23
 213+ 9E54              ;
 214+ 9E54              ;   Aplica_movimiento.
 215+ 9E54
 216+ 9E54              Aplica_desplazamiento
 217+ 9E54
 218+ 9E54              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E54
 220+ 9E54 2A F4 8B         ld hl, (Puntero_mov)
 221+ 9E57
 222+ 9E57 7E               ld a,(hl)
 223+ 9E58 E6 F0            and $f0
 224+ 9E5A C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E5B
 226+ 9E5B CB 7E            bit 7,(hl)
 227+ 9E5D 28 03            jr z,1F
 228+ 9E5F CD 36 9A         call Mov_up
 229+ 9E62 2A F4 8B     1 ld hl, (Puntero_mov)
 230+ 9E65 CB 76            bit 6,(hl)
 231+ 9E67 28 03            jr z,2F
 232+ 9E69 CD FD 99         call Mov_down
 233+ 9E6C
 234+ 9E6C              ; Se ha aplicado reinicio ???
 235+ 9E6C              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E6C
 237+ 9E6C              ;    ld a,(Ctrl_3)
 238+ 9E6C              ;    bit 1,a
 239+ 9E6C              ;    ret nz
 240+ 9E6C
 241+ 9E6C 2A F4 8B     2 ld hl, (Puntero_mov)
 242+ 9E6F CB 6E            bit 5,(hl)
 243+ 9E71 28 03            jr z,3F
 244+ 9E73 CD 9C 9B         call Mov_left
 245+ 9E76 2A F4 8B     3 ld hl, (Puntero_mov)
 246+ 9E79 CB 66            bit 4,(hl)
 247+ 9E7B C8               ret z
 248+ 9E7C CD 79 9A         call Mov_right
 249+ 9E7F C9               ret
 250+ 9E80
 251+ 9E80              ; ---------- --------- --------- ---------- ----------
 252+ 9E80              ;
 253+ 9E80              ;   26/06/23
 254+ 9E80              ;
 255+ 9E80              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E80
 257+ 9E80              Ajusta_velocidad_desplazamiento
 258+ 9E80
 259+ 9E80              ; 1er byte de la cadena de movimiento.
 260+ 9E80              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E80
 262+ 9E80 CD 9E 9E         call Extrae_nibble_alto
 263+ 9E83
 264+ 9E83 32 E8 8B         ld (Vel_up),a
 265+ 9E86 79               ld a,c
 266+ 9E87 E6 0F            and $0f
 267+ 9E89 32 E9 8B         ld (Vel_down),a
 268+ 9E8C
 269+ 9E8C              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E8C              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E8C
 272+ 9E8C 23               inc hl
 273+ 9E8D CD 9E 9E         call Extrae_nibble_alto
 274+ 9E90
 275+ 9E90 32 E6 8B         ld (Vel_left),a
 276+ 9E93 79               ld a,c
 277+ 9E94 E6 0F            and $0f
 278+ 9E96 32 E7 8B         ld (Vel_right),a
 279+ 9E99
 280+ 9E99              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E99
 282+ 9E99 23               inc hl
 283+ 9E9A 22 F4 8B         ld (Puntero_mov),hl
 284+ 9E9D C9               ret
 285+ 9E9E
 286+ 9E9E 06 04        Extrae_nibble_alto ld b,4
 287+ 9EA0 7E               ld a,(hl)
 288+ 9EA1 4F               ld c,a
 289+ 9EA2 E6 F0            and $f0
 290+ 9EA4 CB 3F        1 srl a
 291+ 9EA6 10 FC            djnz 1B
 292+ 9EA8 C9               ret
 293+ 9EA9
 294+ 9EA9              ; ---------- --------- --------- ---------- ----------
 295+ 9EA9              ;
 296+ 9EA9              ;   5/7/23
 297+ 9EA9              ;
 298+ 9EA9              ;   Incrementa_Puntero_indice_mov
 299+ 9EA9
 300+ 9EA9              Incrementa_Puntero_indice_mov
 301+ 9EA9
 302+ 9EA9 21 F8 8B         ld hl,Incrementa_puntero
 303+ 9EAC 34               inc (hl)
 304+ 9EAD
 305+ 9EAD 2A F2 8B         ld hl,(Puntero_indice_mov)
 306+ 9EB0 01 02 00         ld bc,2
 307+ 9EB3 A7               and a
 308+ 9EB4 09               add hl,bc
 309+ 9EB5 22 F2 8B         ld (Puntero_indice_mov),hl
 310+ 9EB8
 311+ 9EB8 7E               ld a,(hl)
 312+ 9EB9 A7               and a
 313+ 9EBA
 314+ 9EBA              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EBA
 316+ 9EBA              ;    jr z,$
 317+ 9EBA
 318+ 9EBA              ;! Reinicia el Patrón de movimiento.
 319+ 9EBA
 320+ 9EBA CC BF 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EBD
 322+ 9EBD AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EBE
 324+ 9EBE C9               ret
 325+ 9EBF
 326+ 9EBF              ; ---------- --------- --------- ---------- ----------
 327+ 9EBF              ;
 328+ 9EBF              ;   15/01/24
 329+ 9EBF              ;
 330+ 9EBF              ;   Inicializa_Puntero_indice_mov
 331+ 9EBF
 332+ 9EBF              Inicializa_Puntero_indice_mov_2
 333+ 9EBF
 334+ 9EBF              ; Existe etiqueta de bucle principal???
 335+ 9EBF
 336+ 9EBF 2A F6 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EC2 24               inc h
 338+ 9EC3 25               dec h
 339+ 9EC4 28 05            jr z,2F
 340+ 9EC6
 341+ 9EC6 22 F2 8B         ld (Puntero_indice_mov),hl
 342+ 9EC9 18 14            jr 3F
 343+ 9ECB
 344+ 9ECB              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ECB
 346+ 9ECB 3A F8 8B     2 ld a,(Incrementa_puntero)
 347+ 9ECE 47               ld b,a
 348+ 9ECF
 349+ 9ECF 2A F2 8B         ld hl,(Puntero_indice_mov)
 350+ 9ED2 2B           1 dec hl
 351+ 9ED3 2B               dec hl
 352+ 9ED4 10 FC            djnz 1B
 353+ 9ED6 22 F2 8B         ld (Puntero_indice_mov),hl
 354+ 9ED9
 355+ 9ED9 AF               xor a
 356+ 9EDA 32 F8 8B         ld (Incrementa_puntero),a
 357+ 9EDD 18 06            jr 4F
 358+ 9EDF
 359+ 9EDF 3A F9 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EE2 32 F8 8B         ld (Incrementa_puntero),a
 361+ 9EE5 C9           4 ret
 362+ 9EE6
 363+ 9EE6              ; ----------------------------------------------------------------------
 364+ 9EE6              ;
 365+ 9EE6              ;   30/01/24
 366+ 9EE6              ;
 367+ 9EE6              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EE6
 369+ 9EE6 3A C1 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EE9 CD 3A 94         call Calcula_salto_en_BC
 371+ 9EEC 21 EA 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EEF A7               and a
 373+ 9EF0 ED 4A            adc hl,bc
 374+ 9EF2 C9               ret
 375+ 9EF3
 376+ 9EF3              ; ----------------------------------------------------------------------
 377+ 9EF3              ;
 378+ 9EF3              ;   30/01/24
 379+ 9EF3              ;
 380+ 9EF3              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EF3              ;
 382+ 9EF3              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EF3
 384+ 9EF3 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EF4 23               inc hl
 386+ 9EF5 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EF6 69               ld l,c
 388+ 9EF7 60               ld h,b
 389+ 9EF8 22 CA 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EFB C9               ret
 391+ 9EFC
# file closed: Movimiento.asm
2068  9EFC              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EFC              Motor_de_disparos_entidades
   2+ 9EFC
   3+ 9EFC 3A 21 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9EFF FE 07            cp 7
   5+ 9F01 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9F02
   7+ 9F02 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9F04 21 31 89         ld hl,Indice_de_disparos_entidades
   9+ 9F07
  10+ 9F07 CD 9E 90     1 call Extrae_address
  11+ 9F0A 1C               inc e
  12+ 9F0B 1C               inc e
  13+ 9F0C ED 53 34 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F10
  15+ 9F10               ; Caja vacía ???
  16+ 9F10
  17+ 9F10 2C               inc l
  18+ 9F11
  19+ 9F11 7E               ld a,(hl)
  20+ 9F12 A7               and a
  21+ 9F13 28 19            jr z,3F                                                              ; Caja vacía.
  22+ 9F15
  23+ 9F15              ; --- Trabajamos con caja:
  24+ 9F15
  25+ 9F15              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
  26+ 9F15
  27+ 9F15 CD 44 9F         call Rota_disparo_si_procede
  28+ 9F18
  29+ 9F18              ; ------------------------------------------------------------
  30+ 9F18
  31+ 9F18 2D               dec l
  32+ 9F19 2D               dec l
  33+ 9F1A 2D               dec l
  34+ 9F1B
  35+ 9F1B CD 9E 90         call Extrae_address
  36+ 9F1E              ;   (Puntero_de_impresion) del disparo en HL.
  37+ 9F1E
  38+ 9F1E              ;! Velocidad del disparo de entidades.
  39+ 9F1E
  40+ 9F1E CD B7 99         call NextScan
  41+ 9F21
  42+ 9F21              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  43+ 9F21
  44+ 9F21 CD 32 9F         call Fin_de_disparo_de_entidad
  45+ 9F24
  46+ 9F24 EB               ex de,hl
  47+ 9F25
  48+ 9F25 73               ld (hl),e
  49+ 9F26 23               inc hl
  50+ 9F27 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  51+ 9F28
  52+ 9F28 2A 34 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  53+ 9F2B 18 02            jr 2F
  54+ 9F2D
  55+ 9F2D C9               ret
  56+ 9F2E
  57+ 9F2E EB           3 ex de,hl
  58+ 9F2F 10 D6        2 djnz 1B
  59+ 9F31
  60+ 9F31 C9               ret
  61+ 9F32
  62+ 9F32              ; ------------- ------------- ------------
  63+ 9F32              ;
  64+ 9F32              ;   25/9/24
  65+ 9F32
  66+ 9F32              Fin_de_disparo_de_entidad
  67+ 9F32
  68+ 9F32 7C               ld a,h
  69+ 9F33 FE 54            cp $54
  70+ 9F35 D8               ret c
  71+ 9F36
  72+ 9F36 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  73+ 9F37
  74+ 9F37 5D               ld e,l
  75+ 9F38 54               ld d,h
  76+ 9F39
  77+ 9F39 21 E0 57         ld hl,$57e0
  78+ 9F3C ED 52            sbc hl,de
  79+ 9F3E
  80+ 9F3E 38 37            jr c,Elimina_disparo_entidad
  81+ 9F40
  82+ 9F40 6B               ld l,e
  83+ 9F41 62               ld h,d
  84+ 9F42
  85+ 9F42 D1               pop de
  86+ 9F43
  87+ 9F43 C9               ret
  88+ 9F44
  89+ 9F44              ; ----------------------------------------------------------
  90+ 9F44              ;
  91+ 9F44              ;   08/10/24
  92+ 9F44
  93+ 9F44              Rota_disparo_si_procede
  94+ 9F44
  95+ 9F44              ;   Nos situamos en el byte alto de (Control).
  96+ 9F44
  97+ 9F44 CB 76            bit 6,(hl)
  98+ 9F46 20 03            jr nz,Decrementa_contador_de_control_de_disparo
  99+ 9F48 CB 7E            bit 7,(hl)
 100+ 9F4A C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 101+ 9F4B
 102+ 9F4B              Decrementa_contador_de_control_de_disparo
 103+ 9F4B
 104+ 9F4B 35               dec (hl)
 105+ 9F4C 7E               ld a,(hl)
 106+ 9F4D E6 07            and 7
 107+ 9F4F C0               ret nz
 108+ 9F50
 109+ 9F50              Rotamos_disparo_segun_proceda
 110+ 9F50
 111+ 9F50              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 112+ 9F50
 113+ 9F50 3E 07            ld a,7
 114+ 9F52 86               add (hl)
 115+ 9F53 77               ld (hl),a                                                           ; Contador reinicializado.
 116+ 9F54
 117+ 9F54 CD 69 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 118+ 9F57
 119+ 9F57 CB 76            bit 6,(hl)
 120+ 9F59 20 05            jr nz,Rota_a_derecha
 121+ 9F5B
 122+ 9F5B
 123+ 9F5B              Rota_a_izq
 124+ 9F5B
 125+ 9F5B F3               di
 126+ 9F5C 18 FE            jr $
 127+ 9F5E FB               ei
 128+ 9F5F
 129+ 9F5F C9               ret
 130+ 9F60
 131+ 9F60              Rota_a_derecha
 132+ 9F60
 133+ 9F60 FD CB 00 3E      srl (iy)
 134+ 9F64
 135+ 9F64 F3               di
 136+ 9F65 38 FE            jr c,$
 137+ 9F67 FB               ei
 138+ 9F68
 139+ 9F68              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 140+ 9F68
 141+ 9F68 C9               ret
 142+ 9F69
 143+ 9F69              ; ------------ ----------- ------------
 144+ 9F69              ;
 145+ 9F69              ;   11/10/24
 146+ 9F69
 147+ 9F69              Puntero_objeto_en_IY
 148+ 9F69
 149+ 9F69 E5               push hl
 150+ 9F6A
 151+ 9F6A 2D               dec l
 152+ 9F6B 2D               dec l
 153+ 9F6C 2D               dec l
 154+ 9F6D 2D               dec l
 155+ 9F6E 2D               dec l
 156+ 9F6F
 157+ 9F6F CD 9E 90         call Extrae_address
 158+ 9F72 E5               push hl
 159+ 9F73 FD E1            pop iy
 160+ 9F75 E1               pop hl
 161+ 9F76
 162+ 9F76 C9               ret
 163+ 9F77
 164+ 9F77              ; ------------ ----------- ------------
 165+ 9F77              ;
 166+ 9F77              ;   25/9/24
 167+ 9F77
 168+ 9F77              Elimina_disparo_entidad
 169+ 9F77
 170+ 9F77 21 21 8C         ld hl,Numero_de_disparos_de_entidades
 171+ 9F7A 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 172+ 9F7B
 173+ 9F7B E1               pop hl
 174+ 9F7C E5               push hl
 175+ 9F7D
 176+ 9F7D 2B               dec hl
 177+ 9F7E 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
 178+ 9F7F
 179+ 9F7F 16 06            ld d,6                                                              ; Contador
 180+ 9F81 AF               xor a                                                               ; Borrador
 181+ 9F82
 182+ 9F82 77           1 ld (hl),a
 183+ 9F83 15               dec d
 184+ 9F84 23               inc hl
 185+ 9F85 20 FB            jr nz,1B
 186+ 9F87
 187+ 9F87 D1               pop de
 188+ 9F88
 189+ 9F88 21 00 00         ld hl,0
 190+ 9F8B
 191+ 9F8B C9               ret
 192+ 9F8C              ; --------------------------------------------------------------------------------------
 193+ 9F8C              ;
 194+ 9F8C              ;   05/10/24
 195+ 9F8C              ;
 196+ 9F8C
 197+ 9F8C              Genera_datos_de_impresion_disparos_Entidades
 198+ 9F8C
 199+ 9F8C 3A 21 8C         ld a,(Numero_de_disparos_de_entidades)
 200+ 9F8F 47               ld b,a
 201+ 9F90 3E 07            ld a,7
 202+ 9F92 90               sub b
 203+ 9F93 C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 204+ 9F94
 205+ 9F94 08               ex af,af
 206+ 9F95
 207+ 9F95              ; ---------------
 208+ 9F95
 209+ 9F95              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 210+ 9F95
 211+ 9F95 21 23 89         ld hl,Indice_de_disparos_entidades_00
 212+ 9F98
 213+ 9F98 CD 9E 90     1 call Extrae_address
 214+ 9F9B
 215+ 9F9B 7E               ld a,(hl)
 216+ 9F9C 23               inc hl
 217+ 9F9D 86               add (hl)
 218+ 9F9E
 219+ 9F9E 28 21            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 220+ 9FA0
 221+ 9FA0 2B               dec hl
 222+ 9FA1
 223+ 9FA1 ED 73 0E 8C      ld (Stack),sp
 224+ 9FA5 F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 225+ 9FA6
 226+ 9FA6              Genera_scanlines_de_los_disparos_de_entidades.
 227+ 9FA6
 228+ 9FA6 C1               pop bc
 229+ 9FA7 E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 230+ 9FA8              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 231+ 9FA8 ED 7B 1E 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 232+ 9FAC
 233+ 9FAC F1               pop af
 234+ 9FAD F1               pop af
 235+ 9FAE F1               pop af
 236+ 9FAF
 237+ 9FAF ED 73 1E 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 238+ 9FB3
 239+ 9FB3 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 240+ 9FB4 CD B7 99         call NextScan
 241+ 9FB7 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 242+ 9FB8 C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 243+ 9FB9
 244+ 9FB9 ED 7B 0E 8C      ld sp,(Stack)
 245+ 9FBD
 246+ 9FBD 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 247+ 9FBE 3D               dec a
 248+ 9FBF C8               ret z
 249+ 9FC0 08               ex af,af
 250+ 9FC1
 251+ 9FC1              Situa_en_siguiente_caja
 252+ 9FC1
 253+ 9FC1 13               inc de
 254+ 9FC2 13               inc de
 255+ 9FC3
 256+ 9FC3 EB               ex de,hl
 257+ 9FC4
 258+ 9FC4 18 D2            jr 1B
 259+ 9FC6
 260+ 9FC6              ; --------------------------------------------------------------------------------------
 261+ 9FC6              ;
 262+ 9FC6              ;   09/10/24
 263+ 9FC6              ;
 264+ 9FC6
 265+ 9FC6              Genera_disparo_de_entidad_maldosa
 266+ 9FC6
 267+ 9FC6              ;   Estructura de un disparo de entidades.
 268+ 9FC6
 269+ 9FC6              ;   Disparo_1 defw 0								; Puntero objeto.
 270+ 9FC6              ; 	defw 0											; Puntero de impresión.
 271+ 9FC6              ;	defw 0											; Control.
 272+ 9FC6
 273+ 9FC6              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 274+ 9FC6              ;   _de la entidad en el momento de disparar.
 275+ 9FC6
 276+ 9FC6              ;   El byte alto muestra la siguiente información:
 277+ 9FC6              ;
 278+ 9FC6              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 279+ 9FC6              ;                        _antes de desplazarse a derecha/izquierda.
 280+ 9FC6              ;
 281+ 9FC6              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 282+ 9FC6              ;
 283+ 9FC6              ;                        10xx ..... Izquierda.
 284+ 9FC6              ;                        01xx ..... Derecha.
 285+ 9FC6              ;                        00xx ..... Recto.
 286+ 9FC6
 287+ 9FC6              ;*  Exclusiones.
 288+ 9FC6
 289+ 9FC6              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 290+ 9FC6              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 291+ 9FC6
 292+ 9FC6              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 293+ 9FC6
 294+ 9FC6 3A 21 8C         ld a,(Numero_de_disparos_de_entidades)
 295+ 9FC9 A7               and a
 296+ 9FCA C8               ret z
 297+ 9FCB
 298+ 9FCB 3A C3 8B         ld a,(Coordenada_y)
 299+ 9FCE A7               and a
 300+ 9FCF C8               ret z
 301+ 9FD0
 302+ 9FD0 3D               dec a
 303+ 9FD1 C8               ret z
 304+ 9FD2
 305+ 9FD2 FE 10            cp 16
 306+ 9FD4 D0               ret nc
 307+ 9FD5
 308+ 9FD5              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 309+ 9FD5              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 310+ 9FD5              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 311+ 9FD5
 312+ 9FD5 21 23 8C         ld hl,Permiso_de_disparo_Entidades
 313+ 9FD8 35               dec (hl)                                            ; No más disparos en este FRAME.
 314+ 9FD9
 315+ 9FD9              ;   Decrementa el numero de disparos de entidades.
 316+ 9FD9
 317+ 9FD9 21 21 8C         ld hl,Numero_de_disparos_de_entidades
 318+ 9FDC 35               dec (hl)
 319+ 9FDD
 320+ 9FDD 21 31 89         ld hl,Indice_de_disparos_entidades
 321+ 9FE0
 322+ 9FE0 CD 9E 90     1 call Extrae_address
 323+ 9FE3
 324+ 9FE3 13               inc de
 325+ 9FE4 13               inc de
 326+ 9FE5
 327+ 9FE5 ED 53 34 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 328+ 9FE9
 329+ 9FE9              ;   Comprobamos si la caja está vacía.
 330+ 9FE9
 331+ 9FE9 2C               inc l
 332+ 9FEA
 333+ 9FEA 7E               ld a,(hl)
 334+ 9FEB A7               and a
 335+ 9FEC 20 1A            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 336+ 9FEE
 337+ 9FEE              ;   Caja vacía, vamos a generar un disparo.
 338+ 9FEE              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 339+ 9FEE
 340+ 9FEE CD 0D A0         call Genera_byte_inclinacion
 341+ 9FF1
 342+ 9FF1 7E               ld a,(hl)
 343+ 9FF2 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 344+ 9FF3
 345+ 9FF3 2D               dec l
 346+ 9FF4
 347+ 9FF4              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 348+ 9FF4
 349+ 9FF4 3A CC 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 350+ 9FF7 77               ld (hl),a
 351+ 9FF8
 352+ 9FF8 2D               dec l
 353+ 9FF9
 354+ 9FF9 CD 2B A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 355+ 9FFC
 356+ 9FFC 70               ld (hl),b
 357+ 9FFD 2D               dec l
 358+ 9FFE 71               ld (hl),c
 359+ 9FFF
 360+ 9FFF 2D               dec l
 361+ A000
 362+ A000 FD 7C            ld a,iyh
 363+ A002 77               ld (hl),a
 364+ A003 2D               dec l
 365+ A004 FD 7D            ld a,iyl
 366+ A006 77               ld (hl),a
 367+ A007
 368+ A007 C9               ret
 369+ A008
 370+ A008              ;   --- --- ---
 371+ A008
 372+ A008              Situa_en_siguiente_disparo
 373+ A008
 374+ A008 2A 34 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 375+ A00B 18 D3            jr 1B
 376+ A00D
 377+ A00D              ; --------------------------------------------------------------------------------------
 378+ A00D              ;
 379+ A00D              ;   09/10/24
 380+ A00D              ;
 381+ A00D
 382+ A00D              Genera_byte_inclinacion
 383+ A00D
 384+ A00D 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 385+ A00F
 386+ A00F              ; Determina tendencia del disparo.
 387+ A00F
 388+ A00F 3A 7C 89         ld a,(CX_Amadeus)
 389+ A012 47               ld b,a
 390+ A013 3A C2 8B         ld a,(Coordenada_X)
 391+ A016 90               sub b
 392+ A017 38 07            jr c,Disparo_a_derecha
 393+ A019
 394+ A019 FE 04        Disparo_a_izquierda cp 4
 395+ A01B
 396+ A01B D8               ret c
 397+ A01C C8               ret z
 398+ A01D
 399+ A01D CB FE            set 7,(hl)
 400+ A01F C9               ret
 401+ A020
 402+ A020 47           Disparo_a_derecha ld b,a
 403+ A021 3E FF            ld a,$ff
 404+ A023 90               sub b
 405+ A024
 406+ A024 FE 04            cp 4
 407+ A026
 408+ A026 D8               ret c
 409+ A027 C8               ret z
 410+ A028
 411+ A028 CB F6            set 6,(hl)
 412+ A02A C9               ret
 413+ A02B
 414+ A02B              ; --------------------------------------------------------------------------------------
 415+ A02B              ;
 416+ A02B              ;   09/10/24
 417+ A02B              ;
 418+ A02B
 419+ A02B              Modifica_puntero_de_impresion
 420+ A02B
 421+ A02B              ;   Puntero de impresión del disparo en BC.
 422+ A02B
 423+ A02B ED 4B 36 8C      ld bc,(Puntero_de_impresion_disparo_de_entidad)
 424+ A02F
 425+ A02F 08               ex af,af
 426+ A030 CB 77            bit 6,a
 427+ A032 28 06            jr z,1F
 428+ A034
 429+ A034 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 430+ A038 0C               inc c
 431+ A039 C9               ret
 432+ A03A
 433+ A03A CB 7F        1 bit 7,a
 434+ A03C 28 F6            jr z,2B
 435+ A03E
 436+ A03E FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 437+ A042 0D               dec c
 438+ A043
 439+ A043 C9               ret
 440+ A044
 441+ A044              ; --------------------------------------------------------------------------------------
 442+ A044              ;
 443+ A044              ;   31/08/24
 444+ A044              ;
 445+ A044
 446+ A044              Compara_con_coordenadas_de_disparo
 447+ A044
 448+ A044 3A C3 8B         ld a,(Coordenada_y)
 449+ A047 47               ld b,a
 450+ A048 3A 3B 8C         ld a,(Coordenadas_disparo_certero)
 451+ A04B 90               sub b
 452+ A04C
 453+ A04C              ; A = "0" ok
 454+ A04C              ; A = "1" ok
 455+ A04C
 456+ A04C 28 08            jr z,Comprueba_coordenada_X
 457+ A04E 3D               dec a
 458+ A04F 28 05            jr z,Comprueba_coordenada_X
 459+ A051
 460+ A051              ; A = "$ff" ok
 461+ A051
 462+ A051 FE FE            cp $fe
 463+ A053 28 01            jr z,Comprueba_coordenada_X
 464+ A055
 465+ A055 C9               ret
 466+ A056
 467+ A056              Comprueba_coordenada_X
 468+ A056
 469+ A056 3A C2 8B         ld a,(Coordenada_X)
 470+ A059 47               ld b,a
 471+ A05A 21 3C 8C         ld hl,Coordenadas_disparo_certero+1
 472+ A05D 7E               ld a,(hl)
 473+ A05E 90               sub b
 474+ A05F
 475+ A05F              ; A = "0" ok
 476+ A05F              ; A = "1" ok
 477+ A05F
 478+ A05F 28 09            jr z,Activa_Impacto_en_entidad
 479+ A061 3D               dec a
 480+ A062 28 06            jr z,Activa_Impacto_en_entidad
 481+ A064
 482+ A064              ; A = "2" ok
 483+ A064
 484+ A064 3D               dec a
 485+ A065 28 03            jr z,Activa_Impacto_en_entidad
 486+ A067
 487+ A067              ; A = "$ff"
 488+ A067
 489+ A067 FE FD            cp $fd
 490+ A069 C0               ret nz
 491+ A06A
 492+ A06A              Activa_Impacto_en_entidad
 493+ A06A
 494+ A06A              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 495+ A06A
 496+ A06A 3E 02            ld a,2
 497+ A06C 32 C5 8B         ld (Impacto),a
 498+ A06F
 499+ A06F              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 500+ A06F
 501+ A06F 11 C0 87         ld de,Indice_Explosion_entidades
 502+ A072 21 C8 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 503+ A075
 504+ A075 73               ld (hl),e
 505+ A076 23               inc hl
 506+ A077 72               ld (hl),d
 507+ A078
 508+ A078              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 509+ A078
 510+ A078 21 38 8C         ld hl,Impacto2
 511+ A07B CB 9E            res 3,(hl)
 512+ A07D
 513+ A07D C9               ret
 514+ A07E
 515+ A07E              ; --------------------------------------------------------------------------------------
 516+ A07E              ;
 517+ A07E              ;   11/09/24
 518+ A07E              ;
 519+ A07E
 520+ A07E              Limpia_album_de_borrado_disparos
 521+ A07E
 522+ A07E 21 33 8C         ld hl,Ctrl_5
 523+ A081 CB 56            bit 2,(hl)
 524+ A083 C8               ret z
 525+ A084
 526+ A084              ;    jr z,1F
 527+ A084
 528+ A084              ;    res 2,(hl)
 529+ A084
 530+ A084              ;    jr Limpiando
 531+ A084
 532+ A084              ;1 bit 0,(hl)
 533+ A084              ;    ret z
 534+ A084              ;    res 0,(hl)
 535+ A084
 536+ A084              Limpiando
 537+ A084
 538+ A084 AF               xor a
 539+ A085 2A 1A 8C         ld hl,(Album_de_pintado_disparos)
 540+ A088 77               ld (hl),a
 541+ A089 5D               ld e,l
 542+ A08A 54               ld d,h
 543+ A08B 1C               inc e                                           ; DE = HL+1
 544+ A08C 01 3A 00         ld bc,$003a
 545+ A08F ED B0            ldir
 546+ A091
 547+ A091 C9               ret
 548+ A092
 549+ A092
 550+ A092              ; --------------------------------------------------------------------------------------
 551+ A092              ;
 552+ A092              ;   29/09/24
 553+ A092              ;
 554+ A092
 555+ A092              Calcula_bytes_pintado_disparos
 556+ A092
 557+ A092 2A 1A 8C         ld hl,(Album_de_pintado_disparos)
 558+ A095 45               ld b,l
 559+ A096 2A 1E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 560+ A099 7D               ld a,l
 561+ A09A
 562+ A09A 90               sub b
 563+ A09B 32 20 8C         ld (Num_de_bytes_album_de_disparos),a
 564+ A09E
 565+ A09E C9               ret
 566+ A09F
 567+ A09F              ; --------------------------------------------------------------------------------------
 568+ A09F              ;
 569+ A09F              ;   29/09/24
 570+ A09F              ;
 571+ A09F              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 572+ A09F              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 573+ A09F              ;   _disparos que el álbum del FRAME actual).
 574+ A09F
 575+ A09F              Limpia_album_de_pintado_disparos
 576+ A09F
 577+ A09F 3A 20 8C         ld a,(Num_de_bytes_album_de_disparos)
 578+ A0A2 A7               and a
 579+ A0A3 28 0E            jr z,Clean_only_one
 580+ A0A5
 581+ A0A5 47               ld b,a
 582+ A0A6 3E 3B            ld a,$3b
 583+ A0A8 90               sub b
 584+ A0A9 47               ld b,a
 585+ A0AA AF           2 xor a
 586+ A0AB
 587+ A0AB 2A 1E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 588+ A0AE 77           1 ld (hl),a
 589+ A0AF 23               inc hl
 590+ A0B0 10 FC            djnz 1B
 591+ A0B2 C9               ret
 592+ A0B3
 593+ A0B3              Clean_only_one
 594+ A0B3
 595+ A0B3 06 06            ld b,6
 596+ A0B5 18 F3            jr 2B
 597+ A0B7
 598+ A0B7              ; --------------------------------------------------------------------------------------
 599+ A0B7              ;
 600+ A0B7              ;   29/09/24
 601+ A0B7              ;
 602+ A0B7
 603+ A0B7              Motor_Disparos_Amadeus
 604+ A0B7
 605+ A0B7              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 606+ A0B7
 607+ A0B7 21 20 89         ld hl,Disparo_Amad+1
 608+ A0BA
 609+ A0BA 34               inc (hl)
 610+ A0BB 35               dec (hl)
 611+ A0BC
 612+ A0BC C8               ret z
 613+ A0BD
 614+ A0BD              ;   Esta caja contiene un disparo.
 615+ A0BD
 616+ A0BD CD C4 A0         call Consulta_Impacto
 617+ A0C0 CC DD A0         call z,Mueve_disparo_Amadeus
 618+ A0C3
 619+ A0C3 C9               ret
 620+ A0C4
 621+ A0C4              ; ----------------------
 622+ A0C4              ;
 623+ A0C4              ;
 624+ A0C4              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 625+ A0C4              ;
 626+ A0C4              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 627+ A0C4
 628+ A0C4
 629+ A0C4              Consulta_Impacto
 630+ A0C4
 631+ A0C4              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 632+ A0C4              ;   _sea lo más coherente posible.
 633+ A0C4
 634+ A0C4 E5               push hl
 635+ A0C5 2B               dec hl
 636+ A0C6 CD E6 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 637+ A0C9 E1               pop hl
 638+ A0CA 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 639+ A0CB
 640+ A0CB C8               ret z
 641+ A0CC
 642+ A0CC 3A 38 8C         ld a,(Impacto2)
 643+ A0CF CB DF            set 3,a
 644+ A0D1 32 38 8C         ld (Impacto2),a
 645+ A0D4
 646+ A0D4 E5               push hl
 647+ A0D5 CD D3 A1         call Genera_coordenadas_de_disparo_Amadeus
 648+ A0D8 E1               pop hl
 649+ A0D9 CD F6 A0         call Elimina_disparo_Amadeus
 650+ A0DC
 651+ A0DC C9               ret
 652+ A0DD
 653+ A0DD              ; ----------------------
 654+ A0DD              ;
 655+ A0DD              ;
 656+ A0DD              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 657+ A0DD
 658+ A0DD              Mueve_disparo_Amadeus
 659+ A0DD
 660+ A0DD CD 9E 90         call Extrae_address
 661+ A0E0
 662+ A0E0 CD C6 99         call PreviousScan
 663+ A0E3 CD C6 99         call PreviousScan
 664+ A0E6 CD C6 99         call PreviousScan
 665+ A0E9 CD C6 99         call PreviousScan
 666+ A0EC
 667+ A0EC              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 668+ A0EC
 669+ A0EC 7C               ld a,h
 670+ A0ED D6 40            sub $40
 671+ A0EF EB               ex de,hl
 672+ A0F0 38 04            jr c,Elimina_disparo_Amadeus
 673+ A0F2
 674+ A0F2               ; Introduce nuevo puntero_de_impresión en la caja.
 675+ A0F2
 676+ A0F2 73               ld (hl),e
 677+ A0F3 23               inc hl
 678+ A0F4 72               ld (hl),d
 679+ A0F5
 680+ A0F5 C9               ret
 681+ A0F6
 682+ A0F6              ; ----------------------
 683+ A0F6              ;
 684+ A0F6              ;   29/9/24
 685+ A0F6
 686+ A0F6              Elimina_disparo_Amadeus
 687+ A0F6
 688+ A0F6              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 689+ A0F6              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 690+ A0F6
 691+ A0F6              ;   Disparo_1A defw 0									; Puntero objeto.
 692+ A0F6              ;   	defw 0											; Puntero de impresión.
 693+ A0F6
 694+ A0F6 2B               dec hl
 695+ A0F7 2B               dec hl
 696+ A0F8
 697+ A0F8 AF               xor a
 698+ A0F9 77               ld (hl),a
 699+ A0FA 23               inc hl
 700+ A0FB 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 701+ A0FC
 702+ A0FC 23               inc hl
 703+ A0FD 77               ld (hl),a
 704+ A0FE 23               inc hl
 705+ A0FF 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 706+ A100
 707+ A100 3E 01            ld a,1
 708+ A102 32 22 8C         ld (Permiso_de_disparo_Amadeus),a
 709+ A105
 710+ A105 21 33 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 711+ A108 CB C6            set 0,(hl)
 712+ A10A
 713+ A10A AF               xor a
 714+ A10B 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 715+ A10C
 716+ A10C C9               ret
 717+ A10D
 718+ A10D              ; --------------------------------------------------------------------------------------
 719+ A10D              ;
 720+ A10D              ;   09/10/24
 721+ A10D              ;
 722+ A10D
 723+ A10D              Pinta_disparos
 724+ A10D
 725+ A10D ED 73 0E 8C      ld (Stack),sp
 726+ A111 06 02            ld b,2
 727+ A113
 728+ A113 ED 7B 1C 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 729+ A117
 730+ A117 D1           2 pop de
 731+ A118
 732+ A118 7A               ld a,d
 733+ A119 83               add e
 734+ A11A 28 24            jr z,1F
 735+ A11C
 736+ A11C              Imprime_scanlines_de_disparo
 737+ A11C
 738+ A11C E1               pop hl
 739+ A11D
 740+ A11D              ; Puntero objeto en DE.
 741+ A11D              ; Puntero_de_impresión en HL.
 742+ A11D
 743+ A11D              ; Necesitamos saber que tipo de disparo es el que vamos a Imprimir.
 744+ A11D
 745+ A11D FD 21 76 83      ld iy,Indice_disparo_Amadeus
 746+ A121
 747+ A121 7B               ld a,e
 748+ A122 FD BD            cp iyl
 749+ A124 38 21            jr c,4F                                             ;? Sabemos que los disparos de entidades están situados por debajo del (Indice_disparo_Amadeus). Al comparar el (Puntero objeto) del_
 750+ A126              ;?                                                         _ disaparo a imprimir con (Indice_disparo_Amadeus) sabremos si se trata de un disparo de Amadeus o de entidad.
 751+ A126
 752+ A126              ; Disparos de Amadeus.
 753+ A126
 754+ A126              ; 1er scanline.
 755+ A126
 756+ A126 1A               ld a,(de)
 757+ A127 AE               xor (hl)
 758+ A128 77               ld (hl),a
 759+ A129
 760+ A129 13               inc de
 761+ A12A 2C               inc l
 762+ A12B
 763+ A12B 1A               ld a,(de)
 764+ A12C AE               xor (hl)
 765+ A12D 77               ld (hl),a
 766+ A12E
 767+ A12E              ; 2º scanline.
 768+ A12E
 769+ A12E E1               pop hl
 770+ A12F 1B               dec de
 771+ A130
 772+ A130 1A               ld a,(de)
 773+ A131 AE               xor (hl)
 774+ A132 77               ld (hl),a
 775+ A133
 776+ A133 13               inc de
 777+ A134 2C               inc l
 778+ A135
 779+ A135 1A               ld a,(de)
 780+ A136 AE               xor (hl)
 781+ A137 77               ld (hl),a
 782+ A138
 783+ A138              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 784+ A138
 785+ A138 18 DD            jr 2B
 786+ A13A
 787+ A13A ED 7B 1A 8C  3 ld sp,(Album_de_pintado_disparos)
 788+ A13E 18 D7            jr 2B
 789+ A140
 790+ A140 10 F8        1 djnz 3B
 791+ A142 ED 7B 0E 8C      ld sp,(Stack)
 792+ A146 C9               ret
 793+ A147
 794+ A147              ; Disparos de entidades
 795+ A147
 796+ A147              ; 1er scanline.
 797+ A147
 798+ A147 1A           4 ld a,(de)
 799+ A148 AE               xor (hl)
 800+ A149 77               ld (hl),a
 801+ A14A
 802+ A14A 2C               inc l
 803+ A14B 1C               inc e
 804+ A14C
 805+ A14C 1A               ld a,(de)
 806+ A14D AE               xor (hl)
 807+ A14E 77               ld (hl),a
 808+ A14F
 809+ A14F 2C               inc l
 810+ A150 1C               inc e
 811+ A151
 812+ A151 1A               ld a,(de)
 813+ A152 AE               xor (hl)
 814+ A153 77               ld (hl),a
 815+ A154
 816+ A154 1D               dec e
 817+ A155 1D               dec e
 818+ A156
 819+ A156              ; 2º scanline.
 820+ A156
 821+ A156 E1               pop hl
 822+ A157
 823+ A157 1A               ld a,(de)
 824+ A158 AE               xor (hl)
 825+ A159 77               ld (hl),a
 826+ A15A
 827+ A15A 2C               inc l
 828+ A15B 1C               inc e
 829+ A15C
 830+ A15C 1A               ld a,(de)
 831+ A15D AE               xor (hl)
 832+ A15E 77               ld (hl),a
 833+ A15F
 834+ A15F 2C               inc l
 835+ A160 1C               inc e
 836+ A161
 837+ A161 1A               ld a,(de)
 838+ A162 AE               xor (hl)
 839+ A163 77               ld (hl),a
 840+ A164
 841+ A164              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 842+ A164
 843+ A164 18 B1            jr 2B
 844+ A166
 845+ A166              ; --------------------------------------------------------------------------------------
 846+ A166              ;
 847+ A166              ;   14/09/24
 848+ A166              ;
 849+ A166              ;   Modifica: HL y DE.
 850+ A166
 851+ A166
 852+ A166              Genera_datos_de_impresion_disparos_Amadeus
 853+ A166
 854+ A166 ED 73 0E 8C      ld (Stack),sp
 855+ A16A 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 856+ A16D D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 857+ A16E
 858+ A16E 14               inc d                                                     ;? Salimos si no hay disparo.
 859+ A16F 15               dec d
 860+ A170
 861+ A170 28 12            jr z,Salida
 862+ A172
 863+ A172              Genera_scanlines_de_disparo_Amadeus
 864+ A172
 865+ A172 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 866+ A173              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 867+ A173 ED 7B 1E 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 868+ A177
 869+ A177 C1               pop bc
 870+ A178 C1               pop bc
 871+ A179 C1               pop bc
 872+ A17A
 873+ A17A ED 73 1E 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 874+ A17E
 875+ A17E E5               push hl                                                   ;? Sube 2º scanline al álbum.
 876+ A17F CD C6 99         call PreviousScan
 877+ A182 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 878+ A183 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 879+ A184
 880+ A184              Salida
 881+ A184
 882+ A184 ED 7B 0E 8C      ld sp,(Stack)
 883+ A188
 884+ A188 C9               ret
 885+ A189
 886+ A189              ; --------------------------------------------------------------------------------------
 887+ A189              ;
 888+ A189              ;   12/09/24
 889+ A189              ;
 890+ A189
 891+ A189              Genera_disparo_Amadeus
 892+ A189
 893+ A189              ;*  Exclusiones.
 894+ A189
 895+ A189 3A 22 8C         ld a,(Permiso_de_disparo_Amadeus)
 896+ A18C A7               and a
 897+ A18D C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 898+ A18E
 899+ A18E 3D               dec a
 900+ A18F 32 22 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 901+ A192
 902+ A192              Define_puntero_objeto_disparo
 903+ A192
 904+ A192              ;   Inicializamos contador.
 905+ A192
 906+ A192 06 00            ld b,0
 907+ A194
 908+ A194 2A 80 89         ld hl,(p.imp.amadeus)
 909+ A197 2C               inc l
 910+ A198
 911+ A198 3E 80            ld a,$80
 912+ A19A BE               cp (hl)
 913+ A19B 28 0D            jr z,1F
 914+ A19D
 915+ A19D 04               inc b
 916+ A19E
 917+ A19E 3E 60            ld a,$60
 918+ A1A0 BE               cp (hl)
 919+ A1A1 28 07            jr z,1F
 920+ A1A3
 921+ A1A3
 922+ A1A3 04               inc b
 923+ A1A4
 924+ A1A4 3E 18            ld a,$18
 925+ A1A6 BE               cp (hl)
 926+ A1A7 28 01            jr z,1F
 927+ A1A9
 928+ A1A9 04               inc b
 929+ A1AA
 930+ A1AA              ;   Calcula el Puntero_de_impresión del disparo.
 931+ A1AA
 932+ A1AA              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 933+ A1AA
 934+ A1AA CD C6 99     1 call PreviousScan
 935+ A1AD
 936+ A1AD 78               ld a,b
 937+ A1AE CB 3F            srl a
 938+ A1B0 28 03            jr z,4F
 939+ A1B2
 940+ A1B2              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 941+ A1B2 E5               push hl
 942+ A1B3 18 02            jr 5F
 943+ A1B5 2D           4 dec l
 944+ A1B6 E5               push hl
 945+ A1B7              ; ---
 946+ A1B7
 947+ A1B7              ;   Calcula el Puntero_objeto del disparo.
 948+ A1B7
 949+ A1B7 21 76 83     5 ld hl,Indice_disparo_Amadeus
 950+ A1BA 04               inc b
 951+ A1BB 05               dec b
 952+ A1BC 28 04            jr z,2F
 953+ A1BE
 954+ A1BE              ;   Nos desplazamos por el índice de disparos.
 955+ A1BE
 956+ A1BE 2C           3 inc l
 957+ A1BF 2C               inc l
 958+ A1C0 10 FC            djnz 3B
 959+ A1C2
 960+ A1C2              ; --- Guarda el Puntero_objeto del disparo en la pila.
 961+ A1C2 CD 9E 90     2 call Extrae_address
 962+ A1C5 E5               push hl
 963+ A1C6              ; ---
 964+ A1C6
 965+ A1C6              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 966+ A1C6              ; HL en el 1er .db de la caja.
 967+ A1C6
 968+ A1C6 21 1F 89         ld hl,Disparo_Amad
 969+ A1C9
 970+ A1C9 06 02            ld b,2
 971+ A1CB
 972+ A1CB D1           6 pop de
 973+ A1CC 73               ld (hl),e
 974+ A1CD 23               inc hl
 975+ A1CE 72               ld (hl),d
 976+ A1CF 23               inc hl
 977+ A1D0
 978+ A1D0 10 F9            djnz 6B
 979+ A1D2
 980+ A1D2 C9               ret
 981+ A1D3
 982+ A1D3              Genera_coordenadas_de_disparo_Amadeus
 983+ A1D3
 984+ A1D3              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 985+ A1D3              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 986+ A1D3              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 987+ A1D3
 988+ A1D3 CD 9E 90         call Extrae_address
 989+ A1D6 CD BD 94         call Genera_coordenadas
 990+ A1D9
 991+ A1D9 3D               dec a
 992+ A1DA
 993+ A1DA 21 3B 8C         ld hl,Coordenadas_disparo_certero
 994+ A1DD 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 995+ A1DE 23               inc hl
 996+ A1DF 3A C2 8B         ld a,(Coordenada_X)
 997+ A1E2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 998+ A1E3
 999+ A1E3 AF               xor a
1000+ A1E4 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1001+ A1E5
1002+ A1E5 C9               ret
1003+ A1E6
1004+ A1E6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1005+ A1E6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1006+ A1E6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1007+ A1E6
1008+ A1E6              ; ----------------------------------------------
1009+ A1E6              ;
1010+ A1E6              ;   27/08/24
1011+ A1E6              ;
1012+ A1E6              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1013+ A1E6              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1014+ A1E6
1015+ A1E6              Detecta_impacto_en_disparo_de_Amadeus
1016+ A1E6
1017+ A1E6              Extraccion_de_datos
1018+ A1E6
1019+ A1E6 13               inc de
1020+ A1E7 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
1021+ A1E8
1022+ A1E8 5E               ld e,(hl)
1023+ A1E9 23               inc hl
1024+ A1EA 56               ld d,(hl)
1025+ A1EB
1026+ A1EB 23               inc hl
1027+ A1EC
1028+ A1EC 4E               ld c,(hl)
1029+ A1ED 23               inc hl
1030+ A1EE 46               ld b,(hl)
1031+ A1EF
1032+ A1EF C5               push bc
1033+ A1F0 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1034+ A1F1
1035+ A1F1              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1036+ A1F1
1037+ A1F1 CD C6 99         call PreviousScan
1038+ A1F4 CD C6 99         call PreviousScan
1039+ A1F7
1040+ A1F7              Detecta_impacto_
1041+ A1F7
1042+ A1F7 1A               ld a,(de)
1043+ A1F8 A6               and (hl)
1044+ A1F9 C0               ret nz
1045+ A1FA
1046+ A1FA 13               inc de
1047+ A1FB 23               inc hl
1048+ A1FC
1049+ A1FC 1A               ld a,(de)
1050+ A1FD A6               and (hl)
1051+ A1FE C9               ret
1052+ A1FF
1053+ A1FF              ; -------------------------------------------------------------------------------------------------------------
1054+ A1FF              ;
1055+ A1FF              ;   8/8/24
1056+ A1FF              ;
1057+ A1FF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1058+ A1FF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1059+ A1FF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1060+ A1FF              ;
1061+ A1FF              ;   MODIFICA: HL,DE,BC y A.
1062+ A1FF              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1063+ A1FF              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1064+ A1FF
1065+ A1FF              Colision_Entidad_Amadeus
1066+ A1FF
1067+ A1FF              ; Posible contacto de entidad con Amadeus. ?????
1068+ A1FF
1069+ A1FF              ; Exclusiones:
1070+ A1FF
1071+ A1FF 3A 5B 8C         ld a,(Shield)
1072+ A202 A7               and a
1073+ A203 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1074+ A204
1075+ A204 21 31 8C         ld hl,Ctrl_3
1076+ A207 CB 76            bit 6,(hl)
1077+ A209 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1078+ A20A
1079+ A20A 21 38 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1080+ A20D CB 56            bit 2,(hl)
1081+ A20F C0               ret nz
1082+ A210
1083+ A210 3A C3 8B     	ld a,(Coordenada_y)
1084+ A213 FE 14        	cp $14
1085+ A215 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1086+ A216
1087+ A216 3A 7F 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1088+ A219 A7               and a
1089+ A21A C0               ret nz
1090+ A21B
1091+ A21B              Genera_coordenadas_X
1092+ A21B
1093+ A21B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1094+ A21B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1095+ A21B
1096+ A21B              ;   Limpiamos almacenes.
1097+ A21B
1098+ A21B              ;    call Limpia_Coordenadas_X
1099+ A21B
1100+ A21B              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1101+ A21B
1102+ A21B 21 3D 8C         ld hl,Coordenadas_X_Entidad
1103+ A21E 3A C2 8B         ld a,(Coordenada_X)
1104+ A221 CD 43 A2         call Guarda_coordenadas_X
1105+ A224
1106+ A224              ;   Almacenamos las coordenadas X de Amadeus.
1107+ A224
1108+ A224 3A 7C 89         ld a,(CX_Amadeus)
1109+ A227 CD 43 A2         call Guarda_coordenadas_X
1110+ A22A CD 57 A2         call Compara_coordenadas_X
1111+ A22D C0               ret nz
1112+ A22E
1113+ A22E 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1114+ A230 32 C5 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1115+ A233
1116+ A233 2A 01 8C         ld hl,(Puntero_store_caja)
1117+ A236 2C               inc l
1118+ A237 2C               inc l
1119+ A238 2C               inc l
1120+ A239 2C               inc l
1121+ A23A 22 39 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1122+ A23D
1123+ A23D 21 38 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1124+ A240 CB D6            set 2,(hl)
1125+ A242
1126+ A242 C9               ret
1127+ A243
1128+ A243               ; ----- ----- ----- ----- -----
1129+ A243
1130+ A243 77           Guarda_coordenadas_X ld (hl),a
1131+ A244 3C               inc a
1132+ A245 2C               inc l
1133+ A246 77               ld (hl),a
1134+ A247 3C               inc a
1135+ A248 2C               inc l
1136+ A249 77               ld (hl),a
1137+ A24A 2C               inc l
1138+ A24B C9               ret
1139+ A24C
1140+ A24C AF           Limpia_Coordenadas_X xor a
1141+ A24D 06 06            ld b,6
1142+ A24F 21 40 8C         ld hl,Coordenadas_X_Amadeus
1143+ A252 77           1 ld (hl),a
1144+ A253 23               inc hl
1145+ A254 10 FC            djnz 1B
1146+ A256 C9               ret
1147+ A257
1148+ A257              ; ----- ----- ----- ----- -----
1149+ A257
1150+ A257              Compara_coordenadas_X
1151+ A257
1152+ A257 DD 21 3D 8C      ld ix,Coordenadas_X_Entidad
1153+ A25B DD 7E 00         ld a,(ix+0)
1154+ A25E CD 6C A2         call Comparando
1155+ A261 C8               ret z
1156+ A262
1157+ A262 3C               inc a
1158+ A263 CD 7B A2         call Comparando_1
1159+ A266 C8               ret z
1160+ A267
1161+ A267 3C               inc a
1162+ A268 CD 7B A2         call Comparando_1
1163+ A26B C9               ret
1164+ A26C
1165+ A26C              ; ----- ----- ----- ----- -----
1166+ A26C              ;
1167+ A26C              ;   4/12/23
1168+ A26C              ;
1169+ A26C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1170+ A26C
1171+ A26C              Comparando
1172+ A26C
1173+ A26C DD 2C            inc ixl
1174+ A26E DD 2C            inc ixl
1175+ A270 DD 2C            inc ixl
1176+ A272
1177+ A272 DD 46 00         ld b,(ix+0)
1178+ A275 DD 4E 01         ld c,(ix+1)
1179+ A278 DD 56 02         ld d,(ix+2)
1180+ A27B
1181+ A27B B8           Comparando_1 cp b
1182+ A27C C8               ret z
1183+ A27D B9               cp c
1184+ A27E C8               ret z
1185+ A27F BA               cp d
1186+ A280 C9               ret
1187+ A281
1188+ A281              ; -----------------------------------------------------------------------
1189+ A281              ;
1190+ A281              ;   04/7/24
1191+ A281              ;
1192+ A281
1193+ A281              Detecta_colision_nave_entidad
1194+ A281
1195+ A281              ; Exclusiones:
1196+ A281
1197+ A281              ; Salimos de la rutina si no hay advertencia de posible colisión.
1198+ A281
1199+ A281 21 38 8C     	ld hl,Impacto2
1200+ A284 CB 56        	bit 2,(hl)
1201+ A286 C8           	ret z
1202+ A287
1203+ A287              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1204+ A287
1205+ A287 2A 82 89         ld hl,(Pamm_Amadeus)
1206+ A28A CD 9E 90         call Extrae_address
1207+ A28D 54               ld d,h
1208+ A28E 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1209+ A28F
1210+ A28F 2A 80 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1211+ A292 06 10            ld b,16                                        ; Contador de scanlines en B.
1212+ A294 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1213+ A297
1214+ A297 C5           1 push bc
1215+ A298 06 03            ld b,3
1216+ A29A E5               push hl
1217+ A29B
1218+ A29B              ; .db
1219+ A29B
1220+ A29B 1A           3 ld a,(de)
1221+ A29C A7               and a
1222+ A29D 20 03            jr nz,4F
1223+ A29F
1224+ A29F 2C               inc l
1225+ A2A0 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1226+ A2A2
1227+ A2A2 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1228+ A2A4 28 04            jr z,2F
1229+ A2A6
1230+ A2A6              ; Impacto.
1231+ A2A6 FD 2D            dec iyl
1232+ A2A8 28 22            jr z,5F
1233+ A2AA
1234+ A2AA 1C           2 inc e
1235+ A2AB 10 EE            djnz 3B
1236+ A2AD
1237+ A2AD E1               pop hl
1238+ A2AE
1239+ A2AE              ; Hay salto de línea en el puntero de impresión ???
1240+ A2AE
1241+ A2AE 7C               ld a,h
1242+ A2AF D6 57            sub $57
1243+ A2B1 20 0A            jr nz,6F
1244+ A2B3
1245+ A2B3              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1246+ A2B3
1247+ A2B3 2A 80 89         ld hl,(p.imp.amadeus)
1248+ A2B6 3E 20            ld a,$20
1249+ A2B8 A7               and a
1250+ A2B9 85               add l
1251+ A2BA 6F               ld l,a
1252+ A2BB 18 01            jr 7F
1253+ A2BD
1254+ A2BD 24           6 inc h
1255+ A2BE
1256+ A2BE C1           7 pop bc
1257+ A2BF 10 D6            djnz 1B
1258+ A2C1
1259+ A2C1              ;   Fin de la comparativa.
1260+ A2C1
1261+ A2C1              ;   NO HAY COLISIÓN !!!!!.
1262+ A2C1              ;
1263+ A2C1              ;   .db (Impacto) de Amadeus a "0".
1264+ A2C1              ;   RES el bit2 de (Impacto2).
1265+ A2C1              ;
1266+ A2C1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1267+ A2C1              ;   Lo colocamos a "0".
1268+ A2C1
1269+ A2C1 21 38 8C         ld hl,Impacto2
1270+ A2C4 CB 96            res 2,(hl)
1271+ A2C6 2A 39 8C         ld hl,(Entidad_sospechosa_de_colision)
1272+ A2C9 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1273+ A2CB C9               ret
1274+ A2CC
1275+ A2CC              ;   COLISIÓN !!!!!.
1276+ A2CC              ;
1277+ A2CC              ;   .db (Impacto) de Amadeus a "1".
1278+ A2CC              ;   SET el bit3 de (Impacto2).
1279+ A2CC              ;
1280+ A2CC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1281+ A2CC
1282+ A2CC E1           5 pop hl
1283+ A2CD C1               pop bc
1284+ A2CE
1285+ A2CE 21 7F 89         ld hl,Impacto_Amadeus
1286+ A2D1 36 01            ld (hl),1
1287+ A2D3 21 38 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1288+ A2D6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1289+ A2D8
1290+ A2D8 11 C0 87         ld de,Indice_Explosion_entidades
1291+ A2DB 2A 39 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1292+ A2DE
1293+ A2DE 23               inc hl
1294+ A2DF 23               inc hl
1295+ A2E0 23               inc hl
1296+ A2E1
1297+ A2E1 73               ld (hl),e
1298+ A2E2 23               inc hl
1299+ A2E3 72               ld (hl),d
1300+ A2E4
1301+ A2E4              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1302+ A2E4
1303+ A2E4 11 60 88         ld de,Indice_Explosion_Amadeus
1304+ A2E7 21 82 89         ld hl,Pamm_Amadeus
1305+ A2EA
1306+ A2EA 73               ld (hl),e
1307+ A2EB 23               inc hl
1308+ A2EC 72               ld (hl),d
1309+ A2ED
1310+ A2ED C9               ret
1311+ A2EE
1312+ A2EE
1313+ A2EE
# file closed: Disparo.asm
2069  A2EE
2070  A2EE              	SAVESNA "Pruebas.sna", START
2071  A2EE
2072  A2EE
2073  A2EE
2074  A2EE
# file closed: Banco_de_pruebas.asm
