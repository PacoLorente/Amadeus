# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E5 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A EF 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 06        	jr z,1F
  42  AA20
  43  AA20 CD BD 92     	call Extrae_foto_entidades
  44  AA23
  45  AA23              ;	ld a,6
  46  AA23              ;	out ($fe),a
  47  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  48  AA23
  49  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  50  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  51  AA23
  52  AA23              ;	ld a,7
  53  AA23              ;	out ($fe),a												; Borde blanco.
  54  AA23              ;	call Guarda_parametros_DRAW
  55  AA23              ;	call Restore_Amadeus
  56  AA23
  57  AA23              ; Posible colisión Entidad-Amadeus ???
  58  AA23
  59  AA23              ;	ld a,(Impacto2)
  60  AA23              ;	bit 2,a
  61  AA23              ;	jr z,1F
  62  AA23
  63  AA23 CD 1A 8D     	call DELAY
  64  AA26
  65  AA26              ;	call Detecta_colision_nave_entidad
  66  AA26
  67  AA26              ;1 ld a,4
  68  AA26              ;	out ($fe),a
  69  AA26              ;	call Gestiona_Amadeus
  70  AA26
  71  AA26              ;	ld a,7
  72  AA26              ;	out ($fe),a											; Borde blanco.
  73  AA26              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  74  AA26              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  75  AA26
  76  AA26              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  77  AA26
  78  AA26              ;	call Recupera_parametros_DRAW
  79  AA26
  80  AA26 CD 9E 8D     1 call Actualiza_relojes
  81  AA29
  82  AA29 21 EF 89     	ld hl,Ctrl_3
  83  AA2C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  84  AA2E
  85  AA2E FD E1        	pop iy
  86  AA30 DD E1        	pop ix
  87  AA32 F1           	pop af
  88  AA33 C1           	pop bc
  89  AA34 D1           	pop de
  90  AA35 E1           	pop hl
  91  AA36 D9           	exx
  92  AA37 C1           	pop bc
  93  AA38 D1           	pop de
  94  AA39 E1           	pop hl
  95  AA3A 08           	ex af,af'
  96  AA3B F1           	pop af
  97  AA3C 08           	ex af,af'
  98  AA3D D9           	exx
  99  AA3E
 100  AA3E ED 7B E5 89  	ld sp,(Stack_3)
 101  AA42
 102  AA42 FB           	ei
 103  AA43
 104  AA43 3E 01        	ld a,1												; Borde azul.
 105  AA45 D3 FE        	out ($fe),a
 106  AA47
 107  AA47 C9           	ret
 108  AA48
 109  AA48              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 110  AA48
 111  AA48              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA48              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA48              ;
   3+ AA48              ;	17/02/23
   4+ AA48              ;
   5+ AA48              ;	Sprites e índices.
   6+ AA48
   7+ AA48              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 112  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 8719 40           	db $40												; (Ctrl_0).
 142+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 871E 00 00
 143+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 146+ 8726 00           	db 0 												; (Columnas).
 147+ 8727 00 00        	defw 0												; (Limite_horizontal).
 148+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 872C
 150+ 872C              ; ---------- ---------- ---------- ---------- ----------
 151+ 872C              ;
 152+ 872C              ;	22/01/24
 153+ 872C              ;
 154+ 872C              ; 	Cada caja tiene 19 bytes !!!
 155+ 872C
 156+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 872F 00           	db %00000000										; (Attr).
 158+ 8730              ;	db 0												; (Cuad_objeto).
 159+ 8730 00           	db 0												; (Impacto).
 160+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 873D 00           	db 0												; (Ctrl_0).
 165+ 873E 00           	db 0												; (Ctrl_2).
 166+ 873F
 167+ 873F              ; ---------- ---------- ---------- ---------- ----------
 168+ 873F
 169+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 8742 00           	db %00000000										; (Attr).
 171+ 8743              ;	db 0												; (Cuad_objeto).
 172+ 8743 00           	db 0												; (Impacto).
 173+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 8750 00           	db 0												; (Ctrl_0).
 178+ 8751 00           	db 0												; (Ctrl_2).
 179+ 8752
 180+ 8752              ; ---------- ---------- ---------- ---------- ----------
 181+ 8752
 182+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8755 00           	db %00000000										; (Attr).
 184+ 8756              ;	db 0												; (Cuad_objeto).
 185+ 8756 00           	db 0												; (Impacto).
 186+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8763 00           	db 0												; (Ctrl_0).
 191+ 8764 00           	db 0												; (Ctrl_2).
 192+ 8765
 193+ 8765              ; ---------- ---------- ---------- ---------- ----------
 194+ 8765
 195+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8768 00           	db %00000000										; (Attr).
 197+ 8769              ;	db 0												; (Cuad_objeto).
 198+ 8769 00           	db 0												; (Impacto).
 199+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8776 00           	db 0												; (Ctrl_0).
 204+ 8777 00           	db 0												; (Ctrl_2).
 205+ 8778
 206+ 8778              ; ---------- ---------- ---------- ---------- ----------
 207+ 8778
 208+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 877B 00           	db %00000000										; (Attr).
 210+ 877C              ;	db 0												; (Cuad_objeto).
 211+ 877C 00           	db 0												; (Impacto).
 212+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8789 00           	db 0												; (Ctrl_0).
 217+ 878A 00           	db 0												; (Ctrl_2).
 218+ 878B
 219+ 878B              ; ---------- ---------- ---------- ---------- ----------
 220+ 878B
 221+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 878E 00           	db %00000000										; (Attr).
 223+ 878F              ;	db 0												; (Cuad_objeto).
 224+ 878F 00           	db 0												; (Impacto).
 225+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 879C 00           	db 0												; (Ctrl_0).
 230+ 879D 00           	db 0												; (Ctrl_2).
 231+ 879E
 232+ 879E              ; ---------- ---------- ---------- ---------- ----------
 233+ 879E
 234+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 87A1 00           	db %00000000										; (Attr).
 236+ 87A2              ;	db 0												; (Cuad_objeto).
 237+ 87A2 00           	db 0												; (Impacto).
 238+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 87AF 00           	db 0												; (Ctrl_0).
 243+ 87B0 00           	db 0												; (Ctrl_2).
 244+ 87B1
 245+ 87B1              ; -------------------------------------------------------------------------------------
 246+ 87B1              ;
 247+ 87B1              ;	11/1/24
 248+ 87B1              ;
 249+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 87B1              ;
 251+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 87B1
 256+ 87B1              Indice_de_definiciones_de_entidades
 257+ 87B1
 258+ 87B1 B5 87        	defw Entidad_1
 259+ 87B3 C2 87        	defw Entidad_2
 260+ 87B5
 261+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 87B5
 263+ 87B5              ;	BADSAT, (Satélite malvado).
 264+ 87B5
 265+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 87B8 04           	db %00000100										; (Attr).
 267+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 87BD 03 40        	defw $4003	                                     	; (Posicion_inicio).
 270+ 87BF 01           	db 1												; (Cuad_objeto).
 271+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 87C2
 273+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 87C5 02           	db %00000010										; (Attr).
 275+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 87CC 01           	db 1												; (Cuad_objeto).
 279+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 87CF
# file closed: Cajas_y_disparos.asm
 113  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 114  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
# file closed: Niveles.asm
 115  898A
 116  898A              ; ******************************************************************************************************************************************************************************************
 117  898A              ; Constantes.
 118  898A              ; ******************************************************************************************************************************************************************************************
 119  898A              ;
 120  898A              ; 25/12/23
 121  898A
 122  898A              ;
 123  898A              ; Constantes.
 124  898A              ;
 125  898A
 126  898A              Sprite_vacio equ $eae0
 127  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 128  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 129  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 130  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 131  898A
 132  898A              Almacen_de_scanlines_masticados equ $e9df
 133  898A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 134  898A              Almacen_de_movimientos_masticados_Amadeus equ $e700
 135  898A              ;
 136  898A              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 137  898A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 138  898A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 139  898A              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 140  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 141  898A              ;														; 55 Bytes.
 142  898A
 143  898A              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 144  898A              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 145  898A
 146  898A              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 147  898A
 148  898A              ; ******************************************************************************************************************************************************************************************
 149  898A              ; Variables.
 150  898A              ; ******************************************************************************************************************************************************************************************
 151  898A              ;
 152  898A              ; 18/01/24
 153  898A              ;
 154  898A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 155  898A              ;
 156  898A
 157  898A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  898A
 159  898A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  898B              ;															- Patrón de movimiento.
 161  898B              ;															- Aspecto
 162  898B 00           Filas db 0												; Filas. [DRAW]
 163  898C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 164  898D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 165  898F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 166  8991 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 167  8992 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 168  8993
 169  8993              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 170  8993
 171  8993 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 172  8994              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 173  8994              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 174  8994 00           Attr db 0												; Atributos de la entidad:
 175  8995
 176  8995              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 177  8995              ;
 178  8995              ;	COLORES: 0 ..... NEGRO
 179  8995              ;    		 1 ..... AZUL
 180  8995              ; 			 2 ..... ROJO
 181  8995              ;			 3 ..... MAGENTA
 182  8995              ; 			 4 ..... VERDE
 183  8995              ; 			 5 ..... CIAN
 184  8995              ;			 6 ..... AMARILLO
 185  8995              ; 			 7 ..... BLANCO
 186  8995
 187  8995 00 00        Indice_Sprite_der defw 0
 188  8997 00 00        Indice_Sprite_izq defw 0
 189  8999 00 00        Puntero_DESPLZ_der defw 0
 190  899B 00 00        Puntero_DESPLZ_izq defw 0
 191  899D
 192  899D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 193  899F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 194  89A0
 195  89A0              ; Variables de objeto. (Características).
 196  89A0
 197  89A0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 198  89A1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 199  89A1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 200  89A1 00 00 00...  Variables_de_borrado ds 6
 201  89A7
 202  89A7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 203  89A9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 204  89A9
 205  89A9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 206  89AB
 207  89AB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 208  89AB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 209  89AB
 210  89AB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 211  89AD              ;														; _palabras que componen el "movimiento_masticado".
 212  89AD
 213  89AD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 214  89AD
 215  89AD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 216  89AE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 217  89AE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 218  89AE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 219  89AE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 220  89AE              ;
 221  89AE              ; 														DESCRIPCIÖN:
 222  89AE              ;
 223  89AE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 224  89AE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 225  89AE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 226  89AE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 227  89AE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 228  89AE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 229  89AE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 230  89AE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 231  89AE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 232  89AE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 233  89AE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 234  89AE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 235  89AE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 236  89AE              ;
 237  89AE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 238  89AE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 239  89AE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 240  89AE
 241  89AE              ; Variables de funcionamiento. [DRAW].
 242  89AE
 243  89AE 00           Columnas db 0
 244  89AF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 245  89B1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 246  89B1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 247  89B2
 248  89B2              ; variables de control general.
 249  89B2
 250  89B2 00           Ctrl_2 db 0
 251  89B3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 252  89B3              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 253  89B3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 254  89B3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 255  89B3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 256  89B3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 257  89B3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 258  89B3              ;
 259  89B3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 260  89B3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 261  89B3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 262  89B3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 263  89B3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 264  89B3              ;														BIT 4, ???
 265  89B3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 266  89B3
 267  89B3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 268  89B4
 269  89B4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 270  89B4
 271  89B4              ;					         		---------;      ;---------
 272  89B4
 273  89B4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 274  89B4
 275  89B4              Perfiles_de_velocidad
 276  89B4
 277  89B4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 278  89B5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 279  89B6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 280  89B7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 281  89B8
 282  89B8              ; Contadores de 16 bits.
 283  89B8
 284  89B8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 285  89BA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 286  89BC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 287  89BE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 288  89C0
 289  89C0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 290  89C0
 291  89C0 DF E9        Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 292  89C2 02 80        Puntero_de_scanlines_en_album defw Album_de_fotos+2
 293  89C4
 294  89C4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 295  89C6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 296  89C8 00 00        Puntero_indice_mov_bucle defw 0							;
 297  89CA              ;
 298  89CA              ;
 299  89CA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 300  89CB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 301  89CB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 302  89CB 00           Incrementa_puntero_backup db 0
 303  89CC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 304  89CD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 305  89CD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 306  89CE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 307  89CF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 308  89D0              ;
 309  89D0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 310  89D0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 311  89D0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 312  89D0              ;
 313  89D0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 314  89D0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 315  89D0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 316  89D0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 317  89D0              ;
 318  89D0              ;														;	"$ff" ..... Bucle infinito de repetición.
 319  89D0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 320  89D0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 321  89D0              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 322  89D0
 323  89D0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 324  89D1
 325  89D1              ;														DESCRIPCIÓN:
 326  89D1              ;
 327  89D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 328  89D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 329  89D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 330  89D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 331  89D1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 332  89D1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 333  89D1
 334  89D1              ;														BIT 3, Recarga de nueva oleada.
 335  89D1              ;														BIT 4, Recarga de nueva oleada.
 336  89D1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 337  89D1              ;														BIT 6, **** Frame completo.
 338  89D1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 339  89D1
 340  89D1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 341  89D3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 342  89D3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 343  89D3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 344  89D3
 345  89D3              ; Gestión de ENTIDADES y CAJAS.
 346  89D3
 347  89D3 00 00        Puntero_store_caja defw 0
 348  89D5 00 00        Puntero_restore_caja defw 0
 349  89D7 00 00        Indice_restore_caja defw 0
 350  89D9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 351  89DA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 352  89DB 00           Entidades_en_curso db 0									; ..... ..... .....
 353  89DC 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 354  89DD              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 355  89DD              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 356  89DD              ;														; _ (Numero_de_malotes)="0".
 357  89DD 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  89DF 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  89E1              ;														; _ puntero (Indice_entidades).
 360  89E1
 361  89E1              ;---------------------------------------------------------------------------------------------------------------
 362  89E1              ;
 363  89E1              ;	11/01/24
 364  89E1              ;
 365  89E1              ;	Álbumes.
 366  89E1
 367  89E1 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  89E3              ;														; _variable para almacenar lo posición del puntero_
 369  89E3              ; 														; _de pila, SP.
 370  89E3 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  89E5              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  89E5 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 373  89E7 00 80        Stack_snapshot defw Album_de_fotos
 374  89E9 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 375  89EB
 376  89EB              ;End_Snapshot defw Album_de_fotos
 377  89EB              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 378  89EB 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 379  89ED              ;														; _el snapshot de los registros del siguiente disparo.
 380  89ED              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 381  89ED AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 382  89EF
 383  89EF 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 384  89F0              ;
 385  89F0              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 386  89F0              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 387  89F0              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 388  89F0
 389  89F0 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 390  89F1              ;
 391  89F1              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 392  89F1              ;
 393  89F1              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 394  89F1              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 395  89F1              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 396  89F1              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 397  89F1              ;
 398  89F1              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 399  89F1              ;															_ masticados ya generados.
 400  89F1              ;
 401  89F1              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 402  89F1              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 403  89F1              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 404  89F1              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 405  89F1
 406  89F1
 407  89F1              ; Gestión de Disparos.
 408  89F1
 409  89F1 00           Numero_de_disparotes db 0
 410  89F2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 411  89F4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 412  89F6 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 413  89F7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 414  89F7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 415  89F7 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 416  89F9              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 417  89F9              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 418  89F9              ;														; _produzca colisión.
 419  89F9 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 420  89FB              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 421  89FB 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 422  89FE              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 423  89FE 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 424  8A01              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 425  8A01 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 426  8A02
 427  8A02              ;---------------------------------------------------------------------------------------------------------------
 428  8A02
 429  8A02              ; Relojes y temporizaciones.
 430  8A02
 431  8A02 00           Contador_de_frames db 0
 432  8A03 00           Contador_de_frames_2 db 0
 433  8A04
 434  8A04 04           Clock_explosion db 4
 435  8A05 14           Clock_Entidades_en_curso db 20
 436  8A06 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 437  8A07              ;														; Repite la oleada de entidades.
 438  8A07 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 439  8A08 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 440  8A09 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 441  8A0A
 442  8A0A 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 443  8A0B 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 444  8A0C 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 445  8A0D
 446  8A0D              ;---------------------------------------------------------------------------------------------------------------
 447  8A0D
 448  8A0D              ; Gestión de NIVELES.
 449  8A0D
 450  8A0D 00           Nivel db 0												; Nivel actual del juego.
 451  8A0E 00 00        Puntero_indice_NIVELES defw 0
 452  8A10 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 453  8A12              ; 														; _ que definen el NIVEL.
 454  8A12              ; Y todo comienza aquí .....
 455  8A12              ;
 456  8A12              ; 	INICIO  *************************************************************************************************************************************************************************
 457  8A12              ;
 458  8A12              ;	5/1/24
 459  8A12
 460  8A12              START
 461  8A12
 462  8A12 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 463  8A15 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 464  8A17 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 465  8A19 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 466  8A1B F3           	DI
 467  8A1C
 468  8A1C              ;	ld a,%00000111
 469  8A1C              ;	call Cls
 470  8A1C CD 0F 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 471  8A1F
 472  8A1F              ; INICIALIZACIÓN.
 473  8A1F
 474  8A1F              ;	Inicializa 1er Nivel.
 475  8A1F
 476  8A1F 21 6B 89     	ld hl,Indice_de_niveles
 477  8A22 22 0E 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 478  8A25 CD B0 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 479  8A28              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 480  8A28              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 481  8A28              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 482  8A28
 483  8A28              ;	Provisional, (para desarrollo).
 484  8A28
 485  8A28              	;-
 486  8A28              ;	ld hl,Numero_parcial_de_entidades
 487  8A28              ;	ld b,(hl)
 488  8A28              ;	inc b
 489  8A28              ;	dec b
 490  8A28              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 491  8A28
 492  8A28 CD F5 8D     4 call Inicia_Entidades
 493  8A2B
 494  8A2B CD D2 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 495  8A2E
 496  8A2E              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 497  8A2E              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 498  8A2E              ; (Esto se dá cuando se inicia una nueva oleada).
 499  8A2E
 500  8A2E              ;	ld a,(Ctrl_1)
 501  8A2E              ;	bit 3,a
 502  8A2E              ;	jr nz,5F											; Loop
 503  8A2E
 504  8A2E              ; 	INICIA AMADEUS !!!!!
 505  8A2E
 506  8A2E              ;3 call Restore_Amadeus
 507  8A2E              ;	call Inicia_Puntero_objeto
 508  8A2E              ;	call Draw
 509  8A2E
 510  8A2E              ;	call Guarda_movimiento_masticado	;! Provisional
 511  8A2E
 512  8A2E              ;	call Guarda_foto_registros
 513  8A2E              ;	call Guarda_datos_de_borrado_Amadeus
 514  8A2E
 515  8A2E              ;	ld de,Amadeus_db
 516  8A2E              ;	call Store_Amadeus
 517  8A2E
 518  8A2E              ; 	INICIA DISPAROS !!!!!
 519  8A2E
 520  8A2E              ;	call Inicia_Puntero_Disparo_Entidades
 521  8A2E              ;	call Inicia_Puntero_Disparo_Amadeus
 522  8A2E
 523  8A2E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 524  8A2E
 525  8A2E              ;5 call Inicia_punteros_de_cajas
 526  8A2E              ;	call Restore_entidad
 527  8A2E
 528  8A2E              ;	ld a,(Ctrl_1)
 529  8A2E              ;	bit 3,a
 530  8A2E              ;	jr z,6F
 531  8A2E
 532  8A2E              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 533  8A2E
 534  8A2E              ;	ld hl,Ctrl_1
 535  8A2E              ;	res 3,(hl)
 536  8A2E              ;	jr Main
 537  8A2E
 538  8A2E              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 539  8A2E
 540  8A2E              6
 541  8A2E CD 1E 8C     	call Calcula_numero_de_malotes
 542  8A31 CD 0D 8B     	call Genera_scanlines_masticados
 543  8A34
 544  8A34 21 EF 89     	ld hl,Ctrl_3
 545  8A37 CB C6        	set 0,(hl)											; Frame completo.
 546  8A39 FB           	ei
 547  8A3A 76           	halt
 548  8A3B
 549  8A3B              ; ------------------------------------
 550  8A3B
 551  8A3B              Main
 552  8A3B              ;
 553  8A3B              ;	11/12/23
 554  8A3B
 555  8A3B              ; Aparece nueva entidad ???
 556  8A3B
 557  8A3B              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 558  8A3B              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 559  8A3B              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 560  8A3B              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 561  8A3B              ;														; _un 2º bloque.
 562  8A3B CD 17 81     	call Limpia_y_reinicia_Stack_Snapshot 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 563  8A3E              ; 													 	; _(Stack_snapshot).
 564  8A3E
 565  8A3E 3A 05 8A     	ld a,(Clock_Entidades_en_curso)
 566  8A41 47           	ld b,a
 567  8A42 3A 02 8A     	ld a,(Contador_de_frames)
 568  8A45 B8           	cp b
 569  8A46 20 18        	jr nz,13F
 570  8A48
 571  8A48              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 572  8A48              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 573  8A48
 574  8A48 3A DA 89     21 ld a,(Numero_parcial_de_entidades)
 575  8A4B 47           	ld b,a
 576  8A4C 3A DB 89     	ld a,(Entidades_en_curso)
 577  8A4F B8           	cp b
 578  8A50 28 0E        	jr z,13F
 579  8A52 30 0C        	jr nc,13F
 580  8A54
 581  8A54 3C           	inc a
 582  8A55 32 DB 89     	ld (Entidades_en_curso),a
 583  8A58
 584  8A58              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 585  8A58
 586  8A58 3A 05 8A     	ld a,(Clock_Entidades_en_curso)
 587  8A5B              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 588  8A5B              ;! _ IMPREDECIBLE !!!!
 589  8A5B C6 64        	add 100
 590  8A5D 32 05 8A     	ld (Clock_Entidades_en_curso),a
 591  8A60
 592  8A60              ; -------------------------------------------------------------------------------------------------------------
 593  8A60
 594  8A60              ; Habilita disparos.
 595  8A60
 596  8A60              13
 597  8A60
 598  8A60              ;	ld hl,Disparo_Amadeus
 599  8A60              ;	ld de,CLOCK_repone_disparo_Amadeus
 600  8A60              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 601  8A60
 602  8A60              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 603  8A60              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 604  8A60              ;	call Habilita_disparos
 605  8A60
 606  8A60              ; COLISIONES.
 607  8A60
 608  8A60              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 609  8A60
 610  8A60              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 611  8A60              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 612  8A60              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 613  8A60
 614  8A60              ;	xor a
 615  8A60              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 616  8A60
 617  8A60              ;	call Inicia_punteros_de_cajas
 618  8A60              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 619  8A60              ; 														; _ en DRAW.
 620  8A60
 621  8A60              ;	ld a,(Filas)
 622  8A60              ;	and a
 623  8A60              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 624  8A60              ;	call Incrementa_punteros_de_cajas
 625  8A60              ;	jr 12B
 626  8A60
 627  8A60              ; ---------------------------------------------------------------------------------------
 628  8A60
 629  8A60 3A DA 89     10 ld a,(Numero_parcial_de_entidades)
 630  8A63 47               ld b,a
 631  8A64 A7           	and a
 632  8A65 20 00        	jr nz,11F
 633  8A67
 634  8A67              ;	ld hl,Ctrl_1;
 635  8A67              ;	bit 4,(hl)
 636  8A67              ;	jp nz,16F
 637  8A67
 638  8A67              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 639  8A67
 640  8A67              ;	ld hl,Ctrl_1
 641  8A67              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 642  8A67
 643  8A67              ;	ld a,(Contador_de_frames)
 644  8A67              ;	inc a
 645  8A67              ;	ld (Activa_recarga_cajas),a
 646  8A67
 647  8A67              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 648  8A67
 649  8A67 3A DB 89     11 ld a,(Entidades_en_curso)
 650  8A6A A7           	and a
 651  8A6B 28 20        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 652  8A6D 47           	ld b,a												; No hay entidades que gestionar.
 653  8A6E
 654  8A6E              ; ( Código que ejecutamos con cada entidad: ).
 655  8A6E
 656  8A6E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 657  8A6E
 658  8A6E C5           15 push bc 												; Nº de entidades en curso.
 659  8A6F
 660  8A6F CD DD 8A     	call Limpia_Sprites
 661  8A72 CD A5 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 662  8A75
 663  8A75 3A EF 89     	ld a,(Ctrl_3)
 664  8A78 CB 57        	bit 2,a
 665  8A7A F3           	di
 666  8A7B 20 FE        	jr nz,$
 667  8A7D FB           	ei
 668  8A7E
 669  8A7E              ; Existe "Entidad_guía" ???.
 670  8A7E              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 671  8A7E
 672  8A7E              ;	ld a,(Ctrl_3)
 673  8A7E              ;	bit 1,a
 674  8A7E              ;	jr nz,22F
 675  8A7E
 676  8A7E              ; Almacén de "Movimientos_masticados" lleno ???
 677  8A7E              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 678  8A7E              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 679  8A7E
 680  8A7E              ;;	ld a,(Ctrl_3)
 681  8A7E              ;;	bit 3,a
 682  8A7E              ;;	jr nz,22F
 683  8A7E
 684  8A7E              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 685  8A7E
 686  8A7E              ;	ld hl,Ctrl_2
 687  8A7E              ;	set 5,(hl)
 688  8A7E              ;	ld hl,Ctrl_3
 689  8A7E              ;	set 1,(hl)
 690  8A7E
 691  8A7E              ; Impacto ???
 692  8A7E
 693  8A7E              ;22 ld a,(Impacto)
 694  8A7E              ;	and a
 695  8A7E              ;	jr z,8F
 696  8A7E
 697  8A7E              ; Hay Impacto en esta entidad.
 698  8A7E
 699  8A7E              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 700  8A7E              ;	dec (hl)
 701  8A7E              ;	jp nz,17F
 702  8A7E
 703  8A7E              ;! Velocidad de la animación de la explosión.
 704  8A7E
 705  8A7E              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 706  8A7E              ;														; _,(velocidad de la explosión).
 707  8A7E              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 708  8A7E
 709  8A7E              ;	call Repone_datos_de_borrado
 710  8A7E              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 711  8A7E
 712  8A7E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 713  8A7E
 714  8A7E              ;	ld a,(Ctrl_2)
 715  8A7E              ;	bit 1,a
 716  8A7E              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 717  8A7E
 718  8A7E              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 719  8A7E
 720  8A7E              ;	ld a,(CTRL_DESPLZ)
 721  8A7E              ;	and a
 722  8A7E              ;	jr nz,18F
 723  8A7E
 724  8A7E              ;	ld hl,Indice_Explosion_2x2-2
 725  8A7E              ;	ld (Puntero_DESPLZ_der),hl
 726  8A7E              ;	jr 19F
 727  8A7E
 728  8A7E              ;18 ld hl,Indice_Explosion_2x3-2
 729  8A7E              ;	ld (Puntero_DESPLZ_der),hl
 730  8A7E
 731  8A7E              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 732  8A7E              ;	set 1,(hl)
 733  8A7E              ;	jr 7F
 734  8A7E
 735  8A7E              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 736  8A7E              ; _con las coordenadas de la entidad almacenada en DRAW.
 737  8A7E
 738  8A7E              ;8 ld a,(Ctrl_1)
 739  8A7E              ;	bit 2,a
 740  8A7E              ;	jr z,7F
 741  8A7E
 742  8A7E              ;	ld hl,(Coordenadas_disparo_certero)
 743  8A7E              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 744  8A7E              ;														; E contiene la coordenada_X del disparo.
 745  8A7E              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 746  8A7E              ;														; H FILA, (Coordenada_y de la entidad).
 747  8A7E              ;	and a
 748  8A7E              ;	sbc hl,de
 749  8A7E
 750  8A7E              ;	call Determina_resultado_comparativa
 751  8A7E
 752  8A7E              ;	ld a,b
 753  8A7E              ;	and a
 754  8A7E              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 755  8A7E
 756  8A7E              ; ----- ----- -----
 757  8A7E
 758  8A7E              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 759  8A7E              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 760  8A7E
 761  8A7E              ;	ld hl,Ctrl_1
 762  8A7E              ;	res 2,(hl)
 763  8A7E
 764  8A7E CD A0 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 765  8A81
 766  8A81              ;	ld a,(Ctrl_0)
 767  8A81              ;	bit 4,a
 768  8A81              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 769  8A81
 770  8A81              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 771  8A81              ; [[[
 772  8A81              ;	call Detecta_disparo_entidad
 773  8A81              ; ]]]
 774  8A81
 775  8A81 CD 5F 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 776  8A84
 777  8A84              ;	ld hl,Ctrl_0
 778  8A84              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 779  8A84
 780  8A84 CD 4F 8E     17 call Store_Restore_cajas
 781  8A87
 782  8A87 C1           	pop bc
 783  8A88
 784  8A88 10 E4        	djnz 15B
 785  8A8A
 786  8A8A CD D2 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 787  8A8D
 788  8A8D              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 789  8A8D              ; Hemos gestionado todas las unidades.
 790  8A8D              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 791  8A8D
 792  8A8D              ;	ld hl,Ctrl_1
 793  8A8D              ;	res 2,(hl)
 794  8A8D
 795  8A8D              16
 796  8A8D
 797  8A8D CD 1E 8C     	call Calcula_numero_de_malotes
 798  8A90 CD 0D 8B     	call Genera_scanlines_masticados
 799  8A93
 800  8A93 21 EF 89     	ld hl,Ctrl_3
 801  8A96 CB C6        	set 0,(hl)											; Frame completo.
 802  8A98
 803  8A98 AF           	xor a
 804  8A99 D3 FE        	out ($fe),a
 805  8A9B 76           	halt
 806  8A9C
 807  8A9C              ; ----------------------------------------
 808  8A9C
 809  8A9C              ;	ld a,(Ctrl_1) 										; Existe Loop?
 810  8A9C              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 811  8A9C CA 3B 8A     	jp z,Main
 812  8A9F
 813  8A9F              ; RECARGA DE NUEVA OLEADA.
 814  8A9F
 815  8A9F              ;	ld a,(Contador_de_frames)
 816  8A9F              ;	ld b,a
 817  8A9F              ;	ld a,(Activa_recarga_cajas)
 818  8A9F              ;	cp b
 819  8A9F              ;	jr z,20F
 820  8A9F
 821  8A9F              ;	ld hl,Ctrl_1
 822  8A9F              ;	set 4,(hl)
 823  8A9F              ;	jp Main
 824  8A9F
 825  8A9F              ;20 ld hl,Ctrl_1
 826  8A9F              ;	res 4,(hl)
 827  8A9F
 828  8A9F              ;	ld a,(Contador_de_frames)
 829  8A9F
 830  8A9F              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 831  8A9F              ;! _ IMPREDECIBLE !!!!
 832  8A9F
 833  8A9F              ;	add 10
 834  8A9F              ;	ld (Clock_Entidades_en_curso),a
 835  8A9F
 836  8A9F              ;	jp 4B
 837  8A9F
 838  8A9F C9           	ret
 839  8AA0
 840  8AA0              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 841  8AA0              ;
 842  8AA0              ;	16/11/23
 843  8AA0
 844  8AA0              ;;Gestiona_Amadeus
 845  8AA0
 846  8AA0              ;! Activa/desactiva impacto con Amadeus.
 847  8AA0
 848  8AA0              ;	ld a,(Impacto)
 849  8AA0              ;	and a
 850  8AA0              ;	jr nz,2F
 851  8AA0
 852  8AA0              ;;	call Mov_Amadeus
 853  8AA0
 854  8AA0              ;;2 ld a,(Ctrl_0)
 855  8AA0              ;;	bit 4,a
 856  8AA0              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 857  8AA0
 858  8AA0              ;;	call Guarda_foto_entidad_a_pintar
 859  8AA0              ;;	call Guarda_datos_de_borrado_Amadeus
 860  8AA0
 861  8AA0              ;;1 ld hl,Ctrl_0
 862  8AA0              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 863  8AA0
 864  8AA0              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 865  8AA0
 866  8AA0              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 867  8AA0
 868  8AA0              ;	call Calcula_numero_de_disparotes
 869  8AA0
 870  8AA0              ;;	ret
 871  8AA0
 872  8AA0              ; --------------------------------------------------------------------------------------------------------------
 873  8AA0              ;
 874  8AA0              ;	15/12/23
 875  8AA0
 876  8AA0              Mov_obj
 877  8AA0
 878  8AA0              ;	ld a,(Ctrl_2)
 879  8AA0              ;	bit 1,a
 880  8AA0              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 881  8AA0
 882  8AA0              ; Explosión:
 883  8AA0
 884  8AA0              ;	ld a,(Frames_explosion)
 885  8AA0              ;	and a
 886  8AA0              ;	jr nz,4F
 887  8AA0
 888  8AA0              ;!  Una alimaña menos!!!!!!!!!1
 889  8AA0
 890  8AA0              ; Se trataba de una Entidad_guía ???
 891  8AA0
 892  8AA0              ;	ld a,(Ctrl_2)
 893  8AA0              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 894  8AA0              ;	jr z,5F
 895  8AA0
 896  8AA0              ;	ld hl,Ctrl_3
 897  8AA0              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 898  8AA0
 899  8AA0              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 900  8AA0              ;!! _generado puede ser distinto, (aletoriedad).
 901  8AA0
 902  8AA0              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 903  8AA0              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 904  8AA0              ;	dec (hl)
 905  8AA0              ;	ld hl,Entidades_en_curso
 906  8AA0              ;	dec (hl)
 907  8AA0              ;	ld hl,Numero_de_entidades
 908  8AA0              ;	dec (hl)
 909  8AA0              ;	jr 3F
 910  8AA0
 911  8AA0              ; -----
 912  8AA0
 913  8AA0              ;	`Movemos´ la explosión.
 914  8AA0
 915  8AA0              ;4 ld hl,(Puntero_DESPLZ_der)
 916  8AA0              ;	inc hl
 917  8AA0              ;	inc hl
 918  8AA0              ;	call Extrae_address
 919  8AA0              ;;	ld (Puntero_objeto),hl
 920  8AA0
 921  8AA0              ;;	ld hl,Frames_explosion
 922  8AA0              ;;	dec (hl)
 923  8AA0
 924  8AA0              ;;	ld hl,Ctrl_0
 925  8AA0              ;;	set 4,(hl);;
 926  8AA0
 927  8AA0              ;;	jr 3F
 928  8AA0
 929  8AA0              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 930  8AA0
 931  8AA0              ;2 xor a
 932  8AA0              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 933  8AA0
 934  8AA0              ; Movemos Entidades malignas.
 935  8AA0              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 936  8AA0
 937  8AA0              ;	ld a,(Ctrl_2)
 938  8AA0              ;	bit 5,a
 939  8AA0              ;	jr nz,8F
 940  8AA0
 941  8AA0              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 942  8AA0              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 943  8AA0              ;	jr 7F
 944  8AA0
 945  8AA0              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 946  8AA0
 947  8AA0              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 948  8AA0              ;	bit 4,a
 949  8AA0              ;	ret z
 950  8AA0
 951  8AA0              ; Ha habido desplazamiento de la entidad maligna.
 952  8AA0              ; Ha llegado a zona de AMADEUS ???
 953  8AA0
 954  8AA0              ;7 ld a,(Coordenada_y)
 955  8AA0              ;	cp $14
 956  8AA0              ;	jr c,1F
 957  8AA0
 958  8AA0              ; ---------
 959  8AA0
 960  8AA0              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 961  8AA0              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 962  8AA0
 963  8AA0              ;	di
 964  8AA0              ;	call Genera_coordenadas_X
 965  8AA0              ;	call Compara_coordenadas_X
 966  8AA0              ;	ei
 967  8AA0
 968  8AA0              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 969  8AA0
 970  8AA0              ; ---------
 971  8AA0
 972  8AA0              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 973  8AA0              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 974  8AA0              ;	call Limpia_Variables_de_borrado
 975  8AA0
 976  8AA0 C9           3 ret
 977  8AA1
 978  8AA1              ; --------------------------------------------------------------------------------------------------------------
 979  8AA1              ;
 980  8AA1              ;	29/1/23
 981  8AA1
 982  8AA1              Mov_Amadeus
 983  8AA1
 984  8AA1              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 985  8AA1
 986  8AA1 CD 44 96     	call Mov_right
 987  8AA4
 988  8AA4 3A AD 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 989  8AA7 CB 67        	bit 4,a
 990  8AA9 C8           	ret z
 991  8AAA
 992  8AAA              ; ---------
 993  8AAA
 994  8AAA              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 995  8AAA CD 73 8D     	call Repone_datos_de_borrado_Amadeus
 996  8AAD CD 10 8C     	call Limpia_Variables_de_borrado
 997  8AB0
 998  8AB0 C9           	ret
 999  8AB1
1000  8AB1              ; -----------------------------------------------------------------------------------
1001  8AB1              ;
1002  8AB1              ;	20/01/24
1003  8AB1              ;
1004  8AB1              ;
1005  8AB1
1006  8AB1              Construye_movimientos_masticados_entidad
1007  8AB1
1008  8AB1 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1009  8AB4 E5           	push hl
1010  8AB5 CD 74 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1011  8AB8              ;															; _ el (Contador_de_mov_masticados).
1012  8AB8 CD 70 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1013  8ABB              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1014  8ABB CD A0 95     	call Recompone_posicion_inicio
1015  8ABE
1016  8ABE CD A6 8F     1 call Draw
1017  8AC1 CD 58 8B     	call Guarda_movimiento_masticado
1018  8AC4
1019  8AC4 CD 1A 99     	call Movimiento
1020  8AC7
1021  8AC7 3A EF 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1022  8ACA CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1023  8ACC 28 F0        	jr z,1B
1024  8ACE
1025  8ACE              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1026  8ACE              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1027  8ACE
1028  8ACE E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1029  8ACF 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1030  8AD2
1031  8AD2              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1032  8AD2
1033  8AD2 CD 7E 9A     	call Situa_en_contador_general_de_mov_masticados
1034  8AD5
1035  8AD5              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1036  8AD5              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1037  8AD5
1038  8AD5 ED 4B AB 89  	ld bc,(Contador_de_mov_masticados)
1039  8AD9 71           	ld (hl),c
1040  8ADA 23           	inc hl
1041  8ADB 70           	ld (hl),b
1042  8ADC
1043  8ADC C9           	ret
1044  8ADD
1045  8ADD              ; -----------------------------------------------------------------------------------
1046  8ADD              ;
1047  8ADD              ;	24/02/24
1048  8ADD              ;
1049  8ADD
1050  8ADD              Limpia_Sprites
1051  8ADD
1052  8ADD 2A C0 89     	ld hl,(Puntero_de_scanlines_masticados)
1053  8AE0 01 DF E9     	ld bc,Almacen_de_scanlines_masticados
1054  8AE3 A7           	and a
1055  8AE4 ED 42        	sbc hl,bc
1056  8AE6 C8           	ret z
1057  8AE7
1058  8AE7 CB 3D        	srl l
1059  8AE9 45           	ld b,l
1060  8AEA
1061  8AEA 2A C0 89     	ld hl,(Puntero_de_scanlines_masticados)
1062  8AED 2B           	dec hl
1063  8AEE
1064  8AEE E5           1 push hl
1065  8AEF
1066  8AEF 7E           	ld a,(hl)
1067  8AF0 08           	ex af,af'
1068  8AF1 2B           	dec hl
1069  8AF2 7E           	ld a,(hl)
1070  8AF3 6F           	ld l,a
1071  8AF4 08           	ex af,af
1072  8AF5 67           	ld h,a
1073  8AF6
1074  8AF6 AF           	xor a
1075  8AF7 77           	ld (hl),a
1076  8AF8 2C           	inc l
1077  8AF9 77           	ld (hl),a
1078  8AFA
1079  8AFA E1           	pop hl
1080  8AFB
1081  8AFB AF           	xor a
1082  8AFC 77           	ld (hl),a
1083  8AFD 2B           	dec hl
1084  8AFE 77           	ld (hl),a
1085  8AFF
1086  8AFF 2B           	dec hl
1087  8B00
1088  8B00 10 EC        	djnz 1B
1089  8B02
1090  8B02 23           	inc hl
1091  8B03
1092  8B03 22 C0 89     	ld (Puntero_de_scanlines_masticados),hl
1093  8B06 21 02 80     	ld hl,Album_de_fotos+2
1094  8B09 22 C2 89     	ld (Puntero_de_scanlines_en_album),hl
1095  8B0C
1096  8B0C C9           	ret
1097  8B0D
1098  8B0D              ; -----------------------------------------------------------------------------------
1099  8B0D              ;
1100  8B0D              ;	24/02/24
1101  8B0D              ;
1102  8B0D
1103  8B0D              Genera_scanlines_masticados
1104  8B0D
1105  8B0D A7           	and a
1106  8B0E C8           	ret z
1107  8B0F
1108  8B0F 2A C2 89     	ld hl,(Puntero_de_scanlines_en_album) 				; Dirección donde se encuentra el puntero de impresión.
1109  8B12 ED 5B C0 89  	ld de,(Puntero_de_scanlines_masticados)
1110  8B16
1111  8B16 C5           1 push bc
1112  8B17
1113  8B17 7E           	ld a,(hl)
1114  8B18 12           	ld (de),a
1115  8B19 73           	ld (hl),e
1116  8B1A
1117  8B1A 23           	inc hl
1118  8B1B 7E           	ld a,(hl)
1119  8B1C 72           	ld (hl),d
1120  8B1D
1121  8B1D 13           	inc de
1122  8B1E 12           	ld (de),a 											; 1er scanline, (Puntero_de_impresion) en el Almacén de scanlines masticados.
1123  8B1F              ;				                                        ; La dirección donde se encuentra el (Puntero_de_impresion) dentro del almacén de scanlines_masticados_
1124  8B1F              ; 														; _sustituye al (Puntero_de_impresion) dentro del Album_de_fotos.
1125  8B1F CD 2F 8B     	call Construimos_scanlines
1126  8B22
1127  8B22              ; Actualizamos (Puntero_de_scanlines_en_album). Nos situamos en el Puntero_de_impresion de la siguiente entidad.
1128  8B22
1129  8B22 01 05 00     	ld bc,5
1130  8B25 A7           	and a
1131  8B26 ED 4A        	adc hl,bc
1132  8B28 22 C2 89     	ld (Puntero_de_scanlines_en_album),hl
1133  8B2B
1134  8B2B C1           	pop bc
1135  8B2C
1136  8B2C 10 E8        	djnz 1B
1137  8B2E
1138  8B2E C9           	ret
1139  8B2F
1140  8B2F              ; --------------------------------------------------------
1141  8B2F
1142  8B2F E5           Construimos_scanlines push hl
1143  8B30 C5           	push bc
1144  8B31
1145  8B31 06 0F        	ld b,15
1146  8B33 1B           	dec de
1147  8B34
1148  8B34 1A           	ld a,(de)
1149  8B35 6F           	ld l,a
1150  8B36 13           	inc de
1151  8B37 1A           	ld a,(de)
1152  8B38 67           	ld h,a 												; Puntero_de_impresión en HL.
1153  8B39
1154  8B39 13           	inc de
1155  8B3A
1156  8B3A CD 9F 92     1 call NextScan
1157  8B3D
1158  8B3D              ; Entramos en memoria de attr.???
1159  8B3D
1160  8B3D              ; Si es así, decrementamos H. (Repetimos el último scancline).
1161  8B3D
1162  8B3D 7C           	ld a,h
1163  8B3E FE 58        	cp $58
1164  8B40 20 03        	jr nz,2F
1165  8B42
1166  8B42 21 00 00     	ld hl,0 											; Scanline NO IMPRIMIBLE, "0".
1167  8B45
1168  8B45 7D           2 ld a,l
1169  8B46 12           	ld (de),a
1170  8B47 13           	inc de
1171  8B48 7C           	ld a,h
1172  8B49 12           	ld (de),a
1173  8B4A
1174  8B4A 13           	inc de
1175  8B4B
1176  8B4B 24           	inc h
1177  8B4C 25           	dec h
1178  8B4D 28 02        	jr z,3F  											; No generamos más escanlines si hemos entrado en memoria de attr.
1179  8B4F
1180  8B4F 10 E9        	djnz 1B 											; 16 scanlines generados.
1181  8B51
1182  8B51 ED 53 C0 89  3 ld (Puntero_de_scanlines_masticados),de 				; Actualizamos puntero.
1183  8B55
1184  8B55 C1           	pop bc
1185  8B56 E1           	pop hl
1186  8B57
1187  8B57 C9           	ret
1188  8B58
1189  8B58              ; -----------------------------------------------------------------------------------
1190  8B58              ;
1191  8B58              ;	28/12/23
1192  8B58              ;
1193  8B58              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1194  8B58              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1195  8B58
1196  8B58              Guarda_movimiento_masticado
1197  8B58
1198  8B58 ED 73 E1 89  	ld (Stack),sp
1199  8B5C ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1200  8B60
1201  8B60 E5           	push hl
1202  8B61 DD E5            push ix
1203  8B63 FD E5            push iy
1204  8B65
1205  8B65 ED 7B E1 89      ld sp,(Stack)
1206  8B69
1207  8B69 2A AB 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1208  8B6C 23           	inc hl
1209  8B6D 22 AB 89     	ld (Contador_de_mov_masticados),hl
1210  8B70
1211  8B70 CD 74 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1212  8B73              ;															; _ el (Contador_de_mov_masticados).
1213  8B73 C9               ret
1214  8B74
1215  8B74              ; --------------------------------------------------------------------------------------------------------------
1216  8B74              ;
1217  8B74              ;	12/1/24
1218  8B74              ;
1219  8B74              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1220  8B74
1221  8B74              Actualiza_Puntero_de_almacen_de_mov_masticados
1222  8B74
1223  8B74 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1224  8B77 01 06 00     	ld bc,6
1225  8B7A A7           	and a
1226  8B7B ED 4A        	adc hl,bc
1227  8B7D 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1228  8B80 C9           	ret
1229  8B81
1230  8B81              ; --------------------------------------------------------------------------------------------------------------
1231  8B81              ;
1232  8B81              ;	15/01/24
1233  8B81              ;
1234  8B81              ;	Cargamos los registros_
1235  8B81              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1236  8B81              ;
1237  8B81              ;	HL contiene la dirección de la rutina de impresión.
1238  8B81              ;	IX contiene el puntero de impresión.
1239  8B81              ;	IY contiene (Puntero_objeto).
1240  8B81
1241  8B81
1242  8B81 ED 73 E1 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1243  8B85 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1244  8B89
1245  8B89 FD E1        	pop iy
1246  8B8B DD E1        	pop ix
1247  8B8D E1           	pop hl
1248  8B8E
1249  8B8E ED 73 A9 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1250  8B92
1251  8B92 ED 7B E1 89  	ld sp,(Stack)
1252  8B96
1253  8B96 C9           	ret
1254  8B97
1255  8B97              ; --------------------------------------------------------------------------------------------------------------
1256  8B97              ;
1257  8B97              ;	28/12/23
1258  8B97              ;
1259  8B97              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1260  8B97              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1261  8B97
1262  8B97              Guarda_foto_entidad_a_pintar
1263  8B97
1264  8B97 3A AD 89     	ld a,(Ctrl_0)
1265  8B9A CB 77        	bit 6,a
1266  8B9C 28 04        	jr z,5F
1267  8B9E
1268  8B9E              ;	Guarda la foto de Amadeus.
1269  8B9E
1270  8B9E              ;	call Draw
1271  8B9E              ;	call Guarda_movimiento_masticado	;! Provisional
1272  8B9E CD BF 80     	call Guarda_foto_registros
1273  8BA1 C9           	ret
1274  8BA2
1275  8BA2              ; ENTIDADES!
1276  8BA2              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1277  8BA2
1278  8BA2 3A EF 89     5 ld a,(Ctrl_3)
1279  8BA5 CB 5F        	bit 3,a
1280  8BA7 28 01        	jr z,1F
1281  8BA9
1282  8BA9              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1283  8BA9
1284  8BA9              4
1285  8BA9              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1286  8BA9 C9           	ret
1287  8BAA
1288  8BAA              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1289  8BAA
1290  8BAA 3A EF 89     1 ld a,(Ctrl_3)
1291  8BAD CB 57        	bit 2,a
1292  8BAF 20 10        	jr nz,6F
1293  8BB1
1294  8BB1              ; Entidad guía o fantasma ???
1295  8BB1
1296  8BB1 3A B2 89     	ld a,(Ctrl_2)
1297  8BB4 CB 6F        	bit 5,a
1298  8BB6 20 10        	jr nz,3F
1299  8BB8
1300  8BB8              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1301  8BB8
1302  8BB8 18 EF        	jr 4B
1303  8BBA
1304  8BBA              ; ENTIDAD_GUÍA:
1305  8BBA              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1306  8BBA              ; _guardando "movimientos_masticados".
1307  8BBA
1308  8BBA 3A EF 89     2 ld a,(Ctrl_3)
1309  8BBD CB 57        	bit 2,a
1310  8BBF 28 07        	jr z,3F
1311  8BC1
1312  8BC1              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1313  8BC1              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1314  8BC1
1315  8BC1 CB 97        6 res 2,a
1316  8BC3 CB DF        	set 3,a
1317  8BC5 32 EF 89     	ld (Ctrl_3),a
1318  8BC8
1319  8BC8
1320  8BC8              ;	Esto sólo lo ejecuta una entidad guía.
1321  8BC8
1322  8BC8 CD A6 8F     3 	call Draw
1323  8BCB CD 58 8B     	call Guarda_movimiento_masticado
1324  8BCE CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1325  8BD1
1326  8BD1              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1327  8BD1              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1328  8BD1
1329  8BD1              ;	call Convierte_guia_en_fantasma
1330  8BD1 C9           	ret
1331  8BD2
1332  8BD2              ; *************************************************************************************************************************************************************
1333  8BD2              ;
1334  8BD2              ; 8/1/23
1335  8BD2              ;
1336  8BD2              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1337  8BD2              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1338  8BD2              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1339  8BD2
1340  8BD2              ; Destruye HL y DE !!!!!
1341  8BD2
1342  8BD2              Inicia_punteros_de_cajas
1343  8BD2
1344  8BD2 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1345  8BD5 CD 6A 8C         call Extrae_address
1346  8BD8 22 D3 89         ld (Puntero_store_caja),hl
1347  8BDB 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1348  8BDE 22 D7 89     	ld (Indice_restore_caja),hl
1349  8BE1 CD 6A 8C     	call Extrae_address
1350  8BE4 22 D5 89     	ld (Puntero_restore_caja),hl
1351  8BE7 C9               ret
1352  8BE8
1353  8BE8              ; *************************************************************************************************************************************************************
1354  8BE8              ;
1355  8BE8              ; 8/1/23
1356  8BE8              ;
1357  8BE8              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1358  8BE8
1359  8BE8 21 7C 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1360  8BEB 22 F2 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1361  8BEE C9           	ret
1362  8BEF 21 64 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1363  8BF2 22 F4 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1364  8BF5 C9           	ret
1365  8BF6
1366  8BF6              ; -------------------------------------------------------------------------------------------------------------
1367  8BF6              ;
1368  8BF6              ; 21/9/23
1369  8BF6              ;
1370  8BF6
1371  8BF6              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1372  8BF6
1373  8BF6              Limpia_album_Amadeus
1374  8BF6
1375  8BF6 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1376  8BF9 7E           	ld a,(hl)
1377  8BFA A7           	and a
1378  8BFB C8           	ret z
1379  8BFC
1380  8BFC 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1381  8BFF 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1382  8C02 01 0B 00     	ld bc,11
1383  8C05 AF           	xor a
1384  8C06 77           	ld (hl),a
1385  8C07 ED B0        	ldir
1386  8C09
1387  8C09 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1388  8C0C 22 ED 89     	ld (End_Snapshot_Amadeus),hl
1389  8C0F
1390  8C0F C9           	ret
1391  8C10
1392  8C10 21 A1 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1393  8C13 11 A2 89     	ld de,Variables_de_borrado+1
1394  8C16 01 05 00     	ld bc,5
1395  8C19 AF           	xor a
1396  8C1A 77           	ld (hl),a
1397  8C1B ED B0        	ldir
1398  8C1D C9           	ret
1399  8C1E
1400  8C1E              ; -------------------------------------------------------------------------------------------------------------
1401  8C1E              ;
1402  8C1E              ; 	21/02/24
1403  8C1E              ;
1404  8C1E              ;	MODIFICA: AF,HL,BC,DE
1405  8C1E              ;
1406  8C1E              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1407  8C1E              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1408  8C1E
1409  8C1E              Calcula_numero_de_malotes
1410  8C1E
1411  8C1E 21 00 80     	ld hl,Album_de_fotos
1412  8C21 EB           	ex de,hl
1413  8C22 2A E7 89     	ld hl,(Stack_snapshot)
1414  8C25
1415  8C25 06 00        	ld b,0
1416  8C27 7D           	ld a,l
1417  8C28 93           	sub e
1418  8C29 28 07        	jr z,1F
1419  8C2B
1420  8C2B              ; Nº de malotes no es "0".
1421  8C2B
1422  8C2B D6 06        2 sub 6
1423  8C2D 04           	inc b
1424  8C2E A7           	and a
1425  8C2F 20 FA        	jr nz,2B
1426  8C31 78           	ld a,b
1427  8C32
1428  8C32 32 DC 89     1 ld (Numero_de_malotes),a
1429  8C35 C9           	ret
1430  8C36
1431  8C36              ; -------------------------------------------------------------------------------------------------------------
1432  8C36              ;
1433  8C36              ; 8/9/23
1434  8C36              ;
1435  8C36
1436  8C36              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1437  8C36              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1438  8C36
1439  8C36              Calcula_malotes_Amadeus
1440  8C36
1441  8C36 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1442  8C39 EB           	ex de,hl
1443  8C3A 2A ED 89     	ld hl,(End_Snapshot_Amadeus)
1444  8C3D
1445  8C3D 7C           	ld a,h
1446  8C3E A7           	and a
1447  8C3F 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1448  8C41
1449  8C41 06 00        	ld b,0
1450  8C43 7D           	ld a,l
1451  8C44 93           	sub e
1452  8C45 28 07        	jr z,1F
1453  8C47
1454  8C47              ; Nº de malotes no es "0".
1455  8C47
1456  8C47 D6 06        2 sub 6
1457  8C49 04           	inc b
1458  8C4A A7           	and a
1459  8C4B 20 FA        	jr nz,2B
1460  8C4D 78           	ld a,b
1461  8C4E
1462  8C4E 32 DC 89     1 ld (Numero_de_malotes),a
1463  8C51 C9           	ret
1464  8C52
1465  8C52              ; -------------------------------------------------------------------------------------------------------------
1466  8C52              ;
1467  8C52              ; 28/2/23
1468  8C52              ;
1469  8C52
1470  8C52              Calcula_numero_de_disparotes
1471  8C52
1472  8C52 21 56 80     	ld hl,Album_de_fotos_disparos
1473  8C55 EB           	ex de,hl
1474  8C56 2A EB 89     	ld hl,(End_Snapshot_disparos)
1475  8C59
1476  8C59 06 00        	ld b,0
1477  8C5B 7D           	ld a,l
1478  8C5C 93           	sub e
1479  8C5D 28 07        	jr z,1F
1480  8C5F
1481  8C5F              ; Nº de malotes no es "0".
1482  8C5F
1483  8C5F D6 06        2 sub 6
1484  8C61 04           	inc b
1485  8C62 A7           	and a
1486  8C63 20 FA        	jr nz,2B
1487  8C65 78           	ld a,b
1488  8C66
1489  8C66 32 F1 89     1 ld (Numero_de_disparotes),a
1490  8C69 C9           	ret
1491  8C6A
1492  8C6A              ; *************************************************************************************************************************************************************
1493  8C6A              ;
1494  8C6A              ; 20/10/22
1495  8C6A              ;
1496  8C6A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1497  8C6A              ;
1498  8C6A              ; Destruye el puntero y DE !!!!!
1499  8C6A
1500  8C6A 5E           Extrae_address ld e,(hl)
1501  8C6B 23           	inc hl
1502  8C6C 56           	ld d,(hl)
1503  8C6D 2B           	dec hl
1504  8C6E EB           	ex de,hl
1505  8C6F C9           	ret
1506  8C70
1507  8C70              ; *************************************************************************************************************************************************************
1508  8C70              ;
1509  8C70              ;	20/1/24
1510  8C70              ;
1511  8C70              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1512  8C70              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1513  8C70              ;
1514  8C70              ;   Destruye HL y BC !!!!!,
1515  8C70              ;
1516  8C70              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1517  8C70              ;					"0" ..... Izquierda.
1518  8C70
1519  8C70              Inicia_Puntero_objeto
1520  8C70
1521  8C70 3A 9F 89     	ld a,(Cuad_objeto)
1522  8C73 E6 01        	and 1
1523  8C75 F5           	push af
1524  8C76 CC 92 8C     	call z,Inicia_puntero_objeto_izq
1525  8C79 F1           	pop af
1526  8C7A C8           	ret z
1527  8C7B CD 7F 8C     	call Inicia_puntero_objeto_der
1528  8C7E C9           	ret
1529  8C7F
1530  8C7F              ; Arrancamos desde la parte izquierda de la pantalla.
1531  8C7F              ; Iniciamos (Indice_Sprite_der).
1532  8C7F
1533  8C7F 2A 95 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1534  8C82 22 99 89     	ld (Puntero_DESPLZ_der),hl
1535  8C85 CD 6A 8C     	call Extrae_address
1536  8C88 22 8F 89     	ld (Puntero_objeto),hl
1537  8C8B
1538  8C8B 2A 97 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1539  8C8E 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1540  8C91 C9           	ret
1541  8C92
1542  8C92              ; Arrancamos desde la parte derecha de la pantalla.
1543  8C92              ; Iniciamos (Indice_Sprite_izq).
1544  8C92
1545  8C92 2A 97 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1546  8C95 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1547  8C98 CD 6A 8C     	call Extrae_address
1548  8C9B 22 8F 89     	ld (Puntero_objeto),hl
1549  8C9E
1550  8C9E 2A 95 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1551  8CA1 22 99 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1552  8CA4 C9           	ret
1553  8CA5
1554  8CA5              ; **************************************************************************************************
1555  8CA5              ;
1556  8CA5              ;	31/01/24
1557  8CA5              ;
1558  8CA5              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1559  8CA5
1560  8CA5              Restore_entidad
1561  8CA5
1562  8CA5 2A D3 89     	ld hl,(Puntero_store_caja)
1563  8CA8 11 8A 89     	ld de,Bandeja_DRAW
1564  8CAB 7E           	ld a,(hl)
1565  8CAC 12           	ld (de),a
1566  8CAD 23           	inc hl 											; (Tipo).
1567  8CAE
1568  8CAE 11 91 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1569  8CB1 01 02 00     	ld bc,2
1570  8CB4 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1571  8CB6
1572  8CB6 13           	inc de
1573  8CB7 7E           	ld a,(hl)
1574  8CB8 12           	ld (de),a 										; Transferimos (Attr).
1575  8CB9 23           	inc hl
1576  8CBA
1577  8CBA 11 A0 89     	ld de,Impacto
1578  8CBD
1579  8CBD 7E           	ld a,(hl)
1580  8CBE 12           	ld (de),a 										; Transferimos (Impacto).
1581  8CBF 23           	inc hl
1582  8CC0
1583  8CC0 13           	inc de
1584  8CC1
1585  8CC1 01 06 00     	ld bc,6
1586  8CC4 ED B0        	ldir
1587  8CC6
1588  8CC6 01 07 00     	ld bc,7
1589  8CC9 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1590  8CCB              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1591  8CCB 11 B2 89     	ld de,Ctrl_2
1592  8CCE
1593  8CCE 7E           	ld a,(hl)
1594  8CCF 12           	ld (de),a 										; Transferimos (Ctrl_2).
1595  8CD0
1596  8CD0 C9           	ret
1597  8CD1
1598  8CD1              ; **************************************************************************************************
1599  8CD1              ;
1600  8CD1              ;	08/05/23
1601  8CD1              ;
1602  8CD1              ;	Incrementamos los dos punteros de entidades. (+1).
1603  8CD1
1604  8CD1              Incrementa_punteros_de_cajas
1605  8CD1
1606  8CD1 2A D5 89     	ld hl,(Puntero_restore_caja)
1607  8CD4 22 D3 89     	ld (Puntero_store_caja),hl
1608  8CD7 2A D7 89     	ld hl,(Indice_restore_caja)
1609  8CDA 23           	inc hl
1610  8CDB 23           	inc hl
1611  8CDC 22 D7 89     	ld (Indice_restore_caja),hl
1612  8CDF CD 6A 8C         call Extrae_address
1613  8CE2 22 D5 89         ld (Puntero_restore_caja),hl
1614  8CE5 C9               ret
1615  8CE6
1616  8CE6              ; **************************************************************************************************
1617  8CE6              ;
1618  8CE6              ;	21/12/23
1619  8CE6              ;
1620  8CE6              ;	Restore_Amadeus
1621  8CE6              ;
1622  8CE6              ;	Cargamos en DRAW los parámetros de Amadeus.
1623  8CE6              ;
1624  8CE6
1625  8CE6 E5           Restore_Amadeus	push hl
1626  8CE7 D5           	push de
1627  8CE8 C5            	push bc
1628  8CE9 21 F6 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1629  8CEC 11 8A 89     	ld de,Bandeja_DRAW
1630  8CEF 01 2A 00     	ld bc,42
1631  8CF2 ED B0        	ldir
1632  8CF4 C1           	pop bc
1633  8CF5 D1           	pop de
1634  8CF6 E1           	pop hl
1635  8CF7 C9           	ret
1636  8CF8
1637  8CF8              ; *************************************************************************************************************************************************************
1638  8CF8              ;
1639  8CF8              ;	21/12/23
1640  8CF8              ;
1641  8CF8              ;	Store_Amadeus
1642  8CF8              ;
1643  8CF8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1644  8CF8              ;
1645  8CF8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1646  8CF8              ;
1647  8CF8              ;	DESTRUYE: HL y BC y DE.
1648  8CF8
1649  8CF8 21 8A 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1650  8CFB 01 2A 00     	ld bc,42
1651  8CFE ED B0        	ldir
1652  8D00 C9           	ret
1653  8D01
1654  8D01              ; -----------------------------------------------------------
1655  8D01              ;
1656  8D01              ;	21/12/23
1657  8D01              ;
1658  8D01              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1659  8D01              ;
1660  8D01              ;	Destruye: HL,BC,DE,A
1661  8D01
1662  8D01 21 8A 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1663  8D04 01 29 00     	ld bc,41
1664  8D07 AF           	xor a
1665  8D08 77           	ld (hl),a
1666  8D09 11 8B 89     	ld de,Bandeja_DRAW+1
1667  8D0C ED B0        	ldir
1668  8D0E C9           	ret
1669  8D0F
1670  8D0F              ; -----------------------------------------------------------
1671  8D0F
1672  8D0F              ; Teclado.
1673  8D0F
1674  8D0F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1675  8D11 DB FE        	in a,($fe)
1676  8D13 E6 01        	and $01
1677  8D15 28 02        	jr z,1f
1678  8D17 18 F6        	jr Pulsa_ENTER
1679  8D19 C9           1 ret
1680  8D1A
1681  8D1A              ; **************************************************************************************************
1682  8D1A              ;
1683  8D1A              ; Temporización.
1684  8D1A
1685  8D1A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1686  8D1A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1687  8D1A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1688  8D1A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1689  8D1A
1690  8D1A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1691  8D1A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1692  8D1A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1693  8D1A
1694  8D1A              ; A partir de $4f61 no hace falta DELAY.
1695  8D1A
1696  8D1A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1697  8D1A
1698  8D1A 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1699  8D1D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1700  8D1E 78           	LD A,B
1701  8D1F A7           	AND A
1702  8D20 20 FB        	JR NZ,wait
1703  8D22 C9           	RET
1704  8D23
1705  8D23              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1706  8D23              ;
1707  8D23              ;	5/3/23
1708  8D23              ;
1709  8D23              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1710  8D23
1711  8D23              Movimiento_Amadeus
1712  8D23
1713  8D23              ; Disparo.
1714  8D23
1715  8D23 3A 07 8A     	ld a,(Disparo_Amadeus)
1716  8D26 A7           	and a
1717  8D27 20 02        	jr nz,1F
1718  8D29 18 15        	jr 2F
1719  8D2B
1720  8D2B 3E F7        1 ld a,$f7													; "5" para disparar.
1721  8D2D DB FE        	in a,($fe)
1722  8D2F E6 10        	and $10
1723  8D31
1724  8D31 F5           	push af
1725  8D32 CC 94 9A     	call z,Genera_disparo
1726  8D35 F1           	pop af
1727  8D36 20 08        	jr nz,2F
1728  8D38
1729  8D38 3A 07 8A     	ld a,(Disparo_Amadeus)
1730  8D3B EE 01        	xor 1
1731  8D3D 32 07 8A     	ld (Disparo_Amadeus),a
1732  8D40 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1733  8D42 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1734  8D44 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1735  8D46 CC 67 97         call z,Mov_left											;			"			"			"			"			"			"			"			"
1736  8D49
1737  8D49 3E F7        	ld a,$f7
1738  8D4B DB FE        	in a,($fe)
1739  8D4D E6 01        	and $01
1740  8D4F C8           	ret z
1741  8D50
1742  8D50 3E F7        	ld a,$f7
1743  8D52 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1744  8D54 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1745  8D56 CC 44 96     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1746  8D59 C9           	ret
1747  8D5A
1748  8D5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1749  8D5A              ;
1750  8D5A              ;	Rutina provisional para que los malotes cagen balas.
1751  8D5A
1752  8D5A              Detecta_disparo_entidad
1753  8D5A
1754  8D5A 3A 0A 8A     	ld a,(Disparo_entidad)
1755  8D5D A7           	and a
1756  8D5E C8           	ret z
1757  8D5F
1758  8D5F              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1759  8D5F
1760  8D5F              ;	ld a,$7f				; Detecta SPACE.
1761  8D5F              ;	in a,($fe)
1762  8D5F              ;	and 1
1763  8D5F              ;	ret nz
1764  8D5F
1765  8D5F CD 94 9A     	call Genera_disparo
1766  8D62 C9           	ret
1767  8D63
1768  8D63              ; ----------------------------------------------------------------------
1769  8D63              ;
1770  8D63              ;	8/9/23
1771  8D63
1772  8D63 2A ED 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1773  8D66 2B            	dec hl
1774  8D67 7E           	ld a,(hl)
1775  8D68 A7           	and a
1776  8D69 C8           	ret z										; Salimos si es álbum está vacío.
1777  8D6A
1778  8D6A 11 A6 89     	ld de,Variables_de_borrado+5
1779  8D6D 01 06 00     	ld bc,6
1780  8D70 ED B8        	lddr
1781  8D72 C9           	ret
1782  8D73
1783  8D73              ; ----------------------------------------------------------------------
1784  8D73              ;
1785  8D73              ;	9/9/23
1786  8D73
1787  8D73              Repone_datos_de_borrado_Amadeus
1788  8D73
1789  8D73 21 A1 89     	ld hl,Variables_de_borrado
1790  8D76 11 AC 80     	ld de,Album_de_fotos_Amadeus
1791  8D79 01 06 00     	ld bc,6
1792  8D7C ED B0        	ldir
1793  8D7E
1794  8D7E EB           	ex de,hl
1795  8D7F 22 ED 89     	ld (End_Snapshot_Amadeus),hl
1796  8D82
1797  8D82 C9           	ret
1798  8D83
1799  8D83              ; ----------------------------------------------------------------------
1800  8D83              ;
1801  8D83              ;	27/10/23
1802  8D83              ;
1803  8D83
1804  8D83              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1805  8D83              ;	_ Album_de_fotos correspondiente.
1806  8D83
1807  8D83              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1808  8D83              ;	_ durante el proceso de escritura.
1809  8D83
1810  8D83              Repone_datos_de_borrado
1811  8D83
1812  8D83 ED 5B E7 89  	ld de,(Stack_snapshot)
1813  8D87 21 A1 89     	ld hl,Variables_de_borrado
1814  8D8A 01 06 00     	ld bc,6
1815  8D8D ED B0        	ldir
1816  8D8F
1817  8D8F EB           	ex de,hl
1818  8D90 22 E7 89     	ld (Stack_snapshot),hl
1819  8D93
1820  8D93 C9           	ret
1821  8D94
1822  8D94              ; --------------------------------------------------------------------------------------
1823  8D94
1824  8D94              Pinta_Amadeus
1825  8D94
1826  8D94 CD 36 8C        	call Calcula_malotes_Amadeus
1827  8D97 CD 3F 93     	call Extrae_foto_Amadeus
1828  8D9A CD F6 8B     	call Limpia_album_Amadeus
1829  8D9D
1830  8D9D C9           	ret
1831  8D9E
1832  8D9E              ; -----------------------------------------------------------------------------------
1833  8D9E              ;
1834  8D9E              ;	10/12/23
1835  8D9E              ;
1836  8D9E              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1837  8D9E
1838  8D9E              Actualiza_relojes
1839  8D9E
1840  8D9E 3A EF 89     	ld a,(Ctrl_3)
1841  8DA1 CB 47        	bit 0,a
1842  8DA3 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1843  8DA4
1844  8DA4 21 02 8A     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1845  8DA7 34           	inc (hl)
1846  8DA8
1847  8DA8 34           	inc (hl)
1848  8DA9 35           	dec (hl)
1849  8DAA C0           	ret nz
1850  8DAB
1851  8DAB 21 03 8A     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1852  8DAE 34           	inc (hl)
1853  8DAF C9           	ret
1854  8DB0
1855  8DB0              ; ---------------------------------------------------------------
1856  8DB0
1857  8DB0              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8DB0              ;---------------------------------------------------------------------------------------------------------------
   2+ 8DB0              ;
   3+ 8DB0              ;   19/1/24
   4+ 8DB0              ;
   5+ 8DB0              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8DB0              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8DB0              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8DB0              ;	_ de la 1ª entidad del Nivel.
   9+ 8DB0              ;
  10+ 8DB0              ;	MODIFICA: HL,DE y A.
  11+ 8DB0              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8DB0
  13+ 8DB0              Inicializa_Nivel
  14+ 8DB0
  15+ 8DB0 2A 0E 8A     	ld hl,(Puntero_indice_NIVELES)
  16+ 8DB3 CD 6A 8C     	call Extrae_address
  17+ 8DB6 7E           	ld a,(hl)
  18+ 8DB7 32 D9 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8DBA 23           	inc hl
  20+ 8DBB CD C8 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8DBE 22 10 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8DC1 CD D1 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8DC4              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8DC4 CD E2 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8DC7 C9           	ret
  26+ 8DC8
  27+ 8DC8              ; ----------------------
  28+ 8DC8
  29+ 8DC8 11 B4 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8DCB 01 04 00     	ld bc,4
  31+ 8DCE ED B0        	ldir
  32+ 8DD0 C9           	ret
  33+ 8DD1
  34+ 8DD1 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8DD2 CD 22 8F         call Calcula_salto_en_BC
  36+ 8DD5 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8DD8 A7               and a
  38+ 8DD9 ED 4A            adc hl,bc
  39+ 8DDB CD 6A 8C         call Extrae_address
  40+ 8DDE 22 C4 89         ld (Puntero_indice_mov),hl
  41+ 8DE1 C9               ret
  42+ 8DE2
  43+ 8DE2 3A 8A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8DE5 CD 22 8F     	call Calcula_salto_en_BC
  45+ 8DE8 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8DEB A7               and a
  47+ 8DEC ED 4A            adc hl,bc
  48+ 8DEE CD 6A 8C         call Extrae_address
  49+ 8DF1 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8DF4 C9           	ret
  51+ 8DF5
  52+ 8DF5              ;---------------------------------------------------------------------------------------------------------------
  53+ 8DF5              ;
  54+ 8DF5              ;   5/1/24
  55+ 8DF5              ;
  56+ 8DF5              ;	Destruye A,BC,HL,DE
  57+ 8DF5
  58+ 8DF5              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8DF5              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8DF5
  61+ 8DF5              Inicia_Entidades
  62+ 8DF5
  63+ 8DF5              ; Preparamos los punteros de las cajas de entidades:
  64+ 8DF5
  65+ 8DF5 CD D2 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8DF8              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8DF8 CD 89 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8DFB
  69+ 8DFB 2A 10 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8DFE
  71+ 8DFE 22 10 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8E01
  73+ 8E01 CD D0 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8E04
  75+ 8E04 2A 10 8A     	ld hl,(Datos_de_nivel)
  76+ 8E07
  77+ 8E07              ; En este punto:
  78+ 8E07              ;
  79+ 8E07              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8E07              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8E07
  82+ 8E07 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8E08
  84+ 8E08 7E           	ld a,(hl)
  85+ 8E09 CD 45 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8E0C
  87+ 8E0C CD 34 8F     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8E0F
  89+ 8E0F              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8E0F
  91+ 8E0F CD F2 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8E12
  93+ 8E12 A7           	and a
  94+ 8E13 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8E15
  96+ 8E15              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8E15
  98+ 8E15              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8E15              ;	_ de este tipo de entidad.
 100+ 8E15
 101+ 8E15 CD 7E 9A     	call Situa_en_contador_general_de_mov_masticados
 102+ 8E18 CD 8B 9A     	call Transfiere_datos_de_contadores
 103+ 8E1B
 104+ 8E1B 18 06        	jr 4F
 105+ 8E1D
 106+ 8E1D CD B1 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8E20
 108+ 8E20              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8E20              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8E20              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8E20              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8E20              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8E20
 114+ 8E20 CD B0 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8E23              ;																; _ Mov_masticados ya generados.
 116+ 8E23 CD 5F 8E     4 call Guarda_foto_de_mov_masticado
 117+ 8E26
 118+ 8E26              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8E26
 120+ 8E26 2A A7 89     	ld hl,(Puntero_de_impresion)
 121+ 8E29 CD 95 9F     	call Genera_coordenadas
 122+ 8E2C CD 5B 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8E2F CD 69 8E     	call Limpiamos_bandeja_DRAW
 124+ 8E32 CD D1 8C     	call Incrementa_punteros_de_cajas
 125+ 8E35
 126+ 8E35              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8E35              ; _ entidad del Nivel.
 128+ 8E35
 129+ 8E35 3A F0 89     	ld a,(Ctrl_4)
 130+ 8E38 E6 F0        	and $f0
 131+ 8E3A 32 F0 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8E3D
 133+ 8E3D              ; Siguiente entidad del Nivel.
 134+ 8E3D
 135+ 8E3D 2A 10 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8E40 23           	inc hl 														; _ entidad del Nivel.
 137+ 8E41
 138+ 8E41 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8E42
 140+ 8E42 10 BA        	djnz 2B
 141+ 8E44
 142+ 8E44 C9           	ret
 143+ 8E45
 144+ 8E45              ; ---------------------------------------------------------------------
 145+ 8E45              ;
 146+ 8E45              ;	10/02/24
 147+ 8E45              ;
 148+ 8E45              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8E45              ;
 150+ 8E45              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8E45
 152+ 8E45              Definicion_segun_tipo
 153+ 8E45
 154+ 8E45 CD 22 8F     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8E48 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8E4B CD 2A 8F     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8E4E C9           	ret
 158+ 8E4F
 159+ 8E4F              ; ---------------------------------------------------------------------
 160+ 8E4F              ;
 161+ 8E4F              ;	30/01/24
 162+ 8E4F
 163+ 8E4F
 164+ 8E4F              Store_Restore_cajas
 165+ 8E4F
 166+ 8E4F              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8E4F
 168+ 8E4F 2A A7 89     	ld hl,(Puntero_de_impresion)
 169+ 8E52 CD 95 9F     	call Genera_coordenadas
 170+ 8E55
 171+ 8E55 CD 5B 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8E58 CD 69 8E     	call Limpiamos_bandeja_DRAW
 173+ 8E5B
 174+ 8E5B              ; 	Entidad_sospechosa. 20/4/23
 175+ 8E5B
 176+ 8E5B              ;	ld a,(Impacto)
 177+ 8E5B              ;	and a
 178+ 8E5B              ;	jr z,1F
 179+ 8E5B
 180+ 8E5B              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8E5B              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8E5B              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8E5B              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8E5B              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8E5B
 186+ 8E5B
 187+ 8E5B              ;1 ld hl,(Puntero_restore_caja)
 188+ 8E5B              ;	ld a,(hl)
 189+ 8E5B              ;	and a
 190+ 8E5B              ;	push af
 191+ 8E5B              ;	jr z,2F
 192+ 8E5B
 193+ 8E5B              ;	di
 194+ 8E5B              ;	ld de,Bandeja_DRAW
 195+ 8E5B              ;	ld bc,42
 196+ 8E5B              ;	ldir
 197+ 8E5B              ;	ei
 198+ 8E5B
 199+ 8E5B CD D1 8C     2 call Incrementa_punteros_de_cajas
 200+ 8E5E C9           	ret
 201+ 8E5F
 202+ 8E5F
 203+ 8E5F              ; ---------------------------------------------------------------------
 204+ 8E5F              ;
 205+ 8E5F              ;	29/01/24
 206+ 8E5F
 207+ 8E5F              Guarda_foto_de_mov_masticado
 208+ 8E5F
 209+ 8E5F CD 81 8B     	call Cargamos_registros_con_mov_masticado
 210+ 8E62 CD BF 80     	call Guarda_foto_registros
 211+ 8E65              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 212+ 8E65              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 213+ 8E65              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 214+ 8E65              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 8E65
 216+ 8E65 CD 74 8E     	call Decrementa_Contador_de_mov_masticados
 217+ 8E68 C9           	ret
 218+ 8E69
 219+ 8E69              ; ---------------------------------------------------------------------
 220+ 8E69              ;
 221+ 8E69              ;	25/01/24
 222+ 8E69
 223+ 8E69 21 8A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 224+ 8E6C 06 2A        	ld b,42
 225+ 8E6E AF           	xor a
 226+ 8E6F
 227+ 8E6F 77           1 ld (hl),a
 228+ 8E70 23           	inc hl
 229+ 8E71 10 FC        	djnz 1B
 230+ 8E73
 231+ 8E73 C9           	ret
 232+ 8E74
 233+ 8E74              ; ---------------------------------------------------------------------
 234+ 8E74              ;
 235+ 8E74              ;	22/01/24
 236+ 8E74
 237+ 8E74 2A AB 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 238+ 8E77 2B           	dec hl
 239+ 8E78
 240+ 8E78 24           	inc h
 241+ 8E79 25           	dec h
 242+ 8E7A
 243+ 8E7A FC 81 8E     	call m,Reinicia_entidad_maliciosa
 244+ 8E7D
 245+ 8E7D              ;	jr nz,1F
 246+ 8E7D
 247+ 8E7D              ;	inc l
 248+ 8E7D              ;	dec l
 249+ 8E7D
 250+ 8E7D              ;	di
 251+ 8E7D              ;	jr z,$
 252+ 8E7D              ;	ei
 253+ 8E7D
 254+ 8E7D 22 AB 89     1 ld (Contador_de_mov_masticados),hl
 255+ 8E80 C9           	ret
 256+ 8E81
 257+ 8E81              ; ---------------------------------------------------------------------
 258+ 8E81              ;
 259+ 8E81              ;	10/2/24
 260+ 8E81
 261+ 8E81              Reinicia_entidad_maliciosa
 262+ 8E81
 263+ 8E81              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 264+ 8E81
 265+ 8E81 CD 7E 9A     	call Situa_en_contador_general_de_mov_masticados
 266+ 8E84 CD 8B 9A     	call Transfiere_datos_de_contadores
 267+ 8E87
 268+ 8E87              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 269+ 8E87
 270+ 8E87 3A 8A 89     	ld a,(Tipo)
 271+ 8E8A CD 45 8E     	call Definicion_segun_tipo
 272+ 8E8D
 273+ 8E8D E5           	push hl
 274+ 8E8E DD E1        	pop ix
 275+ 8E90
 276+ 8E90 DD 6E 0B     	ld l,(ix+11)
 277+ 8E93 DD 66 0C     	ld h,(ix+12)
 278+ 8E96
 279+ 8E96 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 280+ 8E99
 281+ 8E99              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 282+ 8E99              ;	Queremos pintar la entidad en su posición de inicio.
 283+ 8E99
 284+ 8E99 2A E7 89     	ld hl,(Stack_snapshot)
 285+ 8E9C 01 06 00     	ld bc,6
 286+ 8E9F A7           	and a
 287+ 8EA0 ED 42        	sbc hl,bc
 288+ 8EA2 22 E7 89     	ld (Stack_snapshot),hl
 289+ 8EA5
 290+ 8EA5 CD 81 8B     	call Cargamos_registros_con_mov_masticado
 291+ 8EA8 CD BF 80     	call Guarda_foto_registros
 292+ 8EAB
 293+ 8EAB 2A AB 89     	ld hl,(Contador_de_mov_masticados)
 294+ 8EAE 2B           	dec hl
 295+ 8EAF
 296+ 8EAF C9           	ret
 297+ 8EB0
 298+ 8EB0
 299+ 8EB0
 300+ 8EB0
 301+ 8EB0              ; ---------------------------------------------------------------------
 302+ 8EB0              ;
 303+ 8EB0              ;	22/01/24
 304+ 8EB0
 305+ 8EB0 21 F0 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 306+ 8EB3 CB 46        	bit 0,(hl)
 307+ 8EB5 20 0D        	jr nz,1F
 308+ 8EB7 CB 4E        	bit 1,(hl)
 309+ 8EB9 20 0C        	jr nz,2F
 310+ 8EBB CB 56        	bit 2,(hl)
 311+ 8EBD 20 0B        	jr nz,3F
 312+ 8EBF CB 5E        	bit 3,(hl)
 313+ 8EC1 20 0A        	jr nz,4F
 314+ 8EC3 C9           	ret
 315+ 8EC4
 316+ 8EC4 CB E6        1 set 4,(hl)
 317+ 8EC6 C9           	ret
 318+ 8EC7 CB EE        2 set 5,(hl)
 319+ 8EC9 C9           	ret
 320+ 8ECA CB F6        3 set 6,(hl)
 321+ 8ECC C9           	ret
 322+ 8ECD CB FE        4 set 7,(hl)
 323+ 8ECF C9           	ret
 324+ 8ED0
 325+ 8ED0              ; ---------------------------------------------------------------------
 326+ 8ED0              ;
 327+ 8ED0              ;	23/01/24
 328+ 8ED0              ;
 329+ 8ED0              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 330+ 8ED0              ;
 331+ 8ED0              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 332+ 8ED0              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 333+ 8ED0              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 334+ 8ED0              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 335+ 8ED0
 336+ 8ED0              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 337+ 8ED0
 338+ 8ED0 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 339+ 8ED1 3D           	dec a
 340+ 8ED2 20 06        	jr nz,1F
 341+ 8ED4
 342+ 8ED4              ; --- Tipo_1
 343+ 8ED4
 344+ 8ED4 21 F0 89     	ld hl,Ctrl_4
 345+ 8ED7 CB C6        	set 0,(hl)
 346+ 8ED9 C9           	ret
 347+ 8EDA
 348+ 8EDA 3D           1 dec a
 349+ 8EDB 20 06        	jr nz,2F
 350+ 8EDD
 351+ 8EDD              ; --- Tipo_2
 352+ 8EDD
 353+ 8EDD 21 F0 89     	ld hl,Ctrl_4
 354+ 8EE0 CB CE        	set 1,(hl)
 355+ 8EE2 C9           	ret
 356+ 8EE3
 357+ 8EE3 3D           2 dec a
 358+ 8EE4 20 06        	jr nz,3F
 359+ 8EE6
 360+ 8EE6              ; --- Tipo_3
 361+ 8EE6
 362+ 8EE6 21 F0 89     	ld hl,Ctrl_4
 363+ 8EE9 CB D6        	set 2,(hl)
 364+ 8EEB C9           	ret
 365+ 8EEC
 366+ 8EEC              ; --- Tipo_3
 367+ 8EEC
 368+ 8EEC 21 F0 89     3 ld hl,Ctrl_4
 369+ 8EEF CB D6        	set 2,(hl)
 370+ 8EF1 C9           	ret
 371+ 8EF2
 372+ 8EF2              ; ---------------------------------------------------------------------
 373+ 8EF2              ;
 374+ 8EF2              ;	22/01/24
 375+ 8EF2
 376+ 8EF2 21 F0 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 377+ 8EF5 CB 46        	bit 0,(hl)
 378+ 8EF7 20 0E        	jr nz,1F
 379+ 8EF9
 380+ 8EF9 CB 4E        	bit 1,(hl)
 381+ 8EFB 20 10        	jr nz,2F
 382+ 8EFD
 383+ 8EFD CB 56        	bit 2,(hl)
 384+ 8EFF 20 12        	jr nz,3F
 385+ 8F01
 386+ 8F01 CB 5E        	bit 3,(hl)
 387+ 8F03 20 14        	jr nz,4F
 388+ 8F05 18 19        	jr 6F
 389+ 8F07
 390+ 8F07              ; Entidad_de_Tipo_1.
 391+ 8F07
 392+ 8F07 CB 66        1 bit 4,(hl)
 393+ 8F09 28 15        	jr z,6F
 394+ 8F0B 18 10        	jr 5F
 395+ 8F0D
 396+ 8F0D              ; Entidad_de_Tipo_2.
 397+ 8F0D
 398+ 8F0D CB 6E        2 bit 5,(hl)
 399+ 8F0F 28 0F        	jr z,6F
 400+ 8F11 18 0A        	jr 5F
 401+ 8F13
 402+ 8F13              ; Entidad_de_Tipo_3.
 403+ 8F13
 404+ 8F13 CB 76        3 bit 6,(hl)
 405+ 8F15 28 09        	jr z,6F
 406+ 8F17 18 04        	jr 5F
 407+ 8F19
 408+ 8F19              ; Entidad_de_Tipo_4.
 409+ 8F19
 410+ 8F19 CB 7E        4 bit 7,(hl)
 411+ 8F1B 28 03        	jr z,6F
 412+ 8F1D
 413+ 8F1D              ; Esta entidad TIENE MOV_MASTICADOS.
 414+ 8F1D
 415+ 8F1D AF           5 xor a
 416+ 8F1E 3C           	inc a
 417+ 8F1F C9           	ret
 418+ 8F20
 419+ 8F20              ; Esta entidad NO TIENE MOV_MASTICADOS.
 420+ 8F20
 421+ 8F20 AF           6 xor a
 422+ 8F21 C9           	ret
 423+ 8F22
 424+ 8F22              ;	------------------------------------------------------------------------------------
 425+ 8F22              ;
 426+ 8F22              ;	12/01/24
 427+ 8F22              ;
 428+ 8F22              ;	INPUTS:	A contiene el (Tipo) de entidad.
 429+ 8F22              ;
 430+ 8F22              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 431+ 8F22              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 432+ 8F22
 433+ 8F22 CB 27        Calcula_salto_en_BC sla a
 434+ 8F24 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 435+ 8F26 4F           	ld c,a
 436+ 8F27 06 00        	ld b,0
 437+ 8F29 C9           	ret
 438+ 8F2A
 439+ 8F2A              ; ------------------------------------------------------------------
 440+ 8F2A              ;
 441+ 8F2A              ;	19/1/24
 442+ 8F2A              ;
 443+ 8F2A              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 444+ 8F2A              ;	Actualiza (Datos_de_entidad) con esa dirección.
 445+ 8F2A
 446+ 8F2A A7           Situa_en_datos_de_definicion and a
 447+ 8F2B ED 4A        	adc hl,bc
 448+ 8F2D CD 6A 8C     	call Extrae_address
 449+ 8F30 22 DF 89         ld (Datos_de_entidad),hl
 450+ 8F33 C9           	ret
 451+ 8F34
 452+ 8F34              ; ------------------------------------------------------------------
 453+ 8F34
 454+ 8F34              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 455+ 8F34              ; 	inc de
 456+ 8F34              ; 	inc de
 457+ 8F34              ; 	ex de,hl
 458+ 8F34              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 459+ 8F34              ; 	ret
 460+ 8F34
 461+ 8F34              ; ----------------------------------------------------------------------------------------------------------
 462+ 8F34              ;
 463+ 8F34              ;	31/1/24
 464+ 8F34              ;
 465+ 8F34              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 466+ 8F34              ;	_ de entidad.
 467+ 8F34              ;
 468+ 8F34              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 469+ 8F34              ;
 470+ 8F34              ;
 471+ 8F34              ;	MODIFICA: HL,DE y BC
 472+ 8F34
 473+ 8F34
 474+ 8F34              Definicion_de_entidad_a_bandeja_DRAW
 475+ 8F34
 476+ 8F34 11 8A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 477+ 8F37 01 03 00     	ld bc,3
 478+ 8F3A ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 479+ 8F3C              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 480+ 8F3C 11 94 89     	ld de,Attr									; DE en (Attr).
 481+ 8F3F 01 05 00     	ld bc,5
 482+ 8F42 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 483+ 8F44              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 484+ 8F44 11 9D 89     	ld de,Posicion_inicio
 485+ 8F47 01 03 00     	ld bc,3
 486+ 8F4A ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 487+ 8F4C              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 488+ 8F4C 11 A9 89     	ld de,Puntero_de_almacen_de_mov_masticados
 489+ 8F4F 01 02 00     	ld bc,2
 490+ 8F52 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 491+ 8F54
 492+ 8F54 11 B3 89     	ld de,Frames_explosion
 493+ 8F57 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 494+ 8F59 12           	ld (de),a 									; Vuelco (Frames_explosion).
 495+ 8F5A
 496+ 8F5A C9           	ret
 497+ 8F5B
 498+ 8F5B              ; ----------------------------------------------------------------------------------------------------------
 499+ 8F5B              ;
 500+ 8F5B              ;	22/01/24
 501+ 8F5B              ;
 502+ 8F5B              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 503+ 8F5B              ;
 504+ 8F5B              ;	Las cajas contienen entidades iniciadas:
 505+ 8F5B              ;
 506+ 8F5B              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 507+ 8F5B              ;
 508+ 8F5B              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 509+ 8F5B              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 510+ 8F5B              ;
 511+ 8F5B              ;	MODIFICA: HL,DE y BC
 512+ 8F5B
 513+ 8F5B 21 8A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 514+ 8F5E ED 5B D3 89  	ld de,(Puntero_store_caja)
 515+ 8F62 7E           	ld a,(hl)
 516+ 8F63 12           	ld (de),a
 517+ 8F64 13           	inc de 													; (Tipo).
 518+ 8F65
 519+ 8F65 21 91 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 520+ 8F68 01 02 00     	ld bc,2
 521+ 8F6B ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 522+ 8F6D              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 523+ 8F6D 23           	inc hl
 524+ 8F6E 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 525+ 8F6F 12           	ld (de),a
 526+ 8F70 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 527+ 8F71
 528+ 8F71 21 A0 89     	ld hl,Impacto
 529+ 8F74 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 530+ 8F75 12           	ld (de),a
 531+ 8F76 13           	inc de 													; (Impacto), volcado a la caja.
 532+ 8F77              ;															; DE situado ahora en (Variables_de_borrado).
 533+ 8F77 23           	inc hl
 534+ 8F78 01 06 00     	ld bc,6
 535+ 8F7B ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 536+ 8F7D              ; 															; DE situado ahora en (Puntero_de_impresión).
 537+ 8F7D 01 07 00     	ld bc,7
 538+ 8F80 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 539+ 8F82              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 540+ 8F82              ;															; HL apunta ahora a (Columnas).
 541+ 8F82 21 B2 89     	ld hl,Ctrl_2
 542+ 8F85 7E           	ld a,(hl)
 543+ 8F86 12           	ld (de),a 												; Volcamos (Ctrl_2).
 544+ 8F87 13           	inc de
 545+ 8F88
 546+ 8F88 C9           	ret
 547+ 8F89
 548+ 8F89              ;---------------------------------------------------------------------------------------------------------------
 549+ 8F89              ;
 550+ 8F89              ;	5/1/24
 551+ 8F89              ;
 552+ 8F89              ;	INICIALIZA (Numero_parcial_de_entidades).
 553+ 8F89              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 554+ 8F89              ;
 555+ 8F89              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 556+ 8F89              ;
 557+ 8F89              ;	(Numero_parcial_de_entidades)="7".
 558+ 8F89              ;
 559+ 8F89              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 560+ 8F89              ;
 561+ 8F89              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 562+ 8F89              ;
 563+ 8F89              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 564+ 8F89              ;	MODIFICA: A y B.
 565+ 8F89              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 566+ 8F89
 567+ 8F89              Inicializa_Numero_parcial_de_entidades
 568+ 8F89
 569+ 8F89              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 570+ 8F89
 571+ 8F89 3A D9 89     	ld a,(Numero_de_entidades)
 572+ 8F8C A7           	and a
 573+ 8F8D
 574+ 8F8D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 575+ 8F8D              ;	jr z,$
 576+ 8F8D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8F8D
 578+ 8F8D 20 03        	jr nz,3F
 579+ 8F8F
 580+ 8F8F              ; ---------- ---------- ----------
 581+ 8F8F
 582+ 8F8F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 583+ 8F8F              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 584+ 8F8F
 585+ 8F8F CD B0 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 586+ 8F92
 587+ 8F92              ; ---------- ---------- ----------
 588+ 8F92
 589+ 8F92 3A D9 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 590+ 8F95 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 591+ 8F97 38 08        	jr c,1F
 592+ 8F99
 593+ 8F99              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 594+ 8F99              ; Actualizamos variables.
 595+ 8F99
 596+ 8F99 3E 07        	ld a,7
 597+ 8F9B 32 DA 89     	ld (Numero_parcial_de_entidades),a
 598+ 8F9E 47           	ld b,a
 599+ 8F9F 18 04        	jr 2F
 600+ 8FA1
 601+ 8FA1              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 602+ 8FA1              ; (Numero_de_entidades)="0".
 603+ 8FA1
 604+ 8FA1 32 DA 89     1 ld (Numero_parcial_de_entidades),a
 605+ 8FA4 47           	ld b,a
 606+ 8FA5 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1858  8FA6              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8FA6              ; ******************************************************************************************************************************************************************************************
   2+ 8FA6              ;
   3+ 8FA6              ; 26/06/23
   4+ 8FA6              ;
   5+ 8FA6              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8FA6
   7+ 8FA6              Draw
   8+ 8FA6
   9+ 8FA6 CD 93 92     	call Prepara_draw
  10+ 8FA9 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8FAA A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8FAB 28 05        	jr z,2F
  13+ 8FAD
  14+ 8FAD 3A 9F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8FB0 18 0C        	jr 1F
  16+ 8FB2
  17+ 8FB2 2A 9D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8FB5 22 8D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8FB8 CD 47 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8FBB              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8FBB
  22+ 8FBB CD E2 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8FBE
  24+ 8FBE 3A AD 89     1 ld a,(Ctrl_0)
  25+ 8FC1 CB 6F        	bit 5,a
  26+ 8FC3 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8FC5
  28+ 8FC5 CD DD 8F     	call Comprueba_limite_horizontal
  29+ 8FC8 CD 6D 90     	call Comprueba_limite_vertical
  30+ 8FCB
  31+ 8FCB              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8FCB              ; -----------------------
  33+ 8FCB              ; -----------------------
  34+ 8FCB              ; -----------------------
  35+ 8FCB
  36+ 8FCB CD C3 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8FCE CD FA 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8FD1 CD 59 92     	call Define_rutina_de_impresion
  39+ 8FD4
  40+ 8FD4 3A AD 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8FD7 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8FD9 32 AD 89     	ld (Ctrl_0),a
  43+ 8FDC
  44+ 8FDC C9           	ret
  45+ 8FDD
  46+ 8FDD              ; *******************************************************************************************************************************************************************************************
  47+ 8FDD              ;	21/01/23
  48+ 8FDD              ;
  49+ 8FDD              ; 	Comprueba_limite_horizontal.
  50+ 8FDD              ;
  51+ 8FDD              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8FDD              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8FDD              ;
  54+ 8FDD              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8FDD              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8FDD              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8FDD              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8FDD
  59+ 8FDD
  60+ 8FDD
  61+ 8FDD 3A AD 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8FE0 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8FE2 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8FE4 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8FE6 32 AD 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8FE9 18 09            jr 6F
  67+ 8FEB CB 5F        1 bit 3,a
  68+ 8FED 28 0A            jr z,2F
  69+ 8FEF E6 F7            and $f7
  70+ 8FF1 32 AD 89         ld (Ctrl_0),a
  71+ 8FF4 CD 47 91     6 call Inicializacion
  72+ 8FF7 18 5B            jr 5F
  73+ 8FF9 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8FFA
  75+ 8FFA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8FFA              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8FFA
  78+ 8FFA EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8FFB 2A AF 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8FFE CD 77 9F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9001 67           	ld h,a
  82+ 9002 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9003 CD 77 9F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9006 67           	ld h,a
  85+ 9007 A7           	and a
  86+ 9008 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 900A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 900B 3A 9F 89     	ld a,(Cuad_objeto)
  89+ 900E FE 02        	cp 2
  90+ 9010 38 1E        	jr c,3F
  91+ 9012 28 1C        	jr z,3F
  92+ 9014 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9015 28 23            jr z,7F
  94+ 9017 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9019 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 901B E1           	pop hl
  97+ 901C
  98+ 901C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 901C              ; _para indicar con E="2" en caso necesario.
 100+ 901C
 101+ 901C E5               push hl
 102+ 901D C5               push bc
 103+ 901E CD 77 9F     	call calcula_tercio
 104+ 9021 FE 01        	cp 1
 105+ 9023 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9025 CD 55 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9028 28 26            jr z,9F
 108+ 902A 38 24            jr c,9F
 109+ 902C 1E 00        11 ld e,0
 110+ 902E 18 22            jr 8F
 111+ 9030 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9031 28 07        	jr z, 7F
 113+ 9033 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9035 1E 00         	ld e,0
 115+ 9037 E1           	pop hl
 116+ 9038 18 04        	jr 4F
 117+ 903A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 903C 18 15            jr 10F
 119+ 903E
 120+ 903E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 903E              ; _para indicar con E="2" en caso necesario.
 122+ 903E
 123+ 903E E5           4 push hl
 124+ 903F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9040 CD 77 9F     	call calcula_tercio
 126+ 9043 FE 01        	cp 1
 127+ 9045 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9047 CD 55 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 904A 28 04            jr z,9F
 130+ 904C 30 02            jr nc,9F
 131+ 904E 18 02        	jr 8F
 132+ 9050 1E 02        9 ld e,2
 133+ 9052 C1           8 pop bc
 134+ 9053 E1           10 pop hl
 135+ 9054 C9           5 ret
 136+ 9055
 137+ 9055              ; --------------------
 138+ 9055              ;
 139+ 9055              ; 25/08/22
 140+ 9055
 141+ 9055 CD 77 9F     Comprueba_centro call calcula_tercio
 142+ 9058 67               ld h,a
 143+ 9059 08           	ex af,af
 144+ 905A FE 02        	cp 2
 145+ 905C 38 07        	jr c,1F
 146+ 905E 28 05        	jr z,1F
 147+ 9060 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9063 18 03        	jr 2F
 149+ 9065 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9068 08           2 ex af,af
 151+ 9069 A7               and a
 152+ 906A ED 42            sbc hl,bc
 153+ 906C C9               ret
 154+ 906D
 155+ 906D              ; *********************************************************************************************************************************************************************************************
 156+ 906D              ;
 157+ 906D              ;   16/8/22
 158+ 906D              ;
 159+ 906D              ;	Comprueba_limite_vertical
 160+ 906D              ;
 161+ 906D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 906D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 906D              ;
 164+ 906D
 165+ 906D 2A 8D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 9070 7D           	ld a,l
 167+ 9071 E6 1F        	and $1F
 168+ 9073 57           	ld d,a
 169+ 9074 3A B1 89     	ld a,(Limite_vertical)
 170+ 9077 BA           	cp d 											; Límite - Posición.
 171+ 9078 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9079 3A 9F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 907C CB 47        	bit 0,a
 174+ 907E 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 9080
 176+ 9080              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 9080
 178+ 9080 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 9081 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9083
 181+ 9083              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9083              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9083
 184+ 9083 3A 91 89         ld a,(Coordenada_X)
 185+ 9086 16 0F            ld d,Centro_izquierda
 186+ 9088 A7               and a
 187+ 9089 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 908A 28 1E            jr z,3F
 189+ 908C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 908E              ;                                                    ; _salimos sin modificar nada.
 191+ 908E 18 0E            jr 2F
 192+ 9090 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 9091 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9093
 195+ 9093              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9093              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9093
 198+ 9093 3A 91 89         ld a,(Coordenada_X)
 199+ 9096 16 10            ld d,Centro_derecha
 200+ 9098 A7               and a
 201+ 9099 92               sub d
 202+ 909A 28 0E            jr z,3F
 203+ 909C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 909E              ;                                                    ; _salimos sin modificar nada.
 205+ 909E CB 43        2 bit 0,e
 206+ 90A0 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 90A2 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 90A3 CD 37 91         call Modificaccionne
 209+ 90A6 C1           	pop bc
 210+ 90A7 CD 47 91         call Inicializacion
 211+ 90AA C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 90AB
 213+ 90AB              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 90AB
 215+ 90AB C5           4 push bc
 216+ 90AC 01 8C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 90AF 0A           	ld a,(bc)
 218+ 90B0 3D           	dec a
 219+ 90B1 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 90B2 7D           	ld a,l
 221+ 90B3 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 90B4 CB 47        	bit 0,a
 223+ 90B6 28 03        	jr z,5F
 224+ 90B8 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 90B9 18 2E        	jr 7F
 226+ 90BB
 227+ 90BB              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 90BB
 229+ 90BB 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 90BC F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 90BD 3A AD 89     	ld a,(Ctrl_0)
 232+ 90C0 CB 4F        	bit 1,a
 233+ 90C2 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 90C4 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 90C5
 236+ 90C5              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 90C5
 238+ 90C5 1C               inc e
 239+ 90C6 1D               dec e
 240+ 90C7 20 07            jr nz,12F
 241+ 90C9 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 90CA 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 90CB 22 8D 89     	ld (Posicion_actual),hl
 244+ 90CE 18 44        13 jr 9F
 245+ 90D0 CB 43        12 bit 0,e
 246+ 90D2 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 90D4              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 90D4 C1           	pop bc
 249+ 90D5 18 D3        	jr 3B
 250+ 90D7 80           14 add b
 251+ 90D8 6F               ld l,a
 252+ 90D9 22 8D 89     	ld (Posicion_actual),hl
 253+ 90DC CD 37 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 90DF 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 90E1 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 90E3 32 AD 89         ld (Ctrl_0),a
 257+ 90E6 F1           	pop af
 258+ 90E7 18 2B        	jr 9F
 259+ 90E9
 260+ 90E9              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 90E9
 262+ 90E9 F5           7 push af
 263+ 90EA 3A AD 89     	ld a,(Ctrl_0)
 264+ 90ED CB 47        	bit 0,a
 265+ 90EF 20 1D        	jr nz,8F
 266+ 90F1 F1           	pop af
 267+ 90F2
 268+ 90F2              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 90F2
 270+ 90F2 1C           	inc e
 271+ 90F3 1D               dec e
 272+ 90F4 20 07            jr nz,10F
 273+ 90F6 90           	sub b
 274+ 90F7 6F               ld l,a
 275+ 90F8 22 8D 89     	ld (Posicion_actual),hl
 276+ 90FB 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 90FD              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 90FD CB 43        10 bit 0,e
 279+ 90FF 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9101              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9101 C1           	pop bc
 282+ 9102 18 A6        	jr 3B
 283+ 9104 90           16 sub b
 284+ 9105 6F               ld l,a
 285+ 9106 22 8D 89     	ld (Posicion_actual),hl
 286+ 9109 CD 37 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 910C 18 06            jr 9F
 288+ 910E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9110 32 AD 89         ld (Ctrl_0),a
 290+ 9113 F1           	pop af
 291+ 9114 C1           9 pop bc
 292+ 9115 1E 00        	ld e,0
 293+ 9117 CD 47 91         call Inicializacion
 294+ 911A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 911B 08           	ex af,af
 296+ 911C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 911D 18 8B            jr 3B
 298+ 911F
 299+ 911F              ; --------------------
 300+ 911F
 301+ 911F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9121 CD AE 92     1 call PreviousScan
 303+ 9124 10 FB            djnz 1B
 304+ 9126 22 8D 89     	ld (Posicion_actual),hl
 305+ 9129 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 912A C9           	ret
 307+ 912B
 308+ 912B              ; --------------------
 309+ 912B
 310+ 912B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 912D CD 9F 92     1 call NextScan
 312+ 9130 10 FB            djnz 1B
 313+ 9132 22 8D 89     	ld (Posicion_actual),hl
 314+ 9135 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9136 C9           	ret
 316+ 9137
 317+ 9137              ; --------------------
 318+ 9137              ;
 319+ 9137              ;	22/01/23
 320+ 9137              ;
 321+ 9137              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9137              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9137              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9137
 325+ 9137
 326+ 9137              Modificaccionne
 327+ 9137
 328+ 9137 3A 9F 89     	ld a,(Cuad_objeto)
 329+ 913A FE 02        	cp 2
 330+ 913C CC 1F 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 913F DC 1F 91         call c,Modifica_Pos_actual
 332+ 9142 C8           	ret z
 333+ 9143 CD 2B 91         call Modifica_Pos_actual2
 334+ 9146 C9               ret
 335+ 9147
 336+ 9147              ; *************************************************************************************************************************************************************************************************
 337+ 9147              ;
 338+ 9147              ;	13/8/22
 339+ 9147              ;
 340+ 9147              ;	Inicializacion
 341+ 9147              ;
 342+ 9147              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9147              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9147              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9147              ;
 346+ 9147              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9147              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9147              ;	_ desaparece/aparece.
 349+ 9147
 350+ 9147              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9147              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9147              ;
 353+ 9147              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9147              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9147              ; 		   [E] ="0"
 356+ 9147
 357+ 9147              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9147
 359+ 9147 CD 77 9F     Inicializacion call calcula_tercio
 360+ 914A 28 36        	jr z,primit
 361+ 914C E6 02        	and 2
 362+ 914E 20 07        	jr nz,segmit
 363+ 9150 7D           	ld a,l
 364+ 9151 FE 7F        	cp $7f
 365+ 9153 38 2D        	jr c,primit
 366+ 9155 28 2B        	jr z,primit
 367+ 9157 CD BD 91     segmit call column
 368+ 915A 38 13        	jr c,tercuad
 369+ 915C 3E 04        cuarcuad ld a,4
 370+ 915E 32 9F 89     	ld (Cuad_objeto),a
 371+ 9161 21 20 48     	ld hl,$4820
 372+ 9164 22 AF 89     	ld (Limite_horizontal),hl
 373+ 9167 21 B1 89     	ld hl,Limite_vertical
 374+ 916A 36 0D        	ld (hl),$0d
 375+ 916C 08           	ex af,af
 376+ 916D 18 3C        	jr 1F
 377+ 916F              tercuad
 378+ 916F 3E 03        	ld a,3
 379+ 9171 32 9F 89     	ld (Cuad_objeto),a
 380+ 9174 21 20 48     	ld hl,$4820
 381+ 9177 22 AF 89     	ld (Limite_horizontal),hl
 382+ 917A 21 B1 89     	ld hl,Limite_vertical
 383+ 917D 36 12        	ld (hl),$12
 384+ 917F 08           	ex af,af
 385+ 9180 18 29        	jr 1F
 386+ 9182 CD BD 91     primit call column
 387+ 9185 38 13        	jr c, primcuad
 388+ 9187              segcuad
 389+ 9187 3E 02        	ld a,2
 390+ 9189 32 9F 89     	ld (Cuad_objeto),a
 391+ 918C 21 C0 4F     	ld hl,$4fc0
 392+ 918F 22 AF 89     	ld (Limite_horizontal),hl
 393+ 9192 21 B1 89     	ld hl,Limite_vertical
 394+ 9195 36 0D        	ld (hl),$0d
 395+ 9197 08           	ex af,af
 396+ 9198 18 11        	jr 1F
 397+ 919A              primcuad
 398+ 919A 3E 01        	ld a,1
 399+ 919C 32 9F 89     	ld (Cuad_objeto),a
 400+ 919F 21 C0 4F     	ld hl,$4fc0
 401+ 91A2 22 AF 89     	ld (Limite_horizontal),hl
 402+ 91A5 21 B1 89     	ld hl,Limite_vertical
 403+ 91A8 36 12        	ld (hl),$12
 404+ 91AA 08           	ex af,af
 405+ 91AB
 406+ 91AB C5           1 push bc
 407+ 91AC E5           	push hl
 408+ 91AD D5           	push de
 409+ 91AE
 410+ 91AE 2A 8D 89     	ld hl,(Posicion_actual)
 411+ 91B1 CD 95 9F     	call Genera_coordenadas
 412+ 91B4
 413+ 91B4 D1           	pop de
 414+ 91B5 E1           	pop hl
 415+ 91B6 C1           	pop bc
 416+ 91B7
 417+ 91B7 21 AD 89     	ld hl,Ctrl_0
 418+ 91BA CB EE        	set 5,(hl)
 419+ 91BC C9           	ret
 420+ 91BD
 421+ 91BD              ; ------------------------------------------------------------------------------------------------------------------
 422+ 91BD
 423+ 91BD              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 91BD              ;
 425+ 91BD              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 91BD
 427+ 91BD 7D           column ld a,l
 428+ 91BE E6 1F        	and $1f
 429+ 91C0 FE 10         	cp $10
 430+ 91C2 C9            	ret
 431+ 91C3
 432+ 91C3              ; --------------------------------------------------------------------------------------------------------------------
 433+ 91C3              ;
 434+ 91C3              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 91C3              ;
 436+ 91C3              ; 14/12/22
 437+ 91C3              ;
 438+ 91C3              ;	Modifica: A y BC.
 439+ 91C3
 440+ 91C3 3A 9F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 91C6 E6 01        	and 1
 442+ 91C8 28 17        	jr z,1F
 443+ 91CA
 444+ 91CA              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 91CA
 446+ 91CA 3A 91 89     	ld a,(Coordenada_X)
 447+ 91CD 47           	ld b,a
 448+ 91CE 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 91CF 79           	ld a,c
 450+ 91D0 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 91D1 38 08        	jr c,2F
 452+ 91D3 47           	ld b,a
 453+ 91D4 79           	ld a,c
 454+ 91D5 90           	sub b
 455+ 91D6 32 AE 89     	ld (Columnas),a
 456+ 91D9 18 1B        	jr 4F
 457+ 91DB 79           2 ld a,c
 458+ 91DC 32 AE 89     	ld (Columnas),a
 459+ 91DF 18 15        	jr 4F
 460+ 91E1
 461+ 91E1              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 91E1
 463+ 91E1 3A 91 89     1 ld a,(Coordenada_X)
 464+ 91E4 81           	add c
 465+ 91E5 3D           	dec a
 466+ 91E6 D6 1F        	sub $1f
 467+ 91E8 38 08        	jr c,3F
 468+ 91EA 47           	ld b,a
 469+ 91EB 79           	ld a,c
 470+ 91EC 90           	sub b
 471+ 91ED 32 AE 89     	ld (Columnas),a
 472+ 91F0 18 04        	jr 4F
 473+ 91F2 79           3 ld a,c
 474+ 91F3 32 AE 89     	ld (Columnas),a
 475+ 91F6 D9           4 exx
 476+ 91F7 4F           	ld c,a
 477+ 91F8 D9           	exx
 478+ 91F9 C9            ret
 479+ 91FA
 480+ 91FA              ; --------------------------------------------------------------------------------------------------------------------
 481+ 91FA              ;
 482+ 91FA              ;   19/7/23
 483+ 91FA              ;
 484+ 91FA              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 91FA              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 91FA              ;
 487+ 91FA              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 91FA              ;			HL e IY Contienen (Puntero_objeto).
 489+ 91FA              ;
 490+ 91FA              ;	DESTRUYE: HL,B Y A.
 491+ 91FA
 492+ 91FA 3A 9F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 91FD FE 02        	cp 2
 494+ 91FF 38 18        	jr c,1F
 495+ 9201 28 16        	jr z,1F
 496+ 9203 E6 01        	and 1
 497+ 9205 28 0D        	jr z,3F
 498+ 9207
 499+ 9207              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9207
 501+ 9207 CD 4D 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 920A
 503+ 920A 7D           9 ld a,l
 504+ 920B E6 1F        	and $1f
 505+ 920D 28 2A        	jr z,7F
 506+ 920F 2B           	dec hl
 507+ 9210 10 F8        	djnz 9B
 508+ 9212 18 25        	jr 7F
 509+ 9214
 510+ 9214              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9214
 512+ 9214 2A 8D 89     3 ld hl,(Posicion_actual)
 513+ 9217 18 20        	jr 7F
 514+ 9219
 515+ 9219 28 14        1 jr z,2F
 516+ 921B
 517+ 921B              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 921B
 519+ 921B CD 4D 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 921E
 521+ 921E 7D           4 ld a,l
 522+ 921F E6 1F        	and $1f
 523+ 9221 28 03        	jr z,6F
 524+ 9223 2B           	dec hl
 525+ 9224 10 F8        	djnz 4B
 526+ 9226 06 0F        6 ld b,15
 527+ 9228 CD AE 92     5 call PreviousScan
 528+ 922B 10 FB        	djnz 5B
 529+ 922D 18 0A        	jr 7F
 530+ 922F
 531+ 922F              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 922F
 533+ 922F CD 4D 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9232 06 0F        	ld b,15
 535+ 9234 CD AE 92     8 call PreviousScan
 536+ 9237 10 FB        	djnz 8B
 537+ 9239
 538+ 9239 E5           7 push hl
 539+ 923A DD E1        	pop ix
 540+ 923C
 541+ 923C 2A 8F 89     	ld hl,(Puntero_objeto)
 542+ 923F E5           	push hl
 543+ 9240 FD E1        	pop iy
 544+ 9242
 545+ 9242              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9242
 547+ 9242 3A AD 89     	ld a,(Ctrl_0)
 548+ 9245 CB 77        	bit 6,a
 549+ 9247 C8           	ret z
 550+ 9248
 551+ 9248              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9248              ; _ entidad / Amadeus´.
 553+ 9248
 554+ 9248 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 924C
 556+ 924C C9           	ret
 557+ 924D
 558+ 924D              ; --------------------------------------------------------------------------------------------------------------------
 559+ 924D              ;
 560+ 924D              ;	2/1/23
 561+ 924D              ;
 562+ 924D              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 924D              ;
 564+ 924D              ;	Tras esta rutina tenemos:
 565+ 924D              ;
 566+ 924D              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 924D              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 924D              ;
 569+ 924D              ;	DESTRUYE!!!!! HL,B y A.
 570+ 924D
 571+ 924D 2A 8D 89     Operandos ld hl,(Posicion_actual)
 572+ 9250 3A AE 89     	ld a,(Columnas)
 573+ 9253 3D           	dec a
 574+ 9254 20 01        	jr nz,1F
 575+ 9256 3C           	inc a
 576+ 9257 47           1 ld b,a
 577+ 9258 C9           	ret
 578+ 9259
 579+ 9259              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9259              ;
 581+ 9259              ;	3/1/23
 582+ 9259              ;
 583+ 9259              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9259              ;
 585+ 9259              ;	Destruye: A,B,HL y DE.
 586+ 9259
 587+ 9259              Define_rutina_de_impresion
 588+ 9259
 589+ 9259 3A 8C 89     	ld a,(Columns)
 590+ 925C 47           	ld b,a
 591+ 925D 3A AE 89     	ld a,(Columnas)
 592+ 9260 B8           	cp b
 593+ 9261 20 0D        	jr nz,2f
 594+ 9263
 595+ 9263              ;	La entidad se imprime entera.
 596+ 9263
 597+ 9263 21 82 93     	ld hl, Indice_entidades_completas
 598+ 9266 E6 01        	and 1
 599+ 9268 28 02        	jr z,1F
 600+ 926A
 601+ 926A 23           	inc hl
 602+ 926B 23           	inc hl
 603+ 926C
 604+ 926C CD 6A 8C     1 call Extrae_address
 605+ 926F C9           	ret		;	ret
 606+ 9270
 607+ 9270              ;	La entidad no se imprime entera en pantalla.
 608+ 9270
 609+ 9270 3A 9F 89     2 ld a,(Cuad_objeto)
 610+ 9273 E6 01        	and 1
 611+ 9275 28 17        	jr z,3F
 612+ 9277
 613+ 9277              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9277
 615+ 9277 21 86 93     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 927A 3A 8C 89     4 ld a,(Columns)
 617+ 927D E6 01        	and 1
 618+ 927F 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 9281
 620+ 9281 23           	inc hl
 621+ 9282 23           	inc hl
 622+ 9283
 623+ 9283 3A AE 89     	ld a,(Columnas)
 624+ 9286 E6 01        	and 1
 625+ 9288 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 928A
 627+ 928A 23           	inc hl
 628+ 928B 23           	inc hl
 629+ 928C
 630+ 928C 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 928E
 632+ 928E 21 8C 93     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 9291 18 E7        	jr 4B
 634+ 9293
 635+ 9293              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9293              ;
 637+ 9293              ;	Prepara_draw
 638+ 9293              ;
 639+ 9293              ;	Es una rutina de carga.
 640+ 9293              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9293              ;
 642+ 9293              ;	FUNCIONAMIENTO:
 643+ 9293              ;
 644+ 9293              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9293              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9293              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9293              ;
 648+ 9293              ;	DESTRUYE:
 649+ 9293              ;
 650+ 9293              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9293
 652+ 9293 21 8B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9296 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9297 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9298 4E           	ld c,(hl)
 656+ 9299 2A 8D 89     	ld hl,(Posicion_actual)
 657+ 929C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 929E C9           	ret
 659+ 929F
 660+ 929F              ;----------------------------------------------------------------------------------------------------------------
 661+ 929F              ;
 662+ 929F              ;	5/08/22
 663+ 929F              ;
 664+ 929F              ;   NextScan.
 665+ 929F              ;
 666+ 929F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 929F              ;
 668+ 929F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 929F              ;
 670+ 929F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 929F              ;
 672+ 929F              ;       DESTRUIDOS: AF y HL !!!
 673+ 929F              ;
 674+ 929F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 929F              ;
 676+ 929F
 677+ 929F 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 92A0 7C               ld a,h
 679+ 92A1 E6 07            and 7
 680+ 92A3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 92A4
 682+ 92A4 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 92A5 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 92A7 6F               ld l,a
 685+ 92A8 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 92A9
 687+ 92A9 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 92AA D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 92AC 67               ld h,a
 690+ 92AD C9               ret
 691+ 92AE
 692+ 92AE              ;----------------------------------------------------------------------------------------------------------------
 693+ 92AE              ;
 694+ 92AE              ;	5/08/22
 695+ 92AE              ;
 696+ 92AE              ;   PreviousScan.
 697+ 92AE              ;
 698+ 92AE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 92AE              ;
 700+ 92AE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 92AE              ;
 702+ 92AE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 92AE              ;
 704+ 92AE              ;       DESTRUIDOS: AF y HL !!!
 705+ 92AE              ;
 706+ 92AE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 92AE              ;
 708+ 92AE
 709+ 92AE 7C           PreviousScan ld a,h
 710+ 92AF 25               dec h               ; Dec H.
 711+ 92B0 E6 07            and 7
 712+ 92B2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 92B3
 714+ 92B3 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 92B4 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 92B6 6F               ld l,a
 717+ 92B7 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 92B8
 719+ 92B8 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 92B9 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 92BB 67               ld h,a
 722+ 92BC C9               ret
 723+ 92BD
 724+ 92BD              ; -----------------------------------------------------------------------------------
 725+ 92BD              ;
 726+ 92BD              ;	31/7/23
 727+ 92BD              ;
 728+ 92BD              ;	Rutina principal de pintado de entidades.
 729+ 92BD              ;	Extrae la foto del frame, (entidades).
 730+ 92BD
 731+ 92BD              Extrae_foto_entidades
 732+ 92BD
 733+ 92BD 21 01 80     	ld hl,Album_de_fotos+1
 734+ 92C0 7E           	ld a,(hl)
 735+ 92C1 A7           	and a
 736+ 92C2 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 92C3
 738+ 92C3              ;	No hay datos, (entidades para pintar en este frame).
 739+ 92C3
 740+ 92C3 3A DC 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 92C6 A7           	and a
 742+ 92C7 C8           	ret z
 743+ 92C8
 744+ 92C8              ; -----------------------------------
 745+ 92C8
 746+ 92C8 ED 73 E1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 92CC 31 00 80     	ld sp,Album_de_fotos
 748+ 92CF
 749+ 92CF FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 92D1 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 92D2 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 92D3
 753+ 92D3 ED 73 E3 89  	ld (Stack_2),sp
 754+ 92D7 ED 7B E1 89  	ld sp,(Stack)
 755+ 92DB
 756+ 92DB              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 92DB
 758+ 92DB 3E CD        	ld a,$cd
 759+ 92DD 32 E5 92     	ld (Imprime),a
 760+ 92E0 EB           	ex de,hl
 761+ 92E1 22 E6 92     	ld (Imprime+1),hl
 762+ 92E4 EB           	ex de,hl
 763+ 92E5
 764+ 92E5              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 92E5
 766+ 92E5 00 00 00     Imprime db 0,0,0
 767+ 92E8
 768+ 92E8 ED 73 E1 89  	ld (Stack),sp
 769+ 92EC
 770+ 92EC 3A DC 89     	ld a,(Numero_de_malotes)
 771+ 92EF 3D           	dec a
 772+ 92F0 28 09        	jr z,1F
 773+ 92F2 32 DC 89      	ld (Numero_de_malotes),a
 774+ 92F5
 775+ 92F5 ED 7B E3 89  	ld sp,(Stack_2)
 776+ 92F9 18 D4        	jr 2B
 777+ 92FB
 778+ 92FB AF           1 xor a
 779+ 92FC 32 E3 89     	ld (Stack_2),a
 780+ 92FF
 781+ 92FF C9           	ret
 782+ 9300
 783+ 9300              ; -----------------------------------------------------------------------------------
 784+ 9300              ;
 785+ 9300              ;	28/2/23
 786+ 9300              ;
 787+ 9300              ;	Pinta los disparos generados.
 788+ 9300
 789+ 9300              Extrae_foto_disparos
 790+ 9300
 791+ 9300 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9303 7E               ld a,(hl)
 793+ 9304 A7               and a
 794+ 9305 C8               ret z
 795+ 9306
 796+ 9306 3A F1 89     	ld a,(Numero_de_disparotes)
 797+ 9309 A7           	and a
 798+ 930A C8           	ret z
 799+ 930B ED 73 E1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 930F 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9312
 802+ 9312 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9314 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9315 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9316
 806+ 9316 ED 73 E3 89  	ld (Stack_2),sp
 807+ 931A ED 7B E1 89  	ld sp,(Stack)
 808+ 931E
 809+ 931E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 931E
 811+ 931E 3E CD        	ld a,$cd
 812+ 9320 32 28 93     	ld (Imprime2),a
 813+ 9323 EB           	ex de,hl
 814+ 9324 22 29 93     	ld (Imprime2+1),hl
 815+ 9327 EB           	ex de,hl
 816+ 9328
 817+ 9328              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9328
 819+ 9328 00 00 00     Imprime2 db 0,0,0
 820+ 932B
 821+ 932B 3A F1 89     	ld a,(Numero_de_disparotes)
 822+ 932E 3D           	dec a
 823+ 932F 28 09        	jr z,1F
 824+ 9331 32 F1 89      	ld (Numero_de_disparotes),a
 825+ 9334
 826+ 9334 ED 7B E3 89  	ld sp,(Stack_2)
 827+ 9338 18 D8        	jr 2B
 828+ 933A
 829+ 933A AF           1 xor a
 830+ 933B 32 E3 89     	ld (Stack_2),a
 831+ 933E C9           	ret
 832+ 933F
 833+ 933F              ; -----------------------------------------------------------------------------------
 834+ 933F              ;
 835+ 933F              ;	4/9/23
 836+ 933F              ;
 837+ 933F              ;	Rutina principal de pintado de Amadeus.
 838+ 933F              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 933F
 840+ 933F 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9342 7E           	ld a,(hl)
 842+ 9343 A7           	and a
 843+ 9344 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9345
 845+ 9345 3A DC 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9348 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9349 C8           	ret z
 848+ 934A
 849+ 934A              ; -----------------------------------
 850+ 934A
 851+ 934A ED 73 E1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 934E 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 9351
 854+ 9351 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9353 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9354 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9355
 858+ 9355 ED 73 E3 89  	ld (Stack_2),sp
 859+ 9359 ED 7B E1 89  	ld sp,(Stack)
 860+ 935D
 861+ 935D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 935D
 863+ 935D 3E CD        	ld a,$cd
 864+ 935F 32 67 93     	ld (Imprime_Amadeus),a
 865+ 9362 EB           	ex de,hl
 866+ 9363 22 68 93     	ld (Imprime_Amadeus+1),hl
 867+ 9366 EB           	ex de,hl
 868+ 9367
 869+ 9367              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9367
 871+ 9367 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 936A
 873+ 936A ED 73 E1 89  	ld (Stack),sp
 874+ 936E
 875+ 936E 3A DC 89     	ld a,(Numero_de_malotes)
 876+ 9371 3D           	dec a
 877+ 9372 28 09        	jr z,1F
 878+ 9374 32 DC 89      	ld (Numero_de_malotes),a
 879+ 9377
 880+ 9377 ED 7B E3 89  	ld sp,(Stack_2)
 881+ 937B 18 D4        	jr 2B
 882+ 937D
 883+ 937D AF           1 xor a
 884+ 937E 32 E3 89     	ld (Stack_2),a
 885+ 9381
 886+ 9381 C9           	ret
# file closed: Draw_XOR.asm
1859  9382              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9382              ;   índices de Rutinas de impresión.
   2+ 9382
   3+ 9382 92 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9384 AB 93            defw Pinta_Amadeus_3x2
   5+ 9386
   6+ 9386 03 94        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9388 A3 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 938A 57 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 938C
  10+ 938C 2D 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 938E 31 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9390 E5 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9392
  14+ 9392
  15+ 9392              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9392              ;
  17+ 9392              ;   12/12/22
  18+ 9392              ;
  19+ 9392              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9392              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9392              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9392              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9392              ;
  24+ 9392              ;   Modifica: DE y HL.
  25+ 9392
  26+ 9392              Pinta_Amadeus_2x2 ; 1081 t/states
  27+ 9392
  28+ 9392 FD E5            push iy
  29+ 9394 D1               pop de
  30+ 9395
  31+ 9395 ED 73 E1 89      ld (Stack),sp
  32+ 9399 F9           	ld sp,hl
  33+ 939A 06 10            ld b,16
  34+ 939C
  35+ 939C E1           1 pop hl
  36+ 939D
  37+ 939D 1A               ld a,(de)
  38+ 939E 77               ld (hl),a
  39+ 939F 1C           	inc e
  40+ 93A0 2C               inc l
  41+ 93A1 1A               ld a,(de)
  42+ 93A2 77               ld (hl),a
  43+ 93A3 1C               inc e
  44+ 93A4
  45+ 93A4 10 F6            djnz 1B
  46+ 93A6
  47+ 93A6 ED 7B E1 89      ld sp,(Stack)
  48+ 93AA
  49+ 93AA C9           	ret
  50+ 93AB
  51+ 93AB              Pinta_Amadeus_3x2
  52+ 93AB
  53+ 93AB 18 FE            jr $
  54+ 93AD
  55+ 93AD
  56+ 93AD ED 73 E1 89      ld (Stack),sp
  57+ 93B1 FD F9        	ld sp,iy
  58+ 93B3 06 08            ld b,8
  59+ 93B5 D1           1 pop de
  60+ 93B6 7B               ld a,e
  61+ 93B7 AE               xor (hl)
  62+ 93B8 77           	ld (hl),a
  63+ 93B9 23           	inc hl
  64+ 93BA 7A               ld a,d
  65+ 93BB AE               xor (hl)
  66+ 93BC 77           	ld (hl),a
  67+ 93BD 23           	inc hl
  68+ 93BE D1           	pop de
  69+ 93BF 7B               ld a,e
  70+ 93C0 AE               xor (hl)
  71+ 93C1 77           	ld (hl),a
  72+ 93C2 2B           	dec hl
  73+ 93C3 2B           	dec hl
  74+ 93C4 24           	inc h
  75+ 93C5 7C               ld a,h
  76+ 93C6 E6 07            and 7
  77+ 93C8 20 0A            jr nz,2F
  78+ 93CA 7D               ld a,l
  79+ 93CB C6 20            add a,$20
  80+ 93CD 6F               ld l,a
  81+ 93CE 38 04            jr c,2F
  82+ 93D0 7C               ld a,h
  83+ 93D1 D6 08            sub 8
  84+ 93D3 67               ld h,a
  85+ 93D4 7C           2 ld a,h
  86+ 93D5 FE 58            cp $58
  87+ 93D7 28 25            jr z,4F
  88+ 93D9 7A               ld a,d
  89+ 93DA AE               xor (hl)
  90+ 93DB 77               ld (hl),a
  91+ 93DC D1           	pop de
  92+ 93DD 23           	inc hl
  93+ 93DE 7B               ld a,e
  94+ 93DF AE               xor (hl)
  95+ 93E0 77           	ld (hl),a
  96+ 93E1 23           	inc hl
  97+ 93E2 7A               ld a,d
  98+ 93E3 AE               xor (hl)
  99+ 93E4 77           	ld (hl),a
 100+ 93E5 2B           	dec hl
 101+ 93E6 2B           	dec hl
 102+ 93E7 24           	inc h
 103+ 93E8 7C               ld a,h
 104+ 93E9 E6 07            and 7
 105+ 93EB 20 0A            jr nz,3F
 106+ 93ED 7D               ld a,l
 107+ 93EE C6 20            add a,$20
 108+ 93F0 6F               ld l,a
 109+ 93F1 38 04            jr c,3F
 110+ 93F3 7C               ld a,h
 111+ 93F4 D6 08            sub 8
 112+ 93F6 67               ld h,a
 113+ 93F7 7C           3 ld a,h
 114+ 93F8 FE 58            cp $58
 115+ 93FA 28 02            jr z,4F
 116+ 93FC 10 B7            djnz 1B
 117+ 93FE ED 7B E1 89  4 ld sp,(Stack)
 118+ 9402 C9           	ret
 119+ 9403
 120+ 9403              ; ---------------------------------------------------
 121+ 9403
 122+ 9403 ED 73 E1 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9407 FD F9        	ld sp,iy
 124+ 9409
 125+ 9409              ; >>>
 126+ 9409
 127+ 9409 06 10            ld b,16
 128+ 940B D1           1 pop de
 129+ 940C 7A           	ld a,d
 130+ 940D AE           	xor (hl)
 131+ 940E 77           	ld (hl),a
 132+ 940F 24           	inc h
 133+ 9410 7C               ld a,h
 134+ 9411 E6 07            and 7
 135+ 9413 20 0C            jr nz,2F
 136+ 9415 7D               ld a,l
 137+ 9416 C6 20            add a,$20
 138+ 9418 6F               ld l,a
 139+ 9419 38 06            jr c,2F
 140+ 941B 7C               ld a,h
 141+ 941C D6 08            sub 8
 142+ 941E 67               ld h,a
 143+ 941F 18 00            jr 2F
 144+ 9421 7C           2 ld a,h
 145+ 9422 FE 58            cp $58
 146+ 9424 28 02            jr z,3F
 147+ 9426 10 E3            djnz 1B
 148+ 9428 ED 7B E1 89  3 ld sp,(Stack)
 149+ 942C C9           	ret
 150+ 942D
 151+ 942D ED 73 E1 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9431 FD F9        	ld sp,iy
 153+ 9433
 154+ 9433              ; >>>
 155+ 9433
 156+ 9433 06 10            ld b,16
 157+ 9435 D1           1 pop de
 158+ 9436 7B           	ld a,e
 159+ 9437 AE           	xor (hl)
 160+ 9438 77           	ld (hl),a
 161+ 9439 24           	inc h
 162+ 943A 7C               ld a,h
 163+ 943B E6 07            and 7
 164+ 943D 20 0C            jr nz,2F
 165+ 943F 7D               ld a,l
 166+ 9440 C6 20            add a,$20
 167+ 9442 6F               ld l,a
 168+ 9443 38 06            jr c,2F
 169+ 9445 7C               ld a,h
 170+ 9446 D6 08            sub 8
 171+ 9448 67               ld h,a
 172+ 9449 18 00            jr 2F
 173+ 944B 7C           2 ld a,h
 174+ 944C FE 58            cp $58
 175+ 944E 28 02            jr z,3F
 176+ 9450 10 E3            djnz 1B
 177+ 9452 ED 7B E1 89  3 ld sp,(Stack)
 178+ 9456 C9           	ret
 179+ 9457
 180+ 9457              ; ---------------------------------------------------
 181+ 9457
 182+ 9457 ED 73 E1 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 945B FD F9        	ld sp,iy
 184+ 945D 06 08            ld b,8
 185+ 945F D1           1 pop de
 186+ 9460 7A           	ld a,d
 187+ 9461 AE           	xor (hl)
 188+ 9462 77           	ld (hl),a
 189+ 9463 23           	inc hl
 190+ 9464 D1           	pop de
 191+ 9465 7B           	ld a,e
 192+ 9466 AE           	xor (hl)
 193+ 9467 77           	ld (hl),a
 194+ 9468 2B           	dec hl
 195+ 9469 24            	inc h
 196+ 946A 7C               ld a,h
 197+ 946B E6 07            and 7
 198+ 946D 20 0A            jr nz,2F
 199+ 946F 7D               ld a,l
 200+ 9470 C6 20            add a,$20
 201+ 9472 6F               ld l,a
 202+ 9473 38 04            jr c,2F
 203+ 9475 7C               ld a,h
 204+ 9476 D6 08            sub 8
 205+ 9478 67               ld h,a
 206+ 9479 7C           2 ld a,h
 207+ 947A FE 58            cp $58
 208+ 947C 28 20            jr z,4F
 209+ 947E D1               pop de
 210+ 947F 7B           	ld a,e
 211+ 9480 AE           	xor (hl)
 212+ 9481 77           	ld (hl),a
 213+ 9482 23           	inc hl
 214+ 9483 7A           	ld a,d
 215+ 9484 AE           	xor (hl)
 216+ 9485 77           	ld (hl),a
 217+ 9486 2B           	dec hl
 218+ 9487 24           	inc h
 219+ 9488 7C               ld a,h
 220+ 9489 E6 07            and 7
 221+ 948B 20 0A            jr nz,3F
 222+ 948D 7D               ld a,l
 223+ 948E C6 20            add a,$20
 224+ 9490 6F               ld l,a
 225+ 9491 38 04            jr c,3F
 226+ 9493 7C               ld a,h
 227+ 9494 D6 08            sub 8
 228+ 9496 67               ld h,a
 229+ 9497 7C           3 ld a,h
 230+ 9498 FE 58            cp $58
 231+ 949A 28 02            jr z,4F
 232+ 949C 10 C1            djnz 1B
 233+ 949E ED 7B E1 89  4 ld sp,(Stack)
 234+ 94A2 C9           	ret
 235+ 94A3
 236+ 94A3 ED 73 E1 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 94A7 FD F9        	ld sp,iy
 238+ 94A9 06 08            ld b,8
 239+ 94AB D1           1 pop de
 240+ 94AC D1           	pop de
 241+ 94AD 7B           	ld a,e
 242+ 94AE AE           	xor (hl)
 243+ 94AF 77           	ld (hl),a
 244+ 94B0 24            	inc h
 245+ 94B1 7C               ld a,h
 246+ 94B2 E6 07            and 7
 247+ 94B4 20 0A            jr nz,2F
 248+ 94B6 7D               ld a,l
 249+ 94B7 C6 20            add a,$20
 250+ 94B9 6F               ld l,a
 251+ 94BA 38 04            jr c,2F
 252+ 94BC 7C               ld a,h
 253+ 94BD D6 08            sub 8
 254+ 94BF 67               ld h,a
 255+ 94C0 7C           2 ld a,h
 256+ 94C1 FE 58            cp $58
 257+ 94C3 28 1B            jr z,4F
 258+ 94C5 D1               pop de
 259+ 94C6 7A           	ld a,d
 260+ 94C7 AE           	xor (hl)
 261+ 94C8 77           	ld (hl),a
 262+ 94C9 24           	inc h
 263+ 94CA 7C               ld a,h
 264+ 94CB E6 07            and 7
 265+ 94CD 20 0A            jr nz,3F
 266+ 94CF 7D               ld a,l
 267+ 94D0 C6 20            add a,$20
 268+ 94D2 6F               ld l,a
 269+ 94D3 38 04            jr c,3F
 270+ 94D5 7C               ld a,h
 271+ 94D6 D6 08            sub 8
 272+ 94D8 67               ld h,a
 273+ 94D9 7C           3 ld a,h
 274+ 94DA FE 58            cp $58
 275+ 94DC 28 02            jr z,4F
 276+ 94DE 10 CB            djnz 1B
 277+ 94E0 ED 7B E1 89  4 ld sp,(Stack)
 278+ 94E4 C9           	ret
 279+ 94E5
 280+ 94E5 ED 73 E1 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 94E9 FD F9        	ld sp,iy
 282+ 94EB 06 08            ld b,8
 283+ 94ED D1           1 pop de
 284+ 94EE 7B           	ld a,e
 285+ 94EF AE           	xor (hl)
 286+ 94F0 77           	ld (hl),a
 287+ 94F1 23           	inc hl
 288+ 94F2 7A           	ld a,d
 289+ 94F3 AE           	xor (hl)
 290+ 94F4 77           	ld (hl),a
 291+ 94F5 2B           	dec hl
 292+ 94F6 24             	inc h
 293+ 94F7 7C               ld a,h
 294+ 94F8 E6 07            and 7
 295+ 94FA 20 0A            jr nz,2F
 296+ 94FC 7D               ld a,l
 297+ 94FD C6 20            add a,$20
 298+ 94FF 6F               ld l,a
 299+ 9500 38 04            jr c,2F
 300+ 9502 7C               ld a,h
 301+ 9503 D6 08            sub 8
 302+ 9505 67               ld h,a
 303+ 9506 7C           2 ld a,h
 304+ 9507 FE 58            cp $58
 305+ 9509 28 21            jr z,4F
 306+ 950B D1               pop de
 307+ 950C 7A           	ld a,d
 308+ 950D AE           	xor (hl)
 309+ 950E 77           	ld (hl),a
 310+ 950F 23           	inc hl
 311+ 9510 D1               pop de
 312+ 9511 7B           	ld a,e
 313+ 9512 AE           	xor (hl)
 314+ 9513 77           	ld (hl),a
 315+ 9514 2B           	dec hl
 316+ 9515 24           	inc h
 317+ 9516 7C               ld a,h
 318+ 9517 E6 07            and 7
 319+ 9519 20 0A            jr nz,3F
 320+ 951B 7D               ld a,l
 321+ 951C C6 20            add a,$20
 322+ 951E 6F               ld l,a
 323+ 951F 38 04            jr c,3F
 324+ 9521 7C               ld a,h
 325+ 9522 D6 08            sub 8
 326+ 9524 67               ld h,a
 327+ 9525 7C           3 ld a,h
 328+ 9526 FE 58            cp $58
 329+ 9528 28 02            jr z,4F
 330+ 952A 10 C1            djnz 1B
 331+ 952C ED 7B E1 89  4 ld sp,(Stack)
 332+ 9530 C9           	ret
 333+ 9531
 334+ 9531 ED 73 E1 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9535 FD F9        	ld sp,iy
 336+ 9537 06 08            ld b,8
 337+ 9539 D1           1 pop de
 338+ 953A 7B           	ld a,e
 339+ 953B AE           	xor (hl)
 340+ 953C 77           	ld (hl),a
 341+ 953D 24            	inc h
 342+ 953E 7C               ld a,h
 343+ 953F E6 07            and 7
 344+ 9541 20 0A            jr nz,2F
 345+ 9543 7D               ld a,l
 346+ 9544 C6 20            add a,$20
 347+ 9546 6F               ld l,a
 348+ 9547 38 04            jr c,2F
 349+ 9549 7C               ld a,h
 350+ 954A D6 08            sub 8
 351+ 954C 67               ld h,a
 352+ 954D 7C           2 ld a,h
 353+ 954E FE 58            cp $58
 354+ 9550 28 1C            jr z,4F
 355+ 9552 D1               pop de
 356+ 9553 7A           	ld a,d
 357+ 9554 AE           	xor (hl)
 358+ 9555 77           	ld (hl),a
 359+ 9556 24           	inc h
 360+ 9557 7C               ld a,h
 361+ 9558 E6 07            and 7
 362+ 955A 20 0A            jr nz,3F
 363+ 955C 7D               ld a,l
 364+ 955D C6 20            add a,$20
 365+ 955F 6F               ld l,a
 366+ 9560 38 04            jr c,3F
 367+ 9562 7C               ld a,h
 368+ 9563 D6 08            sub 8
 369+ 9565 67               ld h,a
 370+ 9566 7C           3 ld a,h
 371+ 9567 FE 58            cp $58
 372+ 9569 28 03            jr z,4F
 373+ 956B D1               pop de
 374+ 956C 10 CB            djnz 1B
 375+ 956E ED 7B E1 89  4 ld sp,(Stack)
 376+ 9572 C9           	ret
 377+ 9573
 378+ 9573              ; ---------------------------------------------------
 379+ 9573              ;
 380+ 9573              ;   27/02/23
 381+ 9573              ;
 382+ 9573              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9573              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9573              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9573
 386+ 9573 ED 73 E1 89  Pinta_Disparo ld (Stack),sp
 387+ 9577 FD F9            ld sp,iy
 388+ 9579 06 03            ld b,3
 389+ 957B D1           1 pop de
 390+ 957C 7B               ld a,e
 391+ 957D AE               xor (hl)
 392+ 957E 77               ld (hl),a
 393+ 957F 23               inc hl
 394+ 9580 7A               ld a,d
 395+ 9581 AE               xor (hl)
 396+ 9582 77               ld (hl),a
 397+ 9583 2B               dec hl
 398+ 9584
 399+ 9584 24               inc h
 400+ 9585 7C               ld a,h
 401+ 9586 E6 07            and 7
 402+ 9588 20 0A            jr nz,2F
 403+ 958A 7D               ld a,l
 404+ 958B C6 20            add a,$20
 405+ 958D 6F               ld l,a
 406+ 958E 38 04            jr c,2F
 407+ 9590 7C               ld a,h
 408+ 9591 D6 08            sub 8
 409+ 9593 67               ld h,a
 410+ 9594 7C           2 ld a,h
 411+ 9595 FE 58            cp $58
 412+ 9597 28 02            jr z,3F
 413+ 9599
 414+ 9599 10 E0            djnz 1B
 415+ 959B ED 7B E1 89  3 ld sp,(Stack)
 416+ 959F C9               ret
 417+ 95A0
# file closed: Rutinas_de_impresion_sprites.asm
1860  95A0              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 95A0
   2+ 95A0              ; ******************************************************************************************************************************************************************************************
   3+ 95A0              ;
   4+ 95A0              ;   20/05/23
   5+ 95A0              ;
   6+ 95A0              ;	Recompone_posicion_inicio
   7+ 95A0              ;
   8+ 95A0              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 95A0              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 95A0              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 95A0              ;	_ a una u otra rutina.
  12+ 95A0
  13+ 95A0              Recompone_posicion_inicio
  14+ 95A0
  15+ 95A0 2A 9D 89     	ld hl,(Posicion_inicio)
  16+ 95A3 7D           	ld a,l
  17+ 95A4 E6 1F        	and $1f
  18+ 95A6 28 16        	jr z,1F
  19+ 95A8
  20+ 95A8 FE 1F        	cp $1f
  21+ 95AA 28 0D        	jr z,3F
  22+ 95AC
  23+ 95AC 21 B2 89     	ld hl,Ctrl_2
  24+ 95AF CB C6        	set 0,(hl)
  25+ 95B1 2A 8F 89     	ld hl,(Puntero_objeto)
  26+ 95B4 22 D1 89     	ld (Repone_puntero_objeto),hl
  27+ 95B7 18 08        	jr 2F
  28+ 95B9
  29+ 95B9 CD 67 97     3 call Mov_left
  30+ 95BC 18 03        	jr 2F
  31+ 95BE
  32+ 95BE CD 44 96     1 call Mov_right
  33+ 95C1 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 95C4 22 8F 89     	ld (Puntero_objeto),hl
  35+ 95C7 C9           	ret
  36+ 95C8
  37+ 95C8              ; ******************************************************************************************************************************************************************************************
  38+ 95C8              ;
  39+ 95C8              ;   27/05/23
  40+ 95C8              ;
  41+ 95C8              ;	Mov_down
  42+ 95C8              ;
  43+ 95C8              ; 	Mueve el Sprite X px hacia abajo.
  44+ 95C8              ;
  45+ 95C8              ;
  46+ 95C8              Mov_down
  47+ 95C8
  48+ 95C8 CD 32 96     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 95CB              ;																	; _ repone (Puntero_objeto).
  50+ 95CB 21 AD 89     	ld hl,Ctrl_0
  51+ 95CE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 95D0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 95D0              ; 																	; _ en el caso de que no lo haya.
  54+ 95D0 3A B7 89     	ld a,(Vel_down)
  55+ 95D3 47           	ld b,a
  56+ 95D4 2A 8D 89         ld hl,(Posicion_actual)
  57+ 95D7 CD 77 9F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 95DA E6 02        	and 2
  59+ 95DC 28 17        	jr z,1F
  60+ 95DE
  61+ 95DE              ; Nos encontramos en el último tercio de pantalla.
  62+ 95DE              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 95DE
  64+ 95DE 7C           	ld a,h
  65+ 95DF FE 57        	cp $57
  66+ 95E1 20 12        	jr nz,1F
  67+ 95E3
  68+ 95E3 7D           	ld a,l
  69+ 95E4 C6 20        	add $20
  70+ 95E6 30 0D        	jr nc,1F
  71+ 95E8
  72+ 95E8              ; ------------------------------
  73+ 95E8              ;
  74+ 95E8              ;	12/01/24
  75+ 95E8
  76+ 95E8              ;	call Reaparece_arriba
  77+ 95E8 CD F4 98     	call Reinicio
  78+ 95EB
  79+ 95EB              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 95EB
  81+ 95EB 3A EF 89     	ld a,(Ctrl_3)
  82+ 95EE CB CF        	set 1,a
  83+ 95F0 32 EF 89     	ld (Ctrl_3),a
  84+ 95F3
  85+ 95F3 18 08        	jr 3F
  86+ 95F5              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 95F5              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 95F5              ; ------------------------------
  89+ 95F5
  90+ 95F5 CD 9F 92     1 call NextScan
  91+ 95F8 22 8D 89     	ld (Posicion_actual),hl
  92+ 95FB 10 DA            djnz 2B
  93+ 95FD CD 95 9F     3 call Genera_coordenadas
  94+ 9600 C9           	ret
  95+ 9601
  96+ 9601              ; ******************************************************************************************************************************************************************************************
  97+ 9601              ;
  98+ 9601              ;   27/05/23
  99+ 9601              ;
 100+ 9601              ;	Mov_up
 101+ 9601              ;
 102+ 9601              ; 	Mueve el Sprite hacia arriba.
 103+ 9601              ;
 104+ 9601              ;
 105+ 9601              Mov_up
 106+ 9601
 107+ 9601 CD 32 96     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9604              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9604 21 AD 89     	ld hl,Ctrl_0
 110+ 9607 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9609              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9609              ; 																		; _ en el caso de que no lo haya.
 113+ 9609 3A B6 89     	ld a,(Vel_up)
 114+ 960C 47           	ld b,a
 115+ 960D 2A 8D 89     	ld hl,(Posicion_actual)
 116+ 9610 CD 77 9F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9613 A7           	and a
 118+ 9614 20 10        	jr nz,1F
 119+ 9616
 120+ 9616              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9616              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9616
 123+ 9616 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9617 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9619 20 0B            jr nz,1F
 126+ 961B 7D               ld a,l
 127+ 961C D6 20            sub $20
 128+ 961E 30 06            jr nc,1F
 129+ 9620 25               dec h
 130+ 9621
 131+ 9621              ; -----------------------------
 132+ 9621 CD D5 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9624              ;	call Reinicio
 134+ 9624              ; -----------------------------
 135+ 9624
 136+ 9624 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9626 CD AE 92     1 call PreviousScan
 138+ 9629 22 8D 89     	ld (Posicion_actual),hl
 139+ 962C 10 E2            djnz 3B
 140+ 962E CD 95 9F     2 call Genera_coordenadas
 141+ 9631 C9           	ret
 142+ 9632
 143+ 9632              ; -----------------------------
 144+ 9632              ;
 145+ 9632              ;	27/5/23
 146+ 9632              ;
 147+ 9632              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9632              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9632              ;
 150+ 9632              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9632              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9632              ;
 153+ 9632              ;	Modifica: A y (Puntero_objeto).
 154+ 9632
 155+ 9632 3A B2 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9635 CB 47        	bit 0,a
 157+ 9637 C8           	ret z
 158+ 9638 CB 87        	res 0,a
 159+ 963A 32 B2 89     	ld (Ctrl_2),a
 160+ 963D 2A D1 89     	ld hl,(Repone_puntero_objeto)
 161+ 9640 22 8F 89     	ld (Puntero_objeto),hl
 162+ 9643 C9           	ret
 163+ 9644
 164+ 9644              ; ******************************************************************************************************************************************************************************************
 165+ 9644              ;
 166+ 9644              ;	19/10/22
 167+ 9644              ;
 168+ 9644              ;	Mov_right.
 169+ 9644              ;
 170+ 9644              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9644              ;
 172+ 9644
 173+ 9644 3A AD 89     Mov_right ld a,(Ctrl_0)
 174+ 9647 CB 77        	bit 6,a
 175+ 9649 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 964B
 177+ 964B CD 83 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 964E C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 964F
 180+ 964F 21 AD 89     	ld hl,Ctrl_0
 181+ 9652 CB E6        	set 4,(hl)
 182+ 9654 18 52        	jr 8F
 183+ 9656
 184+ 9656 21 AD 89     10 ld hl,Ctrl_0
 185+ 9659 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 965B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 965B              ; 																	; _ en el caso de que no lo haya.
 188+ 965B 3A 91 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 965E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9660 20 46        	jr nz,8F
 191+ 9662
 192+ 9662 3A 93 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9665 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9666 28 40        	jr z,8F
 195+ 9668
 196+ 9668              ; ---------- ---------- ----------
 197+ 9668              ;
 198+ 9668              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9668
 200+ 9668 3A B5 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 966B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 966D 28 11        	jr z,1F
 203+ 966F 38 06        	jr c,6F
 204+ 9671 FE 04        	cp 4
 205+ 9673 28 14        	jr z,7F
 206+ 9675 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9677
 208+ 9677              ; ---------- ---------- ----------
 209+ 9677              ;
 210+ 9677              ; Perfiles de velocidad
 211+ 9677              ;
 212+ 9677
 213+ 9677 3A 93 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 967A FE FE        	cp $fe
 215+ 967C 20 2A        	jr nz,8F
 216+ 967E 18 10        	jr 3F
 217+ 9680 3A 93 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9683 FE FD        	cp $fd
 219+ 9685 20 21        	jr nz,8F
 220+ 9687 18 07        	jr 3F
 221+ 9689 3A 93 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 968C FE FB        	cp $fb
 223+ 968E 20 18        	jr nz,8F
 224+ 9690
 225+ 9690              ; ---------- ---------- ----------
 226+ 9690
 227+ 9690              3
 228+ 9690 CD C3 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9693              ;	call Reinicio
 230+ 9693
 231+ 9693              ; ---------- ---------- ----------
 232+ 9693              ;
 233+ 9693              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9693
 235+ 9693 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9695 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9696 CD AF 96     	call DESPLZ_DER
 238+ 9699 C1           	pop bc
 239+ 969A 10 F9        	djnz 5B
 240+ 969C 2A 8D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 969F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 96A0 22 8D 89     	ld (Posicion_actual),hl
 243+ 96A3 CD 95 9F     	call Genera_coordenadas
 244+ 96A6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 96A8
 246+ 96A8              ; ---------- ---------- ----------
 247+ 96A8
 248+ 96A8 2A 8D 89     8 ld hl,(Posicion_actual)
 249+ 96AB CD AF 96     	call DESPLZ_DER
 250+ 96AE C9           2 ret
 251+ 96AF
 252+ 96AF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 96AF              ;
 254+ 96AF              ;	22/9/22
 255+ 96AF              ;
 256+ 96AF
 257+ 96AF CD BE 96     DESPLZ_DER call Desplaza_derecha
 258+ 96B2 CD 0A 97         call modifica_parametros_1er_DESPLZ_2
 259+ 96B5 CD 33 97         call Ciclo_completo
 260+ 96B8 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 96BB CB FE        	set 7,(hl)
 262+ 96BD C9           	ret
 263+ 96BE
 264+ 96BE              ; ******************************************************************************************************************************************************************************************
 265+ 96BE              ;	15/02/23
 266+ 96BE              ;
 267+ 96BE
 268+ 96BE 3A B5 89     Desplaza_derecha ld a,(Vel_right)
 269+ 96C1 47           	ld b,a
 270+ 96C2 2A 99 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 96C5 23           1 inc hl
 272+ 96C6 23           	inc hl
 273+ 96C7 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 96C9 22 99 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 96CC CD 6A 8C     	call Extrae_address
 276+ 96CF 22 8F 89     	ld (Puntero_objeto),hl
 277+ 96D2
 278+ 96D2              ; Modifica (Puntero_DESPLZ_izq).
 279+ 96D2
 280+ 96D2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 96D2              ; Cuántos movimientos hemos hecho ??
 282+ 96D2              ; DE contiene (Puntero_DESPLZ_der).
 283+ 96D2
 284+ 96D2 2A 95 89     7 ld hl,(Indice_Sprite_der)
 285+ 96D5 EB           	ex de,hl
 286+ 96D6 A7           	and a
 287+ 96D7 ED 52        	sbc hl,de
 288+ 96D9 CB 3D        	srl l
 289+ 96DB 3E 08        6 ld a,8
 290+ 96DD 95           	sub l
 291+ 96DE 30 1E        	jr nc,3F
 292+ 96E0
 293+ 96E0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 96E0              ; B="0".
 295+ 96E0
 296+ 96E0 04           4 inc b
 297+ 96E1 3C           	inc a
 298+ 96E2 20 FC        	jr nz,4B
 299+ 96E4 78           	ld a,b
 300+ 96E5 08           	ex af,af
 301+ 96E6 2A 95 89     	ld hl,(Indice_Sprite_der)
 302+ 96E9 23           5 inc hl
 303+ 96EA 23           	inc hl
 304+ 96EB 10 FC        	djnz 5B
 305+ 96ED 22 99 89     	ld (Puntero_DESPLZ_der),hl
 306+ 96F0 CD 6A 8C     	call Extrae_address
 307+ 96F3 22 8F 89     	ld (Puntero_objeto),hl
 308+ 96F6
 309+ 96F6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 96F6              ; _(Posicion_actual).
 311+ 96F6
 312+ 96F6 21 8D 89     	ld hl,Posicion_actual
 313+ 96F9 34           	inc (hl)
 314+ 96FA 08               ex af,af
 315+ 96FB 6F           	ld l,a
 316+ 96FC 18 DD        	jr 6B
 317+ 96FE
 318+ 96FE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 96FE
 320+ 96FE 47           3 ld b,a
 321+ 96FF 2A 97 89     	ld hl,(Indice_Sprite_izq)
 322+ 9702 23           2 inc hl
 323+ 9703 23           	inc hl
 324+ 9704 10 FC        	djnz 2B
 325+ 9706 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9709 C9           8 ret
 327+ 970A
 328+ 970A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 970A              ;
 330+ 970A              ;	24/7/22
 331+ 970A              ;
 332+ 970A              ;	modifica_parametros_1er_DESPLZ_2
 333+ 970A              ;
 334+ 970A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 970A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 970A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 970A
 338+ 970A 3A 93 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 970D A7           	and a
 340+ 970E 20 1F        	jr nz,1F
 341+ 9710 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9712 32 93 89         ld (CTRL_DESPLZ),a
 343+ 9715
 344+ 9715 21 8C 89     	ld hl,Columns
 345+ 9718 34           	inc (hl)
 346+ 9719 3A 9F 89     	ld a,(Cuad_objeto)
 347+ 971C E6 01        	and 1
 348+ 971E 28 0F        	jr z,1F
 349+ 9720 2A 8D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9723 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9724 22 8D 89     	ld (Posicion_actual),hl
 352+ 9727 CD 95 9F     	call Genera_coordenadas
 353+ 972A CD 8F 98     	call Inc_CTRL_DESPLZ
 354+ 972D 18 03        	jr 2F
 355+ 972F CD 8F 98     1 call Inc_CTRL_DESPLZ
 356+ 9732 C9           2 ret
 357+ 9733
 358+ 9733              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9733              ;
 360+ 9733              ;	24/7/22
 361+ 9733              ;
 362+ 9733              ;	Ciclo_completo.
 363+ 9733              ;
 364+ 9733              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9733              ;
 366+ 9733              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9733              ; 	Decrementamos (Columns).
 368+ 9733              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9733              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9733
 371+ 9733
 372+ 9733 3A 93 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9736 FE FF        	cp $ff
 374+ 9738 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 973A E6 F0        	and $f0
 376+ 973C 20 28        	jr nz,3F
 377+ 973E
 378+ 973E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 973E
 380+ 973E 3A 93 89     	ld a,(CTRL_DESPLZ)
 381+ 9741 47           	ld b,a
 382+ 9742 3E F8        	ld a,$f8
 383+ 9744 80           	add b
 384+ 9745 32 93 89     	ld (CTRL_DESPLZ),a
 385+ 9748 18 1C        	jr 3F
 386+ 974A 21 8C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 974D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 974E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 974F 32 93 89     	ld (CTRL_DESPLZ),a
 390+ 9752 3A 9F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9755 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9757 20 0A        	jr nz,2F
 393+ 9759 2A 8D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 975C 23           	inc hl
 395+ 975D 22 8D 89     	ld (Posicion_actual),hl
 396+ 9760 CD 95 9F     	call Genera_coordenadas
 397+ 9763
 398+ 9763              ; Inicia el puntero de Sprite.
 399+ 9763
 400+ 9763 CD 7F 8C     2 call Inicia_puntero_objeto_der
 401+ 9766 C9           3 ret
 402+ 9767
 403+ 9767              ; ******************************************************************************************************************************************************************************************
 404+ 9767              ;
 405+ 9767              ;	15/02/23
 406+ 9767              ;
 407+ 9767              ;	Mov_left.
 408+ 9767              ;
 409+ 9767              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9767              ;
 411+ 9767              Mov_left
 412+ 9767
 413+ 9767 21 AD 89     	ld hl,Ctrl_0
 414+ 976A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 976C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 976C              ; 																	; _ en el caso de que no lo haya.
 417+ 976C 3A AD 89     	ld a,(Ctrl_0)
 418+ 976F CB 77        	bit 6,a
 419+ 9771 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9773
 421+ 9773 CD 89 98     	call Stop_Amadeus_left
 422+ 9776 C8           	ret z
 423+ 9777 20 4A        	jr nz,8F
 424+ 9779
 425+ 9779 3A 91 89     11 ld a,(Coordenada_X)
 426+ 977C A7           	and a
 427+ 977D 20 44        	jr nz,8F
 428+ 977F
 429+ 977F 3A 93 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9782 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9783 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9785
 433+ 9785              ; ---------- ---------- ----------
 434+ 9785
 435+ 9785 3A B4 89     	ld a,(Vel_left)
 436+ 9788 FE 02        	cp 2
 437+ 978A 28 0F        	jr z,1F
 438+ 978C 38 04        	jr c,6F
 439+ 978E FE 04        	cp 4
 440+ 9790 28 12        	jr z,7F
 441+ 9792
 442+ 9792              ; ---------- ---------- ----------
 443+ 9792
 444+ 9792 3A 93 89     6 ld a,(CTRL_DESPLZ)
 445+ 9795 FE F8        	cp $f8
 446+ 9797 20 2A        	jr nz,8F
 447+ 9799 18 10        	jr 4F
 448+ 979B 3A 93 89     1 ld a,(CTRL_DESPLZ)
 449+ 979E FE F9        	cp $f9
 450+ 97A0 20 21        	jr nz,8F
 451+ 97A2 18 07        	jr 4F
 452+ 97A4 3A 93 89     7 ld a,(CTRL_DESPLZ)
 453+ 97A7 FE FB        	cp $fb
 454+ 97A9 20 18        	jr nz,8F
 455+ 97AB
 456+ 97AB              ; ---------- ---------- ----------
 457+ 97AB
 458+ 97AB              4
 459+ 97AB CD B1 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 97AE              ;	call Reinicio
 461+ 97AE
 462+ 97AE              ; ---------- ---------- ----------
 463+ 97AE
 464+ 97AE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 97B0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 97B1
 467+ 97B1              ;	ld hl,(Indice_Sprite_izq)
 468+ 97B1              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 97B1
 470+ 97B1 CD CA 97     	call DESPLZ_IZQ
 471+ 97B4 C1           	pop bc
 472+ 97B5 10 F9        	djnz 5B
 473+ 97B7 2A 8D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 97BA 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 97BB 22 8D 89     	ld (Posicion_actual),hl
 476+ 97BE CD 95 9F     	call Genera_coordenadas
 477+ 97C1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 97C3
 479+ 97C3              ; ---------- ---------- ----------
 480+ 97C3
 481+ 97C3              ; Movemos, no hay recolocación.
 482+ 97C3
 483+ 97C3 2A 8D 89     8 ld hl,(Posicion_actual)
 484+ 97C6 CD CA 97     	call DESPLZ_IZQ
 485+ 97C9 C9           2 ret
 486+ 97CA
 487+ 97CA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 97CA              ;
 489+ 97CA              ;	22/9/22
 490+ 97CA
 491+ 97CA              DESPLZ_IZQ
 492+ 97CA
 493+ 97CA CD D9 97     	call Desplaza_izquierda
 494+ 97CD CD 25 98         call modifica_parametros_1er_DESPLZ
 495+ 97D0 CD 4D 98     	call Ciclo_completo_2
 496+ 97D3 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 97D6 CB BE        	res 7,(hl)
 498+ 97D8 C9           	ret
 499+ 97D9
 500+ 97D9              Desplaza_izquierda
 501+ 97D9
 502+ 97D9 3A B4 89     	ld a,(Vel_left)
 503+ 97DC 47           	ld b,a
 504+ 97DD 2A 9B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 97E0 23           1 inc hl
 506+ 97E1 23           	inc hl
 507+ 97E2 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 97E4 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 97E7 CD 6A 8C     	call Extrae_address
 510+ 97EA 22 8F 89     	ld (Puntero_objeto),hl
 511+ 97ED
 512+ 97ED              ; Modifica (Puntero_DESPLZ_der).
 513+ 97ED
 514+ 97ED              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 97ED              ; Cuántos movimientos hemos hecho ??
 516+ 97ED              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 97ED
 518+ 97ED 2A 97 89     7 ld hl,(Indice_Sprite_izq)
 519+ 97F0 EB           	ex de,hl
 520+ 97F1 A7           	and a
 521+ 97F2 ED 52        	sbc hl,de
 522+ 97F4 CB 3D        	srl l
 523+ 97F6 3E 08        6 ld a,8
 524+ 97F8 95           	sub l
 525+ 97F9 30 1E        	jr nc,3F
 526+ 97FB
 527+ 97FB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 97FB              ; B="0".
 529+ 97FB
 530+ 97FB 04           4 inc b
 531+ 97FC 3C           	inc a
 532+ 97FD 20 FC        	jr nz,4B
 533+ 97FF 78           	ld a,b
 534+ 9800 08           	ex af,af
 535+ 9801 2A 97 89     	ld hl,(Indice_Sprite_izq)
 536+ 9804 23           5 inc hl
 537+ 9805 23           	inc hl
 538+ 9806 10 FC        	djnz 5B
 539+ 9808 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 980B CD 6A 8C     	call Extrae_address
 541+ 980E 22 8F 89     	ld (Puntero_objeto),hl
 542+ 9811
 543+ 9811              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9811              ; _(Posicion_actual).
 545+ 9811
 546+ 9811 21 8D 89     	ld hl,Posicion_actual
 547+ 9814 35           	dec (hl)
 548+ 9815 08           	ex af,af
 549+ 9816 6F           	ld l,a
 550+ 9817 18 DD        	jr 6B
 551+ 9819
 552+ 9819              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9819
 554+ 9819 47           3 ld b,a
 555+ 981A 2A 95 89     	ld hl,(Indice_Sprite_der)
 556+ 981D 23           2 inc hl
 557+ 981E 23           	inc hl
 558+ 981F 10 FC        	djnz 2B
 559+ 9821 22 99 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9824 C9           8 ret
 561+ 9825
 562+ 9825              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9825              ;
 564+ 9825              ;	modifica_parametros_1er_DESPLZ
 565+ 9825              ;
 566+ 9825              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9825              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9825              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9825
 570+ 9825 3A 93 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9828 A7           	and a
 572+ 9829 20 1E        	jr nz,1F
 573+ 982B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 982C 32 93 89         ld (CTRL_DESPLZ),a
 575+ 982F 21 8C 89     	ld hl,Columns
 576+ 9832 34           	inc (hl)
 577+ 9833 3A 9F 89     	ld a,(Cuad_objeto)
 578+ 9836 E6 01        	and 1
 579+ 9838 20 0F        	jr nz,1F
 580+ 983A 2A 8D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 983D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 983E 22 8D 89     	ld (Posicion_actual),hl
 583+ 9841 CD 95 9F     	call Genera_coordenadas
 584+ 9844 CD A0 98     	call Dec_CTRL_DESPLZ
 585+ 9847 18 03        	jr 2F
 586+ 9849 CD A0 98     1 call Dec_CTRL_DESPLZ
 587+ 984C C9           2 ret
 588+ 984D
 589+ 984D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 984D
 591+ 984D 3A 93 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9850 FE F7        	cp $f7
 593+ 9852 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9854 30 2C        	jr nc,3F
 595+ 9856
 596+ 9856              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9856
 598+ 9856 06 00        	ld b,0
 599+ 9858 04           4 inc b
 600+ 9859 3C           	inc a
 601+ 985A FE F7        	cp $f7
 602+ 985C 20 FA        	jr nz,4B
 603+ 985E 3E FF        	ld a,$ff
 604+ 9860 90           	sub b
 605+ 9861 32 93 89     	ld (CTRL_DESPLZ),a
 606+ 9864 18 1C        	jr 3F
 607+ 9866
 608+ 9866              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9866
 610+ 9866 21 8C 89     1 ld hl,Columns
 611+ 9869 35           	dec (hl)
 612+ 986A AF           	xor a
 613+ 986B 32 93 89     	ld (CTRL_DESPLZ),a
 614+ 986E 3A 9F 89     	ld a,(Cuad_objeto)
 615+ 9871 E6 01        	and 1
 616+ 9873 28 0A        	jr z,2F
 617+ 9875 2A 8D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9878 2B           	dec hl
 619+ 9879 22 8D 89     	ld (Posicion_actual),hl
 620+ 987C CD 95 9F     	call Genera_coordenadas
 621+ 987F
 622+ 987F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 987F
 624+ 987F CD 92 8C     2 call Inicia_puntero_objeto_izq
 625+ 9882 C9           3 ret
 626+ 9883
 627+ 9883              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9883              ;
 629+ 9883              ;	19/10/22
 630+ 9883              ;
 631+ 9883              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9883              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9883
 634+ 9883 3A 91 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9886 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9888 C9           	ret
 637+ 9889
 638+ 9889              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9889              ;
 640+ 9889              ;	19/10/22
 641+ 9889              ;
 642+ 9889              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9889              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9889
 645+ 9889 3A 91 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 988C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 988E C9           	ret
 648+ 988F
 649+ 988F              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 988F              ;
 651+ 988F              ;	24/7/22
 652+ 988F              ;
 653+ 988F              ;	Inc_CTRL_DESPLZ
 654+ 988F              ;
 655+ 988F              ;
 656+ 988F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 988F
 658+ 988F 21 93 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9892 3A B5 89     	ld a,(Vel_right)
 660+ 9895 A7           	and a
 661+ 9896 28 06        	jr z,1F
 662+ 9898 47           	ld b,a
 663+ 9899 34           3 inc (hl)
 664+ 989A 10 FD        	djnz 3B
 665+ 989C 18 01        	jr 2F
 666+ 989E 34           1 inc (hl)
 667+ 989F C9           2 ret
 668+ 98A0
 669+ 98A0              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 98A0              ;
 671+ 98A0              ;	5/2/23
 672+ 98A0              ;
 673+ 98A0              ;	Dec_CTRL_DESPLZ
 674+ 98A0              ;
 675+ 98A0              ;
 676+ 98A0              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 98A0
 678+ 98A0 21 93 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 98A3 3A B4 89     	ld a,(Vel_left)
 680+ 98A6 A7           	and a
 681+ 98A7 28 06        	jr z,1F
 682+ 98A9 47           	ld b,a
 683+ 98AA 35           3 dec (hl)
 684+ 98AB 10 FD        	djnz 3B
 685+ 98AD 18 01        	jr 2F
 686+ 98AF 35           1 dec (hl)
 687+ 98B0 C9           2 ret
 688+ 98B1
 689+ 98B1              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 98B1
 691+ 98B1 2A 8D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 98B4 01 1F 00     	ld bc,31
 693+ 98B7 A7           	and a
 694+ 98B8 ED 4A        	adc hl,bc
 695+ 98BA 22 8D 89     	ld (Posicion_actual),hl
 696+ 98BD 21 AD 89     	ld hl,Ctrl_0														; $xxx1
 697+ 98C0 CB C6        	set 0,(hl)
 698+ 98C2 C9           	ret
 699+ 98C3
 700+ 98C3              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 98C3
 702+ 98C3 2A 8D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 98C6 01 1F 00     	ld bc,31
 704+ 98C9 A7           	and a
 705+ 98CA ED 42        	sbc hl,bc
 706+ 98CC 22 8D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 98CF 21 AD 89     	ld hl,Ctrl_0
 708+ 98D2 CB CE        	set 1,(hl)
 709+ 98D4 C9           	ret
 710+ 98D5
 711+ 98D5              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 98D5
 713+ 98D5 24           Reaparece_abajo inc h
 714+ 98D6 01 E0 17     	ld bc,$17e0
 715+ 98D9 A7           	and a
 716+ 98DA ED 4A        	adc hl,bc
 717+ 98DC 22 8D 89     	ld (Posicion_actual),hl
 718+ 98DF 21 AD 89     	ld hl,Ctrl_0
 719+ 98E2 CB D6        	set 2,(hl)
 720+ 98E4 C9           	ret
 721+ 98E5
 722+ 98E5              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 98E5
 724+ 98E5 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 98E8 A7           	and a
 726+ 98E9 ED 42        	sbc hl,bc
 727+ 98EB 22 8D 89     	ld (Posicion_actual),hl
 728+ 98EE 21 AD 89     	ld hl,Ctrl_0
 729+ 98F1 CB DE        	set 3,(hl)
 730+ 98F3 C9           	ret
 731+ 98F4
 732+ 98F4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 98F4              ;
 734+ 98F4              ;	15/07/23
 735+ 98F4
 736+ 98F4              Reinicio
 737+ 98F4
 738+ 98F4              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 98F4
 740+ 98F4 AF           	xor a
 741+ 98F5 21 C8 89     	ld hl,Puntero_indice_mov_bucle
 742+ 98F8 CD 16 99     	call Limpia_contenido_hl
 743+ 98FB
 744+ 98FB 21 8D 89     	ld hl,Posicion_actual
 745+ 98FE CD 16 99     	call Limpia_contenido_hl
 746+ 9901
 747+ 9901 CD D1 8D     	call Inicializa_Puntero_indice_mov
 748+ 9904 CD E2 99     	call Inicia_Puntero_mov
 749+ 9907
 750+ 9907 21 CA 89     	ld hl,Incrementa_puntero
 751+ 990A 06 05        	ld b,5
 752+ 990C 77           1 ld (hl),a
 753+ 990D 23           	inc hl
 754+ 990E 10 FC        	djnz 1B
 755+ 9910
 756+ 9910 21 B2 89     	ld hl,Ctrl_2
 757+ 9913 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9915
 759+ 9915 C9           	ret
 760+ 9916
 761+ 9916 77           Limpia_contenido_hl	ld (hl),a
 762+ 9917 23           	inc hl
 763+ 9918 77           	ld (hl),a
 764+ 9919 C9           	ret
 765+ 991A
 766+ 991A
# file closed: Direcciones.asm
1861  991A              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 991A              ; ----- ----- ----- ----- -----
   2+ 991A              ;
   3+ 991A              ;   28/12/23
   4+ 991A
   5+ 991A              Movimiento
   6+ 991A
   7+ 991A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 991A
   9+ 991A 3A B2 89         ld a,(Ctrl_2)
  10+ 991D CB 57            bit 2,a
  11+ 991F 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9921
  13+ 9921 2A C6 89         ld hl,(Puntero_mov)
  14+ 9924 7E               ld a,(hl)
  15+ 9925
  16+ 9925              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9925
  18+ 9925              Inicia_desplazamiento.
  19+ 9925
  20+ 9925              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9925
  22+ 9925 CD 18 9A         call Ajusta_velocidad_desplazamiento
  23+ 9928
  24+ 9928              ; Iniciamos (Repetimos_mov).
  25+ 9928
  26+ 9928 7E               ld a,(hl)
  27+ 9929 E6 0F            and $0f
  28+ 992B 32 CC 89         ld (Repetimos_desplazamiento),a
  29+ 992E 32 CD 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9931
  31+ 9931              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9931
  33+ 9931 23               inc hl
  34+ 9932 7E               ld a,(hl)
  35+ 9933 32 CF 89         ld (Cola_de_desplazamiento),a
  36+ 9936 2B               dec hl
  37+ 9937
  38+ 9937 21 B2 89         ld hl,Ctrl_2
  39+ 993A CB D6            set 2,(hl)
  40+ 993C
  41+ 993C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 993C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 993C
  44+ 993C              Desplazamiento_iniciado
  45+ 993C
  46+ 993C CD EC 99         call Aplica_desplazamiento
  47+ 993F
  48+ 993F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 993F
  50+ 993F 3A EF 89         ld a,(Ctrl_3)
  51+ 9942 CB 4F            bit 1,a
  52+ 9944 C0               ret nz
  53+ 9945
  54+ 9945 21 CC 89     3 ld hl,Repetimos_desplazamiento
  55+ 9948 35               dec (hl)
  56+ 9949 C0               ret nz
  57+ 994A
  58+ 994A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 994A              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 994A              ; Analiza (Cola_de_desplazamiento).
  61+ 994A
  62+ 994A 3A CF 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 994D A7               and a
  64+ 994E CC 41 9A         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9951 28 30            jr z,Reinicia_el_movimiento
  66+ 9953
  67+ 9953 FE FF            cp $ff
  68+ 9955 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9957
  70+ 9957 FE FE            cp $fe
  71+ 9959 CC C6 99         call z,Fijamos_bucle
  72+ 995C 28 25            jr z,Reinicia_el_movimiento
  73+ 995E
  74+ 995E FE FD            cp $fd
  75+ 9960 20 11            jr nz,1F
  76+ 9962
  77+ 9962              ; ---
  78+ 9962              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9962
  80+ 9962 3A B2 89         ld a,(Ctrl_2)
  81+ 9965 CB 5F            bit 3,a
  82+ 9967 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9969
  84+ 9969              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9969
  86+ 9969 21 B2 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 996C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 996E
  89+ 996E CD D7 99         call Inicia_Repetimos_movimiento
  90+ 9971 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9973              ; ---
  92+ 9973
  93+ 9973 FE 01        1 cp 1
  94+ 9975 CA B0 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9978
  96+ 9978 3D               dec a
  97+ 9979 32 CF 89         ld (Cola_de_desplazamiento),a
  98+ 997C
  99+ 997C 3A CD 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 997F 32 CC 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9982              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9982 C9               ret
 103+ 9983
 104+ 9983              Reinicia_el_movimiento
 105+ 9983
 106+ 9983 3A B2 89         ld a,(Ctrl_2)
 107+ 9986 CB 5F            bit 3,a
 108+ 9988 28 1B            jr z,2F
 109+ 998A
 110+ 998A              ; (Cola_de_desplazamiento)="254".
 111+ 998A
 112+ 998A 21 CE 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 998D 35               dec (hl)
 114+ 998E 20 15            jr nz,2F
 115+ 9990
 116+ 9990              ; Fin de las repeticiones del último movimiento.
 117+ 9990
 118+ 9990 21 B2 89         ld hl,Ctrl_2
 119+ 9993 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9995
 121+ 9995 2A C6 89         ld hl,(Puntero_mov)
 122+ 9998 23               inc hl
 123+ 9999 23               inc hl
 124+ 999A 23               inc hl
 125+ 999B 22 C6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 999E              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 999E 7E               ld a,(hl)
 128+ 999F 32 CF 89         ld (Cola_de_desplazamiento),a
 129+ 99A2
 130+ 99A2 C3 4A 99         jp Cola
 131+ 99A5
 132+ 99A5 CD E2 99     2 call Inicia_Puntero_mov
 133+ 99A8
 134+ 99A8 21 B2 89         ld hl,Ctrl_2
 135+ 99AB CB 96            res 2,(hl)
 136+ 99AD
 137+ 99AD C3 1A 99         jp Movimiento
 138+ 99B0
 139+ 99B0              Siguiente_desplazamiento
 140+ 99B0
 141+ 99B0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 99B0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 99B0
 144+ 99B0 21 B2 89         ld hl,Ctrl_2
 145+ 99B3 CB 96            res 2,(hl)
 146+ 99B5
 147+ 99B5 2A C6 89         ld hl,(Puntero_mov)
 148+ 99B8 23               inc hl
 149+ 99B9 23               inc hl
 150+ 99BA 22 C6 89         ld (Puntero_mov),hl
 151+ 99BD
 152+ 99BD 7E               ld a,(hl)
 153+ 99BE A7               and a
 154+ 99BF CC 41 9A         call z,Incrementa_Puntero_indice_mov
 155+ 99C2 CA 83 99         jp z,Reinicia_el_movimiento
 156+ 99C5
 157+ 99C5 C9               ret
 158+ 99C6
 159+ 99C6              ; Subrutinas -----------------------------------------
 160+ 99C6              ; ---------- --------- --------- ---------- ----------
 161+ 99C6              ;
 162+ 99C6              ;   24/07/23
 163+ 99C6              ;
 164+ 99C6              ;   Fijamos_bucle
 165+ 99C6              ;
 166+ 99C6              ;
 167+ 99C6
 168+ 99C6              Fijamos_bucle
 169+ 99C6
 170+ 99C6 3A CA 89         ld a,(Incrementa_puntero)
 171+ 99C9 3C               inc a
 172+ 99CA 32 CB 89         ld (Incrementa_puntero_backup),a
 173+ 99CD
 174+ 99CD CD 41 9A         call Incrementa_Puntero_indice_mov
 175+ 99D0 2A C4 89         ld hl,(Puntero_indice_mov)
 176+ 99D3 22 C8 89         ld (Puntero_indice_mov_bucle),hl
 177+ 99D6 C9               ret
 178+ 99D7
 179+ 99D7              ; ---------- --------- --------- ---------- ----------
 180+ 99D7              ;
 181+ 99D7              ;   07/7/23
 182+ 99D7              ;
 183+ 99D7              ;   Inicia_Repetimos_movimiento
 184+ 99D7              ;
 185+ 99D7              ;
 186+ 99D7
 187+ 99D7              Inicia_Repetimos_movimiento
 188+ 99D7
 189+ 99D7              ; Iniciamos (Repetimos_movimiento).
 190+ 99D7
 191+ 99D7 DD 2A C6 89      ld ix,(Puntero_mov)
 192+ 99DB DD 7E 02         ld a,(ix+2)
 193+ 99DE 32 CE 89         ld (Repetimos_movimiento),a
 194+ 99E1
 195+ 99E1 C9               ret
 196+ 99E2
 197+ 99E2              ; ---------- --------- --------- ---------- ----------
 198+ 99E2              ;
 199+ 99E2              ;   26/6/23
 200+ 99E2              ;
 201+ 99E2              ;   Inicia_Puntero_mov
 202+ 99E2              ;
 203+ 99E2              ;
 204+ 99E2
 205+ 99E2 2A C4 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 99E5 CD 6A 8C         call Extrae_address
 207+ 99E8 22 C6 89         ld (Puntero_mov),hl
 208+ 99EB C9               ret
 209+ 99EC
 210+ 99EC              ; ---------- --------- --------- ---------- ----------
 211+ 99EC              ;
 212+ 99EC              ;   27/06/23
 213+ 99EC              ;
 214+ 99EC              ;   Aplica_movimiento.
 215+ 99EC
 216+ 99EC              Aplica_desplazamiento
 217+ 99EC
 218+ 99EC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 99EC
 220+ 99EC 2A C6 89         ld hl, (Puntero_mov)
 221+ 99EF
 222+ 99EF 7E               ld a,(hl)
 223+ 99F0 E6 F0            and $f0
 224+ 99F2 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 99F3
 226+ 99F3 CB 7E            bit 7,(hl)
 227+ 99F5 28 03            jr z,1F
 228+ 99F7 CD 01 96         call Mov_up
 229+ 99FA 2A C6 89     1 ld hl, (Puntero_mov)
 230+ 99FD CB 76            bit 6,(hl)
 231+ 99FF 28 03            jr z,2F
 232+ 9A01 CD C8 95         call Mov_down
 233+ 9A04
 234+ 9A04              ; Se ha aplicado reinicio ???
 235+ 9A04              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9A04
 237+ 9A04              ;    ld a,(Ctrl_3)
 238+ 9A04              ;    bit 1,a
 239+ 9A04              ;    ret nz
 240+ 9A04
 241+ 9A04 2A C6 89     2 ld hl, (Puntero_mov)
 242+ 9A07 CB 6E            bit 5,(hl)
 243+ 9A09 28 03            jr z,3F
 244+ 9A0B CD 67 97         call Mov_left
 245+ 9A0E 2A C6 89     3 ld hl, (Puntero_mov)
 246+ 9A11 CB 66            bit 4,(hl)
 247+ 9A13 C8               ret z
 248+ 9A14 CD 44 96         call Mov_right
 249+ 9A17 C9               ret
 250+ 9A18
 251+ 9A18              ; ---------- --------- --------- ---------- ----------
 252+ 9A18              ;
 253+ 9A18              ;   26/06/23
 254+ 9A18              ;
 255+ 9A18              ;   Ajusta_velocidad_desplazamiento.
 256+ 9A18
 257+ 9A18              Ajusta_velocidad_desplazamiento
 258+ 9A18
 259+ 9A18              ; 1er byte de la cadena de movimiento.
 260+ 9A18              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9A18
 262+ 9A18 CD 36 9A         call Extrae_nibble_alto
 263+ 9A1B
 264+ 9A1B 32 B6 89         ld (Vel_up),a
 265+ 9A1E 79               ld a,c
 266+ 9A1F E6 0F            and $0f
 267+ 9A21 32 B7 89         ld (Vel_down),a
 268+ 9A24
 269+ 9A24              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9A24              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9A24
 272+ 9A24 23               inc hl
 273+ 9A25 CD 36 9A         call Extrae_nibble_alto
 274+ 9A28
 275+ 9A28 32 B4 89         ld (Vel_left),a
 276+ 9A2B 79               ld a,c
 277+ 9A2C E6 0F            and $0f
 278+ 9A2E 32 B5 89         ld (Vel_right),a
 279+ 9A31
 280+ 9A31              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9A31
 282+ 9A31 23               inc hl
 283+ 9A32 22 C6 89         ld (Puntero_mov),hl
 284+ 9A35 C9               ret
 285+ 9A36
 286+ 9A36 06 04        Extrae_nibble_alto ld b,4
 287+ 9A38 7E               ld a,(hl)
 288+ 9A39 4F               ld c,a
 289+ 9A3A E6 F0            and $f0
 290+ 9A3C CB 3F        1 srl a
 291+ 9A3E 10 FC            djnz 1B
 292+ 9A40 C9               ret
 293+ 9A41
 294+ 9A41              ; ---------- --------- --------- ---------- ----------
 295+ 9A41              ;
 296+ 9A41              ;   5/7/23
 297+ 9A41              ;
 298+ 9A41              ;   Incrementa_Puntero_indice_mov
 299+ 9A41
 300+ 9A41              Incrementa_Puntero_indice_mov
 301+ 9A41
 302+ 9A41 21 CA 89         ld hl,Incrementa_puntero
 303+ 9A44 34               inc (hl)
 304+ 9A45
 305+ 9A45 2A C4 89         ld hl,(Puntero_indice_mov)
 306+ 9A48 01 02 00         ld bc,2
 307+ 9A4B A7               and a
 308+ 9A4C 09               add hl,bc
 309+ 9A4D 22 C4 89         ld (Puntero_indice_mov),hl
 310+ 9A50
 311+ 9A50 7E               ld a,(hl)
 312+ 9A51 A7               and a
 313+ 9A52
 314+ 9A52              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9A52
 316+ 9A52              ;    jr z,$
 317+ 9A52
 318+ 9A52              ;! Reinicia el Patrón de movimiento.
 319+ 9A52
 320+ 9A52 CC 57 9A         call z,Inicializa_Puntero_indice_mov_2
 321+ 9A55
 322+ 9A55 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9A56
 324+ 9A56 C9               ret
 325+ 9A57
 326+ 9A57              ; ---------- --------- --------- ---------- ----------
 327+ 9A57              ;
 328+ 9A57              ;   15/01/24
 329+ 9A57              ;
 330+ 9A57              ;   Inicializa_Puntero_indice_mov
 331+ 9A57
 332+ 9A57              Inicializa_Puntero_indice_mov_2
 333+ 9A57
 334+ 9A57              ; Existe etiqueta de bucle principal???
 335+ 9A57
 336+ 9A57 2A C8 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9A5A 24               inc h
 338+ 9A5B 25               dec h
 339+ 9A5C 28 05            jr z,2F
 340+ 9A5E
 341+ 9A5E 22 C4 89         ld (Puntero_indice_mov),hl
 342+ 9A61 18 14            jr 3F
 343+ 9A63
 344+ 9A63              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9A63
 346+ 9A63 3A CA 89     2 ld a,(Incrementa_puntero)
 347+ 9A66 47               ld b,a
 348+ 9A67
 349+ 9A67 2A C4 89         ld hl,(Puntero_indice_mov)
 350+ 9A6A 2B           1 dec hl
 351+ 9A6B 2B               dec hl
 352+ 9A6C 10 FC            djnz 1B
 353+ 9A6E 22 C4 89         ld (Puntero_indice_mov),hl
 354+ 9A71
 355+ 9A71 AF               xor a
 356+ 9A72 32 CA 89         ld (Incrementa_puntero),a
 357+ 9A75 18 06            jr 4F
 358+ 9A77
 359+ 9A77 3A CB 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A7A 32 CA 89         ld (Incrementa_puntero),a
 361+ 9A7D C9           4 ret
 362+ 9A7E
 363+ 9A7E              ; ----------------------------------------------------------------------
 364+ 9A7E              ;
 365+ 9A7E              ;   30/01/24
 366+ 9A7E              ;
 367+ 9A7E              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A7E
 369+ 9A7E 3A 8A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A81 CD 22 8F         call Calcula_salto_en_BC
 371+ 9A84 21 B8 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A87 A7               and a
 373+ 9A88 ED 4A            adc hl,bc
 374+ 9A8A C9               ret
 375+ 9A8B
 376+ 9A8B              ; ----------------------------------------------------------------------
 377+ 9A8B              ;
 378+ 9A8B              ;   30/01/24
 379+ 9A8B              ;
 380+ 9A8B              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A8B              ;
 382+ 9A8B              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A8B
 384+ 9A8B 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A8C 23               inc hl
 386+ 9A8D 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A8E 69               ld l,c
 388+ 9A8F 60               ld h,b
 389+ 9A90 22 AB 89         ld (Contador_de_mov_masticados),hl
 390+ 9A93 C9               ret
 391+ 9A94
# file closed: Movimiento.asm
1862  9A94              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9A94              ; ******************************************************************************************************************************************************************************************
   2+ 9A94              ;
   3+ 9A94              ;   21/07/23
   4+ 9A94              ;
   5+ 9A94              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9A94              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9A94              ;
   8+ 9A94              ;
   9+ 9A94              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9A94              ;
  11+ 9A94              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9A94              ;               _ hacen las entidades hacia abajo.
  13+ 9A94              ;
  14+ 9A94              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9A94              ;
  16+ 9A94              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9A94              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9A94              ;
  19+ 9A94              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9A94              ;           _ la bala.
  21+ 9A94              ;
  22+ 9A94              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9A94              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9A94              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9A94              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9A94              ;           _ en el momento de generarse la bala)).
  27+ 9A94
  28+ 9A94              Genera_disparo
  29+ 9A94
  30+ 9A94              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9A94              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9A94              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9A94              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9A94              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9A94              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9A94              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9A94
  38+ 9A94              ; Exclusiones:
  39+ 9A94
  40+ 9A94 3A B7 89         ld a,(Vel_down)
  41+ 9A97 47               ld b,a
  42+ 9A98 3A 01 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9A9B B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9A9C D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9A9D 3A AE 89         ld a,(Columnas)
  46+ 9AA0 47               ld b,a
  47+ 9AA1 3A 8C 89         ld a,(Columns)
  48+ 9AA4 B8               cp b
  49+ 9AA5 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9AA6
  51+ 9AA6              ; ----- ----- -----
  52+ 9AA6
  53+ 9AA6 3A AD 89         ld a,(Ctrl_0)
  54+ 9AA9 CB 77            bit 6,a
  55+ 9AAB 20 06            jr nz,14F
  56+ 9AAD
  57+ 9AAD 3A 92 89         ld a,(Coordenada_y)
  58+ 9AB0 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9AB2 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9AB3
  61+ 9AB3 21 31 81     14 ld hl,Indice_disparo
  62+ 9AB6 3A 93 89         ld a,(CTRL_DESPLZ)
  63+ 9AB9 4F               ld c,a
  64+ 9ABA 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9ABC              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9ABC              ;                                            ""        ""       "f9", B="1"
  67+ 9ABC              ;                                            ""        ""       "fb", B="2"
  68+ 9ABC              ;                                            ""        ""       "fb", B="3"
  69+ 9ABC A7               and a
  70+ 9ABD 28 10            jr z,1F
  71+ 9ABF E6 01            and 1
  72+ 9AC1 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9AC2
  74+ 9AC2 79               ld a,c
  75+ 9AC3 16 F9            ld d,$f9
  76+ 9AC5 23           2 inc hl
  77+ 9AC6 23               inc hl
  78+ 9AC7 04               inc b
  79+ 9AC8 BA               cp d
  80+ 9AC9 28 04            jr z,1F
  81+ 9ACB 14               inc d
  82+ 9ACC 14               inc d
  83+ 9ACD 18 F6            jr 2B
  84+ 9ACF
  85+ 9ACF CD 6A 8C     1 call Extrae_address
  86+ 9AD2 E5               push hl
  87+ 9AD3 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9AD5 DD 21 73 95  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9AD9
  90+ 9AD9              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9AD9              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9AD9
  93+ 9AD9 3A AD 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9ADC CB 77            bit 6,a
  95+ 9ADE 20 04            jr nz,19F
  96+ 9AE0
  97+ 9AE0 AF               xor a
  98+ 9AE1 32 0A 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9AE4
 100+ 9AE4 3A 9F 89     19 ld a,(Cuad_objeto)
 101+ 9AE7 FE 02            cp 2
 102+ 9AE9 38 66            jr c,3F
 103+ 9AEB 28 64            jr z,3F
 104+ 9AED
 105+ 9AED              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9AED
 107+ 9AED E6 01            and 1
 108+ 9AEF 28 30            jr z,4F
 109+ 9AF1
 110+ 9AF1              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9AF1              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9AF1              ;
 113+ 9AF1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9AF1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9AF1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9AF1
 117+ 9AF1 2A 8D 89     	ld hl,(Posicion_actual)
 118+ 9AF4
 119+ 9AF4              ;   Amadeus o entidad ???.
 120+ 9AF4
 121+ 9AF4 3A AD 89         ld a,(Ctrl_0)
 122+ 9AF7 CB 77            bit 6,a
 123+ 9AF9 28 0A            jr z,8F
 124+ 9AFB
 125+ 9AFB              ; 	Dispara Amadeus.
 126+ 9AFB
 127+ 9AFB 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9AFD CD AE 92         call PreviousScan
 129+ 9B00 CD AE 92         call PreviousScan
 130+ 9B03
 131+ 9B03              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9B03              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9B03              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9B03              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9B03
 136+ 9B03 18 11            jr 10F
 137+ 9B05
 138+ 9B05              ; 	Dispara Entidad.
 139+ 9B05
 140+ 9B05 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9B08              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9B08
 143+ 9B08              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9B08              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9B08
 146+ 9B08 C5               push bc
 147+ 9B09 06 10            ld b,16
 148+ 9B0B CD 9F 92     9 call NextScan
 149+ 9B0E 10 FB            djnz 9B
 150+ 9B10 C1               pop bc
 151+ 9B11 CD 7B 9B         call Ajusta_disparo_parte_izquierda
 152+ 9B14 18 06            jr 17F
 153+ 9B16
 154+ 9B16              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9B16              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9B16              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9B16              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9B16
 159+ 9B16 CD 7B 9B     10 call Ajusta_disparo_parte_izquierda
 160+ 9B19 CD F0 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9B1C              ;                                                      ; _al generar el disparo.
 162+ 9B1C
 163+ 9B1C              ; 	LLegados a este punto tendremos:
 164+ 9B1C              ;
 165+ 9B1C              ;       Puntero_objeto_disparo en IY.
 166+ 9B1C              ;       Rutinas_de_impresion en IX.
 167+ 9B1C              ;       Puntero_de_impresion en HL.
 168+ 9B1C              ;       Impacto/Dirección en BC.
 169+ 9B1C
 170+ 9B1C CD 83 9B     17 call Almacena_disparo
 171+ 9B1F 18 52            jr 6F                                             ; RET.
 172+ 9B21
 173+ 9B21              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9B21              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9B21              ;
 176+ 9B21              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9B21              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9B21              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9B21
 180+ 9B21 2A 8D 89     4 ld hl,(Posicion_actual)
 181+ 9B24
 182+ 9B24              ;   Amadeus o entidad ???.
 183+ 9B24
 184+ 9B24 3A AD 89         ld a,(Ctrl_0)
 185+ 9B27 CB 77            bit 6,a
 186+ 9B29 28 0A            jr z,11F
 187+ 9B2B
 188+ 9B2B              ; 	Dispara Amadeus.
 189+ 9B2B
 190+ 9B2B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9B2D CD AE 92         call PreviousScan
 192+ 9B30 CD AE 92         call PreviousScan
 193+ 9B33
 194+ 9B33              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9B33              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9B33              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9B33              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9B33
 199+ 9B33 18 11            jr 13F
 200+ 9B35
 201+ 9B35              ; 	Dispara Entidad.
 202+ 9B35
 203+ 9B35 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9B38              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9B38
 206+ 9B38              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9B38              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9B38
 209+ 9B38 C5               push bc
 210+ 9B39 06 10            ld b,16
 211+ 9B3B CD 9F 92     12 call NextScan
 212+ 9B3E 10 FB            djnz 12B
 213+ 9B40 C1               pop bc
 214+ 9B41
 215+ 9B41 CD 74 9B         call Ajusta_disparo_parte_derecha
 216+ 9B44 18 06            jr 18F
 217+ 9B46
 218+ 9B46              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9B46              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9B46              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9B46              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9B46
 223+ 9B46 CD 74 9B     13 call Ajusta_disparo_parte_derecha
 224+ 9B49 CD F0 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9B4C              ;                                                       ; _al generar el disparo.
 226+ 9B4C
 227+ 9B4C              ; LLegados a este punto tendremos:
 228+ 9B4C              ;
 229+ 9B4C              ;       Puntero_objeto_disparo en IY.
 230+ 9B4C              ;       Rutinas_de_impresion en IX.
 231+ 9B4C              ;       Puntero_de_impresion en HL.
 232+ 9B4C              ;       Impacto/Dirección en BC.
 233+ 9B4C
 234+ 9B4C CD 83 9B     18 call Almacena_disparo
 235+ 9B4F 18 22            jr 6F                                               ; RET.
 236+ 9B51
 237+ 9B51              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9B51
 239+ 9B51 28 11        3 jr z,5F
 240+ 9B53
 241+ 9B53              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9B53              ;
 243+ 9B53              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9B53              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9B53              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9B53              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9B53
 248+ 9B53              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9B53              ;	   ""        ""       "f9", B="1"
 250+ 9B53              ;	   ""        ""       "fb", B="2"
 251+ 9B53              ; 	   ""        ""       "fb", B="3"
 252+ 9B53
 253+ 9B53 2A 8D 89     	ld hl,(Posicion_actual)
 254+ 9B56 CD 9F 92     	call NextScan
 255+ 9B59
 256+ 9B59              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9B59              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9B59              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9B59              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9B59
 261+ 9B59 CD 7B 9B         call Ajusta_disparo_parte_izquierda
 262+ 9B5C
 263+ 9B5C              ; 	No se produce impacto. B="$80"
 264+ 9B5C              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9B5C
 266+ 9B5C 01 80 80         ld bc,$8080
 267+ 9B5F
 268+ 9B5F              ; 	LLegados a este punto tendremos:
 269+ 9B5F              ;
 270+ 9B5F              ;       Puntero_objeto_disparo en IY.
 271+ 9B5F              ;       Rutinas_de_impresion en IX.
 272+ 9B5F              ;       Puntero_de_impresion en HL.
 273+ 9B5F              ;       Impacto/Dirección en BC.
 274+ 9B5F
 275+ 9B5F CD 83 9B         call Almacena_disparo
 276+ 9B62 18 0F            jr 6F                                           ; RET.
 277+ 9B64
 278+ 9B64              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9B64              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9B64              ;
 281+ 9B64              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9B64              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9B64              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9B64              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9B64
 286+ 9B64 2A 8D 89     5 ld hl,(Posicion_actual)
 287+ 9B67 CD 9F 92     	call NextScan
 288+ 9B6A
 289+ 9B6A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9B6A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9B6A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9B6A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9B6A
 294+ 9B6A CD 74 9B         call Ajusta_disparo_parte_derecha
 295+ 9B6D
 296+ 9B6D              ; 	No se produce impacto. B="$80"
 297+ 9B6D              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9B6D
 299+ 9B6D 01 80 80     15 ld bc,$8080
 300+ 9B70
 301+ 9B70              ; 	LLegados a este punto tendremos:
 302+ 9B70              ;
 303+ 9B70              ;       Puntero_objeto_disparo en IY.
 304+ 9B70              ;       Rutinas_de_impresion en IX.
 305+ 9B70              ;       Puntero_de_impresion en HL.
 306+ 9B70              ;       Impacto/Dirección en BC.
 307+ 9B70
 308+ 9B70 CD 83 9B         call Almacena_disparo
 309+ 9B73
 310+ 9B73 C9           6 ret
 311+ 9B74
 312+ 9B74              ; ----------------------------------------------------------------
 313+ 9B74              ;
 314+ 9B74              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9B74              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9B74              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9B74
 318+ 9B74 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9B75 FE 02            cp 2
 320+ 9B77 38 01            jr c,1F
 321+ 9B79 23               inc hl
 322+ 9B7A C9           1 ret
 323+ 9B7B
 324+ 9B7B 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9B7C FE 01        	cp 1
 326+ 9B7E 20 01        	jr nz,1F
 327+ 9B80 2B           	dec hl
 328+ 9B81 2B           1 dec hl
 329+ 9B82 C9               ret
 330+ 9B83
 331+ 9B83              ; ----------------------------------------------------------------
 332+ 9B83              ;
 333+ 9B83              ;   25/02/23
 334+ 9B83              ;
 335+ 9B83              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9B83              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9B83              ;
 338+ 9B83              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9B83              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9B83
 341+ 9B83              Almacena_disparo
 342+ 9B83
 343+ 9B83 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9B84 F1               pop af
 345+ 9B85 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9B86
 347+ 9B86 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9B87 E6 01            and 1
 349+ 9B89 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9B8B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9B8B              ; 	Dispara AMADEUS.
 352+ 9B8B
 353+ 9B8B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9B8B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9B8B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9B8B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9B8B
 358+ 9B8B C5               push bc
 359+ 9B8C 01 68 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9B8F 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9B92 A7               and a
 362+ 9B93 ED 42            sbc hl,bc
 363+ 9B95 CC EF 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9B98 C1               pop bc
 365+ 9B99 28 54            jr z,4F
 366+ 9B9B
 367+ 9B9B 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9B9E 23               inc hl
 369+ 9B9F 23               inc hl
 370+ 9BA0 22 F4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9BA3              ;                                                   ; _ Disparo_(+1).
 372+ 9BA3 18 18            jr 2F
 373+ 9BA5
 374+ 9BA5              ; Dispara una entidad.
 375+ 9BA5
 376+ 9BA5 C5           1 push bc
 377+ 9BA6 01 90 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9BA9 2A F2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9BAC A7               and a
 380+ 9BAD ED 42            sbc hl,bc
 381+ 9BAF CC E8 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9BB2 C1               pop bc
 383+ 9BB3 28 3A            jr z,4F
 384+ 9BB5
 385+ 9BB5 2A F2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9BB8 23               inc hl
 387+ 9BB9 23               inc hl
 388+ 9BBA 22 F2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9BBD              ;                                                   ; _ Disparo_(+1).
 390+ 9BBD CD 6A 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9BC0              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9BC0              ;
 393+ 9BC0              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9BC0              ;                                                     Rutinas_de_impresion en IX.
 395+ 9BC0              ;                                                     Puntero_de_impresion en HL.
 396+ 9BC0              ;                                                     Impacto/Dirección en BC.
 397+ 9BC0
 398+ 9BC0 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9BC1 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9BC2 23               inc hl                                          ; _ al siguiente.
 401+ 9BC3 A7               and a
 402+ 9BC4 20 C0            jr nz,3B
 403+ 9BC6
 404+ 9BC6 08               ex af,af
 405+ 9BC7 ED 73 E1 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9BCB F9               ld sp,hl
 407+ 9BCC
 408+ 9BCC DD E5            push ix                                         ; Rutina de impresión.
 409+ 9BCE F5               push af                                         ; Puntero de impresión.
 410+ 9BCF FD E5            push iy                                         ; Puntero objeto.
 411+ 9BD1 C5               push bc                                         ; Control.
 412+ 9BD2
 413+ 9BD2 ED 7B E1 89      ld sp,(Stack)
 414+ 9BD6
 415+ 9BD6              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9BD6
 417+ 9BD6 21 D0 89     	ld hl,Ctrl_1
 418+ 9BD9 CB C6        	set 0,(hl)
 419+ 9BDB
 420+ 9BDB DD E5        	push ix
 421+ 9BDD E1               pop hl
 422+ 9BDE F5               push af
 423+ 9BDF DD E1            pop ix
 424+ 9BE1
 425+ 9BE1 CD BF 80     	call Guarda_foto_registros
 426+ 9BE4
 427+ 9BE4 21 D0 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9BE7 CB 86        	res 0,(hl)
 429+ 9BE9
 430+ 9BE9              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9BE9              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9BE9
 433+ 9BE9 CD EF 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9BEC CD E8 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9BEF
 436+ 9BEF C9           4 ret
 437+ 9BF0
 438+ 9BF0              ; ----------------------------------------------------------------
 439+ 9BF0              ;
 440+ 9BF0              ;   4/3/23
 441+ 9BF0              ;
 442+ 9BF0              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9BF0              ;   _ al generarse el disparo.
 444+ 9BF0              ;
 445+ 9BF0              ;       "$80" ..... No se produce colisión.
 446+ 9BF0              ;       "$81" ..... Se produce colisión.
 447+ 9BF0              ;
 448+ 9BF0              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9BF0              ;         _ que forman el disparo.
 450+ 9BF0
 451+ 9BF0
 452+ 9BF0              Comprueba_Colision
 453+ 9BF0
 454+ 9BF0              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9BF0
 456+ 9BF0 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9BF2 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9BF3
 459+ 9BF3 CD 29 9C         call Modifica_H_Velocidad_disparo
 460+ 9BF6
 461+ 9BF6 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9BF7 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9BF9 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9BFB
 465+ 9BFB 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9BFD CD 19 9C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9C00
 468+ 9C00 7B               ld a,e
 469+ 9C01 E6 01            and 1
 470+ 9C03 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9C05              ;                                                  ; _ para activar IMPACTO.
 472+ 9C05 E1               pop hl
 473+ 9C06 E5               push hl
 474+ 9C07 CD 9F 92         call NextScan
 475+ 9C0A
 476+ 9C0A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9C0B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9C0D 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9C0F              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9C0F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9C11 CD 19 9C         call Bucle_2
 482+ 9C14
 483+ 9C14 43           1 ld b,e
 484+ 9C15 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9C16 FD E1            pop iy
 486+ 9C18 C9               ret
 487+ 9C19
 488+ 9C19              ; ---------- ----------
 489+ 9C19
 490+ 9C19 06 02        Bucle_2 ld b,2
 491+ 9C1B FD 7E 00     2 ld a,(iy)
 492+ 9C1E A6               and (hl)
 493+ 9C1F 28 02            jr z,1F
 494+ 9C21 1E 81            ld e,$81
 495+ 9C23 23           1 inc hl
 496+ 9C24 FD 23            inc iy
 497+ 9C26 10 F3            djnz 2B
 498+ 9C28 C9               ret
 499+ 9C29
 500+ 9C29              ; ---------- ----------
 501+ 9C29              ;
 502+ 9C29              ;   21/7/23
 503+ 9C29
 504+ 9C29              Modifica_H_Velocidad_disparo
 505+ 9C29
 506+ 9C29 3A 01 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9C2C FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9C2E D0               ret nc                                         ; _ incrementamos H.
 509+ 9C2F 24               inc h
 510+ 9C30
 511+ 9C30 C9               ret
 512+ 9C31
 513+ 9C31              ; -------------------------------------------------------------------------------------------------------------
 514+ 9C31              ;
 515+ 9C31              ;   04/12/23
 516+ 9C31              ;
 517+ 9C31              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9C31              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9C31              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9C31              ;
 521+ 9C31              ;   MODIFICA: HL,DE,B y A.
 522+ 9C31
 523+ 9C31              Genera_coordenadas_X
 524+ 9C31
 525+ 9C31              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9C31              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9C31
 528+ 9C31              ;   Limpiamos almacenes.
 529+ 9C31
 530+ 9C31 CD 62 9C         call Limpia_Coordenadas_X
 531+ 9C34
 532+ 9C34              ;   Almacenamos coordenadas X.
 533+ 9C34
 534+ 9C34              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9C34
 536+ 9C34 2A A7 89         ld hl,(Puntero_de_impresion)
 537+ 9C37 11 FE 89         ld de,Coordenadas_X_Entidad
 538+ 9C3A 06 02            ld b,2
 539+ 9C3C
 540+ 9C3C 3A 93 89         ld a,(CTRL_DESPLZ)
 541+ 9C3F A7               and a
 542+ 9C40 28 01            jr z,1F
 543+ 9C42 04               inc b
 544+ 9C43
 545+ 9C43 CD 59 9C     1 call Guarda_coordenadas_X
 546+ 9C46
 547+ 9C46              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9C46
 549+ 9C46 2A 13 87         ld hl,(p.imp.amadeus)
 550+ 9C49 11 FB 89         ld de,Coordenadas_X_Amadeus
 551+ 9C4C 06 02            ld b,2
 552+ 9C4E
 553+ 9C4E 3A FF 86         ld a,(ctrl_desplz_amadeus)
 554+ 9C51 A7               and a
 555+ 9C52 28 01            jr z,2F
 556+ 9C54 04               inc b
 557+ 9C55
 558+ 9C55 CD 59 9C     2 call Guarda_coordenadas_X
 559+ 9C58
 560+ 9C58              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9C58
 562+ 9C58 C9               ret
 563+ 9C59
 564+ 9C59              ; ----- ----- ----- ----- -----
 565+ 9C59
 566+ 9C59 7D           Guarda_coordenadas_X  ld a,l
 567+ 9C5A E6 1F            and $1f
 568+ 9C5C 12           1 ld (de),a
 569+ 9C5D 3C               inc a
 570+ 9C5E 13               inc de
 571+ 9C5F 10 FB            djnz 1B
 572+ 9C61 C9               ret
 573+ 9C62
 574+ 9C62 AF           Limpia_Coordenadas_X xor a
 575+ 9C63 06 06            ld b,6
 576+ 9C65 21 FB 89         ld hl,Coordenadas_X_Amadeus
 577+ 9C68 77           1 ld (hl),a
 578+ 9C69 23               inc hl
 579+ 9C6A 10 FC            djnz 1B
 580+ 9C6C C9               ret
 581+ 9C6D
 582+ 9C6D              ; ----- ----- ----- ----- -----
 583+ 9C6D
 584+ 9C6D              Compara_coordenadas_X
 585+ 9C6D
 586+ 9C6D 06 03            ld b,3
 587+ 9C6F 11 00 8A         ld de,Coordenadas_X_Entidad+2
 588+ 9C72
 589+ 9C72 1A               ld a,(de)
 590+ 9C73 A7               and a
 591+ 9C74 20 01            jr nz,2F
 592+ 9C76 05               dec b
 593+ 9C77
 594+ 9C77 1B           2 dec de
 595+ 9C78 1B               dec de
 596+ 9C79 21 FB 89         ld hl,Coordenadas_X_Amadeus
 597+ 9C7C
 598+ 9C7C D5           1 push de
 599+ 9C7D E5               push hl
 600+ 9C7E C5               push bc
 601+ 9C7F
 602+ 9C7F CD 89 9C         call Comparando
 603+ 9C82
 604+ 9C82 C1               pop bc
 605+ 9C83 E1               pop hl
 606+ 9C84 D1               pop de
 607+ 9C85
 608+ 9C85 13               inc de
 609+ 9C86 10 F4            djnz 1B
 610+ 9C88
 611+ 9C88 C9               ret
 612+ 9C89
 613+ 9C89              ; ----- ----- ----- ----- -----
 614+ 9C89              ;
 615+ 9C89              ;   4/12/23
 616+ 9C89              ;
 617+ 9C89              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9C89
 619+ 9C89 06 03        Comparando ld b,3
 620+ 9C8B 1A               ld a,(de)
 621+ 9C8C 4E           2 ld c,(hl)
 622+ 9C8D B9               cp c
 623+ 9C8E 28 04            jr z,1F
 624+ 9C90 23               inc hl
 625+ 9C91 10 F9            djnz 2B
 626+ 9C93 C9               ret
 627+ 9C94
 628+ 9C94 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9C96 32 A0 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9C99 21 F6 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9C9C CB D6            set 2,(hl)
 632+ 9C9E C9               ret
 633+ 9C9F
 634+ 9C9F              ; -----------------------------------------------------------------------
 635+ 9C9F              ;
 636+ 9C9F              ;   7/12/23
 637+ 9C9F              ;
 638+ 9C9F
 639+ 9C9F              Detecta_colision_nave_entidad
 640+ 9C9F
 641+ 9C9F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9C9F
 643+ 9C9F FD 2A 8F 89      ld iy,(Puntero_objeto)
 644+ 9CA3 2A A7 89         ld hl,(Puntero_de_impresion)
 645+ 9CA6
 646+ 9CA6 E5               push hl
 647+ 9CA7
 648+ 9CA7              ; ----- ----- -----
 649+ 9CA7 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9CA9 06 0A            ld b,10
 651+ 9CAB CD DB 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9CAE 7B               ld a,e
 653+ 9CAF FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9CB1 38 0E            jr c,3F
 655+ 9CB3
 656+ 9CB3              ; LLegados a este punto:
 657+ 9CB3              ;
 658+ 9CB3              ;   HAY COLISIÓN !!!!!.
 659+ 9CB3              ;
 660+ 9CB3              ;   .db (Impacto) de Amadeus a "1".
 661+ 9CB3              ;   SET el bit3 de (Impacto2).
 662+ 9CB3              ;
 663+ 9CB3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9CB3
 665+ 9CB3 21 A0 89         ld hl,Impacto
 666+ 9CB6 36 01            ld (hl),1
 667+ 9CB8 21 F6 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9CBB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9CBD CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9CBF
 671+ 9CBF 18 18            jr 1F
 672+ 9CC1
 673+ 9CC1              ; -----
 674+ 9CC1
 675+ 9CC1 E1           3 pop hl
 676+ 9CC2 CD 9F 92         call NextScan
 677+ 9CC5 E5               push hl
 678+ 9CC6 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9CC7 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9CC9 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9CCB 30 0C            jr nc,1F
 682+ 9CCD              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9CCD 10 DC            djnz 2B
 684+ 9CCF
 685+ 9CCF              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9CCF
 687+ 9CCF              ; LLegados a este punto:
 688+ 9CCF              ;
 689+ 9CCF              ;   NO HAY COLISIÓN !!!!!.
 690+ 9CCF              ;
 691+ 9CCF              ;   .db (Impacto) de Amadeus a "0".
 692+ 9CCF              ;   RES el bit2 de (Impacto2).
 693+ 9CCF              ;
 694+ 9CCF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9CCF              ;   Lo colocamos a "0".
 696+ 9CCF
 697+ 9CCF 21 F6 89         ld hl,Impacto2
 698+ 9CD2 CB 96            res 2,(hl)
 699+ 9CD4 2A F7 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9CD7 36 00            ld (hl),0
 701+ 9CD9
 702+ 9CD9 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9CDA C9               ret
 704+ 9CDB
 705+ 9CDB               ; ---------- ----------
 706+ 9CDB
 707+ 9CDB C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9CDC 3A 8C 89         ld a,(Columns)
 709+ 9CDF 47               ld b,a
 710+ 9CE0 FD 7E 00     2 ld a,(iy)
 711+ 9CE3 BE               cp (hl)
 712+ 9CE4 28 01            jr z,1F
 713+ 9CE6
 714+ 9CE6 1C               inc e
 715+ 9CE7
 716+ 9CE7 23           1 inc hl
 717+ 9CE8 FD 23            inc iy
 718+ 9CEA 10 F4            djnz 2B
 719+ 9CEC C1               pop bc
 720+ 9CED C9               ret
 721+ 9CEE
 722+ 9CEE              ; -------------------------------------------------------------------------------------------------------------
 723+ 9CEE              ;
 724+ 9CEE              ;   13/03/23
 725+ 9CEE              ;
 726+ 9CEE              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9CEE              ;
 728+ 9CEE              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9CEE
 730+ 9CEE 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9CF1 7E               ld a,(hl)
 732+ 9CF2 A7               and a
 733+ 9CF3 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9CF4
 735+ 9CF4 44               ld b,h
 736+ 9CF5 4D               ld c,l
 737+ 9CF6 2A E9 89         ld hl,(Stack_snapshot_disparos)
 738+ 9CF9 E5               push hl
 739+ 9CFA A7               and a
 740+ 9CFB ED 42            sbc hl,bc
 741+ 9CFD E5               push hl
 742+ 9CFE C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9CFF
 744+ 9CFF E1               pop hl
 745+ 9D00 54               ld d,h
 746+ 9D01 5D               ld e,l
 747+ 9D02 1B               dec de
 748+ 9D03 ED B8            lddr                                                ; Limpiamos.
 749+ 9D05
 750+ 9D05 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9D08 22 E9 89         ld (Stack_snapshot_disparos),hl
 752+ 9D0B
 753+ 9D0B C9               ret
 754+ 9D0C
 755+ 9D0C              ; -------------------------------------------------------------------------------------------------------------
 756+ 9D0C              ;
 757+ 9D0C              ;   18/07/23
 758+ 9D0C              ;
 759+ 9D0C
 760+ 9D0C              Motor_de_disparos
 761+ 9D0C
 762+ 9D0C              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9D0C
 764+ 9D0C 01 7A 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9D0F 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9D12
 767+ 9D12 CD 6A 8C     2 call Extrae_address
 768+ 9D15 7E               ld a,(hl)
 769+ 9D16 A7               and a
 770+ 9D17 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9D19
 772+ 9D19              ; ----- ----- ----- ----- ----- -----
 773+ 9D19
 774+ 9D19 C5               push bc
 775+ 9D1A CD DE 9D         call foto_disparo_a_borrar
 776+ 9D1D
 777+ 9D1D              ; Existe colisión con este disparo???
 778+ 9D1D
 779+ 9D1D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9D1E 7E               ld a,(hl)
 781+ 9D1F 2B               dec hl
 782+ 9D20 E6 01            and 1
 783+ 9D22 28 1D            jr z,9F
 784+ 9D24
 785+ 9D24              ;   En este punto:
 786+ 9D24              ;
 787+ 9D24              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9D24              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9D24              ;   _con la entidad).
 790+ 9D24              ;
 791+ 9D24              ;   Disparo_2A defw 0                                ; Control.
 792+ 9D24              ;    defw 0                                          ; Puntero objeto.
 793+ 9D24              ;    defw 0                                          ; Puntero de impresión.
 794+ 9D24              ;    defw 0                                          ; Rutina de impresión.
 795+ 9D24
 796+ 9D24 E5               push hl
 797+ 9D25
 798+ 9D25 06 04            ld b,4
 799+ 9D27 23           19 inc hl
 800+ 9D28 10 FD            djnz 19B
 801+ 9D2A
 802+ 9D2A CD 6A 8C         call Extrae_address
 803+ 9D2D CD C1 9F         call Genera_coordenadas_disparo
 804+ 9D30
 805+ 9D30              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9D30
 807+ 9D30 21 F9 89         ld hl,Coordenadas_disparo_certero
 808+ 9D33 72               ld (hl),d
 809+ 9D34 23               inc hl
 810+ 9D35 73               ld (hl),e
 811+ 9D36
 812+ 9D36              ; Elimino el disparo de la base de datos.
 813+ 9D36
 814+ 9D36 E1               pop hl
 815+ 9D37 CD 5D 9E         call Elimina_disparo_de_base_de_datos
 816+ 9D3A 21 F6 89         ld hl,Impacto2
 817+ 9D3D CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9D3F
 819+ 9D3F 18 06            jr 11F
 820+ 9D41
 821+ 9D41 CD 07 9E     9 call Mueve_disparo
 822+ 9D44 CD DE 9D         call foto_disparo_a_borrar
 823+ 9D47
 824+ 9D47 C1           11 pop bc
 825+ 9D48 18 04            jr 7F
 826+ 9D4A
 827+ 9D4A              ; ----- ----- ----- ----- ----- -----
 828+ 9D4A
 829+ 9D4A ED 42        1 sbc hl,bc
 830+ 9D4C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9D4E
 832+ 9D4E 2A F4 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9D51 23               inc hl
 834+ 9D52 23               inc hl
 835+ 9D53 22 F4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9D56 18 BA            jr 2B
 837+ 9D58
 838+ 9D58 CD EF 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9D5B              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9D5B
 841+ 9D5B              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9D5B
 843+ 9D5B 01 E2 86         ld bc,Disparo_11
 844+ 9D5E 2A F2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9D61
 846+ 9D61 CD 6A 8C     5 call Extrae_address
 847+ 9D64 7E               ld a,(hl)
 848+ 9D65 A7               and a
 849+ 9D66 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9D68
 851+ 9D68              ; ----- ----- ----- ----- ----- -----
 852+ 9D68
 853+ 9D68 C5               push bc
 854+ 9D69 CD DE 9D         call foto_disparo_a_borrar
 855+ 9D6C
 856+ 9D6C              ; Existe colisión con este disparo???
 857+ 9D6C
 858+ 9D6C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9D6D 7E               ld a,(hl)
 860+ 9D6E 2B               dec hl
 861+ 9D6F E6 01            and 1
 862+ 9D71 28 4D            jr z,10F
 863+ 9D73
 864+ 9D73              ;! La colisión se produce con Amadeus???
 865+ 9D73              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9D73
 867+ 9D73 E5               push hl
 868+ 9D74
 869+ 9D74 06 04            ld b,4
 870+ 9D76 23           16 inc hl
 871+ 9D77 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9D79
 873+ 9D79 CD 6A 8C         call Extrae_address
 874+ 9D7C CD C1 9F         call Genera_coordenadas_disparo
 875+ 9D7F
 876+ 9D7F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9D80 FE 16            cp $16
 878+ 9D82 38 2A            jr c,15F
 879+ 9D84
 880+ 9D84
 881+ 9D84              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9D84
 883+ 9D84 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9D85
 885+ 9D85              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9D85
 887+ 9D85 2A 13 87         ld hl,(p.imp.amadeus)
 888+ 9D88
 889+ 9D88              ; Coordenada X de Amadeus en D.
 890+ 9D88
 891+ 9D88 7D               ld a,l
 892+ 9D89 E6 1F            and $1F
 893+ 9D8B 57               ld d,a
 894+ 9D8C
 895+ 9D8C 21 FE 86         ld hl,Amadeus_db+8
 896+ 9D8F 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9D90
 898+ 9D90 21 FB 89         ld hl,Coordenadas_X_Amadeus
 899+ 9D93 CD 59 9C         call Guarda_coordenadas_X
 900+ 9D96
 901+ 9D96 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9D97
 903+ 9D97              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9D97
 905+ 9D97 06 02            ld b,2
 906+ 9D99 C5           20 push bc
 907+ 9D9A
 908+ 9D9A 06 03            ld b,3
 909+ 9D9C 21 FB 89         ld hl,Coordenadas_X_Amadeus
 910+ 9D9F 7E           18 ld a,(hl)
 911+ 9DA0 BA               cp d
 912+ 9DA1 20 04            jr nz,17F
 913+ 9DA3
 914+ 9DA3              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9DA3
 916+ 9DA3 C1               pop bc
 917+ 9DA4 E1               pop hl
 918+ 9DA5 18 0D            jr 14F
 919+ 9DA7
 920+ 9DA7 23           17 inc hl
 921+ 9DA8 10 F5            djnz 18B
 922+ 9DAA
 923+ 9DAA 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9DAB
 925+ 9DAB C1               pop bc
 926+ 9DAC 10 EB            djnz 20B
 927+ 9DAE
 928+ 9DAE
 929+ 9DAE              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9DAE              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9DAE
 932+ 9DAE E1           15 pop hl
 933+ 9DAF 23               inc hl
 934+ 9DB0 35               dec (hl)
 935+ 9DB1 2B               dec hl
 936+ 9DB2 18 0C            jr 10F
 937+ 9DB4
 938+ 9DB4              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9DB4              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9DB4
 941+ 9DB4 E5           14 push hl
 942+ 9DB5 CD 5D 9E         call Elimina_disparo_de_base_de_datos
 943+ 9DB8 21 F6 89         ld hl,Impacto2
 944+ 9DBB CB CE            set 1,(hl)
 945+ 9DBD E1               pop hl
 946+ 9DBE 18 06            jr 12F
 947+ 9DC0
 948+ 9DC0              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9DC0
 950+ 9DC0 CD 07 9E     10 call Mueve_disparo
 951+ 9DC3 CD DE 9D         call foto_disparo_a_borrar
 952+ 9DC6 C1           12 pop bc
 953+ 9DC7
 954+ 9DC7 18 04            jr 8F
 955+ 9DC9
 956+ 9DC9              ; ----- ----- ----- ----- ----- -----
 957+ 9DC9
 958+ 9DC9 ED 42        4 sbc hl,bc
 959+ 9DCB 28 0A            jr z,6F
 960+ 9DCD
 961+ 9DCD 2A F2 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9DD0 23               inc hl
 963+ 9DD1 23               inc hl
 964+ 9DD2 22 F2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9DD5 18 8A            jr 5B
 966+ 9DD7
 967+ 9DD7 CD E8 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9DDA CD 62 9C         call Limpia_Coordenadas_X
 969+ 9DDD C9               ret
 970+ 9DDE
 971+ 9DDE              ; ------------------------------------------------------------------
 972+ 9DDE
 973+ 9DDE              foto_disparo_a_borrar
 974+ 9DDE
 975+ 9DDE 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9DDF A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9DE0 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9DE1
 979+ 9DE1 E5               push hl
 980+ 9DE2 23               inc hl
 981+ 9DE3 23               inc hl
 982+ 9DE4 ED 73 E1 89      ld (Stack),sp
 983+ 9DE8 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9DE9 FD E1            pop iy
 985+ 9DEB DD E1            pop ix
 986+ 9DED E1               pop hl
 987+ 9DEE ED 7B E1 89      ld sp,(Stack)
 988+ 9DF2 3A D0 89         ld a,(Ctrl_1)
 989+ 9DF5 CB C7            set 0,a
 990+ 9DF7 32 D0 89         ld (Ctrl_1),a
 991+ 9DFA CD BF 80         call Guarda_foto_registros
 992+ 9DFD 3A D0 89         ld a,(Ctrl_1)
 993+ 9E00 CB 87            res 0,a
 994+ 9E02 32 D0 89         ld (Ctrl_1),a
 995+ 9E05 E1               pop hl
 996+ 9E06 C9               ret
 997+ 9E07
 998+ 9E07              ;---------------------------------------------------
 999+ 9E07              ;
1000+ 9E07              ;   18/07/23
1001+ 9E07              ;
1002+ 9E07
1003+ 9E07              Mueve_disparo
1004+ 9E07
1005+ 9E07              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9E07              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9E07              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9E07
1009+ 9E07 E5               push hl
1010+ 9E08
1011+ 9E08 7E               ld a,(hl)
1012+ 9E09
1013+ 9E09 06 04            ld b,4
1014+ 9E0B 23           1 inc hl
1015+ 9E0C 10 FD            djnz 1B
1016+ 9E0E
1017+ 9E0E              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9E0E
1019+ 9E0E CD 6A 8C         call Extrae_address
1020+ 9E11
1021+ 9E11 E6 01            and 1
1022+ 9E13 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9E15
1024+ 9E15              ; Disparo hacia arriba, (Amadeus).
1025+ 9E15
1026+ 9E15              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9E15              ; _ de la dificultad.
1028+ 9E15
1029+ 9E15 CD AE 92         call PreviousScan
1030+ 9E18 CD AE 92         call PreviousScan
1031+ 9E1B CD AE 92         call PreviousScan
1032+ 9E1E CD AE 92         call PreviousScan
1033+ 9E21
1034+ 9E21              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9E21
1036+ 9E21 7C               ld a,h
1037+ 9E22 FE 40            cp $40
1038+ 9E24 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9E26
1040+ 9E26              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9E26
1042+ 9E26 EB               ex de,hl
1043+ 9E27 06 04            ld b,4
1044+ 9E29 2B           6 dec hl
1045+ 9E2A 10 FD            djnz 6B
1046+ 9E2C
1047+ 9E2C CD 5D 9E         call Elimina_disparo_de_base_de_datos
1048+ 9E2F E1               pop hl
1049+ 9E30 18 10            jr 7F
1050+ 9E32
1051+ 9E32              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9E32              ; HL contiene el puntero de impresión del disparo.
1053+ 9E32              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9E32
1055+ 9E32 D5           3 push de
1056+ 9E33 C5               push bc
1057+ 9E34
1058+ 9E34 CD F0 9B         call Comprueba_Colision
1059+ 9E37
1060+ 9E37              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9E37
1062+ 9E37 78               ld a,b
1063+ 9E38
1064+ 9E38 C1               pop bc
1065+ 9E39 D1               pop de
1066+ 9E3A
1067+ 9E3A EB               ex de,hl
1068+ 9E3B
1069+ 9E3B 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9E3C 23               inc hl                                      ; _ movimiento.
1071+ 9E3D 72               ld (hl),d
1072+ 9E3E
1073+ 9E3E E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9E3F
1075+ 9E3F 23               inc hl                                      ; _ en curso.
1076+ 9E40 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9E41 2B               dec hl
1078+ 9E42
1079+ 9E42 C9           7 ret
1080+ 9E43
1081+ 9E43              ; Disparo hacia abajo, (Entidad).
1082+ 9E43
1083+ 9E43 3A 01 8A     2 ld a,(Velocidad_disparo_entidades)
1084+ 9E46 47               ld b,a
1085+ 9E47
1086+ 9E47 CD 9F 92     4 call NextScan
1087+ 9E4A 10 FB            djnz 4B
1088+ 9E4C
1089+ 9E4C              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9E4C
1091+ 9E4C 7C               ld a,h
1092+ 9E4D FE 58            cp $58
1093+ 9E4F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9E51
1095+ 9E51 EB               ex de,hl
1096+ 9E52 06 04            ld b,4
1097+ 9E54 2B           5 dec hl
1098+ 9E55 10 FD            djnz 5B
1099+ 9E57
1100+ 9E57 CD 5D 9E         call Elimina_disparo_de_base_de_datos
1101+ 9E5A E1               pop hl
1102+ 9E5B 18 E5            jr 7B
1103+ 9E5D
1104+ 9E5D              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9E5D
1106+ 9E5D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9E60 AF               xor a
1108+ 9E61 77               ld (hl),a
1109+ 9E62 54               ld d,h
1110+ 9E63 5D               ld e,l
1111+ 9E64 13               inc de
1112+ 9E65 ED B0            ldir
1113+ 9E67 C9               ret
1114+ 9E68
1115+ 9E68              ; -----------------------------------------------------------------
1116+ 9E68              ;
1117+ 9E68              ;   7/12/23
1118+ 9E68              ;
1119+ 9E68
1120+ 9E68 3A F6 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9E6B A7               and a
1122+ 9E6C C8               ret z
1123+ 9E6D
1124+ 9E6D              ; Analizamos si hay impacto por disparos.
1125+ 9E6D
1126+ 9E6D              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9E6D
1128+ 9E6D CB 4F            bit 1,a
1129+ 9E6F 28 07            jr z,1F
1130+ 9E71
1131+ 9E71 21 0F 87         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9E74 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9E76 18 08            jr 2F
1134+ 9E78
1135+ 9E78 CB 47        1 bit 0,a
1136+ 9E7A C8               ret z
1137+ 9E7B
1138+ 9E7B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9E7B
1140+ 9E7B 21 D0 89         ld hl,Ctrl_1
1141+ 9E7E CB D6            set 2,(hl)
1142+ 9E80
1143+ 9E80 C9           2 ret
1144+ 9E81
1145+ 9E81              ; -----------------------------------------------------------------
1146+ 9E81              ;
1147+ 9E81              ;   25/04/23
1148+ 9E81              ;
1149+ 9E81
1150+ 9E81              Determina_resultado_comparativa
1151+ 9E81
1152+ 9E81              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9E81              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9E81              ;
1155+ 9E81              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9E81              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9E81              ;
1158+ 9E81              ;   SBC HL,DE
1159+ 9E81
1160+ 9E81              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9E81              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9E81
1163+ 9E81              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9E81              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9E81
1166+ 9E81
1167+ 9E81 3A 9F 89         ld a,(Cuad_objeto)
1168+ 9E84 FE 02            cp 2
1169+ 9E86 28 26            jr z,2F
1170+ 9E88 38 24            jr c,2F
1171+ 9E8A
1172+ 9E8A              ; Cuadrantes 3º y 4º
1173+ 9E8A
1174+ 9E8A E6 01            and 1
1175+ 9E8C 28 10            jr z,4F
1176+ 9E8E
1177+ 9E8E              ; Cuadrante 3º
1178+ 9E8E
1179+ 9E8E 7C               ld a,h
1180+ 9E8F 06 00            ld b,0
1181+ 9E91
1182+ 9E91 CD 1C 9F         call Compara_cositas_H3
1183+ 9E94
1184+ 9E94 04               inc b
1185+ 9E95 05               dec b
1186+ 9E96 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9E97
1188+ 9E97 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9E98 06 00            ld b,0
1190+ 9E9A
1191+ 9E9A CD 2E 9F         call Compara_cositas_L3
1192+ 9E9D C9               ret
1193+ 9E9E
1194+ 9E9E              ; Cuadrante 4º
1195+ 9E9E
1196+ 9E9E 7C           4 ld a,h
1197+ 9E9F 06 00            ld b,0
1198+ 9EA1
1199+ 9EA1 CD 40 9F         call Compara_cositas_H4
1200+ 9EA4
1201+ 9EA4 04               inc b
1202+ 9EA5 05               dec b
1203+ 9EA6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9EA7
1205+ 9EA7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9EA8 06 00            ld b,0
1207+ 9EAA
1208+ 9EAA CD 56 9F         call Compara_cositas_L4
1209+ 9EAD C9               ret
1210+ 9EAE
1211+ 9EAE              ; Cuadrantes 1º y 2º.
1212+ 9EAE
1213+ 9EAE 28 10        2 jr z,3F
1214+ 9EB0
1215+ 9EB0              ; 1er Cuadrante
1216+ 9EB0
1217+ 9EB0 7C               ld a,h
1218+ 9EB1 06 00            ld b,0
1219+ 9EB3
1220+ 9EB3 CD F4 9E         call Compara_cositas_H1
1221+ 9EB6
1222+ 9EB6 04               inc b
1223+ 9EB7 05               dec b
1224+ 9EB8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9EB9
1226+ 9EB9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9EBA 06 00            ld b,0
1228+ 9EBC
1229+ 9EBC CD 0A 9F         call Compara_cositas_L1
1230+ 9EBF C9               ret
1231+ 9EC0
1232+ 9EC0
1233+ 9EC0              ; 2º Cuadrante
1234+ 9EC0
1235+ 9EC0 7C           3 ld a,h
1236+ 9EC1 06 00            ld b,0
1237+ 9EC3
1238+ 9EC3 CD D0 9E         call Compara_cositas_H2
1239+ 9EC6
1240+ 9EC6 04               inc b
1241+ 9EC7 05               dec b
1242+ 9EC8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9EC9
1244+ 9EC9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9ECA 06 00            ld b,0
1246+ 9ECC
1247+ 9ECC CD E2 9E         call Compara_cositas_L2
1248+ 9ECF C9               ret
1249+ 9ED0
1250+ 9ED0 A7           Compara_cositas_H2 and a
1251+ 9ED1 28 0D            jr z,1F
1252+ 9ED3              ;    cp $fd
1253+ 9ED3              ;    jr z,1F
1254+ 9ED3              ;    cp $fe
1255+ 9ED3              ;    jr z,1F
1256+ 9ED3 FE FF            cp $ff
1257+ 9ED5 28 09            jr z,1F
1258+ 9ED7 FE 01            cp $01
1259+ 9ED9 28 05            jr z,1F
1260+ 9EDB FE 02            cp $02
1261+ 9EDD 28 01            jr z,1F
1262+ 9EDF C0               ret nz
1263+ 9EE0 04           1 inc b
1264+ 9EE1 C9               ret
1265+ 9EE2
1266+ 9EE2 A7           Compara_cositas_L2 and a
1267+ 9EE3 28 0D            jr z,1F
1268+ 9EE5              ;    cp $fd
1269+ 9EE5              ;    jr z,1F
1270+ 9EE5 FE FE            cp $fe
1271+ 9EE7 28 09            jr z,1F
1272+ 9EE9 FE FF            cp $ff
1273+ 9EEB 28 05            jr z,1F
1274+ 9EED FE 01            cp $01
1275+ 9EEF 28 01            jr z,1F
1276+ 9EF1              ;    cp $02
1277+ 9EF1              ;    jr z,1F
1278+ 9EF1 C0               ret nz
1279+ 9EF2 04           1 inc b
1280+ 9EF3 C9               ret
1281+ 9EF4
1282+ 9EF4 A7           Compara_cositas_H1 and a
1283+ 9EF5 28 11            jr z,1F
1284+ 9EF7              ;    cp $fd
1285+ 9EF7              ;    jr z,1F
1286+ 9EF7              ;    cp $fe
1287+ 9EF7              ;    jr z,1F
1288+ 9EF7 FE FF            cp $ff
1289+ 9EF9 28 0D            jr z,1F
1290+ 9EFB FE 01            cp $01
1291+ 9EFD 28 09            jr z,1F
1292+ 9EFF FE 02            cp $02
1293+ 9F01 28 05            jr z,1F
1294+ 9F03 FE 03            cp $03
1295+ 9F05 28 01            jr z,1F
1296+ 9F07 C0               ret nz
1297+ 9F08 04           1 inc b
1298+ 9F09 C9               ret
1299+ 9F0A
1300+ 9F0A A7           Compara_cositas_L1 and a
1301+ 9F0B 28 0D            jr z,1F
1302+ 9F0D              ;    cp $fd
1303+ 9F0D              ;    jr z,1F
1304+ 9F0D              ;    cp $fe
1305+ 9F0D              ;    jr z,1F
1306+ 9F0D              ;    cp $ff
1307+ 9F0D              ;    jr z,1F
1308+ 9F0D FE 01            cp $01
1309+ 9F0F 28 09            jr z,1F
1310+ 9F11 FE 02            cp $02
1311+ 9F13 28 05            jr z,1F
1312+ 9F15 FE 03            cp $03
1313+ 9F17 28 01            jr z,1F
1314+ 9F19 C0               ret nz
1315+ 9F1A 04           1 inc b
1316+ 9F1B C9               ret
1317+ 9F1C
1318+ 9F1C A7           Compara_cositas_H3 and a
1319+ 9F1D 28 0D            jr z,1F
1320+ 9F1F              ;    cp $fd
1321+ 9F1F              ;    jr z,1F
1322+ 9F1F FE FE            cp $fe
1323+ 9F21 28 09            jr z,1F
1324+ 9F23 FE FF            cp $ff
1325+ 9F25 28 05            jr z,1F
1326+ 9F27 FE 01            cp $01
1327+ 9F29 28 01            jr z,1F
1328+ 9F2B              ;    cp $02
1329+ 9F2B              ;    jr z,1F
1330+ 9F2B              ;    cp $03
1331+ 9F2B              ;    jr z,1F
1332+ 9F2B C0               ret nz
1333+ 9F2C 04           1 inc b
1334+ 9F2D C9               ret
1335+ 9F2E
1336+ 9F2E A7           Compara_cositas_L3 and a
1337+ 9F2F 28 0D            jr z,1F
1338+ 9F31              ;    cp $fd
1339+ 9F31              ;    jr z,1F
1340+ 9F31              ;    cp $fe
1341+ 9F31              ;    jr z,1F
1342+ 9F31              ;    cp $ff
1343+ 9F31              ;    jr z,1F
1344+ 9F31 FE 01            cp $01
1345+ 9F33 28 09            jr z,1F
1346+ 9F35 FE 02            cp $02
1347+ 9F37 28 05            jr z,1F
1348+ 9F39 FE 03            cp $03
1349+ 9F3B 28 01            jr z,1F
1350+ 9F3D C0               ret nz
1351+ 9F3E 04           1 inc b
1352+ 9F3F C9               ret
1353+ 9F40
1354+ 9F40 A7           Compara_cositas_H4 and a
1355+ 9F41 28 11            jr z,1F
1356+ 9F43 FE FD            cp $fd
1357+ 9F45 28 0D            jr z,1F
1358+ 9F47 FE FE            cp $fe
1359+ 9F49 28 09            jr z,1F
1360+ 9F4B FE FF            cp $ff
1361+ 9F4D 28 05            jr z,1F
1362+ 9F4F FE 01            cp $01
1363+ 9F51 28 01            jr z,1F
1364+ 9F53              ;    cp $02
1365+ 9F53              ;    jr z,1F
1366+ 9F53              ;    cp $03
1367+ 9F53              ;    jr z,1F
1368+ 9F53 C0               ret nz
1369+ 9F54 04           1 inc b
1370+ 9F55 C9               ret
1371+ 9F56
1372+ 9F56 A7           Compara_cositas_L4 and a
1373+ 9F57 28 0D            jr z,1F
1374+ 9F59              ;    cp $fd
1375+ 9F59              ;    jr z,1F
1376+ 9F59 FE FE            cp $fe
1377+ 9F5B 28 09            jr z,1F
1378+ 9F5D FE FF            cp $ff
1379+ 9F5F 28 05            jr z,1F
1380+ 9F61 FE 01            cp $01
1381+ 9F63 28 01            jr z,1F
1382+ 9F65              ;    cp $02
1383+ 9F65              ;    jr z,1F
1384+ 9F65              ;    cp $03
1385+ 9F65              ;    jr z,1F
1386+ 9F65 C0               ret nz
1387+ 9F66 04           1 inc b
1388+ 9F67 C9               ret
# file closed: Disparo.asm
1863  9F68              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F68              ; Relojes y temporizaciones.
   2+ 9F68
   3+ 9F68              ; ------------------------------------------------------
   4+ 9F68              ;
   5+ 9F68              ;	16/7/23
   6+ 9F68              ;
   7+ 9F68              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F68              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F68              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F68              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F68              ;
  12+ 9F68              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F68              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F68
  15+ 9F68              ; Disparo_entidad db 1
  16+ 9F68              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F68              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F68
  19+ 9F68              Habilita_disparos
  20+ 9F68
  21+ 9F68 7E           	ld a,(hl)
  22+ 9F69 A7           	and a
  23+ 9F6A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F6B
  25+ 9F6B EB           	ex de,hl
  26+ 9F6C
  27+ 9F6C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F6D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F6E
  30+ 9F6E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F6E
  32+ 9F6E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F6F 7E           	ld a,(hl)
  34+ 9F70 23           	inc hl
  35+ 9F71 77           	ld (hl),a
  36+ 9F72
  37+ 9F72 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9F73 3E 01        	ld a,1
  39+ 9F75 77           	ld (hl),a
  40+ 9F76 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1864  9F77              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9F77              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9F77              ;
   3+ 9F77              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9F77              ;
   5+ 9F77              ; *****************************************************************************************************************************************************************************************
   6+ 9F77              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9F77
   8+ 9F77 7C           calcula_tercio ld a,h
   9+ 9F78 E6 18        	and $18
  10+ 9F7A CB 2F        	sra a
  11+ 9F7C CB 2F        	sra a
  12+ 9F7E CB 2F        	sra a
  13+ 9F80 C9           	ret
  14+ 9F81
# file closed: calcula_tercio.asm
1865  9F81              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9F81              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9F81              ;
   3+ 9F81              ;
   4+ 9F81              ;	CLS.
   5+ 9F81              ;
   6+ 9F81              ;	Limpia la pantalla y define sus atributos.
   7+ 9F81              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9F81              ;
   9+ 9F81              ;	COLORES: 0 ..... NEGRO
  10+ 9F81              ;    		 1 ..... AZUL
  11+ 9F81              ; 			 2 ..... ROJO
  12+ 9F81              ;			 3 ..... MAGENTA
  13+ 9F81              ; 			 4 ..... VERDE
  14+ 9F81              ; 			 5 ..... CIAN
  15+ 9F81              ;			 6 ..... AMARILLO
  16+ 9F81              ; 			 7 ..... BLANCO
  17+ 9F81              ;
  18+ 9F81              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9F81              ;
  20+ 9F81              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9F81
  22+ 9F81
  23+ 9F81 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9F84 11 01 40     	LD DE,$4001
  25+ 9F87 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9F8A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9F8C ED B0        	LDIR
  28+ 9F8E 01 FF 02     	LD BC,767
  29+ 9F91 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9F92 ED B0        	LDIR
  31+ 9F94 C9           	ret
  32+ 9F95
# file closed: Cls.asm
1866  9F95              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9F95              ; ------------------------------------------------------------------------
   2+ 9F95              ;
   3+ 9F95              ;	30/1/24
   4+ 9F95              ;
   5+ 9F95              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9F95              ;	Fila superior "0", Columna izquierda "0".
   7+ 9F95              ;
   8+ 9F95              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9F95              ;
  10+ 9F95              ;	Modifica: A,BC y DE.
  11+ 9F95
  12+ 9F95 7D           Genera_coordenadas ld a,l
  13+ 9F96 E6 1F        	and $1f
  14+ 9F98 32 91 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9F9B
  16+ 9F9B 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9F9C FE 40        	cp $40
  18+ 9F9E 38 1C        	jr c,4F
  19+ 9FA0
  20+ 9FA0 CD 77 9F     	call calcula_tercio
  21+ 9FA3 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9FA4
  23+ 9FA4 1E 00        	ld e,0
  24+ 9FA6 7D           	ld a,l
  25+ 9FA7 E6 E0        	and $e0
  26+ 9FA9 28 01        	jr z,1F
  27+ 9FAB 04           	inc b
  28+ 9FAC
  29+ 9FAC 04           1 inc b
  30+ 9FAD 05           	dec b
  31+ 9FAE 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9FB0              ;														; _ , salimos.
  33+ 9FB0 1C           3 inc e
  34+ 9FB1 D6 20        	sub 32
  35+ 9FB3 20 FB        	jr nz,3B
  36+ 9FB5 10 F5        	djnz 1B
  37+ 9FB7
  38+ 9FB7 7B           2 ld a,e
  39+ 9FB8 32 92 89     	ld (Coordenada_y),a
  40+ 9FBB C9           	ret
  41+ 9FBC
  42+ 9FBC AF           4 xor a
  43+ 9FBD 32 92 89     	ld (Coordenada_y),a
  44+ 9FC0 C9           	ret
  45+ 9FC1
  46+ 9FC1              ; ------------------------------------------------------------------------
  47+ 9FC1              ;	28/05/23
  48+ 9FC1              ;
  49+ 9FC1              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9FC1              ;	Fila superior "0", Columna izquierda "0".
  51+ 9FC1              ;
  52+ 9FC1              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9FC1              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9FC1              ;
  55+ 9FC1              ;		DE="$120d"
  56+ 9FC1              ;
  57+ 9FC1              ;		D, (Coordenada_X), Columnas, $12
  58+ 9FC1              ;		E, (Coordenada_y), Filas, $0d
  59+ 9FC1              ;
  60+ 9FC1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9FC1
  62+ 9FC1              ;	Modifica: A,BC y DE.
  63+ 9FC1
  64+ 9FC1
  65+ 9FC1              Genera_coordenadas_disparo
  66+ 9FC1
  67+ 9FC1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9FC1
  69+ 9FC1 7D           	ld a,l
  70+ 9FC2 E6 1F        	and $1f
  71+ 9FC4 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9FC5 CD 77 9F     	call calcula_tercio
  73+ 9FC8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9FC9 1E 00        	ld e,0
  75+ 9FCB 7D           	ld a,l
  76+ 9FCC E6 E0        	and $e0
  77+ 9FCE 28 01        	jr z,1F
  78+ 9FD0 04           	inc b
  79+ 9FD1 1C           1 inc e
  80+ 9FD2 D6 20        	sub 32
  81+ 9FD4 20 FB        	jr nz,1B
  82+ 9FD6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9FD8 C9           	ret
  84+ 9FD9
# file closed: Genera_coordenadas.asm
1867  9FD9              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FD9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FD9              ;
   3+ 9FD9              ;	12/12/23
   4+ 9FD9              ;
   5+ 9FD9              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FD9
   7+ 9FD9              ;	ADC HL,SP	LD (addr),SP
   8+ 9FD9              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FD9              ;	ADD IX,SP	LD SP,nn
  10+ 9FD9              ; 	ADD IY,SP	LD SP,HL
  11+ 9FD9              ;				LD SP,IX
  12+ 9FD9              ;	DEC SP		LD SP,IY
  13+ 9FD9
  14+ 9FD9              ;	EX (SP),HL
  15+ 9FD9              ;	EX (SP),IX
  16+ 9FD9              ;	EX (SP),IY
  17+ 9FD9
  18+ 9FD9              ;	INC SP
  19+ 9FD9
  20+ 9FD9                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 E1 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3              ;    ld sp,Variables_de_borrado+6
  39+ 80C3
  40+ 80C3              ;    push hl
  41+ 80C3              ;    push ix
  42+ 80C3              ;    push iy
  43+ 80C3
  44+ 80C3 31 A9 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80C8              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80C8
  48+ 80C8 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80CB
  50+ 80CB E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80CC DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80CE FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D0
  54+ 80D0              ; Disparo o entidad?
  55+ 80D0
  56+ 80D0 3A D0 89         ld a,(Ctrl_1)
  57+ 80D3 CB 47            bit 0,a
  58+ 80D5 28 05            jr z,2F
  59+ 80D7
  60+ 80D7 2A E9 89         ld hl,(Stack_snapshot_disparos)
  61+ 80DA 18 0F            jr 4F
  62+ 80DC
  63+ 80DC              ; No es disparo. Entidad/Amadeus ????
  64+ 80DC
  65+ 80DC 3A AD 89     2 ld a,(Ctrl_0)
  66+ 80DF CB 77            bit 6,a
  67+ 80E1 28 05            jr z,7F
  68+ 80E3
  69+ 80E3              ; Guardamos foto de Amadeus.
  70+ 80E3
  71+ 80E3 2A ED 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80E6 18 03            jr 4F
  73+ 80E8
  74+ 80E8 2A E7 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80EB
  76+ 80EB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80ED
  78+ 80ED D1           1 pop de
  79+ 80EE 73               ld (hl),e
  80+ 80EF 23               inc hl
  81+ 80F0 72               ld (hl),d
  82+ 80F1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80F2 10 F9            djnz 1B
  84+ 80F4
  85+ 80F4              ; Disparo o entidad ?
  86+ 80F4
  87+ 80F4 3A D0 89         ld a,(Ctrl_1)
  88+ 80F7 CB 47            bit 0,a
  89+ 80F9 28 05            jr z,5F
  90+ 80FB
  91+ 80FB 22 E9 89         ld (Stack_snapshot_disparos),hl
  92+ 80FE 18 12            jr 6F
  93+ 8100
  94+ 8100              ; Entidad o Amadeus ?
  95+ 8100
  96+ 8100 3A AD 89     5 ld a,(Ctrl_0)
  97+ 8103 CB 77            bit 6,a
  98+ 8105 28 08            jr z,8F
  99+ 8107
 100+ 8107 22 ED 89         ld (End_Snapshot_Amadeus),hl
 101+ 810A ED 7B E1 89      ld sp,(Stack)
 102+ 810E C9               ret
 103+ 810F
 104+ 810F 22 E7 89     8 ld (Stack_snapshot),hl
 105+ 8112 ED 7B E1 89  6 ld sp,(Stack)
 106+ 8116
 107+ 8116 C9               ret
 108+ 8117
 109+ 8117              ; -----------------------------------------------------------------------------
 110+ 8117              ;
 111+ 8117              ;   21/11/23
 112+ 8117
 113+ 8117              Limpia_y_reinicia_Stack_Snapshot
 114+ 8117
 115+ 8117              ;   Limpia Album_de_fotos.
 116+ 8117
 117+ 8117 2A E7 89         ld hl,(Stack_snapshot)
 118+ 811A 7D               ld a,l
 119+ 811B A7               and a
 120+ 811C C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 811D
 122+ 811D 47               ld b,a
 123+ 811E 04               inc b
 124+ 811F
 125+ 811F 36 00        1 ld (hl),0
 126+ 8121 2D               dec l
 127+ 8122 10 FB            djnz 1B
 128+ 8124
 129+ 8124              ;   Reinicializa (Stack_snapshot).
 130+ 8124
 131+ 8124 21 00 80         ld hl,Album_de_fotos
 132+ 8127 22 E7 89         ld (Stack_snapshot),hl
 133+ 812A
 134+ 812A C9               ret
# file closed: Guarda_foto_registros.asm
1868  812B
1869  812B              	SAVESNA "Pruebas.sna", START
1870  812B
1871  812B
1872  812B
1873  812B
# file closed: Banco_de_pruebas.asm
