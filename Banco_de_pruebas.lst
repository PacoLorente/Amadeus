# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 FC 88  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15              ;	ld a,(Contador_de_frames)
  43  AA15              ;	cp $70	; 	$51 ok.
  44  AA15              ;	jr z,$
  45  AA15              ;	jr nc,$
  46  AA15
  47  AA15 3E 01        	ld a,1
  48  AA17 D3 FE        	out ($fe),a
  49  AA19 CD 72 8D     	call Pinta_entidades
  50  AA1C CD 64 8D     	call Pinta_Amadeus
  51  AA1F 3E 02        	ld a,2
  52  AA21 D3 FE        	out ($fe),a
  53  AA23
  54  AA23 CD 8E 8D     	call Guarda_parametros_DRAW
  55  AA26 CD B4 8C     	call Restore_Amadeus
  56  AA29 CD B6 8A     	call Gestiona_Amadeus
  57  AA2C 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  58  AA2F CD C6 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  59  AA32
  60  AA32              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA32
  62  AA32 CD 9A 8D     	call Recupera_parametros_DRAW
  63  AA35 CD 82 8D     	call Actualiza_relojes
  64  AA38 3E 00        	ld a,0
  65  AA3A D3 FE        	out ($fe),a
  66  AA3C
  67  AA3C 21 06 89     	ld hl,Ctrl_3
  68  AA3F CB 86        	res 0,(hl)
  69  AA41
  70  AA41 FD E1        	pop iy
  71  AA43 DD E1        	pop ix
  72  AA45 F1           	pop af
  73  AA46 C1           	pop bc
  74  AA47 D1           	pop de
  75  AA48 E1           	pop hl
  76  AA49 D9           	exx
  77  AA4A C1           	pop bc
  78  AA4B D1           	pop de
  79  AA4C E1           	pop hl
  80  AA4D 08           	ex af,af'
  81  AA4E F1           	pop af
  82  AA4F 08           	ex af,af'
  83  AA50 D9           	exx
  84  AA51
  85  AA51 ED 7B FC 88  	ld sp,(Stack_3)
  86  AA55
  87  AA55 FB           	ei
  88  AA56 C9           	ret
  89  AA57
  90  AA57              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  91  AA57
  92  AA57              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA57              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA57              ;
   3+ AA57              ;	17/02/23
   4+ AA57              ;
   5+ AA57              ;	Sprites e índices.
   6+ AA57
   7+ AA57              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  93  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BD 85        	defw Caja_1
 100+ 856E FC 85        	defw Caja_2
 101+ 8570 3B 86        	defw Caja_3
 102+ 8572 7A 86        	defw Caja_4
 103+ 8574 B9 86        	defw Caja_5
 104+ 8576 F8 86        	defw Caja_6
 105+ 8578 37 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 8587
 117+ 8587 05           	db %00000101									; (Attr).
 118+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 858C
 121+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8590
 124+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 8592 04           	db 4 											; (Cuad_objeto).
 126+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 8597
 128+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8598
 130+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 859E
 132+ 859E 00 00        	db 0,0											; Variables_de_pintado
 133+ 85A0 00 00        	defw 0											;	" " " " " " "
 134+ 85A2 00 00        	defw 0											;	" " " " " " "
 135+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85A8
 137+ 85A8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85AA
 139+ 85AA 00           	db 0											; (Autoriza_movimiento).
 140+ 85AB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85AF 00 00
 141+ 85B1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85B4
 143+ 85B4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85B6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85B7
 146+ 85B7 00           	db 0 											; (Columnas).
 147+ 85B8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85BA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85BD
 150+ 85BD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85BD
 152+ 85BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85BF 00 00        	defw 0											; (Posicion_actual).
 154+ 85C1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85C6
 157+ 85C6 00           	db %00000000 									; (Attr).
 158+ 85C7
 159+ 85C7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85C9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85CF
 164+ 85CF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85D1 00           	db 0											; (Cuad_objeto).
 166+ 85D2
 167+ 85D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85D6
 169+ 85D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85D7
 171+ 85D7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85DD
 173+ 85DD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85DF 00 00        	defw 0											;	" " " " " " "
 175+ 85E1 00 00        	defw 0											;	" " " " " " "
 176+ 85E3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85E7
 178+ 85E7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 85E9
 180+ 85E9 00           	db 0											; (Autoriza_movimiento).
 181+ 85EA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 85EE 00 00
 182+ 85F0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 85F3
 184+ 85F3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 85F5 00           	db 0											; (Cola_de_desplazamiento).
 186+ 85F6
 187+ 85F6 00           	db 0 											; (Columnas).
 188+ 85F7 00 00        	defw 0											; (Limite_horizontal).
 189+ 85F9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 85FC
 191+ 85FC              ; ---------- ---------- ---------- ---------- ----------
 192+ 85FC
 193+ 85FC 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 85FE 00 00        	defw 0											; (Posicion_actual).
 195+ 8600 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8602 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8605
 198+ 8605 00           	db %00000000 									; (Attr).
 199+ 8606
 200+ 8606 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8608 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 860A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 860C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 860E
 205+ 860E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8610 00           	db 0											; (Cuad_objeto).
 207+ 8611
 208+ 8611 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8615
 210+ 8615 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8616
 212+ 8616 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 861C
 214+ 861C 00 00        	db 0,0											; Variables_de_pintado
 215+ 861E 00 00        	defw 0											;	" " " " " " "
 216+ 8620 00 00        	defw 0											;	" " " " " " "
 217+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8626
 219+ 8626 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8628
 221+ 8628 00           	db 0											; (Autoriza_movimiento).
 222+ 8629 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 862D 00 00
 223+ 862F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8632
 225+ 8632 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8634 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8635
 228+ 8635 00           	db 0 											; (Columnas).
 229+ 8636 00 00        	defw 0											; (Limite_horizontal).
 230+ 8638 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 863B
 232+ 863B              ; ---------- ---------- ---------- ---------- ----------
 233+ 863B
 234+ 863B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 863D 00 00        	defw 0											; (Posicion_actual).
 236+ 863F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8641 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8644
 239+ 8644 00           	db %00000000 									; (Attr).
 240+ 8645
 241+ 8645 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8647 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8649 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 864B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 864D
 246+ 864D 00 00        	defw 0											; (Posicion_inicio).
 247+ 864F 00           	db 0											; (Cuad_objeto).
 248+ 8650
 249+ 8650 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8654
 251+ 8654 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8655
 253+ 8655 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 865B
 255+ 865B 00 00        	db 0,0											; Variables_de_pintado
 256+ 865D 00 00        	defw 0											;	" " " " " " "
 257+ 865F 00 00        	defw 0											;	" " " " " " "
 258+ 8661 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8665
 260+ 8665 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8667
 262+ 8667 00           	db 0											; (Autoriza_movimiento).
 263+ 8668 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 866C 00 00
 264+ 866E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8671
 266+ 8671 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8673 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8674
 269+ 8674 00           	db 0 											; (Columnas).
 270+ 8675 00 00        	defw 0											; (Limite_horizontal).
 271+ 8677 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 867A
 273+ 867A              ; ---------- ---------- ---------- ---------- ----------
 274+ 867A
 275+ 867A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 867C 00 00        	defw 0											; (Posicion_actual).
 277+ 867E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 8680 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 8683
 280+ 8683 00           	db %00000000 									; (Attr).
 281+ 8684
 282+ 8684 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 8686 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 8688 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 868A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 868C
 287+ 868C 00 00        	defw 0											; (Posicion_inicio).
 288+ 868E 00           	db 0											; (Cuad_objeto).
 289+ 868F
 290+ 868F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 8693
 292+ 8693 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 8694
 294+ 8694 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 869A
 296+ 869A 00 00        	db 0,0											; Variables_de_pintado
 297+ 869C 00 00        	defw 0											;	" " " " " " "
 298+ 869E 00 00        	defw 0											;	" " " " " " "
 299+ 86A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A4
 301+ 86A4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86A6
 303+ 86A6 00           	db 0											; (Autoriza_movimiento).
 304+ 86A7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86AB 00 00
 305+ 86AD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86B0
 307+ 86B0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86B2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86B3
 310+ 86B3 00           	db 0 											; (Columnas).
 311+ 86B4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86B6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86B9
 314+ 86B9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86B9
 316+ 86B9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86BB 00 00        	defw 0											; (Posicion_actual).
 318+ 86BD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86BF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86C2
 321+ 86C2 00           	db %00000000 									; (Attr).
 322+ 86C3
 323+ 86C3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86C5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86C7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86C9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86CB
 328+ 86CB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86CD 00           	db 0											; (Cuad_objeto).
 330+ 86CE
 331+ 86CE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86D2
 333+ 86D2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86D3
 335+ 86D3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86D9
 337+ 86D9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86DB 00 00        	defw 0											;	" " " " " " "
 339+ 86DD 00 00        	defw 0											;	" " " " " " "
 340+ 86DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E3
 342+ 86E3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 86E5
 344+ 86E5 00           	db 0											; (Autoriza_movimiento).
 345+ 86E6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 86EA 00 00
 346+ 86EC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 86EF
 348+ 86EF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 86F1 00           	db 0											; (Cola_de_desplazamiento).
 350+ 86F2
 351+ 86F2 00           	db 0 											; (Columnas).
 352+ 86F3 00 00        	defw 0											; (Limite_horizontal).
 353+ 86F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 86F8
 355+ 86F8              ; ---------- ---------- ---------- ---------- ----------
 356+ 86F8
 357+ 86F8 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 86FA 00 00        	defw 0											; (Posicion_actual).
 359+ 86FC 00 00        	defw 0 											; (Puntero_objeto).
 360+ 86FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8701
 362+ 8701 00           	db %00000000 									; (Attr).
 363+ 8702
 364+ 8702 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8704 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8706 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8708 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 870A
 369+ 870A 00 00        	defw 0											; (Posicion_inicio).
 370+ 870C 00           	db 0											; (Cuad_objeto).
 371+ 870D
 372+ 870D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8711
 374+ 8711 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8712
 376+ 8712 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8718
 378+ 8718 00 00        	db 0,0											; Variables_de_pintado
 379+ 871A 00 00        	defw 0											;	" " " " " " "
 380+ 871C 00 00        	defw 0											;	" " " " " " "
 381+ 871E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8722
 383+ 8722 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8724
 385+ 8724 00           	db 0											; (Autoriza_movimiento).
 386+ 8725 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8729 00 00
 387+ 872B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 872E
 389+ 872E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8730 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8731
 392+ 8731 00           	db 0 											; (Columnas).
 393+ 8732 00 00        	defw 0											; (Limite_horizontal).
 394+ 8734 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8737
 396+ 8737              ; ---------- ---------- ---------- ---------- ----------
 397+ 8737
 398+ 8737 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8739 00 00        	defw 0											; (Posicion_actual).
 400+ 873B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 873D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8740
 403+ 8740 00           	db %00000000 									; (Attr).
 404+ 8741
 405+ 8741 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8743 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8745 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8747 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8749
 410+ 8749 00 00        	defw 0											; (Posicion_inicio).
 411+ 874B 00           	db 0											; (Cuad_objeto).
 412+ 874C
 413+ 874C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8750
 415+ 8750 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8751
 417+ 8751 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8757
 419+ 8757 00 00        	db 0,0											; Variables_de_pintado
 420+ 8759 00 00        	defw 0											;	" " " " " " "
 421+ 875B 00 00        	defw 0											;	" " " " " " "
 422+ 875D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8761
 424+ 8761 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8763
 426+ 8763 00           	db 0											; (Autoriza_movimiento).
 427+ 8764 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8768 00 00
 428+ 876A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 876D
 430+ 876D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 876F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8770
 433+ 8770 00           	db 0 											; (Columnas).
 434+ 8771 00 00        	defw 0											; (Limite_horizontal).
 435+ 8773 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8776
 437+ 8776              ; -------------------------------------------------------------------------------------
 438+ 8776              ;
 439+ 8776              ;	20/05/23
 440+ 8776              ;
 441+ 8776              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8776              ;
 443+ 8776              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8776              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8776              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8776              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8776
 448+ 8776              Indice_de_entidades
 449+ 8776
 450+ 8776 7A 87        	defw Entidad_1
 451+ 8778 8A 87        	defw Entidad_2
 452+ 877A
 453+ 877A              ;	BADSAT, (Satélite malvado).
 454+ 877A
 455+ 877A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 877C 04           	db %00000100									; (Attr).
 457+ 877D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 877F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 8781 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 8783 01           	db 1											; (Cuad_objeto).
 461+ 8784 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 8788 80 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 878A
 464+ 878A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 878C 02           	db %00000010									; (Attr).
 466+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 8791 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 8793 01           	db 1											; (Cuad_objeto).
 470+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 8798 80 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 879A
# file closed: Cajas_y_disparos.asm
  94  879A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 879A              ; 13/05/23
   2+ 879A
   3+ 879A              Indice_de_niveles
   4+ 879A
   5+ 879A A8 87        	defw Nivel_1
   6+ 879C B0 87        	defw Nivel_2
   7+ 879E BD 87        	defw Nivel_3
   8+ 87A0 CD 87        	defw Nivel_4
   9+ 87A2 DF 87        	defw Nivel_5
  10+ 87A4              ;	...
  11+ 87A4              ;	...
  12+ 87A4              ;	+ Niveles ...
  13+ 87A4
  14+ 87A4 00 00        	defw 0
  15+ 87A6 00 00        	defw 0
  16+ 87A8
  17+ 87A8 07           Nivel_1 db 7	                                ; Nº de entidades.
  18+ 87A9 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 87AD 01 01 01
  19+ 87B0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87B1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87B5 01 02
  21+ 87B7 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87BB 01 02
  22+ 87BD 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87BE 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87C2 01
  24+ 87C3 03 01 01 01  	db 3,1,1,1,1
  24+ 87C7 01
  25+ 87C8 03 01 01 01  	db 3,1,1,1,1
  25+ 87CC 01
  26+ 87CD 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87CE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87D2 01
  28+ 87D3 04 01 01 01  	db 4,1,1,1,1
  28+ 87D7 01
  29+ 87D8 04 01 01 01  	db 4,1,1,1,1
  29+ 87DC 01
  30+ 87DD 02 03        	db 2,3
  31+ 87DF 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87E0 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87E4 01
  33+ 87E5 05 01 01 01  	db 5,1,1,1,1
  33+ 87E9 01
  34+ 87EA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87EE 01
  35+ 87EF 05 01 01 01  	db 5,1,1,1,1
  35+ 87F3 01
  36+ 87F4
  37+ 87F4              ;---------------------------------------------------------------------------------------------------------------
  38+ 87F4              ;
  39+ 87F4              ;   3/9/23
  40+ 87F4              ;
  41+ 87F4              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87F4              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87F4              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87F4              ;	_en la caja DRAW correspondiente.
  45+ 87F4              ;
  46+ 87F4              ;	MODIFICA: HL,DE y A.
  47+ 87F4              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87F4
  49+ 87F4              Inicializa_Punteros_de_nivel
  50+ 87F4
  51+ 87F4 21 9A 87     	ld hl,Indice_de_niveles
  52+ 87F7 22 26 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 87FA CD 04 8C     	call Extrae_address
  54+ 87FD 7E           	ld a,(hl)
  55+ 87FE 32 F0 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8801 23           	inc hl
  57+ 8802 22 28 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8805 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8806
  60+ 8806              ;---------------------------------------------------------------------------------------------------------------
  61+ 8806              ;
  62+ 8806              ;   13/5/23
  63+ 8806              ;
  64+ 8806              ;	Destruye A,BC,HL,DE
  65+ 8806
  66+ 8806              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8806              ;	_del juego.
  68+ 8806
  69+ 8806              Prepara_cajas
  70+ 8806
  71+ 8806              ; Preparamos los punteros de las cajas.
  72+ 8806
  73+ 8806 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8809 CD 04 8C     	call Extrae_address
  75+ 880C CD 49 88     	call Avanza_caja
  76+ 880F
  77+ 880F CD 8D 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8812
  79+ 8812 2A 28 89     	ld hl,(Datos_de_nivel)
  80+ 8815
  81+ 8815              ; HL está en los datos del nivel correspondiente.
  82+ 8815              ; B actuará como contador de cajas.
  83+ 8815
  84+ 8815 C5           1 push bc
  85+ 8816
  86+ 8816 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8817 CD 3A 88     	call PreparaBC
  88+ 881A
  89+ 881A 21 76 87     	ld hl,Indice_de_entidades
  90+ 881D CD 42 88     	call SBC_HL_con_BC_y_Extrae
  91+ 8820 22 F6 88         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8823
  93+ 8823 CD 53 88     	call Datos_de_entidad_a_caja
  94+ 8826
  95+ 8826 2A EE 88     	ld hl,(Indice_restore_caja)
  96+ 8829 CD 04 8C     	call Extrae_address
  97+ 882C CD 49 88     	call Avanza_caja
  98+ 882F
  99+ 882F 2A 28 89     	ld hl,(Datos_de_nivel)
 100+ 8832 23           	inc hl
 101+ 8833 22 28 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8836
 103+ 8836 C1           	pop bc
 104+ 8837 10 DC        	djnz 1B
 105+ 8839 C9           	ret
 106+ 883A
 107+ 883A CB 27        PreparaBC sla a
 108+ 883C D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 883E 4F           	ld c,a
 110+ 883F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 8841 C9           	ret
 112+ 8842
 113+ 8842 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8843 ED 4A        	adc hl,bc
 115+ 8845 CD 04 8C     	call Extrae_address
 116+ 8848 C9           	ret
 117+ 8849
 118+ 8849 22 EA 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 884C 13           	inc de
 120+ 884D 13           	inc de
 121+ 884E EB           	ex de,hl
 122+ 884F 22 EE 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8852 C9           	ret
 124+ 8853
 125+ 8853              Datos_de_entidad_a_caja
 126+ 8853
 127+ 8853              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8853
 129+ 8853
 130+ 8853 ED 5B EA 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8857
 132+ 8857 01 02 00     	ld bc,2
 133+ 885A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 885C
 135+ 885C 01 07 00     	ld bc,7
 136+ 885F CD 87 88     	call Situa_DE
 137+ 8862
 138+ 8862 01 05 00     	ld bc,5
 139+ 8865 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8867
 141+ 8867 01 04 00     	ld bc,4
 142+ 886A CD 87 88     	call Situa_DE
 143+ 886D
 144+ 886D 01 07 00     	ld bc,7
 145+ 8870 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8872
 147+ 8872 01 12 00     	ld bc,18
 148+ 8875 CD 87 88     	call Situa_DE
 149+ 8878
 150+ 8878 01 02 00     	ld bc,2
 151+ 887B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 887D
 153+ 887D              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 887D              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 887D
 156+ 887D 01 0F 00     	ld bc,15									; *****
 157+ 8880 CD 87 88     	call Situa_DE
 158+ 8883
 159+ 8883 3E 03        	ld a,3
 160+ 8885 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8886
 162+ 8886 C9           	ret
 163+ 8887
 164+ 8887 EB           Situa_DE ex de,hl
 165+ 8888 A7           	and a
 166+ 8889 ED 4A        	adc hl,bc
 167+ 888B EB           	ex de,hl
 168+ 888C C9           	ret
 169+ 888D
 170+ 888D              ;---------------------------------------------------------------------------------------------------------------
 171+ 888D              ;
 172+ 888D              ;	21/5/23
 173+ 888D              ;
 174+ 888D              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 888D              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 888D              ;
 177+ 888D              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 888D              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 888D              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 888D              ;
 181+ 888D              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 888D              ;	MODIFICA: A y B.
 183+ 888D              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 888D
 185+ 888D              Admin_num_entidades
 186+ 888D
 187+ 888D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 888D
 189+ 888D 3A F0 88     	ld a,(Numero_de_entidades)
 190+ 8890 A7           	and a
 191+ 8891              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 8891              ;	jr z,$
 193+ 8891              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 8891
 195+ 8891 20 03        	jr nz,3F
 196+ 8893
 197+ 8893              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 8893
 199+ 8893 CD F4 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 8896
 201+ 8896 3A F0 88     3 ld a,(Numero_de_entidades)
 202+ 8899 FE 0A        	cp 10
 203+ 889B 38 08        	jr c,1F
 204+ 889D
 205+ 889D              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 889D              ; Actualizamos variables.
 207+ 889D
 208+ 889D 3E 0A        	ld a,10
 209+ 889F 32 F1 88     	ld (Numero_parcial_de_entidades),a
 210+ 88A2 47           	ld b,a
 211+ 88A3 18 04        	jr 2F
 212+ 88A5
 213+ 88A5              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88A5              ; (Numero_de_entidades)="0".
 215+ 88A5
 216+ 88A5 32 F1 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88A8 47           	ld b,a
 218+ 88A9 C9           2 ret
# file closed: Niveles.asm
  95  88AA
  96  88AA              ; ******************************************************************************************************************************************************************************************
  97  88AA              ; Constantes.
  98  88AA              ; ******************************************************************************************************************************************************************************************
  99  88AA              ;
 100  88AA              ; 10/11/23
 101  88AA
 102  88AA              ;
 103  88AA              ; Constantes generales.
 104  88AA              ;
 105  88AA
 106  88AA              Sprite_vacio equ $f000
 107  88AA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 108  88AA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 109  88AA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 110  88AA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 111  88AA
 112  88AA              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 113  88AA              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 114  88AA              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 115  88AA              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 116  88AA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 117  88AA
 118  88AA              ;														; 55 Bytes.
 119  88AA
 120  88AA              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 121  88AA              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 122  88AA
 123  88AA              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 124  88AA
 125  88AA              ; ******************************************************************************************************************************************************************************************
 126  88AA              ; Variables.
 127  88AA              ; ******************************************************************************************************************************************************************************************
 128  88AA              ;
 129  88AA              ; 10/11//23
 130  88AA              ;
 131  88AA              ; Variables de DRAW. (Motor principal).
 132  88AA              ;
 133  88AA              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 134  88AA
 135  88AA 00           Filas db 0												; Filas. [DRAW]
 136  88AB 00           Columns db 0  											; Nº de columnas. [DRAW]
 137  88AC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 138  88AE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 139  88B0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 140  88B1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 141  88B2
 142  88B2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 143  88B2
 144  88B2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 145  88B3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 146  88B3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 147  88B3 00           Attr db 0												; Atributos de la entidad:
 148  88B4
 149  88B4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 150  88B4              ;
 151  88B4              ;	COLORES: 0 ..... NEGRO
 152  88B4              ;    		 1 ..... AZUL
 153  88B4              ; 			 2 ..... ROJO
 154  88B4              ;			 3 ..... MAGENTA
 155  88B4              ; 			 4 ..... VERDE
 156  88B4              ; 			 5 ..... CIAN
 157  88B4              ;			 6 ..... AMARILLO
 158  88B4              ; 			 7 ..... BLANCO
 159  88B4
 160  88B4 00 00        Indice_Sprite_der defw 0
 161  88B6 00 00        Indice_Sprite_izq defw 0
 162  88B8 00 00        Puntero_DESPLZ_der defw 0
 163  88BA 00 00        Puntero_DESPLZ_izq defw 0
 164  88BC
 165  88BC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 166  88BE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 167  88BF
 168  88BF              ; Variables de objeto. (Características).
 169  88BF
 170  88BF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 171  88C0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 172  88C1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 173  88C2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 174  88C3
 175  88C3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 176  88C4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 177  88C4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 178  88C4 00 00 00...  Variables_de_borrado ds 6
 179  88CA
 180  88CA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 181  88CC 00 00        	defw 0
 182  88CE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 183  88D0 00 00 00 00  	db 0,0,0,0
 184  88D4
 185  88D4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 186  88D4
 187  88D4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 188  88D5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 189  88D5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 190  88D5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 191  88D5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 192  88D5              ;
 193  88D5              ; 														DESCRIPCIÖN:
 194  88D5              ;
 195  88D5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 196  88D5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 197  88D5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 198  88D5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 199  88D5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 200  88D5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 201  88D5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 202  88D5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 203  88D5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 204  88D5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 205  88D5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 206  88D5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 207  88D5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 208  88D5              ;
 209  88D5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 210  88D5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 211  88D5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 212  88D5
 213  88D5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 214  88D5
 215  88D5 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 216  88D7 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 217  88D9 00 00        Puntero_indice_mov_bucle defw 0							;
 218  88DB              ;
 219  88DB              ;
 220  88DB 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 221  88DC              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 222  88DC              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 223  88DC 00           Incrementa_puntero_backup db 0
 224  88DD 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 225  88DE              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 226  88DE 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 227  88DF 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 228  88E0 00           Cola_de_desplazamiento db 0								; Este byte indica:
 229  88E1              ;
 230  88E1              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 231  88E1              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 232  88E1              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 233  88E1              ;
 234  88E1              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 235  88E1              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 236  88E1              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 237  88E1              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 238  88E1              ;
 239  88E1              ;														;	"$ff" ..... Bucle infinito de repetición.
 240  88E1              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 241  88E1              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 242  88E1
 243  88E1
 244  88E1              ; Variables de funcionamiento. [DRAW].
 245  88E1
 246  88E1 00           Columnas db 0
 247  88E2 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 248  88E4              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 249  88E4 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 250  88E5
 251  88E5              ; variables de control general.
 252  88E5
 253  88E5 00           Ctrl_2 db 0
 254  88E6              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 255  88E6              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 256  88E6              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 257  88E6              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 258  88E6              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 259  88E6              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 260  88E6              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 261  88E6              ;
 262  88E6              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 263  88E6              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 264  88E6              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 265  88E6              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 266  88E6              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 267  88E6
 268  88E6 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 269  88E7
 270  88E7              ;! 61 Bytes por entidad.
 271  88E7
 272  88E7              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 273  88E7              ;					         		---------;      ;---------
 274  88E7
 275  88E7
 276  88E7              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 277  88E7
 278  88E7 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 279  88E8
 280  88E8              ;														DESCRIPCIÓN:
 281  88E8              ;
 282  88E8              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 283  88E8              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 284  88E8              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 285  88E8              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 286  88E8              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 287  88E8              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 288  88E8
 289  88E8              ;														BIT 3, Recarga de nueva oleada.
 290  88E8              ;														BIT 4, Recarga de nueva oleada.
 291  88E8              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 292  88E8              ;														BIT 6, **** Frame completo.
 293  88E8              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 294  88E8
 295  88E8 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 296  88EA              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 297  88EA              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 298  88EA              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 299  88EA
 300  88EA              ; Gestión de ENTIDADES y CAJAS.
 301  88EA
 302  88EA 00 00        Puntero_store_caja defw 0
 303  88EC 00 00        Puntero_restore_caja defw 0
 304  88EE 00 00        Indice_restore_caja defw 0
 305  88F0 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 306  88F1 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 307  88F2 00           Entidades_en_curso db 0									; ..... ..... .....
 308  88F3 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 309  88F4              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 310  88F4              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 311  88F4              ;														; _ (Numero_de_malotes)="0".
 312  88F4 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 313  88F6 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 314  88F8              ;														; _ puntero (Indice_entidades).
 315  88F8
 316  88F8
 317  88F8              ;---------------------------------------------------------------------------------------------------------------
 318  88F8              ;
 319  88F8              ;	18/11/23
 320  88F8              ;
 321  88F8              ;	Álbumes.
 322  88F8
 323  88F8 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 324  88FA              ;														; _variable para almacenar lo posición del puntero_
 325  88FA              ; 														; _de pila, SP.
 326  88FA 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 327  88FC              ;														; La utiliza la rutina [Extrae_foto_registros].
 328  88FC 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 329  88FE 00 70        Stack_snapshot defw Album_de_fotos
 330  8900 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 331  8902
 332  8902              ;End_Snapshot defw Album_de_fotos
 333  8902              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 334  8902 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 335  8904              ;														; _el snapshot de los registros del siguiente disparo.
 336  8904              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 337  8904 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 338  8906
 339  8906 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 340  8907              ;
 341  8907              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 342  8907              ; Gestión de Disparos.
 343  8907
 344  8907 00           Numero_de_disparotes db 0
 345  8908 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 346  890A 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 347  890C 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 348  890D              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 349  890D              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 350  890D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 351  890F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 352  890F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 353  890F              ;														; _produzca colisión.
 354  890F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 355  8911              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 356  8911 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 357  8914              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 358  8914 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 359  8917              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 360  8917 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 361  8919 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 362  891A
 363  891A              ;---------------------------------------------------------------------------------------------------------------
 364  891A
 365  891A              ; Relojes y temporizaciones.
 366  891A
 367  891A 00           Contador_de_frames db 0
 368  891B 00           Contador_de_frames_2 db 0
 369  891C
 370  891C 04           Clock_explosion db 4
 371  891D 1E           Clock_Entidades_en_curso db 30
 372  891E 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 373  891F              ;														; Repite la oleada de entidades.
 374  891F 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 375  8920 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 376  8921 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 377  8922
 378  8922 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 379  8923 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 380  8924 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 381  8925
 382  8925              ;---------------------------------------------------------------------------------------------------------------
 383  8925
 384  8925              ; Gestión de NIVELES.
 385  8925
 386  8925 00           Nivel db 0												; Nivel actual del juego.
 387  8926 00 00        Puntero_indice_NIVELES defw 0
 388  8928 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 389  892A              ; 														; _ que definen el NIVEL.
 390  892A              ; Y todo comienza aquí .....
 391  892A              ;
 392  892A              ; Rutina principal *************************************************************************************************************************************************************************
 393  892A              ;
 394  892A              ;	16/11/22
 395  892A
 396  892A              START
 397  892A
 398  892A 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 399  892D 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 400  892F ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 401  8931 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 402  8933 F3           	DI
 403  8934
 404  8934 3E 07        	ld a,%00000111
 405  8936 CD AD 98     	call Cls
 406  8939
 407  8939 CD DD 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 408  893C
 409  893C              ; INICIALIZACIÓN.
 410  893C
 411  893C CD F4 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 412  893F CD 06 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 413  8942 CD 6C 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 414  8945              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 415  8945 CD 8D 8C     	call Restore_entidad
 416  8948
 417  8948 21 F1 88     	ld hl,Numero_parcial_de_entidades
 418  894B 46           	ld b,(hl)
 419  894C 04           	inc b
 420  894D 05           	dec b
 421  894E 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 422  8950
 423  8950              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 424  8950              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 425  8950              ;	Pintamos el resto de entidades:
 426  8950
 427  8950              ;	INICIA ENTIDADES !!!!!
 428  8950
 429  8950 C5           1 push bc  												; Guardo el contador de entidades.
 430  8951 CD 3C 8B     	call Inicia_entidad
 431  8954 C1           	pop bc
 432  8955 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 433  8957
 434  8957              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 435  8957              ; (Esto se dá cuando se inicia una nueva oleada).
 436  8957
 437  8957 3A E7 88     	ld a,(Ctrl_1)
 438  895A CB 5F        	bit 3,a
 439  895C 20 1B        	jr nz,5F											; Loop
 440  895E
 441  895E              ; 	INICIA AMADEUS !!!!!
 442  895E
 443  895E CD B4 8C     3 call Restore_Amadeus
 444  8961 CD 0A 8C     	call Inicia_Puntero_objeto
 445  8964 CD A0 92     	call Draw
 446  8967 CD A0 7F     	call Guarda_foto_registros
 447  896A CD 31 8D     	call Guarda_datos_de_borrado_Amadeus
 448  896D
 449  896D 11 7E 85     	ld de,Amadeus_db
 450  8970 CD C6 8C     	call Store_Amadeus
 451  8973
 452  8973              ; 	INICIA DISPAROS !!!!!
 453  8973
 454  8973 CD 82 8B     	call Inicia_Puntero_Disparo_Entidades
 455  8976 CD 89 8B     	call Inicia_Puntero_Disparo_Amadeus
 456  8979
 457  8979              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 458  8979
 459  8979 CD 6C 8B     5 call Inicia_punteros_de_cajas
 460  897C CD 8D 8C     	call Restore_entidad
 461  897F
 462  897F 3A E7 88     	ld a,(Ctrl_1)
 463  8982 CB 5F        	bit 3,a
 464  8984 28 07        	jr z,6F
 465  8986
 466  8986              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 467  8986
 468  8986 21 E7 88     	ld hl,Ctrl_1
 469  8989 CB 9E        	res 3,(hl)
 470  898B 18 07        	jr Main
 471  898D
 472  898D              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 473  898D
 474  898D 21 06 89     6 ld hl,Ctrl_3
 475  8990 CB C6        	set 0,(hl)											; Frame completo.
 476  8992 FB           	ei
 477  8993 76           	halt
 478  8994
 479  8994              ; ------------------------------------
 480  8994
 481  8994              Main
 482  8994              ;
 483  8994              ;	12/11/23
 484  8994
 485  8994              ; Aparece nueva entidad ???
 486  8994
 487  8994              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 488  8994              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 489  8994              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 490  8994              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 491  8994              ;														; _un 2º bloque.
 492  8994
 493  8994 3A 1D 89     	ld a,(Clock_Entidades_en_curso)
 494  8997 47           	ld b,a
 495  8998 3A 1A 89     	ld a,(Contador_de_frames)
 496  899B B8           	cp b
 497  899C 28 07        	jr z,21F
 498  899E
 499  899E              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 500  899E              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 501  899E              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 502  899E              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 503  899E
 504  899E 3C           	inc a
 505  899F B8           	cp b
 506  89A0 20 1B        	jr nz,13F
 507  89A2
 508  89A2 32 1A 89     	ld (Contador_de_frames),a
 509  89A5
 510  89A5              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 511  89A5              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 512  89A5
 513  89A5 3A F1 88     21 ld a,(Numero_parcial_de_entidades)
 514  89A8 47           	ld b,a
 515  89A9 3A F2 88     	ld a,(Entidades_en_curso)
 516  89AC B8           	cp b
 517  89AD 28 0E        	jr z,13F
 518  89AF 30 0C        	jr nc,13F
 519  89B1
 520  89B1              ; --- --- --- --- ---
 521  89B1
 522  89B1 3C           	inc a
 523  89B2 32 F2 88     	ld (Entidades_en_curso),a
 524  89B5
 525  89B5              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 526  89B5
 527  89B5 3A 1D 89     	ld a,(Clock_Entidades_en_curso)
 528  89B8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 529  89B8              ;! _ IMPREDECIBLE !!!!
 530  89B8 C6 32        	add 50
 531  89BA 32 1D 89     	ld (Clock_Entidades_en_curso),a
 532  89BD
 533  89BD              ; -------------------------------------------------------------------------------------------------------------
 534  89BD
 535  89BD              ; Habilita disparos.
 536  89BD
 537  89BD 21 1F 89     13 ld hl,Disparo_Amadeus
 538  89C0 11 21 89     	ld de,CLOCK_repone_disparo_Amadeus
 539  89C3 CD 71 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 540  89C6
 541  89C6 21 22 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 542  89C9 11 24 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 543  89CC CD 71 9C     	call Habilita_disparos
 544  89CF
 545  89CF              ; COLISIONES.
 546  89CF
 547  89CF CD 82 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 548  89D2
 549  89D2              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 550  89D2              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 551  89D2              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 552  89D2
 553  89D2 AF           	xor a
 554  89D3 32 0C 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 555  89D6
 556  89D6 CD 6C 8B     	call Inicia_punteros_de_cajas
 557  89D9 CD 8D 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 558  89DC              ; 														; _ en DRAW.
 559  89DC 3A AA 88     	ld a,(Filas)
 560  89DF A7           	and a
 561  89E0 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 562  89E2 CD 9F 8C     	call Incrementa_punteros_de_cajas
 563  89E5 18 F2        	jr 12B
 564  89E7
 565  89E7              ; ---------------------------------------------------------------------------------------
 566  89E7
 567  89E7 3A F1 88     10 ld a,(Numero_parcial_de_entidades)
 568  89EA 47               ld b,a
 569  89EB A7           	and a
 570  89EC 20 14        	jr nz,11F
 571  89EE
 572  89EE 21 E7 88     	ld hl,Ctrl_1
 573  89F1 CB 66        	bit 4,(hl)
 574  89F3 C2 81 8A     	jp nz,16F
 575  89F6
 576  89F6              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 577  89F6
 578  89F6 21 E7 88     	ld hl,Ctrl_1
 579  89F9 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 580  89FB
 581  89FB 3A 1A 89     	ld a,(Contador_de_frames)
 582  89FE 3C           	inc a
 583  89FF 32 1E 89     	ld (Activa_recarga_cajas),a
 584  8A02
 585  8A02              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 586  8A02
 587  8A02 3A F2 88     11 ld a,(Entidades_en_curso)
 588  8A05 A7           	and a
 589  8A06 CA 81 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 590  8A09 47           	ld b,a												; No hay entidades que gestionar.
 591  8A0A
 592  8A0A              ; Código que ejecutamos con cada entidad:
 593  8A0A              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 594  8A0A
 595  8A0A C5           15 push bc 												; Nº de entidades en curso.
 596  8A0B
 597  8A0B              ; Impacto ???
 598  8A0B
 599  8A0B 3A C3 88     22 ld a,(Impacto)
 600  8A0E A7           	and a
 601  8A0F 28 31        	jr z,8F
 602  8A11
 603  8A11              ; Hay Impacto en esta entidad.
 604  8A11
 605  8A11 21 1C 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 606  8A14 35           	dec (hl)
 607  8A15 C2 76 8A     	jp nz,17F
 608  8A18
 609  8A18              ;! Velocidad de la animación de la explosión.
 610  8A18
 611  8A18 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 612  8A1A              ;														; _,(velocidad de la explosión).
 613  8A1A
 614  8A1A              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 615  8A1A
 616  8A1A CD 51 8D     	call Repone_datos_de_borrado
 617  8A1D CD AA 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 618  8A20
 619  8A20              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 620  8A20
 621  8A20 3A E5 88     	ld a,(Ctrl_2)
 622  8A23 CB 4F        	bit 1,a
 623  8A25 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 624  8A27
 625  8A27              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 626  8A27
 627  8A27 3A B2 88     	ld a,(CTRL_DESPLZ)
 628  8A2A A7           	and a
 629  8A2B 20 08        	jr nz,18F
 630  8A2D
 631  8A2D 21 84 84     	ld hl,Indice_Explosion_2x2-2
 632  8A30 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 633  8A33 18 06        	jr 19F
 634  8A35
 635  8A35 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 636  8A38 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 637  8A3B
 638  8A3B 21 E5 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 639  8A3E CB CE        	set 1,(hl)
 640  8A40 18 22        	jr 7F
 641  8A42
 642  8A42              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 643  8A42              ; _con las coordenadas de la entidad almacenada en DRAW.
 644  8A42
 645  8A42 3A E7 88     8 ld a,(Ctrl_1)
 646  8A45 CB 57        	bit 2,a
 647  8A47 28 1B        	jr z,7F
 648  8A49
 649  8A49 2A 0F 89     	ld hl,(Coordenadas_disparo_certero)
 650  8A4C EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 651  8A4D              ;														; E contiene la coordenada_X del disparo.
 652  8A4D 2A B0 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 653  8A50              ;														; H FILA, (Coordenada_y de la entidad).
 654  8A50 A7           	and a
 655  8A51 ED 52        	sbc hl,de
 656  8A53
 657  8A53 CD B9 91     	call Determina_resultado_comparativa
 658  8A56
 659  8A56 78           	ld a,b
 660  8A57 A7           	and a
 661  8A58 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 662  8A5A
 663  8A5A              ; ----- ----- -----
 664  8A5A
 665  8A5A 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 666  8A5C 32 C3 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 667  8A5F
 668  8A5F 21 E7 88     	ld hl,Ctrl_1
 669  8A62 CB 96        	res 2,(hl)
 670  8A64
 671  8A64 CD D8 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 672  8A67
 673  8A67 3A D4 88     	ld a,(Ctrl_0)
 674  8A6A CB 67        	bit 4,a
 675  8A6C 28 08        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 676  8A6E
 677  8A6E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 678  8A6E              ; [[[
 679  8A6E              ;	call Detecta_disparo_entidad
 680  8A6E              ; ]]]
 681  8A6E CD 4D 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 682  8A71
 683  8A71 21 D4 88     	ld hl,Ctrl_0
 684  8A74 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 685  8A76
 686  8A76 CD 52 8C     17 call Store_Restore_cajas
 687  8A79
 688  8A79 C1           	pop bc
 689  8A7A 10 8E        	djnz 15B
 690  8A7C
 691  8A7C              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 692  8A7C              ; Hemos gestionado todas las unidades.
 693  8A7C              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 694  8A7C
 695  8A7C 21 E7 88     	ld hl,Ctrl_1
 696  8A7F CB 96        	res 2,(hl)
 697  8A81
 698  8A81 21 06 89     16 ld hl,Ctrl_3
 699  8A84 CB C6        	set 0,(hl)											; Frame completo.
 700  8A86 AF           	xor a
 701  8A87 D3 FE        	out ($fe),a
 702  8A89 FB           	ei
 703  8A8A 76           	halt
 704  8A8B
 705  8A8B              ; ----------------------------------------
 706  8A8B
 707  8A8B 3A E7 88     	ld a,(Ctrl_1) 										; Existe Loop?
 708  8A8E CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 709  8A90 CA 94 89     	jp z,Main
 710  8A93
 711  8A93              ; RECARGA DE NUEVA OLEADA.
 712  8A93
 713  8A93 3A 1A 89     	ld a,(Contador_de_frames)
 714  8A96 47           	ld b,a
 715  8A97 3A 1E 89     	ld a,(Activa_recarga_cajas)
 716  8A9A B8           	cp b
 717  8A9B 28 08        	jr z,20F
 718  8A9D
 719  8A9D 21 E7 88     	ld hl,Ctrl_1
 720  8AA0 CB E6        	set 4,(hl)
 721  8AA2 C3 94 89     	jp Main
 722  8AA5
 723  8AA5 21 E7 88     20 ld hl,Ctrl_1
 724  8AA8 CB A6        	res 4,(hl)
 725  8AAA
 726  8AAA 3A 1A 89     	ld a,(Contador_de_frames)
 727  8AAD
 728  8AAD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 729  8AAD              ;! _ IMPREDECIBLE !!!!
 730  8AAD
 731  8AAD C6 0A        	add 10
 732  8AAF 32 1D 89     	ld (Clock_Entidades_en_curso),a
 733  8AB2
 734  8AB2 C3 3F 89     	jp 4B
 735  8AB5
 736  8AB5 C9           	ret
 737  8AB6
 738  8AB6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 739  8AB6              ;
 740  8AB6              ;	16/11/23
 741  8AB6
 742  8AB6              Gestiona_Amadeus
 743  8AB6
 744  8AB6              ;! Activa/desactiva impacto con Amadeus.
 745  8AB6
 746  8AB6 3A C3 88     	ld a,(Impacto)
 747  8AB9 A7           	and a
 748  8ABA 20 FE        	jr nz,$
 749  8ABC
 750  8ABC CD 29 8B     	call Mov_Amadeus
 751  8ABF
 752  8ABF 3A D4 88     	ld a,(Ctrl_0)
 753  8AC2 CB 67        	bit 4,a
 754  8AC4 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 755  8AC6
 756  8AC6 CD 4D 8B     	call Guarda_foto_entidad_a_pintar
 757  8AC9 CD 31 8D     	call Guarda_datos_de_borrado_Amadeus
 758  8ACC
 759  8ACC 21 D4 88     14 ld hl,Ctrl_0
 760  8ACF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 761  8AD1
 762  8AD1 CD 16 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 763  8AD4
 764  8AD4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 765  8AD4
 766  8AD4 CD EC 8B     	call Calcula_numero_de_disparotes
 767  8AD7
 768  8AD7 C9           	ret
 769  8AD8
 770  8AD8              ; --------------------------------------------------------------------------------------------------------------
 771  8AD8              ;
 772  8AD8              ;	27/05/23
 773  8AD8
 774  8AD8              Mov_obj
 775  8AD8
 776  8AD8 3A E5 88     	ld a,(Ctrl_2)
 777  8ADB CB 4F        	bit 1,a
 778  8ADD 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 779  8ADF
 780  8ADF              ; Explosión:
 781  8ADF
 782  8ADF 3A E6 88     	ld a,(Frames_explosion)
 783  8AE2 A7           	and a
 784  8AE3 20 11        	jr nz,4F
 785  8AE5
 786  8AE5              ; Una alimaña menos!!!!!!!!!1
 787  8AE5
 788  8AE5 CD CF 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 789  8AE8 21 F1 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 790  8AEB 35           	dec (hl)
 791  8AEC 21 F2 88     	ld hl,Entidades_en_curso
 792  8AEF 35           	dec (hl)
 793  8AF0 21 F0 88     	ld hl,Numero_de_entidades
 794  8AF3 35           	dec (hl)
 795  8AF4 18 32        	jr 3F
 796  8AF6
 797  8AF6              ; -----
 798  8AF6
 799  8AF6              ;	`Movemos´ la explosión.
 800  8AF6
 801  8AF6 2A B8 88     4 ld hl,(Puntero_DESPLZ_der)
 802  8AF9 23           	inc hl
 803  8AFA 23           	inc hl
 804  8AFB 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 805  8AFE CD 04 8C     	call Extrae_address
 806  8B01 22 AE 88     	ld (Puntero_objeto),hl
 807  8B04
 808  8B04 21 E6 88     	ld hl,Frames_explosion
 809  8B07 35           	dec (hl)
 810  8B08 18 1E        	jr 3F
 811  8B0A
 812  8B0A AF           2 xor a
 813  8B0B 32 D4 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 814  8B0E
 815  8B0E              ; Movemos Entidades malignas.
 816  8B0E
 817  8B0E CD 1C 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 818  8B11
 819  8B11 3A D4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 820  8B14 CB 67        	bit 4,a
 821  8B16 C8           	ret z
 822  8B17
 823  8B17              ; Ha habido desplazamiento de la entidad maligna.
 824  8B17              ; Ha llegado a zona de AMADEUS ???
 825  8B17
 826  8B17 3A B1 88     	ld a,(Coordenada_y)
 827  8B1A FE 14        	cp $14
 828  8B1C D4 43 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 829  8B1F              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 830  8B1F              ; ---------
 831  8B1F
 832  8B1F CD 54 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 833  8B22 CD 51 8D     	call Repone_datos_de_borrado
 834  8B25 CD AA 8B     	call Limpia_Variables_de_borrado
 835  8B28
 836  8B28 C9           3 ret													; _de la misma.
 837  8B29
 838  8B29              ; --------------------------------------------------------------------------------------------------------------
 839  8B29              ;
 840  8B29              ;	29/1/23
 841  8B29
 842  8B29              Mov_Amadeus
 843  8B29
 844  8B29 CD F1 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 845  8B2C
 846  8B2C 3A D4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 847  8B2F CB 67        	bit 4,a
 848  8B31 C8           	ret z
 849  8B32
 850  8B32              ; ---------
 851  8B32
 852  8B32 CD 54 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 853  8B35 CD 41 8D     	call Repone_datos_de_borrado_Amadeus
 854  8B38 CD AA 8B     	call Limpia_Variables_de_borrado
 855  8B3B
 856  8B3B C9           	ret
 857  8B3C
 858  8B3C              ; -----------------------------------------------------------------------------------
 859  8B3C              ;
 860  8B3C              ;	16/11/23
 861  8B3C
 862  8B3C CD 0A 8C     Inicia_entidad	call Inicia_Puntero_objeto
 863  8B3F CD C1 98     	call Recompone_posicion_inicio
 864  8B42 CD A0 92     	call Draw
 865  8B45 CD A0 7F     	call Guarda_foto_registros
 866  8B48 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 867  8B49              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 868  8B49 CD 52 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 869  8B4C C9           	ret
 870  8B4D
 871  8B4D              ; --------------------------------------------------------------------------------------------------------------
 872  8B4D              ;
 873  8B4D              ;	31/08/23
 874  8B4D              ;
 875  8B4D              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 876  8B4D              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 877  8B4D
 878  8B4D              Guarda_foto_entidad_a_pintar
 879  8B4D
 880  8B4D              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 881  8B4D
 882  8B4D CD A0 92     	call Draw
 883  8B50 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 884  8B53 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 885  8B54
 886  8B54              ; --------------------------------------------------------------------------------------------------------------
 887  8B54              ;
 888  8B54              ;	19/9/23
 889  8B54
 890  8B54 21 AA 88     Prepara_var_pintado ld hl,Filas
 891  8B57 11 CA 88     	ld de,Variables_de_pintado
 892  8B5A 01 08 00     	ld bc,8
 893  8B5D ED B0        	ldir
 894  8B5F C9           	ret
 895  8B60
 896  8B60              ; --------------------------------------------------------------------------------------------------------------
 897  8B60
 898  8B60 21 CA 88     Repone_pintar ld hl,Variables_de_pintado
 899  8B63 11 AA 88     	ld de,Filas
 900  8B66 01 08 00     	ld bc,8
 901  8B69 ED B0        	ldir
 902  8B6B C9           	ret
 903  8B6C
 904  8B6C              ; *************************************************************************************************************************************************************
 905  8B6C              ;
 906  8B6C              ; 8/1/23
 907  8B6C              ;
 908  8B6C              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 909  8B6C              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 910  8B6C              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 911  8B6C
 912  8B6C              ; Destruye HL y DE !!!!!
 913  8B6C
 914  8B6C              Inicia_punteros_de_cajas
 915  8B6C
 916  8B6C 21 6C 85     	ld hl,Indice_de_cajas
 917  8B6F CD 04 8C         call Extrae_address
 918  8B72 22 EA 88         ld (Puntero_store_caja),hl
 919  8B75 21 6E 85     	ld hl,Indice_de_cajas+2
 920  8B78 22 EE 88     	ld (Indice_restore_caja),hl
 921  8B7B CD 04 8C     	call Extrae_address
 922  8B7E 22 EC 88     	ld (Puntero_restore_caja),hl
 923  8B81 C9               ret
 924  8B82
 925  8B82              ; *************************************************************************************************************************************************************
 926  8B82              ;
 927  8B82              ; 8/1/23
 928  8B82              ;
 929  8B82              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 930  8B82
 931  8B82 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 932  8B85 22 08 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 933  8B88 C9           	ret
 934  8B89 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 935  8B8C 22 0A 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 936  8B8F C9           	ret
 937  8B90
 938  8B90              ; -------------------------------------------------------------------------------------------------------------
 939  8B90              ;
 940  8B90              ; 21/9/23
 941  8B90              ;
 942  8B90
 943  8B90              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 944  8B90
 945  8B90              Limpia_album_Amadeus
 946  8B90
 947  8B90 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 948  8B93 7E           	ld a,(hl)
 949  8B94 A7           	and a
 950  8B95 C8           	ret z
 951  8B96
 952  8B96 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 953  8B99 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 954  8B9C 01 0B 00     	ld bc,11
 955  8B9F AF           	xor a
 956  8BA0 77           	ld (hl),a
 957  8BA1 ED B0        	ldir
 958  8BA3
 959  8BA3 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 960  8BA6 22 04 89     	ld (End_Snapshot_Amadeus),hl
 961  8BA9
 962  8BA9 C9           	ret
 963  8BAA
 964  8BAA 21 C4 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 965  8BAD 11 C5 88     	ld de,Variables_de_borrado+1
 966  8BB0 01 05 00     	ld bc,5
 967  8BB3 AF           	xor a
 968  8BB4 77           	ld (hl),a
 969  8BB5 ED B0        	ldir
 970  8BB7 C9           	ret
 971  8BB8
 972  8BB8              ; -------------------------------------------------------------------------------------------------------------
 973  8BB8              ;
 974  8BB8              ; 8/9/23
 975  8BB8              ;
 976  8BB8
 977  8BB8              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
 978  8BB8              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
 979  8BB8
 980  8BB8              Calcula_numero_de_malotes
 981  8BB8
 982  8BB8 21 00 70     	ld hl,Album_de_fotos
 983  8BBB EB           	ex de,hl
 984  8BBC 2A FE 88     	ld hl,(Stack_snapshot)
 985  8BBF
 986  8BBF 06 00        	ld b,0
 987  8BC1 7D           	ld a,l
 988  8BC2 93           	sub e
 989  8BC3 28 07        	jr z,1F
 990  8BC5
 991  8BC5              ; Nº de malotes no es "0".
 992  8BC5
 993  8BC5 D6 06        2 sub 6
 994  8BC7 04           	inc b
 995  8BC8 A7           	and a
 996  8BC9 20 FA        	jr nz,2B
 997  8BCB 78           	ld a,b
 998  8BCC
 999  8BCC 32 F3 88     1 ld (Numero_de_malotes),a
1000  8BCF C9           	ret
1001  8BD0
1002  8BD0              ; -------------------------------------------------------------------------------------------------------------
1003  8BD0              ;
1004  8BD0              ; 8/9/23
1005  8BD0              ;
1006  8BD0
1007  8BD0              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1008  8BD0              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1009  8BD0
1010  8BD0              Calcula_malotes_Amadeus
1011  8BD0
1012  8BD0 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1013  8BD3 EB           	ex de,hl
1014  8BD4 2A 04 89     	ld hl,(End_Snapshot_Amadeus)
1015  8BD7
1016  8BD7 7C           	ld a,h
1017  8BD8 A7           	and a
1018  8BD9 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1019  8BDB
1020  8BDB 06 00        	ld b,0
1021  8BDD 7D           	ld a,l
1022  8BDE 93           	sub e
1023  8BDF 28 07        	jr z,1F
1024  8BE1
1025  8BE1              ; Nº de malotes no es "0".
1026  8BE1
1027  8BE1 D6 06        2 sub 6
1028  8BE3 04           	inc b
1029  8BE4 A7           	and a
1030  8BE5 20 FA        	jr nz,2B
1031  8BE7 78           	ld a,b
1032  8BE8
1033  8BE8 32 F3 88     1 ld (Numero_de_malotes),a
1034  8BEB C9           	ret
1035  8BEC
1036  8BEC              ; -------------------------------------------------------------------------------------------------------------
1037  8BEC              ;
1038  8BEC              ; 28/2/23
1039  8BEC              ;
1040  8BEC
1041  8BEC              Calcula_numero_de_disparotes
1042  8BEC
1043  8BEC 21 56 70     	ld hl,Album_de_fotos_disparos
1044  8BEF EB           	ex de,hl
1045  8BF0 2A 02 89     	ld hl,(End_Snapshot_disparos)
1046  8BF3
1047  8BF3 06 00        	ld b,0
1048  8BF5 7D           	ld a,l
1049  8BF6 93           	sub e
1050  8BF7 28 07        	jr z,1F
1051  8BF9
1052  8BF9              ; Nº de malotes no es "0".
1053  8BF9
1054  8BF9 D6 06        2 sub 6
1055  8BFB 04           	inc b
1056  8BFC A7           	and a
1057  8BFD 20 FA        	jr nz,2B
1058  8BFF 78           	ld a,b
1059  8C00
1060  8C00 32 07 89     1 ld (Numero_de_disparotes),a
1061  8C03 C9           	ret
1062  8C04
1063  8C04              ; *************************************************************************************************************************************************************
1064  8C04              ;
1065  8C04              ; 20/10/22
1066  8C04              ;
1067  8C04              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1068  8C04              ;
1069  8C04              ; Destruye el puntero y DE !!!!!
1070  8C04
1071  8C04 5E           Extrae_address ld e,(hl)
1072  8C05 23           	inc hl
1073  8C06 56           	ld d,(hl)
1074  8C07 2B           	dec hl
1075  8C08 EB           	ex de,hl
1076  8C09 C9           	ret
1077  8C0A
1078  8C0A              ; *************************************************************************************************************************************************************
1079  8C0A              ;
1080  8C0A              ;	7/2/23
1081  8C0A              ;
1082  8C0A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1083  8C0A              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1084  8C0A              ;
1085  8C0A              ;   Destruye HL y BC !!!!!,
1086  8C0A              ;
1087  8C0A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1088  8C0A              ;					"0" ..... Izquierda.
1089  8C0A
1090  8C0A              Inicia_Puntero_objeto
1091  8C0A
1092  8C0A 3A BE 88     	ld a,(Cuad_objeto)
1093  8C0D E6 01        	and 1
1094  8C0F F5           	push af
1095  8C10 CC 2E 8C     	call z,Inicia_puntero_objeto_izq
1096  8C13 F1           	pop af
1097  8C14 28 2B        	jr z,1F
1098  8C16 CD 1B 8C     	call Inicia_puntero_objeto_der
1099  8C19 18 26        	jr 1F
1100  8C1B
1101  8C1B              ; Arrancamos desde la parte izquierda de la pantalla.
1102  8C1B              ; Iniciamos (Indice_Sprite_der).
1103  8C1B
1104  8C1B 2A B4 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1105  8C1E 22 B8 88     	ld (Puntero_DESPLZ_der),hl
1106  8C21 CD 04 8C     	call Extrae_address
1107  8C24 22 AE 88     	ld (Puntero_objeto),hl
1108  8C27
1109  8C27 2A B6 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1110  8C2A 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
1111  8C2D C9           	ret
1112  8C2E
1113  8C2E              ; Arrancamos desde la parte derecha de la pantalla.
1114  8C2E              ; Iniciamos (Indice_Sprite_izq).
1115  8C2E
1116  8C2E 2A B6 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1117  8C31 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
1118  8C34 CD 04 8C     	call Extrae_address
1119  8C37 22 AE 88     	ld (Puntero_objeto),hl
1120  8C3A
1121  8C3A 2A B4 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1122  8C3D 22 B8 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1123  8C40 C9           	ret
1124  8C41
1125  8C41              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1126  8C41
1127  8C41 21 40 83     1 ld hl,Amadeus
1128  8C44 ED 4B AE 88  	ld bc,(Puntero_objeto)
1129  8C48 B7 ED 42     	sub hl,bc
1130  8C4B C0           	ret nz
1131  8C4C 21 D4 88     	ld hl,Ctrl_0
1132  8C4F CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1133  8C51 C9           	ret 												; _de nuestra nave en los extremos.
1134  8C52
1135  8C52              ; *************************************************************************************************************************************************************
1136  8C52              ;
1137  8C52              ;	14/5/23
1138  8C52              ;
1139  8C52              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1140  8C52              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1141  8C52
1142  8C52              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1143  8C52              ;	_de la 2ª y 3ª entidad respectivamente.
1144  8C52
1145  8C52              Store_Restore_cajas
1146  8C52
1147  8C52 E5           	push hl
1148  8C53 D5           	push de
1149  8C54 C5            	push bc
1150  8C55
1151  8C55              ;	STORE !!!!!
1152  8C55              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1153  8C55
1154  8C55 21 AA 88     	ld hl,Filas
1155  8C58 ED 5B EA 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1156  8C5C 01 3D 00     	ld bc,61
1157  8C5F ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1158  8C61
1159  8C61              ; 	Entidad_sospechosa. 20/4/23
1160  8C61
1161  8C61 3A C3 88     	ld a,(Impacto)
1162  8C64 A7           	and a
1163  8C65 28 0C        	jr z,1F
1164  8C67
1165  8C67 2A EA 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1166  8C6A 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1167  8C6D A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1168  8C6E ED 4A        	adc hl,bc 											; _ "0" más adelante.
1169  8C70 22 0D 89     	ld (Entidad_sospechosa_de_colision),hl
1170  8C73
1171  8C73              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1172  8C73
1173  8C73 2A EC 88     1 ld hl,(Puntero_restore_caja)
1174  8C76 7E           	ld a,(hl)
1175  8C77 A7           	and a
1176  8C78 F5           	push af
1177  8C79 28 08        	jr z,2F
1178  8C7B
1179  8C7B 11 AA 88     	ld de,Filas
1180  8C7E 01 3D 00     	ld bc,61
1181  8C81 ED B0        	ldir
1182  8C83
1183  8C83 CD 9F 8C     2 call Incrementa_punteros_de_cajas
1184  8C86
1185  8C86 F1           	pop af
1186  8C87 28 EA        	jr z,1B
1187  8C89
1188  8C89 C1           	pop bc
1189  8C8A D1           	pop de
1190  8C8B E1           	pop hl
1191  8C8C
1192  8C8C C9           	ret
1193  8C8D
1194  8C8D              ; **************************************************************************************************
1195  8C8D              ;
1196  8C8D              ;	12/05/23
1197  8C8D              ;
1198  8C8D              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1199  8C8D
1200  8C8D E5           Restore_entidad push hl
1201  8C8E D5           	push de
1202  8C8F C5            	push bc
1203  8C90
1204  8C90 2A EA 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1205  8C93 11 AA 88     	ld de,Filas
1206  8C96 01 3D 00     	ld bc,61
1207  8C99 ED B0        	ldir
1208  8C9B
1209  8C9B C1           	pop bc
1210  8C9C D1           	pop de
1211  8C9D E1           	pop hl
1212  8C9E C9           	ret
1213  8C9F
1214  8C9F              ; **************************************************************************************************
1215  8C9F              ;
1216  8C9F              ;	08/05/23
1217  8C9F              ;
1218  8C9F              ;	Incrementamos los dos punteros de entidades. (+1).
1219  8C9F
1220  8C9F              Incrementa_punteros_de_cajas
1221  8C9F
1222  8C9F 2A EC 88     	ld hl,(Puntero_restore_caja)
1223  8CA2 22 EA 88     	ld (Puntero_store_caja),hl
1224  8CA5 2A EE 88     	ld hl,(Indice_restore_caja)
1225  8CA8 23           	inc hl
1226  8CA9 23           	inc hl
1227  8CAA 22 EE 88     	ld (Indice_restore_caja),hl
1228  8CAD CD 04 8C         call Extrae_address
1229  8CB0 22 EC 88         ld (Puntero_restore_caja),hl
1230  8CB3 C9               ret
1231  8CB4
1232  8CB4              ; **************************************************************************************************
1233  8CB4              ;
1234  8CB4              ;	25/01/23
1235  8CB4              ;
1236  8CB4              ;	Restore_Amadeus
1237  8CB4              ;
1238  8CB4              ;	Cargamos en DRAW los parámetros de Amadeus.
1239  8CB4              ;
1240  8CB4
1241  8CB4 E5           Restore_Amadeus	push hl
1242  8CB5 D5           	push de
1243  8CB6 C5            	push bc
1244  8CB7 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1245  8CBA 11 AA 88     	ld de,Filas
1246  8CBD 01 3D 00     	ld bc,61
1247  8CC0 ED B0        	ldir
1248  8CC2 C1           	pop bc
1249  8CC3 D1           	pop de
1250  8CC4 E1           	pop hl
1251  8CC5 C9           	ret
1252  8CC6
1253  8CC6              ; *************************************************************************************************************************************************************
1254  8CC6              ;
1255  8CC6              ;	29/04/23
1256  8CC6              ;
1257  8CC6              ;	Store_Amadeus
1258  8CC6              ;
1259  8CC6              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1260  8CC6              ;
1261  8CC6              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1262  8CC6              ;
1263  8CC6              ;	DESTRUYE: HL y BC y DE.
1264  8CC6
1265  8CC6 21 AA 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1266  8CC9 01 3D 00     	ld bc,61
1267  8CCC ED B0        	ldir
1268  8CCE C9           	ret
1269  8CCF
1270  8CCF              ; -----------------------------------------------------------
1271  8CCF              ;
1272  8CCF              ;	27/04/23
1273  8CCF              ;
1274  8CCF              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1275  8CCF              ;
1276  8CCF              ;	Destruye: HL,BC,DE,A
1277  8CCF
1278  8CCF 21 AA 88     Borra_datos_entidad ld hl,Filas
1279  8CD2 01 3C 00     	ld bc,60
1280  8CD5 AF           	xor a
1281  8CD6 77           	ld (hl),a
1282  8CD7 11 AB 88     	ld de,Filas+1
1283  8CDA ED B0        	ldir
1284  8CDC C9           	ret
1285  8CDD
1286  8CDD              ; -----------------------------------------------------------
1287  8CDD
1288  8CDD              ; Teclado.
1289  8CDD
1290  8CDD 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1291  8CDF DB FE        	in a,($fe)
1292  8CE1 E6 01        	and $01
1293  8CE3 28 02        	jr z,1f
1294  8CE5 18 F6        	jr Pulsa_ENTER
1295  8CE7 C9           1 ret
1296  8CE8
1297  8CE8              ; **************************************************************************************************
1298  8CE8              ;
1299  8CE8              ; Temporización.
1300  8CE8
1301  8CE8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1302  8CE8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1303  8CE8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1304  8CE8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1305  8CE8
1306  8CE8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1307  8CE8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1308  8CE8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1309  8CE8
1310  8CE8              ; A partir de $4f61 no hace falta DELAY.
1311  8CE8
1312  8CE8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1313  8CE8
1314  8CE8 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1315  8CEB 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1316  8CEC 78           	LD A,B
1317  8CED A7           	AND A
1318  8CEE 20 FB        	JR NZ,wait
1319  8CF0 C9           	RET
1320  8CF1
1321  8CF1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1322  8CF1              ;
1323  8CF1              ;	5/3/23
1324  8CF1              ;
1325  8CF1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1326  8CF1
1327  8CF1              Movimiento_Amadeus
1328  8CF1
1329  8CF1              ; Disparo.
1330  8CF1
1331  8CF1 3A 1F 89     	ld a,(Disparo_Amadeus)
1332  8CF4 A7           	and a
1333  8CF5 20 02        	jr nz,1F
1334  8CF7 18 15        	jr 2F
1335  8CF9
1336  8CF9 3E F7        1 ld a,$f7													; "5" para disparar.
1337  8CFB DB FE        	in a,($fe)
1338  8CFD E6 10        	and $10
1339  8CFF
1340  8CFF F5           	push af
1341  8D00 CC A6 8D     	call z,Genera_disparo
1342  8D03 F1           	pop af
1343  8D04 20 08        	jr nz,2F
1344  8D06
1345  8D06 3A 1F 89     	ld a,(Disparo_Amadeus)
1346  8D09 EE 01        	xor 1
1347  8D0B 32 1F 89     	ld (Disparo_Amadeus),a
1348  8D0E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1349  8D10 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1350  8D12 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1351  8D14 CC 7B 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1352  8D17
1353  8D17 3E F7        	ld a,$f7
1354  8D19 DB FE        	in a,($fe)
1355  8D1B E6 01        	and $01
1356  8D1D C8           	ret z
1357  8D1E
1358  8D1E 3E F7        	ld a,$f7
1359  8D20 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1360  8D22 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1361  8D24 CC 5D 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1362  8D27 C9           	ret
1363  8D28
1364  8D28              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1365  8D28              ;
1366  8D28              ;	Rutina provisional para que los malotes cagen balas.
1367  8D28
1368  8D28              Detecta_disparo_entidad
1369  8D28
1370  8D28 3A 22 89     	ld a,(Disparo_entidad)
1371  8D2B A7           	and a
1372  8D2C C8           	ret z
1373  8D2D
1374  8D2D              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1375  8D2D
1376  8D2D              ;	ld a,$7f				; Detecta SPACE.
1377  8D2D              ;	in a,($fe)
1378  8D2D              ;	and 1
1379  8D2D              ;	ret nz
1380  8D2D
1381  8D2D CD A6 8D     	call Genera_disparo
1382  8D30 C9           	ret
1383  8D31
1384  8D31              ; ----------------------------------------------------------------------
1385  8D31              ;
1386  8D31              ;	8/9/23
1387  8D31
1388  8D31 2A 04 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1389  8D34 2B            	dec hl
1390  8D35 7E           	ld a,(hl)
1391  8D36 A7           	and a
1392  8D37 C8           	ret z										; Salimos si es álbum está vacío.
1393  8D38
1394  8D38 11 C9 88     	ld de,Variables_de_borrado+5
1395  8D3B 01 06 00     	ld bc,6
1396  8D3E ED B8        	lddr
1397  8D40 C9           	ret
1398  8D41
1399  8D41              ; ----------------------------------------------------------------------
1400  8D41              ;
1401  8D41              ;	9/9/23
1402  8D41
1403  8D41              Repone_datos_de_borrado_Amadeus
1404  8D41
1405  8D41 21 C4 88     	ld hl,Variables_de_borrado
1406  8D44 11 AC 70     	ld de,Album_de_fotos_Amadeus
1407  8D47 01 06 00     	ld bc,6
1408  8D4A ED B0        	ldir
1409  8D4C
1410  8D4C EB           	ex de,hl
1411  8D4D 22 04 89     	ld (End_Snapshot_Amadeus),hl
1412  8D50
1413  8D50 C9           	ret
1414  8D51
1415  8D51              ; ----------------------------------------------------------------------
1416  8D51              ;
1417  8D51              ;	27/10/23
1418  8D51              ;
1419  8D51
1420  8D51              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1421  8D51              ;	_ Album_de_fotos correspondiente.
1422  8D51
1423  8D51              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1424  8D51              ;	_ durante el proceso de escritura.
1425  8D51
1426  8D51              Repone_datos_de_borrado
1427  8D51
1428  8D51 F3           	di
1429  8D52
1430  8D52 ED 5B FE 88  	ld de,(Stack_snapshot)
1431  8D56 21 C4 88     	ld hl,Variables_de_borrado
1432  8D59 01 06 00     	ld bc,6
1433  8D5C ED B0        	ldir
1434  8D5E FB           	ei
1435  8D5F
1436  8D5F EB           	ex de,hl
1437  8D60 22 FE 88     	ld (Stack_snapshot),hl
1438  8D63
1439  8D63 C9           	ret
1440  8D64
1441  8D64              ; -----------------------------------------------------------------------------------
1442  8D64
1443  8D64              Pinta_Amadeus
1444  8D64
1445  8D64 3E 06        	ld a,6
1446  8D66 D3 FE            out ($fe),a										; Amarillo
1447  8D68
1448  8D68 CD D0 8B        	call Calcula_malotes_Amadeus
1449  8D6B CD 30 96     	call Extrae_foto_Amadeus
1450  8D6E CD 90 8B     	call Limpia_album_Amadeus
1451  8D71
1452  8D71 C9           	ret
1453  8D72
1454  8D72              Pinta_entidades
1455  8D72
1456  8D72              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1457  8D72
1458  8D72 3A 06 89     	ld a,(Ctrl_3)
1459  8D75 CB 47        	bit 0,a
1460  8D77 C8           	ret z
1461  8D78
1462  8D78 CD B8 8B     	call Calcula_numero_de_malotes
1463  8D7B CD AE 95     	call Extrae_foto_entidades
1464  8D7E CD FE 7F     	call Limpia_y_reinicia_Stack_Snapshot
1465  8D81
1466  8D81 C9           	ret
1467  8D82
1468  8D82              ; -----------------------------------------------------------------------------------
1469  8D82              ;
1470  8D82              ;	12/11/23
1471  8D82              ;
1472  8D82              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1473  8D82
1474  8D82              Actualiza_relojes
1475  8D82
1476  8D82 21 1A 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1477  8D85 34           	inc (hl)
1478  8D86
1479  8D86 34           	inc (hl)
1480  8D87 35           	dec (hl)
1481  8D88 C0           	ret nz
1482  8D89
1483  8D89 21 1B 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1484  8D8C 34           	inc (hl)
1485  8D8D C9           	ret
1486  8D8E
1487  8D8E              ; ---------------------------------------------------------------
1488  8D8E              ;
1489  8D8E              ;	27/9/23
1490  8D8E
1491  8D8E              Guarda_parametros_DRAW
1492  8D8E
1493  8D8E 21 AA 88     	ld hl,Filas
1494  8D91 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1495  8D94 01 3D 00     	ld bc,61
1496  8D97 ED B0        	ldir
1497  8D99 C9           	ret
1498  8D9A
1499  8D9A              Recupera_parametros_DRAW
1500  8D9A
1501  8D9A 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1502  8D9D 11 AA 88     	ld de,Filas
1503  8DA0 01 3D 00     	ld bc,61
1504  8DA3 ED B0        	ldir
1505  8DA5 C9           	ret
1506  8DA6
1507  8DA6              ; ---------------------------------------------------------------
1508  8DA6
1509  8DA6              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DA6              ; ******************************************************************************************************************************************************************************************
   2+ 8DA6              ;
   3+ 8DA6              ;   21/07/23
   4+ 8DA6              ;
   5+ 8DA6              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DA6              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DA6              ;
   8+ 8DA6              ;
   9+ 8DA6              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DA6              ;
  11+ 8DA6              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DA6              ;               _ hacen las entidades hacia abajo.
  13+ 8DA6              ;
  14+ 8DA6              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DA6              ;
  16+ 8DA6              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DA6              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DA6              ;
  19+ 8DA6              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DA6              ;           _ la bala.
  21+ 8DA6              ;
  22+ 8DA6              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DA6              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DA6              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DA6              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DA6              ;           _ en el momento de generarse la bala)).
  27+ 8DA6
  28+ 8DA6              Genera_disparo
  29+ 8DA6
  30+ 8DA6              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DA6              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DA6              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DA6              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DA6              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DA6              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DA6              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DA6
  38+ 8DA6              ; Exclusiones:
  39+ 8DA6
  40+ 8DA6 3A C2 88         ld a,(Vel_down)
  41+ 8DA9 47               ld b,a
  42+ 8DAA 3A 19 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8DAD B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8DAE D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8DAF 3A E1 88         ld a,(Columnas)
  46+ 8DB2 47               ld b,a
  47+ 8DB3 3A AB 88         ld a,(Columns)
  48+ 8DB6 B8               cp b
  49+ 8DB7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8DB8
  51+ 8DB8              ; ----- ----- -----
  52+ 8DB8
  53+ 8DB8 3A D4 88         ld a,(Ctrl_0)
  54+ 8DBB CB 77            bit 6,a
  55+ 8DBD 20 06            jr nz,14F
  56+ 8DBF
  57+ 8DBF 3A B1 88         ld a,(Coordenada_y)
  58+ 8DC2 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8DC4 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8DC5
  61+ 8DC5 21 00 80     14 ld hl,Indice_disparo
  62+ 8DC8 3A B2 88         ld a,(CTRL_DESPLZ)
  63+ 8DCB 4F               ld c,a
  64+ 8DCC 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8DCE              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8DCE              ;                                            ""        ""       "f9", B="1"
  67+ 8DCE              ;                                            ""        ""       "fb", B="2"
  68+ 8DCE              ;                                            ""        ""       "fb", B="3"
  69+ 8DCE A7               and a
  70+ 8DCF 28 10            jr z,1F
  71+ 8DD1 E6 01            and 1
  72+ 8DD3 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8DD4
  74+ 8DD4 79               ld a,c
  75+ 8DD5 16 F9            ld d,$f9
  76+ 8DD7 23           2 inc hl
  77+ 8DD8 23               inc hl
  78+ 8DD9 04               inc b
  79+ 8DDA BA               cp d
  80+ 8DDB 28 04            jr z,1F
  81+ 8DDD 14               inc d
  82+ 8DDE 14               inc d
  83+ 8DDF 18 F6            jr 2B
  84+ 8DE1
  85+ 8DE1 CD 04 8C     1 call Extrae_address
  86+ 8DE4 E5               push hl
  87+ 8DE5 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8DE7 DD 21 76 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8DEB
  90+ 8DEB              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8DEB              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8DEB
  93+ 8DEB 3A D4 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8DEE CB 77            bit 6,a
  95+ 8DF0 20 04            jr nz,19F
  96+ 8DF2
  97+ 8DF2 AF               xor a
  98+ 8DF3 32 22 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8DF6
 100+ 8DF6 3A BE 88     19 ld a,(Cuad_objeto)
 101+ 8DF9 FE 02            cp 2
 102+ 8DFB 38 66            jr c,3F
 103+ 8DFD 28 64            jr z,3F
 104+ 8DFF
 105+ 8DFF              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8DFF
 107+ 8DFF E6 01            and 1
 108+ 8E01 28 30            jr z,4F
 109+ 8E03
 110+ 8E03              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E03              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E03              ;
 113+ 8E03              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E03              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E03              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E03
 117+ 8E03 2A AC 88     	ld hl,(Posicion_actual)
 118+ 8E06
 119+ 8E06              ;   Amadeus o entidad ???.
 120+ 8E06
 121+ 8E06 3A D4 88         ld a,(Ctrl_0)
 122+ 8E09 CB 77            bit 6,a
 123+ 8E0B 28 0A            jr z,8F
 124+ 8E0D
 125+ 8E0D              ; 	Dispara Amadeus.
 126+ 8E0D
 127+ 8E0D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E0F CD 9F 95         call PreviousScan
 129+ 8E12 CD 9F 95         call PreviousScan
 130+ 8E15
 131+ 8E15              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E15              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E15              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E15              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E15
 136+ 8E15 18 11            jr 10F
 137+ 8E17
 138+ 8E17              ; 	Dispara Entidad.
 139+ 8E17
 140+ 8E17 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E1A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E1A
 143+ 8E1A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E1A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E1A
 146+ 8E1A C5               push bc
 147+ 8E1B 06 10            ld b,16
 148+ 8E1D CD 90 95     9 call NextScan
 149+ 8E20 10 FB            djnz 9B
 150+ 8E22 C1               pop bc
 151+ 8E23 CD 8D 8E         call Ajusta_disparo_parte_izquierda
 152+ 8E26 18 06            jr 17F
 153+ 8E28
 154+ 8E28              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8E28              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8E28              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8E28              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8E28
 159+ 8E28 CD 8D 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8E2B CD 02 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8E2E              ;                                                      ; _al generar el disparo.
 162+ 8E2E
 163+ 8E2E              ; 	LLegados a este punto tendremos:
 164+ 8E2E              ;
 165+ 8E2E              ;       Puntero_objeto_disparo en IY.
 166+ 8E2E              ;       Rutinas_de_impresion en IX.
 167+ 8E2E              ;       Puntero_de_impresion en HL.
 168+ 8E2E              ;       Impacto/Dirección en BC.
 169+ 8E2E
 170+ 8E2E CD 95 8E     17 call Almacena_disparo
 171+ 8E31 18 52            jr 6F                                             ; RET.
 172+ 8E33
 173+ 8E33              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8E33              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8E33              ;
 176+ 8E33              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8E33              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8E33              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8E33
 180+ 8E33 2A AC 88     4 ld hl,(Posicion_actual)
 181+ 8E36
 182+ 8E36              ;   Amadeus o entidad ???.
 183+ 8E36
 184+ 8E36 3A D4 88         ld a,(Ctrl_0)
 185+ 8E39 CB 77            bit 6,a
 186+ 8E3B 28 0A            jr z,11F
 187+ 8E3D
 188+ 8E3D              ; 	Dispara Amadeus.
 189+ 8E3D
 190+ 8E3D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8E3F CD 9F 95         call PreviousScan
 192+ 8E42 CD 9F 95         call PreviousScan
 193+ 8E45
 194+ 8E45              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E45              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E45              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E45              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E45
 199+ 8E45 18 11            jr 13F
 200+ 8E47
 201+ 8E47              ; 	Dispara Entidad.
 202+ 8E47
 203+ 8E47 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E4A              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E4A
 206+ 8E4A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E4A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E4A
 209+ 8E4A C5               push bc
 210+ 8E4B 06 10            ld b,16
 211+ 8E4D CD 90 95     12 call NextScan
 212+ 8E50 10 FB            djnz 12B
 213+ 8E52 C1               pop bc
 214+ 8E53
 215+ 8E53 CD 86 8E         call Ajusta_disparo_parte_derecha
 216+ 8E56 18 06            jr 18F
 217+ 8E58
 218+ 8E58              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E58              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E58              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E58              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E58
 223+ 8E58 CD 86 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E5B CD 02 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E5E              ;                                                       ; _al generar el disparo.
 226+ 8E5E
 227+ 8E5E              ; LLegados a este punto tendremos:
 228+ 8E5E              ;
 229+ 8E5E              ;       Puntero_objeto_disparo en IY.
 230+ 8E5E              ;       Rutinas_de_impresion en IX.
 231+ 8E5E              ;       Puntero_de_impresion en HL.
 232+ 8E5E              ;       Impacto/Dirección en BC.
 233+ 8E5E
 234+ 8E5E CD 95 8E     18 call Almacena_disparo
 235+ 8E61 18 22            jr 6F                                               ; RET.
 236+ 8E63
 237+ 8E63              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E63
 239+ 8E63 28 11        3 jr z,5F
 240+ 8E65
 241+ 8E65              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E65              ;
 243+ 8E65              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E65              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E65              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E65              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E65
 248+ 8E65              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E65              ;	   ""        ""       "f9", B="1"
 250+ 8E65              ;	   ""        ""       "fb", B="2"
 251+ 8E65              ; 	   ""        ""       "fb", B="3"
 252+ 8E65
 253+ 8E65 2A AC 88     	ld hl,(Posicion_actual)
 254+ 8E68 CD 90 95     	call NextScan
 255+ 8E6B
 256+ 8E6B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E6B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E6B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E6B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E6B
 261+ 8E6B CD 8D 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E6E
 263+ 8E6E              ; 	No se produce impacto. B="$80"
 264+ 8E6E              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E6E
 266+ 8E6E 01 80 80         ld bc,$8080
 267+ 8E71
 268+ 8E71              ; 	LLegados a este punto tendremos:
 269+ 8E71              ;
 270+ 8E71              ;       Puntero_objeto_disparo en IY.
 271+ 8E71              ;       Rutinas_de_impresion en IX.
 272+ 8E71              ;       Puntero_de_impresion en HL.
 273+ 8E71              ;       Impacto/Dirección en BC.
 274+ 8E71
 275+ 8E71 CD 95 8E         call Almacena_disparo
 276+ 8E74 18 0F            jr 6F                                           ; RET.
 277+ 8E76
 278+ 8E76              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E76              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E76              ;
 281+ 8E76              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E76              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E76              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E76              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E76
 286+ 8E76 2A AC 88     5 ld hl,(Posicion_actual)
 287+ 8E79 CD 90 95     	call NextScan
 288+ 8E7C
 289+ 8E7C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E7C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E7C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E7C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E7C
 294+ 8E7C CD 86 8E         call Ajusta_disparo_parte_derecha
 295+ 8E7F
 296+ 8E7F              ; 	No se produce impacto. B="$80"
 297+ 8E7F              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E7F
 299+ 8E7F 01 80 80     15 ld bc,$8080
 300+ 8E82
 301+ 8E82              ; 	LLegados a este punto tendremos:
 302+ 8E82              ;
 303+ 8E82              ;       Puntero_objeto_disparo en IY.
 304+ 8E82              ;       Rutinas_de_impresion en IX.
 305+ 8E82              ;       Puntero_de_impresion en HL.
 306+ 8E82              ;       Impacto/Dirección en BC.
 307+ 8E82
 308+ 8E82 CD 95 8E         call Almacena_disparo
 309+ 8E85
 310+ 8E85 C9           6 ret
 311+ 8E86
 312+ 8E86              ; ----------------------------------------------------------------
 313+ 8E86              ;
 314+ 8E86              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E86              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E86              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E86
 318+ 8E86 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E87 FE 02            cp 2
 320+ 8E89 38 01            jr c,1F
 321+ 8E8B 23               inc hl
 322+ 8E8C C9           1 ret
 323+ 8E8D
 324+ 8E8D 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E8E FE 01        	cp 1
 326+ 8E90 20 01        	jr nz,1F
 327+ 8E92 2B           	dec hl
 328+ 8E93 2B           1 dec hl
 329+ 8E94 C9               ret
 330+ 8E95
 331+ 8E95              ; ----------------------------------------------------------------
 332+ 8E95              ;
 333+ 8E95              ;   25/02/23
 334+ 8E95              ;
 335+ 8E95              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E95              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E95              ;
 338+ 8E95              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E95              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E95
 341+ 8E95              Almacena_disparo
 342+ 8E95
 343+ 8E95 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E96 F1               pop af
 345+ 8E97 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E98
 347+ 8E98 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E99 E6 01            and 1
 349+ 8E9B 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E9D              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E9D              ; 	Dispara AMADEUS.
 352+ 8E9D
 353+ 8E9D              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E9D              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E9D              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E9D              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E9D
 358+ 8E9D C5               push bc
 359+ 8E9E 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8EA1 2A 0A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8EA4 A7               and a
 362+ 8EA5 ED 42            sbc hl,bc
 363+ 8EA7 CC 89 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8EAA C1               pop bc
 365+ 8EAB 28 54            jr z,4F
 366+ 8EAD
 367+ 8EAD 2A 0A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8EB0 23               inc hl
 369+ 8EB1 23               inc hl
 370+ 8EB2 22 0A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8EB5              ;                                                   ; _ Disparo_(+1).
 372+ 8EB5 18 18            jr 2F
 373+ 8EB7
 374+ 8EB7              ; Dispara una entidad.
 375+ 8EB7
 376+ 8EB7 C5           1 push bc
 377+ 8EB8 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8EBB 2A 08 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8EBE A7               and a
 380+ 8EBF ED 42            sbc hl,bc
 381+ 8EC1 CC 82 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8EC4 C1               pop bc
 383+ 8EC5 28 3A            jr z,4F
 384+ 8EC7
 385+ 8EC7 2A 08 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8ECA 23               inc hl
 387+ 8ECB 23               inc hl
 388+ 8ECC 22 08 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8ECF              ;                                                   ; _ Disparo_(+1).
 390+ 8ECF CD 04 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8ED2              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8ED2              ;
 393+ 8ED2              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8ED2              ;                                                     Rutinas_de_impresion en IX.
 395+ 8ED2              ;                                                     Puntero_de_impresion en HL.
 396+ 8ED2              ;                                                     Impacto/Dirección en BC.
 397+ 8ED2
 398+ 8ED2 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8ED3 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8ED4 23               inc hl                                          ; _ al siguiente.
 401+ 8ED5 A7               and a
 402+ 8ED6 20 C0            jr nz,3B
 403+ 8ED8
 404+ 8ED8 08               ex af,af
 405+ 8ED9 ED 73 F8 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8EDD F9               ld sp,hl
 407+ 8EDE
 408+ 8EDE DD E5            push ix                                         ; Rutina de impresión.
 409+ 8EE0 F5               push af                                         ; Puntero de impresión.
 410+ 8EE1 FD E5            push iy                                         ; Puntero objeto.
 411+ 8EE3 C5               push bc                                         ; Control.
 412+ 8EE4
 413+ 8EE4 ED 7B F8 88      ld sp,(Stack)
 414+ 8EE8
 415+ 8EE8              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8EE8
 417+ 8EE8 21 E7 88     	ld hl,Ctrl_1
 418+ 8EEB CB C6        	set 0,(hl)
 419+ 8EED
 420+ 8EED DD E5        	push ix
 421+ 8EEF E1               pop hl
 422+ 8EF0 F5               push af
 423+ 8EF1 DD E1            pop ix
 424+ 8EF3
 425+ 8EF3 CD A0 7F     	call Guarda_foto_registros
 426+ 8EF6
 427+ 8EF6 21 E7 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8EF9 CB 86        	res 0,(hl)
 429+ 8EFB
 430+ 8EFB              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8EFB              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8EFB
 433+ 8EFB CD 89 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8EFE CD 82 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F01
 436+ 8F01 C9           4 ret
 437+ 8F02
 438+ 8F02              ; ----------------------------------------------------------------
 439+ 8F02              ;
 440+ 8F02              ;   4/3/23
 441+ 8F02              ;
 442+ 8F02              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F02              ;   _ al generarse el disparo.
 444+ 8F02              ;
 445+ 8F02              ;       "$80" ..... No se produce colisión.
 446+ 8F02              ;       "$81" ..... Se produce colisión.
 447+ 8F02              ;
 448+ 8F02              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F02              ;         _ que forman el disparo.
 450+ 8F02
 451+ 8F02
 452+ 8F02              Comprueba_Colision
 453+ 8F02
 454+ 8F02              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F02
 456+ 8F02 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F04 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F05
 459+ 8F05 CD 3B 8F         call Modifica_H_Velocidad_disparo
 460+ 8F08
 461+ 8F08 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F09 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F0B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F0D
 465+ 8F0D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F0F CD 2B 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F12
 468+ 8F12 7B               ld a,e
 469+ 8F13 E6 01            and 1
 470+ 8F15 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F17              ;                                                  ; _ para activar IMPACTO.
 472+ 8F17 E1               pop hl
 473+ 8F18 E5               push hl
 474+ 8F19 CD 90 95         call NextScan
 475+ 8F1C
 476+ 8F1C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F1D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F1F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F21              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F21 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8F23 CD 2B 8F         call Bucle_2
 482+ 8F26
 483+ 8F26 43           1 ld b,e
 484+ 8F27 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8F28 FD E1            pop iy
 486+ 8F2A C9               ret
 487+ 8F2B
 488+ 8F2B              ; ---------- ----------
 489+ 8F2B
 490+ 8F2B 06 02        Bucle_2 ld b,2
 491+ 8F2D FD 7E 00     2 ld a,(iy)
 492+ 8F30 A6               and (hl)
 493+ 8F31 28 02            jr z,1F
 494+ 8F33 1E 81            ld e,$81
 495+ 8F35 23           1 inc hl
 496+ 8F36 FD 23            inc iy
 497+ 8F38 10 F3            djnz 2B
 498+ 8F3A C9               ret
 499+ 8F3B
 500+ 8F3B              ; ---------- ----------
 501+ 8F3B              ;
 502+ 8F3B              ;   21/7/23
 503+ 8F3B
 504+ 8F3B              Modifica_H_Velocidad_disparo
 505+ 8F3B
 506+ 8F3B 3A 19 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8F3E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8F40 D0               ret nc                                         ; _ incrementamos H.
 509+ 8F41 24               inc h
 510+ 8F42
 511+ 8F42 C9               ret
 512+ 8F43
 513+ 8F43              ; -------------------------------------------------------------------------------------------------------------
 514+ 8F43              ;
 515+ 8F43              ;   11/04/23
 516+ 8F43              ;
 517+ 8F43              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8F43              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8F43              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8F43              ;
 521+ 8F43              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8F43
 523+ 8F43              Compara_coordenadas_X
 524+ 8F43
 525+ 8F43              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8F43              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8F43
 528+ 8F43              ; Preparamos registros:
 529+ 8F43
 530+ 8F43 F3               di
 531+ 8F44 18 FE            jr $
 532+ 8F46 FB               ei
 533+ 8F47
 534+ 8F47 21 B0 88         ld hl,Filas+6
 535+ 8F4A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 536+ 8F4B 23               inc hl
 537+ 8F4C 23               inc hl
 538+ 8F4D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 539+ 8F4E 43               ld b,e
 540+ 8F4F
 541+ 8F4F 21 BE 88         ld hl,Filas+20
 542+ 8F52 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 543+ 8F53 21 14 89         ld hl,Coordenadas_X_Entidad
 544+ 8F56 CD 72 91         call Guarda_coordenadas_X
 545+ 8F59
 546+ 8F59              ; Preparamos registros:
 547+ 8F59
 548+ 8F59 21 84 85         ld hl,Amadeus_db+6
 549+ 8F5C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 550+ 8F5D 23               inc hl
 551+ 8F5E 23               inc hl
 552+ 8F5F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 553+ 8F60 7B               ld a,e
 554+ 8F61 08               ex af,af'
 555+ 8F62 21 92 85         ld hl,Amadeus_db+20
 556+ 8F65 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 557+ 8F66 21 11 89         ld hl,Coordenadas_X_Amadeus
 558+ 8F69 CD 72 91         call Guarda_coordenadas_X
 559+ 8F6C
 560+ 8F6C              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 561+ 8F6C              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 562+ 8F6C
 563+ 8F6C 04               inc b
 564+ 8F6D 05               dec b
 565+ 8F6E 28 04            jr z,1F
 566+ 8F70 06 03            ld b,3
 567+ 8F72 18 02            jr 2F
 568+ 8F74 06 02        1 ld b,2
 569+ 8F76 08           2 ex af,af'
 570+ 8F77 3C               inc a
 571+ 8F78 3D               dec a
 572+ 8F79 28 04            jr z,5F
 573+ 8F7B 0E 03            ld c,3
 574+ 8F7D 18 02            jr 6F
 575+ 8F7F 0E 02        5 ld c,2
 576+ 8F81 79           6 ld a,c
 577+ 8F82 08               ex af,af'
 578+ 8F83 11 14 89         ld de,Coordenadas_X_Entidad
 579+ 8F86 1A           4 ld a,(de)
 580+ 8F87 21 11 89         ld hl,Coordenadas_X_Amadeus
 581+ 8F8A BE           3 cp (hl)
 582+ 8F8B 28 0E            jr z,7F
 583+ 8F8D 23               inc hl
 584+ 8F8E 0D               dec c
 585+ 8F8F 20 F9            jr nz,3B
 586+ 8F91 13               inc de
 587+ 8F92 08               ex af,af'
 588+ 8F93 4F               ld c,a
 589+ 8F94 08               ex af,af'
 590+ 8F95 10 EF            djnz 4B
 591+ 8F97
 592+ 8F97              ; Limpiamos los almacenes de coordenadas y salimos.
 593+ 8F97
 594+ 8F97 CD AE 91     8 call Limpia_Coordenadas_X
 595+ 8F9A C9               ret
 596+ 8F9B
 597+ 8F9B 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 598+ 8F9D 32 C3 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 599+ 8FA0 21 0C 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 600+ 8FA3 CB D6            set 2,(hl)
 601+ 8FA5 18 F0            jr 8B
 602+ 8FA7
 603+ 8FA7              ; -----------------------------------------------------------------------
 604+ 8FA7              ;
 605+ 8FA7              ;   17/04/23
 606+ 8FA7              ;
 607+ 8FA7
 608+ 8FA7              Detecta_colision_nave_entidad
 609+ 8FA7
 610+ 8FA7              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 611+ 8FA7
 612+ 8FA7 2A AC 88         ld hl,(Posicion_actual)
 613+ 8FAA CD EB 94         call Calcula_puntero_de_impresion
 614+ 8FAD
 615+ 8FAD              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 616+ 8FAD              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 617+ 8FAD
 618+ 8FAD DD E5            push ix
 619+ 8FAF E1               pop hl
 620+ 8FB0 E5               push hl
 621+ 8FB1
 622+ 8FB1              ; ----- ----- -----
 623+ 8FB1 1E 00            ld e,0                                         ; Indica impacto.
 624+ 8FB3 06 0A            ld b,10
 625+ 8FB5 CD E5 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 626+ 8FB8 7B               ld a,e
 627+ 8FB9 FE 05            cp 5
 628+ 8FBB 38 0E            jr c,3F
 629+ 8FBD
 630+ 8FBD              ; LLegados a este punto:
 631+ 8FBD              ;
 632+ 8FBD              ;   HAY COLISIÓN !!!!!.
 633+ 8FBD              ;
 634+ 8FBD              ;   .db (Impacto) de Amadeus a "1".
 635+ 8FBD              ;   SET el bit3 de (Impacto2).
 636+ 8FBD              ;
 637+ 8FBD              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 638+ 8FBD
 639+ 8FBD 21 97 85         ld hl,Amadeus_db+25
 640+ 8FC0 36 01            ld (hl),1
 641+ 8FC2 21 0C 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 642+ 8FC5 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 643+ 8FC7 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 644+ 8FC9 18 18            jr 1F
 645+ 8FCB
 646+ 8FCB              ; -----
 647+ 8FCB
 648+ 8FCB E1           3 pop hl
 649+ 8FCC CD 90 95         call NextScan
 650+ 8FCF E5               push hl
 651+ 8FD0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 652+ 8FD1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 653+ 8FD3 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 654+ 8FD5 30 0C            jr nc,1F
 655+ 8FD7              ;                                                  ; _ 2º scanline si esto es así.
 656+ 8FD7 10 DC            djnz 2B
 657+ 8FD9
 658+ 8FD9              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 659+ 8FD9
 660+ 8FD9              ; LLegados a este punto:
 661+ 8FD9              ;
 662+ 8FD9              ;   NO HAY COLISIÓN !!!!!.
 663+ 8FD9              ;
 664+ 8FD9              ;   .db (Impacto) de Amadeus a "0".
 665+ 8FD9              ;   RES el bit2 de (Impacto2).
 666+ 8FD9              ;
 667+ 8FD9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 668+ 8FD9              ;   Lo colocamos a "0".
 669+ 8FD9
 670+ 8FD9 21 0C 89         ld hl,Impacto2
 671+ 8FDC CB 96            res 2,(hl)
 672+ 8FDE 2A 0D 89         ld hl,(Entidad_sospechosa_de_colision)
 673+ 8FE1 36 00            ld (hl),0
 674+ 8FE3
 675+ 8FE3 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 676+ 8FE4 C9               ret
 677+ 8FE5
 678+ 8FE5               ; ---------- ----------
 679+ 8FE5
 680+ 8FE5 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 681+ 8FE6 3A AB 88         ld a,(Columns)
 682+ 8FE9 47               ld b,a
 683+ 8FEA FD 7E 00     2 ld a,(iy)
 684+ 8FED BE               cp (hl)
 685+ 8FEE 28 01            jr z,1F
 686+ 8FF0
 687+ 8FF0 1C               inc e
 688+ 8FF1
 689+ 8FF1 23           1 inc hl
 690+ 8FF2 FD 23            inc iy
 691+ 8FF4 10 F4            djnz 2B
 692+ 8FF6 C1               pop bc
 693+ 8FF7 C9               ret
 694+ 8FF8
 695+ 8FF8              ; -------------------------------------------------------------------------------------------------------------
 696+ 8FF8              ;
 697+ 8FF8              ;   13/03/23
 698+ 8FF8              ;
 699+ 8FF8              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 700+ 8FF8              ;
 701+ 8FF8              ;   DESTRUYE: HL,BC,DE y A.
 702+ 8FF8
 703+ 8FF8 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 704+ 8FFB 7E               ld a,(hl)
 705+ 8FFC A7               and a
 706+ 8FFD C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 707+ 8FFE
 708+ 8FFE 44               ld b,h
 709+ 8FFF 4D               ld c,l
 710+ 9000 2A 00 89         ld hl,(Stack_snapshot_disparos)
 711+ 9003 E5               push hl
 712+ 9004 A7               and a
 713+ 9005 ED 42            sbc hl,bc
 714+ 9007 E5               push hl
 715+ 9008 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 716+ 9009
 717+ 9009 E1               pop hl
 718+ 900A 54               ld d,h
 719+ 900B 5D               ld e,l
 720+ 900C 1B               dec de
 721+ 900D ED B8            lddr                                                ; Limpiamos.
 722+ 900F
 723+ 900F 21 56 70         ld hl,Album_de_fotos_disparos
 724+ 9012 22 00 89         ld (Stack_snapshot_disparos),hl
 725+ 9015
 726+ 9015 C9               ret
 727+ 9016
 728+ 9016              ; -------------------------------------------------------------------------------------------------------------
 729+ 9016              ;
 730+ 9016              ;   18/07/23
 731+ 9016              ;
 732+ 9016
 733+ 9016              Motor_de_disparos
 734+ 9016
 735+ 9016              ; Gestiona DISPAROS DE AMADEUS.
 736+ 9016
 737+ 9016 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 738+ 9019 2A 0A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 739+ 901C
 740+ 901C CD 04 8C     2 call Extrae_address
 741+ 901F 7E               ld a,(hl)
 742+ 9020 A7               and a
 743+ 9021 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 744+ 9023
 745+ 9023              ; ----- ----- ----- ----- ----- -----
 746+ 9023
 747+ 9023 C5               push bc
 748+ 9024 CD E8 90         call foto_disparo_a_borrar
 749+ 9027
 750+ 9027              ; Existe colisión con este disparo???
 751+ 9027
 752+ 9027 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 753+ 9028 7E               ld a,(hl)
 754+ 9029 2B               dec hl
 755+ 902A E6 01            and 1
 756+ 902C 28 1D            jr z,9F
 757+ 902E
 758+ 902E              ;   En este punto:
 759+ 902E              ;
 760+ 902E              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 761+ 902E              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 762+ 902E              ;   _con la entidad).
 763+ 902E              ;
 764+ 902E              ;   Disparo_2A defw 0                                ; Control.
 765+ 902E              ;    defw 0                                          ; Puntero objeto.
 766+ 902E              ;    defw 0                                          ; Puntero de impresión.
 767+ 902E              ;    defw 0                                          ; Rutina de impresión.
 768+ 902E
 769+ 902E E5               push hl
 770+ 902F
 771+ 902F 06 04            ld b,4
 772+ 9031 23           19 inc hl
 773+ 9032 10 FD            djnz 19B
 774+ 9034
 775+ 9034 CD 04 8C         call Extrae_address
 776+ 9037 CD 59 9C         call Genera_coordenadas_disparo
 777+ 903A
 778+ 903A              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 779+ 903A
 780+ 903A 21 0F 89         ld hl,Coordenadas_disparo_certero
 781+ 903D 72               ld (hl),d
 782+ 903E 23               inc hl
 783+ 903F 73               ld (hl),e
 784+ 9040
 785+ 9040              ; Elimino el disparo de la base de datos.
 786+ 9040
 787+ 9040 E1               pop hl
 788+ 9041 CD 67 91         call Elimina_disparo_de_base_de_datos
 789+ 9044 21 0C 89         ld hl,Impacto2
 790+ 9047 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 791+ 9049
 792+ 9049 18 06            jr 11F
 793+ 904B
 794+ 904B CD 11 91     9 call Mueve_disparo
 795+ 904E CD E8 90         call foto_disparo_a_borrar
 796+ 9051
 797+ 9051 C1           11 pop bc
 798+ 9052 18 04            jr 7F
 799+ 9054
 800+ 9054              ; ----- ----- ----- ----- ----- -----
 801+ 9054
 802+ 9054 ED 42        1 sbc hl,bc
 803+ 9056 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 804+ 9058
 805+ 9058 2A 0A 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 806+ 905B 23               inc hl
 807+ 905C 23               inc hl
 808+ 905D 22 0A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 809+ 9060 18 BA            jr 2B
 810+ 9062
 811+ 9062 CD 89 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 812+ 9065              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 813+ 9065
 814+ 9065              ; Gestiona DISPAROS DE ENTIDADES.
 815+ 9065
 816+ 9065 01 6A 85         ld bc,Disparo_11
 817+ 9068 2A 08 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 818+ 906B
 819+ 906B CD 04 8C     5 call Extrae_address
 820+ 906E 7E               ld a,(hl)
 821+ 906F A7               and a
 822+ 9070 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 823+ 9072
 824+ 9072              ; ----- ----- ----- ----- ----- -----
 825+ 9072
 826+ 9072 C5               push bc
 827+ 9073 CD E8 90         call foto_disparo_a_borrar
 828+ 9076
 829+ 9076              ; Existe colisión con este disparo???
 830+ 9076
 831+ 9076 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 832+ 9077 7E               ld a,(hl)
 833+ 9078 2B               dec hl
 834+ 9079 E6 01            and 1
 835+ 907B 28 4D            jr z,10F
 836+ 907D
 837+ 907D              ;! La colisión se produce con Amadeus???
 838+ 907D              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 839+ 907D
 840+ 907D E5               push hl
 841+ 907E
 842+ 907E 06 04            ld b,4
 843+ 9080 23           16 inc hl
 844+ 9081 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 845+ 9083
 846+ 9083 CD 04 8C         call Extrae_address
 847+ 9086 CD 59 9C         call Genera_coordenadas_disparo
 848+ 9089
 849+ 9089 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 850+ 908A FE 16            cp $16
 851+ 908C 38 2A            jr c,15F
 852+ 908E
 853+ 908E
 854+ 908E              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 855+ 908E
 856+ 908E D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 857+ 908F
 858+ 908F              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 859+ 908F
 860+ 908F
 861+ 908F 2A 17 89         ld hl,(Puntero_de_impresion_Amadeus)
 862+ 9092
 863+ 9092              ; Coordenada X de Amadeus en D.
 864+ 9092
 865+ 9092 7D               ld a,l
 866+ 9093 E6 1F            and $1F
 867+ 9095 57               ld d,a
 868+ 9096
 869+ 9096 21 86 85         ld hl,Amadeus_db+8
 870+ 9099 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 871+ 909A
 872+ 909A 21 11 89         ld hl,Coordenadas_X_Amadeus
 873+ 909D CD 72 91         call Guarda_coordenadas_X
 874+ 90A0
 875+ 90A0 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 876+ 90A1
 877+ 90A1              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 878+ 90A1
 879+ 90A1 06 02            ld b,2
 880+ 90A3 C5           20 push bc
 881+ 90A4
 882+ 90A4 06 03            ld b,3
 883+ 90A6 21 11 89         ld hl,Coordenadas_X_Amadeus
 884+ 90A9 7E           18 ld a,(hl)
 885+ 90AA BA               cp d
 886+ 90AB 20 04            jr nz,17F
 887+ 90AD
 888+ 90AD              ;! Colisión Amadeus !!!!!!!!!!
 889+ 90AD
 890+ 90AD C1               pop bc
 891+ 90AE E1               pop hl
 892+ 90AF 18 0D            jr 14F
 893+ 90B1
 894+ 90B1 23           17 inc hl
 895+ 90B2 10 F5            djnz 18B
 896+ 90B4
 897+ 90B4 14               inc d                       ; 2ª Coordenada_X del disparo.
 898+ 90B5
 899+ 90B5 C1               pop bc
 900+ 90B6 10 EB            djnz 20B
 901+ 90B8
 902+ 90B8
 903+ 90B8              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 904+ 90B8              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 905+ 90B8
 906+ 90B8 E1           15 pop hl
 907+ 90B9 23               inc hl
 908+ 90BA 35               dec (hl)
 909+ 90BB 2B               dec hl
 910+ 90BC 18 0C            jr 10F
 911+ 90BE
 912+ 90BE              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 913+ 90BE              ; _ almacén de coordenadas_X de Amadeus.
 914+ 90BE
 915+ 90BE E5           14 push hl
 916+ 90BF CD 67 91         call Elimina_disparo_de_base_de_datos
 917+ 90C2 21 0C 89         ld hl,Impacto2
 918+ 90C5 CB CE            set 1,(hl)
 919+ 90C7 E1               pop hl
 920+ 90C8 18 06            jr 12F
 921+ 90CA
 922+ 90CA              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 923+ 90CA
 924+ 90CA CD 11 91     10 call Mueve_disparo
 925+ 90CD CD E8 90         call foto_disparo_a_borrar
 926+ 90D0 C1           12 pop bc
 927+ 90D1
 928+ 90D1 18 04            jr 8F
 929+ 90D3
 930+ 90D3              ; ----- ----- ----- ----- ----- -----
 931+ 90D3
 932+ 90D3 ED 42        4 sbc hl,bc
 933+ 90D5 28 0A            jr z,6F
 934+ 90D7
 935+ 90D7 2A 08 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 936+ 90DA 23               inc hl
 937+ 90DB 23               inc hl
 938+ 90DC 22 08 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 939+ 90DF 18 8A            jr 5B
 940+ 90E1
 941+ 90E1 CD 82 8B     6 call Inicia_Puntero_Disparo_Entidades
 942+ 90E4 CD AE 91         call Limpia_Coordenadas_X
 943+ 90E7 C9               ret
 944+ 90E8
 945+ 90E8              ; ------------------------------------------------------------------
 946+ 90E8
 947+ 90E8              foto_disparo_a_borrar
 948+ 90E8
 949+ 90E8 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 950+ 90E9 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 951+ 90EA C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 952+ 90EB
 953+ 90EB E5               push hl
 954+ 90EC 23               inc hl
 955+ 90ED 23               inc hl
 956+ 90EE ED 73 F8 88      ld (Stack),sp
 957+ 90F2 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 958+ 90F3 FD E1            pop iy
 959+ 90F5 DD E1            pop ix
 960+ 90F7 E1               pop hl
 961+ 90F8 ED 7B F8 88      ld sp,(Stack)
 962+ 90FC 3A E7 88         ld a,(Ctrl_1)
 963+ 90FF CB C7            set 0,a
 964+ 9101 32 E7 88         ld (Ctrl_1),a
 965+ 9104 CD A0 7F         call Guarda_foto_registros
 966+ 9107 3A E7 88         ld a,(Ctrl_1)
 967+ 910A CB 87            res 0,a
 968+ 910C 32 E7 88         ld (Ctrl_1),a
 969+ 910F E1               pop hl
 970+ 9110 C9               ret
 971+ 9111
 972+ 9111              ;---------------------------------------------------
 973+ 9111              ;
 974+ 9111              ;   18/07/23
 975+ 9111              ;
 976+ 9111
 977+ 9111              Mueve_disparo
 978+ 9111
 979+ 9111              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 980+ 9111              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 981+ 9111              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 982+ 9111
 983+ 9111 E5               push hl
 984+ 9112
 985+ 9112 7E               ld a,(hl)
 986+ 9113
 987+ 9113 06 04            ld b,4
 988+ 9115 23           1 inc hl
 989+ 9116 10 FD            djnz 1B
 990+ 9118
 991+ 9118              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 992+ 9118
 993+ 9118 CD 04 8C         call Extrae_address
 994+ 911B
 995+ 911B E6 01            and 1
 996+ 911D 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 997+ 911F
 998+ 911F              ; Disparo hacia arriba, (Amadeus).
 999+ 911F
1000+ 911F              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1001+ 911F              ; _ de la dificultad.
1002+ 911F
1003+ 911F CD 9F 95         call PreviousScan
1004+ 9122 CD 9F 95         call PreviousScan
1005+ 9125 CD 9F 95         call PreviousScan
1006+ 9128 CD 9F 95         call PreviousScan
1007+ 912B
1008+ 912B              ; Detecta si el disparo de Amadeus sale de pantalla:
1009+ 912B
1010+ 912B 7C               ld a,h
1011+ 912C FE 40            cp $40
1012+ 912E 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1013+ 9130
1014+ 9130              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1015+ 9130
1016+ 9130 EB               ex de,hl
1017+ 9131 06 04            ld b,4
1018+ 9133 2B           6 dec hl
1019+ 9134 10 FD            djnz 6B
1020+ 9136
1021+ 9136 CD 67 91         call Elimina_disparo_de_base_de_datos
1022+ 9139 E1               pop hl
1023+ 913A 18 10            jr 7F
1024+ 913C
1025+ 913C              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1026+ 913C              ; HL contiene el puntero de impresión del disparo.
1027+ 913C              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1028+ 913C
1029+ 913C D5           3 push de
1030+ 913D C5               push bc
1031+ 913E
1032+ 913E CD 02 8F         call Comprueba_Colision
1033+ 9141
1034+ 9141              ; B="$80", no hay colisión. B="$81", existe colisión.
1035+ 9141
1036+ 9141 78               ld a,b
1037+ 9142
1038+ 9142 C1               pop bc
1039+ 9143 D1               pop de
1040+ 9144
1041+ 9144 EB               ex de,hl
1042+ 9145
1043+ 9145 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1044+ 9146 23               inc hl                                      ; _ movimiento.
1045+ 9147 72               ld (hl),d
1046+ 9148
1047+ 9148 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1048+ 9149
1049+ 9149 23               inc hl                                      ; _ en curso.
1050+ 914A 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1051+ 914B 2B               dec hl
1052+ 914C
1053+ 914C C9           7 ret
1054+ 914D
1055+ 914D              ; Disparo hacia abajo, (Entidad).
1056+ 914D
1057+ 914D 3A 19 89     2 ld a,(Velocidad_disparo_entidades)
1058+ 9150 47               ld b,a
1059+ 9151
1060+ 9151 CD 90 95     4 call NextScan
1061+ 9154 10 FB            djnz 4B
1062+ 9156
1063+ 9156              ; Detecta si el disparo de la entidad sale de la pantalla.
1064+ 9156
1065+ 9156 7C               ld a,h
1066+ 9157 FE 58            cp $58
1067+ 9159 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1068+ 915B
1069+ 915B EB               ex de,hl
1070+ 915C 06 04            ld b,4
1071+ 915E 2B           5 dec hl
1072+ 915F 10 FD            djnz 5B
1073+ 9161
1074+ 9161 CD 67 91         call Elimina_disparo_de_base_de_datos
1075+ 9164 E1               pop hl
1076+ 9165 18 E5            jr 7B
1077+ 9167
1078+ 9167              ; HL apunta al primer byte de la base de datos del disparo.
1079+ 9167
1080+ 9167 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1081+ 916A AF               xor a
1082+ 916B 77               ld (hl),a
1083+ 916C 54               ld d,h
1084+ 916D 5D               ld e,l
1085+ 916E 13               inc de
1086+ 916F ED B0            ldir
1087+ 9171 C9               ret
1088+ 9172
1089+ 9172              ; -----------------------------------------------------------------
1090+ 9172              ;
1091+ 9172              ;   19/7/23
1092+ 9172              ;
1093+ 9172              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1094+ 9172              ;
1095+ 9172              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1096+ 9172              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1097+ 9172              ;
1098+ 9172              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1099+ 9172              ;
1100+ 9172              ;   INPUTS:
1101+ 9172              ;
1102+ 9172              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1103+ 9172              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1104+ 9172
1105+ 9172              ;   MODIFICA: A, HL, BC y DE.
1106+ 9172
1107+ 9172              Guarda_coordenadas_X
1108+ 9172
1109+ 9172 7B               ld a,e
1110+ 9173 A7               and a
1111+ 9174 20 04            jr nz,1F
1112+ 9176
1113+ 9176 06 02            ld b,2
1114+ 9178 18 02            jr 2F
1115+ 917A
1116+ 917A 06 03        1 ld b,3
1117+ 917C 72           2 ld (hl),d
1118+ 917D 23               inc hl
1119+ 917E 14               inc d
1120+ 917F 10 FB            djnz 2B
1121+ 9181
1122+ 9181 C9               ret
1123+ 9182
1124+ 9182              ; -----------------------------------------------------------------
1125+ 9182              ;
1126+ 9182              ;   12/04/23
1127+ 9182              ;
1128+ 9182
1129+ 9182 3A 0C 89     Selector_de_impactos ld a,(Impacto2)
1130+ 9185 A7               and a
1131+ 9186 C8               ret z
1132+ 9187
1133+ 9187 FE 04            cp 4
1134+ 9189 20 09            jr nz,1F
1135+ 918B
1136+ 918B
1137+ 918B              ; La colisión se produce por contacto entre Amadeus y una entidad.
1138+ 918B
1139+ 918B CD A7 8F         call Detecta_colision_nave_entidad
1140+ 918E
1141+ 918E 21 0C 89         ld hl,Impacto2
1142+ 9191 CB 5E            bit 3,(hl)
1143+ 9193 C0               ret nz                                               ; Existe colisión, RET.
1144+ 9194
1145+ 9194              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1146+ 9194              ; Primero analizamos si algún disparo impacta en Amadeus.
1147+ 9194
1148+ 9194 21 0C 89     1 ld hl,Impacto2
1149+ 9197 CB 4E            bit 1,(hl)
1150+ 9199 28 07            jr z,2F
1151+ 919B
1152+ 919B 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1153+ 919E 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1154+ 91A0 18 0B            jr 3F
1155+ 91A2
1156+ 91A2 21 0C 89     2 ld hl,Impacto2
1157+ 91A5 CB 46            bit 0,(hl)
1158+ 91A7 C8               ret z
1159+ 91A8
1160+ 91A8              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1161+ 91A8
1162+ 91A8 21 E7 88         ld hl,Ctrl_1
1163+ 91AB CB D6            set 2,(hl)
1164+ 91AD
1165+ 91AD C9           3 ret
1166+ 91AE
1167+ 91AE              ; -----------------------------------------------------------------
1168+ 91AE              ;
1169+ 91AE              ;   19/7/23
1170+ 91AE              ;
1171+ 91AE              ;   Limpia las coordenadas_x de Amadeus y entidad.
1172+ 91AE
1173+ 91AE AF           Limpia_Coordenadas_X xor a
1174+ 91AF 06 06            ld b,6
1175+ 91B1 21 11 89         ld hl,Coordenadas_X_Amadeus
1176+ 91B4 77           1 ld (hl),a
1177+ 91B5 23               inc hl
1178+ 91B6 10 FC            djnz 1B
1179+ 91B8 C9               ret
1180+ 91B9
1181+ 91B9              ; -----------------------------------------------------------------
1182+ 91B9              ;
1183+ 91B9              ;   25/04/23
1184+ 91B9              ;
1185+ 91B9
1186+ 91B9              Determina_resultado_comparativa
1187+ 91B9
1188+ 91B9              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1189+ 91B9              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1190+ 91B9              ;
1191+ 91B9              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1192+ 91B9              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1193+ 91B9              ;
1194+ 91B9              ;   SBC HL,DE
1195+ 91B9
1196+ 91B9              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1197+ 91B9              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1198+ 91B9
1199+ 91B9              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1200+ 91B9              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1201+ 91B9
1202+ 91B9
1203+ 91B9 3A BE 88         ld a,(Cuad_objeto)
1204+ 91BC FE 02            cp 2
1205+ 91BE 28 26            jr z,2F
1206+ 91C0 38 24            jr c,2F
1207+ 91C2
1208+ 91C2              ; Cuadrantes 3º y 4º
1209+ 91C2
1210+ 91C2 E6 01            and 1
1211+ 91C4 28 10            jr z,4F
1212+ 91C6
1213+ 91C6              ; Cuadrante 3º
1214+ 91C6
1215+ 91C6 7C               ld a,h
1216+ 91C7 06 00            ld b,0
1217+ 91C9
1218+ 91C9 CD 54 92         call Compara_cositas_H3
1219+ 91CC
1220+ 91CC 04               inc b
1221+ 91CD 05               dec b
1222+ 91CE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1223+ 91CF
1224+ 91CF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1225+ 91D0 06 00            ld b,0
1226+ 91D2
1227+ 91D2 CD 66 92         call Compara_cositas_L3
1228+ 91D5 C9               ret
1229+ 91D6
1230+ 91D6              ; Cuadrante 4º
1231+ 91D6
1232+ 91D6 7C           4 ld a,h
1233+ 91D7 06 00            ld b,0
1234+ 91D9
1235+ 91D9 CD 78 92         call Compara_cositas_H4
1236+ 91DC
1237+ 91DC 04               inc b
1238+ 91DD 05               dec b
1239+ 91DE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1240+ 91DF
1241+ 91DF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1242+ 91E0 06 00            ld b,0
1243+ 91E2
1244+ 91E2 CD 8E 92         call Compara_cositas_L4
1245+ 91E5 C9               ret
1246+ 91E6
1247+ 91E6              ; Cuadrantes 1º y 2º.
1248+ 91E6
1249+ 91E6 28 10        2 jr z,3F
1250+ 91E8
1251+ 91E8              ; 1er Cuadrante
1252+ 91E8
1253+ 91E8 7C               ld a,h
1254+ 91E9 06 00            ld b,0
1255+ 91EB
1256+ 91EB CD 2C 92         call Compara_cositas_H1
1257+ 91EE
1258+ 91EE 04               inc b
1259+ 91EF 05               dec b
1260+ 91F0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1261+ 91F1
1262+ 91F1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1263+ 91F2 06 00            ld b,0
1264+ 91F4
1265+ 91F4 CD 42 92         call Compara_cositas_L1
1266+ 91F7 C9               ret
1267+ 91F8
1268+ 91F8
1269+ 91F8              ; 2º Cuadrante
1270+ 91F8
1271+ 91F8 7C           3 ld a,h
1272+ 91F9 06 00            ld b,0
1273+ 91FB
1274+ 91FB CD 08 92         call Compara_cositas_H2
1275+ 91FE
1276+ 91FE 04               inc b
1277+ 91FF 05               dec b
1278+ 9200 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1279+ 9201
1280+ 9201 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1281+ 9202 06 00            ld b,0
1282+ 9204
1283+ 9204 CD 1A 92         call Compara_cositas_L2
1284+ 9207 C9               ret
1285+ 9208
1286+ 9208 A7           Compara_cositas_H2 and a
1287+ 9209 28 0D            jr z,1F
1288+ 920B              ;    cp $fd
1289+ 920B              ;    jr z,1F
1290+ 920B              ;    cp $fe
1291+ 920B              ;    jr z,1F
1292+ 920B FE FF            cp $ff
1293+ 920D 28 09            jr z,1F
1294+ 920F FE 01            cp $01
1295+ 9211 28 05            jr z,1F
1296+ 9213 FE 02            cp $02
1297+ 9215 28 01            jr z,1F
1298+ 9217 C0               ret nz
1299+ 9218 04           1 inc b
1300+ 9219 C9               ret
1301+ 921A
1302+ 921A A7           Compara_cositas_L2 and a
1303+ 921B 28 0D            jr z,1F
1304+ 921D              ;    cp $fd
1305+ 921D              ;    jr z,1F
1306+ 921D FE FE            cp $fe
1307+ 921F 28 09            jr z,1F
1308+ 9221 FE FF            cp $ff
1309+ 9223 28 05            jr z,1F
1310+ 9225 FE 01            cp $01
1311+ 9227 28 01            jr z,1F
1312+ 9229              ;    cp $02
1313+ 9229              ;    jr z,1F
1314+ 9229 C0               ret nz
1315+ 922A 04           1 inc b
1316+ 922B C9               ret
1317+ 922C
1318+ 922C A7           Compara_cositas_H1 and a
1319+ 922D 28 11            jr z,1F
1320+ 922F              ;    cp $fd
1321+ 922F              ;    jr z,1F
1322+ 922F              ;    cp $fe
1323+ 922F              ;    jr z,1F
1324+ 922F FE FF            cp $ff
1325+ 9231 28 0D            jr z,1F
1326+ 9233 FE 01            cp $01
1327+ 9235 28 09            jr z,1F
1328+ 9237 FE 02            cp $02
1329+ 9239 28 05            jr z,1F
1330+ 923B FE 03            cp $03
1331+ 923D 28 01            jr z,1F
1332+ 923F C0               ret nz
1333+ 9240 04           1 inc b
1334+ 9241 C9               ret
1335+ 9242
1336+ 9242 A7           Compara_cositas_L1 and a
1337+ 9243 28 0D            jr z,1F
1338+ 9245              ;    cp $fd
1339+ 9245              ;    jr z,1F
1340+ 9245              ;    cp $fe
1341+ 9245              ;    jr z,1F
1342+ 9245              ;    cp $ff
1343+ 9245              ;    jr z,1F
1344+ 9245 FE 01            cp $01
1345+ 9247 28 09            jr z,1F
1346+ 9249 FE 02            cp $02
1347+ 924B 28 05            jr z,1F
1348+ 924D FE 03            cp $03
1349+ 924F 28 01            jr z,1F
1350+ 9251 C0               ret nz
1351+ 9252 04           1 inc b
1352+ 9253 C9               ret
1353+ 9254
1354+ 9254 A7           Compara_cositas_H3 and a
1355+ 9255 28 0D            jr z,1F
1356+ 9257              ;    cp $fd
1357+ 9257              ;    jr z,1F
1358+ 9257 FE FE            cp $fe
1359+ 9259 28 09            jr z,1F
1360+ 925B FE FF            cp $ff
1361+ 925D 28 05            jr z,1F
1362+ 925F FE 01            cp $01
1363+ 9261 28 01            jr z,1F
1364+ 9263              ;    cp $02
1365+ 9263              ;    jr z,1F
1366+ 9263              ;    cp $03
1367+ 9263              ;    jr z,1F
1368+ 9263 C0               ret nz
1369+ 9264 04           1 inc b
1370+ 9265 C9               ret
1371+ 9266
1372+ 9266 A7           Compara_cositas_L3 and a
1373+ 9267 28 0D            jr z,1F
1374+ 9269              ;    cp $fd
1375+ 9269              ;    jr z,1F
1376+ 9269              ;    cp $fe
1377+ 9269              ;    jr z,1F
1378+ 9269              ;    cp $ff
1379+ 9269              ;    jr z,1F
1380+ 9269 FE 01            cp $01
1381+ 926B 28 09            jr z,1F
1382+ 926D FE 02            cp $02
1383+ 926F 28 05            jr z,1F
1384+ 9271 FE 03            cp $03
1385+ 9273 28 01            jr z,1F
1386+ 9275 C0               ret nz
1387+ 9276 04           1 inc b
1388+ 9277 C9               ret
1389+ 9278
1390+ 9278 A7           Compara_cositas_H4 and a
1391+ 9279 28 11            jr z,1F
1392+ 927B FE FD            cp $fd
1393+ 927D 28 0D            jr z,1F
1394+ 927F FE FE            cp $fe
1395+ 9281 28 09            jr z,1F
1396+ 9283 FE FF            cp $ff
1397+ 9285 28 05            jr z,1F
1398+ 9287 FE 01            cp $01
1399+ 9289 28 01            jr z,1F
1400+ 928B              ;    cp $02
1401+ 928B              ;    jr z,1F
1402+ 928B              ;    cp $03
1403+ 928B              ;    jr z,1F
1404+ 928B C0               ret nz
1405+ 928C 04           1 inc b
1406+ 928D C9               ret
1407+ 928E
1408+ 928E A7           Compara_cositas_L4 and a
1409+ 928F 28 0D            jr z,1F
1410+ 9291              ;    cp $fd
1411+ 9291              ;    jr z,1F
1412+ 9291 FE FE            cp $fe
1413+ 9293 28 09            jr z,1F
1414+ 9295 FE FF            cp $ff
1415+ 9297 28 05            jr z,1F
1416+ 9299 FE 01            cp $01
1417+ 929B 28 01            jr z,1F
1418+ 929D              ;    cp $02
1419+ 929D              ;    jr z,1F
1420+ 929D              ;    cp $03
1421+ 929D              ;    jr z,1F
1422+ 929D C0               ret nz
1423+ 929E 04           1 inc b
1424+ 929F C9               ret
# file closed: Disparo.asm
1510  92A0              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92A0              ; ******************************************************************************************************************************************************************************************
   2+ 92A0              ;
   3+ 92A0              ; 26/06/23
   4+ 92A0              ;
   5+ 92A0              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92A0
   7+ 92A0 CD 84 95     Draw call Prepara_draw
   8+ 92A3 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92A4 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92A5 28 05        	jr z,2F
  11+ 92A7
  12+ 92A7 3A BE 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92AA 18 0C        	jr 1F
  14+ 92AC
  15+ 92AC 2A BC 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 92AF 22 AC 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 92B2 CD 41 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 92B5              ;													; _la esquina superior izquierda de la pantalla.
  19+ 92B5 CD E4 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 92B8
  21+ 92B8 3A D4 88     1 ld a,(Ctrl_0)
  22+ 92BB CB 6F        	bit 5,a
  23+ 92BD 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 92BF
  25+ 92BF CD D7 92     	call Comprueba_limite_horizontal
  26+ 92C2 CD 67 93     	call Comprueba_limite_vertical
  27+ 92C5
  28+ 92C5              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 92C5              ; -----------------------
  30+ 92C5              ; -----------------------
  31+ 92C5              ; -----------------------
  32+ 92C5
  33+ 92C5 CD B4 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 92C8 CD EB 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 92CB CD 4A 95     	call Define_rutina_de_impresion
  36+ 92CE
  37+ 92CE 3A D4 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 92D1 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 92D3 32 D4 88     	ld (Ctrl_0),a
  40+ 92D6
  41+ 92D6 C9           	ret
  42+ 92D7
  43+ 92D7              ; *******************************************************************************************************************************************************************************************
  44+ 92D7              ;	21/01/23
  45+ 92D7              ;
  46+ 92D7              ; 	Comprueba_limite_horizontal.
  47+ 92D7              ;
  48+ 92D7              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 92D7              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 92D7              ;
  51+ 92D7              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 92D7              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 92D7              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 92D7              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 92D7
  56+ 92D7
  57+ 92D7
  58+ 92D7 3A D4 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 92DA CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 92DC 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 92DE E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 92E0 32 D4 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 92E3 18 09            jr 6F
  64+ 92E5 CB 5F        1 bit 3,a
  65+ 92E7 28 0A            jr z,2F
  66+ 92E9 E6 F7            and $f7
  67+ 92EB 32 D4 88         ld (Ctrl_0),a
  68+ 92EE CD 41 94     6 call Inicializacion
  69+ 92F1 18 5B            jr 5F
  70+ 92F3 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92F4
  72+ 92F4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92F4              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92F4
  75+ 92F4 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92F5 2A E2 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92F8 CD A3 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 92FB 67           	ld h,a
  79+ 92FC EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 92FD CD A3 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9300 67           	ld h,a
  82+ 9301 A7           	and a
  83+ 9302 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9304 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9305 3A BE 88     	ld a,(Cuad_objeto)
  86+ 9308 FE 02        	cp 2
  87+ 930A 38 1E        	jr c,3F
  88+ 930C 28 1C        	jr z,3F
  89+ 930E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 930F 28 23            jr z,7F
  91+ 9311 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9313 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9315 E1           	pop hl
  94+ 9316
  95+ 9316              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9316              ; _para indicar con E="2" en caso necesario.
  97+ 9316
  98+ 9316 E5               push hl
  99+ 9317 C5               push bc
 100+ 9318 CD A3 98     	call calcula_tercio
 101+ 931B FE 01        	cp 1
 102+ 931D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 931F CD 4F 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9322 28 26            jr z,9F
 105+ 9324 38 24            jr c,9F
 106+ 9326 1E 00        11 ld e,0
 107+ 9328 18 22            jr 8F
 108+ 932A 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 932B 28 07        	jr z, 7F
 110+ 932D 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 932F 1E 00         	ld e,0
 112+ 9331 E1           	pop hl
 113+ 9332 18 04        	jr 4F
 114+ 9334 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9336 18 15            jr 10F
 116+ 9338
 117+ 9338              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9338              ; _para indicar con E="2" en caso necesario.
 119+ 9338
 120+ 9338 E5           4 push hl
 121+ 9339 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 933A CD A3 98     	call calcula_tercio
 123+ 933D FE 01        	cp 1
 124+ 933F 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9341 CD 4F 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9344 28 04            jr z,9F
 127+ 9346 30 02            jr nc,9F
 128+ 9348 18 02        	jr 8F
 129+ 934A 1E 02        9 ld e,2
 130+ 934C C1           8 pop bc
 131+ 934D E1           10 pop hl
 132+ 934E C9           5 ret
 133+ 934F
 134+ 934F              ; --------------------
 135+ 934F              ;
 136+ 934F              ; 25/08/22
 137+ 934F
 138+ 934F CD A3 98     Comprueba_centro call calcula_tercio
 139+ 9352 67               ld h,a
 140+ 9353 08           	ex af,af
 141+ 9354 FE 02        	cp 2
 142+ 9356 38 07        	jr c,1F
 143+ 9358 28 05        	jr z,1F
 144+ 935A 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 935D 18 03        	jr 2F
 146+ 935F 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9362 08           2 ex af,af
 148+ 9363 A7               and a
 149+ 9364 ED 42            sbc hl,bc
 150+ 9366 C9               ret
 151+ 9367
 152+ 9367              ; *********************************************************************************************************************************************************************************************
 153+ 9367              ;
 154+ 9367              ;   16/8/22
 155+ 9367              ;
 156+ 9367              ;	Comprueba_limite_vertical
 157+ 9367              ;
 158+ 9367              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9367              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9367              ;
 161+ 9367
 162+ 9367 2A AC 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 936A 7D           	ld a,l
 164+ 936B E6 1F        	and $1F
 165+ 936D 57           	ld d,a
 166+ 936E 3A E4 88     	ld a,(Limite_vertical)
 167+ 9371 BA           	cp d 											; Límite - Posición.
 168+ 9372 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9373 3A BE 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9376 CB 47        	bit 0,a
 171+ 9378 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 937A
 173+ 937A              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 937A
 175+ 937A 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 937B 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 937D
 178+ 937D              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 937D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 937D
 181+ 937D 3A B0 88         ld a,(Coordenada_X)
 182+ 9380 16 0F            ld d,Centro_izquierda
 183+ 9382 A7               and a
 184+ 9383 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9384 28 1E            jr z,3F
 186+ 9386 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9388              ;                                                    ; _salimos sin modificar nada.
 188+ 9388 18 0E            jr 2F
 189+ 938A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 938B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 938D
 192+ 938D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 938D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 938D
 195+ 938D 3A B0 88         ld a,(Coordenada_X)
 196+ 9390 16 10            ld d,Centro_derecha
 197+ 9392 A7               and a
 198+ 9393 92               sub d
 199+ 9394 28 0E            jr z,3F
 200+ 9396 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9398              ;                                                    ; _salimos sin modificar nada.
 202+ 9398 CB 43        2 bit 0,e
 203+ 939A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 939C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 939D CD 31 94         call Modificaccionne
 206+ 93A0 C1           	pop bc
 207+ 93A1 CD 41 94         call Inicializacion
 208+ 93A4 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 93A5
 210+ 93A5              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 93A5
 212+ 93A5 C5           4 push bc
 213+ 93A6 01 AB 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 93A9 0A           	ld a,(bc)
 215+ 93AA 3D           	dec a
 216+ 93AB 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 93AC 7D           	ld a,l
 218+ 93AD 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 93AE CB 47        	bit 0,a
 220+ 93B0 28 03        	jr z,5F
 221+ 93B2 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 93B3 18 2E        	jr 7F
 223+ 93B5
 224+ 93B5              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 93B5
 226+ 93B5 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 93B6 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 93B7 3A D4 88     	ld a,(Ctrl_0)
 229+ 93BA CB 4F        	bit 1,a
 230+ 93BC 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 93BE F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 93BF
 233+ 93BF              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 93BF
 235+ 93BF 1C               inc e
 236+ 93C0 1D               dec e
 237+ 93C1 20 07            jr nz,12F
 238+ 93C3 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 93C4 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 93C5 22 AC 88     	ld (Posicion_actual),hl
 241+ 93C8 18 44        13 jr 9F
 242+ 93CA CB 43        12 bit 0,e
 243+ 93CC 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 93CE              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 93CE C1           	pop bc
 246+ 93CF 18 D3        	jr 3B
 247+ 93D1 80           14 add b
 248+ 93D2 6F               ld l,a
 249+ 93D3 22 AC 88     	ld (Posicion_actual),hl
 250+ 93D6 CD 31 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 93D9 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 93DB E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 93DD 32 D4 88         ld (Ctrl_0),a
 254+ 93E0 F1           	pop af
 255+ 93E1 18 2B        	jr 9F
 256+ 93E3
 257+ 93E3              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 93E3
 259+ 93E3 F5           7 push af
 260+ 93E4 3A D4 88     	ld a,(Ctrl_0)
 261+ 93E7 CB 47        	bit 0,a
 262+ 93E9 20 1D        	jr nz,8F
 263+ 93EB F1           	pop af
 264+ 93EC
 265+ 93EC              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93EC
 267+ 93EC 1C           	inc e
 268+ 93ED 1D               dec e
 269+ 93EE 20 07            jr nz,10F
 270+ 93F0 90           	sub b
 271+ 93F1 6F               ld l,a
 272+ 93F2 22 AC 88     	ld (Posicion_actual),hl
 273+ 93F5 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93F7              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93F7 CB 43        10 bit 0,e
 276+ 93F9 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 93FB              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 93FB C1           	pop bc
 279+ 93FC 18 A6        	jr 3B
 280+ 93FE 90           16 sub b
 281+ 93FF 6F               ld l,a
 282+ 9400 22 AC 88     	ld (Posicion_actual),hl
 283+ 9403 CD 31 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9406 18 06            jr 9F
 285+ 9408 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 940A 32 D4 88         ld (Ctrl_0),a
 287+ 940D F1           	pop af
 288+ 940E C1           9 pop bc
 289+ 940F 1E 00        	ld e,0
 290+ 9411 CD 41 94         call Inicializacion
 291+ 9414 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9415 08           	ex af,af
 293+ 9416 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9417 18 8B            jr 3B
 295+ 9419
 296+ 9419              ; --------------------
 297+ 9419
 298+ 9419 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 941B CD 9F 95     1 call PreviousScan
 300+ 941E 10 FB            djnz 1B
 301+ 9420 22 AC 88     	ld (Posicion_actual),hl
 302+ 9423 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9424 C9           	ret
 304+ 9425
 305+ 9425              ; --------------------
 306+ 9425
 307+ 9425 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9427 CD 90 95     1 call NextScan
 309+ 942A 10 FB            djnz 1B
 310+ 942C 22 AC 88     	ld (Posicion_actual),hl
 311+ 942F AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9430 C9           	ret
 313+ 9431
 314+ 9431              ; --------------------
 315+ 9431              ;
 316+ 9431              ;	22/01/23
 317+ 9431              ;
 318+ 9431              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9431              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9431              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9431
 322+ 9431
 323+ 9431              Modificaccionne
 324+ 9431
 325+ 9431 3A BE 88     	ld a,(Cuad_objeto)
 326+ 9434 FE 02        	cp 2
 327+ 9436 CC 19 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9439 DC 19 94         call c,Modifica_Pos_actual
 329+ 943C C8           	ret z
 330+ 943D CD 25 94         call Modifica_Pos_actual2
 331+ 9440 C9               ret
 332+ 9441
 333+ 9441              ; *************************************************************************************************************************************************************************************************
 334+ 9441              ;
 335+ 9441              ;	13/8/22
 336+ 9441              ;
 337+ 9441              ;	Inicializacion
 338+ 9441              ;
 339+ 9441              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9441              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9441              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9441              ;
 343+ 9441              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9441              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9441              ;	_ desaparece/aparece.
 346+ 9441
 347+ 9441              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9441              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9441              ;
 350+ 9441              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9441              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9441              ; 		   [E] ="0"
 353+ 9441
 354+ 9441              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9441
 356+ 9441 CD A3 98     Inicializacion call calcula_tercio
 357+ 9444 28 36        	jr z,primit
 358+ 9446 E6 02        	and 2
 359+ 9448 20 07        	jr nz,segmit
 360+ 944A 7D           	ld a,l
 361+ 944B FE 7F        	cp $7f
 362+ 944D 38 2D        	jr c,primit
 363+ 944F 28 2B        	jr z,primit
 364+ 9451 CD AE 94     segmit call column
 365+ 9454 38 13        	jr c,tercuad
 366+ 9456 3E 04        cuarcuad ld a,4
 367+ 9458 32 BE 88     	ld (Cuad_objeto),a
 368+ 945B 21 20 48     	ld hl,$4820
 369+ 945E 22 E2 88     	ld (Limite_horizontal),hl
 370+ 9461 21 E4 88     	ld hl,Limite_vertical
 371+ 9464 36 0D        	ld (hl),$0d
 372+ 9466 08           	ex af,af
 373+ 9467 18 3C        	jr 1F
 374+ 9469              tercuad
 375+ 9469 3E 03        	ld a,3
 376+ 946B 32 BE 88     	ld (Cuad_objeto),a
 377+ 946E 21 20 48     	ld hl,$4820
 378+ 9471 22 E2 88     	ld (Limite_horizontal),hl
 379+ 9474 21 E4 88     	ld hl,Limite_vertical
 380+ 9477 36 12        	ld (hl),$12
 381+ 9479 08           	ex af,af
 382+ 947A 18 29        	jr 1F
 383+ 947C CD AE 94     primit call column
 384+ 947F 38 13        	jr c, primcuad
 385+ 9481              segcuad
 386+ 9481 3E 02        	ld a,2
 387+ 9483 32 BE 88     	ld (Cuad_objeto),a
 388+ 9486 21 C0 4F     	ld hl,$4fc0
 389+ 9489 22 E2 88     	ld (Limite_horizontal),hl
 390+ 948C 21 E4 88     	ld hl,Limite_vertical
 391+ 948F 36 0D        	ld (hl),$0d
 392+ 9491 08           	ex af,af
 393+ 9492 18 11        	jr 1F
 394+ 9494              primcuad
 395+ 9494 3E 01        	ld a,1
 396+ 9496 32 BE 88     	ld (Cuad_objeto),a
 397+ 9499 21 C0 4F     	ld hl,$4fc0
 398+ 949C 22 E2 88     	ld (Limite_horizontal),hl
 399+ 949F 21 E4 88     	ld hl,Limite_vertical
 400+ 94A2 36 12        	ld (hl),$12
 401+ 94A4 08           	ex af,af
 402+ 94A5 CD 2E 9C     1 call Genera_coordenadas
 403+ 94A8 21 D4 88     	ld hl,Ctrl_0
 404+ 94AB CB EE        	set 5,(hl)
 405+ 94AD C9           	ret
 406+ 94AE
 407+ 94AE              ; ------------------------------------------------------------------------------------------------------------------
 408+ 94AE
 409+ 94AE              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 94AE              ;
 411+ 94AE              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 94AE
 413+ 94AE 7D           column ld a,l
 414+ 94AF E6 1F        	and $1f
 415+ 94B1 FE 10         	cp $10
 416+ 94B3 C9            	ret
 417+ 94B4
 418+ 94B4              ; --------------------------------------------------------------------------------------------------------------------
 419+ 94B4              ;
 420+ 94B4              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 94B4              ;
 422+ 94B4              ; 14/12/22
 423+ 94B4              ;
 424+ 94B4              ;	Modifica: A y BC.
 425+ 94B4
 426+ 94B4 3A BE 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 94B7 E6 01        	and 1
 428+ 94B9 28 17        	jr z,1F
 429+ 94BB
 430+ 94BB              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 94BB
 432+ 94BB 3A B0 88     	ld a,(Coordenada_X)
 433+ 94BE 47           	ld b,a
 434+ 94BF 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 94C0 79           	ld a,c
 436+ 94C1 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 94C2 38 08        	jr c,2F
 438+ 94C4 47           	ld b,a
 439+ 94C5 79           	ld a,c
 440+ 94C6 90           	sub b
 441+ 94C7 32 E1 88     	ld (Columnas),a
 442+ 94CA 18 1B        	jr 4F
 443+ 94CC 79           2 ld a,c
 444+ 94CD 32 E1 88     	ld (Columnas),a
 445+ 94D0 18 15        	jr 4F
 446+ 94D2
 447+ 94D2              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 94D2
 449+ 94D2 3A B0 88     1 ld a,(Coordenada_X)
 450+ 94D5 81           	add c
 451+ 94D6 3D           	dec a
 452+ 94D7 D6 1F        	sub $1f
 453+ 94D9 38 08        	jr c,3F
 454+ 94DB 47           	ld b,a
 455+ 94DC 79           	ld a,c
 456+ 94DD 90           	sub b
 457+ 94DE 32 E1 88     	ld (Columnas),a
 458+ 94E1 18 04        	jr 4F
 459+ 94E3 79           3 ld a,c
 460+ 94E4 32 E1 88     	ld (Columnas),a
 461+ 94E7 D9           4 exx
 462+ 94E8 4F           	ld c,a
 463+ 94E9 D9           	exx
 464+ 94EA C9            ret
 465+ 94EB
 466+ 94EB              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94EB              ;
 468+ 94EB              ;   19/7/23
 469+ 94EB              ;
 470+ 94EB              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94EB              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94EB              ;
 473+ 94EB              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94EB              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94EB              ;
 476+ 94EB              ;	DESTRUYE: HL,B Y A.
 477+ 94EB
 478+ 94EB 3A BE 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 94EE FE 02        	cp 2
 480+ 94F0 38 18        	jr c,1F
 481+ 94F2 28 16        	jr z,1F
 482+ 94F4 E6 01        	and 1
 483+ 94F6 28 0D        	jr z,3F
 484+ 94F8
 485+ 94F8              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94F8
 487+ 94F8 CD 3E 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 94FB
 489+ 94FB 7D           9 ld a,l
 490+ 94FC E6 1F        	and $1f
 491+ 94FE 28 2A        	jr z,7F
 492+ 9500 2B           	dec hl
 493+ 9501 10 F8        	djnz 9B
 494+ 9503 18 25        	jr 7F
 495+ 9505
 496+ 9505              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9505
 498+ 9505 2A AC 88     3 ld hl,(Posicion_actual)
 499+ 9508 18 20        	jr 7F
 500+ 950A
 501+ 950A 28 14        1 jr z,2F
 502+ 950C
 503+ 950C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 950C
 505+ 950C CD 3E 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 950F
 507+ 950F 7D           4 ld a,l
 508+ 9510 E6 1F        	and $1f
 509+ 9512 28 03        	jr z,6F
 510+ 9514 2B           	dec hl
 511+ 9515 10 F8        	djnz 4B
 512+ 9517 06 0F        6 ld b,15
 513+ 9519 CD 9F 95     5 call PreviousScan
 514+ 951C 10 FB        	djnz 5B
 515+ 951E 18 0A        	jr 7F
 516+ 9520
 517+ 9520              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9520
 519+ 9520 CD 3E 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9523 06 0F        	ld b,15
 521+ 9525 CD 9F 95     8 call PreviousScan
 522+ 9528 10 FB        	djnz 8B
 523+ 952A
 524+ 952A E5           7 push hl
 525+ 952B DD E1        	pop ix
 526+ 952D
 527+ 952D 2A AE 88     	ld hl,(Puntero_objeto)
 528+ 9530 E5           	push hl
 529+ 9531 FD E1        	pop iy
 530+ 9533
 531+ 9533              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9533
 533+ 9533 3A D4 88     	ld a,(Ctrl_0)
 534+ 9536 CB 77        	bit 6,a
 535+ 9538 C8           	ret z
 536+ 9539
 537+ 9539              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9539              ; _ entidad / Amadeus´.
 539+ 9539
 540+ 9539 DD 22 17 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 953D
 542+ 953D C9           	ret
 543+ 953E
 544+ 953E              ; --------------------------------------------------------------------------------------------------------------------
 545+ 953E              ;
 546+ 953E              ;	2/1/23
 547+ 953E              ;
 548+ 953E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 953E              ;
 550+ 953E              ;	Tras esta rutina tenemos:
 551+ 953E              ;
 552+ 953E              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 953E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 953E              ;
 555+ 953E              ;	DESTRUYE!!!!! HL,B y A.
 556+ 953E
 557+ 953E 2A AC 88     Operandos ld hl,(Posicion_actual)
 558+ 9541 3A E1 88     	ld a,(Columnas)
 559+ 9544 3D           	dec a
 560+ 9545 20 01        	jr nz,1F
 561+ 9547 3C           	inc a
 562+ 9548 47           1 ld b,a
 563+ 9549 C9           	ret
 564+ 954A
 565+ 954A              ; --------------------------------------------------------------------------------------------------------------------
 566+ 954A              ;
 567+ 954A              ;	3/1/23
 568+ 954A              ;
 569+ 954A              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 954A              ;
 571+ 954A              ;	Destruye: A,B,HL y DE.
 572+ 954A
 573+ 954A              Define_rutina_de_impresion
 574+ 954A
 575+ 954A 3A AB 88     	ld a,(Columns)
 576+ 954D 47           	ld b,a
 577+ 954E 3A E1 88     	ld a,(Columnas)
 578+ 9551 B8           	cp b
 579+ 9552 20 0D        	jr nz,2f
 580+ 9554
 581+ 9554              ;	La entidad se imprime entera.
 582+ 9554
 583+ 9554 21 73 96     	ld hl, Indice_entidades_completas
 584+ 9557 E6 01        	and 1
 585+ 9559 28 02        	jr z,1F
 586+ 955B
 587+ 955B 23           	inc hl
 588+ 955C 23           	inc hl
 589+ 955D
 590+ 955D CD 04 8C     1 call Extrae_address
 591+ 9560 C9           	ret		;	ret
 592+ 9561
 593+ 9561              ;	La entidad no se imprime entera en pantalla.
 594+ 9561
 595+ 9561 3A BE 88     2 ld a,(Cuad_objeto)
 596+ 9564 E6 01        	and 1
 597+ 9566 28 17        	jr z,3F
 598+ 9568
 599+ 9568              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9568
 601+ 9568 21 77 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 956B 3A AB 88     4 ld a,(Columns)
 603+ 956E E6 01        	and 1
 604+ 9570 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9572
 606+ 9572 23           	inc hl
 607+ 9573 23           	inc hl
 608+ 9574
 609+ 9574 3A E1 88     	ld a,(Columnas)
 610+ 9577 E6 01        	and 1
 611+ 9579 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 957B
 613+ 957B 23           	inc hl
 614+ 957C 23           	inc hl
 615+ 957D
 616+ 957D 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 957F
 618+ 957F 21 7D 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9582 18 E7        	jr 4B
 620+ 9584
 621+ 9584              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9584              ;
 623+ 9584              ;	Prepara_draw
 624+ 9584              ;
 625+ 9584              ;	Es una rutina de carga.
 626+ 9584              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9584              ;
 628+ 9584              ;	FUNCIONAMIENTO:
 629+ 9584              ;
 630+ 9584              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9584              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9584              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9584              ;
 634+ 9584              ;	DESTRUYE:
 635+ 9584              ;
 636+ 9584              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9584
 638+ 9584 21 AA 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9587 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9588 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9589 4E           	ld c,(hl)
 642+ 958A 2A AC 88     	ld hl,(Posicion_actual)
 643+ 958D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 958F C9           	ret
 645+ 9590
 646+ 9590              ;----------------------------------------------------------------------------------------------------------------
 647+ 9590              ;
 648+ 9590              ;	5/08/22
 649+ 9590              ;
 650+ 9590              ;   NextScan.
 651+ 9590              ;
 652+ 9590              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9590              ;
 654+ 9590              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9590              ;
 656+ 9590              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9590              ;
 658+ 9590              ;       DESTRUIDOS: AF y HL !!!
 659+ 9590              ;
 660+ 9590              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9590              ;
 662+ 9590
 663+ 9590 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9591 7C               ld a,h
 665+ 9592 E6 07            and 7
 666+ 9594 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9595
 668+ 9595 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9596 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9598 6F               ld l,a
 671+ 9599 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 959A
 673+ 959A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 959B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 959D 67               ld h,a
 676+ 959E C9               ret
 677+ 959F
 678+ 959F              ;----------------------------------------------------------------------------------------------------------------
 679+ 959F              ;
 680+ 959F              ;	5/08/22
 681+ 959F              ;
 682+ 959F              ;   PreviousScan.
 683+ 959F              ;
 684+ 959F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 959F              ;
 686+ 959F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 959F              ;
 688+ 959F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 959F              ;
 690+ 959F              ;       DESTRUIDOS: AF y HL !!!
 691+ 959F              ;
 692+ 959F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 959F              ;
 694+ 959F
 695+ 959F 7C           PreviousScan ld a,h
 696+ 95A0 25               dec h               ; Dec H.
 697+ 95A1 E6 07            and 7
 698+ 95A3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 95A4
 700+ 95A4 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 95A5 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 95A7 6F               ld l,a
 703+ 95A8 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 95A9
 705+ 95A9 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 95AA C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 95AC 67               ld h,a
 708+ 95AD C9               ret
 709+ 95AE
 710+ 95AE              ; -----------------------------------------------------------------------------------
 711+ 95AE              ;
 712+ 95AE              ;	31/7/23
 713+ 95AE              ;
 714+ 95AE              ;	Rutina principal de pintado de entidades.
 715+ 95AE              ;	Extrae la foto del frame, (entidades).
 716+ 95AE
 717+ 95AE              Extrae_foto_entidades
 718+ 95AE
 719+ 95AE 21 01 70     	ld hl,Album_de_fotos+1
 720+ 95B1 7E           	ld a,(hl)
 721+ 95B2 A7           	and a
 722+ 95B3 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 95B4
 724+ 95B4              ;	No hay datos, (entidades para pintar en este frame).
 725+ 95B4
 726+ 95B4 3A F3 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 95B7 A7           	and a
 728+ 95B8 C8           	ret z
 729+ 95B9
 730+ 95B9              ; -----------------------------------
 731+ 95B9
 732+ 95B9 ED 73 F8 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 95BD 31 00 70     	ld sp,Album_de_fotos
 734+ 95C0
 735+ 95C0 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 95C2 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 95C3 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 95C4
 739+ 95C4 ED 73 FA 88  	ld (Stack_2),sp
 740+ 95C8 ED 7B F8 88  	ld sp,(Stack)
 741+ 95CC
 742+ 95CC              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 95CC
 744+ 95CC 3E CD        	ld a,$cd
 745+ 95CE 32 D6 95     	ld (Imprime),a
 746+ 95D1 EB           	ex de,hl
 747+ 95D2 22 D7 95     	ld (Imprime+1),hl
 748+ 95D5 EB           	ex de,hl
 749+ 95D6
 750+ 95D6              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 95D6
 752+ 95D6 00 00 00     Imprime db 0,0,0
 753+ 95D9
 754+ 95D9 ED 73 F8 88  	ld (Stack),sp
 755+ 95DD
 756+ 95DD 3A F3 88     	ld a,(Numero_de_malotes)
 757+ 95E0 3D           	dec a
 758+ 95E1 28 09        	jr z,1F
 759+ 95E3 32 F3 88      	ld (Numero_de_malotes),a
 760+ 95E6
 761+ 95E6 ED 7B FA 88  	ld sp,(Stack_2)
 762+ 95EA 18 D4        	jr 2B
 763+ 95EC
 764+ 95EC AF           1 xor a
 765+ 95ED 32 FA 88     	ld (Stack_2),a
 766+ 95F0
 767+ 95F0 C9           	ret
 768+ 95F1
 769+ 95F1              ; -----------------------------------------------------------------------------------
 770+ 95F1              ;
 771+ 95F1              ;	28/2/23
 772+ 95F1              ;
 773+ 95F1              ;	Pinta los disparos generados.
 774+ 95F1
 775+ 95F1              Extrae_foto_disparos
 776+ 95F1
 777+ 95F1 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 95F4 7E               ld a,(hl)
 779+ 95F5 A7               and a
 780+ 95F6 C8               ret z
 781+ 95F7
 782+ 95F7 3A 07 89     	ld a,(Numero_de_disparotes)
 783+ 95FA A7           	and a
 784+ 95FB C8           	ret z
 785+ 95FC ED 73 F8 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9600 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 9603
 788+ 9603 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9605 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9606 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9607
 792+ 9607 ED 73 FA 88  	ld (Stack_2),sp
 793+ 960B ED 7B F8 88  	ld sp,(Stack)
 794+ 960F
 795+ 960F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 960F
 797+ 960F 3E CD        	ld a,$cd
 798+ 9611 32 19 96     	ld (Imprime2),a
 799+ 9614 EB           	ex de,hl
 800+ 9615 22 1A 96     	ld (Imprime2+1),hl
 801+ 9618 EB           	ex de,hl
 802+ 9619
 803+ 9619              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 9619
 805+ 9619 00 00 00     Imprime2 db 0,0,0
 806+ 961C
 807+ 961C 3A 07 89     	ld a,(Numero_de_disparotes)
 808+ 961F 3D           	dec a
 809+ 9620 28 09        	jr z,1F
 810+ 9622 32 07 89      	ld (Numero_de_disparotes),a
 811+ 9625
 812+ 9625 ED 7B FA 88  	ld sp,(Stack_2)
 813+ 9629 18 D8        	jr 2B
 814+ 962B
 815+ 962B AF           1 xor a
 816+ 962C 32 FA 88     	ld (Stack_2),a
 817+ 962F C9           	ret
 818+ 9630
 819+ 9630              ; -----------------------------------------------------------------------------------
 820+ 9630              ;
 821+ 9630              ;	4/9/23
 822+ 9630              ;
 823+ 9630              ;	Rutina principal de pintado de Amadeus.
 824+ 9630              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 9630
 826+ 9630 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 9633 7E           	ld a,(hl)
 828+ 9634 A7           	and a
 829+ 9635 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 9636
 831+ 9636 3A F3 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9639 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 963A C8           	ret z
 834+ 963B
 835+ 963B              ; -----------------------------------
 836+ 963B
 837+ 963B ED 73 F8 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 963F 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 9642
 840+ 9642 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9644 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 9645 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 9646
 844+ 9646 ED 73 FA 88  	ld (Stack_2),sp
 845+ 964A ED 7B F8 88  	ld sp,(Stack)
 846+ 964E
 847+ 964E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 964E
 849+ 964E 3E CD        	ld a,$cd
 850+ 9650 32 58 96     	ld (Imprime_Amadeus),a
 851+ 9653 EB           	ex de,hl
 852+ 9654 22 59 96     	ld (Imprime_Amadeus+1),hl
 853+ 9657 EB           	ex de,hl
 854+ 9658
 855+ 9658              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 9658
 857+ 9658 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 965B
 859+ 965B ED 73 F8 88  	ld (Stack),sp
 860+ 965F
 861+ 965F 3A F3 88     	ld a,(Numero_de_malotes)
 862+ 9662 3D           	dec a
 863+ 9663 28 09        	jr z,1F
 864+ 9665 32 F3 88      	ld (Numero_de_malotes),a
 865+ 9668
 866+ 9668 ED 7B FA 88  	ld sp,(Stack_2)
 867+ 966C 18 D4        	jr 2B
 868+ 966E
 869+ 966E AF           1 xor a
 870+ 966F 32 FA 88     	ld (Stack_2),a
 871+ 9672
 872+ 9672 C9           	ret
# file closed: Draw_XOR.asm
1511  9673              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9673              ;   índices de Rutinas de impresión.
   2+ 9673
   3+ 9673 83 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9675 B0 96            defw Pinta_Amadeus_3x2
   5+ 9677
   6+ 9677 06 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9679 A6 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 967B 5A 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 967D
  10+ 967D 30 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 967F 34 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9681 E8 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9683
  14+ 9683
  15+ 9683              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9683              ;
  17+ 9683              ;   12/12/22
  18+ 9683              ;
  19+ 9683              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9683              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9683              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9683              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9683              ;
  24+ 9683              ;   Modifica: DE y HL.
  25+ 9683
  26+ 9683 ED 73 F8 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9687 FD F9        	ld sp,iy
  28+ 9689 06 10            ld b,16
  29+ 968B D1           1 pop de
  30+ 968C 7B               ld a,e
  31+ 968D AE               xor (hl)
  32+ 968E 77           	ld (hl),a
  33+ 968F 23           	inc hl
  34+ 9690 7A               ld a,d
  35+ 9691 AE               xor (hl)
  36+ 9692 77           	ld (hl),a
  37+ 9693 2B           	dec hl
  38+ 9694 24           	inc h
  39+ 9695 7C               ld a,h
  40+ 9696 E6 07            and 7
  41+ 9698 20 0A            jr nz,2F
  42+ 969A 7D               ld a,l
  43+ 969B C6 20            add a,$20
  44+ 969D 6F               ld l,a
  45+ 969E 38 04            jr c,2F
  46+ 96A0 7C               ld a,h
  47+ 96A1 D6 08            sub 8
  48+ 96A3 67               ld h,a
  49+ 96A4 7C           2 ld a,h
  50+ 96A5 FE 58            cp $58
  51+ 96A7 28 02            jr z,3F
  52+ 96A9 10 E0            djnz 1B
  53+ 96AB ED 7B F8 88  3 ld sp,(Stack)
  54+ 96AF C9           	ret
  55+ 96B0
  56+ 96B0 ED 73 F8 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96B4 FD F9        	ld sp,iy
  58+ 96B6 06 08            ld b,8
  59+ 96B8 D1           1 pop de
  60+ 96B9 7B               ld a,e
  61+ 96BA AE               xor (hl)
  62+ 96BB 77           	ld (hl),a
  63+ 96BC 23           	inc hl
  64+ 96BD 7A               ld a,d
  65+ 96BE AE               xor (hl)
  66+ 96BF 77           	ld (hl),a
  67+ 96C0 23           	inc hl
  68+ 96C1 D1           	pop de
  69+ 96C2 7B               ld a,e
  70+ 96C3 AE               xor (hl)
  71+ 96C4 77           	ld (hl),a
  72+ 96C5 2B           	dec hl
  73+ 96C6 2B           	dec hl
  74+ 96C7 24           	inc h
  75+ 96C8 7C               ld a,h
  76+ 96C9 E6 07            and 7
  77+ 96CB 20 0A            jr nz,2F
  78+ 96CD 7D               ld a,l
  79+ 96CE C6 20            add a,$20
  80+ 96D0 6F               ld l,a
  81+ 96D1 38 04            jr c,2F
  82+ 96D3 7C               ld a,h
  83+ 96D4 D6 08            sub 8
  84+ 96D6 67               ld h,a
  85+ 96D7 7C           2 ld a,h
  86+ 96D8 FE 58            cp $58
  87+ 96DA 28 25            jr z,4F
  88+ 96DC 7A               ld a,d
  89+ 96DD AE               xor (hl)
  90+ 96DE 77               ld (hl),a
  91+ 96DF D1           	pop de
  92+ 96E0 23           	inc hl
  93+ 96E1 7B               ld a,e
  94+ 96E2 AE               xor (hl)
  95+ 96E3 77           	ld (hl),a
  96+ 96E4 23           	inc hl
  97+ 96E5 7A               ld a,d
  98+ 96E6 AE               xor (hl)
  99+ 96E7 77           	ld (hl),a
 100+ 96E8 2B           	dec hl
 101+ 96E9 2B           	dec hl
 102+ 96EA 24           	inc h
 103+ 96EB 7C               ld a,h
 104+ 96EC E6 07            and 7
 105+ 96EE 20 0A            jr nz,3F
 106+ 96F0 7D               ld a,l
 107+ 96F1 C6 20            add a,$20
 108+ 96F3 6F               ld l,a
 109+ 96F4 38 04            jr c,3F
 110+ 96F6 7C               ld a,h
 111+ 96F7 D6 08            sub 8
 112+ 96F9 67               ld h,a
 113+ 96FA 7C           3 ld a,h
 114+ 96FB FE 58            cp $58
 115+ 96FD 28 02            jr z,4F
 116+ 96FF 10 B7            djnz 1B
 117+ 9701 ED 7B F8 88  4 ld sp,(Stack)
 118+ 9705 C9           	ret
 119+ 9706
 120+ 9706              ; ---------------------------------------------------
 121+ 9706
 122+ 9706 ED 73 F8 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 970A FD F9        	ld sp,iy
 124+ 970C
 125+ 970C              ; >>>
 126+ 970C
 127+ 970C 06 10            ld b,16
 128+ 970E D1           1 pop de
 129+ 970F 7A           	ld a,d
 130+ 9710 AE           	xor (hl)
 131+ 9711 77           	ld (hl),a
 132+ 9712 24           	inc h
 133+ 9713 7C               ld a,h
 134+ 9714 E6 07            and 7
 135+ 9716 20 0C            jr nz,2F
 136+ 9718 7D               ld a,l
 137+ 9719 C6 20            add a,$20
 138+ 971B 6F               ld l,a
 139+ 971C 38 06            jr c,2F
 140+ 971E 7C               ld a,h
 141+ 971F D6 08            sub 8
 142+ 9721 67               ld h,a
 143+ 9722 18 00            jr 2F
 144+ 9724 7C           2 ld a,h
 145+ 9725 FE 58            cp $58
 146+ 9727 28 02            jr z,3F
 147+ 9729 10 E3            djnz 1B
 148+ 972B ED 7B F8 88  3 ld sp,(Stack)
 149+ 972F C9           	ret
 150+ 9730
 151+ 9730 ED 73 F8 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9734 FD F9        	ld sp,iy
 153+ 9736
 154+ 9736              ; >>>
 155+ 9736
 156+ 9736 06 10            ld b,16
 157+ 9738 D1           1 pop de
 158+ 9739 7B           	ld a,e
 159+ 973A AE           	xor (hl)
 160+ 973B 77           	ld (hl),a
 161+ 973C 24           	inc h
 162+ 973D 7C               ld a,h
 163+ 973E E6 07            and 7
 164+ 9740 20 0C            jr nz,2F
 165+ 9742 7D               ld a,l
 166+ 9743 C6 20            add a,$20
 167+ 9745 6F               ld l,a
 168+ 9746 38 06            jr c,2F
 169+ 9748 7C               ld a,h
 170+ 9749 D6 08            sub 8
 171+ 974B 67               ld h,a
 172+ 974C 18 00            jr 2F
 173+ 974E 7C           2 ld a,h
 174+ 974F FE 58            cp $58
 175+ 9751 28 02            jr z,3F
 176+ 9753 10 E3            djnz 1B
 177+ 9755 ED 7B F8 88  3 ld sp,(Stack)
 178+ 9759 C9           	ret
 179+ 975A
 180+ 975A              ; ---------------------------------------------------
 181+ 975A
 182+ 975A ED 73 F8 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 975E FD F9        	ld sp,iy
 184+ 9760 06 08            ld b,8
 185+ 9762 D1           1 pop de
 186+ 9763 7A           	ld a,d
 187+ 9764 AE           	xor (hl)
 188+ 9765 77           	ld (hl),a
 189+ 9766 23           	inc hl
 190+ 9767 D1           	pop de
 191+ 9768 7B           	ld a,e
 192+ 9769 AE           	xor (hl)
 193+ 976A 77           	ld (hl),a
 194+ 976B 2B           	dec hl
 195+ 976C 24            	inc h
 196+ 976D 7C               ld a,h
 197+ 976E E6 07            and 7
 198+ 9770 20 0A            jr nz,2F
 199+ 9772 7D               ld a,l
 200+ 9773 C6 20            add a,$20
 201+ 9775 6F               ld l,a
 202+ 9776 38 04            jr c,2F
 203+ 9778 7C               ld a,h
 204+ 9779 D6 08            sub 8
 205+ 977B 67               ld h,a
 206+ 977C 7C           2 ld a,h
 207+ 977D FE 58            cp $58
 208+ 977F 28 20            jr z,4F
 209+ 9781 D1               pop de
 210+ 9782 7B           	ld a,e
 211+ 9783 AE           	xor (hl)
 212+ 9784 77           	ld (hl),a
 213+ 9785 23           	inc hl
 214+ 9786 7A           	ld a,d
 215+ 9787 AE           	xor (hl)
 216+ 9788 77           	ld (hl),a
 217+ 9789 2B           	dec hl
 218+ 978A 24           	inc h
 219+ 978B 7C               ld a,h
 220+ 978C E6 07            and 7
 221+ 978E 20 0A            jr nz,3F
 222+ 9790 7D               ld a,l
 223+ 9791 C6 20            add a,$20
 224+ 9793 6F               ld l,a
 225+ 9794 38 04            jr c,3F
 226+ 9796 7C               ld a,h
 227+ 9797 D6 08            sub 8
 228+ 9799 67               ld h,a
 229+ 979A 7C           3 ld a,h
 230+ 979B FE 58            cp $58
 231+ 979D 28 02            jr z,4F
 232+ 979F 10 C1            djnz 1B
 233+ 97A1 ED 7B F8 88  4 ld sp,(Stack)
 234+ 97A5 C9           	ret
 235+ 97A6
 236+ 97A6 ED 73 F8 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97AA FD F9        	ld sp,iy
 238+ 97AC 06 08            ld b,8
 239+ 97AE D1           1 pop de
 240+ 97AF D1           	pop de
 241+ 97B0 7B           	ld a,e
 242+ 97B1 AE           	xor (hl)
 243+ 97B2 77           	ld (hl),a
 244+ 97B3 24            	inc h
 245+ 97B4 7C               ld a,h
 246+ 97B5 E6 07            and 7
 247+ 97B7 20 0A            jr nz,2F
 248+ 97B9 7D               ld a,l
 249+ 97BA C6 20            add a,$20
 250+ 97BC 6F               ld l,a
 251+ 97BD 38 04            jr c,2F
 252+ 97BF 7C               ld a,h
 253+ 97C0 D6 08            sub 8
 254+ 97C2 67               ld h,a
 255+ 97C3 7C           2 ld a,h
 256+ 97C4 FE 58            cp $58
 257+ 97C6 28 1B            jr z,4F
 258+ 97C8 D1               pop de
 259+ 97C9 7A           	ld a,d
 260+ 97CA AE           	xor (hl)
 261+ 97CB 77           	ld (hl),a
 262+ 97CC 24           	inc h
 263+ 97CD 7C               ld a,h
 264+ 97CE E6 07            and 7
 265+ 97D0 20 0A            jr nz,3F
 266+ 97D2 7D               ld a,l
 267+ 97D3 C6 20            add a,$20
 268+ 97D5 6F               ld l,a
 269+ 97D6 38 04            jr c,3F
 270+ 97D8 7C               ld a,h
 271+ 97D9 D6 08            sub 8
 272+ 97DB 67               ld h,a
 273+ 97DC 7C           3 ld a,h
 274+ 97DD FE 58            cp $58
 275+ 97DF 28 02            jr z,4F
 276+ 97E1 10 CB            djnz 1B
 277+ 97E3 ED 7B F8 88  4 ld sp,(Stack)
 278+ 97E7 C9           	ret
 279+ 97E8
 280+ 97E8 ED 73 F8 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97EC FD F9        	ld sp,iy
 282+ 97EE 06 08            ld b,8
 283+ 97F0 D1           1 pop de
 284+ 97F1 7B           	ld a,e
 285+ 97F2 AE           	xor (hl)
 286+ 97F3 77           	ld (hl),a
 287+ 97F4 23           	inc hl
 288+ 97F5 7A           	ld a,d
 289+ 97F6 AE           	xor (hl)
 290+ 97F7 77           	ld (hl),a
 291+ 97F8 2B           	dec hl
 292+ 97F9 24             	inc h
 293+ 97FA 7C               ld a,h
 294+ 97FB E6 07            and 7
 295+ 97FD 20 0A            jr nz,2F
 296+ 97FF 7D               ld a,l
 297+ 9800 C6 20            add a,$20
 298+ 9802 6F               ld l,a
 299+ 9803 38 04            jr c,2F
 300+ 9805 7C               ld a,h
 301+ 9806 D6 08            sub 8
 302+ 9808 67               ld h,a
 303+ 9809 7C           2 ld a,h
 304+ 980A FE 58            cp $58
 305+ 980C 28 21            jr z,4F
 306+ 980E D1               pop de
 307+ 980F 7A           	ld a,d
 308+ 9810 AE           	xor (hl)
 309+ 9811 77           	ld (hl),a
 310+ 9812 23           	inc hl
 311+ 9813 D1               pop de
 312+ 9814 7B           	ld a,e
 313+ 9815 AE           	xor (hl)
 314+ 9816 77           	ld (hl),a
 315+ 9817 2B           	dec hl
 316+ 9818 24           	inc h
 317+ 9819 7C               ld a,h
 318+ 981A E6 07            and 7
 319+ 981C 20 0A            jr nz,3F
 320+ 981E 7D               ld a,l
 321+ 981F C6 20            add a,$20
 322+ 9821 6F               ld l,a
 323+ 9822 38 04            jr c,3F
 324+ 9824 7C               ld a,h
 325+ 9825 D6 08            sub 8
 326+ 9827 67               ld h,a
 327+ 9828 7C           3 ld a,h
 328+ 9829 FE 58            cp $58
 329+ 982B 28 02            jr z,4F
 330+ 982D 10 C1            djnz 1B
 331+ 982F ED 7B F8 88  4 ld sp,(Stack)
 332+ 9833 C9           	ret
 333+ 9834
 334+ 9834 ED 73 F8 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9838 FD F9        	ld sp,iy
 336+ 983A 06 08            ld b,8
 337+ 983C D1           1 pop de
 338+ 983D 7B           	ld a,e
 339+ 983E AE           	xor (hl)
 340+ 983F 77           	ld (hl),a
 341+ 9840 24            	inc h
 342+ 9841 7C               ld a,h
 343+ 9842 E6 07            and 7
 344+ 9844 20 0A            jr nz,2F
 345+ 9846 7D               ld a,l
 346+ 9847 C6 20            add a,$20
 347+ 9849 6F               ld l,a
 348+ 984A 38 04            jr c,2F
 349+ 984C 7C               ld a,h
 350+ 984D D6 08            sub 8
 351+ 984F 67               ld h,a
 352+ 9850 7C           2 ld a,h
 353+ 9851 FE 58            cp $58
 354+ 9853 28 1C            jr z,4F
 355+ 9855 D1               pop de
 356+ 9856 7A           	ld a,d
 357+ 9857 AE           	xor (hl)
 358+ 9858 77           	ld (hl),a
 359+ 9859 24           	inc h
 360+ 985A 7C               ld a,h
 361+ 985B E6 07            and 7
 362+ 985D 20 0A            jr nz,3F
 363+ 985F 7D               ld a,l
 364+ 9860 C6 20            add a,$20
 365+ 9862 6F               ld l,a
 366+ 9863 38 04            jr c,3F
 367+ 9865 7C               ld a,h
 368+ 9866 D6 08            sub 8
 369+ 9868 67               ld h,a
 370+ 9869 7C           3 ld a,h
 371+ 986A FE 58            cp $58
 372+ 986C 28 03            jr z,4F
 373+ 986E D1               pop de
 374+ 986F 10 CB            djnz 1B
 375+ 9871 ED 7B F8 88  4 ld sp,(Stack)
 376+ 9875 C9           	ret
 377+ 9876
 378+ 9876              ; ---------------------------------------------------
 379+ 9876              ;
 380+ 9876              ;   27/02/23
 381+ 9876              ;
 382+ 9876              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9876              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9876              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9876
 386+ 9876 ED 73 F8 88  Pinta_Disparo ld (Stack),sp
 387+ 987A FD F9            ld sp,iy
 388+ 987C 06 03            ld b,3
 389+ 987E D1           1 pop de
 390+ 987F 7B               ld a,e
 391+ 9880 AE               xor (hl)
 392+ 9881 77               ld (hl),a
 393+ 9882 23               inc hl
 394+ 9883 7A               ld a,d
 395+ 9884 AE               xor (hl)
 396+ 9885 77               ld (hl),a
 397+ 9886 2B               dec hl
 398+ 9887
 399+ 9887 24               inc h
 400+ 9888 7C               ld a,h
 401+ 9889 E6 07            and 7
 402+ 988B 20 0A            jr nz,2F
 403+ 988D 7D               ld a,l
 404+ 988E C6 20            add a,$20
 405+ 9890 6F               ld l,a
 406+ 9891 38 04            jr c,2F
 407+ 9893 7C               ld a,h
 408+ 9894 D6 08            sub 8
 409+ 9896 67               ld h,a
 410+ 9897 7C           2 ld a,h
 411+ 9898 FE 58            cp $58
 412+ 989A 28 02            jr z,3F
 413+ 989C
 414+ 989C 10 E0            djnz 1B
 415+ 989E ED 7B F8 88  3 ld sp,(Stack)
 416+ 98A2 C9               ret
 417+ 98A3
# file closed: Rutinas_de_impresion_sprites.asm
1512  98A3              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98A3              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98A3              ;
   3+ 98A3              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98A3              ;
   5+ 98A3              ; *****************************************************************************************************************************************************************************************
   6+ 98A3              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98A3
   8+ 98A3 7C           calcula_tercio ld a,h
   9+ 98A4 E6 18        	and $18
  10+ 98A6 CB 2F        	sra a
  11+ 98A8 CB 2F        	sra a
  12+ 98AA CB 2F        	sra a
  13+ 98AC C9           	ret
  14+ 98AD
# file closed: calcula_tercio.asm
1513  98AD              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98AD              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98AD              ;
   3+ 98AD              ;
   4+ 98AD              ;	CLS.
   5+ 98AD              ;
   6+ 98AD              ;	Limpia la pantalla y define sus atributos.
   7+ 98AD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98AD              ;
   9+ 98AD              ;	COLORES: 0 ..... NEGRO
  10+ 98AD              ;    		 1 ..... AZUL
  11+ 98AD              ; 			 2 ..... ROJO
  12+ 98AD              ;			 3 ..... MAGENTA
  13+ 98AD              ; 			 4 ..... VERDE
  14+ 98AD              ; 			 5 ..... CIAN
  15+ 98AD              ;			 6 ..... AMARILLO
  16+ 98AD              ; 			 7 ..... BLANCO
  17+ 98AD              ;
  18+ 98AD              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98AD              ;
  20+ 98AD              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98AD
  22+ 98AD
  23+ 98AD 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98B0 11 01 40     	LD DE,$4001
  25+ 98B3 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98B6 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98B8 ED B0        	LDIR
  28+ 98BA 01 FF 02     	LD BC,767
  29+ 98BD 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98BE ED B0        	LDIR
  31+ 98C0 C9           	ret
  32+ 98C1
# file closed: Cls.asm
1514  98C1              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98C1              ; ******************************************************************************************************************************************************************************************
   2+ 98C1              ;
   3+ 98C1              ;   20/05/23
   4+ 98C1              ;
   5+ 98C1              ;	Recompone_posicion_inicio
   6+ 98C1              ;
   7+ 98C1              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98C1              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98C1              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98C1              ;	_ a una u otra rutina.
  11+ 98C1
  12+ 98C1              Recompone_posicion_inicio
  13+ 98C1
  14+ 98C1 2A BC 88     	ld hl,(Posicion_inicio)
  15+ 98C4 7D           	ld a,l
  16+ 98C5 E6 1F        	and $1f
  17+ 98C7 28 16        	jr z,1F
  18+ 98C9
  19+ 98C9 FE 1F        	cp $1f
  20+ 98CB 28 0D        	jr z,3F
  21+ 98CD
  22+ 98CD 21 E5 88     	ld hl,Ctrl_2
  23+ 98D0 CB C6        	set 0,(hl)
  24+ 98D2 2A AE 88     	ld hl,(Puntero_objeto)
  25+ 98D5 22 E8 88     	ld (Repone_puntero_objeto),hl
  26+ 98D8 18 08        	jr 2F
  27+ 98DA
  28+ 98DA CD 7B 9A     3 call Mov_left
  29+ 98DD 18 03        	jr 2F
  30+ 98DF
  31+ 98DF CD 5D 99     1 call Mov_right
  32+ 98E2 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98E5 22 AE 88     	ld (Puntero_objeto),hl
  34+ 98E8 C9           	ret
  35+ 98E9
  36+ 98E9              ; ******************************************************************************************************************************************************************************************
  37+ 98E9              ;
  38+ 98E9              ;   27/05/23
  39+ 98E9              ;
  40+ 98E9              ;	Mov_down
  41+ 98E9              ;
  42+ 98E9              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98E9              ;
  44+ 98E9              ;
  45+ 98E9              Mov_down
  46+ 98E9
  47+ 98E9 CD 4B 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98EC              ;																	; _ repone (Puntero_objeto).
  49+ 98EC 21 D4 88     	ld hl,Ctrl_0
  50+ 98EF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98F1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98F1              ; 																	; _ en el caso de que no lo haya.
  53+ 98F1 3A C2 88     	ld a,(Vel_down)
  54+ 98F4 47           	ld b,a
  55+ 98F5 2A AC 88         ld hl,(Posicion_actual)
  56+ 98F8 CD A3 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98FB E6 02        	and 2
  58+ 98FD 28 0F        	jr z,1F
  59+ 98FF
  60+ 98FF              ; Nos encontramos en el último tercio de pantalla.
  61+ 98FF              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98FF
  63+ 98FF 7C           	ld a,h
  64+ 9900 FE 57        	cp $57
  65+ 9902 20 0A        	jr nz,1F
  66+ 9904
  67+ 9904 7D           	ld a,l
  68+ 9905 C6 20        	add $20
  69+ 9907 30 05        	jr nc,1F
  70+ 9909
  71+ 9909              ; ------------------------------
  72+ 9909              ;	call Reaparece_arriba
  73+ 9909 CD 08 9C     	call Reinicio
  74+ 990C              ; ------------------------------
  75+ 990C
  76+ 990C 18 08        	jr 3F
  77+ 990E CD 90 95     1 call NextScan
  78+ 9911 22 AC 88     	ld (Posicion_actual),hl
  79+ 9914 10 E2            djnz 2B
  80+ 9916 CD 2E 9C     3 call Genera_coordenadas
  81+ 9919 C9           	ret
  82+ 991A
  83+ 991A              ; ******************************************************************************************************************************************************************************************
  84+ 991A              ;
  85+ 991A              ;   27/05/23
  86+ 991A              ;
  87+ 991A              ;	Mov_up
  88+ 991A              ;
  89+ 991A              ; 	Mueve el Sprite hacia arriba.
  90+ 991A              ;
  91+ 991A              ;
  92+ 991A              Mov_up
  93+ 991A
  94+ 991A CD 4B 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 991D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 991D 21 D4 88     	ld hl,Ctrl_0
  97+ 9920 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9922              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9922              ; 																		; _ en el caso de que no lo haya.
 100+ 9922 3A C1 88     	ld a,(Vel_up)
 101+ 9925 47           	ld b,a
 102+ 9926 2A AC 88     	ld hl,(Posicion_actual)
 103+ 9929 CD A3 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 992C A7           	and a
 105+ 992D 20 10        	jr nz,1F
 106+ 992F
 107+ 992F              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 992F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 992F
 110+ 992F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9930 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9932 20 0B            jr nz,1F
 113+ 9934 7D               ld a,l
 114+ 9935 D6 20            sub $20
 115+ 9937 30 06            jr nc,1F
 116+ 9939 25               dec h
 117+ 993A
 118+ 993A              ; -----------------------------
 119+ 993A CD E9 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 993D              ;	call Reinicio
 121+ 993D              ; -----------------------------
 122+ 993D
 123+ 993D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 993F CD 9F 95     1 call PreviousScan
 125+ 9942 22 AC 88     	ld (Posicion_actual),hl
 126+ 9945 10 E2            djnz 3B
 127+ 9947 CD 2E 9C     2 call Genera_coordenadas
 128+ 994A C9           	ret
 129+ 994B
 130+ 994B              ; -----------------------------
 131+ 994B              ;
 132+ 994B              ;	27/5/23
 133+ 994B              ;
 134+ 994B              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 994B              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 994B              ;
 137+ 994B              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 994B              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 994B              ;
 140+ 994B              ;	Modifica: A y (Puntero_objeto).
 141+ 994B
 142+ 994B 3A E5 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 994E CB 47        	bit 0,a
 144+ 9950 C8           	ret z
 145+ 9951 CB 87        	res 0,a
 146+ 9953 32 E5 88     	ld (Ctrl_2),a
 147+ 9956 2A E8 88     	ld hl,(Repone_puntero_objeto)
 148+ 9959 22 AE 88     	ld (Puntero_objeto),hl
 149+ 995C C9           	ret
 150+ 995D
 151+ 995D              ; ******************************************************************************************************************************************************************************************
 152+ 995D              ;
 153+ 995D              ;	19/10/22
 154+ 995D              ;
 155+ 995D              ;	Mov_right.
 156+ 995D              ;
 157+ 995D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 995D              ;
 159+ 995D
 160+ 995D 21 D4 88     Mov_right ld hl,Ctrl_0
 161+ 9960 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9962              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9962              ; 																	; _ en el caso de que no lo haya.
 164+ 9962 3A D4 88     	ld a,(Ctrl_0)
 165+ 9965 CB 77        	bit 6,a
 166+ 9967 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9969
 168+ 9969 CD 97 9B     	call Stop_Amadeus_right
 169+ 996C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 996D 18 4D        	jr 8F
 171+ 996F
 172+ 996F 3A B0 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9972 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9974 20 46        	jr nz,8F
 175+ 9976
 176+ 9976 3A B2 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9979 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 997A 28 40        	jr z,8F
 179+ 997C
 180+ 997C              ; ---------- ---------- ----------
 181+ 997C              ;
 182+ 997C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 997C
 184+ 997C 3A C0 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 997F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9981 28 11        	jr z,1F
 187+ 9983 38 06        	jr c,6F
 188+ 9985 FE 04        	cp 4
 189+ 9987 28 14        	jr z,7F
 190+ 9989 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 998B
 192+ 998B              ; ---------- ---------- ----------
 193+ 998B              ;
 194+ 998B              ; Perfiles de velocidad
 195+ 998B              ;
 196+ 998B
 197+ 998B 3A B2 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 998E FE FE        	cp $fe
 199+ 9990 20 2A        	jr nz,8F
 200+ 9992 18 10        	jr 3F
 201+ 9994 3A B2 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9997 FE FD        	cp $fd
 203+ 9999 20 21        	jr nz,8F
 204+ 999B 18 07        	jr 3F
 205+ 999D 3A B2 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 99A0 FE FB        	cp $fb
 207+ 99A2 20 18        	jr nz,8F
 208+ 99A4
 209+ 99A4              ; ---------- ---------- ----------
 210+ 99A4
 211+ 99A4              3
 212+ 99A4 CD D7 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 99A7              ;	call Reinicio
 214+ 99A7
 215+ 99A7              ; ---------- ---------- ----------
 216+ 99A7              ;
 217+ 99A7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 99A7
 219+ 99A7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 99A9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 99AA CD C3 99     	call DESPLZ_DER
 222+ 99AD C1           	pop bc
 223+ 99AE 10 F9        	djnz 5B
 224+ 99B0 2A AC 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 99B3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 99B4 22 AC 88     	ld (Posicion_actual),hl
 227+ 99B7 CD 2E 9C     	call Genera_coordenadas
 228+ 99BA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 99BC
 230+ 99BC              ; ---------- ---------- ----------
 231+ 99BC
 232+ 99BC 2A AC 88     8 ld hl,(Posicion_actual)
 233+ 99BF CD C3 99     	call DESPLZ_DER
 234+ 99C2 C9           2 ret
 235+ 99C3
 236+ 99C3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 99C3              ;
 238+ 99C3              ;	22/9/22
 239+ 99C3              ;
 240+ 99C3
 241+ 99C3 CD D2 99     DESPLZ_DER call Desplaza_derecha
 242+ 99C6 CD 1E 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 99C9 CD 47 9A         call Ciclo_completo
 244+ 99CC 21 D4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 99CF CB FE        	set 7,(hl)
 246+ 99D1 C9           	ret
 247+ 99D2
 248+ 99D2              ; ******************************************************************************************************************************************************************************************
 249+ 99D2              ;	15/02/23
 250+ 99D2              ;
 251+ 99D2
 252+ 99D2 3A C0 88     Desplaza_derecha ld a,(Vel_right)
 253+ 99D5 47           	ld b,a
 254+ 99D6 2A B8 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 99D9 23           1 inc hl
 256+ 99DA 23           	inc hl
 257+ 99DB 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 99DD 22 B8 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 99E0 CD 04 8C     	call Extrae_address
 260+ 99E3 22 AE 88     	ld (Puntero_objeto),hl
 261+ 99E6
 262+ 99E6              ; Modifica (Puntero_DESPLZ_izq).
 263+ 99E6
 264+ 99E6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 99E6              ; Cuántos movimientos hemos hecho ??
 266+ 99E6              ; DE contiene (Puntero_DESPLZ_der).
 267+ 99E6
 268+ 99E6 2A B4 88     7 ld hl,(Indice_Sprite_der)
 269+ 99E9 EB           	ex de,hl
 270+ 99EA A7           	and a
 271+ 99EB ED 52        	sbc hl,de
 272+ 99ED CB 3D        	srl l
 273+ 99EF 3E 08        6 ld a,8
 274+ 99F1 95           	sub l
 275+ 99F2 30 1E        	jr nc,3F
 276+ 99F4
 277+ 99F4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 99F4              ; B="0".
 279+ 99F4
 280+ 99F4 04           4 inc b
 281+ 99F5 3C           	inc a
 282+ 99F6 20 FC        	jr nz,4B
 283+ 99F8 78           	ld a,b
 284+ 99F9 08           	ex af,af
 285+ 99FA 2A B4 88     	ld hl,(Indice_Sprite_der)
 286+ 99FD 23           5 inc hl
 287+ 99FE 23           	inc hl
 288+ 99FF 10 FC        	djnz 5B
 289+ 9A01 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A04 CD 04 8C     	call Extrae_address
 291+ 9A07 22 AE 88     	ld (Puntero_objeto),hl
 292+ 9A0A
 293+ 9A0A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A0A              ; _(Posicion_actual).
 295+ 9A0A
 296+ 9A0A 21 AC 88     	ld hl,Posicion_actual
 297+ 9A0D 34           	inc (hl)
 298+ 9A0E 08               ex af,af
 299+ 9A0F 6F           	ld l,a
 300+ 9A10 18 DD        	jr 6B
 301+ 9A12
 302+ 9A12              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A12
 304+ 9A12 47           3 ld b,a
 305+ 9A13 2A B6 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A16 23           2 inc hl
 307+ 9A17 23           	inc hl
 308+ 9A18 10 FC        	djnz 2B
 309+ 9A1A 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A1D C9           8 ret
 311+ 9A1E
 312+ 9A1E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A1E              ;
 314+ 9A1E              ;	24/7/22
 315+ 9A1E              ;
 316+ 9A1E              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A1E              ;
 318+ 9A1E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A1E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A1E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A1E
 322+ 9A1E 3A B2 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A21 A7           	and a
 324+ 9A22 20 1F        	jr nz,1F
 325+ 9A24 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A26 32 B2 88         ld (CTRL_DESPLZ),a
 327+ 9A29
 328+ 9A29 21 AB 88     	ld hl,Columns
 329+ 9A2C 34           	inc (hl)
 330+ 9A2D 3A BE 88     	ld a,(Cuad_objeto)
 331+ 9A30 E6 01        	and 1
 332+ 9A32 28 0F        	jr z,1F
 333+ 9A34 2A AC 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A37 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A38 22 AC 88     	ld (Posicion_actual),hl
 336+ 9A3B CD 2E 9C     	call Genera_coordenadas
 337+ 9A3E CD A3 9B     	call Inc_CTRL_DESPLZ
 338+ 9A41 18 03        	jr 2F
 339+ 9A43 CD A3 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A46 C9           2 ret
 341+ 9A47
 342+ 9A47              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A47              ;
 344+ 9A47              ;	24/7/22
 345+ 9A47              ;
 346+ 9A47              ;	Ciclo_completo.
 347+ 9A47              ;
 348+ 9A47              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A47              ;
 350+ 9A47              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A47              ; 	Decrementamos (Columns).
 352+ 9A47              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A47              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A47
 355+ 9A47
 356+ 9A47 3A B2 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A4A FE FF        	cp $ff
 358+ 9A4C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A4E E6 F0        	and $f0
 360+ 9A50 20 28        	jr nz,3F
 361+ 9A52
 362+ 9A52              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A52
 364+ 9A52 3A B2 88     	ld a,(CTRL_DESPLZ)
 365+ 9A55 47           	ld b,a
 366+ 9A56 3E F8        	ld a,$f8
 367+ 9A58 80           	add b
 368+ 9A59 32 B2 88     	ld (CTRL_DESPLZ),a
 369+ 9A5C 18 1C        	jr 3F
 370+ 9A5E 21 AB 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A61 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A62 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A63 32 B2 88     	ld (CTRL_DESPLZ),a
 374+ 9A66 3A BE 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A69 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A6B 20 0A        	jr nz,2F
 377+ 9A6D 2A AC 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A70 23           	inc hl
 379+ 9A71 22 AC 88     	ld (Posicion_actual),hl
 380+ 9A74 CD 2E 9C     	call Genera_coordenadas
 381+ 9A77
 382+ 9A77              ; Inicia el puntero de Sprite.
 383+ 9A77
 384+ 9A77 CD 1B 8C     2 call Inicia_puntero_objeto_der
 385+ 9A7A C9           3 ret
 386+ 9A7B
 387+ 9A7B              ; ******************************************************************************************************************************************************************************************
 388+ 9A7B              ;
 389+ 9A7B              ;	15/02/23
 390+ 9A7B              ;
 391+ 9A7B              ;	Mov_left.
 392+ 9A7B              ;
 393+ 9A7B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A7B              ;
 395+ 9A7B              Mov_left
 396+ 9A7B
 397+ 9A7B 21 D4 88     	ld hl,Ctrl_0
 398+ 9A7E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A80              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A80              ; 																	; _ en el caso de que no lo haya.
 401+ 9A80 3A D4 88     	ld a,(Ctrl_0)
 402+ 9A83 CB 77        	bit 6,a
 403+ 9A85 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A87
 405+ 9A87 CD 9D 9B     	call Stop_Amadeus_left
 406+ 9A8A C8           	ret z
 407+ 9A8B 20 4A        	jr nz,8F
 408+ 9A8D
 409+ 9A8D 3A B0 88     11 ld a,(Coordenada_X)
 410+ 9A90 A7           	and a
 411+ 9A91 20 44        	jr nz,8F
 412+ 9A93
 413+ 9A93 3A B2 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9A96 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9A97 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9A99
 417+ 9A99              ; ---------- ---------- ----------
 418+ 9A99
 419+ 9A99 3A BF 88     	ld a,(Vel_left)
 420+ 9A9C FE 02        	cp 2
 421+ 9A9E 28 0F        	jr z,1F
 422+ 9AA0 38 04        	jr c,6F
 423+ 9AA2 FE 04        	cp 4
 424+ 9AA4 28 12        	jr z,7F
 425+ 9AA6
 426+ 9AA6              ; ---------- ---------- ----------
 427+ 9AA6
 428+ 9AA6 3A B2 88     6 ld a,(CTRL_DESPLZ)
 429+ 9AA9 FE F8        	cp $f8
 430+ 9AAB 20 2A        	jr nz,8F
 431+ 9AAD 18 10        	jr 4F
 432+ 9AAF 3A B2 88     1 ld a,(CTRL_DESPLZ)
 433+ 9AB2 FE F9        	cp $f9
 434+ 9AB4 20 21        	jr nz,8F
 435+ 9AB6 18 07        	jr 4F
 436+ 9AB8 3A B2 88     7 ld a,(CTRL_DESPLZ)
 437+ 9ABB FE FB        	cp $fb
 438+ 9ABD 20 18        	jr nz,8F
 439+ 9ABF
 440+ 9ABF              ; ---------- ---------- ----------
 441+ 9ABF
 442+ 9ABF              4
 443+ 9ABF CD C5 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9AC2              ;	call Reinicio
 445+ 9AC2
 446+ 9AC2              ; ---------- ---------- ----------
 447+ 9AC2
 448+ 9AC2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9AC4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9AC5
 451+ 9AC5              ;	ld hl,(Indice_Sprite_izq)
 452+ 9AC5              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9AC5
 454+ 9AC5 CD DE 9A     	call DESPLZ_IZQ
 455+ 9AC8 C1           	pop bc
 456+ 9AC9 10 F9        	djnz 5B
 457+ 9ACB 2A AC 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9ACE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9ACF 22 AC 88     	ld (Posicion_actual),hl
 460+ 9AD2 CD 2E 9C     	call Genera_coordenadas
 461+ 9AD5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9AD7
 463+ 9AD7              ; ---------- ---------- ----------
 464+ 9AD7
 465+ 9AD7              ; Movemos, no hay recolocación.
 466+ 9AD7
 467+ 9AD7 2A AC 88     8 ld hl,(Posicion_actual)
 468+ 9ADA CD DE 9A     	call DESPLZ_IZQ
 469+ 9ADD C9           2 ret
 470+ 9ADE
 471+ 9ADE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9ADE              ;
 473+ 9ADE              ;	22/9/22
 474+ 9ADE
 475+ 9ADE              DESPLZ_IZQ
 476+ 9ADE
 477+ 9ADE CD ED 9A     	call Desplaza_izquierda
 478+ 9AE1 CD 39 9B         call modifica_parametros_1er_DESPLZ
 479+ 9AE4 CD 61 9B     	call Ciclo_completo_2
 480+ 9AE7 21 D4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9AEA CB BE        	res 7,(hl)
 482+ 9AEC C9           	ret
 483+ 9AED
 484+ 9AED              Desplaza_izquierda
 485+ 9AED
 486+ 9AED 3A BF 88     	ld a,(Vel_left)
 487+ 9AF0 47           	ld b,a
 488+ 9AF1 2A BA 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9AF4 23           1 inc hl
 490+ 9AF5 23           	inc hl
 491+ 9AF6 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9AF8 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9AFB CD 04 8C     	call Extrae_address
 494+ 9AFE 22 AE 88     	ld (Puntero_objeto),hl
 495+ 9B01
 496+ 9B01              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B01
 498+ 9B01              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B01              ; Cuántos movimientos hemos hecho ??
 500+ 9B01              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B01
 502+ 9B01 2A B6 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B04 EB           	ex de,hl
 504+ 9B05 A7           	and a
 505+ 9B06 ED 52        	sbc hl,de
 506+ 9B08 CB 3D        	srl l
 507+ 9B0A 3E 08        6 ld a,8
 508+ 9B0C 95           	sub l
 509+ 9B0D 30 1E        	jr nc,3F
 510+ 9B0F
 511+ 9B0F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B0F              ; B="0".
 513+ 9B0F
 514+ 9B0F 04           4 inc b
 515+ 9B10 3C           	inc a
 516+ 9B11 20 FC        	jr nz,4B
 517+ 9B13 78           	ld a,b
 518+ 9B14 08           	ex af,af
 519+ 9B15 2A B6 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B18 23           5 inc hl
 521+ 9B19 23           	inc hl
 522+ 9B1A 10 FC        	djnz 5B
 523+ 9B1C 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B1F CD 04 8C     	call Extrae_address
 525+ 9B22 22 AE 88     	ld (Puntero_objeto),hl
 526+ 9B25
 527+ 9B25              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B25              ; _(Posicion_actual).
 529+ 9B25
 530+ 9B25 21 AC 88     	ld hl,Posicion_actual
 531+ 9B28 35           	dec (hl)
 532+ 9B29 08           	ex af,af
 533+ 9B2A 6F           	ld l,a
 534+ 9B2B 18 DD        	jr 6B
 535+ 9B2D
 536+ 9B2D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B2D
 538+ 9B2D 47           3 ld b,a
 539+ 9B2E 2A B4 88     	ld hl,(Indice_Sprite_der)
 540+ 9B31 23           2 inc hl
 541+ 9B32 23           	inc hl
 542+ 9B33 10 FC        	djnz 2B
 543+ 9B35 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B38 C9           8 ret
 545+ 9B39
 546+ 9B39              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B39              ;
 548+ 9B39              ;	modifica_parametros_1er_DESPLZ
 549+ 9B39              ;
 550+ 9B39              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B39              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B39              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B39
 554+ 9B39 3A B2 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B3C A7           	and a
 556+ 9B3D 20 1E        	jr nz,1F
 557+ 9B3F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B40 32 B2 88         ld (CTRL_DESPLZ),a
 559+ 9B43 21 AB 88     	ld hl,Columns
 560+ 9B46 34           	inc (hl)
 561+ 9B47 3A BE 88     	ld a,(Cuad_objeto)
 562+ 9B4A E6 01        	and 1
 563+ 9B4C 20 0F        	jr nz,1F
 564+ 9B4E 2A AC 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B51 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B52 22 AC 88     	ld (Posicion_actual),hl
 567+ 9B55 CD 2E 9C     	call Genera_coordenadas
 568+ 9B58 CD B4 9B     	call Dec_CTRL_DESPLZ
 569+ 9B5B 18 03        	jr 2F
 570+ 9B5D CD B4 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B60 C9           2 ret
 572+ 9B61
 573+ 9B61              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B61
 575+ 9B61 3A B2 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B64 FE F7        	cp $f7
 577+ 9B66 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B68 30 2C        	jr nc,3F
 579+ 9B6A
 580+ 9B6A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B6A
 582+ 9B6A 06 00        	ld b,0
 583+ 9B6C 04           4 inc b
 584+ 9B6D 3C           	inc a
 585+ 9B6E FE F7        	cp $f7
 586+ 9B70 20 FA        	jr nz,4B
 587+ 9B72 3E FF        	ld a,$ff
 588+ 9B74 90           	sub b
 589+ 9B75 32 B2 88     	ld (CTRL_DESPLZ),a
 590+ 9B78 18 1C        	jr 3F
 591+ 9B7A
 592+ 9B7A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B7A
 594+ 9B7A 21 AB 88     1 ld hl,Columns
 595+ 9B7D 35           	dec (hl)
 596+ 9B7E AF           	xor a
 597+ 9B7F 32 B2 88     	ld (CTRL_DESPLZ),a
 598+ 9B82 3A BE 88     	ld a,(Cuad_objeto)
 599+ 9B85 E6 01        	and 1
 600+ 9B87 28 0A        	jr z,2F
 601+ 9B89 2A AC 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B8C 2B           	dec hl
 603+ 9B8D 22 AC 88     	ld (Posicion_actual),hl
 604+ 9B90 CD 2E 9C     	call Genera_coordenadas
 605+ 9B93
 606+ 9B93              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9B93
 608+ 9B93 CD 2E 8C     2 call Inicia_puntero_objeto_izq
 609+ 9B96 C9           3 ret
 610+ 9B97
 611+ 9B97              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9B97              ;
 613+ 9B97              ;	19/10/22
 614+ 9B97              ;
 615+ 9B97              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9B97              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9B97
 618+ 9B97 3A B0 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9B9A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9B9C C9           	ret
 621+ 9B9D
 622+ 9B9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9B9D              ;
 624+ 9B9D              ;	19/10/22
 625+ 9B9D              ;
 626+ 9B9D              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9B9D              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9B9D
 629+ 9B9D 3A B0 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9BA0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9BA2 C9           	ret
 632+ 9BA3
 633+ 9BA3              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9BA3              ;
 635+ 9BA3              ;	24/7/22
 636+ 9BA3              ;
 637+ 9BA3              ;	Inc_CTRL_DESPLZ
 638+ 9BA3              ;
 639+ 9BA3              ;
 640+ 9BA3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9BA3
 642+ 9BA3 21 B2 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9BA6 3A C0 88     	ld a,(Vel_right)
 644+ 9BA9 A7           	and a
 645+ 9BAA 28 06        	jr z,1F
 646+ 9BAC 47           	ld b,a
 647+ 9BAD 34           3 inc (hl)
 648+ 9BAE 10 FD        	djnz 3B
 649+ 9BB0 18 01        	jr 2F
 650+ 9BB2 34           1 inc (hl)
 651+ 9BB3 C9           2 ret
 652+ 9BB4
 653+ 9BB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9BB4              ;
 655+ 9BB4              ;	5/2/23
 656+ 9BB4              ;
 657+ 9BB4              ;	Dec_CTRL_DESPLZ
 658+ 9BB4              ;
 659+ 9BB4              ;
 660+ 9BB4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9BB4
 662+ 9BB4 21 B2 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9BB7 3A BF 88     	ld a,(Vel_left)
 664+ 9BBA A7           	and a
 665+ 9BBB 28 06        	jr z,1F
 666+ 9BBD 47           	ld b,a
 667+ 9BBE 35           3 dec (hl)
 668+ 9BBF 10 FD        	djnz 3B
 669+ 9BC1 18 01        	jr 2F
 670+ 9BC3 35           1 dec (hl)
 671+ 9BC4 C9           2 ret
 672+ 9BC5
 673+ 9BC5              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9BC5
 675+ 9BC5 2A AC 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9BC8 01 1F 00     	ld bc,31
 677+ 9BCB A7           	and a
 678+ 9BCC ED 4A        	adc hl,bc
 679+ 9BCE 22 AC 88     	ld (Posicion_actual),hl
 680+ 9BD1 21 D4 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9BD4 CB C6        	set 0,(hl)
 682+ 9BD6 C9           	ret
 683+ 9BD7
 684+ 9BD7              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9BD7
 686+ 9BD7 2A AC 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9BDA 01 1F 00     	ld bc,31
 688+ 9BDD A7           	and a
 689+ 9BDE ED 42        	sbc hl,bc
 690+ 9BE0 22 AC 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9BE3 21 D4 88     	ld hl,Ctrl_0
 692+ 9BE6 CB CE        	set 1,(hl)
 693+ 9BE8 C9           	ret
 694+ 9BE9
 695+ 9BE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9BE9
 697+ 9BE9 24           Reaparece_abajo inc h
 698+ 9BEA 01 E0 17     	ld bc,$17e0
 699+ 9BED A7           	and a
 700+ 9BEE ED 4A        	adc hl,bc
 701+ 9BF0 22 AC 88     	ld (Posicion_actual),hl
 702+ 9BF3 21 D4 88     	ld hl,Ctrl_0
 703+ 9BF6 CB D6        	set 2,(hl)
 704+ 9BF8 C9           	ret
 705+ 9BF9
 706+ 9BF9              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9BF9
 708+ 9BF9 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9BFC A7           	and a
 710+ 9BFD ED 42        	sbc hl,bc
 711+ 9BFF 22 AC 88     	ld (Posicion_actual),hl
 712+ 9C02 21 D4 88     	ld hl,Ctrl_0
 713+ 9C05 CB DE        	set 3,(hl)
 714+ 9C07 C9           	ret
 715+ 9C08
 716+ 9C08              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C08              ;
 718+ 9C08              ;	15/07/23
 719+ 9C08
 720+ 9C08              Reinicio
 721+ 9C08
 722+ 9C08              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C08
 724+ 9C08 AF           	xor a
 725+ 9C09 21 D9 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C0C CD 2A 9C     	call Limpia_contenido_hl
 727+ 9C0F
 728+ 9C0F 21 AC 88     	ld hl,Posicion_actual
 729+ 9C12 CD 2A 9C     	call Limpia_contenido_hl
 730+ 9C15
 731+ 9C15 CD 5A 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C18 CD E4 9E     	call Inicia_Puntero_mov
 733+ 9C1B
 734+ 9C1B 21 DB 88     	ld hl,Incrementa_puntero
 735+ 9C1E 06 05        	ld b,5
 736+ 9C20 77           1 ld (hl),a
 737+ 9C21 23           	inc hl
 738+ 9C22 10 FC        	djnz 1B
 739+ 9C24
 740+ 9C24 21 E5 88     	ld hl,Ctrl_2
 741+ 9C27 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C29
 743+ 9C29 C9           	ret
 744+ 9C2A
 745+ 9C2A 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C2B 23           	inc hl
 747+ 9C2C 77           	ld (hl),a
 748+ 9C2D C9           	ret
 749+ 9C2E
 750+ 9C2E
# file closed: Direcciones.asm
1515  9C2E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C2E              ; ------------------------------------------------------------------------
   2+ 9C2E              ;
   3+ 9C2E              ;	02/04/23
   4+ 9C2E              ;
   5+ 9C2E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C2E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C2E              ;
   8+ 9C2E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C2E              ;
  10+ 9C2E              ;	Modifica: A,BC y DE.
  11+ 9C2E
  12+ 9C2E C5           Genera_coordenadas push bc
  13+ 9C2F E5           	push hl
  14+ 9C30 D5           	push de
  15+ 9C31
  16+ 9C31 2A AC 88     	ld hl,(Posicion_actual)
  17+ 9C34
  18+ 9C34 7D           	ld a,l
  19+ 9C35 E6 1F        	and $1f
  20+ 9C37 32 B0 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C3A
  22+ 9C3A CD A3 98     	call calcula_tercio
  23+ 9C3D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C3E
  25+ 9C3E 1E 00        	ld e,0
  26+ 9C40 7D           	ld a,l
  27+ 9C41 E6 E0        	and $e0
  28+ 9C43 28 01        	jr z,1F
  29+ 9C45 04           	inc b
  30+ 9C46
  31+ 9C46 04           1 inc b
  32+ 9C47 05           	dec b
  33+ 9C48 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C4A              ;														; _ , salimos.
  35+ 9C4A 1C           3 inc e
  36+ 9C4B D6 20        	sub 32
  37+ 9C4D 20 FB        	jr nz,3B
  38+ 9C4F 10 F5        	djnz 1B
  39+ 9C51
  40+ 9C51 7B           2 ld a,e
  41+ 9C52 32 B1 88     	ld (Coordenada_y),a
  42+ 9C55
  43+ 9C55 D1           	pop de
  44+ 9C56 E1           	pop hl
  45+ 9C57 C1           	pop bc
  46+ 9C58
  47+ 9C58 C9           	ret
  48+ 9C59
  49+ 9C59              ; ------------------------------------------------------------------------
  50+ 9C59              ;	28/05/23
  51+ 9C59              ;
  52+ 9C59              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C59              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C59              ;
  55+ 9C59              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C59              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C59              ;
  58+ 9C59              ;		DE="$120d"
  59+ 9C59              ;
  60+ 9C59              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C59              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C59              ;
  63+ 9C59              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C59
  65+ 9C59              ;	Modifica: A,BC y DE.
  66+ 9C59
  67+ 9C59
  68+ 9C59              Genera_coordenadas_disparo
  69+ 9C59
  70+ 9C59              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C59
  72+ 9C59 7D           	ld a,l
  73+ 9C5A E6 1F        	and $1f
  74+ 9C5C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C5D CD A3 98     	call calcula_tercio
  76+ 9C60 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C61 1E 00        	ld e,0
  78+ 9C63 7D           	ld a,l
  79+ 9C64 E6 E0        	and $e0
  80+ 9C66 28 01        	jr z,1F
  81+ 9C68 04           	inc b
  82+ 9C69 1C           1 inc e
  83+ 9C6A D6 20        	sub 32
  84+ 9C6C 20 FB        	jr nz,1B
  85+ 9C6E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C70 C9           	ret
  87+ 9C71
# file closed: Genera_coordenadas.asm
1516  9C71              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C71              ; Relojes y temporizaciones.
   2+ 9C71
   3+ 9C71              ; ------------------------------------------------------
   4+ 9C71              ;
   5+ 9C71              ;	16/7/23
   6+ 9C71              ;
   7+ 9C71              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C71              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C71              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C71              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C71              ;
  12+ 9C71              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C71              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C71
  15+ 9C71              ; Disparo_entidad db 1
  16+ 9C71              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C71              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C71
  19+ 9C71              Habilita_disparos
  20+ 9C71
  21+ 9C71 7E           	ld a,(hl)
  22+ 9C72 A7           	and a
  23+ 9C73 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C74
  25+ 9C74 EB           	ex de,hl
  26+ 9C75
  27+ 9C75 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C76 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C77
  30+ 9C77              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C77
  32+ 9C77 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C78 7E           	ld a,(hl)
  34+ 9C79 23           	inc hl
  35+ 9C7A 77           	ld (hl),a
  36+ 9C7B
  37+ 9C7B EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C7C 3E 01        	ld a,1
  39+ 9C7E 77           	ld (hl),a
  40+ 9C7F C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1517  9C80              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C80
   2+ 9C80
   3+ 9C80              ;   07/07/23
   4+ 9C80              ;
   5+ 9C80              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C80              ;
   7+ 9C80              ;   Codificación:
   8+ 9C80              ;
   9+ 9C80              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C80              ;
  11+ 9C80              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C80              ;
  13+ 9C80              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C80              ;
  15+ 9C80              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C80              ;
  17+ 9C80              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C80              ;                               ..... %01000010 Vel_up 4
  19+ 9C80              ;                                               Vel_down 2
  20+ 9C80              ;                               ..... $42
  21+ 9C80              ;
  22+ 9C80              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C80              ;
  24+ 9C80              ;                               ..... %01000010 Vel_left 4
  25+ 9C80              ;                                               Vel_right 2
  26+ 9C80              ;                               ..... $42
  27+ 9C80              ;
  28+ 9C80              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C80              ;
  30+ 9C80              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C80              ;
  32+ 9C80              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C80              ;
  34+ 9C80              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C80              ;                                     $53
  36+ 9C80              ;
  37+ 9C80              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C80              ;
  39+ 9C80              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C80              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C80              ;
  42+ 9C80              ;                       Arriba ..... $81
  43+ 9C80              ;                       Arriba - izquierda ..... $a1
  44+ 9C80              ;                       Arriba - derecha ..... $91
  45+ 9C80              ;
  46+ 9C80              ;                       Abajo ..... $41
  47+ 9C80              ;                       Abajo - izquierda ..... $61
  48+ 9C80              ;                       Abajo - derecha ..... $51
  49+ 9C80              ;
  50+ 9C80              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C80              ;
  52+ 9C80              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C80              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C80              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C80              ;
  56+ 9C80              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C80              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C80              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C80              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C80              ;
  61+ 9C80              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C80              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C80              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C80              ;
  65+ 9C80              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C80              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C80              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C80              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C80
  70+ 9C80              ; ----- ----- ----- ----- -----
  71+ 9C80
  72+ 9C80 AC 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C82 B4 9C            defw F_1
  74+ 9C84 BE 9C            defw F_2
  75+ 9C86 C8 9C            defw Codo_abajo_derecha
  76+ 9C88 FC 9C            defw Derecha_y_subiendo
  77+ 9C8A 06 9D            defw Derecha_y_subiendo_1
  78+ 9C8C 10 9D            defw F_3
  79+ 9C8E 1A 9D            defw F_4
  80+ 9C90 24 9D            defw Derecha_y_bajando
  81+ 9C92 2E 9D            defw Derecha_y_bajando_1
  82+ 9C94 38 9D            defw Derecha_y_bajando_2
  83+ 9C96 42 9D            defw Codo_derecha_abajo
  84+ 9C98 72 9D            defw Codo_abajo_izq.
  85+ 9C9A A6 9D            defw Izquierda_y_subiendo
  86+ 9C9C B0 9D            defw Izquierda_y_subiendo_1
  87+ 9C9E BA 9D            defw F_5
  88+ 9CA0 C4 9D            defw F_6
  89+ 9CA2 CE 9D            defw Izquierda_y_bajando
  90+ 9CA4 D8 9D            defw Izquierda_y_bajando_1
  91+ 9CA6 E2 9D            defw Izquierda_y_bajando_2
  92+ 9CA8 EC 9D            defw Codo_izquierda_abajo
  93+ 9CAA 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9CAC
  95+ 9CAC 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9CB0 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9CB4
  98+ 9CB4 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9CB8 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9CBC 08 00
 100+ 9CBE 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9CC2 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9CC6 0F FE
 102+ 9CC8
 103+ 9CC8 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9CCC 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9CD0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9CD4 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9CD8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9CDC 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9CE0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9CE4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CE8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CEC 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CF0 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CF4 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CF8 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9CFC
 117+ 9CFC 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D00 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D04 06 00
 119+ 9D06
 120+ 9D06 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D0A 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D0E 02 00
 122+ 9D10
 123+ 9D10 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D14 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D18 04 00
 125+ 9D1A 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D1E 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D22 08 00
 127+ 9D24
 128+ 9D24 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D28 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D2C 02 00
 130+ 9D2E
 131+ 9D2E 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D32 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D36 06 00
 133+ 9D38
 134+ 9D38 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D3C 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D40 06 00
 136+ 9D42
 137+ 9D42              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D42
 139+ 9D42 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D46 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D4A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D4E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D52 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D56 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D5A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D5E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D62 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D66 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D6A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D6E 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D72
 152+ 9D72 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D76 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D7A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D7E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D82 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D86 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D8A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D8E 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D92 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D96 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D9A 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D9E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9DA2 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9DA6
 166+ 9DA6 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9DAA 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9DAE 06 00
 168+ 9DB0
 169+ 9DB0 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9DB4 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9DB8 02 00
 171+ 9DBA
 172+ 9DBA 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9DBE 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9DC2 04 00
 174+ 9DC4 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9DC8 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9DCC 08 00
 176+ 9DCE
 177+ 9DCE 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9DD2 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9DD6 02 00
 179+ 9DD8
 180+ 9DD8 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9DDC 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9DE0 06 00
 182+ 9DE2
 183+ 9DE2 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9DE6 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DEA 06 00
 185+ 9DEC
 186+ 9DEC 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DF0 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DF4 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DF8 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9DFC 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E00 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E04 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E08 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E0C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E10 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E14 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E18 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E1C
 199+ 9E1C              ; ----- ----- ----- ----- -----
 200+ 9E1C              ;
 201+ 9E1C              ;   27/06/23
 202+ 9E1C
 203+ 9E1C              Movimiento
 204+ 9E1C
 205+ 9E1C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E1C
 207+ 9E1C              ;    ld hl,(Posicion_actual)
 208+ 9E1C
 209+ 9E1C 3A E5 88         ld a,(Ctrl_2)
 210+ 9E1F CB 57            bit 2,a
 211+ 9E21 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E23
 213+ 9E23 2A D7 88         ld hl,(Puntero_mov)
 214+ 9E26 7E               ld a,(hl)
 215+ 9E27
 216+ 9E27              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E27
 218+ 9E27              Inicia_desplazamiento.
 219+ 9E27
 220+ 9E27              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E27
 222+ 9E27 CD 1B 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E2A
 224+ 9E2A              ; Iniciamos (Repetimos_mov).
 225+ 9E2A
 226+ 9E2A 7E               ld a,(hl)
 227+ 9E2B E6 0F            and $0f
 228+ 9E2D 32 DD 88         ld (Repetimos_desplazamiento),a
 229+ 9E30 32 DE 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E33
 231+ 9E33              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E33
 233+ 9E33 23               inc hl
 234+ 9E34 7E               ld a,(hl)
 235+ 9E35 32 E0 88         ld (Cola_de_desplazamiento),a
 236+ 9E38 2B               dec hl
 237+ 9E39
 238+ 9E39 21 E5 88         ld hl,Ctrl_2
 239+ 9E3C CB D6            set 2,(hl)
 240+ 9E3E
 241+ 9E3E              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E3E              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E3E
 244+ 9E3E              Desplazamiento_iniciado
 245+ 9E3E
 246+ 9E3E CD EF 9E         call Aplica_desplazamiento
 247+ 9E41
 248+ 9E41 3A E5 88         ld a,(Ctrl_2)
 249+ 9E44 CB 67            bit 4,a
 250+ 9E46 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E47
 252+ 9E47 21 DD 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E4A 35               dec (hl)
 254+ 9E4B C0               ret nz
 255+ 9E4C
 256+ 9E4C              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E4C              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E4C              ; Analiza (Cola_de_desplazamiento).
 259+ 9E4C
 260+ 9E4C 3A E0 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E4F A7               and a
 262+ 9E50 CC 44 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E53 28 30            jr z,Reinicia_el_movimiento
 264+ 9E55
 265+ 9E55 FE FF            cp $ff
 266+ 9E57 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E59
 268+ 9E59 FE FE            cp $fe
 269+ 9E5B CC C8 9E         call z,Fijamos_bucle
 270+ 9E5E 28 25            jr z,Reinicia_el_movimiento
 271+ 9E60
 272+ 9E60 FE FD            cp $fd
 273+ 9E62 20 11            jr nz,1F
 274+ 9E64
 275+ 9E64              ; ---
 276+ 9E64              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E64
 278+ 9E64 3A E5 88         ld a,(Ctrl_2)
 279+ 9E67 CB 5F            bit 3,a
 280+ 9E69 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E6B
 282+ 9E6B              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E6B
 284+ 9E6B 21 E5 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E6E CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E70
 287+ 9E70 CD D9 9E         call Inicia_Repetimos_movimiento
 288+ 9E73 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E75              ; ---
 290+ 9E75
 291+ 9E75 FE 01        1 cp 1
 292+ 9E77 CA B2 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E7A
 294+ 9E7A 3D               dec a
 295+ 9E7B 32 E0 88         ld (Cola_de_desplazamiento),a
 296+ 9E7E
 297+ 9E7E 3A DE 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E81 32 DD 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E84              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E84 C9               ret
 301+ 9E85
 302+ 9E85              Reinicia_el_movimiento
 303+ 9E85
 304+ 9E85 3A E5 88         ld a,(Ctrl_2)
 305+ 9E88 CB 5F            bit 3,a
 306+ 9E8A 28 1B            jr z,2F
 307+ 9E8C
 308+ 9E8C              ; (Cola_de_desplazamiento)="254".
 309+ 9E8C
 310+ 9E8C 21 DF 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E8F 35               dec (hl)
 312+ 9E90 20 15            jr nz,2F
 313+ 9E92
 314+ 9E92              ; Fin de las repeticiones del último movimiento.
 315+ 9E92
 316+ 9E92 21 E5 88         ld hl,Ctrl_2
 317+ 9E95 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E97
 319+ 9E97 2A D7 88         ld hl,(Puntero_mov)
 320+ 9E9A 23               inc hl
 321+ 9E9B 23               inc hl
 322+ 9E9C 23               inc hl
 323+ 9E9D 22 D7 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9EA0              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9EA0 7E               ld a,(hl)
 326+ 9EA1 32 E0 88         ld (Cola_de_desplazamiento),a
 327+ 9EA4
 328+ 9EA4 C3 4C 9E         jp Cola
 329+ 9EA7
 330+ 9EA7 CD E4 9E     2 call Inicia_Puntero_mov
 331+ 9EAA
 332+ 9EAA 21 E5 88         ld hl,Ctrl_2
 333+ 9EAD CB 96            res 2,(hl)
 334+ 9EAF
 335+ 9EAF C3 1C 9E         jp Movimiento
 336+ 9EB2
 337+ 9EB2              Siguiente_desplazamiento
 338+ 9EB2
 339+ 9EB2              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9EB2              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9EB2
 342+ 9EB2 21 E5 88         ld hl,Ctrl_2
 343+ 9EB5 CB 96            res 2,(hl)
 344+ 9EB7
 345+ 9EB7 2A D7 88         ld hl,(Puntero_mov)
 346+ 9EBA 23               inc hl
 347+ 9EBB 23               inc hl
 348+ 9EBC 22 D7 88         ld (Puntero_mov),hl
 349+ 9EBF
 350+ 9EBF 7E               ld a,(hl)
 351+ 9EC0 A7               and a
 352+ 9EC1 CC 44 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9EC4 CA 85 9E         jp z,Reinicia_el_movimiento
 354+ 9EC7
 355+ 9EC7 C9               ret
 356+ 9EC8
 357+ 9EC8              ; Subrutinas -----------------------------------------
 358+ 9EC8              ; ---------- --------- --------- ---------- ----------
 359+ 9EC8              ;
 360+ 9EC8              ;   24/07/23
 361+ 9EC8              ;
 362+ 9EC8              ;   Fijamos_bucle
 363+ 9EC8              ;
 364+ 9EC8              ;
 365+ 9EC8
 366+ 9EC8              Fijamos_bucle
 367+ 9EC8
 368+ 9EC8 3A DB 88         ld a,(Incrementa_puntero)
 369+ 9ECB 3C               inc a
 370+ 9ECC 32 DC 88         ld (Incrementa_puntero_backup),a
 371+ 9ECF
 372+ 9ECF CD 44 9F         call Incrementa_Puntero_indice_mov
 373+ 9ED2 2A D5 88         ld hl,(Puntero_indice_mov)
 374+ 9ED5 22 D9 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9ED8 C9               ret
 376+ 9ED9
 377+ 9ED9              ; ---------- --------- --------- ---------- ----------
 378+ 9ED9              ;
 379+ 9ED9              ;   07/7/23
 380+ 9ED9              ;
 381+ 9ED9              ;   Inicia_Repetimos_movimiento
 382+ 9ED9              ;
 383+ 9ED9              ;
 384+ 9ED9
 385+ 9ED9              Inicia_Repetimos_movimiento
 386+ 9ED9
 387+ 9ED9              ; Iniciamos (Repetimos_movimiento).
 388+ 9ED9
 389+ 9ED9 DD 2A D7 88      ld ix,(Puntero_mov)
 390+ 9EDD DD 7E 02         ld a,(ix+2)
 391+ 9EE0 32 DF 88         ld (Repetimos_movimiento),a
 392+ 9EE3
 393+ 9EE3 C9               ret
 394+ 9EE4
 395+ 9EE4              ; ---------- --------- --------- ---------- ----------
 396+ 9EE4              ;
 397+ 9EE4              ;   26/6/23
 398+ 9EE4              ;
 399+ 9EE4              ;   Inicia_Puntero_mov
 400+ 9EE4              ;
 401+ 9EE4              ;
 402+ 9EE4
 403+ 9EE4 2A D5 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9EE7 5E               ld e,(hl)
 405+ 9EE8 23               inc hl
 406+ 9EE9 56               ld d,(hl)
 407+ 9EEA EB               ex de,hl
 408+ 9EEB 22 D7 88         ld (Puntero_mov),hl
 409+ 9EEE C9               ret
 410+ 9EEF
 411+ 9EEF              ; ---------- --------- --------- ---------- ----------
 412+ 9EEF              ;
 413+ 9EEF              ;   27/06/23
 414+ 9EEF              ;
 415+ 9EEF              ;   Aplica_movimiento.
 416+ 9EEF
 417+ 9EEF              Aplica_desplazamiento
 418+ 9EEF
 419+ 9EEF              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EEF
 421+ 9EEF 2A D7 88         ld hl, (Puntero_mov)
 422+ 9EF2
 423+ 9EF2 7E               ld a,(hl)
 424+ 9EF3 E6 F0            and $f0
 425+ 9EF5 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EF6
 427+ 9EF6 CB 7E            bit 7,(hl)
 428+ 9EF8 28 03            jr z,1F
 429+ 9EFA CD 1A 99         call Mov_up
 430+ 9EFD 2A D7 88     1 ld hl, (Puntero_mov)
 431+ 9F00 CB 76            bit 6,(hl)
 432+ 9F02 28 03            jr z,2F
 433+ 9F04 CD E9 98         call Mov_down
 434+ 9F07 2A D7 88     2 ld hl, (Puntero_mov)
 435+ 9F0A CB 6E            bit 5,(hl)
 436+ 9F0C 28 03            jr z,3F
 437+ 9F0E CD 7B 9A         call Mov_left
 438+ 9F11 2A D7 88     3 ld hl, (Puntero_mov)
 439+ 9F14 CB 66            bit 4,(hl)
 440+ 9F16 C8               ret z
 441+ 9F17 CD 5D 99         call Mov_right
 442+ 9F1A C9               ret
 443+ 9F1B
 444+ 9F1B              ; ---------- --------- --------- ---------- ----------
 445+ 9F1B              ;
 446+ 9F1B              ;   26/06/23
 447+ 9F1B              ;
 448+ 9F1B              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F1B
 450+ 9F1B              Ajusta_velocidad_desplazamiento
 451+ 9F1B
 452+ 9F1B              ; 1er byte de la cadena de movimiento.
 453+ 9F1B              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F1B
 455+ 9F1B CD 39 9F         call Extrae_nibble_alto
 456+ 9F1E
 457+ 9F1E 32 C1 88         ld (Vel_up),a
 458+ 9F21 79               ld a,c
 459+ 9F22 E6 0F            and $0f
 460+ 9F24 32 C2 88         ld (Vel_down),a
 461+ 9F27
 462+ 9F27              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F27              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F27
 465+ 9F27 23               inc hl
 466+ 9F28 CD 39 9F         call Extrae_nibble_alto
 467+ 9F2B
 468+ 9F2B 32 BF 88         ld (Vel_left),a
 469+ 9F2E 79               ld a,c
 470+ 9F2F E6 0F            and $0f
 471+ 9F31 32 C0 88         ld (Vel_right),a
 472+ 9F34
 473+ 9F34              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F34
 475+ 9F34 23               inc hl
 476+ 9F35 22 D7 88         ld (Puntero_mov),hl
 477+ 9F38 C9               ret
 478+ 9F39
 479+ 9F39 06 04        Extrae_nibble_alto ld b,4
 480+ 9F3B 7E               ld a,(hl)
 481+ 9F3C 4F               ld c,a
 482+ 9F3D E6 F0            and $f0
 483+ 9F3F CB 3F        1 srl a
 484+ 9F41 10 FC            djnz 1B
 485+ 9F43 C9               ret
 486+ 9F44
 487+ 9F44              ; ---------- --------- --------- ---------- ----------
 488+ 9F44              ;
 489+ 9F44              ;   5/7/23
 490+ 9F44              ;
 491+ 9F44              ;   Incrementa_Puntero_indice_mov
 492+ 9F44
 493+ 9F44              Incrementa_Puntero_indice_mov
 494+ 9F44
 495+ 9F44 21 DB 88         ld hl,Incrementa_puntero
 496+ 9F47 34               inc (hl)
 497+ 9F48
 498+ 9F48 2A D5 88         ld hl,(Puntero_indice_mov)
 499+ 9F4B 01 02 00         ld bc,2
 500+ 9F4E A7               and a
 501+ 9F4F 09               add hl,bc
 502+ 9F50 22 D5 88         ld (Puntero_indice_mov),hl
 503+ 9F53
 504+ 9F53 7E               ld a,(hl)
 505+ 9F54 A7               and a
 506+ 9F55
 507+ 9F55              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F55
 509+ 9F55              ;    jr z,$
 510+ 9F55
 511+ 9F55              ;! Reinicia el Patrón de movimiento.
 512+ 9F55
 513+ 9F55 CC 5A 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F58
 515+ 9F58 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F59
 517+ 9F59 C9               ret
 518+ 9F5A
 519+ 9F5A
 520+ 9F5A              ; ---------- --------- --------- ---------- ----------
 521+ 9F5A              ;
 522+ 9F5A              ;   24/07/23
 523+ 9F5A              ;
 524+ 9F5A              ;   Inicializa_Puntero_indice_mov
 525+ 9F5A
 526+ 9F5A              Inicializa_Puntero_indice_mov
 527+ 9F5A
 528+ 9F5A              ; Existe etiqueta de bucle principal???
 529+ 9F5A
 530+ 9F5A 2A D9 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F5D 24               inc h
 532+ 9F5E 25               dec h
 533+ 9F5F 28 05            jr z,2F
 534+ 9F61
 535+ 9F61 22 D5 88         ld (Puntero_indice_mov),hl
 536+ 9F64 18 14            jr 3F
 537+ 9F66
 538+ 9F66              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F66
 540+ 9F66 3A DB 88     2 ld a,(Incrementa_puntero)
 541+ 9F69 47               ld b,a
 542+ 9F6A
 543+ 9F6A 2A D5 88         ld hl,(Puntero_indice_mov)
 544+ 9F6D 2B           1 dec hl
 545+ 9F6E 2B               dec hl
 546+ 9F6F 10 FC            djnz 1B
 547+ 9F71 22 D5 88         ld (Puntero_indice_mov),hl
 548+ 9F74
 549+ 9F74 AF               xor a
 550+ 9F75 32 DB 88         ld (Incrementa_puntero),a
 551+ 9F78 18 06            jr 4F
 552+ 9F7A
 553+ 9F7A 3A DC 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F7D 32 DB 88         ld (Incrementa_puntero),a
 555+ 9F80 C9           4 ret
 556+ 9F81
 557+ 9F81
 558+ 9F81
# file closed: Patrones_de_mov.asm
1518  9F81              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F81              ;
   3+ 9F81              ;	27/10/23
   4+ 9F81              ;
   5+ 9F81              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F81
   7+ 9F81              ;	ADC HL,SP	LD (addr),SP
   8+ 9F81              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F81              ;	ADD IX,SP	LD SP,nn
  10+ 9F81              ; 	ADD IY,SP	LD SP,HL
  11+ 9F81              ;				LD SP,IX
  12+ 9F81              ;	DEC SP		LD SP,IY
  13+ 9F81
  14+ 9F81              ;	EX (SP),HL
  15+ 9F81              ;	EX (SP),IX
  16+ 9F81              ;	EX (SP),IY
  17+ 9F81
  18+ 9F81              ;	INC SP
  19+ 9F81
  20+ 9F81                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 F8 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 CA 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A E7 88         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 00 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A D4 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 04 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A FE 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A E7 88         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 00 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A D4 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 04 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B F8 88      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 FE 88     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B F8 88  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC FB               ei
 107+ 7FFD C9               ret
 108+ 7FFE
 109+ 7FFE              ; -----------------------------------------------------------------------------
 110+ 7FFE              ;
 111+ 7FFE              ;   21/11/23
 112+ 7FFE
 113+ 7FFE              Limpia_y_reinicia_Stack_Snapshot
 114+ 7FFE
 115+ 7FFE              ;   Limpia Album_de_fotos.
 116+ 7FFE
 117+ 7FFE 2A FE 88         ld hl,(Stack_snapshot)
 118+ 8001 7D               ld a,l
 119+ 8002 A7               and a
 120+ 8003 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8004
 122+ 8004 47               ld b,a
 123+ 8005 04               inc b
 124+ 8006
 125+ 8006 36 00        1 ld (hl),0
 126+ 8008 2D               dec l
 127+ 8009 10 FB            djnz 1B
 128+ 800B
 129+ 800B              ;   Reinicializa (Stack_snapshot).
 130+ 800B
 131+ 800B AF               xor a
 132+ 800C 32 FE 88         ld (Stack_snapshot),a
 133+ 800F
 134+ 800F C9               ret
# file closed: Guarda_foto_registros.asm
1519  8010
1520  8010              	SAVESNA "Pruebas.sna", START
1521  8010
1522  8010
1523  8010
1524  8010
# file closed: Banco_de_pruebas.asm
