# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 2C 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD 94 8E     	call Pinta_entidades
  44  AA1C CD 86 8E     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD B6 8E     	call Guarda_parametros_DRAW
  49  AA26 CD D6 8D     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 3C 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD D9 90     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD F7 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD E8 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD C2 8E     	call Recupera_parametros_DRAW
  66  AA3F CD A4 8E     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 36 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 2C 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	21/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C3 85        	defw Caja_1
 103+ 856E 08 86        	defw Caja_2
 104+ 8570 4D 86        	defw Caja_3
 105+ 8572 92 86        	defw Caja_4
 106+ 8574 D7 86        	defw Caja_5
 107+ 8576 1C 87        	defw Caja_6
 108+ 8578 61 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 											; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 148+ 85B0
 149+ 85B0 00           	db 0											; (Autoriza_movimiento).
 150+ 85B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 150+ 85B5 00 00
 151+ 85B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 152+ 85BA
 153+ 85BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 154+ 85BC 00           	db 0											; (Cola_de_desplazamiento).
 155+ 85BD
 156+ 85BD 00           	db 0 											; (Columnas).
 157+ 85BE 00 00        	defw 0											; (Limite_horizontal).
 158+ 85C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 159+ 85C3
 160+ 85C3              ; ---------- ---------- ---------- ---------- ----------
 161+ 85C3
 162+ 85C3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 163+ 85C5 00 00        	defw 0											; (Posicion_actual).
 164+ 85C7 00 00        	defw 0 											; (Puntero_objeto).
 165+ 85C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 166+ 85CC
 167+ 85CC 00           	db %00000000 									; (Attr).
 168+ 85CD
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_der).
 170+ 85CF 00 00        	defw 0											; (Indice_Sprite_izq).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 172+ 85D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 173+ 85D5
 174+ 85D5 00 00        	defw 0											; (Posicion_inicio).
 175+ 85D7 00           	db 0											; (Cuad_objeto).
 176+ 85D8
 177+ 85D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 178+ 85DC
 179+ 85DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 180+ 85DD
 181+ 85DD 00 00 00...  	ds 6											; Variables_de_borrado
 182+ 85E3
 183+ 85E3 00 00        	db 0,0											; Variables_de_pintado
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00        	defw 0											;	" " " " " " "
 186+ 85E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 187+ 85ED
 188+ 85ED 00 00        	defw 0 											; Puntero_de_impresion.
 189+ 85EF
 190+ 85EF D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 191+ 85F1 00 00        	defw 0 											; Contador_de_mov_masticados
 192+ 85F3
 193+ 85F3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 194+ 85F5
 195+ 85F5 00           	db 0											; (Autoriza_movimiento).
 196+ 85F6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 196+ 85FA 00 00
 197+ 85FC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 198+ 85FF
 199+ 85FF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 200+ 8601 00           	db 0											; (Cola_de_desplazamiento).
 201+ 8602
 202+ 8602 00           	db 0 											; (Columnas).
 203+ 8603 00 00        	defw 0											; (Limite_horizontal).
 204+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 205+ 8608
 206+ 8608              ; ---------- ---------- ---------- ---------- ----------
 207+ 8608
 208+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 209+ 860A 00 00        	defw 0											; (Posicion_actual).
 210+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 211+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 212+ 8611
 213+ 8611 00           	db %00000000 									; (Attr).
 214+ 8612
 215+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 216+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 217+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 218+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 219+ 861A
 220+ 861A 00 00        	defw 0											; (Posicion_inicio).
 221+ 861C 00           	db 0											; (Cuad_objeto).
 222+ 861D
 223+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 224+ 8621
 225+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 226+ 8622
 227+ 8622 00 00 00...  	ds 6											; Variables_de_borrado
 228+ 8628
 229+ 8628 00 00        	db 0,0											; Variables_de_pintado
 230+ 862A 00 00        	defw 0											;	" " " " " " "
 231+ 862C 00 00        	defw 0											;	" " " " " " "
 232+ 862E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 233+ 8632
 234+ 8632 00 00        	defw 0 											; Puntero_de_impresion.
 235+ 8634
 236+ 8634 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 237+ 8636 00 00        	defw 0 											; Contador_de_mov_masticados
 238+ 8638
 239+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 240+ 863A
 241+ 863A 00           	db 0											; (Autoriza_movimiento).
 242+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 242+ 863F 00 00
 243+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 244+ 8644
 245+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 246+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 247+ 8647
 248+ 8647 00           	db 0 											; (Columnas).
 249+ 8648 00 00        	defw 0											; (Limite_horizontal).
 250+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 251+ 864D
 252+ 864D              ; ---------- ---------- ---------- ---------- ----------
 253+ 864D
 254+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 255+ 864F 00 00        	defw 0											; (Posicion_actual).
 256+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 257+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 258+ 8656
 259+ 8656 00           	db %00000000 									; (Attr).
 260+ 8657
 261+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 262+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 263+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 264+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 265+ 865F
 266+ 865F 00 00        	defw 0											; (Posicion_inicio).
 267+ 8661 00           	db 0											; (Cuad_objeto).
 268+ 8662
 269+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 270+ 8666
 271+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 272+ 8667
 273+ 8667 00 00 00...  	ds 6											; Variables_de_borrado
 274+ 866D
 275+ 866D 00 00        	db 0,0											; Variables_de_pintado
 276+ 866F 00 00        	defw 0											;	" " " " " " "
 277+ 8671 00 00        	defw 0											;	" " " " " " "
 278+ 8673 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 279+ 8677
 280+ 8677 00 00        	defw 0 											; Puntero_de_impresion.
 281+ 8679
 282+ 8679 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 283+ 867B 00 00        	defw 0 											; Contador_de_mov_masticados
 284+ 867D
 285+ 867D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 286+ 867F
 287+ 867F 00           	db 0											; (Autoriza_movimiento).
 288+ 8680 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 288+ 8684 00 00
 289+ 8686 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 290+ 8689
 291+ 8689 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 292+ 868B 00           	db 0											; (Cola_de_desplazamiento).
 293+ 868C
 294+ 868C 00           	db 0 											; (Columnas).
 295+ 868D 00 00        	defw 0											; (Limite_horizontal).
 296+ 868F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 297+ 8692
 298+ 8692              ; ---------- ---------- ---------- ---------- ----------
 299+ 8692
 300+ 8692 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 301+ 8694 00 00        	defw 0											; (Posicion_actual).
 302+ 8696 00 00        	defw 0 											; (Puntero_objeto).
 303+ 8698 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 304+ 869B
 305+ 869B 00           	db %00000000 									; (Attr).
 306+ 869C
 307+ 869C 00 00        	defw 0											; (Indice_Sprite_der).
 308+ 869E 00 00        	defw 0											; (Indice_Sprite_izq).
 309+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 310+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 311+ 86A4
 312+ 86A4 00 00        	defw 0											; (Posicion_inicio).
 313+ 86A6 00           	db 0											; (Cuad_objeto).
 314+ 86A7
 315+ 86A7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 316+ 86AB
 317+ 86AB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 318+ 86AC
 319+ 86AC 00 00 00...  	ds 6											; Variables_de_borrado
 320+ 86B2
 321+ 86B2 00 00        	db 0,0											; Variables_de_pintado
 322+ 86B4 00 00        	defw 0											;	" " " " " " "
 323+ 86B6 00 00        	defw 0											;	" " " " " " "
 324+ 86B8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 325+ 86BC
 326+ 86BC 00 00        	defw 0 											; Puntero_de_impresion.
 327+ 86BE
 328+ 86BE D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 329+ 86C0 00 00        	defw 0 											; Contador_de_mov_masticados
 330+ 86C2
 331+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 332+ 86C4
 333+ 86C4 00           	db 0											; (Autoriza_movimiento).
 334+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 334+ 86C9 00 00
 335+ 86CB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 336+ 86CE
 337+ 86CE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 338+ 86D0 00           	db 0											; (Cola_de_desplazamiento).
 339+ 86D1
 340+ 86D1 00           	db 0 											; (Columnas).
 341+ 86D2 00 00        	defw 0											; (Limite_horizontal).
 342+ 86D4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 343+ 86D7
 344+ 86D7              ; ---------- ---------- ---------- ---------- ----------
 345+ 86D7
 346+ 86D7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 347+ 86D9 00 00        	defw 0											; (Posicion_actual).
 348+ 86DB 00 00        	defw 0 											; (Puntero_objeto).
 349+ 86DD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 350+ 86E0
 351+ 86E0 00           	db %00000000 									; (Attr).
 352+ 86E1
 353+ 86E1 00 00        	defw 0											; (Indice_Sprite_der).
 354+ 86E3 00 00        	defw 0											; (Indice_Sprite_izq).
 355+ 86E5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 356+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 357+ 86E9
 358+ 86E9 00 00        	defw 0											; (Posicion_inicio).
 359+ 86EB 00           	db 0											; (Cuad_objeto).
 360+ 86EC
 361+ 86EC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 362+ 86F0
 363+ 86F0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 364+ 86F1
 365+ 86F1 00 00 00...  	ds 6											; Variables_de_borrado
 366+ 86F7
 367+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 368+ 86F9 00 00        	defw 0											;	" " " " " " "
 369+ 86FB 00 00        	defw 0											;	" " " " " " "
 370+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 371+ 8701
 372+ 8701 00 00        	defw 0 											; Puntero_de_impresion.
 373+ 8703
 374+ 8703 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 375+ 8705 00 00        	defw 0 											; Contador_de_mov_masticados
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 378+ 8709
 379+ 8709 00           	db 0											; (Autoriza_movimiento).
 380+ 870A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 380+ 870E 00 00
 381+ 8710 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 382+ 8713
 383+ 8713 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 384+ 8715 00           	db 0											; (Cola_de_desplazamiento).
 385+ 8716
 386+ 8716 00           	db 0 											; (Columnas).
 387+ 8717 00 00        	defw 0											; (Limite_horizontal).
 388+ 8719 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 389+ 871C
 390+ 871C              ; ---------- ---------- ---------- ---------- ----------
 391+ 871C
 392+ 871C 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 393+ 871E 00 00        	defw 0											; (Posicion_actual).
 394+ 8720 00 00        	defw 0 											; (Puntero_objeto).
 395+ 8722 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 396+ 8725
 397+ 8725 00           	db %00000000 									; (Attr).
 398+ 8726
 399+ 8726 00 00        	defw 0											; (Indice_Sprite_der).
 400+ 8728 00 00        	defw 0											; (Indice_Sprite_izq).
 401+ 872A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 402+ 872C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 403+ 872E
 404+ 872E 00 00        	defw 0											; (Posicion_inicio).
 405+ 8730 00           	db 0											; (Cuad_objeto).
 406+ 8731
 407+ 8731 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 408+ 8735
 409+ 8735 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 410+ 8736
 411+ 8736 00 00 00...  	ds 6											; Variables_de_borrado
 412+ 873C
 413+ 873C 00 00        	db 0,0											; Variables_de_pintado
 414+ 873E 00 00        	defw 0											;	" " " " " " "
 415+ 8740 00 00        	defw 0											;	" " " " " " "
 416+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8746
 418+ 8746 00 00        	defw 0 											; Puntero_de_impresion.
 419+ 8748
 420+ 8748 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 421+ 874A 00 00        	defw 0 											; Contador_de_mov_masticados
 422+ 874C
 423+ 874C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 424+ 874E
 425+ 874E 00           	db 0											; (Autoriza_movimiento).
 426+ 874F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 426+ 8753 00 00
 427+ 8755 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 428+ 8758
 429+ 8758 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 430+ 875A 00           	db 0											; (Cola_de_desplazamiento).
 431+ 875B
 432+ 875B 00           	db 0 											; (Columnas).
 433+ 875C 00 00        	defw 0											; (Limite_horizontal).
 434+ 875E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 435+ 8761
 436+ 8761              ; ---------- ---------- ---------- ---------- ----------
 437+ 8761
 438+ 8761 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 439+ 8763 00 00        	defw 0											; (Posicion_actual).
 440+ 8765 00 00        	defw 0 											; (Puntero_objeto).
 441+ 8767 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 442+ 876A
 443+ 876A 00           	db %00000000 									; (Attr).
 444+ 876B
 445+ 876B 00 00        	defw 0											; (Indice_Sprite_der).
 446+ 876D 00 00        	defw 0											; (Indice_Sprite_izq).
 447+ 876F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 448+ 8771 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 449+ 8773
 450+ 8773 00 00        	defw 0											; (Posicion_inicio).
 451+ 8775 00           	db 0											; (Cuad_objeto).
 452+ 8776
 453+ 8776 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 454+ 877A
 455+ 877A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 456+ 877B
 457+ 877B 00 00 00...  	ds 6											; Variables_de_borrado
 458+ 8781
 459+ 8781 00 00        	db 0,0											; Variables_de_pintado
 460+ 8783 00 00        	defw 0											;	" " " " " " "
 461+ 8785 00 00        	defw 0											;	" " " " " " "
 462+ 8787 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 463+ 878B
 464+ 878B 00 00        	defw 0 											; Puntero_de_impresion.
 465+ 878D
 466+ 878D D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 467+ 878F 00 00        	defw 0 											; Contador_de_mov_masticados
 468+ 8791
 469+ 8791 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 470+ 8793
 471+ 8793 00           	db 0											; (Autoriza_movimiento).
 472+ 8794 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 472+ 8798 00 00
 473+ 879A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 474+ 879D
 475+ 879D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 476+ 879F 00           	db 0											; (Cola_de_desplazamiento).
 477+ 87A0
 478+ 87A0 00           	db 0 											; (Columnas).
 479+ 87A1 00 00        	defw 0											; (Limite_horizontal).
 480+ 87A3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 481+ 87A6
 482+ 87A6              ; -------------------------------------------------------------------------------------
 483+ 87A6              ;
 484+ 87A6              ;	20/05/23
 485+ 87A6              ;
 486+ 87A6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 487+ 87A6              ;
 488+ 87A6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 489+ 87A6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 490+ 87A6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 491+ 87A6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 492+ 87A6
 493+ 87A6              Indice_de_entidades
 494+ 87A6
 495+ 87A6 AA 87        	defw Entidad_1
 496+ 87A8 BA 87        	defw Entidad_2
 497+ 87AA
 498+ 87AA              ;	BADSAT, (Satélite malvado).
 499+ 87AA
 500+ 87AA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 501+ 87AC 04           	db %00000100									; (Attr).
 502+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 503+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 504+ 87B1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 505+ 87B3 01           	db 1											; (Cuad_objeto).
 506+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 507+ 87B8 A6 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 508+ 87BA
 509+ 87BA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 510+ 87BC 02           	db %00000010									; (Attr).
 511+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 512+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 513+ 87C1 40 50        	defw $5040                                      ; (Posicion_inicio).
 514+ 87C3 01           	db 1											; (Cuad_objeto).
 515+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 516+ 87C8 A6 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 517+ 87CA
# file closed: Cajas_y_disparos.asm
  97  87CA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87CA              ; 13/05/23
   2+ 87CA
   3+ 87CA              Indice_de_niveles
   4+ 87CA
   5+ 87CA D8 87        	defw Nivel_1
   6+ 87CC DA 87        	defw Nivel_2
   7+ 87CE E7 87        	defw Nivel_3
   8+ 87D0 F7 87        	defw Nivel_4
   9+ 87D2 09 88        	defw Nivel_5
  10+ 87D4              ;	...
  11+ 87D4              ;	...
  12+ 87D4              ;	+ Niveles ...
  13+ 87D4
  14+ 87D4 00 00        	defw 0
  15+ 87D6 00 00        	defw 0
  16+ 87D8
  17+ 87D8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87D9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87DA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87DB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87DF 01 02
  21+ 87E1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87E5 01 02
  22+ 87E7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87E8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87EC 01
  24+ 87ED 03 01 01 01  	db 3,1,1,1,1
  24+ 87F1 01
  25+ 87F2 03 01 01 01  	db 3,1,1,1,1
  25+ 87F6 01
  26+ 87F7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87F8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87FC 01
  28+ 87FD 04 01 01 01  	db 4,1,1,1,1
  28+ 8801 01
  29+ 8802 04 01 01 01  	db 4,1,1,1,1
  29+ 8806 01
  30+ 8807 02 03        	db 2,3
  31+ 8809 14           Nivel_5 db 20									; Nº de entidades.
  32+ 880A 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 880E 01
  33+ 880F 05 01 01 01  	db 5,1,1,1,1
  33+ 8813 01
  34+ 8814 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8818 01
  35+ 8819 05 01 01 01  	db 5,1,1,1,1
  35+ 881D 01
  36+ 881E
  37+ 881E              ;---------------------------------------------------------------------------------------------------------------
  38+ 881E              ;
  39+ 881E              ;   3/9/23
  40+ 881E              ;
  41+ 881E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 881E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 881E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 881E              ;	_en la caja DRAW correspondiente.
  45+ 881E              ;
  46+ 881E              ;	MODIFICA: HL,DE y A.
  47+ 881E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 881E
  49+ 881E              Inicializa_Punteros_de_nivel
  50+ 881E
  51+ 881E 21 CA 87     	ld hl,Indice_de_niveles
  52+ 8821 22 54 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8824 CD 26 8D     	call Extrae_address
  54+ 8827 7E           	ld a,(hl)
  55+ 8828 32 20 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 882B 23           	inc hl
  57+ 882C 22 56 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 882F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8830
  60+ 8830              ;---------------------------------------------------------------------------------------------------------------
  61+ 8830              ;
  62+ 8830              ;   13/5/23
  63+ 8830              ;
  64+ 8830              ;	Destruye A,BC,HL,DE
  65+ 8830
  66+ 8830              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8830              ;	_del juego.
  68+ 8830
  69+ 8830              Prepara_cajas
  70+ 8830
  71+ 8830              ; Preparamos los punteros de las cajas.
  72+ 8830
  73+ 8830 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8833 CD 26 8D     	call Extrae_address
  75+ 8836 CD 73 88     	call Avanza_caja
  76+ 8839
  77+ 8839 CD B7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 883C
  79+ 883C 2A 56 89     	ld hl,(Datos_de_nivel)
  80+ 883F
  81+ 883F              ; HL está en los datos del nivel correspondiente.
  82+ 883F              ; B actuará como contador de cajas.
  83+ 883F
  84+ 883F C5           1 push bc
  85+ 8840
  86+ 8840 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8841 CD 64 88     	call PreparaBC
  88+ 8844
  89+ 8844 21 A6 87     	ld hl,Indice_de_entidades
  90+ 8847 CD 6C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 884A 22 26 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 884D
  93+ 884D CD 7D 88     	call Datos_de_entidad_a_caja
  94+ 8850
  95+ 8850 2A 1E 89     	ld hl,(Indice_restore_caja)
  96+ 8853 CD 26 8D     	call Extrae_address
  97+ 8856 CD 73 88     	call Avanza_caja
  98+ 8859
  99+ 8859 2A 56 89     	ld hl,(Datos_de_nivel)
 100+ 885C 23           	inc hl
 101+ 885D 22 56 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8860
 103+ 8860 C1           	pop bc
 104+ 8861 10 DC        	djnz 1B
 105+ 8863 C9           	ret
 106+ 8864
 107+ 8864 CB 27        PreparaBC sla a
 108+ 8866 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8868 4F           	ld c,a
 110+ 8869 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 886B C9           	ret
 112+ 886C
 113+ 886C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 886D ED 4A        	adc hl,bc
 115+ 886F CD 26 8D     	call Extrae_address
 116+ 8872 C9           	ret
 117+ 8873
 118+ 8873 22 1A 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8876 13           	inc de
 120+ 8877 13           	inc de
 121+ 8878 EB           	ex de,hl
 122+ 8879 22 1E 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 887C C9           	ret
 124+ 887D
 125+ 887D              Datos_de_entidad_a_caja
 126+ 887D
 127+ 887D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 887D
 129+ 887D
 130+ 887D ED 5B 1A 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8881
 132+ 8881 01 02 00     	ld bc,2
 133+ 8884 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8886
 135+ 8886 01 07 00     	ld bc,7
 136+ 8889 CD B1 88     	call Situa_DE
 137+ 888C
 138+ 888C 01 05 00     	ld bc,5
 139+ 888F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8891
 141+ 8891 01 04 00     	ld bc,4
 142+ 8894 CD B1 88     	call Situa_DE
 143+ 8897
 144+ 8897 01 07 00     	ld bc,7
 145+ 889A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 889C
 147+ 889C 01 18 00     	ld bc,24
 148+ 889F CD B1 88     	call Situa_DE
 149+ 88A2
 150+ 88A2 01 02 00     	ld bc,2
 151+ 88A5 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88A7
 153+ 88A7              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88A7              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88A7
 156+ 88A7 01 0F 00     	ld bc,15									; *****
 157+ 88AA CD B1 88     	call Situa_DE
 158+ 88AD
 159+ 88AD 3E 03        	ld a,3
 160+ 88AF 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88B0
 162+ 88B0 C9           	ret
 163+ 88B1
 164+ 88B1 EB           Situa_DE ex de,hl
 165+ 88B2 A7           	and a
 166+ 88B3 ED 4A        	adc hl,bc
 167+ 88B5 EB           	ex de,hl
 168+ 88B6 C9           	ret
 169+ 88B7
 170+ 88B7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88B7              ;
 172+ 88B7              ;	21/5/23
 173+ 88B7              ;
 174+ 88B7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88B7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88B7              ;
 177+ 88B7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88B7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88B7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88B7              ;
 181+ 88B7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88B7              ;	MODIFICA: A y B.
 183+ 88B7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88B7
 185+ 88B7              Admin_num_entidades
 186+ 88B7
 187+ 88B7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88B7
 189+ 88B7 3A 20 89     	ld a,(Numero_de_entidades)
 190+ 88BA A7           	and a
 191+ 88BB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88BB              ;	jr z,$
 193+ 88BB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88BB
 195+ 88BB 20 03        	jr nz,3F
 196+ 88BD
 197+ 88BD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88BD
 199+ 88BD CD 1E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88C0
 201+ 88C0 3A 20 89     3 ld a,(Numero_de_entidades)
 202+ 88C3 FE 07        	cp 7
 203+ 88C5 38 08        	jr c,1F
 204+ 88C7
 205+ 88C7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88C7              ; Actualizamos variables.
 207+ 88C7
 208+ 88C7 3E 07        	ld a,7
 209+ 88C9 32 21 89     	ld (Numero_parcial_de_entidades),a
 210+ 88CC 47           	ld b,a
 211+ 88CD 18 04        	jr 2F
 212+ 88CF
 213+ 88CF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88CF              ; (Numero_de_entidades)="0".
 215+ 88CF
 216+ 88CF 32 21 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88D2 47           	ld b,a
 218+ 88D3 C9           2 ret
# file closed: Niveles.asm
  98  88D4
  99  88D4              ; ******************************************************************************************************************************************************************************************
 100  88D4              ; Constantes.
 101  88D4              ; ******************************************************************************************************************************************************************************************
 102  88D4              ;
 103  88D4              ; 25/12/23
 104  88D4
 105  88D4              ;
 106  88D4              ; Constantes.
 107  88D4              ;
 108  88D4
 109  88D4              Sprite_vacio equ $f000
 110  88D4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88D4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88D4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88D4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88D4
 115  88D4              Almacen_de_movimientos_masticados_Entidad_1 equ $5cd0	; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 116  88D4              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 117  88D4              ;														; 4799 bytes, 4,8Kb.
 118  88D4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 119  88D4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 120  88D4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 121  88D4              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 122  88D4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 123  88D4
 124  88D4              ;														; 55 Bytes.
 125  88D4
 126  88D4              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 127  88D4              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 128  88D4
 129  88D4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 130  88D4
 131  88D4              ; ******************************************************************************************************************************************************************************************
 132  88D4              ; Variables.
 133  88D4              ; ******************************************************************************************************************************************************************************************
 134  88D4              ;
 135  88D4              ; 25/12//23
 136  88D4              ;
 137  88D4              ; Variables de DRAW. (Motor principal).
 138  88D4              ;
 139  88D4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 140  88D4
 141  88D4 00           Filas db 0												; Filas. [DRAW]
 142  88D5 00           Columns db 0  											; Nº de columnas. [DRAW]
 143  88D6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 144  88D8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 145  88DA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 146  88DB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 147  88DC
 148  88DC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 149  88DC
 150  88DC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 151  88DD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 152  88DD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 153  88DD 00           Attr db 0												; Atributos de la entidad:
 154  88DE
 155  88DE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 156  88DE              ;
 157  88DE              ;	COLORES: 0 ..... NEGRO
 158  88DE              ;    		 1 ..... AZUL
 159  88DE              ; 			 2 ..... ROJO
 160  88DE              ;			 3 ..... MAGENTA
 161  88DE              ; 			 4 ..... VERDE
 162  88DE              ; 			 5 ..... CIAN
 163  88DE              ;			 6 ..... AMARILLO
 164  88DE              ; 			 7 ..... BLANCO
 165  88DE
 166  88DE 00 00        Indice_Sprite_der defw 0
 167  88E0 00 00        Indice_Sprite_izq defw 0
 168  88E2 00 00        Puntero_DESPLZ_der defw 0
 169  88E4 00 00        Puntero_DESPLZ_izq defw 0
 170  88E6
 171  88E6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 172  88E8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 173  88E9
 174  88E9              ; Variables de objeto. (Características).
 175  88E9
 176  88E9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 177  88EA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 178  88EB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 179  88EC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 180  88ED
 181  88ED 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 182  88EE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 183  88EE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 184  88EE 00 00 00...  Variables_de_borrado ds 6
 185  88F4
 186  88F4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 187  88F6 00 00        	defw 0
 188  88F8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 189  88FA 00 00 00 00  	db 0,0,0,0
 190  88FE
 191  88FE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 192  8900              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 193  8900
 194  8900 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
 195  8902
 196  8902              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 197  8902              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 198  8902
 199  8902 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 200  8904              ;														; _palabras que componen el "movimiento_masticado".
 201  8904
 202  8904              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 203  8904
 204  8904 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 205  8905              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 206  8905              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 207  8905              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 208  8905              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 209  8905              ;
 210  8905              ; 														DESCRIPCIÖN:
 211  8905              ;
 212  8905              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 213  8905              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 214  8905              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 215  8905              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 216  8905              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 217  8905              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 218  8905              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 219  8905              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 220  8905              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 221  8905              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 222  8905              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 223  8905              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 224  8905              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 225  8905              ;
 226  8905              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 227  8905              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 228  8905              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 229  8905
 230  8905              ; Movimiento. ------------------------------------------------------------------------------------------------------
 231  8905
 232  8905 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 233  8907 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 234  8909 00 00        Puntero_indice_mov_bucle defw 0							;
 235  890B              ;
 236  890B              ;
 237  890B 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 238  890C              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 239  890C              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 240  890C 00           Incrementa_puntero_backup db 0
 241  890D 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 242  890E              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 243  890E 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 244  890F 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 245  8910 00           Cola_de_desplazamiento db 0								; Este byte indica:
 246  8911              ;
 247  8911              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 248  8911              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 249  8911              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 250  8911              ;
 251  8911              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 252  8911              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 253  8911              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 254  8911              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 255  8911              ;
 256  8911              ;														;	"$ff" ..... Bucle infinito de repetición.
 257  8911              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 258  8911              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 259  8911
 260  8911
 261  8911              ; Variables de funcionamiento. [DRAW].
 262  8911
 263  8911 00           Columnas db 0
 264  8912 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 265  8914              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 266  8914 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 267  8915
 268  8915              ; variables de control general.
 269  8915
 270  8915 00           Ctrl_2 db 0
 271  8916              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 272  8916              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 273  8916              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 274  8916              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 275  8916              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 276  8916              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 277  8916              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 278  8916              ;
 279  8916              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 280  8916              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 281  8916              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 282  8916              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 283  8916              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 284  8916              ;														BIT 4, ???
 285  8916              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 286  8916
 287  8916 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 288  8917
 289  8917              ;! 67 Bytes por entidad.
 290  8917
 291  8917              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 292  8917              ;					         		---------;      ;---------
 293  8917
 294  8917
 295  8917              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 296  8917
 297  8917              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 298  8917
 299  8917 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 300  8918
 301  8918              ;														DESCRIPCIÓN:
 302  8918              ;
 303  8918              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 304  8918              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 305  8918              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 306  8918              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 307  8918              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 308  8918              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 309  8918
 310  8918              ;														BIT 3, Recarga de nueva oleada.
 311  8918              ;														BIT 4, Recarga de nueva oleada.
 312  8918              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 313  8918              ;														BIT 6, **** Frame completo.
 314  8918              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 315  8918
 316  8918 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 317  891A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 318  891A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 319  891A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 320  891A
 321  891A              ; Gestión de ENTIDADES y CAJAS.
 322  891A
 323  891A 00 00        Puntero_store_caja defw 0
 324  891C 00 00        Puntero_restore_caja defw 0
 325  891E 00 00        Indice_restore_caja defw 0
 326  8920 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 327  8921 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 328  8922 00           Entidades_en_curso db 0									; ..... ..... .....
 329  8923 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 330  8924              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 331  8924              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 332  8924              ;														; _ (Numero_de_malotes)="0".
 333  8924 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 334  8926 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 335  8928              ;														; _ puntero (Indice_entidades).
 336  8928
 337  8928              ;---------------------------------------------------------------------------------------------------------------
 338  8928              ;
 339  8928              ;	18/11/23
 340  8928              ;
 341  8928              ;	Álbumes.
 342  8928
 343  8928 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 344  892A              ;														; _variable para almacenar lo posición del puntero_
 345  892A              ; 														; _de pila, SP.
 346  892A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 347  892C              ;														; La utiliza la rutina [Extrae_foto_registros].
 348  892C 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 349  892E 00 70        Stack_snapshot defw Album_de_fotos
 350  8930 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 351  8932
 352  8932              ;End_Snapshot defw Album_de_fotos
 353  8932              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 354  8932 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 355  8934              ;														; _el snapshot de los registros del siguiente disparo.
 356  8934              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 357  8934 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 358  8936
 359  8936 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 360  8937              ;
 361  8937              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 362  8937              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 363  8937              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo. Cuando esto ocurre_
 364  8937              ;																_ no se inicia una nueva "Entidad_guía".
 365  8937              ; Gestión de Disparos.
 366  8937
 367  8937 00           Numero_de_disparotes db 0
 368  8938 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 369  893A 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 370  893C 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 371  893D              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 372  893D              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 373  893D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 374  893F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 375  893F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 376  893F              ;														; _produzca colisión.
 377  893F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 378  8941              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 379  8941 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 380  8944              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 381  8944 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 382  8947              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 383  8947 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 384  8948
 385  8948              ;---------------------------------------------------------------------------------------------------------------
 386  8948
 387  8948              ; Relojes y temporizaciones.
 388  8948
 389  8948 00           Contador_de_frames db 0
 390  8949 00           Contador_de_frames_2 db 0
 391  894A
 392  894A 04           Clock_explosion db 4
 393  894B 1E           Clock_Entidades_en_curso db 30
 394  894C 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 395  894D              ;														; Repite la oleada de entidades.
 396  894D 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 397  894E 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 398  894F 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 399  8950
 400  8950 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 401  8951 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 402  8952 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 403  8953
 404  8953              ;---------------------------------------------------------------------------------------------------------------
 405  8953
 406  8953              ; Gestión de NIVELES.
 407  8953
 408  8953 00           Nivel db 0												; Nivel actual del juego.
 409  8954 00 00        Puntero_indice_NIVELES defw 0
 410  8956 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 411  8958              ; 														; _ que definen el NIVEL.
 412  8958              ; Y todo comienza aquí .....
 413  8958              ;
 414  8958              ; Rutina principal *************************************************************************************************************************************************************************
 415  8958              ;
 416  8958              ;	16/11/22
 417  8958
 418  8958              START
 419  8958
 420  8958 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 421  895B 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 422  895D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 423  895F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 424  8961 F3           	DI
 425  8962
 426  8962 3E 07        	ld a,%00000111
 427  8964 CD AF 99     	call Cls
 428  8967
 429  8967 CD FF 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 430  896A
 431  896A              ; INICIALIZACIÓN.
 432  896A
 433  896A CD 1E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 434  896D CD 30 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 435  8970 CD 8E 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 436  8973              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 437  8973
 438  8973 CD AF 8D     	call Restore_entidad								 ; Vuelca en DRAW los parámetros de la 1º entidad, (Caja_1).
 439  8976
 440  8976 21 21 89     	ld hl,Numero_parcial_de_entidades
 441  8979 46           	ld b,(hl)
 442  897A 04           	inc b
 443  897B 05           	dec b
 444  897C 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 445  897E
 446  897E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 447  897E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 448  897E              ;	Pintamos el resto de entidades:
 449  897E
 450  897E              ;	INICIA ENTIDADES !!!!!
 451  897E
 452  897E C5           1 push bc  												; Guardo el contador de entidades.
 453  897F CD 9D 8B     	call Inicia_entidad
 454  8982 C1           	pop bc
 455  8983 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 456  8985
 457  8985              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 458  8985              ; (Esto se dá cuando se inicia una nueva oleada).
 459  8985
 460  8985 3A 17 89     	ld a,(Ctrl_1)
 461  8988 CB 5F        	bit 3,a
 462  898A 20 1B        	jr nz,5F											; Loop
 463  898C
 464  898C              ; 	INICIA AMADEUS !!!!!
 465  898C
 466  898C CD D6 8D     3 call Restore_Amadeus
 467  898F CD 2C 8D     	call Inicia_Puntero_objeto
 468  8992 CD A2 93     	call Draw
 469  8995 CD 16 71     	call Guarda_foto_registros
 470  8998 CD 53 8E     	call Guarda_datos_de_borrado_Amadeus
 471  899B
 472  899B 11 7E 85     	ld de,Amadeus_db
 473  899E CD E8 8D     	call Store_Amadeus
 474  89A1
 475  89A1              ; 	INICIA DISPAROS !!!!!
 476  89A1
 477  89A1 CD A4 8C     	call Inicia_Puntero_Disparo_Entidades
 478  89A4 CD AB 8C     	call Inicia_Puntero_Disparo_Amadeus
 479  89A7
 480  89A7              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 481  89A7
 482  89A7 CD 8E 8C     5 call Inicia_punteros_de_cajas
 483  89AA CD AF 8D     	call Restore_entidad
 484  89AD
 485  89AD 3A 17 89     	ld a,(Ctrl_1)
 486  89B0 CB 5F        	bit 3,a
 487  89B2 28 07        	jr z,6F
 488  89B4
 489  89B4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 490  89B4
 491  89B4 21 17 89     	ld hl,Ctrl_1
 492  89B7 CB 9E        	res 3,(hl)
 493  89B9 18 07        	jr Main
 494  89BB
 495  89BB              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 496  89BB
 497  89BB 21 36 89     6 ld hl,Ctrl_3
 498  89BE CB C6        	set 0,(hl)											; Frame completo.
 499  89C0 FB           	ei
 500  89C1 76           	halt
 501  89C2
 502  89C2              ; ------------------------------------
 503  89C2
 504  89C2              Main
 505  89C2              ;
 506  89C2              ;	11/12/23
 507  89C2
 508  89C2              ; Aparece nueva entidad ???
 509  89C2
 510  89C2              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 511  89C2              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 512  89C2              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 513  89C2              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 514  89C2              ;														; _un 2º bloque.
 515  89C2
 516  89C2 3A 4B 89     	ld a,(Clock_Entidades_en_curso)
 517  89C5 47           	ld b,a
 518  89C6 3A 48 89     	ld a,(Contador_de_frames)
 519  89C9 B8           	cp b
 520  89CA 20 18        	jr nz,13F
 521  89CC
 522  89CC              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 523  89CC              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 524  89CC              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 525  89CC              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 526  89CC
 527  89CC              ;	inc a
 528  89CC              ;	cp b
 529  89CC              ;	jr nz,13F
 530  89CC
 531  89CC
 532  89CC              ;23 ld (Contador_de_frames),a
 533  89CC
 534  89CC              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 535  89CC              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 536  89CC
 537  89CC 3A 21 89     21 ld a,(Numero_parcial_de_entidades)
 538  89CF 47           	ld b,a
 539  89D0 3A 22 89     	ld a,(Entidades_en_curso)
 540  89D3 B8           	cp b
 541  89D4 28 0E        	jr z,13F
 542  89D6 30 0C        	jr nc,13F
 543  89D8
 544  89D8              ; --- --- --- --- ---
 545  89D8
 546  89D8 3C           	inc a
 547  89D9 32 22 89     	ld (Entidades_en_curso),a
 548  89DC
 549  89DC              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 550  89DC
 551  89DC 3A 4B 89     	ld a,(Clock_Entidades_en_curso)
 552  89DF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 553  89DF              ;! _ IMPREDECIBLE !!!!
 554  89DF C6 32        	add 50
 555  89E1 32 4B 89     	ld (Clock_Entidades_en_curso),a
 556  89E4
 557  89E4              ; -------------------------------------------------------------------------------------------------------------
 558  89E4
 559  89E4              ; Habilita disparos.
 560  89E4
 561  89E4 21 4D 89     13 ld hl,Disparo_Amadeus
 562  89E7 11 4F 89     	ld de,CLOCK_repone_disparo_Amadeus
 563  89EA CD 97 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 564  89ED
 565  89ED 21 50 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 566  89F0 11 52 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 567  89F3 CD 97 9D     	call Habilita_disparos
 568  89F6
 569  89F6              ; COLISIONES.
 570  89F6
 571  89F6 CD A2 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 572  89F9
 573  89F9              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 574  89F9              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 575  89F9              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 576  89F9
 577  89F9 AF           	xor a
 578  89FA 32 3C 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 579  89FD
 580  89FD CD 8E 8C     	call Inicia_punteros_de_cajas
 581  8A00 CD AF 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 582  8A03              ; 														; _ en DRAW.
 583  8A03 3A D4 88     	ld a,(Filas)
 584  8A06 A7           	and a
 585  8A07 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 586  8A09 CD C1 8D     	call Incrementa_punteros_de_cajas
 587  8A0C 18 F2        	jr 12B
 588  8A0E
 589  8A0E              ; ---------------------------------------------------------------------------------------
 590  8A0E
 591  8A0E 3A 21 89     10 ld a,(Numero_parcial_de_entidades)
 592  8A11 47               ld b,a
 593  8A12 A7           	and a
 594  8A13 20 14        	jr nz,11F
 595  8A15
 596  8A15 21 17 89     	ld hl,Ctrl_1
 597  8A18 CB 66        	bit 4,(hl)
 598  8A1A C2 C2 8A     	jp nz,16F
 599  8A1D
 600  8A1D              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 601  8A1D
 602  8A1D 21 17 89     	ld hl,Ctrl_1
 603  8A20 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 604  8A22
 605  8A22 3A 48 89     	ld a,(Contador_de_frames)
 606  8A25 3C           	inc a
 607  8A26 32 4C 89     	ld (Activa_recarga_cajas),a
 608  8A29
 609  8A29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 610  8A29
 611  8A29 3A 22 89     11 ld a,(Entidades_en_curso)
 612  8A2C A7           	and a
 613  8A2D CA C2 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 614  8A30 47           	ld b,a												; No hay entidades que gestionar.
 615  8A31
 616  8A31              ; ( Código que ejecutamos con cada entidad: ).
 617  8A31
 618  8A31              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 619  8A31
 620  8A31 C5           15 push bc 												; Nº de entidades en curso.
 621  8A32
 622  8A32              ; Existe "Entidad_guía" ???.
 623  8A32              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 624  8A32
 625  8A32 3A 36 89     	ld a,(Ctrl_3)
 626  8A35 CB 4F        	bit 1,a
 627  8A37 20 11        	jr nz,22F
 628  8A39
 629  8A39              ; Almacén de "Movimientos_masticados" lleno ???
 630  8A39              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 631  8A39              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 632  8A39
 633  8A39 3A 36 89     	ld a,(Ctrl_3)
 634  8A3C CB 57        	bit 2,a
 635  8A3E 20 0A        	jr nz,22F
 636  8A40
 637  8A40              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 638  8A40
 639  8A40 21 15 89     	ld hl,Ctrl_2
 640  8A43 CB EE        	set 5,(hl)
 641  8A45 21 36 89     	ld hl,Ctrl_3
 642  8A48 CB CE        	set 1,(hl)
 643  8A4A
 644  8A4A              ; Impacto ???
 645  8A4A
 646  8A4A 3A ED 88     22 ld a,(Impacto)
 647  8A4D A7           	and a
 648  8A4E 28 31        	jr z,8F
 649  8A50
 650  8A50              ; Hay Impacto en esta entidad.
 651  8A50
 652  8A50 21 4A 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 653  8A53 35           	dec (hl)
 654  8A54 C2 B5 8A     	jp nz,17F
 655  8A57
 656  8A57              ;! Velocidad de la animación de la explosión.
 657  8A57
 658  8A57 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 659  8A59              ;														; _,(velocidad de la explosión).
 660  8A59
 661  8A59              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 662  8A59
 663  8A59 CD 73 8E     	call Repone_datos_de_borrado
 664  8A5C CD CC 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 665  8A5F
 666  8A5F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 667  8A5F
 668  8A5F 3A 15 89     	ld a,(Ctrl_2)
 669  8A62 CB 4F        	bit 1,a
 670  8A64 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 671  8A66
 672  8A66              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 673  8A66
 674  8A66 3A DC 88     	ld a,(CTRL_DESPLZ)
 675  8A69 A7           	and a
 676  8A6A 20 08        	jr nz,18F
 677  8A6C
 678  8A6C 21 84 84     	ld hl,Indice_Explosion_2x2-2
 679  8A6F 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 680  8A72 18 06        	jr 19F
 681  8A74
 682  8A74 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 683  8A77 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 684  8A7A
 685  8A7A 21 15 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 686  8A7D CB CE        	set 1,(hl)
 687  8A7F 18 22        	jr 7F
 688  8A81
 689  8A81              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 690  8A81              ; _con las coordenadas de la entidad almacenada en DRAW.
 691  8A81
 692  8A81 3A 17 89     8 ld a,(Ctrl_1)
 693  8A84 CB 57        	bit 2,a
 694  8A86 28 1B        	jr z,7F
 695  8A88
 696  8A88 2A 3F 89     	ld hl,(Coordenadas_disparo_certero)
 697  8A8B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 698  8A8C              ;														; E contiene la coordenada_X del disparo.
 699  8A8C 2A DA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 700  8A8F              ;														; H FILA, (Coordenada_y de la entidad).
 701  8A8F A7           	and a
 702  8A90 ED 52        	sbc hl,de
 703  8A92
 704  8A92 CD BB 92     	call Determina_resultado_comparativa
 705  8A95
 706  8A95 78           	ld a,b
 707  8A96 A7           	and a
 708  8A97 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 709  8A99
 710  8A99              ; ----- ----- -----
 711  8A99
 712  8A99 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 713  8A9B 32 ED 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 714  8A9E
 715  8A9E 21 17 89     	ld hl,Ctrl_1
 716  8AA1 CB 96        	res 2,(hl)
 717  8AA3
 718  8AA3 CD 13 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 719  8AA6
 720  8AA6 3A 04 89     	ld a,(Ctrl_0)
 721  8AA9 CB 67        	bit 4,a
 722  8AAB 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 723  8AAD
 724  8AAD              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 725  8AAD              ; [[[
 726  8AAD              ;	call Detecta_disparo_entidad
 727  8AAD              ; ]]]
 728  8AAD
 729  8AAD CD 06 8C     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 730  8AB0
 731  8AB0 21 04 89     	ld hl,Ctrl_0
 732  8AB3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 733  8AB5
 734  8AB5 CD 74 8D     17 call Store_Restore_cajas
 735  8AB8
 736  8AB8 C1           	pop bc
 737  8AB9
 738  8AB9 05           	dec b
 739  8ABA C2 31 8A     	jp nz,15B
 740  8ABD
 741  8ABD              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 742  8ABD              ; Hemos gestionado todas las unidades.
 743  8ABD              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 744  8ABD
 745  8ABD 21 17 89     	ld hl,Ctrl_1
 746  8AC0 CB 96        	res 2,(hl)
 747  8AC2
 748  8AC2 21 36 89     16 ld hl,Ctrl_3
 749  8AC5 CB C6        	set 0,(hl)											; Frame completo.
 750  8AC7 AF           	xor a
 751  8AC8 D3 FE        	out ($fe),a
 752  8ACA FB           	ei
 753  8ACB 76           	halt
 754  8ACC
 755  8ACC              ; ----------------------------------------
 756  8ACC
 757  8ACC 3A 17 89     	ld a,(Ctrl_1) 										; Existe Loop?
 758  8ACF CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 759  8AD1 CA C2 89     	jp z,Main
 760  8AD4
 761  8AD4              ; RECARGA DE NUEVA OLEADA.
 762  8AD4
 763  8AD4 3A 48 89     	ld a,(Contador_de_frames)
 764  8AD7 47           	ld b,a
 765  8AD8 3A 4C 89     	ld a,(Activa_recarga_cajas)
 766  8ADB B8           	cp b
 767  8ADC 28 08        	jr z,20F
 768  8ADE
 769  8ADE 21 17 89     	ld hl,Ctrl_1
 770  8AE1 CB E6        	set 4,(hl)
 771  8AE3 C3 C2 89     	jp Main
 772  8AE6
 773  8AE6 21 17 89     20 ld hl,Ctrl_1
 774  8AE9 CB A6        	res 4,(hl)
 775  8AEB
 776  8AEB 3A 48 89     	ld a,(Contador_de_frames)
 777  8AEE
 778  8AEE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 779  8AEE              ;! _ IMPREDECIBLE !!!!
 780  8AEE
 781  8AEE C6 0A        	add 10
 782  8AF0 32 4B 89     	ld (Clock_Entidades_en_curso),a
 783  8AF3
 784  8AF3 C3 6D 89     	jp 4B
 785  8AF6
 786  8AF6 C9           	ret
 787  8AF7
 788  8AF7              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 789  8AF7              ;
 790  8AF7              ;	16/11/23
 791  8AF7
 792  8AF7              Gestiona_Amadeus
 793  8AF7
 794  8AF7              ;! Activa/desactiva impacto con Amadeus.
 795  8AF7
 796  8AF7              ;	ld a,(Impacto)
 797  8AF7              ;	and a
 798  8AF7              ;	jr nz,2F
 799  8AF7
 800  8AF7 CD 8A 8B     	call Mov_Amadeus
 801  8AFA
 802  8AFA 3A 04 89     2 ld a,(Ctrl_0)
 803  8AFD CB 67        	bit 4,a
 804  8AFF 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 805  8B01
 806  8B01 CD 06 8C     	call Guarda_foto_entidad_a_pintar
 807  8B04 CD 53 8E     	call Guarda_datos_de_borrado_Amadeus
 808  8B07
 809  8B07 21 04 89     1 ld hl,Ctrl_0
 810  8B0A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 811  8B0C
 812  8B0C CD 46 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 813  8B0F
 814  8B0F              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 815  8B0F
 816  8B0F CD 0E 8D     	call Calcula_numero_de_disparotes
 817  8B12
 818  8B12 C9           	ret
 819  8B13
 820  8B13              ; --------------------------------------------------------------------------------------------------------------
 821  8B13              ;
 822  8B13              ;	15/12/23
 823  8B13
 824  8B13              Mov_obj
 825  8B13
 826  8B13 3A 15 89     	ld a,(Ctrl_2)
 827  8B16 CB 4F        	bit 1,a
 828  8B18 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 829  8B1A
 830  8B1A              ; Explosión:
 831  8B1A
 832  8B1A 3A 16 89     	ld a,(Frames_explosion)
 833  8B1D A7           	and a
 834  8B1E 20 1D        	jr nz,4F
 835  8B20
 836  8B20              ; Una alimaña menos!!!!!!!!!1
 837  8B20
 838  8B20              ; Se trataba de una Entidad_guía ???
 839  8B20
 840  8B20 3A 15 89     	ld a,(Ctrl_2)
 841  8B23 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 842  8B25 28 05        	jr z,5F
 843  8B27
 844  8B27 21 36 89     	ld hl,Ctrl_3
 845  8B2A CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 846  8B2C
 847  8B2C CD F1 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 848  8B2F 21 21 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 849  8B32 35           	dec (hl)
 850  8B33 21 22 89     	ld hl,Entidades_en_curso
 851  8B36 35           	dec (hl)
 852  8B37 21 20 89     	ld hl,Numero_de_entidades
 853  8B3A 35           	dec (hl)
 854  8B3B 18 4C        	jr 3F
 855  8B3D
 856  8B3D              ; -----
 857  8B3D
 858  8B3D              ;	`Movemos´ la explosión.
 859  8B3D
 860  8B3D 2A E2 88     4 ld hl,(Puntero_DESPLZ_der)
 861  8B40 23           	inc hl
 862  8B41 23           	inc hl
 863  8B42 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 864  8B45 CD 26 8D     	call Extrae_address
 865  8B48 22 D8 88     	ld (Puntero_objeto),hl
 866  8B4B
 867  8B4B 21 16 89     	ld hl,Frames_explosion
 868  8B4E 35           	dec (hl)
 869  8B4F
 870  8B4F 21 04 89     	ld hl,Ctrl_0
 871  8B52 CB E6        	set 4,(hl)
 872  8B54
 873  8B54 18 33        	jr 3F
 874  8B56
 875  8B56              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 876  8B56
 877  8B56 AF           2 xor a
 878  8B57 32 04 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 879  8B5A
 880  8B5A              ; Movemos Entidades malignas.
 881  8B5A              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 882  8B5A
 883  8B5A 3A 15 89     	ld a,(Ctrl_2)
 884  8B5D CB 6F        	bit 5,a
 885  8B5F 20 07        	jr nz,8F
 886  8B61
 887  8B61 21 04 89     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 888  8B64 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 889  8B66 18 09        	jr 7F
 890  8B68
 891  8B68 CD 42 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 892  8B6B
 893  8B6B 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 894  8B6E CB 67        	bit 4,a
 895  8B70 C8           	ret z
 896  8B71
 897  8B71              ; Ha habido desplazamiento de la entidad maligna.
 898  8B71              ; Ha llegado a zona de AMADEUS ???
 899  8B71
 900  8B71 3A DB 88     7 ld a,(Coordenada_y)
 901  8B74 FE 14        	cp $14
 902  8B76 38 08        	jr c,1F
 903  8B78
 904  8B78              ; ---------
 905  8B78
 906  8B78              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 907  8B78              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 908  8B78
 909  8B78 F3           	di
 910  8B79 CD 6B 90     	call Genera_coordenadas_X
 911  8B7C CD A7 90     	call Compara_coordenadas_X
 912  8B7F FB           	ei
 913  8B80
 914  8B80              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 915  8B80
 916  8B80              ; ---------
 917  8B80
 918  8B80 CD 76 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 919  8B83 CD 73 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 920  8B86 CD CC 8C     	call Limpia_Variables_de_borrado
 921  8B89
 922  8B89 C9           3 ret
 923  8B8A
 924  8B8A              ; --------------------------------------------------------------------------------------------------------------
 925  8B8A              ;
 926  8B8A              ;	29/1/23
 927  8B8A
 928  8B8A              Mov_Amadeus
 929  8B8A
 930  8B8A CD 13 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 931  8B8D
 932  8B8D 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 933  8B90 CB 67        	bit 4,a
 934  8B92 C8           	ret z
 935  8B93
 936  8B93              ; ---------
 937  8B93
 938  8B93 CD 76 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 939  8B96 CD 63 8E     	call Repone_datos_de_borrado_Amadeus
 940  8B99 CD CC 8C     	call Limpia_Variables_de_borrado
 941  8B9C
 942  8B9C C9           	ret
 943  8B9D
 944  8B9D              ; -----------------------------------------------------------------------------------
 945  8B9D              ;
 946  8B9D              ;	12/12/23
 947  8B9D              ;
 948  8B9D              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 949  8B9D
 950  8B9D              Inicia_entidad
 951  8B9D
 952  8B9D CD D8 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 953  8BA0 CD 2C 8D     	call Inicia_Puntero_objeto
 954  8BA3 CD C3 99     	call Recompone_posicion_inicio
 955  8BA6 CD A2 93     	call Draw
 956  8BA9 CD B4 8B     	call Guarda_movimiento_masticado
 957  8BAC CD 16 71     	call Guarda_foto_registros
 958  8BAF F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 959  8BB0              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 960  8BB0              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 961  8BB0 CD 74 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 962  8BB3 C9           	ret
 963  8BB4
 964  8BB4
 965  8BB4              ; -----------------------------------------------------------------------------------
 966  8BB4              ;
 967  8BB4              ;	21/12/23
 968  8BB4              ;
 969  8BB4              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados_Entidad_1} si se trata de una "entidad_guía".
 970  8BB4              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 971  8BB4
 972  8BB4 3A 15 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 973  8BB7 CB 6F        	bit 5,a
 974  8BB9 C8           	ret z 												; Salimos si NO se trata de una entidad guía.
 975  8BBA
 976  8BBA ED 73 28 89  	ld (Stack),sp
 977  8BBE ED 7B 00 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)		; Guardamos el movimiento masticado en el almacén.
 978  8BC2
 979  8BC2 E5           	push hl
 980  8BC3 DD E5            push ix
 981  8BC5 FD E5            push iy
 982  8BC7
 983  8BC7 ED 7B 28 89      ld sp,(Stack)
 984  8BCB
 985  8BCB E5               push hl
 986  8BCC
 987  8BCC 2A 02 89        	ld hl,(Contador_de_mov_masticados)					; Incrementa en una unidad el (Contador_de_mov_masticados).
 988  8BCF 23           	inc hl
 989  8BD0 22 02 89     	ld (Contador_de_mov_masticados),hl
 990  8BD3
 991  8BD3 E1           	pop hl
 992  8BD4
 993  8BD4 CD EF 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados ; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 994  8BD7              ;														; _ el (Contador_de_mov_masticados).
 995  8BD7 C9               ret
 996  8BD8
 997  8BD8              ; --------------------------------------------------------------------------------------------------------------
 998  8BD8              ;
 999  8BD8              ;	12/12/23
1000  8BD8              ;
1001  8BD8
1002  8BD8              Inicia_entidad_guia
1003  8BD8
1004  8BD8              ; Existe "Entidad_guía" ???
1005  8BD8
1006  8BD8 3A 36 89     	ld a,(Ctrl_3)
1007  8BDB CB 4F        	bit 1,a
1008  8BDD C0           	ret nz
1009  8BDE
1010  8BDE              ; Inicia Entidad_guía:
1011  8BDE
1012  8BDE 21 15 89     	ld hl,Ctrl_2
1013  8BE1 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1014  8BE3 21 36 89     	ld hl,Ctrl_3
1015  8BE6 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1016  8BE8
1017  8BE8 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1+6
1018  8BEB 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1019  8BEE
1020  8BEE C9           	ret
1021  8BEF
1022  8BEF              ; --------------------------------------------------------------------------------------------------------------
1023  8BEF              ;
1024  8BEF              ;	21/12/23
1025  8BEF              ;
1026  8BEF
1027  8BEF              Actualiza_Puntero_de_almacen_de_mov_masticados
1028  8BEF
1029  8BEF              ;	Entidad_guía ???
1030  8BEF
1031  8BEF 3A 15 89     	ld a,(Ctrl_2)
1032  8BF2 CB 6F        	bit 5,a
1033  8BF4 C8           	ret z												; Salimos si NO se trata de una entidad guía.
1034  8BF5
1035  8BF5 E5           	push hl
1036  8BF6 C5           	push bc
1037  8BF7
1038  8BF7 2A 00 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1039  8BFA 01 06 00     	ld bc,6
1040  8BFD A7           	and a
1041  8BFE ED 4A        	adc hl,bc
1042  8C00 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1043  8C03
1044  8C03 C1           	pop bc
1045  8C04 E1           	pop hl
1046  8C05
1047  8C05 C9           	ret
1048  8C06
1049  8C06              ; --------------------------------------------------------------------------------------------------------------
1050  8C06              ;
1051  8C06              ;	31/08/23
1052  8C06              ;
1053  8C06              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1054  8C06              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1055  8C06
1056  8C06              Guarda_foto_entidad_a_pintar
1057  8C06
1058  8C06              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
1059  8C06
1060  8C06 3A 04 89     	ld a,(Ctrl_0)
1061  8C09 CB 77        	bit 6,a
1062  8C0B 28 07        	jr z,5F
1063  8C0D
1064  8C0D              ; Guarda la foto de Amadeus.
1065  8C0D
1066  8C0D CD A2 93     	call Draw
1067  8C10 CD 16 71     	call Guarda_foto_registros
1068  8C13
1069  8C13 C9           	ret
1070  8C14
1071  8C14              ; ENTIDADES!
1072  8C14              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1073  8C14
1074  8C14 3A 36 89     5 ld a,(Ctrl_3)
1075  8C17 CB 5F        	bit 3,a
1076  8C19 28 04        	jr z,1F
1077  8C1B
1078  8C1B              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1079  8C1B
1080  8C1B CD 40 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1081  8C1E C9           	ret
1082  8C1F
1083  8C1F              ; Entidad_guía o fantasma ???
1084  8C1F
1085  8C1F 3A 15 89     1 ld a,(Ctrl_2)
1086  8C22 CB 6F        	bit 5,a
1087  8C24 20 02        	jr nz,2F
1088  8C26
1089  8C26              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1090  8C26
1091  8C26 18 F3        	jr 4B
1092  8C28
1093  8C28              ; ENTIDAD_GUÍA:
1094  8C28              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1095  8C28              ; _guardando "movimientos_masticados".
1096  8C28
1097  8C28 3A 36 89     2 ld a,(Ctrl_3)
1098  8C2B CB 57        	bit 2,a
1099  8C2D 28 07        	jr z,3F
1100  8C2F
1101  8C2F              ; Hemos completado todos los movimientos masticados.
1102  8C2F
1103  8C2F CB 97        	res 2,a
1104  8C31 CB DF        	set 3,a
1105  8C33 32 36 89     	ld (Ctrl_3),a
1106  8C36
1107  8C36 CD A2 93     3 call Draw
1108  8C39 CD B4 8B     	call Guarda_movimiento_masticado
1109  8C3C CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1110  8C3F
1111  8C3F C9           	ret
1112  8C40
1113  8C40              ; --------------------------------------------------------------------------------------------------------------
1114  8C40              ;
1115  8C40              ;	21/12/23
1116  8C40              ;
1117  8C40              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1118  8C40              ;
1119  8C40              ;		IY contiene (Puntero_objeto).
1120  8C40              ;		IX contiene el puntero de impresión.
1121  8C40              ;		HL contiene la dirección de la rutina de impresión.
1122  8C40              ;
1123  8C40              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1124  8C40              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1125  8C40              ;	Decrementa el (Contador_de_mov_masticados)
1126  8C40              ;
1127  8C40              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1128  8C40              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1129  8C40              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1130  8C40
1131  8C40
1132  8C40 ED 73 28 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1133  8C44 ED 7B 00 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1134  8C48
1135  8C48 FD E1        	pop iy
1136  8C4A DD E1        	pop ix
1137  8C4C E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1138  8C4D
1139  8C4D ED 73 00 89  	ld (Puntero_de_almacen_de_mov_masticados),sp
1140  8C51 ED 7B 28 89  	ld sp,(Stack)
1141  8C55
1142  8C55 CD 16 71     	call Guarda_foto_registros
1143  8C58
1144  8C58 E5           	push hl
1145  8C59
1146  8C59 2A 02 89     	ld hl,(Contador_de_mov_masticados)
1147  8C5C 2B           	dec hl
1148  8C5D 22 02 89     	ld (Contador_de_mov_masticados),hl 							; Decrementamos (Contador_de_mov_masticados). Ha llegado a "0" ?.
1149  8C60
1150  8C60              ; "0" ??
1151  8C60
1152  8C60 24           	inc h
1153  8C61 25           	dec h
1154  8C62 20 10        	jr nz,1F
1155  8C64 2C           	inc l
1156  8C65 2D           	dec l
1157  8C66 20 0C        	jr nz,1F
1158  8C68
1159  8C68              ; El (Contador_de_mov_masticados) a llegado a "0". Situamos el (Puntero_de_almacen_de_mov_masticados) al principio del almacén.
1160  8C68              ; Reinicializamos (Contador_de_mov_masticados).
1161  8C68
1162  8C68 21 D0 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
1163  8C6B 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1164  8C6E
1165  8C6E 21 20 03     	ld hl,$0320
1166  8C71 22 02 89     	ld (Contador_de_mov_masticados),hl
1167  8C74
1168  8C74              ;	di
1169  8C74              ;	jr $
1170  8C74              ;	ei
1171  8C74
1172  8C74 E1           1 pop hl
1173  8C75
1174  8C75 C9           	ret
1175  8C76
1176  8C76              ; --------------------------------------------------------------------------------------------------------------
1177  8C76              ;
1178  8C76              ;	19/9/23
1179  8C76
1180  8C76 21 D4 88     Prepara_var_pintado ld hl,Filas
1181  8C79 11 F4 88     	ld de,Variables_de_pintado
1182  8C7C 01 08 00     	ld bc,8
1183  8C7F ED B0        	ldir
1184  8C81 C9           	ret
1185  8C82
1186  8C82              ; --------------------------------------------------------------------------------------------------------------
1187  8C82
1188  8C82 21 F4 88     Repone_pintar ld hl,Variables_de_pintado
1189  8C85 11 D4 88     	ld de,Filas
1190  8C88 01 08 00     	ld bc,8
1191  8C8B ED B0        	ldir
1192  8C8D C9           	ret
1193  8C8E
1194  8C8E              ; *************************************************************************************************************************************************************
1195  8C8E              ;
1196  8C8E              ; 8/1/23
1197  8C8E              ;
1198  8C8E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1199  8C8E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1200  8C8E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1201  8C8E
1202  8C8E              ; Destruye HL y DE !!!!!
1203  8C8E
1204  8C8E              Inicia_punteros_de_cajas
1205  8C8E
1206  8C8E 21 6C 85     	ld hl,Indice_de_cajas
1207  8C91 CD 26 8D         call Extrae_address
1208  8C94 22 1A 89         ld (Puntero_store_caja),hl
1209  8C97 21 6E 85     	ld hl,Indice_de_cajas+2
1210  8C9A 22 1E 89     	ld (Indice_restore_caja),hl
1211  8C9D CD 26 8D     	call Extrae_address
1212  8CA0 22 1C 89     	ld (Puntero_restore_caja),hl
1213  8CA3 C9               ret
1214  8CA4
1215  8CA4              ; *************************************************************************************************************************************************************
1216  8CA4              ;
1217  8CA4              ; 8/1/23
1218  8CA4              ;
1219  8CA4              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1220  8CA4
1221  8CA4 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1222  8CA7 22 38 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1223  8CAA C9           	ret
1224  8CAB 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1225  8CAE 22 3A 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1226  8CB1 C9           	ret
1227  8CB2
1228  8CB2              ; -------------------------------------------------------------------------------------------------------------
1229  8CB2              ;
1230  8CB2              ; 21/9/23
1231  8CB2              ;
1232  8CB2
1233  8CB2              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1234  8CB2
1235  8CB2              Limpia_album_Amadeus
1236  8CB2
1237  8CB2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1238  8CB5 7E           	ld a,(hl)
1239  8CB6 A7           	and a
1240  8CB7 C8           	ret z
1241  8CB8
1242  8CB8 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1243  8CBB 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1244  8CBE 01 0B 00     	ld bc,11
1245  8CC1 AF           	xor a
1246  8CC2 77           	ld (hl),a
1247  8CC3 ED B0        	ldir
1248  8CC5
1249  8CC5 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1250  8CC8 22 34 89     	ld (End_Snapshot_Amadeus),hl
1251  8CCB
1252  8CCB C9           	ret
1253  8CCC
1254  8CCC 21 EE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1255  8CCF 11 EF 88     	ld de,Variables_de_borrado+1
1256  8CD2 01 05 00     	ld bc,5
1257  8CD5 AF           	xor a
1258  8CD6 77           	ld (hl),a
1259  8CD7 ED B0        	ldir
1260  8CD9 C9           	ret
1261  8CDA
1262  8CDA              ; -------------------------------------------------------------------------------------------------------------
1263  8CDA              ;
1264  8CDA              ; 8/9/23
1265  8CDA              ;
1266  8CDA
1267  8CDA              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1268  8CDA              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1269  8CDA
1270  8CDA              Calcula_numero_de_malotes
1271  8CDA
1272  8CDA 21 00 70     	ld hl,Album_de_fotos
1273  8CDD EB           	ex de,hl
1274  8CDE 2A 2E 89     	ld hl,(Stack_snapshot)
1275  8CE1
1276  8CE1 06 00        	ld b,0
1277  8CE3 7D           	ld a,l
1278  8CE4 93           	sub e
1279  8CE5 28 07        	jr z,1F
1280  8CE7
1281  8CE7              ; Nº de malotes no es "0".
1282  8CE7
1283  8CE7 D6 06        2 sub 6
1284  8CE9 04           	inc b
1285  8CEA A7           	and a
1286  8CEB 20 FA        	jr nz,2B
1287  8CED 78           	ld a,b
1288  8CEE
1289  8CEE 32 23 89     1 ld (Numero_de_malotes),a
1290  8CF1 C9           	ret
1291  8CF2
1292  8CF2              ; -------------------------------------------------------------------------------------------------------------
1293  8CF2              ;
1294  8CF2              ; 8/9/23
1295  8CF2              ;
1296  8CF2
1297  8CF2              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1298  8CF2              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1299  8CF2
1300  8CF2              Calcula_malotes_Amadeus
1301  8CF2
1302  8CF2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1303  8CF5 EB           	ex de,hl
1304  8CF6 2A 34 89     	ld hl,(End_Snapshot_Amadeus)
1305  8CF9
1306  8CF9 7C           	ld a,h
1307  8CFA A7           	and a
1308  8CFB 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1309  8CFD
1310  8CFD 06 00        	ld b,0
1311  8CFF 7D           	ld a,l
1312  8D00 93           	sub e
1313  8D01 28 07        	jr z,1F
1314  8D03
1315  8D03              ; Nº de malotes no es "0".
1316  8D03
1317  8D03 D6 06        2 sub 6
1318  8D05 04           	inc b
1319  8D06 A7           	and a
1320  8D07 20 FA        	jr nz,2B
1321  8D09 78           	ld a,b
1322  8D0A
1323  8D0A 32 23 89     1 ld (Numero_de_malotes),a
1324  8D0D C9           	ret
1325  8D0E
1326  8D0E              ; -------------------------------------------------------------------------------------------------------------
1327  8D0E              ;
1328  8D0E              ; 28/2/23
1329  8D0E              ;
1330  8D0E
1331  8D0E              Calcula_numero_de_disparotes
1332  8D0E
1333  8D0E 21 56 70     	ld hl,Album_de_fotos_disparos
1334  8D11 EB           	ex de,hl
1335  8D12 2A 32 89     	ld hl,(End_Snapshot_disparos)
1336  8D15
1337  8D15 06 00        	ld b,0
1338  8D17 7D           	ld a,l
1339  8D18 93           	sub e
1340  8D19 28 07        	jr z,1F
1341  8D1B
1342  8D1B              ; Nº de malotes no es "0".
1343  8D1B
1344  8D1B D6 06        2 sub 6
1345  8D1D 04           	inc b
1346  8D1E A7           	and a
1347  8D1F 20 FA        	jr nz,2B
1348  8D21 78           	ld a,b
1349  8D22
1350  8D22 32 37 89     1 ld (Numero_de_disparotes),a
1351  8D25 C9           	ret
1352  8D26
1353  8D26              ; *************************************************************************************************************************************************************
1354  8D26              ;
1355  8D26              ; 20/10/22
1356  8D26              ;
1357  8D26              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1358  8D26              ;
1359  8D26              ; Destruye el puntero y DE !!!!!
1360  8D26
1361  8D26 5E           Extrae_address ld e,(hl)
1362  8D27 23           	inc hl
1363  8D28 56           	ld d,(hl)
1364  8D29 2B           	dec hl
1365  8D2A EB           	ex de,hl
1366  8D2B C9           	ret
1367  8D2C
1368  8D2C              ; *************************************************************************************************************************************************************
1369  8D2C              ;
1370  8D2C              ;	7/2/23
1371  8D2C              ;
1372  8D2C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1373  8D2C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1374  8D2C              ;
1375  8D2C              ;   Destruye HL y BC !!!!!,
1376  8D2C              ;
1377  8D2C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1378  8D2C              ;					"0" ..... Izquierda.
1379  8D2C
1380  8D2C              Inicia_Puntero_objeto
1381  8D2C
1382  8D2C 3A E8 88     	ld a,(Cuad_objeto)
1383  8D2F E6 01        	and 1
1384  8D31 F5           	push af
1385  8D32 CC 50 8D     	call z,Inicia_puntero_objeto_izq
1386  8D35 F1           	pop af
1387  8D36 28 2B        	jr z,1F
1388  8D38 CD 3D 8D     	call Inicia_puntero_objeto_der
1389  8D3B 18 26        	jr 1F
1390  8D3D
1391  8D3D              ; Arrancamos desde la parte izquierda de la pantalla.
1392  8D3D              ; Iniciamos (Indice_Sprite_der).
1393  8D3D
1394  8D3D 2A DE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1395  8D40 22 E2 88     	ld (Puntero_DESPLZ_der),hl
1396  8D43 CD 26 8D     	call Extrae_address
1397  8D46 22 D8 88     	ld (Puntero_objeto),hl
1398  8D49
1399  8D49 2A E0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1400  8D4C 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
1401  8D4F C9           	ret
1402  8D50
1403  8D50              ; Arrancamos desde la parte derecha de la pantalla.
1404  8D50              ; Iniciamos (Indice_Sprite_izq).
1405  8D50
1406  8D50 2A E0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1407  8D53 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
1408  8D56 CD 26 8D     	call Extrae_address
1409  8D59 22 D8 88     	ld (Puntero_objeto),hl
1410  8D5C
1411  8D5C 2A DE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1412  8D5F 22 E2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1413  8D62 C9           	ret
1414  8D63
1415  8D63              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1416  8D63
1417  8D63 21 40 83     1 ld hl,Amadeus
1418  8D66 ED 4B D8 88  	ld bc,(Puntero_objeto)
1419  8D6A B7 ED 42     	sub hl,bc
1420  8D6D C0           	ret nz
1421  8D6E 21 04 89     	ld hl,Ctrl_0
1422  8D71 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1423  8D73 C9           	ret 												; _de nuestra nave en los extremos.
1424  8D74
1425  8D74              ; *************************************************************************************************************************************************************
1426  8D74              ;
1427  8D74              ;	21/12/23
1428  8D74              ;
1429  8D74              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1430  8D74              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1431  8D74
1432  8D74              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1433  8D74              ;	_de la 2ª y 3ª entidad respectivamente.
1434  8D74
1435  8D74              Store_Restore_cajas
1436  8D74
1437  8D74 E5           	push hl
1438  8D75 D5           	push de
1439  8D76 C5            	push bc
1440  8D77
1441  8D77              ;	STORE !!!!!
1442  8D77              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1443  8D77
1444  8D77 21 D4 88     	ld hl,Filas
1445  8D7A ED 5B 1A 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1446  8D7E 01 43 00     	ld bc,67
1447  8D81 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1448  8D83
1449  8D83              ; 	Entidad_sospechosa. 20/4/23
1450  8D83
1451  8D83 3A ED 88     	ld a,(Impacto)
1452  8D86 A7           	and a
1453  8D87 28 0C        	jr z,1F
1454  8D89
1455  8D89 2A 1A 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1456  8D8C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1457  8D8F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1458  8D90 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1459  8D92 22 3D 89     	ld (Entidad_sospechosa_de_colision),hl
1460  8D95
1461  8D95              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1462  8D95
1463  8D95 2A 1C 89     1 ld hl,(Puntero_restore_caja)
1464  8D98 7E           	ld a,(hl)
1465  8D99 A7           	and a
1466  8D9A F5           	push af
1467  8D9B 28 08        	jr z,2F
1468  8D9D
1469  8D9D 11 D4 88     	ld de,Filas
1470  8DA0 01 43 00     	ld bc,67
1471  8DA3 ED B0        	ldir
1472  8DA5
1473  8DA5 CD C1 8D     2 call Incrementa_punteros_de_cajas
1474  8DA8
1475  8DA8 F1           	pop af
1476  8DA9 28 EA        	jr z,1B
1477  8DAB
1478  8DAB C1           	pop bc
1479  8DAC D1           	pop de
1480  8DAD E1           	pop hl
1481  8DAE
1482  8DAE C9           	ret
1483  8DAF
1484  8DAF              ; **************************************************************************************************
1485  8DAF              ;
1486  8DAF              ;	21/12/23
1487  8DAF              ;
1488  8DAF              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1489  8DAF
1490  8DAF E5           Restore_entidad push hl
1491  8DB0 D5           	push de
1492  8DB1 C5            	push bc
1493  8DB2
1494  8DB2 2A 1A 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1495  8DB5 11 D4 88     	ld de,Filas
1496  8DB8 01 43 00     	ld bc,67
1497  8DBB ED B0        	ldir
1498  8DBD
1499  8DBD C1           	pop bc
1500  8DBE D1           	pop de
1501  8DBF E1           	pop hl
1502  8DC0 C9           	ret
1503  8DC1
1504  8DC1              ; **************************************************************************************************
1505  8DC1              ;
1506  8DC1              ;	08/05/23
1507  8DC1              ;
1508  8DC1              ;	Incrementamos los dos punteros de entidades. (+1).
1509  8DC1
1510  8DC1              Incrementa_punteros_de_cajas
1511  8DC1
1512  8DC1 2A 1C 89     	ld hl,(Puntero_restore_caja)
1513  8DC4 22 1A 89     	ld (Puntero_store_caja),hl
1514  8DC7 2A 1E 89     	ld hl,(Indice_restore_caja)
1515  8DCA 23           	inc hl
1516  8DCB 23           	inc hl
1517  8DCC 22 1E 89     	ld (Indice_restore_caja),hl
1518  8DCF CD 26 8D         call Extrae_address
1519  8DD2 22 1C 89         ld (Puntero_restore_caja),hl
1520  8DD5 C9               ret
1521  8DD6
1522  8DD6              ; **************************************************************************************************
1523  8DD6              ;
1524  8DD6              ;	21/12/23
1525  8DD6              ;
1526  8DD6              ;	Restore_Amadeus
1527  8DD6              ;
1528  8DD6              ;	Cargamos en DRAW los parámetros de Amadeus.
1529  8DD6              ;
1530  8DD6
1531  8DD6 E5           Restore_Amadeus	push hl
1532  8DD7 D5           	push de
1533  8DD8 C5            	push bc
1534  8DD9 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1535  8DDC 11 D4 88     	ld de,Filas
1536  8DDF 01 43 00     	ld bc,67
1537  8DE2 ED B0        	ldir
1538  8DE4 C1           	pop bc
1539  8DE5 D1           	pop de
1540  8DE6 E1           	pop hl
1541  8DE7 C9           	ret
1542  8DE8
1543  8DE8              ; *************************************************************************************************************************************************************
1544  8DE8              ;
1545  8DE8              ;	21/12/23
1546  8DE8              ;
1547  8DE8              ;	Store_Amadeus
1548  8DE8              ;
1549  8DE8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1550  8DE8              ;
1551  8DE8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1552  8DE8              ;
1553  8DE8              ;	DESTRUYE: HL y BC y DE.
1554  8DE8
1555  8DE8 21 D4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1556  8DEB 01 43 00     	ld bc,67
1557  8DEE ED B0        	ldir
1558  8DF0 C9           	ret
1559  8DF1
1560  8DF1              ; -----------------------------------------------------------
1561  8DF1              ;
1562  8DF1              ;	21/12/23
1563  8DF1              ;
1564  8DF1              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1565  8DF1              ;
1566  8DF1              ;	Destruye: HL,BC,DE,A
1567  8DF1
1568  8DF1 21 D4 88     Borra_datos_entidad ld hl,Filas
1569  8DF4 01 42 00     	ld bc,66
1570  8DF7 AF           	xor a
1571  8DF8 77           	ld (hl),a
1572  8DF9 11 D5 88     	ld de,Filas+1
1573  8DFC ED B0        	ldir
1574  8DFE C9           	ret
1575  8DFF
1576  8DFF              ; -----------------------------------------------------------
1577  8DFF
1578  8DFF              ; Teclado.
1579  8DFF
1580  8DFF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1581  8E01 DB FE        	in a,($fe)
1582  8E03 E6 01        	and $01
1583  8E05 28 02        	jr z,1f
1584  8E07 18 F6        	jr Pulsa_ENTER
1585  8E09 C9           1 ret
1586  8E0A
1587  8E0A              ; **************************************************************************************************
1588  8E0A              ;
1589  8E0A              ; Temporización.
1590  8E0A
1591  8E0A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1592  8E0A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1593  8E0A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1594  8E0A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1595  8E0A
1596  8E0A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1597  8E0A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1598  8E0A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1599  8E0A
1600  8E0A              ; A partir de $4f61 no hace falta DELAY.
1601  8E0A
1602  8E0A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1603  8E0A
1604  8E0A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1605  8E0D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1606  8E0E 78           	LD A,B
1607  8E0F A7           	AND A
1608  8E10 20 FB        	JR NZ,wait
1609  8E12 C9           	RET
1610  8E13
1611  8E13              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1612  8E13              ;
1613  8E13              ;	5/3/23
1614  8E13              ;
1615  8E13              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1616  8E13
1617  8E13              Movimiento_Amadeus
1618  8E13
1619  8E13              ; Disparo.
1620  8E13
1621  8E13 3A 4D 89     	ld a,(Disparo_Amadeus)
1622  8E16 A7           	and a
1623  8E17 20 02        	jr nz,1F
1624  8E19 18 15        	jr 2F
1625  8E1B
1626  8E1B 3E F7        1 ld a,$f7													; "5" para disparar.
1627  8E1D DB FE        	in a,($fe)
1628  8E1F E6 10        	and $10
1629  8E21
1630  8E21 F5           	push af
1631  8E22 CC CE 8E     	call z,Genera_disparo
1632  8E25 F1           	pop af
1633  8E26 20 08        	jr nz,2F
1634  8E28
1635  8E28 3A 4D 89     	ld a,(Disparo_Amadeus)
1636  8E2B EE 01        	xor 1
1637  8E2D 32 4D 89     	ld (Disparo_Amadeus),a
1638  8E30 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1639  8E32 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1640  8E34 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1641  8E36 CC A1 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1642  8E39
1643  8E39 3E F7        	ld a,$f7
1644  8E3B DB FE        	in a,($fe)
1645  8E3D E6 01        	and $01
1646  8E3F C8           	ret z
1647  8E40
1648  8E40 3E F7        	ld a,$f7
1649  8E42 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1650  8E44 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1651  8E46 CC 83 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1652  8E49 C9           	ret
1653  8E4A
1654  8E4A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1655  8E4A              ;
1656  8E4A              ;	Rutina provisional para que los malotes cagen balas.
1657  8E4A
1658  8E4A              Detecta_disparo_entidad
1659  8E4A
1660  8E4A 3A 50 89     	ld a,(Disparo_entidad)
1661  8E4D A7           	and a
1662  8E4E C8           	ret z
1663  8E4F
1664  8E4F              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1665  8E4F
1666  8E4F              ;	ld a,$7f				; Detecta SPACE.
1667  8E4F              ;	in a,($fe)
1668  8E4F              ;	and 1
1669  8E4F              ;	ret nz
1670  8E4F
1671  8E4F CD CE 8E     	call Genera_disparo
1672  8E52 C9           	ret
1673  8E53
1674  8E53              ; ----------------------------------------------------------------------
1675  8E53              ;
1676  8E53              ;	8/9/23
1677  8E53
1678  8E53 2A 34 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1679  8E56 2B            	dec hl
1680  8E57 7E           	ld a,(hl)
1681  8E58 A7           	and a
1682  8E59 C8           	ret z										; Salimos si es álbum está vacío.
1683  8E5A
1684  8E5A 11 F3 88     	ld de,Variables_de_borrado+5
1685  8E5D 01 06 00     	ld bc,6
1686  8E60 ED B8        	lddr
1687  8E62 C9           	ret
1688  8E63
1689  8E63              ; ----------------------------------------------------------------------
1690  8E63              ;
1691  8E63              ;	9/9/23
1692  8E63
1693  8E63              Repone_datos_de_borrado_Amadeus
1694  8E63
1695  8E63 21 EE 88     	ld hl,Variables_de_borrado
1696  8E66 11 AC 70     	ld de,Album_de_fotos_Amadeus
1697  8E69 01 06 00     	ld bc,6
1698  8E6C ED B0        	ldir
1699  8E6E
1700  8E6E EB           	ex de,hl
1701  8E6F 22 34 89     	ld (End_Snapshot_Amadeus),hl
1702  8E72
1703  8E72 C9           	ret
1704  8E73
1705  8E73              ; ----------------------------------------------------------------------
1706  8E73              ;
1707  8E73              ;	27/10/23
1708  8E73              ;
1709  8E73
1710  8E73              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1711  8E73              ;	_ Album_de_fotos correspondiente.
1712  8E73
1713  8E73              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1714  8E73              ;	_ durante el proceso de escritura.
1715  8E73
1716  8E73              Repone_datos_de_borrado
1717  8E73
1718  8E73 F3           	di
1719  8E74 ED 5B 2E 89  	ld de,(Stack_snapshot)
1720  8E78 21 EE 88     	ld hl,Variables_de_borrado
1721  8E7B 01 06 00     	ld bc,6
1722  8E7E ED B0        	ldir
1723  8E80 FB           	ei
1724  8E81
1725  8E81 EB           	ex de,hl
1726  8E82 22 2E 89     	ld (Stack_snapshot),hl
1727  8E85
1728  8E85 C9           	ret
1729  8E86
1730  8E86              ; --------------------------------------------------------------------------------------
1731  8E86
1732  8E86              Pinta_Amadeus
1733  8E86
1734  8E86 3E 06        	ld a,6
1735  8E88 D3 FE            out ($fe),a										; Amarillo
1736  8E8A
1737  8E8A CD F2 8C        	call Calcula_malotes_Amadeus
1738  8E8D CD 32 97     	call Extrae_foto_Amadeus
1739  8E90 CD B2 8C     	call Limpia_album_Amadeus
1740  8E93
1741  8E93 C9           	ret
1742  8E94
1743  8E94              Pinta_entidades
1744  8E94
1745  8E94              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1746  8E94
1747  8E94 3A 36 89     	ld a,(Ctrl_3)
1748  8E97 CB 47        	bit 0,a
1749  8E99 C8           	ret z
1750  8E9A
1751  8E9A CD DA 8C     	call Calcula_numero_de_malotes
1752  8E9D CD B0 96     	call Extrae_foto_entidades
1753  8EA0 CD 77 71     	call Limpia_y_reinicia_Stack_Snapshot
1754  8EA3
1755  8EA3 C9           	ret
1756  8EA4
1757  8EA4              ; -----------------------------------------------------------------------------------
1758  8EA4              ;
1759  8EA4              ;	10/12/23
1760  8EA4              ;
1761  8EA4              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1762  8EA4
1763  8EA4              Actualiza_relojes
1764  8EA4
1765  8EA4 3A 36 89     	ld a,(Ctrl_3)
1766  8EA7 CB 47        	bit 0,a
1767  8EA9 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1768  8EAA
1769  8EAA 21 48 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1770  8EAD 34           	inc (hl)
1771  8EAE
1772  8EAE 34           	inc (hl)
1773  8EAF 35           	dec (hl)
1774  8EB0 C0           	ret nz
1775  8EB1
1776  8EB1 21 49 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1777  8EB4 34           	inc (hl)
1778  8EB5 C9           	ret
1779  8EB6
1780  8EB6              ; ---------------------------------------------------------------
1781  8EB6              ;
1782  8EB6              ;	21/12/23
1783  8EB6
1784  8EB6              Guarda_parametros_DRAW
1785  8EB6
1786  8EB6 21 D4 88     	ld hl,Filas
1787  8EB9 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1788  8EBC 01 43 00     	ld bc,67
1789  8EBF ED B0        	ldir
1790  8EC1 C9           	ret
1791  8EC2
1792  8EC2              Recupera_parametros_DRAW
1793  8EC2
1794  8EC2 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1795  8EC5 11 D4 88     	ld de,Filas
1796  8EC8 01 43 00     	ld bc,67
1797  8ECB ED B0        	ldir
1798  8ECD C9           	ret
1799  8ECE
1800  8ECE              ; ---------------------------------------------------------------
1801  8ECE
1802  8ECE              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8ECE              ; ******************************************************************************************************************************************************************************************
   2+ 8ECE              ;
   3+ 8ECE              ;   21/07/23
   4+ 8ECE              ;
   5+ 8ECE              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8ECE              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8ECE              ;
   8+ 8ECE              ;
   9+ 8ECE              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8ECE              ;
  11+ 8ECE              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8ECE              ;               _ hacen las entidades hacia abajo.
  13+ 8ECE              ;
  14+ 8ECE              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8ECE              ;
  16+ 8ECE              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8ECE              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8ECE              ;
  19+ 8ECE              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8ECE              ;           _ la bala.
  21+ 8ECE              ;
  22+ 8ECE              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8ECE              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8ECE              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8ECE              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8ECE              ;           _ en el momento de generarse la bala)).
  27+ 8ECE
  28+ 8ECE              Genera_disparo
  29+ 8ECE
  30+ 8ECE              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8ECE              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8ECE              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8ECE              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8ECE              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8ECE              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8ECE              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8ECE
  38+ 8ECE              ; Exclusiones:
  39+ 8ECE
  40+ 8ECE 3A EC 88         ld a,(Vel_down)
  41+ 8ED1 47               ld b,a
  42+ 8ED2 3A 47 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8ED5 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8ED6 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8ED7 3A 11 89         ld a,(Columnas)
  46+ 8EDA 47               ld b,a
  47+ 8EDB 3A D5 88         ld a,(Columns)
  48+ 8EDE B8               cp b
  49+ 8EDF C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EE0
  51+ 8EE0              ; ----- ----- -----
  52+ 8EE0
  53+ 8EE0 3A 04 89         ld a,(Ctrl_0)
  54+ 8EE3 CB 77            bit 6,a
  55+ 8EE5 20 06            jr nz,14F
  56+ 8EE7
  57+ 8EE7 3A DB 88         ld a,(Coordenada_y)
  58+ 8EEA FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EEC D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EED
  61+ 8EED 21 00 80     14 ld hl,Indice_disparo
  62+ 8EF0 3A DC 88         ld a,(CTRL_DESPLZ)
  63+ 8EF3 4F               ld c,a
  64+ 8EF4 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EF6              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EF6              ;                                            ""        ""       "f9", B="1"
  67+ 8EF6              ;                                            ""        ""       "fb", B="2"
  68+ 8EF6              ;                                            ""        ""       "fb", B="3"
  69+ 8EF6 A7               and a
  70+ 8EF7 28 10            jr z,1F
  71+ 8EF9 E6 01            and 1
  72+ 8EFB C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EFC
  74+ 8EFC 79               ld a,c
  75+ 8EFD 16 F9            ld d,$f9
  76+ 8EFF 23           2 inc hl
  77+ 8F00 23               inc hl
  78+ 8F01 04               inc b
  79+ 8F02 BA               cp d
  80+ 8F03 28 04            jr z,1F
  81+ 8F05 14               inc d
  82+ 8F06 14               inc d
  83+ 8F07 18 F6            jr 2B
  84+ 8F09
  85+ 8F09 CD 26 8D     1 call Extrae_address
  86+ 8F0C E5               push hl
  87+ 8F0D FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F0F DD 21 78 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F13
  90+ 8F13              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F13              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F13
  93+ 8F13 3A 04 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F16 CB 77            bit 6,a
  95+ 8F18 20 04            jr nz,19F
  96+ 8F1A
  97+ 8F1A AF               xor a
  98+ 8F1B 32 50 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F1E
 100+ 8F1E 3A E8 88     19 ld a,(Cuad_objeto)
 101+ 8F21 FE 02            cp 2
 102+ 8F23 38 66            jr c,3F
 103+ 8F25 28 64            jr z,3F
 104+ 8F27
 105+ 8F27              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F27
 107+ 8F27 E6 01            and 1
 108+ 8F29 28 30            jr z,4F
 109+ 8F2B
 110+ 8F2B              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F2B              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F2B              ;
 113+ 8F2B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F2B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F2B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F2B
 117+ 8F2B 2A D6 88     	ld hl,(Posicion_actual)
 118+ 8F2E
 119+ 8F2E              ;   Amadeus o entidad ???.
 120+ 8F2E
 121+ 8F2E 3A 04 89         ld a,(Ctrl_0)
 122+ 8F31 CB 77            bit 6,a
 123+ 8F33 28 0A            jr z,8F
 124+ 8F35
 125+ 8F35              ; 	Dispara Amadeus.
 126+ 8F35
 127+ 8F35 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F37 CD A1 96         call PreviousScan
 129+ 8F3A CD A1 96         call PreviousScan
 130+ 8F3D
 131+ 8F3D              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F3D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F3D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F3D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F3D
 136+ 8F3D 18 11            jr 10F
 137+ 8F3F
 138+ 8F3F              ; 	Dispara Entidad.
 139+ 8F3F
 140+ 8F3F 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F42              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F42
 143+ 8F42              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F42              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F42
 146+ 8F42 C5               push bc
 147+ 8F43 06 10            ld b,16
 148+ 8F45 CD 92 96     9 call NextScan
 149+ 8F48 10 FB            djnz 9B
 150+ 8F4A C1               pop bc
 151+ 8F4B CD B5 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F4E 18 06            jr 17F
 153+ 8F50
 154+ 8F50              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F50              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F50              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F50              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F50
 159+ 8F50 CD B5 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F53 CD 2A 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F56              ;                                                      ; _al generar el disparo.
 162+ 8F56
 163+ 8F56              ; 	LLegados a este punto tendremos:
 164+ 8F56              ;
 165+ 8F56              ;       Puntero_objeto_disparo en IY.
 166+ 8F56              ;       Rutinas_de_impresion en IX.
 167+ 8F56              ;       Puntero_de_impresion en HL.
 168+ 8F56              ;       Impacto/Dirección en BC.
 169+ 8F56
 170+ 8F56 CD BD 8F     17 call Almacena_disparo
 171+ 8F59 18 52            jr 6F                                             ; RET.
 172+ 8F5B
 173+ 8F5B              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F5B              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F5B              ;
 176+ 8F5B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F5B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F5B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F5B
 180+ 8F5B 2A D6 88     4 ld hl,(Posicion_actual)
 181+ 8F5E
 182+ 8F5E              ;   Amadeus o entidad ???.
 183+ 8F5E
 184+ 8F5E 3A 04 89         ld a,(Ctrl_0)
 185+ 8F61 CB 77            bit 6,a
 186+ 8F63 28 0A            jr z,11F
 187+ 8F65
 188+ 8F65              ; 	Dispara Amadeus.
 189+ 8F65
 190+ 8F65 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F67 CD A1 96         call PreviousScan
 192+ 8F6A CD A1 96         call PreviousScan
 193+ 8F6D
 194+ 8F6D              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F6D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F6D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F6D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F6D
 199+ 8F6D 18 11            jr 13F
 200+ 8F6F
 201+ 8F6F              ; 	Dispara Entidad.
 202+ 8F6F
 203+ 8F6F 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F72              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F72
 206+ 8F72              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F72              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F72
 209+ 8F72 C5               push bc
 210+ 8F73 06 10            ld b,16
 211+ 8F75 CD 92 96     12 call NextScan
 212+ 8F78 10 FB            djnz 12B
 213+ 8F7A C1               pop bc
 214+ 8F7B
 215+ 8F7B CD AE 8F         call Ajusta_disparo_parte_derecha
 216+ 8F7E 18 06            jr 18F
 217+ 8F80
 218+ 8F80              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F80              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F80              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F80              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F80
 223+ 8F80 CD AE 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F83 CD 2A 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F86              ;                                                       ; _al generar el disparo.
 226+ 8F86
 227+ 8F86              ; LLegados a este punto tendremos:
 228+ 8F86              ;
 229+ 8F86              ;       Puntero_objeto_disparo en IY.
 230+ 8F86              ;       Rutinas_de_impresion en IX.
 231+ 8F86              ;       Puntero_de_impresion en HL.
 232+ 8F86              ;       Impacto/Dirección en BC.
 233+ 8F86
 234+ 8F86 CD BD 8F     18 call Almacena_disparo
 235+ 8F89 18 22            jr 6F                                               ; RET.
 236+ 8F8B
 237+ 8F8B              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F8B
 239+ 8F8B 28 11        3 jr z,5F
 240+ 8F8D
 241+ 8F8D              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F8D              ;
 243+ 8F8D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F8D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F8D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F8D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F8D
 248+ 8F8D              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F8D              ;	   ""        ""       "f9", B="1"
 250+ 8F8D              ;	   ""        ""       "fb", B="2"
 251+ 8F8D              ; 	   ""        ""       "fb", B="3"
 252+ 8F8D
 253+ 8F8D 2A D6 88     	ld hl,(Posicion_actual)
 254+ 8F90 CD 92 96     	call NextScan
 255+ 8F93
 256+ 8F93              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F93              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F93              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F93              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F93
 261+ 8F93 CD B5 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F96
 263+ 8F96              ; 	No se produce impacto. B="$80"
 264+ 8F96              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F96
 266+ 8F96 01 80 80         ld bc,$8080
 267+ 8F99
 268+ 8F99              ; 	LLegados a este punto tendremos:
 269+ 8F99              ;
 270+ 8F99              ;       Puntero_objeto_disparo en IY.
 271+ 8F99              ;       Rutinas_de_impresion en IX.
 272+ 8F99              ;       Puntero_de_impresion en HL.
 273+ 8F99              ;       Impacto/Dirección en BC.
 274+ 8F99
 275+ 8F99 CD BD 8F         call Almacena_disparo
 276+ 8F9C 18 0F            jr 6F                                           ; RET.
 277+ 8F9E
 278+ 8F9E              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F9E              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F9E              ;
 281+ 8F9E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F9E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F9E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F9E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F9E
 286+ 8F9E 2A D6 88     5 ld hl,(Posicion_actual)
 287+ 8FA1 CD 92 96     	call NextScan
 288+ 8FA4
 289+ 8FA4              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FA4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FA4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FA4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FA4
 294+ 8FA4 CD AE 8F         call Ajusta_disparo_parte_derecha
 295+ 8FA7
 296+ 8FA7              ; 	No se produce impacto. B="$80"
 297+ 8FA7              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FA7
 299+ 8FA7 01 80 80     15 ld bc,$8080
 300+ 8FAA
 301+ 8FAA              ; 	LLegados a este punto tendremos:
 302+ 8FAA              ;
 303+ 8FAA              ;       Puntero_objeto_disparo en IY.
 304+ 8FAA              ;       Rutinas_de_impresion en IX.
 305+ 8FAA              ;       Puntero_de_impresion en HL.
 306+ 8FAA              ;       Impacto/Dirección en BC.
 307+ 8FAA
 308+ 8FAA CD BD 8F         call Almacena_disparo
 309+ 8FAD
 310+ 8FAD C9           6 ret
 311+ 8FAE
 312+ 8FAE              ; ----------------------------------------------------------------
 313+ 8FAE              ;
 314+ 8FAE              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FAE              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FAE              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FAE
 318+ 8FAE 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FAF FE 02            cp 2
 320+ 8FB1 38 01            jr c,1F
 321+ 8FB3 23               inc hl
 322+ 8FB4 C9           1 ret
 323+ 8FB5
 324+ 8FB5 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FB6 FE 01        	cp 1
 326+ 8FB8 20 01        	jr nz,1F
 327+ 8FBA 2B           	dec hl
 328+ 8FBB 2B           1 dec hl
 329+ 8FBC C9               ret
 330+ 8FBD
 331+ 8FBD              ; ----------------------------------------------------------------
 332+ 8FBD              ;
 333+ 8FBD              ;   25/02/23
 334+ 8FBD              ;
 335+ 8FBD              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FBD              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FBD              ;
 338+ 8FBD              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FBD              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FBD
 341+ 8FBD              Almacena_disparo
 342+ 8FBD
 343+ 8FBD E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FBE F1               pop af
 345+ 8FBF 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FC0
 347+ 8FC0 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FC1 E6 01            and 1
 349+ 8FC3 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FC5              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FC5              ; 	Dispara AMADEUS.
 352+ 8FC5
 353+ 8FC5              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FC5              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FC5              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FC5              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FC5
 358+ 8FC5 C5               push bc
 359+ 8FC6 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FC9 2A 3A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FCC A7               and a
 362+ 8FCD ED 42            sbc hl,bc
 363+ 8FCF CC AB 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FD2 C1               pop bc
 365+ 8FD3 28 54            jr z,4F
 366+ 8FD5
 367+ 8FD5 2A 3A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FD8 23               inc hl
 369+ 8FD9 23               inc hl
 370+ 8FDA 22 3A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FDD              ;                                                   ; _ Disparo_(+1).
 372+ 8FDD 18 18            jr 2F
 373+ 8FDF
 374+ 8FDF              ; Dispara una entidad.
 375+ 8FDF
 376+ 8FDF C5           1 push bc
 377+ 8FE0 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FE3 2A 38 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FE6 A7               and a
 380+ 8FE7 ED 42            sbc hl,bc
 381+ 8FE9 CC A4 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FEC C1               pop bc
 383+ 8FED 28 3A            jr z,4F
 384+ 8FEF
 385+ 8FEF 2A 38 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FF2 23               inc hl
 387+ 8FF3 23               inc hl
 388+ 8FF4 22 38 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FF7              ;                                                   ; _ Disparo_(+1).
 390+ 8FF7 CD 26 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FFA              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FFA              ;
 393+ 8FFA              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FFA              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FFA              ;                                                     Puntero_de_impresion en HL.
 396+ 8FFA              ;                                                     Impacto/Dirección en BC.
 397+ 8FFA
 398+ 8FFA 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FFB 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FFC 23               inc hl                                          ; _ al siguiente.
 401+ 8FFD A7               and a
 402+ 8FFE 20 C0            jr nz,3B
 403+ 9000
 404+ 9000 08               ex af,af
 405+ 9001 ED 73 28 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9005 F9               ld sp,hl
 407+ 9006
 408+ 9006 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9008 F5               push af                                         ; Puntero de impresión.
 410+ 9009 FD E5            push iy                                         ; Puntero objeto.
 411+ 900B C5               push bc                                         ; Control.
 412+ 900C
 413+ 900C ED 7B 28 89      ld sp,(Stack)
 414+ 9010
 415+ 9010              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9010
 417+ 9010 21 17 89     	ld hl,Ctrl_1
 418+ 9013 CB C6        	set 0,(hl)
 419+ 9015
 420+ 9015 DD E5        	push ix
 421+ 9017 E1               pop hl
 422+ 9018 F5               push af
 423+ 9019 DD E1            pop ix
 424+ 901B
 425+ 901B CD 16 71     	call Guarda_foto_registros
 426+ 901E
 427+ 901E 21 17 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9021 CB 86        	res 0,(hl)
 429+ 9023
 430+ 9023              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9023              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9023
 433+ 9023 CD AB 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9026 CD A4 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9029
 436+ 9029 C9           4 ret
 437+ 902A
 438+ 902A              ; ----------------------------------------------------------------
 439+ 902A              ;
 440+ 902A              ;   4/3/23
 441+ 902A              ;
 442+ 902A              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 902A              ;   _ al generarse el disparo.
 444+ 902A              ;
 445+ 902A              ;       "$80" ..... No se produce colisión.
 446+ 902A              ;       "$81" ..... Se produce colisión.
 447+ 902A              ;
 448+ 902A              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 902A              ;         _ que forman el disparo.
 450+ 902A
 451+ 902A
 452+ 902A              Comprueba_Colision
 453+ 902A
 454+ 902A              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 902A
 456+ 902A FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 902C E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 902D
 459+ 902D CD 63 90         call Modifica_H_Velocidad_disparo
 460+ 9030
 461+ 9030 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9031 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9033 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9035
 465+ 9035 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9037 CD 53 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 903A
 468+ 903A 7B               ld a,e
 469+ 903B E6 01            and 1
 470+ 903D 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 903F              ;                                                  ; _ para activar IMPACTO.
 472+ 903F E1               pop hl
 473+ 9040 E5               push hl
 474+ 9041 CD 92 96         call NextScan
 475+ 9044
 476+ 9044 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9045 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9047 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9049              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9049 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 904B CD 53 90         call Bucle_2
 482+ 904E
 483+ 904E 43           1 ld b,e
 484+ 904F E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9050 FD E1            pop iy
 486+ 9052 C9               ret
 487+ 9053
 488+ 9053              ; ---------- ----------
 489+ 9053
 490+ 9053 06 02        Bucle_2 ld b,2
 491+ 9055 FD 7E 00     2 ld a,(iy)
 492+ 9058 A6               and (hl)
 493+ 9059 28 02            jr z,1F
 494+ 905B 1E 81            ld e,$81
 495+ 905D 23           1 inc hl
 496+ 905E FD 23            inc iy
 497+ 9060 10 F3            djnz 2B
 498+ 9062 C9               ret
 499+ 9063
 500+ 9063              ; ---------- ----------
 501+ 9063              ;
 502+ 9063              ;   21/7/23
 503+ 9063
 504+ 9063              Modifica_H_Velocidad_disparo
 505+ 9063
 506+ 9063 3A 47 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9066 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9068 D0               ret nc                                         ; _ incrementamos H.
 509+ 9069 24               inc h
 510+ 906A
 511+ 906A C9               ret
 512+ 906B
 513+ 906B              ; -------------------------------------------------------------------------------------------------------------
 514+ 906B              ;
 515+ 906B              ;   04/12/23
 516+ 906B              ;
 517+ 906B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 906B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 906B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 906B              ;
 521+ 906B              ;   MODIFICA: HL,DE,B y A.
 522+ 906B
 523+ 906B              Genera_coordenadas_X
 524+ 906B
 525+ 906B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 906B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 906B
 528+ 906B              ;   Limpiamos almacenes.
 529+ 906B
 530+ 906B CD 9C 90         call Limpia_Coordenadas_X
 531+ 906E
 532+ 906E              ;   Almacenamos coordenadas X.
 533+ 906E
 534+ 906E              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 906E
 536+ 906E 2A FE 88         ld hl,(Puntero_de_impresion)
 537+ 9071 11 44 89         ld de,Coordenadas_X_Entidad
 538+ 9074 06 02            ld b,2
 539+ 9076
 540+ 9076 3A DC 88         ld a,(CTRL_DESPLZ)
 541+ 9079 A7               and a
 542+ 907A 28 01            jr z,1F
 543+ 907C 04               inc b
 544+ 907D
 545+ 907D CD 93 90     1 call Guarda_coordenadas_X
 546+ 9080
 547+ 9080              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9080
 549+ 9080 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 9083 11 41 89         ld de,Coordenadas_X_Amadeus
 551+ 9086 06 02            ld b,2
 552+ 9088
 553+ 9088 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 908B A7               and a
 555+ 908C 28 01            jr z,2F
 556+ 908E 04               inc b
 557+ 908F
 558+ 908F CD 93 90     2 call Guarda_coordenadas_X
 559+ 9092
 560+ 9092              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9092
 562+ 9092 C9               ret
 563+ 9093
 564+ 9093              ; ----- ----- ----- ----- -----
 565+ 9093
 566+ 9093 7D           Guarda_coordenadas_X  ld a,l
 567+ 9094 E6 1F            and $1f
 568+ 9096 12           1 ld (de),a
 569+ 9097 3C               inc a
 570+ 9098 13               inc de
 571+ 9099 10 FB            djnz 1B
 572+ 909B C9               ret
 573+ 909C
 574+ 909C AF           Limpia_Coordenadas_X xor a
 575+ 909D 06 06            ld b,6
 576+ 909F 21 41 89         ld hl,Coordenadas_X_Amadeus
 577+ 90A2 77           1 ld (hl),a
 578+ 90A3 23               inc hl
 579+ 90A4 10 FC            djnz 1B
 580+ 90A6 C9               ret
 581+ 90A7
 582+ 90A7              ; ----- ----- ----- ----- -----
 583+ 90A7
 584+ 90A7              Compara_coordenadas_X
 585+ 90A7
 586+ 90A7 06 03            ld b,3
 587+ 90A9 11 46 89         ld de,Coordenadas_X_Entidad+2
 588+ 90AC
 589+ 90AC 1A               ld a,(de)
 590+ 90AD A7               and a
 591+ 90AE 20 01            jr nz,2F
 592+ 90B0 05               dec b
 593+ 90B1
 594+ 90B1 1B           2 dec de
 595+ 90B2 1B               dec de
 596+ 90B3 21 41 89         ld hl,Coordenadas_X_Amadeus
 597+ 90B6
 598+ 90B6 D5           1 push de
 599+ 90B7 E5               push hl
 600+ 90B8 C5               push bc
 601+ 90B9
 602+ 90B9 CD C3 90         call Comparando
 603+ 90BC
 604+ 90BC C1               pop bc
 605+ 90BD E1               pop hl
 606+ 90BE D1               pop de
 607+ 90BF
 608+ 90BF 13               inc de
 609+ 90C0 10 F4            djnz 1B
 610+ 90C2
 611+ 90C2 C9               ret
 612+ 90C3
 613+ 90C3              ; ----- ----- ----- ----- -----
 614+ 90C3              ;
 615+ 90C3              ;   4/12/23
 616+ 90C3              ;
 617+ 90C3              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90C3
 619+ 90C3 06 03        Comparando ld b,3
 620+ 90C5 1A               ld a,(de)
 621+ 90C6 4E           2 ld c,(hl)
 622+ 90C7 B9               cp c
 623+ 90C8 28 04            jr z,1F
 624+ 90CA 23               inc hl
 625+ 90CB 10 F9            djnz 2B
 626+ 90CD C9               ret
 627+ 90CE
 628+ 90CE 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90D0 32 ED 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90D3 21 3C 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90D6 CB D6            set 2,(hl)
 632+ 90D8 C9               ret
 633+ 90D9
 634+ 90D9              ; -----------------------------------------------------------------------
 635+ 90D9              ;
 636+ 90D9              ;   7/12/23
 637+ 90D9              ;
 638+ 90D9
 639+ 90D9              Detecta_colision_nave_entidad
 640+ 90D9
 641+ 90D9              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90D9
 643+ 90D9 FD 2A D8 88      ld iy,(Puntero_objeto)
 644+ 90DD 2A FE 88         ld hl,(Puntero_de_impresion)
 645+ 90E0
 646+ 90E0 E5               push hl
 647+ 90E1
 648+ 90E1              ; ----- ----- -----
 649+ 90E1 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90E3 06 0A            ld b,10
 651+ 90E5 CD 15 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90E8 7B               ld a,e
 653+ 90E9 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 90EB 38 0E            jr c,3F
 655+ 90ED
 656+ 90ED              ; LLegados a este punto:
 657+ 90ED              ;
 658+ 90ED              ;   HAY COLISIÓN !!!!!.
 659+ 90ED              ;
 660+ 90ED              ;   .db (Impacto) de Amadeus a "1".
 661+ 90ED              ;   SET el bit3 de (Impacto2).
 662+ 90ED              ;
 663+ 90ED              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90ED
 665+ 90ED 21 ED 88         ld hl,Impacto
 666+ 90F0 36 01            ld (hl),1
 667+ 90F2 21 3C 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 90F5 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 90F7 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 90F9
 671+ 90F9 18 18            jr 1F
 672+ 90FB
 673+ 90FB              ; -----
 674+ 90FB
 675+ 90FB E1           3 pop hl
 676+ 90FC CD 92 96         call NextScan
 677+ 90FF E5               push hl
 678+ 9100 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9101 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9103 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9105 30 0C            jr nc,1F
 682+ 9107              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9107 10 DC            djnz 2B
 684+ 9109
 685+ 9109              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9109
 687+ 9109              ; LLegados a este punto:
 688+ 9109              ;
 689+ 9109              ;   NO HAY COLISIÓN !!!!!.
 690+ 9109              ;
 691+ 9109              ;   .db (Impacto) de Amadeus a "0".
 692+ 9109              ;   RES el bit2 de (Impacto2).
 693+ 9109              ;
 694+ 9109              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9109              ;   Lo colocamos a "0".
 696+ 9109
 697+ 9109 21 3C 89         ld hl,Impacto2
 698+ 910C CB 96            res 2,(hl)
 699+ 910E 2A 3D 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9111 36 00            ld (hl),0
 701+ 9113
 702+ 9113 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9114 C9               ret
 704+ 9115
 705+ 9115               ; ---------- ----------
 706+ 9115
 707+ 9115 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9116 3A D5 88         ld a,(Columns)
 709+ 9119 47               ld b,a
 710+ 911A FD 7E 00     2 ld a,(iy)
 711+ 911D BE               cp (hl)
 712+ 911E 28 01            jr z,1F
 713+ 9120
 714+ 9120 1C               inc e
 715+ 9121
 716+ 9121 23           1 inc hl
 717+ 9122 FD 23            inc iy
 718+ 9124 10 F4            djnz 2B
 719+ 9126 C1               pop bc
 720+ 9127 C9               ret
 721+ 9128
 722+ 9128              ; -------------------------------------------------------------------------------------------------------------
 723+ 9128              ;
 724+ 9128              ;   13/03/23
 725+ 9128              ;
 726+ 9128              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9128              ;
 728+ 9128              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9128
 730+ 9128 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 912B 7E               ld a,(hl)
 732+ 912C A7               and a
 733+ 912D C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 912E
 735+ 912E 44               ld b,h
 736+ 912F 4D               ld c,l
 737+ 9130 2A 30 89         ld hl,(Stack_snapshot_disparos)
 738+ 9133 E5               push hl
 739+ 9134 A7               and a
 740+ 9135 ED 42            sbc hl,bc
 741+ 9137 E5               push hl
 742+ 9138 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9139
 744+ 9139 E1               pop hl
 745+ 913A 54               ld d,h
 746+ 913B 5D               ld e,l
 747+ 913C 1B               dec de
 748+ 913D ED B8            lddr                                                ; Limpiamos.
 749+ 913F
 750+ 913F 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9142 22 30 89         ld (Stack_snapshot_disparos),hl
 752+ 9145
 753+ 9145 C9               ret
 754+ 9146
 755+ 9146              ; -------------------------------------------------------------------------------------------------------------
 756+ 9146              ;
 757+ 9146              ;   18/07/23
 758+ 9146              ;
 759+ 9146
 760+ 9146              Motor_de_disparos
 761+ 9146
 762+ 9146              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9146
 764+ 9146 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9149 2A 3A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 914C
 767+ 914C CD 26 8D     2 call Extrae_address
 768+ 914F 7E               ld a,(hl)
 769+ 9150 A7               and a
 770+ 9151 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9153
 772+ 9153              ; ----- ----- ----- ----- ----- -----
 773+ 9153
 774+ 9153 C5               push bc
 775+ 9154 CD 18 92         call foto_disparo_a_borrar
 776+ 9157
 777+ 9157              ; Existe colisión con este disparo???
 778+ 9157
 779+ 9157 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9158 7E               ld a,(hl)
 781+ 9159 2B               dec hl
 782+ 915A E6 01            and 1
 783+ 915C 28 1D            jr z,9F
 784+ 915E
 785+ 915E              ;   En este punto:
 786+ 915E              ;
 787+ 915E              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 915E              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 915E              ;   _con la entidad).
 790+ 915E              ;
 791+ 915E              ;   Disparo_2A defw 0                                ; Control.
 792+ 915E              ;    defw 0                                          ; Puntero objeto.
 793+ 915E              ;    defw 0                                          ; Puntero de impresión.
 794+ 915E              ;    defw 0                                          ; Rutina de impresión.
 795+ 915E
 796+ 915E E5               push hl
 797+ 915F
 798+ 915F 06 04            ld b,4
 799+ 9161 23           19 inc hl
 800+ 9162 10 FD            djnz 19B
 801+ 9164
 802+ 9164 CD 26 8D         call Extrae_address
 803+ 9167 CD 7F 9D         call Genera_coordenadas_disparo
 804+ 916A
 805+ 916A              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 916A
 807+ 916A 21 3F 89         ld hl,Coordenadas_disparo_certero
 808+ 916D 72               ld (hl),d
 809+ 916E 23               inc hl
 810+ 916F 73               ld (hl),e
 811+ 9170
 812+ 9170              ; Elimino el disparo de la base de datos.
 813+ 9170
 814+ 9170 E1               pop hl
 815+ 9171 CD 97 92         call Elimina_disparo_de_base_de_datos
 816+ 9174 21 3C 89         ld hl,Impacto2
 817+ 9177 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9179
 819+ 9179 18 06            jr 11F
 820+ 917B
 821+ 917B CD 41 92     9 call Mueve_disparo
 822+ 917E CD 18 92         call foto_disparo_a_borrar
 823+ 9181
 824+ 9181 C1           11 pop bc
 825+ 9182 18 04            jr 7F
 826+ 9184
 827+ 9184              ; ----- ----- ----- ----- ----- -----
 828+ 9184
 829+ 9184 ED 42        1 sbc hl,bc
 830+ 9186 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9188
 832+ 9188 2A 3A 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 918B 23               inc hl
 834+ 918C 23               inc hl
 835+ 918D 22 3A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9190 18 BA            jr 2B
 837+ 9192
 838+ 9192 CD AB 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9195              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9195
 841+ 9195              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9195
 843+ 9195 01 6A 85         ld bc,Disparo_11
 844+ 9198 2A 38 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 919B
 846+ 919B CD 26 8D     5 call Extrae_address
 847+ 919E 7E               ld a,(hl)
 848+ 919F A7               and a
 849+ 91A0 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 91A2
 851+ 91A2              ; ----- ----- ----- ----- ----- -----
 852+ 91A2
 853+ 91A2 C5               push bc
 854+ 91A3 CD 18 92         call foto_disparo_a_borrar
 855+ 91A6
 856+ 91A6              ; Existe colisión con este disparo???
 857+ 91A6
 858+ 91A6 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 91A7 7E               ld a,(hl)
 860+ 91A8 2B               dec hl
 861+ 91A9 E6 01            and 1
 862+ 91AB 28 4D            jr z,10F
 863+ 91AD
 864+ 91AD              ;! La colisión se produce con Amadeus???
 865+ 91AD              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91AD
 867+ 91AD E5               push hl
 868+ 91AE
 869+ 91AE 06 04            ld b,4
 870+ 91B0 23           16 inc hl
 871+ 91B1 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91B3
 873+ 91B3 CD 26 8D         call Extrae_address
 874+ 91B6 CD 7F 9D         call Genera_coordenadas_disparo
 875+ 91B9
 876+ 91B9 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91BA FE 16            cp $16
 878+ 91BC 38 2A            jr c,15F
 879+ 91BE
 880+ 91BE
 881+ 91BE              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91BE
 883+ 91BE D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91BF
 885+ 91BF              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91BF
 887+ 91BF 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91C2
 889+ 91C2              ; Coordenada X de Amadeus en D.
 890+ 91C2
 891+ 91C2 7D               ld a,l
 892+ 91C3 E6 1F            and $1F
 893+ 91C5 57               ld d,a
 894+ 91C6
 895+ 91C6 21 86 85         ld hl,Amadeus_db+8
 896+ 91C9 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91CA
 898+ 91CA 21 41 89         ld hl,Coordenadas_X_Amadeus
 899+ 91CD CD 93 90         call Guarda_coordenadas_X
 900+ 91D0
 901+ 91D0 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91D1
 903+ 91D1              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91D1
 905+ 91D1 06 02            ld b,2
 906+ 91D3 C5           20 push bc
 907+ 91D4
 908+ 91D4 06 03            ld b,3
 909+ 91D6 21 41 89         ld hl,Coordenadas_X_Amadeus
 910+ 91D9 7E           18 ld a,(hl)
 911+ 91DA BA               cp d
 912+ 91DB 20 04            jr nz,17F
 913+ 91DD
 914+ 91DD              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91DD
 916+ 91DD C1               pop bc
 917+ 91DE E1               pop hl
 918+ 91DF 18 0D            jr 14F
 919+ 91E1
 920+ 91E1 23           17 inc hl
 921+ 91E2 10 F5            djnz 18B
 922+ 91E4
 923+ 91E4 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91E5
 925+ 91E5 C1               pop bc
 926+ 91E6 10 EB            djnz 20B
 927+ 91E8
 928+ 91E8
 929+ 91E8              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91E8              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91E8
 932+ 91E8 E1           15 pop hl
 933+ 91E9 23               inc hl
 934+ 91EA 35               dec (hl)
 935+ 91EB 2B               dec hl
 936+ 91EC 18 0C            jr 10F
 937+ 91EE
 938+ 91EE              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 91EE              ; _ almacén de coordenadas_X de Amadeus.
 940+ 91EE
 941+ 91EE E5           14 push hl
 942+ 91EF CD 97 92         call Elimina_disparo_de_base_de_datos
 943+ 91F2 21 3C 89         ld hl,Impacto2
 944+ 91F5 CB CE            set 1,(hl)
 945+ 91F7 E1               pop hl
 946+ 91F8 18 06            jr 12F
 947+ 91FA
 948+ 91FA              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 91FA
 950+ 91FA CD 41 92     10 call Mueve_disparo
 951+ 91FD CD 18 92         call foto_disparo_a_borrar
 952+ 9200 C1           12 pop bc
 953+ 9201
 954+ 9201 18 04            jr 8F
 955+ 9203
 956+ 9203              ; ----- ----- ----- ----- ----- -----
 957+ 9203
 958+ 9203 ED 42        4 sbc hl,bc
 959+ 9205 28 0A            jr z,6F
 960+ 9207
 961+ 9207 2A 38 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 920A 23               inc hl
 963+ 920B 23               inc hl
 964+ 920C 22 38 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 920F 18 8A            jr 5B
 966+ 9211
 967+ 9211 CD A4 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9214 CD 9C 90         call Limpia_Coordenadas_X
 969+ 9217 C9               ret
 970+ 9218
 971+ 9218              ; ------------------------------------------------------------------
 972+ 9218
 973+ 9218              foto_disparo_a_borrar
 974+ 9218
 975+ 9218 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9219 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 921A C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 921B
 979+ 921B E5               push hl
 980+ 921C 23               inc hl
 981+ 921D 23               inc hl
 982+ 921E ED 73 28 89      ld (Stack),sp
 983+ 9222 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9223 FD E1            pop iy
 985+ 9225 DD E1            pop ix
 986+ 9227 E1               pop hl
 987+ 9228 ED 7B 28 89      ld sp,(Stack)
 988+ 922C 3A 17 89         ld a,(Ctrl_1)
 989+ 922F CB C7            set 0,a
 990+ 9231 32 17 89         ld (Ctrl_1),a
 991+ 9234 CD 16 71         call Guarda_foto_registros
 992+ 9237 3A 17 89         ld a,(Ctrl_1)
 993+ 923A CB 87            res 0,a
 994+ 923C 32 17 89         ld (Ctrl_1),a
 995+ 923F E1               pop hl
 996+ 9240 C9               ret
 997+ 9241
 998+ 9241              ;---------------------------------------------------
 999+ 9241              ;
1000+ 9241              ;   18/07/23
1001+ 9241              ;
1002+ 9241
1003+ 9241              Mueve_disparo
1004+ 9241
1005+ 9241              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9241              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9241              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9241
1009+ 9241 E5               push hl
1010+ 9242
1011+ 9242 7E               ld a,(hl)
1012+ 9243
1013+ 9243 06 04            ld b,4
1014+ 9245 23           1 inc hl
1015+ 9246 10 FD            djnz 1B
1016+ 9248
1017+ 9248              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9248
1019+ 9248 CD 26 8D         call Extrae_address
1020+ 924B
1021+ 924B E6 01            and 1
1022+ 924D 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 924F
1024+ 924F              ; Disparo hacia arriba, (Amadeus).
1025+ 924F
1026+ 924F              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 924F              ; _ de la dificultad.
1028+ 924F
1029+ 924F CD A1 96         call PreviousScan
1030+ 9252 CD A1 96         call PreviousScan
1031+ 9255 CD A1 96         call PreviousScan
1032+ 9258 CD A1 96         call PreviousScan
1033+ 925B
1034+ 925B              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 925B
1036+ 925B 7C               ld a,h
1037+ 925C FE 40            cp $40
1038+ 925E 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9260
1040+ 9260              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9260
1042+ 9260 EB               ex de,hl
1043+ 9261 06 04            ld b,4
1044+ 9263 2B           6 dec hl
1045+ 9264 10 FD            djnz 6B
1046+ 9266
1047+ 9266 CD 97 92         call Elimina_disparo_de_base_de_datos
1048+ 9269 E1               pop hl
1049+ 926A 18 10            jr 7F
1050+ 926C
1051+ 926C              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 926C              ; HL contiene el puntero de impresión del disparo.
1053+ 926C              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 926C
1055+ 926C D5           3 push de
1056+ 926D C5               push bc
1057+ 926E
1058+ 926E CD 2A 90         call Comprueba_Colision
1059+ 9271
1060+ 9271              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9271
1062+ 9271 78               ld a,b
1063+ 9272
1064+ 9272 C1               pop bc
1065+ 9273 D1               pop de
1066+ 9274
1067+ 9274 EB               ex de,hl
1068+ 9275
1069+ 9275 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9276 23               inc hl                                      ; _ movimiento.
1071+ 9277 72               ld (hl),d
1072+ 9278
1073+ 9278 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9279
1075+ 9279 23               inc hl                                      ; _ en curso.
1076+ 927A 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 927B 2B               dec hl
1078+ 927C
1079+ 927C C9           7 ret
1080+ 927D
1081+ 927D              ; Disparo hacia abajo, (Entidad).
1082+ 927D
1083+ 927D 3A 47 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9280 47               ld b,a
1085+ 9281
1086+ 9281 CD 92 96     4 call NextScan
1087+ 9284 10 FB            djnz 4B
1088+ 9286
1089+ 9286              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9286
1091+ 9286 7C               ld a,h
1092+ 9287 FE 58            cp $58
1093+ 9289 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 928B
1095+ 928B EB               ex de,hl
1096+ 928C 06 04            ld b,4
1097+ 928E 2B           5 dec hl
1098+ 928F 10 FD            djnz 5B
1099+ 9291
1100+ 9291 CD 97 92         call Elimina_disparo_de_base_de_datos
1101+ 9294 E1               pop hl
1102+ 9295 18 E5            jr 7B
1103+ 9297
1104+ 9297              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9297
1106+ 9297 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 929A AF               xor a
1108+ 929B 77               ld (hl),a
1109+ 929C 54               ld d,h
1110+ 929D 5D               ld e,l
1111+ 929E 13               inc de
1112+ 929F ED B0            ldir
1113+ 92A1 C9               ret
1114+ 92A2
1115+ 92A2              ; -----------------------------------------------------------------
1116+ 92A2              ;
1117+ 92A2              ;   7/12/23
1118+ 92A2              ;
1119+ 92A2
1120+ 92A2 3A 3C 89     Selector_de_impactos ld a,(Impacto2)
1121+ 92A5 A7               and a
1122+ 92A6 C8               ret z
1123+ 92A7
1124+ 92A7              ; Analizamos si hay impacto por disparos.
1125+ 92A7
1126+ 92A7              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 92A7
1128+ 92A7 CB 4F            bit 1,a
1129+ 92A9 28 07            jr z,1F
1130+ 92AB
1131+ 92AB 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92AE 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92B0 18 08            jr 2F
1134+ 92B2
1135+ 92B2 CB 47        1 bit 0,a
1136+ 92B4 C8               ret z
1137+ 92B5
1138+ 92B5              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92B5
1140+ 92B5 21 17 89         ld hl,Ctrl_1
1141+ 92B8 CB D6            set 2,(hl)
1142+ 92BA
1143+ 92BA C9           2 ret
1144+ 92BB
1145+ 92BB              ; -----------------------------------------------------------------
1146+ 92BB              ;
1147+ 92BB              ;   25/04/23
1148+ 92BB              ;
1149+ 92BB
1150+ 92BB              Determina_resultado_comparativa
1151+ 92BB
1152+ 92BB              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92BB              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92BB              ;
1155+ 92BB              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92BB              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92BB              ;
1158+ 92BB              ;   SBC HL,DE
1159+ 92BB
1160+ 92BB              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92BB              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92BB
1163+ 92BB              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92BB              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92BB
1166+ 92BB
1167+ 92BB 3A E8 88         ld a,(Cuad_objeto)
1168+ 92BE FE 02            cp 2
1169+ 92C0 28 26            jr z,2F
1170+ 92C2 38 24            jr c,2F
1171+ 92C4
1172+ 92C4              ; Cuadrantes 3º y 4º
1173+ 92C4
1174+ 92C4 E6 01            and 1
1175+ 92C6 28 10            jr z,4F
1176+ 92C8
1177+ 92C8              ; Cuadrante 3º
1178+ 92C8
1179+ 92C8 7C               ld a,h
1180+ 92C9 06 00            ld b,0
1181+ 92CB
1182+ 92CB CD 56 93         call Compara_cositas_H3
1183+ 92CE
1184+ 92CE 04               inc b
1185+ 92CF 05               dec b
1186+ 92D0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92D1
1188+ 92D1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92D2 06 00            ld b,0
1190+ 92D4
1191+ 92D4 CD 68 93         call Compara_cositas_L3
1192+ 92D7 C9               ret
1193+ 92D8
1194+ 92D8              ; Cuadrante 4º
1195+ 92D8
1196+ 92D8 7C           4 ld a,h
1197+ 92D9 06 00            ld b,0
1198+ 92DB
1199+ 92DB CD 7A 93         call Compara_cositas_H4
1200+ 92DE
1201+ 92DE 04               inc b
1202+ 92DF 05               dec b
1203+ 92E0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92E1
1205+ 92E1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92E2 06 00            ld b,0
1207+ 92E4
1208+ 92E4 CD 90 93         call Compara_cositas_L4
1209+ 92E7 C9               ret
1210+ 92E8
1211+ 92E8              ; Cuadrantes 1º y 2º.
1212+ 92E8
1213+ 92E8 28 10        2 jr z,3F
1214+ 92EA
1215+ 92EA              ; 1er Cuadrante
1216+ 92EA
1217+ 92EA 7C               ld a,h
1218+ 92EB 06 00            ld b,0
1219+ 92ED
1220+ 92ED CD 2E 93         call Compara_cositas_H1
1221+ 92F0
1222+ 92F0 04               inc b
1223+ 92F1 05               dec b
1224+ 92F2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 92F3
1226+ 92F3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 92F4 06 00            ld b,0
1228+ 92F6
1229+ 92F6 CD 44 93         call Compara_cositas_L1
1230+ 92F9 C9               ret
1231+ 92FA
1232+ 92FA
1233+ 92FA              ; 2º Cuadrante
1234+ 92FA
1235+ 92FA 7C           3 ld a,h
1236+ 92FB 06 00            ld b,0
1237+ 92FD
1238+ 92FD CD 0A 93         call Compara_cositas_H2
1239+ 9300
1240+ 9300 04               inc b
1241+ 9301 05               dec b
1242+ 9302 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9303
1244+ 9303 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9304 06 00            ld b,0
1246+ 9306
1247+ 9306 CD 1C 93         call Compara_cositas_L2
1248+ 9309 C9               ret
1249+ 930A
1250+ 930A A7           Compara_cositas_H2 and a
1251+ 930B 28 0D            jr z,1F
1252+ 930D              ;    cp $fd
1253+ 930D              ;    jr z,1F
1254+ 930D              ;    cp $fe
1255+ 930D              ;    jr z,1F
1256+ 930D FE FF            cp $ff
1257+ 930F 28 09            jr z,1F
1258+ 9311 FE 01            cp $01
1259+ 9313 28 05            jr z,1F
1260+ 9315 FE 02            cp $02
1261+ 9317 28 01            jr z,1F
1262+ 9319 C0               ret nz
1263+ 931A 04           1 inc b
1264+ 931B C9               ret
1265+ 931C
1266+ 931C A7           Compara_cositas_L2 and a
1267+ 931D 28 0D            jr z,1F
1268+ 931F              ;    cp $fd
1269+ 931F              ;    jr z,1F
1270+ 931F FE FE            cp $fe
1271+ 9321 28 09            jr z,1F
1272+ 9323 FE FF            cp $ff
1273+ 9325 28 05            jr z,1F
1274+ 9327 FE 01            cp $01
1275+ 9329 28 01            jr z,1F
1276+ 932B              ;    cp $02
1277+ 932B              ;    jr z,1F
1278+ 932B C0               ret nz
1279+ 932C 04           1 inc b
1280+ 932D C9               ret
1281+ 932E
1282+ 932E A7           Compara_cositas_H1 and a
1283+ 932F 28 11            jr z,1F
1284+ 9331              ;    cp $fd
1285+ 9331              ;    jr z,1F
1286+ 9331              ;    cp $fe
1287+ 9331              ;    jr z,1F
1288+ 9331 FE FF            cp $ff
1289+ 9333 28 0D            jr z,1F
1290+ 9335 FE 01            cp $01
1291+ 9337 28 09            jr z,1F
1292+ 9339 FE 02            cp $02
1293+ 933B 28 05            jr z,1F
1294+ 933D FE 03            cp $03
1295+ 933F 28 01            jr z,1F
1296+ 9341 C0               ret nz
1297+ 9342 04           1 inc b
1298+ 9343 C9               ret
1299+ 9344
1300+ 9344 A7           Compara_cositas_L1 and a
1301+ 9345 28 0D            jr z,1F
1302+ 9347              ;    cp $fd
1303+ 9347              ;    jr z,1F
1304+ 9347              ;    cp $fe
1305+ 9347              ;    jr z,1F
1306+ 9347              ;    cp $ff
1307+ 9347              ;    jr z,1F
1308+ 9347 FE 01            cp $01
1309+ 9349 28 09            jr z,1F
1310+ 934B FE 02            cp $02
1311+ 934D 28 05            jr z,1F
1312+ 934F FE 03            cp $03
1313+ 9351 28 01            jr z,1F
1314+ 9353 C0               ret nz
1315+ 9354 04           1 inc b
1316+ 9355 C9               ret
1317+ 9356
1318+ 9356 A7           Compara_cositas_H3 and a
1319+ 9357 28 0D            jr z,1F
1320+ 9359              ;    cp $fd
1321+ 9359              ;    jr z,1F
1322+ 9359 FE FE            cp $fe
1323+ 935B 28 09            jr z,1F
1324+ 935D FE FF            cp $ff
1325+ 935F 28 05            jr z,1F
1326+ 9361 FE 01            cp $01
1327+ 9363 28 01            jr z,1F
1328+ 9365              ;    cp $02
1329+ 9365              ;    jr z,1F
1330+ 9365              ;    cp $03
1331+ 9365              ;    jr z,1F
1332+ 9365 C0               ret nz
1333+ 9366 04           1 inc b
1334+ 9367 C9               ret
1335+ 9368
1336+ 9368 A7           Compara_cositas_L3 and a
1337+ 9369 28 0D            jr z,1F
1338+ 936B              ;    cp $fd
1339+ 936B              ;    jr z,1F
1340+ 936B              ;    cp $fe
1341+ 936B              ;    jr z,1F
1342+ 936B              ;    cp $ff
1343+ 936B              ;    jr z,1F
1344+ 936B FE 01            cp $01
1345+ 936D 28 09            jr z,1F
1346+ 936F FE 02            cp $02
1347+ 9371 28 05            jr z,1F
1348+ 9373 FE 03            cp $03
1349+ 9375 28 01            jr z,1F
1350+ 9377 C0               ret nz
1351+ 9378 04           1 inc b
1352+ 9379 C9               ret
1353+ 937A
1354+ 937A A7           Compara_cositas_H4 and a
1355+ 937B 28 11            jr z,1F
1356+ 937D FE FD            cp $fd
1357+ 937F 28 0D            jr z,1F
1358+ 9381 FE FE            cp $fe
1359+ 9383 28 09            jr z,1F
1360+ 9385 FE FF            cp $ff
1361+ 9387 28 05            jr z,1F
1362+ 9389 FE 01            cp $01
1363+ 938B 28 01            jr z,1F
1364+ 938D              ;    cp $02
1365+ 938D              ;    jr z,1F
1366+ 938D              ;    cp $03
1367+ 938D              ;    jr z,1F
1368+ 938D C0               ret nz
1369+ 938E 04           1 inc b
1370+ 938F C9               ret
1371+ 9390
1372+ 9390 A7           Compara_cositas_L4 and a
1373+ 9391 28 0D            jr z,1F
1374+ 9393              ;    cp $fd
1375+ 9393              ;    jr z,1F
1376+ 9393 FE FE            cp $fe
1377+ 9395 28 09            jr z,1F
1378+ 9397 FE FF            cp $ff
1379+ 9399 28 05            jr z,1F
1380+ 939B FE 01            cp $01
1381+ 939D 28 01            jr z,1F
1382+ 939F              ;    cp $02
1383+ 939F              ;    jr z,1F
1384+ 939F              ;    cp $03
1385+ 939F              ;    jr z,1F
1386+ 939F C0               ret nz
1387+ 93A0 04           1 inc b
1388+ 93A1 C9               ret
# file closed: Disparo.asm
1803  93A2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93A2              ; ******************************************************************************************************************************************************************************************
   2+ 93A2              ;
   3+ 93A2              ; 26/06/23
   4+ 93A2              ;
   5+ 93A2              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93A2
   7+ 93A2              Draw
   8+ 93A2
   9+ 93A2 CD 86 96     	call Prepara_draw
  10+ 93A5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 93A6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 93A7 28 05        	jr z,2F
  13+ 93A9
  14+ 93A9 3A E8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93AC 18 0C        	jr 1F
  16+ 93AE
  17+ 93AE 2A E6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93B1 22 D6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93B4 CD 43 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93B7              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93B7 CD 0A A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93BA
  23+ 93BA 3A 04 89     1 ld a,(Ctrl_0)
  24+ 93BD CB 6F        	bit 5,a
  25+ 93BF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93C1
  27+ 93C1 CD D9 93     	call Comprueba_limite_horizontal
  28+ 93C4 CD 69 94     	call Comprueba_limite_vertical
  29+ 93C7
  30+ 93C7              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93C7              ; -----------------------
  32+ 93C7              ; -----------------------
  33+ 93C7              ; -----------------------
  34+ 93C7
  35+ 93C7 CD B6 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93CA CD ED 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93CD CD 4C 96     	call Define_rutina_de_impresion
  38+ 93D0
  39+ 93D0 3A 04 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93D3 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93D5 32 04 89     	ld (Ctrl_0),a
  42+ 93D8
  43+ 93D8 C9           	ret
  44+ 93D9
  45+ 93D9              ; *******************************************************************************************************************************************************************************************
  46+ 93D9              ;	21/01/23
  47+ 93D9              ;
  48+ 93D9              ; 	Comprueba_limite_horizontal.
  49+ 93D9              ;
  50+ 93D9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93D9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93D9              ;
  53+ 93D9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93D9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93D9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93D9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93D9
  58+ 93D9
  59+ 93D9
  60+ 93D9 3A 04 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 93DC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 93DE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 93E0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 93E2 32 04 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 93E5 18 09            jr 6F
  66+ 93E7 CB 5F        1 bit 3,a
  67+ 93E9 28 0A            jr z,2F
  68+ 93EB E6 F7            and $f7
  69+ 93ED 32 04 89         ld (Ctrl_0),a
  70+ 93F0 CD 43 95     6 call Inicializacion
  71+ 93F3 18 5B            jr 5F
  72+ 93F5 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 93F6
  74+ 93F6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 93F6              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 93F6
  77+ 93F6 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 93F7 2A 12 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 93FA CD A5 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 93FD 67           	ld h,a
  81+ 93FE EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 93FF CD A5 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9402 67           	ld h,a
  84+ 9403 A7           	and a
  85+ 9404 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9406 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9407 3A E8 88     	ld a,(Cuad_objeto)
  88+ 940A FE 02        	cp 2
  89+ 940C 38 1E        	jr c,3F
  90+ 940E 28 1C        	jr z,3F
  91+ 9410 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9411 28 23            jr z,7F
  93+ 9413 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9415 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9417 E1           	pop hl
  96+ 9418
  97+ 9418              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9418              ; _para indicar con E="2" en caso necesario.
  99+ 9418
 100+ 9418 E5               push hl
 101+ 9419 C5               push bc
 102+ 941A CD A5 99     	call calcula_tercio
 103+ 941D FE 01        	cp 1
 104+ 941F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9421 CD 51 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9424 28 26            jr z,9F
 107+ 9426 38 24            jr c,9F
 108+ 9428 1E 00        11 ld e,0
 109+ 942A 18 22            jr 8F
 110+ 942C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 942D 28 07        	jr z, 7F
 112+ 942F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9431 1E 00         	ld e,0
 114+ 9433 E1           	pop hl
 115+ 9434 18 04        	jr 4F
 116+ 9436 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9438 18 15            jr 10F
 118+ 943A
 119+ 943A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 943A              ; _para indicar con E="2" en caso necesario.
 121+ 943A
 122+ 943A E5           4 push hl
 123+ 943B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 943C CD A5 99     	call calcula_tercio
 125+ 943F FE 01        	cp 1
 126+ 9441 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9443 CD 51 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9446 28 04            jr z,9F
 129+ 9448 30 02            jr nc,9F
 130+ 944A 18 02        	jr 8F
 131+ 944C 1E 02        9 ld e,2
 132+ 944E C1           8 pop bc
 133+ 944F E1           10 pop hl
 134+ 9450 C9           5 ret
 135+ 9451
 136+ 9451              ; --------------------
 137+ 9451              ;
 138+ 9451              ; 25/08/22
 139+ 9451
 140+ 9451 CD A5 99     Comprueba_centro call calcula_tercio
 141+ 9454 67               ld h,a
 142+ 9455 08           	ex af,af
 143+ 9456 FE 02        	cp 2
 144+ 9458 38 07        	jr c,1F
 145+ 945A 28 05        	jr z,1F
 146+ 945C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 945F 18 03        	jr 2F
 148+ 9461 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9464 08           2 ex af,af
 150+ 9465 A7               and a
 151+ 9466 ED 42            sbc hl,bc
 152+ 9468 C9               ret
 153+ 9469
 154+ 9469              ; *********************************************************************************************************************************************************************************************
 155+ 9469              ;
 156+ 9469              ;   16/8/22
 157+ 9469              ;
 158+ 9469              ;	Comprueba_limite_vertical
 159+ 9469              ;
 160+ 9469              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9469              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9469              ;
 163+ 9469
 164+ 9469 2A D6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 946C 7D           	ld a,l
 166+ 946D E6 1F        	and $1F
 167+ 946F 57           	ld d,a
 168+ 9470 3A 14 89     	ld a,(Limite_vertical)
 169+ 9473 BA           	cp d 											; Límite - Posición.
 170+ 9474 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9475 3A E8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9478 CB 47        	bit 0,a
 173+ 947A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 947C
 175+ 947C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 947C
 177+ 947C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 947D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 947F
 180+ 947F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 947F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 947F
 183+ 947F 3A DA 88         ld a,(Coordenada_X)
 184+ 9482 16 0F            ld d,Centro_izquierda
 185+ 9484 A7               and a
 186+ 9485 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9486 28 1E            jr z,3F
 188+ 9488 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 948A              ;                                                    ; _salimos sin modificar nada.
 190+ 948A 18 0E            jr 2F
 191+ 948C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 948D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 948F
 194+ 948F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 948F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 948F
 197+ 948F 3A DA 88         ld a,(Coordenada_X)
 198+ 9492 16 10            ld d,Centro_derecha
 199+ 9494 A7               and a
 200+ 9495 92               sub d
 201+ 9496 28 0E            jr z,3F
 202+ 9498 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 949A              ;                                                    ; _salimos sin modificar nada.
 204+ 949A CB 43        2 bit 0,e
 205+ 949C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 949E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 949F CD 33 95         call Modificaccionne
 208+ 94A2 C1           	pop bc
 209+ 94A3 CD 43 95         call Inicializacion
 210+ 94A6 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 94A7
 212+ 94A7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 94A7
 214+ 94A7 C5           4 push bc
 215+ 94A8 01 D5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94AB 0A           	ld a,(bc)
 217+ 94AC 3D           	dec a
 218+ 94AD 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94AE 7D           	ld a,l
 220+ 94AF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94B0 CB 47        	bit 0,a
 222+ 94B2 28 03        	jr z,5F
 223+ 94B4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94B5 18 2E        	jr 7F
 225+ 94B7
 226+ 94B7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94B7
 228+ 94B7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94B8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94B9 3A 04 89     	ld a,(Ctrl_0)
 231+ 94BC CB 4F        	bit 1,a
 232+ 94BE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94C0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94C1
 235+ 94C1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94C1
 237+ 94C1 1C               inc e
 238+ 94C2 1D               dec e
 239+ 94C3 20 07            jr nz,12F
 240+ 94C5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94C6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94C7 22 D6 88     	ld (Posicion_actual),hl
 243+ 94CA 18 44        13 jr 9F
 244+ 94CC CB 43        12 bit 0,e
 245+ 94CE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94D0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94D0 C1           	pop bc
 248+ 94D1 18 D3        	jr 3B
 249+ 94D3 80           14 add b
 250+ 94D4 6F               ld l,a
 251+ 94D5 22 D6 88     	ld (Posicion_actual),hl
 252+ 94D8 CD 33 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 94DB 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 94DD E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 94DF 32 04 89         ld (Ctrl_0),a
 256+ 94E2 F1           	pop af
 257+ 94E3 18 2B        	jr 9F
 258+ 94E5
 259+ 94E5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 94E5
 261+ 94E5 F5           7 push af
 262+ 94E6 3A 04 89     	ld a,(Ctrl_0)
 263+ 94E9 CB 47        	bit 0,a
 264+ 94EB 20 1D        	jr nz,8F
 265+ 94ED F1           	pop af
 266+ 94EE
 267+ 94EE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 94EE
 269+ 94EE 1C           	inc e
 270+ 94EF 1D               dec e
 271+ 94F0 20 07            jr nz,10F
 272+ 94F2 90           	sub b
 273+ 94F3 6F               ld l,a
 274+ 94F4 22 D6 88     	ld (Posicion_actual),hl
 275+ 94F7 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 94F9              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 94F9 CB 43        10 bit 0,e
 278+ 94FB 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 94FD              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 94FD C1           	pop bc
 281+ 94FE 18 A6        	jr 3B
 282+ 9500 90           16 sub b
 283+ 9501 6F               ld l,a
 284+ 9502 22 D6 88     	ld (Posicion_actual),hl
 285+ 9505 CD 33 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9508 18 06            jr 9F
 287+ 950A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 950C 32 04 89         ld (Ctrl_0),a
 289+ 950F F1           	pop af
 290+ 9510 C1           9 pop bc
 291+ 9511 1E 00        	ld e,0
 292+ 9513 CD 43 95         call Inicializacion
 293+ 9516 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9517 08           	ex af,af
 295+ 9518 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9519 18 8B            jr 3B
 297+ 951B
 298+ 951B              ; --------------------
 299+ 951B
 300+ 951B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 951D CD A1 96     1 call PreviousScan
 302+ 9520 10 FB            djnz 1B
 303+ 9522 22 D6 88     	ld (Posicion_actual),hl
 304+ 9525 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9526 C9           	ret
 306+ 9527
 307+ 9527              ; --------------------
 308+ 9527
 309+ 9527 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9529 CD 92 96     1 call NextScan
 311+ 952C 10 FB            djnz 1B
 312+ 952E 22 D6 88     	ld (Posicion_actual),hl
 313+ 9531 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9532 C9           	ret
 315+ 9533
 316+ 9533              ; --------------------
 317+ 9533              ;
 318+ 9533              ;	22/01/23
 319+ 9533              ;
 320+ 9533              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9533              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9533              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9533
 324+ 9533
 325+ 9533              Modificaccionne
 326+ 9533
 327+ 9533 3A E8 88     	ld a,(Cuad_objeto)
 328+ 9536 FE 02        	cp 2
 329+ 9538 CC 1B 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 953B DC 1B 95         call c,Modifica_Pos_actual
 331+ 953E C8           	ret z
 332+ 953F CD 27 95         call Modifica_Pos_actual2
 333+ 9542 C9               ret
 334+ 9543
 335+ 9543              ; *************************************************************************************************************************************************************************************************
 336+ 9543              ;
 337+ 9543              ;	13/8/22
 338+ 9543              ;
 339+ 9543              ;	Inicializacion
 340+ 9543              ;
 341+ 9543              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9543              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9543              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9543              ;
 345+ 9543              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9543              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9543              ;	_ desaparece/aparece.
 348+ 9543
 349+ 9543              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9543              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9543              ;
 352+ 9543              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9543              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9543              ; 		   [E] ="0"
 355+ 9543
 356+ 9543              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9543
 358+ 9543 CD A5 99     Inicializacion call calcula_tercio
 359+ 9546 28 36        	jr z,primit
 360+ 9548 E6 02        	and 2
 361+ 954A 20 07        	jr nz,segmit
 362+ 954C 7D           	ld a,l
 363+ 954D FE 7F        	cp $7f
 364+ 954F 38 2D        	jr c,primit
 365+ 9551 28 2B        	jr z,primit
 366+ 9553 CD B0 95     segmit call column
 367+ 9556 38 13        	jr c,tercuad
 368+ 9558 3E 04        cuarcuad ld a,4
 369+ 955A 32 E8 88     	ld (Cuad_objeto),a
 370+ 955D 21 20 48     	ld hl,$4820
 371+ 9560 22 12 89     	ld (Limite_horizontal),hl
 372+ 9563 21 14 89     	ld hl,Limite_vertical
 373+ 9566 36 0D        	ld (hl),$0d
 374+ 9568 08           	ex af,af
 375+ 9569 18 3C        	jr 1F
 376+ 956B              tercuad
 377+ 956B 3E 03        	ld a,3
 378+ 956D 32 E8 88     	ld (Cuad_objeto),a
 379+ 9570 21 20 48     	ld hl,$4820
 380+ 9573 22 12 89     	ld (Limite_horizontal),hl
 381+ 9576 21 14 89     	ld hl,Limite_vertical
 382+ 9579 36 12        	ld (hl),$12
 383+ 957B 08           	ex af,af
 384+ 957C 18 29        	jr 1F
 385+ 957E CD B0 95     primit call column
 386+ 9581 38 13        	jr c, primcuad
 387+ 9583              segcuad
 388+ 9583 3E 02        	ld a,2
 389+ 9585 32 E8 88     	ld (Cuad_objeto),a
 390+ 9588 21 C0 4F     	ld hl,$4fc0
 391+ 958B 22 12 89     	ld (Limite_horizontal),hl
 392+ 958E 21 14 89     	ld hl,Limite_vertical
 393+ 9591 36 0D        	ld (hl),$0d
 394+ 9593 08           	ex af,af
 395+ 9594 18 11        	jr 1F
 396+ 9596              primcuad
 397+ 9596 3E 01        	ld a,1
 398+ 9598 32 E8 88     	ld (Cuad_objeto),a
 399+ 959B 21 C0 4F     	ld hl,$4fc0
 400+ 959E 22 12 89     	ld (Limite_horizontal),hl
 401+ 95A1 21 14 89     	ld hl,Limite_vertical
 402+ 95A4 36 12        	ld (hl),$12
 403+ 95A6 08           	ex af,af
 404+ 95A7 CD 54 9D     1 call Genera_coordenadas
 405+ 95AA 21 04 89     	ld hl,Ctrl_0
 406+ 95AD CB EE        	set 5,(hl)
 407+ 95AF C9           	ret
 408+ 95B0
 409+ 95B0              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95B0
 411+ 95B0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95B0              ;
 413+ 95B0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95B0
 415+ 95B0 7D           column ld a,l
 416+ 95B1 E6 1F        	and $1f
 417+ 95B3 FE 10         	cp $10
 418+ 95B5 C9            	ret
 419+ 95B6
 420+ 95B6              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95B6              ;
 422+ 95B6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95B6              ;
 424+ 95B6              ; 14/12/22
 425+ 95B6              ;
 426+ 95B6              ;	Modifica: A y BC.
 427+ 95B6
 428+ 95B6 3A E8 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95B9 E6 01        	and 1
 430+ 95BB 28 17        	jr z,1F
 431+ 95BD
 432+ 95BD              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95BD
 434+ 95BD 3A DA 88     	ld a,(Coordenada_X)
 435+ 95C0 47           	ld b,a
 436+ 95C1 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95C2 79           	ld a,c
 438+ 95C3 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95C4 38 08        	jr c,2F
 440+ 95C6 47           	ld b,a
 441+ 95C7 79           	ld a,c
 442+ 95C8 90           	sub b
 443+ 95C9 32 11 89     	ld (Columnas),a
 444+ 95CC 18 1B        	jr 4F
 445+ 95CE 79           2 ld a,c
 446+ 95CF 32 11 89     	ld (Columnas),a
 447+ 95D2 18 15        	jr 4F
 448+ 95D4
 449+ 95D4              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95D4
 451+ 95D4 3A DA 88     1 ld a,(Coordenada_X)
 452+ 95D7 81           	add c
 453+ 95D8 3D           	dec a
 454+ 95D9 D6 1F        	sub $1f
 455+ 95DB 38 08        	jr c,3F
 456+ 95DD 47           	ld b,a
 457+ 95DE 79           	ld a,c
 458+ 95DF 90           	sub b
 459+ 95E0 32 11 89     	ld (Columnas),a
 460+ 95E3 18 04        	jr 4F
 461+ 95E5 79           3 ld a,c
 462+ 95E6 32 11 89     	ld (Columnas),a
 463+ 95E9 D9           4 exx
 464+ 95EA 4F           	ld c,a
 465+ 95EB D9           	exx
 466+ 95EC C9            ret
 467+ 95ED
 468+ 95ED              ; --------------------------------------------------------------------------------------------------------------------
 469+ 95ED              ;
 470+ 95ED              ;   19/7/23
 471+ 95ED              ;
 472+ 95ED              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 95ED              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 95ED              ;
 475+ 95ED              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 95ED              ;			HL e IY Contienen (Puntero_objeto).
 477+ 95ED              ;
 478+ 95ED              ;	DESTRUYE: HL,B Y A.
 479+ 95ED
 480+ 95ED 3A E8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 95F0 FE 02        	cp 2
 482+ 95F2 38 18        	jr c,1F
 483+ 95F4 28 16        	jr z,1F
 484+ 95F6 E6 01        	and 1
 485+ 95F8 28 0D        	jr z,3F
 486+ 95FA
 487+ 95FA              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 95FA
 489+ 95FA CD 40 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 95FD
 491+ 95FD 7D           9 ld a,l
 492+ 95FE E6 1F        	and $1f
 493+ 9600 28 2A        	jr z,7F
 494+ 9602 2B           	dec hl
 495+ 9603 10 F8        	djnz 9B
 496+ 9605 18 25        	jr 7F
 497+ 9607
 498+ 9607              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 9607
 500+ 9607 2A D6 88     3 ld hl,(Posicion_actual)
 501+ 960A 18 20        	jr 7F
 502+ 960C
 503+ 960C 28 14        1 jr z,2F
 504+ 960E
 505+ 960E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 960E
 507+ 960E CD 40 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9611
 509+ 9611 7D           4 ld a,l
 510+ 9612 E6 1F        	and $1f
 511+ 9614 28 03        	jr z,6F
 512+ 9616 2B           	dec hl
 513+ 9617 10 F8        	djnz 4B
 514+ 9619 06 0F        6 ld b,15
 515+ 961B CD A1 96     5 call PreviousScan
 516+ 961E 10 FB        	djnz 5B
 517+ 9620 18 0A        	jr 7F
 518+ 9622
 519+ 9622              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 9622
 521+ 9622 CD 40 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 9625 06 0F        	ld b,15
 523+ 9627 CD A1 96     8 call PreviousScan
 524+ 962A 10 FB        	djnz 8B
 525+ 962C
 526+ 962C E5           7 push hl
 527+ 962D DD E1        	pop ix
 528+ 962F
 529+ 962F 2A D8 88     	ld hl,(Puntero_objeto)
 530+ 9632 E5           	push hl
 531+ 9633 FD E1        	pop iy
 532+ 9635
 533+ 9635              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 9635
 535+ 9635 3A 04 89     	ld a,(Ctrl_0)
 536+ 9638 CB 77        	bit 6,a
 537+ 963A C8           	ret z
 538+ 963B
 539+ 963B              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 963B              ; _ entidad / Amadeus´.
 541+ 963B
 542+ 963B DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 963F
 544+ 963F C9           	ret
 545+ 9640
 546+ 9640              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9640              ;
 548+ 9640              ;	2/1/23
 549+ 9640              ;
 550+ 9640              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9640              ;
 552+ 9640              ;	Tras esta rutina tenemos:
 553+ 9640              ;
 554+ 9640              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9640              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9640              ;
 557+ 9640              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9640
 559+ 9640 2A D6 88     Operandos ld hl,(Posicion_actual)
 560+ 9643 3A 11 89     	ld a,(Columnas)
 561+ 9646 3D           	dec a
 562+ 9647 20 01        	jr nz,1F
 563+ 9649 3C           	inc a
 564+ 964A 47           1 ld b,a
 565+ 964B C9           	ret
 566+ 964C
 567+ 964C              ; --------------------------------------------------------------------------------------------------------------------
 568+ 964C              ;
 569+ 964C              ;	3/1/23
 570+ 964C              ;
 571+ 964C              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 964C              ;
 573+ 964C              ;	Destruye: A,B,HL y DE.
 574+ 964C
 575+ 964C              Define_rutina_de_impresion
 576+ 964C
 577+ 964C 3A D5 88     	ld a,(Columns)
 578+ 964F 47           	ld b,a
 579+ 9650 3A 11 89     	ld a,(Columnas)
 580+ 9653 B8           	cp b
 581+ 9654 20 0D        	jr nz,2f
 582+ 9656
 583+ 9656              ;	La entidad se imprime entera.
 584+ 9656
 585+ 9656 21 75 97     	ld hl, Indice_entidades_completas
 586+ 9659 E6 01        	and 1
 587+ 965B 28 02        	jr z,1F
 588+ 965D
 589+ 965D 23           	inc hl
 590+ 965E 23           	inc hl
 591+ 965F
 592+ 965F CD 26 8D     1 call Extrae_address
 593+ 9662 C9           	ret		;	ret
 594+ 9663
 595+ 9663              ;	La entidad no se imprime entera en pantalla.
 596+ 9663
 597+ 9663 3A E8 88     2 ld a,(Cuad_objeto)
 598+ 9666 E6 01        	and 1
 599+ 9668 28 17        	jr z,3F
 600+ 966A
 601+ 966A              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 966A
 603+ 966A 21 79 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 966D 3A D5 88     4 ld a,(Columns)
 605+ 9670 E6 01        	and 1
 606+ 9672 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 9674
 608+ 9674 23           	inc hl
 609+ 9675 23           	inc hl
 610+ 9676
 611+ 9676 3A 11 89     	ld a,(Columnas)
 612+ 9679 E6 01        	and 1
 613+ 967B 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 967D
 615+ 967D 23           	inc hl
 616+ 967E 23           	inc hl
 617+ 967F
 618+ 967F 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9681
 620+ 9681 21 7F 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 9684 18 E7        	jr 4B
 622+ 9686
 623+ 9686              ; --------------------------------------------------------------------------------------------------------------------
 624+ 9686              ;
 625+ 9686              ;	Prepara_draw
 626+ 9686              ;
 627+ 9686              ;	Es una rutina de carga.
 628+ 9686              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 9686              ;
 630+ 9686              ;	FUNCIONAMIENTO:
 631+ 9686              ;
 632+ 9686              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 9686              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 9686              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 9686              ;
 636+ 9686              ;	DESTRUYE:
 637+ 9686              ;
 638+ 9686              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 9686
 640+ 9686 21 D4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 9689 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 968A 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 968B 4E           	ld c,(hl)
 644+ 968C 2A D6 88     	ld hl,(Posicion_actual)
 645+ 968F 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 9691 C9           	ret
 647+ 9692
 648+ 9692              ;----------------------------------------------------------------------------------------------------------------
 649+ 9692              ;
 650+ 9692              ;	5/08/22
 651+ 9692              ;
 652+ 9692              ;   NextScan.
 653+ 9692              ;
 654+ 9692              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 9692              ;
 656+ 9692              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 9692              ;
 658+ 9692              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 9692              ;
 660+ 9692              ;       DESTRUIDOS: AF y HL !!!
 661+ 9692              ;
 662+ 9692              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 9692              ;
 664+ 9692
 665+ 9692 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 9693 7C               ld a,h
 667+ 9694 E6 07            and 7
 668+ 9696 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 9697
 670+ 9697 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 9698 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 969A 6F               ld l,a
 673+ 969B D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 969C
 675+ 969C 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 969D D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 969F 67               ld h,a
 678+ 96A0 C9               ret
 679+ 96A1
 680+ 96A1              ;----------------------------------------------------------------------------------------------------------------
 681+ 96A1              ;
 682+ 96A1              ;	5/08/22
 683+ 96A1              ;
 684+ 96A1              ;   PreviousScan.
 685+ 96A1              ;
 686+ 96A1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 96A1              ;
 688+ 96A1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 96A1              ;
 690+ 96A1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 96A1              ;
 692+ 96A1              ;       DESTRUIDOS: AF y HL !!!
 693+ 96A1              ;
 694+ 96A1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 96A1              ;
 696+ 96A1
 697+ 96A1 7C           PreviousScan ld a,h
 698+ 96A2 25               dec h               ; Dec H.
 699+ 96A3 E6 07            and 7
 700+ 96A5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 96A6
 702+ 96A6 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 96A7 D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96A9 6F               ld l,a
 705+ 96AA D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96AB
 707+ 96AB 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96AC C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96AE 67               ld h,a
 710+ 96AF C9               ret
 711+ 96B0
 712+ 96B0              ; -----------------------------------------------------------------------------------
 713+ 96B0              ;
 714+ 96B0              ;	31/7/23
 715+ 96B0              ;
 716+ 96B0              ;	Rutina principal de pintado de entidades.
 717+ 96B0              ;	Extrae la foto del frame, (entidades).
 718+ 96B0
 719+ 96B0              Extrae_foto_entidades
 720+ 96B0
 721+ 96B0 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96B3 7E           	ld a,(hl)
 723+ 96B4 A7           	and a
 724+ 96B5 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96B6
 726+ 96B6              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96B6
 728+ 96B6 3A 23 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96B9 A7           	and a
 730+ 96BA C8           	ret z
 731+ 96BB
 732+ 96BB              ; -----------------------------------
 733+ 96BB
 734+ 96BB ED 73 28 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96BF 31 00 70     	ld sp,Album_de_fotos
 736+ 96C2
 737+ 96C2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96C4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96C5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96C6
 741+ 96C6 ED 73 2A 89  	ld (Stack_2),sp
 742+ 96CA ED 7B 28 89  	ld sp,(Stack)
 743+ 96CE
 744+ 96CE              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96CE
 746+ 96CE 3E CD        	ld a,$cd
 747+ 96D0 32 D8 96     	ld (Imprime),a
 748+ 96D3 EB           	ex de,hl
 749+ 96D4 22 D9 96     	ld (Imprime+1),hl
 750+ 96D7 EB           	ex de,hl
 751+ 96D8
 752+ 96D8              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96D8
 754+ 96D8 00 00 00     Imprime db 0,0,0
 755+ 96DB
 756+ 96DB ED 73 28 89  	ld (Stack),sp
 757+ 96DF
 758+ 96DF 3A 23 89     	ld a,(Numero_de_malotes)
 759+ 96E2 3D           	dec a
 760+ 96E3 28 09        	jr z,1F
 761+ 96E5 32 23 89      	ld (Numero_de_malotes),a
 762+ 96E8
 763+ 96E8 ED 7B 2A 89  	ld sp,(Stack_2)
 764+ 96EC 18 D4        	jr 2B
 765+ 96EE
 766+ 96EE AF           1 xor a
 767+ 96EF 32 2A 89     	ld (Stack_2),a
 768+ 96F2
 769+ 96F2 C9           	ret
 770+ 96F3
 771+ 96F3              ; -----------------------------------------------------------------------------------
 772+ 96F3              ;
 773+ 96F3              ;	28/2/23
 774+ 96F3              ;
 775+ 96F3              ;	Pinta los disparos generados.
 776+ 96F3
 777+ 96F3              Extrae_foto_disparos
 778+ 96F3
 779+ 96F3 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 96F6 7E               ld a,(hl)
 781+ 96F7 A7               and a
 782+ 96F8 C8               ret z
 783+ 96F9
 784+ 96F9 3A 37 89     	ld a,(Numero_de_disparotes)
 785+ 96FC A7           	and a
 786+ 96FD C8           	ret z
 787+ 96FE ED 73 28 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9702 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 9705
 790+ 9705 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 9707 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 9708 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9709
 794+ 9709 ED 73 2A 89  	ld (Stack_2),sp
 795+ 970D ED 7B 28 89  	ld sp,(Stack)
 796+ 9711
 797+ 9711              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9711
 799+ 9711 3E CD        	ld a,$cd
 800+ 9713 32 1B 97     	ld (Imprime2),a
 801+ 9716 EB           	ex de,hl
 802+ 9717 22 1C 97     	ld (Imprime2+1),hl
 803+ 971A EB           	ex de,hl
 804+ 971B
 805+ 971B              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 971B
 807+ 971B 00 00 00     Imprime2 db 0,0,0
 808+ 971E
 809+ 971E 3A 37 89     	ld a,(Numero_de_disparotes)
 810+ 9721 3D           	dec a
 811+ 9722 28 09        	jr z,1F
 812+ 9724 32 37 89      	ld (Numero_de_disparotes),a
 813+ 9727
 814+ 9727 ED 7B 2A 89  	ld sp,(Stack_2)
 815+ 972B 18 D8        	jr 2B
 816+ 972D
 817+ 972D AF           1 xor a
 818+ 972E 32 2A 89     	ld (Stack_2),a
 819+ 9731 C9           	ret
 820+ 9732
 821+ 9732              ; -----------------------------------------------------------------------------------
 822+ 9732              ;
 823+ 9732              ;	4/9/23
 824+ 9732              ;
 825+ 9732              ;	Rutina principal de pintado de Amadeus.
 826+ 9732              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 9732
 828+ 9732 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 9735 7E           	ld a,(hl)
 830+ 9736 A7           	and a
 831+ 9737 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 9738
 833+ 9738 3A 23 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 973B A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 973C C8           	ret z
 836+ 973D
 837+ 973D              ; -----------------------------------
 838+ 973D
 839+ 973D ED 73 28 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9741 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 9744
 842+ 9744 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 9746 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 9747 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 9748
 846+ 9748 ED 73 2A 89  	ld (Stack_2),sp
 847+ 974C ED 7B 28 89  	ld sp,(Stack)
 848+ 9750
 849+ 9750              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9750
 851+ 9750 3E CD        	ld a,$cd
 852+ 9752 32 5A 97     	ld (Imprime_Amadeus),a
 853+ 9755 EB           	ex de,hl
 854+ 9756 22 5B 97     	ld (Imprime_Amadeus+1),hl
 855+ 9759 EB           	ex de,hl
 856+ 975A
 857+ 975A              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 975A
 859+ 975A 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 975D
 861+ 975D ED 73 28 89  	ld (Stack),sp
 862+ 9761
 863+ 9761 3A 23 89     	ld a,(Numero_de_malotes)
 864+ 9764 3D           	dec a
 865+ 9765 28 09        	jr z,1F
 866+ 9767 32 23 89      	ld (Numero_de_malotes),a
 867+ 976A
 868+ 976A ED 7B 2A 89  	ld sp,(Stack_2)
 869+ 976E 18 D4        	jr 2B
 870+ 9770
 871+ 9770 AF           1 xor a
 872+ 9771 32 2A 89     	ld (Stack_2),a
 873+ 9774
 874+ 9774 C9           	ret
# file closed: Draw_XOR.asm
1804  9775              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9775              ;   índices de Rutinas de impresión.
   2+ 9775
   3+ 9775 85 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9777 B2 97            defw Pinta_Amadeus_3x2
   5+ 9779
   6+ 9779 08 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 977B A8 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 977D 5C 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 977F
  10+ 977F 32 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9781 36 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9783 EA 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9785
  14+ 9785
  15+ 9785              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9785              ;
  17+ 9785              ;   12/12/22
  18+ 9785              ;
  19+ 9785              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9785              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9785              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9785              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9785              ;
  24+ 9785              ;   Modifica: DE y HL.
  25+ 9785
  26+ 9785 ED 73 28 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9789 FD F9        	ld sp,iy
  28+ 978B 06 10            ld b,16
  29+ 978D D1           1 pop de
  30+ 978E 7B               ld a,e
  31+ 978F AE               xor (hl)
  32+ 9790 77           	ld (hl),a
  33+ 9791 23           	inc hl
  34+ 9792 7A               ld a,d
  35+ 9793 AE               xor (hl)
  36+ 9794 77           	ld (hl),a
  37+ 9795 2B           	dec hl
  38+ 9796 24           	inc h
  39+ 9797 7C               ld a,h
  40+ 9798 E6 07            and 7
  41+ 979A 20 0A            jr nz,2F
  42+ 979C 7D               ld a,l
  43+ 979D C6 20            add a,$20
  44+ 979F 6F               ld l,a
  45+ 97A0 38 04            jr c,2F
  46+ 97A2 7C               ld a,h
  47+ 97A3 D6 08            sub 8
  48+ 97A5 67               ld h,a
  49+ 97A6 7C           2 ld a,h
  50+ 97A7 FE 58            cp $58
  51+ 97A9 28 02            jr z,3F
  52+ 97AB 10 E0            djnz 1B
  53+ 97AD ED 7B 28 89  3 ld sp,(Stack)
  54+ 97B1 C9           	ret
  55+ 97B2
  56+ 97B2 ED 73 28 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97B6 FD F9        	ld sp,iy
  58+ 97B8 06 08            ld b,8
  59+ 97BA D1           1 pop de
  60+ 97BB 7B               ld a,e
  61+ 97BC AE               xor (hl)
  62+ 97BD 77           	ld (hl),a
  63+ 97BE 23           	inc hl
  64+ 97BF 7A               ld a,d
  65+ 97C0 AE               xor (hl)
  66+ 97C1 77           	ld (hl),a
  67+ 97C2 23           	inc hl
  68+ 97C3 D1           	pop de
  69+ 97C4 7B               ld a,e
  70+ 97C5 AE               xor (hl)
  71+ 97C6 77           	ld (hl),a
  72+ 97C7 2B           	dec hl
  73+ 97C8 2B           	dec hl
  74+ 97C9 24           	inc h
  75+ 97CA 7C               ld a,h
  76+ 97CB E6 07            and 7
  77+ 97CD 20 0A            jr nz,2F
  78+ 97CF 7D               ld a,l
  79+ 97D0 C6 20            add a,$20
  80+ 97D2 6F               ld l,a
  81+ 97D3 38 04            jr c,2F
  82+ 97D5 7C               ld a,h
  83+ 97D6 D6 08            sub 8
  84+ 97D8 67               ld h,a
  85+ 97D9 7C           2 ld a,h
  86+ 97DA FE 58            cp $58
  87+ 97DC 28 25            jr z,4F
  88+ 97DE 7A               ld a,d
  89+ 97DF AE               xor (hl)
  90+ 97E0 77               ld (hl),a
  91+ 97E1 D1           	pop de
  92+ 97E2 23           	inc hl
  93+ 97E3 7B               ld a,e
  94+ 97E4 AE               xor (hl)
  95+ 97E5 77           	ld (hl),a
  96+ 97E6 23           	inc hl
  97+ 97E7 7A               ld a,d
  98+ 97E8 AE               xor (hl)
  99+ 97E9 77           	ld (hl),a
 100+ 97EA 2B           	dec hl
 101+ 97EB 2B           	dec hl
 102+ 97EC 24           	inc h
 103+ 97ED 7C               ld a,h
 104+ 97EE E6 07            and 7
 105+ 97F0 20 0A            jr nz,3F
 106+ 97F2 7D               ld a,l
 107+ 97F3 C6 20            add a,$20
 108+ 97F5 6F               ld l,a
 109+ 97F6 38 04            jr c,3F
 110+ 97F8 7C               ld a,h
 111+ 97F9 D6 08            sub 8
 112+ 97FB 67               ld h,a
 113+ 97FC 7C           3 ld a,h
 114+ 97FD FE 58            cp $58
 115+ 97FF 28 02            jr z,4F
 116+ 9801 10 B7            djnz 1B
 117+ 9803 ED 7B 28 89  4 ld sp,(Stack)
 118+ 9807 C9           	ret
 119+ 9808
 120+ 9808              ; ---------------------------------------------------
 121+ 9808
 122+ 9808 ED 73 28 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 980C FD F9        	ld sp,iy
 124+ 980E
 125+ 980E              ; >>>
 126+ 980E
 127+ 980E 06 10            ld b,16
 128+ 9810 D1           1 pop de
 129+ 9811 7A           	ld a,d
 130+ 9812 AE           	xor (hl)
 131+ 9813 77           	ld (hl),a
 132+ 9814 24           	inc h
 133+ 9815 7C               ld a,h
 134+ 9816 E6 07            and 7
 135+ 9818 20 0C            jr nz,2F
 136+ 981A 7D               ld a,l
 137+ 981B C6 20            add a,$20
 138+ 981D 6F               ld l,a
 139+ 981E 38 06            jr c,2F
 140+ 9820 7C               ld a,h
 141+ 9821 D6 08            sub 8
 142+ 9823 67               ld h,a
 143+ 9824 18 00            jr 2F
 144+ 9826 7C           2 ld a,h
 145+ 9827 FE 58            cp $58
 146+ 9829 28 02            jr z,3F
 147+ 982B 10 E3            djnz 1B
 148+ 982D ED 7B 28 89  3 ld sp,(Stack)
 149+ 9831 C9           	ret
 150+ 9832
 151+ 9832 ED 73 28 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9836 FD F9        	ld sp,iy
 153+ 9838
 154+ 9838              ; >>>
 155+ 9838
 156+ 9838 06 10            ld b,16
 157+ 983A D1           1 pop de
 158+ 983B 7B           	ld a,e
 159+ 983C AE           	xor (hl)
 160+ 983D 77           	ld (hl),a
 161+ 983E 24           	inc h
 162+ 983F 7C               ld a,h
 163+ 9840 E6 07            and 7
 164+ 9842 20 0C            jr nz,2F
 165+ 9844 7D               ld a,l
 166+ 9845 C6 20            add a,$20
 167+ 9847 6F               ld l,a
 168+ 9848 38 06            jr c,2F
 169+ 984A 7C               ld a,h
 170+ 984B D6 08            sub 8
 171+ 984D 67               ld h,a
 172+ 984E 18 00            jr 2F
 173+ 9850 7C           2 ld a,h
 174+ 9851 FE 58            cp $58
 175+ 9853 28 02            jr z,3F
 176+ 9855 10 E3            djnz 1B
 177+ 9857 ED 7B 28 89  3 ld sp,(Stack)
 178+ 985B C9           	ret
 179+ 985C
 180+ 985C              ; ---------------------------------------------------
 181+ 985C
 182+ 985C ED 73 28 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9860 FD F9        	ld sp,iy
 184+ 9862 06 08            ld b,8
 185+ 9864 D1           1 pop de
 186+ 9865 7A           	ld a,d
 187+ 9866 AE           	xor (hl)
 188+ 9867 77           	ld (hl),a
 189+ 9868 23           	inc hl
 190+ 9869 D1           	pop de
 191+ 986A 7B           	ld a,e
 192+ 986B AE           	xor (hl)
 193+ 986C 77           	ld (hl),a
 194+ 986D 2B           	dec hl
 195+ 986E 24            	inc h
 196+ 986F 7C               ld a,h
 197+ 9870 E6 07            and 7
 198+ 9872 20 0A            jr nz,2F
 199+ 9874 7D               ld a,l
 200+ 9875 C6 20            add a,$20
 201+ 9877 6F               ld l,a
 202+ 9878 38 04            jr c,2F
 203+ 987A 7C               ld a,h
 204+ 987B D6 08            sub 8
 205+ 987D 67               ld h,a
 206+ 987E 7C           2 ld a,h
 207+ 987F FE 58            cp $58
 208+ 9881 28 20            jr z,4F
 209+ 9883 D1               pop de
 210+ 9884 7B           	ld a,e
 211+ 9885 AE           	xor (hl)
 212+ 9886 77           	ld (hl),a
 213+ 9887 23           	inc hl
 214+ 9888 7A           	ld a,d
 215+ 9889 AE           	xor (hl)
 216+ 988A 77           	ld (hl),a
 217+ 988B 2B           	dec hl
 218+ 988C 24           	inc h
 219+ 988D 7C               ld a,h
 220+ 988E E6 07            and 7
 221+ 9890 20 0A            jr nz,3F
 222+ 9892 7D               ld a,l
 223+ 9893 C6 20            add a,$20
 224+ 9895 6F               ld l,a
 225+ 9896 38 04            jr c,3F
 226+ 9898 7C               ld a,h
 227+ 9899 D6 08            sub 8
 228+ 989B 67               ld h,a
 229+ 989C 7C           3 ld a,h
 230+ 989D FE 58            cp $58
 231+ 989F 28 02            jr z,4F
 232+ 98A1 10 C1            djnz 1B
 233+ 98A3 ED 7B 28 89  4 ld sp,(Stack)
 234+ 98A7 C9           	ret
 235+ 98A8
 236+ 98A8 ED 73 28 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98AC FD F9        	ld sp,iy
 238+ 98AE 06 08            ld b,8
 239+ 98B0 D1           1 pop de
 240+ 98B1 D1           	pop de
 241+ 98B2 7B           	ld a,e
 242+ 98B3 AE           	xor (hl)
 243+ 98B4 77           	ld (hl),a
 244+ 98B5 24            	inc h
 245+ 98B6 7C               ld a,h
 246+ 98B7 E6 07            and 7
 247+ 98B9 20 0A            jr nz,2F
 248+ 98BB 7D               ld a,l
 249+ 98BC C6 20            add a,$20
 250+ 98BE 6F               ld l,a
 251+ 98BF 38 04            jr c,2F
 252+ 98C1 7C               ld a,h
 253+ 98C2 D6 08            sub 8
 254+ 98C4 67               ld h,a
 255+ 98C5 7C           2 ld a,h
 256+ 98C6 FE 58            cp $58
 257+ 98C8 28 1B            jr z,4F
 258+ 98CA D1               pop de
 259+ 98CB 7A           	ld a,d
 260+ 98CC AE           	xor (hl)
 261+ 98CD 77           	ld (hl),a
 262+ 98CE 24           	inc h
 263+ 98CF 7C               ld a,h
 264+ 98D0 E6 07            and 7
 265+ 98D2 20 0A            jr nz,3F
 266+ 98D4 7D               ld a,l
 267+ 98D5 C6 20            add a,$20
 268+ 98D7 6F               ld l,a
 269+ 98D8 38 04            jr c,3F
 270+ 98DA 7C               ld a,h
 271+ 98DB D6 08            sub 8
 272+ 98DD 67               ld h,a
 273+ 98DE 7C           3 ld a,h
 274+ 98DF FE 58            cp $58
 275+ 98E1 28 02            jr z,4F
 276+ 98E3 10 CB            djnz 1B
 277+ 98E5 ED 7B 28 89  4 ld sp,(Stack)
 278+ 98E9 C9           	ret
 279+ 98EA
 280+ 98EA ED 73 28 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98EE FD F9        	ld sp,iy
 282+ 98F0 06 08            ld b,8
 283+ 98F2 D1           1 pop de
 284+ 98F3 7B           	ld a,e
 285+ 98F4 AE           	xor (hl)
 286+ 98F5 77           	ld (hl),a
 287+ 98F6 23           	inc hl
 288+ 98F7 7A           	ld a,d
 289+ 98F8 AE           	xor (hl)
 290+ 98F9 77           	ld (hl),a
 291+ 98FA 2B           	dec hl
 292+ 98FB 24             	inc h
 293+ 98FC 7C               ld a,h
 294+ 98FD E6 07            and 7
 295+ 98FF 20 0A            jr nz,2F
 296+ 9901 7D               ld a,l
 297+ 9902 C6 20            add a,$20
 298+ 9904 6F               ld l,a
 299+ 9905 38 04            jr c,2F
 300+ 9907 7C               ld a,h
 301+ 9908 D6 08            sub 8
 302+ 990A 67               ld h,a
 303+ 990B 7C           2 ld a,h
 304+ 990C FE 58            cp $58
 305+ 990E 28 21            jr z,4F
 306+ 9910 D1               pop de
 307+ 9911 7A           	ld a,d
 308+ 9912 AE           	xor (hl)
 309+ 9913 77           	ld (hl),a
 310+ 9914 23           	inc hl
 311+ 9915 D1               pop de
 312+ 9916 7B           	ld a,e
 313+ 9917 AE           	xor (hl)
 314+ 9918 77           	ld (hl),a
 315+ 9919 2B           	dec hl
 316+ 991A 24           	inc h
 317+ 991B 7C               ld a,h
 318+ 991C E6 07            and 7
 319+ 991E 20 0A            jr nz,3F
 320+ 9920 7D               ld a,l
 321+ 9921 C6 20            add a,$20
 322+ 9923 6F               ld l,a
 323+ 9924 38 04            jr c,3F
 324+ 9926 7C               ld a,h
 325+ 9927 D6 08            sub 8
 326+ 9929 67               ld h,a
 327+ 992A 7C           3 ld a,h
 328+ 992B FE 58            cp $58
 329+ 992D 28 02            jr z,4F
 330+ 992F 10 C1            djnz 1B
 331+ 9931 ED 7B 28 89  4 ld sp,(Stack)
 332+ 9935 C9           	ret
 333+ 9936
 334+ 9936 ED 73 28 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 993A FD F9        	ld sp,iy
 336+ 993C 06 08            ld b,8
 337+ 993E D1           1 pop de
 338+ 993F 7B           	ld a,e
 339+ 9940 AE           	xor (hl)
 340+ 9941 77           	ld (hl),a
 341+ 9942 24            	inc h
 342+ 9943 7C               ld a,h
 343+ 9944 E6 07            and 7
 344+ 9946 20 0A            jr nz,2F
 345+ 9948 7D               ld a,l
 346+ 9949 C6 20            add a,$20
 347+ 994B 6F               ld l,a
 348+ 994C 38 04            jr c,2F
 349+ 994E 7C               ld a,h
 350+ 994F D6 08            sub 8
 351+ 9951 67               ld h,a
 352+ 9952 7C           2 ld a,h
 353+ 9953 FE 58            cp $58
 354+ 9955 28 1C            jr z,4F
 355+ 9957 D1               pop de
 356+ 9958 7A           	ld a,d
 357+ 9959 AE           	xor (hl)
 358+ 995A 77           	ld (hl),a
 359+ 995B 24           	inc h
 360+ 995C 7C               ld a,h
 361+ 995D E6 07            and 7
 362+ 995F 20 0A            jr nz,3F
 363+ 9961 7D               ld a,l
 364+ 9962 C6 20            add a,$20
 365+ 9964 6F               ld l,a
 366+ 9965 38 04            jr c,3F
 367+ 9967 7C               ld a,h
 368+ 9968 D6 08            sub 8
 369+ 996A 67               ld h,a
 370+ 996B 7C           3 ld a,h
 371+ 996C FE 58            cp $58
 372+ 996E 28 03            jr z,4F
 373+ 9970 D1               pop de
 374+ 9971 10 CB            djnz 1B
 375+ 9973 ED 7B 28 89  4 ld sp,(Stack)
 376+ 9977 C9           	ret
 377+ 9978
 378+ 9978              ; ---------------------------------------------------
 379+ 9978              ;
 380+ 9978              ;   27/02/23
 381+ 9978              ;
 382+ 9978              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9978              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9978              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9978
 386+ 9978 ED 73 28 89  Pinta_Disparo ld (Stack),sp
 387+ 997C FD F9            ld sp,iy
 388+ 997E 06 03            ld b,3
 389+ 9980 D1           1 pop de
 390+ 9981 7B               ld a,e
 391+ 9982 AE               xor (hl)
 392+ 9983 77               ld (hl),a
 393+ 9984 23               inc hl
 394+ 9985 7A               ld a,d
 395+ 9986 AE               xor (hl)
 396+ 9987 77               ld (hl),a
 397+ 9988 2B               dec hl
 398+ 9989
 399+ 9989 24               inc h
 400+ 998A 7C               ld a,h
 401+ 998B E6 07            and 7
 402+ 998D 20 0A            jr nz,2F
 403+ 998F 7D               ld a,l
 404+ 9990 C6 20            add a,$20
 405+ 9992 6F               ld l,a
 406+ 9993 38 04            jr c,2F
 407+ 9995 7C               ld a,h
 408+ 9996 D6 08            sub 8
 409+ 9998 67               ld h,a
 410+ 9999 7C           2 ld a,h
 411+ 999A FE 58            cp $58
 412+ 999C 28 02            jr z,3F
 413+ 999E
 414+ 999E 10 E0            djnz 1B
 415+ 99A0 ED 7B 28 89  3 ld sp,(Stack)
 416+ 99A4 C9               ret
 417+ 99A5
# file closed: Rutinas_de_impresion_sprites.asm
1805  99A5              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99A5              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99A5              ;
   3+ 99A5              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99A5              ;
   5+ 99A5              ; *****************************************************************************************************************************************************************************************
   6+ 99A5              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99A5
   8+ 99A5 7C           calcula_tercio ld a,h
   9+ 99A6 E6 18        	and $18
  10+ 99A8 CB 2F        	sra a
  11+ 99AA CB 2F        	sra a
  12+ 99AC CB 2F        	sra a
  13+ 99AE C9           	ret
  14+ 99AF
# file closed: calcula_tercio.asm
1806  99AF              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99AF              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99AF              ;
   3+ 99AF              ;
   4+ 99AF              ;	CLS.
   5+ 99AF              ;
   6+ 99AF              ;	Limpia la pantalla y define sus atributos.
   7+ 99AF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99AF              ;
   9+ 99AF              ;	COLORES: 0 ..... NEGRO
  10+ 99AF              ;    		 1 ..... AZUL
  11+ 99AF              ; 			 2 ..... ROJO
  12+ 99AF              ;			 3 ..... MAGENTA
  13+ 99AF              ; 			 4 ..... VERDE
  14+ 99AF              ; 			 5 ..... CIAN
  15+ 99AF              ;			 6 ..... AMARILLO
  16+ 99AF              ; 			 7 ..... BLANCO
  17+ 99AF              ;
  18+ 99AF              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99AF              ;
  20+ 99AF              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99AF
  22+ 99AF
  23+ 99AF 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99B2 11 01 40     	LD DE,$4001
  25+ 99B5 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99B8 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99BA ED B0        	LDIR
  28+ 99BC 01 FF 02     	LD BC,767
  29+ 99BF 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99C0 ED B0        	LDIR
  31+ 99C2 C9           	ret
  32+ 99C3
# file closed: Cls.asm
1807  99C3              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99C3              ; ******************************************************************************************************************************************************************************************
   2+ 99C3              ;
   3+ 99C3              ;   20/05/23
   4+ 99C3              ;
   5+ 99C3              ;	Recompone_posicion_inicio
   6+ 99C3              ;
   7+ 99C3              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99C3              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99C3              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99C3              ;	_ a una u otra rutina.
  11+ 99C3
  12+ 99C3              Recompone_posicion_inicio
  13+ 99C3
  14+ 99C3 2A E6 88     	ld hl,(Posicion_inicio)
  15+ 99C6 7D           	ld a,l
  16+ 99C7 E6 1F        	and $1f
  17+ 99C9 28 16        	jr z,1F
  18+ 99CB
  19+ 99CB FE 1F        	cp $1f
  20+ 99CD 28 0D        	jr z,3F
  21+ 99CF
  22+ 99CF 21 15 89     	ld hl,Ctrl_2
  23+ 99D2 CB C6        	set 0,(hl)
  24+ 99D4 2A D8 88     	ld hl,(Puntero_objeto)
  25+ 99D7 22 18 89     	ld (Repone_puntero_objeto),hl
  26+ 99DA 18 08        	jr 2F
  27+ 99DC
  28+ 99DC CD A1 9B     3 call Mov_left
  29+ 99DF 18 03        	jr 2F
  30+ 99E1
  31+ 99E1 CD 83 9A     1 call Mov_right
  32+ 99E4 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99E7 22 D8 88     	ld (Puntero_objeto),hl
  34+ 99EA C9           	ret
  35+ 99EB
  36+ 99EB              ; ******************************************************************************************************************************************************************************************
  37+ 99EB              ;
  38+ 99EB              ;   27/05/23
  39+ 99EB              ;
  40+ 99EB              ;	Mov_down
  41+ 99EB              ;
  42+ 99EB              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99EB              ;
  44+ 99EB              ;
  45+ 99EB              Mov_down
  46+ 99EB
  47+ 99EB CD 71 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99EE              ;																	; _ repone (Puntero_objeto).
  49+ 99EE 21 04 89     	ld hl,Ctrl_0
  50+ 99F1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99F3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99F3              ; 																	; _ en el caso de que no lo haya.
  53+ 99F3 3A EC 88     	ld a,(Vel_down)
  54+ 99F6 47           	ld b,a
  55+ 99F7 2A D6 88         ld hl,(Posicion_actual)
  56+ 99FA CD A5 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99FD E6 02        	and 2
  58+ 99FF 28 33        	jr z,1F
  59+ 9A01
  60+ 9A01              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A01              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A01
  63+ 9A01 7C           	ld a,h
  64+ 9A02 FE 57        	cp $57
  65+ 9A04 20 2E        	jr nz,1F
  66+ 9A06
  67+ 9A06 7D           	ld a,l
  68+ 9A07 C6 20        	add $20
  69+ 9A09 30 29        	jr nc,1F
  70+ 9A0B
  71+ 9A0B              ; ------------------------------
  72+ 9A0B              ;
  73+ 9A0B              ;	17/12/15
  74+ 9A0B
  75+ 9A0B              ;	call Reaparece_arriba
  76+ 9A0B CD 2E 9D     	call Reinicio
  77+ 9A0E
  78+ 9A0E              ;	Homos generado todos los movimientos posibles de esta entidad.
  79+ 9A0E              ;	Si se trata de una Entidad_guía dejará de serlo.
  80+ 9A0E
  81+ 9A0E 3A 36 89     	ld a,(Ctrl_3)
  82+ 9A11 CB 5F        	bit 3,a
  83+ 9A13 20 27        	jr nz,3F
  84+ 9A15 CB 57        	bit 2,a
  85+ 9A17 20 23        	jr nz,3F
  86+ 9A19
  87+ 9A19 3A 15 89     	ld a,(Ctrl_2)
  88+ 9A1C CB 6F        	bit 5,a
  89+ 9A1E 28 1C        	jr z,3F
  90+ 9A20
  91+ 9A20 CB AF        	res 5,a
  92+ 9A22 32 15 89     	ld (Ctrl_2),a
  93+ 9A25 21 36 89     	ld hl,Ctrl_3
  94+ 9A28 CB 8E        	res 1,(hl)
  95+ 9A2A CB D6        	set 2,(hl)												; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  96+ 9A2C              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  97+ 9A2C              ;															; _a la siguiente entidad como "Entidad_guía".
  98+ 9A2C              ;	Reinicializa (Puntero_de_almacen_de_mov_masticados).
  99+ 9A2C
 100+ 9A2C 21 D0 5C     4 ld hl,Almacen_de_movimientos_masticados_Entidad_1
 101+ 9A2F 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl 			; Reinicializa (Puntero_de_almacen_de_mov_masticados). Sitúa el puntero_
 102+ 9A32
 103+ 9A32 18 08        	jr 3F
 104+ 9A34              ;															; _ al principio del almacén, (a partir de ahora ejecutaremos "movimientos masticados").
 105+ 9A34              ;															; Ya no somos "Entidad_guía".
 106+ 9A34              ; ------------------------------
 107+ 9A34
 108+ 9A34
 109+ 9A34 CD 92 96     1 call NextScan
 110+ 9A37 22 D6 88     	ld (Posicion_actual),hl
 111+ 9A3A 10 BE            djnz 2B
 112+ 9A3C CD 54 9D     3 call Genera_coordenadas
 113+ 9A3F C9           	ret
 114+ 9A40
 115+ 9A40              ; ******************************************************************************************************************************************************************************************
 116+ 9A40              ;
 117+ 9A40              ;   27/05/23
 118+ 9A40              ;
 119+ 9A40              ;	Mov_up
 120+ 9A40              ;
 121+ 9A40              ; 	Mueve el Sprite hacia arriba.
 122+ 9A40              ;
 123+ 9A40              ;
 124+ 9A40              Mov_up
 125+ 9A40
 126+ 9A40 CD 71 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 127+ 9A43              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 128+ 9A43 21 04 89     	ld hl,Ctrl_0
 129+ 9A46 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 130+ 9A48              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 131+ 9A48              ; 																		; _ en el caso de que no lo haya.
 132+ 9A48 3A EB 88     	ld a,(Vel_up)
 133+ 9A4B 47           	ld b,a
 134+ 9A4C 2A D6 88     	ld hl,(Posicion_actual)
 135+ 9A4F CD A5 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 136+ 9A52 A7           	and a
 137+ 9A53 20 10        	jr nz,1F
 138+ 9A55
 139+ 9A55              ; Nos encontramos en el 1er tercio de pantalla.
 140+ 9A55              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 141+ 9A55
 142+ 9A55 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 143+ 9A56 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 144+ 9A58 20 0B            jr nz,1F
 145+ 9A5A 7D               ld a,l
 146+ 9A5B D6 20            sub $20
 147+ 9A5D 30 06            jr nc,1F
 148+ 9A5F 25               dec h
 149+ 9A60
 150+ 9A60              ; -----------------------------
 151+ 9A60 CD 0F 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 152+ 9A63              ;	call Reinicio
 153+ 9A63              ; -----------------------------
 154+ 9A63
 155+ 9A63 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 156+ 9A65 CD A1 96     1 call PreviousScan
 157+ 9A68 22 D6 88     	ld (Posicion_actual),hl
 158+ 9A6B 10 E2            djnz 3B
 159+ 9A6D CD 54 9D     2 call Genera_coordenadas
 160+ 9A70 C9           	ret
 161+ 9A71
 162+ 9A71              ; -----------------------------
 163+ 9A71              ;
 164+ 9A71              ;	27/5/23
 165+ 9A71              ;
 166+ 9A71              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 167+ 9A71              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 168+ 9A71              ;
 169+ 9A71              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 170+ 9A71              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 171+ 9A71              ;
 172+ 9A71              ;	Modifica: A y (Puntero_objeto).
 173+ 9A71
 174+ 9A71 3A 15 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 175+ 9A74 CB 47        	bit 0,a
 176+ 9A76 C8           	ret z
 177+ 9A77 CB 87        	res 0,a
 178+ 9A79 32 15 89     	ld (Ctrl_2),a
 179+ 9A7C 2A 18 89     	ld hl,(Repone_puntero_objeto)
 180+ 9A7F 22 D8 88     	ld (Puntero_objeto),hl
 181+ 9A82 C9           	ret
 182+ 9A83
 183+ 9A83              ; ******************************************************************************************************************************************************************************************
 184+ 9A83              ;
 185+ 9A83              ;	19/10/22
 186+ 9A83              ;
 187+ 9A83              ;	Mov_right.
 188+ 9A83              ;
 189+ 9A83              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 190+ 9A83              ;
 191+ 9A83
 192+ 9A83 21 04 89     Mov_right ld hl,Ctrl_0
 193+ 9A86 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 194+ 9A88              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 195+ 9A88              ; 																	; _ en el caso de que no lo haya.
 196+ 9A88 3A 04 89     	ld a,(Ctrl_0)
 197+ 9A8B CB 77        	bit 6,a
 198+ 9A8D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 199+ 9A8F
 200+ 9A8F CD BD 9C     	call Stop_Amadeus_right
 201+ 9A92 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 202+ 9A93 18 4D        	jr 8F
 203+ 9A95
 204+ 9A95 3A DA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 205+ 9A98 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 206+ 9A9A 20 46        	jr nz,8F
 207+ 9A9C
 208+ 9A9C 3A DC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 209+ 9A9F A7           	and a 															; _[3] para continuar con el DESPLZ.
 210+ 9AA0 28 40        	jr z,8F
 211+ 9AA2
 212+ 9AA2              ; ---------- ---------- ----------
 213+ 9AA2              ;
 214+ 9AA2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 215+ 9AA2
 216+ 9AA2 3A EA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 217+ 9AA5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 218+ 9AA7 28 11        	jr z,1F
 219+ 9AA9 38 06        	jr c,6F
 220+ 9AAB FE 04        	cp 4
 221+ 9AAD 28 14        	jr z,7F
 222+ 9AAF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 223+ 9AB1
 224+ 9AB1              ; ---------- ---------- ----------
 225+ 9AB1              ;
 226+ 9AB1              ; Perfiles de velocidad
 227+ 9AB1              ;
 228+ 9AB1
 229+ 9AB1 3A DC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 230+ 9AB4 FE FE        	cp $fe
 231+ 9AB6 20 2A        	jr nz,8F
 232+ 9AB8 18 10        	jr 3F
 233+ 9ABA 3A DC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 234+ 9ABD FE FD        	cp $fd
 235+ 9ABF 20 21        	jr nz,8F
 236+ 9AC1 18 07        	jr 3F
 237+ 9AC3 3A DC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 238+ 9AC6 FE FB        	cp $fb
 239+ 9AC8 20 18        	jr nz,8F
 240+ 9ACA
 241+ 9ACA              ; ---------- ---------- ----------
 242+ 9ACA
 243+ 9ACA              3
 244+ 9ACA CD FD 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 245+ 9ACD              ;	call Reinicio
 246+ 9ACD
 247+ 9ACD              ; ---------- ---------- ----------
 248+ 9ACD              ;
 249+ 9ACD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 250+ 9ACD
 251+ 9ACD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 252+ 9ACF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 253+ 9AD0 CD E9 9A     	call DESPLZ_DER
 254+ 9AD3 C1           	pop bc
 255+ 9AD4 10 F9        	djnz 5B
 256+ 9AD6 2A D6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 257+ 9AD9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 258+ 9ADA 22 D6 88     	ld (Posicion_actual),hl
 259+ 9ADD CD 54 9D     	call Genera_coordenadas
 260+ 9AE0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 261+ 9AE2
 262+ 9AE2              ; ---------- ---------- ----------
 263+ 9AE2
 264+ 9AE2 2A D6 88     8 ld hl,(Posicion_actual)
 265+ 9AE5 CD E9 9A     	call DESPLZ_DER
 266+ 9AE8 C9           2 ret
 267+ 9AE9
 268+ 9AE9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 269+ 9AE9              ;
 270+ 9AE9              ;	22/9/22
 271+ 9AE9              ;
 272+ 9AE9
 273+ 9AE9 CD F8 9A     DESPLZ_DER call Desplaza_derecha
 274+ 9AEC CD 44 9B         call modifica_parametros_1er_DESPLZ_2
 275+ 9AEF CD 6D 9B         call Ciclo_completo
 276+ 9AF2 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 277+ 9AF5 CB FE        	set 7,(hl)
 278+ 9AF7 C9           	ret
 279+ 9AF8
 280+ 9AF8              ; ******************************************************************************************************************************************************************************************
 281+ 9AF8              ;	15/02/23
 282+ 9AF8              ;
 283+ 9AF8
 284+ 9AF8 3A EA 88     Desplaza_derecha ld a,(Vel_right)
 285+ 9AFB 47           	ld b,a
 286+ 9AFC 2A E2 88     	ld hl,(Puntero_DESPLZ_der)
 287+ 9AFF 23           1 inc hl
 288+ 9B00 23           	inc hl
 289+ 9B01 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 290+ 9B03 22 E2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 291+ 9B06 CD 26 8D     	call Extrae_address
 292+ 9B09 22 D8 88     	ld (Puntero_objeto),hl
 293+ 9B0C
 294+ 9B0C              ; Modifica (Puntero_DESPLZ_izq).
 295+ 9B0C
 296+ 9B0C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 297+ 9B0C              ; Cuántos movimientos hemos hecho ??
 298+ 9B0C              ; DE contiene (Puntero_DESPLZ_der).
 299+ 9B0C
 300+ 9B0C 2A DE 88     7 ld hl,(Indice_Sprite_der)
 301+ 9B0F EB           	ex de,hl
 302+ 9B10 A7           	and a
 303+ 9B11 ED 52        	sbc hl,de
 304+ 9B13 CB 3D        	srl l
 305+ 9B15 3E 08        6 ld a,8
 306+ 9B17 95           	sub l
 307+ 9B18 30 1E        	jr nc,3F
 308+ 9B1A
 309+ 9B1A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 310+ 9B1A              ; B="0".
 311+ 9B1A
 312+ 9B1A 04           4 inc b
 313+ 9B1B 3C           	inc a
 314+ 9B1C 20 FC        	jr nz,4B
 315+ 9B1E 78           	ld a,b
 316+ 9B1F 08           	ex af,af
 317+ 9B20 2A DE 88     	ld hl,(Indice_Sprite_der)
 318+ 9B23 23           5 inc hl
 319+ 9B24 23           	inc hl
 320+ 9B25 10 FC        	djnz 5B
 321+ 9B27 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 322+ 9B2A CD 26 8D     	call Extrae_address
 323+ 9B2D 22 D8 88     	ld (Puntero_objeto),hl
 324+ 9B30
 325+ 9B30              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 326+ 9B30              ; _(Posicion_actual).
 327+ 9B30
 328+ 9B30 21 D6 88     	ld hl,Posicion_actual
 329+ 9B33 34           	inc (hl)
 330+ 9B34 08               ex af,af
 331+ 9B35 6F           	ld l,a
 332+ 9B36 18 DD        	jr 6B
 333+ 9B38
 334+ 9B38              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 335+ 9B38
 336+ 9B38 47           3 ld b,a
 337+ 9B39 2A E0 88     	ld hl,(Indice_Sprite_izq)
 338+ 9B3C 23           2 inc hl
 339+ 9B3D 23           	inc hl
 340+ 9B3E 10 FC        	djnz 2B
 341+ 9B40 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
 342+ 9B43 C9           8 ret
 343+ 9B44
 344+ 9B44              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 345+ 9B44              ;
 346+ 9B44              ;	24/7/22
 347+ 9B44              ;
 348+ 9B44              ;	modifica_parametros_1er_DESPLZ_2
 349+ 9B44              ;
 350+ 9B44              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 351+ 9B44              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 352+ 9B44              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 353+ 9B44
 354+ 9B44 3A DC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 355+ 9B47 A7           	and a
 356+ 9B48 20 1F        	jr nz,1F
 357+ 9B4A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 358+ 9B4C 32 DC 88         ld (CTRL_DESPLZ),a
 359+ 9B4F
 360+ 9B4F 21 D5 88     	ld hl,Columns
 361+ 9B52 34           	inc (hl)
 362+ 9B53 3A E8 88     	ld a,(Cuad_objeto)
 363+ 9B56 E6 01        	and 1
 364+ 9B58 28 0F        	jr z,1F
 365+ 9B5A 2A D6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 366+ 9B5D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 367+ 9B5E 22 D6 88     	ld (Posicion_actual),hl
 368+ 9B61 CD 54 9D     	call Genera_coordenadas
 369+ 9B64 CD C9 9C     	call Inc_CTRL_DESPLZ
 370+ 9B67 18 03        	jr 2F
 371+ 9B69 CD C9 9C     1 call Inc_CTRL_DESPLZ
 372+ 9B6C C9           2 ret
 373+ 9B6D
 374+ 9B6D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 375+ 9B6D              ;
 376+ 9B6D              ;	24/7/22
 377+ 9B6D              ;
 378+ 9B6D              ;	Ciclo_completo.
 379+ 9B6D              ;
 380+ 9B6D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 381+ 9B6D              ;
 382+ 9B6D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 383+ 9B6D              ; 	Decrementamos (Columns).
 384+ 9B6D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 385+ 9B6D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 386+ 9B6D
 387+ 9B6D
 388+ 9B6D 3A DC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 389+ 9B70 FE FF        	cp $ff
 390+ 9B72 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 391+ 9B74 E6 F0        	and $f0
 392+ 9B76 20 28        	jr nz,3F
 393+ 9B78
 394+ 9B78              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 395+ 9B78
 396+ 9B78 3A DC 88     	ld a,(CTRL_DESPLZ)
 397+ 9B7B 47           	ld b,a
 398+ 9B7C 3E F8        	ld a,$f8
 399+ 9B7E 80           	add b
 400+ 9B7F 32 DC 88     	ld (CTRL_DESPLZ),a
 401+ 9B82 18 1C        	jr 3F
 402+ 9B84 21 D5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 403+ 9B87 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 404+ 9B88 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 405+ 9B89 32 DC 88     	ld (CTRL_DESPLZ),a
 406+ 9B8C 3A E8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 407+ 9B8F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 408+ 9B91 20 0A        	jr nz,2F
 409+ 9B93 2A D6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 410+ 9B96 23           	inc hl
 411+ 9B97 22 D6 88     	ld (Posicion_actual),hl
 412+ 9B9A CD 54 9D     	call Genera_coordenadas
 413+ 9B9D
 414+ 9B9D              ; Inicia el puntero de Sprite.
 415+ 9B9D
 416+ 9B9D CD 3D 8D     2 call Inicia_puntero_objeto_der
 417+ 9BA0 C9           3 ret
 418+ 9BA1
 419+ 9BA1              ; ******************************************************************************************************************************************************************************************
 420+ 9BA1              ;
 421+ 9BA1              ;	15/02/23
 422+ 9BA1              ;
 423+ 9BA1              ;	Mov_left.
 424+ 9BA1              ;
 425+ 9BA1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 426+ 9BA1              ;
 427+ 9BA1              Mov_left
 428+ 9BA1
 429+ 9BA1 21 04 89     	ld hl,Ctrl_0
 430+ 9BA4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 431+ 9BA6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 432+ 9BA6              ; 																	; _ en el caso de que no lo haya.
 433+ 9BA6 3A 04 89     	ld a,(Ctrl_0)
 434+ 9BA9 CB 77        	bit 6,a
 435+ 9BAB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 436+ 9BAD
 437+ 9BAD CD C3 9C     	call Stop_Amadeus_left
 438+ 9BB0 C8           	ret z
 439+ 9BB1 20 4A        	jr nz,8F
 440+ 9BB3
 441+ 9BB3 3A DA 88     11 ld a,(Coordenada_X)
 442+ 9BB6 A7           	and a
 443+ 9BB7 20 44        	jr nz,8F
 444+ 9BB9
 445+ 9BB9 3A DC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 446+ 9BBC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 447+ 9BBD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 448+ 9BBF
 449+ 9BBF              ; ---------- ---------- ----------
 450+ 9BBF
 451+ 9BBF 3A E9 88     	ld a,(Vel_left)
 452+ 9BC2 FE 02        	cp 2
 453+ 9BC4 28 0F        	jr z,1F
 454+ 9BC6 38 04        	jr c,6F
 455+ 9BC8 FE 04        	cp 4
 456+ 9BCA 28 12        	jr z,7F
 457+ 9BCC
 458+ 9BCC              ; ---------- ---------- ----------
 459+ 9BCC
 460+ 9BCC 3A DC 88     6 ld a,(CTRL_DESPLZ)
 461+ 9BCF FE F8        	cp $f8
 462+ 9BD1 20 2A        	jr nz,8F
 463+ 9BD3 18 10        	jr 4F
 464+ 9BD5 3A DC 88     1 ld a,(CTRL_DESPLZ)
 465+ 9BD8 FE F9        	cp $f9
 466+ 9BDA 20 21        	jr nz,8F
 467+ 9BDC 18 07        	jr 4F
 468+ 9BDE 3A DC 88     7 ld a,(CTRL_DESPLZ)
 469+ 9BE1 FE FB        	cp $fb
 470+ 9BE3 20 18        	jr nz,8F
 471+ 9BE5
 472+ 9BE5              ; ---------- ---------- ----------
 473+ 9BE5
 474+ 9BE5              4
 475+ 9BE5 CD EB 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 476+ 9BE8              ;	call Reinicio
 477+ 9BE8
 478+ 9BE8              ; ---------- ---------- ----------
 479+ 9BE8
 480+ 9BE8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 481+ 9BEA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 482+ 9BEB
 483+ 9BEB              ;	ld hl,(Indice_Sprite_izq)
 484+ 9BEB              ;	ld (Puntero_DESPLZ_izq),hl
 485+ 9BEB
 486+ 9BEB CD 04 9C     	call DESPLZ_IZQ
 487+ 9BEE C1           	pop bc
 488+ 9BEF 10 F9        	djnz 5B
 489+ 9BF1 2A D6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 490+ 9BF4 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 491+ 9BF5 22 D6 88     	ld (Posicion_actual),hl
 492+ 9BF8 CD 54 9D     	call Genera_coordenadas
 493+ 9BFB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 494+ 9BFD
 495+ 9BFD              ; ---------- ---------- ----------
 496+ 9BFD
 497+ 9BFD              ; Movemos, no hay recolocación.
 498+ 9BFD
 499+ 9BFD 2A D6 88     8 ld hl,(Posicion_actual)
 500+ 9C00 CD 04 9C     	call DESPLZ_IZQ
 501+ 9C03 C9           2 ret
 502+ 9C04
 503+ 9C04              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 504+ 9C04              ;
 505+ 9C04              ;	22/9/22
 506+ 9C04
 507+ 9C04              DESPLZ_IZQ
 508+ 9C04
 509+ 9C04 CD 13 9C     	call Desplaza_izquierda
 510+ 9C07 CD 5F 9C         call modifica_parametros_1er_DESPLZ
 511+ 9C0A CD 87 9C     	call Ciclo_completo_2
 512+ 9C0D 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 513+ 9C10 CB BE        	res 7,(hl)
 514+ 9C12 C9           	ret
 515+ 9C13
 516+ 9C13              Desplaza_izquierda
 517+ 9C13
 518+ 9C13 3A E9 88     	ld a,(Vel_left)
 519+ 9C16 47           	ld b,a
 520+ 9C17 2A E4 88     	ld hl,(Puntero_DESPLZ_izq)
 521+ 9C1A 23           1 inc hl
 522+ 9C1B 23           	inc hl
 523+ 9C1C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 524+ 9C1E 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
 525+ 9C21 CD 26 8D     	call Extrae_address
 526+ 9C24 22 D8 88     	ld (Puntero_objeto),hl
 527+ 9C27
 528+ 9C27              ; Modifica (Puntero_DESPLZ_der).
 529+ 9C27
 530+ 9C27              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 531+ 9C27              ; Cuántos movimientos hemos hecho ??
 532+ 9C27              ; DE contiene (Puntero_DESPLZ_izq).
 533+ 9C27
 534+ 9C27 2A E0 88     7 ld hl,(Indice_Sprite_izq)
 535+ 9C2A EB           	ex de,hl
 536+ 9C2B A7           	and a
 537+ 9C2C ED 52        	sbc hl,de
 538+ 9C2E CB 3D        	srl l
 539+ 9C30 3E 08        6 ld a,8
 540+ 9C32 95           	sub l
 541+ 9C33 30 1E        	jr nc,3F
 542+ 9C35
 543+ 9C35              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 544+ 9C35              ; B="0".
 545+ 9C35
 546+ 9C35 04           4 inc b
 547+ 9C36 3C           	inc a
 548+ 9C37 20 FC        	jr nz,4B
 549+ 9C39 78           	ld a,b
 550+ 9C3A 08           	ex af,af
 551+ 9C3B 2A E0 88     	ld hl,(Indice_Sprite_izq)
 552+ 9C3E 23           5 inc hl
 553+ 9C3F 23           	inc hl
 554+ 9C40 10 FC        	djnz 5B
 555+ 9C42 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
 556+ 9C45 CD 26 8D     	call Extrae_address
 557+ 9C48 22 D8 88     	ld (Puntero_objeto),hl
 558+ 9C4B
 559+ 9C4B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 560+ 9C4B              ; _(Posicion_actual).
 561+ 9C4B
 562+ 9C4B 21 D6 88     	ld hl,Posicion_actual
 563+ 9C4E 35           	dec (hl)
 564+ 9C4F 08           	ex af,af
 565+ 9C50 6F           	ld l,a
 566+ 9C51 18 DD        	jr 6B
 567+ 9C53
 568+ 9C53              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 569+ 9C53
 570+ 9C53 47           3 ld b,a
 571+ 9C54 2A DE 88     	ld hl,(Indice_Sprite_der)
 572+ 9C57 23           2 inc hl
 573+ 9C58 23           	inc hl
 574+ 9C59 10 FC        	djnz 2B
 575+ 9C5B 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 576+ 9C5E C9           8 ret
 577+ 9C5F
 578+ 9C5F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 579+ 9C5F              ;
 580+ 9C5F              ;	modifica_parametros_1er_DESPLZ
 581+ 9C5F              ;
 582+ 9C5F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 583+ 9C5F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 584+ 9C5F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 585+ 9C5F
 586+ 9C5F 3A DC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 587+ 9C62 A7           	and a
 588+ 9C63 20 1E        	jr nz,1F
 589+ 9C65 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 590+ 9C66 32 DC 88         ld (CTRL_DESPLZ),a
 591+ 9C69 21 D5 88     	ld hl,Columns
 592+ 9C6C 34           	inc (hl)
 593+ 9C6D 3A E8 88     	ld a,(Cuad_objeto)
 594+ 9C70 E6 01        	and 1
 595+ 9C72 20 0F        	jr nz,1F
 596+ 9C74 2A D6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 597+ 9C77 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 598+ 9C78 22 D6 88     	ld (Posicion_actual),hl
 599+ 9C7B CD 54 9D     	call Genera_coordenadas
 600+ 9C7E CD DA 9C     	call Dec_CTRL_DESPLZ
 601+ 9C81 18 03        	jr 2F
 602+ 9C83 CD DA 9C     1 call Dec_CTRL_DESPLZ
 603+ 9C86 C9           2 ret
 604+ 9C87
 605+ 9C87              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 606+ 9C87
 607+ 9C87 3A DC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 608+ 9C8A FE F7        	cp $f7
 609+ 9C8C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 610+ 9C8E 30 2C        	jr nc,3F
 611+ 9C90
 612+ 9C90              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 613+ 9C90
 614+ 9C90 06 00        	ld b,0
 615+ 9C92 04           4 inc b
 616+ 9C93 3C           	inc a
 617+ 9C94 FE F7        	cp $f7
 618+ 9C96 20 FA        	jr nz,4B
 619+ 9C98 3E FF        	ld a,$ff
 620+ 9C9A 90           	sub b
 621+ 9C9B 32 DC 88     	ld (CTRL_DESPLZ),a
 622+ 9C9E 18 1C        	jr 3F
 623+ 9CA0
 624+ 9CA0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 625+ 9CA0
 626+ 9CA0 21 D5 88     1 ld hl,Columns
 627+ 9CA3 35           	dec (hl)
 628+ 9CA4 AF           	xor a
 629+ 9CA5 32 DC 88     	ld (CTRL_DESPLZ),a
 630+ 9CA8 3A E8 88     	ld a,(Cuad_objeto)
 631+ 9CAB E6 01        	and 1
 632+ 9CAD 28 0A        	jr z,2F
 633+ 9CAF 2A D6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 634+ 9CB2 2B           	dec hl
 635+ 9CB3 22 D6 88     	ld (Posicion_actual),hl
 636+ 9CB6 CD 54 9D     	call Genera_coordenadas
 637+ 9CB9
 638+ 9CB9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 639+ 9CB9
 640+ 9CB9 CD 50 8D     2 call Inicia_puntero_objeto_izq
 641+ 9CBC C9           3 ret
 642+ 9CBD
 643+ 9CBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 644+ 9CBD              ;
 645+ 9CBD              ;	19/10/22
 646+ 9CBD              ;
 647+ 9CBD              ;	(cp 29) para un Amadeus de 3 Columns.
 648+ 9CBD              ;	(cp 30)   ""  ""    ""     2 Columns.
 649+ 9CBD
 650+ 9CBD 3A DA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 651+ 9CC0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 652+ 9CC2 C9           	ret
 653+ 9CC3
 654+ 9CC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 655+ 9CC3              ;
 656+ 9CC3              ;	19/10/22
 657+ 9CC3              ;
 658+ 9CC3              ;	(cp 2) para un Amadeus de 3 Columns.
 659+ 9CC3              ;	(cp 1)   ""  ""    ""     2 Columns.
 660+ 9CC3
 661+ 9CC3 3A DA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 662+ 9CC6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 663+ 9CC8 C9           	ret
 664+ 9CC9
 665+ 9CC9              ; ---------- ---------- ---------- ---------- ---------- ----------
 666+ 9CC9              ;
 667+ 9CC9              ;	24/7/22
 668+ 9CC9              ;
 669+ 9CC9              ;	Inc_CTRL_DESPLZ
 670+ 9CC9              ;
 671+ 9CC9              ;
 672+ 9CC9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 673+ 9CC9
 674+ 9CC9 21 DC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 675+ 9CCC 3A EA 88     	ld a,(Vel_right)
 676+ 9CCF A7           	and a
 677+ 9CD0 28 06        	jr z,1F
 678+ 9CD2 47           	ld b,a
 679+ 9CD3 34           3 inc (hl)
 680+ 9CD4 10 FD        	djnz 3B
 681+ 9CD6 18 01        	jr 2F
 682+ 9CD8 34           1 inc (hl)
 683+ 9CD9 C9           2 ret
 684+ 9CDA
 685+ 9CDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 686+ 9CDA              ;
 687+ 9CDA              ;	5/2/23
 688+ 9CDA              ;
 689+ 9CDA              ;	Dec_CTRL_DESPLZ
 690+ 9CDA              ;
 691+ 9CDA              ;
 692+ 9CDA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 693+ 9CDA
 694+ 9CDA 21 DC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 695+ 9CDD 3A E9 88     	ld a,(Vel_left)
 696+ 9CE0 A7           	and a
 697+ 9CE1 28 06        	jr z,1F
 698+ 9CE3 47           	ld b,a
 699+ 9CE4 35           3 dec (hl)
 700+ 9CE5 10 FD        	djnz 3B
 701+ 9CE7 18 01        	jr 2F
 702+ 9CE9 35           1 dec (hl)
 703+ 9CEA C9           2 ret
 704+ 9CEB
 705+ 9CEB              ; ---------- ---------- ---------- ---------- ---------- ----------
 706+ 9CEB
 707+ 9CEB 2A D6 88     Reaparece_derecha ld hl,(Posicion_actual)
 708+ 9CEE 01 1F 00     	ld bc,31
 709+ 9CF1 A7           	and a
 710+ 9CF2 ED 4A        	adc hl,bc
 711+ 9CF4 22 D6 88     	ld (Posicion_actual),hl
 712+ 9CF7 21 04 89     	ld hl,Ctrl_0														; $xxx1
 713+ 9CFA CB C6        	set 0,(hl)
 714+ 9CFC C9           	ret
 715+ 9CFD
 716+ 9CFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 717+ 9CFD
 718+ 9CFD 2A D6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 719+ 9D00 01 1F 00     	ld bc,31
 720+ 9D03 A7           	and a
 721+ 9D04 ED 42        	sbc hl,bc
 722+ 9D06 22 D6 88     	ld (Posicion_actual),hl 											; $xx1x
 723+ 9D09 21 04 89     	ld hl,Ctrl_0
 724+ 9D0C CB CE        	set 1,(hl)
 725+ 9D0E C9           	ret
 726+ 9D0F
 727+ 9D0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 728+ 9D0F
 729+ 9D0F 24           Reaparece_abajo inc h
 730+ 9D10 01 E0 17     	ld bc,$17e0
 731+ 9D13 A7           	and a
 732+ 9D14 ED 4A        	adc hl,bc
 733+ 9D16 22 D6 88     	ld (Posicion_actual),hl
 734+ 9D19 21 04 89     	ld hl,Ctrl_0
 735+ 9D1C CB D6        	set 2,(hl)
 736+ 9D1E C9           	ret
 737+ 9D1F
 738+ 9D1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 739+ 9D1F
 740+ 9D1F 01 E0 17     Reaparece_arriba ld bc,$17e0
 741+ 9D22 A7           	and a
 742+ 9D23 ED 42        	sbc hl,bc
 743+ 9D25 22 D6 88     	ld (Posicion_actual),hl
 744+ 9D28 21 04 89     	ld hl,Ctrl_0
 745+ 9D2B CB DE        	set 3,(hl)
 746+ 9D2D C9           	ret
 747+ 9D2E
 748+ 9D2E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 749+ 9D2E              ;
 750+ 9D2E              ;	15/07/23
 751+ 9D2E
 752+ 9D2E              Reinicio
 753+ 9D2E
 754+ 9D2E              ; Vamos a reiniciar los punteros y variables de movimiento.
 755+ 9D2E
 756+ 9D2E AF           	xor a
 757+ 9D2F 21 09 89     	ld hl,Puntero_indice_mov_bucle
 758+ 9D32 CD 50 9D     	call Limpia_contenido_hl
 759+ 9D35
 760+ 9D35 21 D6 88     	ld hl,Posicion_actual
 761+ 9D38 CD 50 9D     	call Limpia_contenido_hl
 762+ 9D3B
 763+ 9D3B CD 80 A0     	call Inicializa_Puntero_indice_mov
 764+ 9D3E CD 0A A0     	call Inicia_Puntero_mov
 765+ 9D41
 766+ 9D41 21 0B 89     	ld hl,Incrementa_puntero
 767+ 9D44 06 05        	ld b,5
 768+ 9D46 77           1 ld (hl),a
 769+ 9D47 23           	inc hl
 770+ 9D48 10 FC        	djnz 1B
 771+ 9D4A
 772+ 9D4A 21 15 89     	ld hl,Ctrl_2
 773+ 9D4D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 774+ 9D4F
 775+ 9D4F C9           	ret
 776+ 9D50
 777+ 9D50 77           Limpia_contenido_hl	ld (hl),a
 778+ 9D51 23           	inc hl
 779+ 9D52 77           	ld (hl),a
 780+ 9D53 C9           	ret
 781+ 9D54
 782+ 9D54
# file closed: Direcciones.asm
1808  9D54              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D54              ; ------------------------------------------------------------------------
   2+ 9D54              ;
   3+ 9D54              ;	02/04/23
   4+ 9D54              ;
   5+ 9D54              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D54              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D54              ;
   8+ 9D54              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D54              ;
  10+ 9D54              ;	Modifica: A,BC y DE.
  11+ 9D54
  12+ 9D54 C5           Genera_coordenadas push bc
  13+ 9D55 E5           	push hl
  14+ 9D56 D5           	push de
  15+ 9D57
  16+ 9D57 2A D6 88     	ld hl,(Posicion_actual)
  17+ 9D5A
  18+ 9D5A 7D           	ld a,l
  19+ 9D5B E6 1F        	and $1f
  20+ 9D5D 32 DA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D60
  22+ 9D60 CD A5 99     	call calcula_tercio
  23+ 9D63 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D64
  25+ 9D64 1E 00        	ld e,0
  26+ 9D66 7D           	ld a,l
  27+ 9D67 E6 E0        	and $e0
  28+ 9D69 28 01        	jr z,1F
  29+ 9D6B 04           	inc b
  30+ 9D6C
  31+ 9D6C 04           1 inc b
  32+ 9D6D 05           	dec b
  33+ 9D6E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D70              ;														; _ , salimos.
  35+ 9D70 1C           3 inc e
  36+ 9D71 D6 20        	sub 32
  37+ 9D73 20 FB        	jr nz,3B
  38+ 9D75 10 F5        	djnz 1B
  39+ 9D77
  40+ 9D77 7B           2 ld a,e
  41+ 9D78 32 DB 88     	ld (Coordenada_y),a
  42+ 9D7B
  43+ 9D7B D1           	pop de
  44+ 9D7C E1           	pop hl
  45+ 9D7D C1           	pop bc
  46+ 9D7E
  47+ 9D7E C9           	ret
  48+ 9D7F
  49+ 9D7F              ; ------------------------------------------------------------------------
  50+ 9D7F              ;	28/05/23
  51+ 9D7F              ;
  52+ 9D7F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D7F              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D7F              ;
  55+ 9D7F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D7F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D7F              ;
  58+ 9D7F              ;		DE="$120d"
  59+ 9D7F              ;
  60+ 9D7F              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D7F              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D7F              ;
  63+ 9D7F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D7F
  65+ 9D7F              ;	Modifica: A,BC y DE.
  66+ 9D7F
  67+ 9D7F
  68+ 9D7F              Genera_coordenadas_disparo
  69+ 9D7F
  70+ 9D7F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D7F
  72+ 9D7F 7D           	ld a,l
  73+ 9D80 E6 1F        	and $1f
  74+ 9D82 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D83 CD A5 99     	call calcula_tercio
  76+ 9D86 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D87 1E 00        	ld e,0
  78+ 9D89 7D           	ld a,l
  79+ 9D8A E6 E0        	and $e0
  80+ 9D8C 28 01        	jr z,1F
  81+ 9D8E 04           	inc b
  82+ 9D8F 1C           1 inc e
  83+ 9D90 D6 20        	sub 32
  84+ 9D92 20 FB        	jr nz,1B
  85+ 9D94 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D96 C9           	ret
  87+ 9D97
# file closed: Genera_coordenadas.asm
1809  9D97              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D97              ; Relojes y temporizaciones.
   2+ 9D97
   3+ 9D97              ; ------------------------------------------------------
   4+ 9D97              ;
   5+ 9D97              ;	16/7/23
   6+ 9D97              ;
   7+ 9D97              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D97              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D97              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D97              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D97              ;
  12+ 9D97              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D97              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D97
  15+ 9D97              ; Disparo_entidad db 1
  16+ 9D97              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D97              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D97
  19+ 9D97              Habilita_disparos
  20+ 9D97
  21+ 9D97 7E           	ld a,(hl)
  22+ 9D98 A7           	and a
  23+ 9D99 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D9A
  25+ 9D9A EB           	ex de,hl
  26+ 9D9B
  27+ 9D9B 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D9C C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D9D
  30+ 9D9D              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D9D
  32+ 9D9D 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D9E 7E           	ld a,(hl)
  34+ 9D9F 23           	inc hl
  35+ 9DA0 77           	ld (hl),a
  36+ 9DA1
  37+ 9DA1 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9DA2 3E 01        	ld a,1
  39+ 9DA4 77           	ld (hl),a
  40+ 9DA5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1810  9DA6              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DA6
   2+ 9DA6
   3+ 9DA6              ;   07/07/23
   4+ 9DA6              ;
   5+ 9DA6              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DA6              ;
   7+ 9DA6              ;   Codificación:
   8+ 9DA6              ;
   9+ 9DA6              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DA6              ;
  11+ 9DA6              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DA6              ;
  13+ 9DA6              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DA6              ;
  15+ 9DA6              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DA6              ;
  17+ 9DA6              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DA6              ;                               ..... %01000010 Vel_up 4
  19+ 9DA6              ;                                               Vel_down 2
  20+ 9DA6              ;                               ..... $42
  21+ 9DA6              ;
  22+ 9DA6              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DA6              ;
  24+ 9DA6              ;                               ..... %01000010 Vel_left 4
  25+ 9DA6              ;                                               Vel_right 2
  26+ 9DA6              ;                               ..... $42
  27+ 9DA6              ;
  28+ 9DA6              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DA6              ;
  30+ 9DA6              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DA6              ;
  32+ 9DA6              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DA6              ;
  34+ 9DA6              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DA6              ;                                     $53
  36+ 9DA6              ;
  37+ 9DA6              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DA6              ;
  39+ 9DA6              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DA6              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DA6              ;
  42+ 9DA6              ;                       Arriba ..... $81
  43+ 9DA6              ;                       Arriba - izquierda ..... $a1
  44+ 9DA6              ;                       Arriba - derecha ..... $91
  45+ 9DA6              ;
  46+ 9DA6              ;                       Abajo ..... $41
  47+ 9DA6              ;                       Abajo - izquierda ..... $61
  48+ 9DA6              ;                       Abajo - derecha ..... $51
  49+ 9DA6              ;
  50+ 9DA6              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DA6              ;
  52+ 9DA6              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DA6              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DA6              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DA6              ;
  56+ 9DA6              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DA6              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DA6              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DA6              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DA6              ;
  61+ 9DA6              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DA6              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DA6              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DA6              ;
  65+ 9DA6              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DA6              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DA6              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DA6              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DA6
  70+ 9DA6              ; ----- ----- ----- ----- -----
  71+ 9DA6
  72+ 9DA6 D2 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DA8 DA 9D            defw F_1
  74+ 9DAA E4 9D            defw F_2
  75+ 9DAC EE 9D            defw Codo_abajo_derecha
  76+ 9DAE 22 9E            defw Derecha_y_subiendo
  77+ 9DB0 2C 9E            defw Derecha_y_subiendo_1
  78+ 9DB2 36 9E            defw F_3
  79+ 9DB4 40 9E            defw F_4
  80+ 9DB6 4A 9E            defw Derecha_y_bajando
  81+ 9DB8 54 9E            defw Derecha_y_bajando_1
  82+ 9DBA 5E 9E            defw Derecha_y_bajando_2
  83+ 9DBC 68 9E            defw Codo_derecha_abajo
  84+ 9DBE 98 9E            defw Codo_abajo_izq.
  85+ 9DC0 CC 9E            defw Izquierda_y_subiendo
  86+ 9DC2 D6 9E            defw Izquierda_y_subiendo_1
  87+ 9DC4 E0 9E            defw F_5
  88+ 9DC6 EA 9E            defw F_6
  89+ 9DC8 F4 9E            defw Izquierda_y_bajando
  90+ 9DCA FE 9E            defw Izquierda_y_bajando_1
  91+ 9DCC 08 9F            defw Izquierda_y_bajando_2
  92+ 9DCE 12 9F            defw Codo_izquierda_abajo
  93+ 9DD0 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DD2
  95+ 9DD2 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DD6 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DDA
  98+ 9DDA 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DDE 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DE2 08 00
 100+ 9DE4 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DE8 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DEC 0F FE
 102+ 9DEE
 103+ 9DEE 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DF2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DF6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DFA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DFE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E02 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E06 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E0A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E0E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E12 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E16 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E1A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E1E 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E22
 117+ 9E22 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E26 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E2A 06 00
 119+ 9E2C
 120+ 9E2C 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E30 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E34 02 00
 122+ 9E36
 123+ 9E36 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E3A 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E3E 04 00
 125+ 9E40 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E44 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E48 08 00
 127+ 9E4A
 128+ 9E4A 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E4E 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E52 02 00
 130+ 9E54
 131+ 9E54 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E58 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E5C 06 00
 133+ 9E5E
 134+ 9E5E 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E62 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E66 06 00
 136+ 9E68
 137+ 9E68              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E68
 139+ 9E68 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E6C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E70 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E74 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E78 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E7C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E80 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E84 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E88 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E8C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E90 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E94 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E98
 152+ 9E98 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E9C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EA0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EA4 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EA8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EAC 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EB0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EB4 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EB8 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EBC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EC0 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EC4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EC8 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9ECC
 166+ 9ECC 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9ED0 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9ED4 06 00
 168+ 9ED6
 169+ 9ED6 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EDA 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EDE 02 00
 171+ 9EE0
 172+ 9EE0 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EE4 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EE8 04 00
 174+ 9EEA 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EEE 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EF2 08 00
 176+ 9EF4
 177+ 9EF4 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EF8 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EFC 02 00
 179+ 9EFE
 180+ 9EFE 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F02 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F06 06 00
 182+ 9F08
 183+ 9F08 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F0C 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F10 06 00
 185+ 9F12
 186+ 9F12 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F16 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F1A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F1E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F22 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F26 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F2A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F2E 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F32 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F36 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F3A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F3E 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F42
 199+ 9F42              ; ----- ----- ----- ----- -----
 200+ 9F42              ;
 201+ 9F42              ;   27/06/23
 202+ 9F42
 203+ 9F42              Movimiento
 204+ 9F42
 205+ 9F42              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F42
 207+ 9F42              ;    ld hl,(Posicion_actual)
 208+ 9F42
 209+ 9F42 3A 15 89         ld a,(Ctrl_2)
 210+ 9F45 CB 57            bit 2,a
 211+ 9F47 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F49
 213+ 9F49 2A 07 89         ld hl,(Puntero_mov)
 214+ 9F4C 7E               ld a,(hl)
 215+ 9F4D
 216+ 9F4D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F4D
 218+ 9F4D              Inicia_desplazamiento.
 219+ 9F4D
 220+ 9F4D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F4D
 222+ 9F4D CD 41 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F50
 224+ 9F50              ; Iniciamos (Repetimos_mov).
 225+ 9F50
 226+ 9F50 7E               ld a,(hl)
 227+ 9F51 E6 0F            and $0f
 228+ 9F53 32 0D 89         ld (Repetimos_desplazamiento),a
 229+ 9F56 32 0E 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F59
 231+ 9F59              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F59
 233+ 9F59 23               inc hl
 234+ 9F5A 7E               ld a,(hl)
 235+ 9F5B 32 10 89         ld (Cola_de_desplazamiento),a
 236+ 9F5E 2B               dec hl
 237+ 9F5F
 238+ 9F5F 21 15 89         ld hl,Ctrl_2
 239+ 9F62 CB D6            set 2,(hl)
 240+ 9F64
 241+ 9F64              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F64              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F64
 244+ 9F64              Desplazamiento_iniciado
 245+ 9F64
 246+ 9F64 CD 15 A0         call Aplica_desplazamiento
 247+ 9F67
 248+ 9F67 3A 15 89         ld a,(Ctrl_2)
 249+ 9F6A CB 67            bit 4,a
 250+ 9F6C C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F6D
 252+ 9F6D 21 0D 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F70 35               dec (hl)
 254+ 9F71 C0               ret nz
 255+ 9F72
 256+ 9F72              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F72              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F72              ; Analiza (Cola_de_desplazamiento).
 259+ 9F72
 260+ 9F72 3A 10 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F75 A7               and a
 262+ 9F76 CC 6A A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F79 28 30            jr z,Reinicia_el_movimiento
 264+ 9F7B
 265+ 9F7B FE FF            cp $ff
 266+ 9F7D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F7F
 268+ 9F7F FE FE            cp $fe
 269+ 9F81 CC EE 9F         call z,Fijamos_bucle
 270+ 9F84 28 25            jr z,Reinicia_el_movimiento
 271+ 9F86
 272+ 9F86 FE FD            cp $fd
 273+ 9F88 20 11            jr nz,1F
 274+ 9F8A
 275+ 9F8A              ; ---
 276+ 9F8A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F8A
 278+ 9F8A 3A 15 89         ld a,(Ctrl_2)
 279+ 9F8D CB 5F            bit 3,a
 280+ 9F8F 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F91
 282+ 9F91              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F91
 284+ 9F91 21 15 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F94 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F96
 287+ 9F96 CD FF 9F         call Inicia_Repetimos_movimiento
 288+ 9F99 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F9B              ; ---
 290+ 9F9B
 291+ 9F9B FE 01        1 cp 1
 292+ 9F9D CA D8 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FA0
 294+ 9FA0 3D               dec a
 295+ 9FA1 32 10 89         ld (Cola_de_desplazamiento),a
 296+ 9FA4
 297+ 9FA4 3A 0E 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FA7 32 0D 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FAA              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FAA C9               ret
 301+ 9FAB
 302+ 9FAB              Reinicia_el_movimiento
 303+ 9FAB
 304+ 9FAB 3A 15 89         ld a,(Ctrl_2)
 305+ 9FAE CB 5F            bit 3,a
 306+ 9FB0 28 1B            jr z,2F
 307+ 9FB2
 308+ 9FB2              ; (Cola_de_desplazamiento)="254".
 309+ 9FB2
 310+ 9FB2 21 0F 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FB5 35               dec (hl)
 312+ 9FB6 20 15            jr nz,2F
 313+ 9FB8
 314+ 9FB8              ; Fin de las repeticiones del último movimiento.
 315+ 9FB8
 316+ 9FB8 21 15 89         ld hl,Ctrl_2
 317+ 9FBB CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FBD
 319+ 9FBD 2A 07 89         ld hl,(Puntero_mov)
 320+ 9FC0 23               inc hl
 321+ 9FC1 23               inc hl
 322+ 9FC2 23               inc hl
 323+ 9FC3 22 07 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FC6              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FC6 7E               ld a,(hl)
 326+ 9FC7 32 10 89         ld (Cola_de_desplazamiento),a
 327+ 9FCA
 328+ 9FCA C3 72 9F         jp Cola
 329+ 9FCD
 330+ 9FCD CD 0A A0     2 call Inicia_Puntero_mov
 331+ 9FD0
 332+ 9FD0 21 15 89         ld hl,Ctrl_2
 333+ 9FD3 CB 96            res 2,(hl)
 334+ 9FD5
 335+ 9FD5 C3 42 9F         jp Movimiento
 336+ 9FD8
 337+ 9FD8              Siguiente_desplazamiento
 338+ 9FD8
 339+ 9FD8              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9FD8              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9FD8
 342+ 9FD8 21 15 89         ld hl,Ctrl_2
 343+ 9FDB CB 96            res 2,(hl)
 344+ 9FDD
 345+ 9FDD 2A 07 89         ld hl,(Puntero_mov)
 346+ 9FE0 23               inc hl
 347+ 9FE1 23               inc hl
 348+ 9FE2 22 07 89         ld (Puntero_mov),hl
 349+ 9FE5
 350+ 9FE5 7E               ld a,(hl)
 351+ 9FE6 A7               and a
 352+ 9FE7 CC 6A A0         call z,Incrementa_Puntero_indice_mov
 353+ 9FEA CA AB 9F         jp z,Reinicia_el_movimiento
 354+ 9FED
 355+ 9FED C9               ret
 356+ 9FEE
 357+ 9FEE              ; Subrutinas -----------------------------------------
 358+ 9FEE              ; ---------- --------- --------- ---------- ----------
 359+ 9FEE              ;
 360+ 9FEE              ;   24/07/23
 361+ 9FEE              ;
 362+ 9FEE              ;   Fijamos_bucle
 363+ 9FEE              ;
 364+ 9FEE              ;
 365+ 9FEE
 366+ 9FEE              Fijamos_bucle
 367+ 9FEE
 368+ 9FEE 3A 0B 89         ld a,(Incrementa_puntero)
 369+ 9FF1 3C               inc a
 370+ 9FF2 32 0C 89         ld (Incrementa_puntero_backup),a
 371+ 9FF5
 372+ 9FF5 CD 6A A0         call Incrementa_Puntero_indice_mov
 373+ 9FF8 2A 05 89         ld hl,(Puntero_indice_mov)
 374+ 9FFB 22 09 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FFE C9               ret
 376+ 9FFF
 377+ 9FFF              ; ---------- --------- --------- ---------- ----------
 378+ 9FFF              ;
 379+ 9FFF              ;   07/7/23
 380+ 9FFF              ;
 381+ 9FFF              ;   Inicia_Repetimos_movimiento
 382+ 9FFF              ;
 383+ 9FFF              ;
 384+ 9FFF
 385+ 9FFF              Inicia_Repetimos_movimiento
 386+ 9FFF
 387+ 9FFF              ; Iniciamos (Repetimos_movimiento).
 388+ 9FFF
 389+ 9FFF DD 2A 07 89      ld ix,(Puntero_mov)
 390+ A003 DD 7E 02         ld a,(ix+2)
 391+ A006 32 0F 89         ld (Repetimos_movimiento),a
 392+ A009
 393+ A009 C9               ret
 394+ A00A
 395+ A00A              ; ---------- --------- --------- ---------- ----------
 396+ A00A              ;
 397+ A00A              ;   26/6/23
 398+ A00A              ;
 399+ A00A              ;   Inicia_Puntero_mov
 400+ A00A              ;
 401+ A00A              ;
 402+ A00A
 403+ A00A 2A 05 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A00D 5E               ld e,(hl)
 405+ A00E 23               inc hl
 406+ A00F 56               ld d,(hl)
 407+ A010 EB               ex de,hl
 408+ A011 22 07 89         ld (Puntero_mov),hl
 409+ A014 C9               ret
 410+ A015
 411+ A015              ; ---------- --------- --------- ---------- ----------
 412+ A015              ;
 413+ A015              ;   27/06/23
 414+ A015              ;
 415+ A015              ;   Aplica_movimiento.
 416+ A015
 417+ A015              Aplica_desplazamiento
 418+ A015
 419+ A015              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A015
 421+ A015 2A 07 89         ld hl, (Puntero_mov)
 422+ A018
 423+ A018 7E               ld a,(hl)
 424+ A019 E6 F0            and $f0
 425+ A01B C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A01C
 427+ A01C CB 7E            bit 7,(hl)
 428+ A01E 28 03            jr z,1F
 429+ A020 CD 40 9A         call Mov_up
 430+ A023 2A 07 89     1 ld hl, (Puntero_mov)
 431+ A026 CB 76            bit 6,(hl)
 432+ A028 28 03            jr z,2F
 433+ A02A CD EB 99         call Mov_down
 434+ A02D 2A 07 89     2 ld hl, (Puntero_mov)
 435+ A030 CB 6E            bit 5,(hl)
 436+ A032 28 03            jr z,3F
 437+ A034 CD A1 9B         call Mov_left
 438+ A037 2A 07 89     3 ld hl, (Puntero_mov)
 439+ A03A CB 66            bit 4,(hl)
 440+ A03C C8               ret z
 441+ A03D CD 83 9A         call Mov_right
 442+ A040 C9               ret
 443+ A041
 444+ A041              ; ---------- --------- --------- ---------- ----------
 445+ A041              ;
 446+ A041              ;   26/06/23
 447+ A041              ;
 448+ A041              ;   Ajusta_velocidad_desplazamiento.
 449+ A041
 450+ A041              Ajusta_velocidad_desplazamiento
 451+ A041
 452+ A041              ; 1er byte de la cadena de movimiento.
 453+ A041              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A041
 455+ A041 CD 5F A0         call Extrae_nibble_alto
 456+ A044
 457+ A044 32 EB 88         ld (Vel_up),a
 458+ A047 79               ld a,c
 459+ A048 E6 0F            and $0f
 460+ A04A 32 EC 88         ld (Vel_down),a
 461+ A04D
 462+ A04D              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A04D              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A04D
 465+ A04D 23               inc hl
 466+ A04E CD 5F A0         call Extrae_nibble_alto
 467+ A051
 468+ A051 32 E9 88         ld (Vel_left),a
 469+ A054 79               ld a,c
 470+ A055 E6 0F            and $0f
 471+ A057 32 EA 88         ld (Vel_right),a
 472+ A05A
 473+ A05A              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A05A
 475+ A05A 23               inc hl
 476+ A05B 22 07 89         ld (Puntero_mov),hl
 477+ A05E C9               ret
 478+ A05F
 479+ A05F 06 04        Extrae_nibble_alto ld b,4
 480+ A061 7E               ld a,(hl)
 481+ A062 4F               ld c,a
 482+ A063 E6 F0            and $f0
 483+ A065 CB 3F        1 srl a
 484+ A067 10 FC            djnz 1B
 485+ A069 C9               ret
 486+ A06A
 487+ A06A              ; ---------- --------- --------- ---------- ----------
 488+ A06A              ;
 489+ A06A              ;   5/7/23
 490+ A06A              ;
 491+ A06A              ;   Incrementa_Puntero_indice_mov
 492+ A06A
 493+ A06A              Incrementa_Puntero_indice_mov
 494+ A06A
 495+ A06A 21 0B 89         ld hl,Incrementa_puntero
 496+ A06D 34               inc (hl)
 497+ A06E
 498+ A06E 2A 05 89         ld hl,(Puntero_indice_mov)
 499+ A071 01 02 00         ld bc,2
 500+ A074 A7               and a
 501+ A075 09               add hl,bc
 502+ A076 22 05 89         ld (Puntero_indice_mov),hl
 503+ A079
 504+ A079 7E               ld a,(hl)
 505+ A07A A7               and a
 506+ A07B
 507+ A07B              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A07B
 509+ A07B              ;    jr z,$
 510+ A07B
 511+ A07B              ;! Reinicia el Patrón de movimiento.
 512+ A07B
 513+ A07B CC 80 A0         call z,Inicializa_Puntero_indice_mov
 514+ A07E
 515+ A07E AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A07F
 517+ A07F C9               ret
 518+ A080
 519+ A080
 520+ A080              ; ---------- --------- --------- ---------- ----------
 521+ A080              ;
 522+ A080              ;   24/07/23
 523+ A080              ;
 524+ A080              ;   Inicializa_Puntero_indice_mov
 525+ A080
 526+ A080              Inicializa_Puntero_indice_mov
 527+ A080
 528+ A080              ; Existe etiqueta de bucle principal???
 529+ A080
 530+ A080 2A 09 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A083 24               inc h
 532+ A084 25               dec h
 533+ A085 28 05            jr z,2F
 534+ A087
 535+ A087 22 05 89         ld (Puntero_indice_mov),hl
 536+ A08A 18 14            jr 3F
 537+ A08C
 538+ A08C              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A08C
 540+ A08C 3A 0B 89     2 ld a,(Incrementa_puntero)
 541+ A08F 47               ld b,a
 542+ A090
 543+ A090 2A 05 89         ld hl,(Puntero_indice_mov)
 544+ A093 2B           1 dec hl
 545+ A094 2B               dec hl
 546+ A095 10 FC            djnz 1B
 547+ A097 22 05 89         ld (Puntero_indice_mov),hl
 548+ A09A
 549+ A09A AF               xor a
 550+ A09B 32 0B 89         ld (Incrementa_puntero),a
 551+ A09E 18 06            jr 4F
 552+ A0A0
 553+ A0A0 3A 0C 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0A3 32 0B 89         ld (Incrementa_puntero),a
 555+ A0A6 C9           4 ret
 556+ A0A7
 557+ A0A7
 558+ A0A7
# file closed: Patrones_de_mov.asm
1811  A0A7              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0A7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0A7              ;
   3+ A0A7              ;	12/12/23
   4+ A0A7              ;
   5+ A0A7              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0A7
   7+ A0A7              ;	ADC HL,SP	LD (addr),SP
   8+ A0A7              ;	ADD HL,SP	LD SP,(addr)
   9+ A0A7              ;	ADD IX,SP	LD SP,nn
  10+ A0A7              ; 	ADD IY,SP	LD SP,HL
  11+ A0A7              ;				LD SP,IX
  12+ A0A7              ;	DEC SP		LD SP,IY
  13+ A0A7
  14+ A0A7              ;	EX (SP),HL
  15+ A0A7              ;	EX (SP),IX
  16+ A0A7              ;	EX (SP),IY
  17+ A0A7
  18+ A0A7              ;	INC SP
  19+ A0A7
  20+ A0A7                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 ED 73 28 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 711A
  36+ 711A              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 711A
  38+ 711A 31 F4 88         ld sp,Variables_de_borrado+6
  39+ 711D
  40+ 711D E5               push hl
  41+ 711E DD E5            push ix
  42+ 7120 FD E5            push iy
  43+ 7122
  44+ 7122 31 00 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 7125 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 7127              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 7127
  48+ 7127 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 712A
  50+ 712A E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 712B DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 712D FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 712F
  54+ 712F              ; Disparo o entidad?
  55+ 712F
  56+ 712F 3A 17 89         ld a,(Ctrl_1)
  57+ 7132 CB 47            bit 0,a
  58+ 7134 28 05            jr z,2F
  59+ 7136
  60+ 7136 2A 30 89         ld hl,(Stack_snapshot_disparos)
  61+ 7139 18 0F            jr 4F
  62+ 713B
  63+ 713B              ; No es disparo. Entidad/Amadeus ????
  64+ 713B
  65+ 713B 3A 04 89     2 ld a,(Ctrl_0)
  66+ 713E CB 77            bit 6,a
  67+ 7140 28 05            jr z,7F
  68+ 7142
  69+ 7142              ; Guardamos foto de Amadeus.
  70+ 7142
  71+ 7142 2A 34 89         ld hl,(End_Snapshot_Amadeus)
  72+ 7145 18 03            jr 4F
  73+ 7147
  74+ 7147 2A 2E 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 714A
  76+ 714A 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 714C
  78+ 714C D1           1 pop de
  79+ 714D 73               ld (hl),e
  80+ 714E 23               inc hl
  81+ 714F 72               ld (hl),d
  82+ 7150 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 7151 10 F9            djnz 1B
  84+ 7153
  85+ 7153              ; Disparo o entidad ?
  86+ 7153
  87+ 7153 3A 17 89         ld a,(Ctrl_1)
  88+ 7156 CB 47            bit 0,a
  89+ 7158 28 05            jr z,5F
  90+ 715A
  91+ 715A 22 30 89         ld (Stack_snapshot_disparos),hl
  92+ 715D 18 13            jr 6F
  93+ 715F
  94+ 715F              ; Entidad o Amadeus ?
  95+ 715F
  96+ 715F 3A 04 89     5 ld a,(Ctrl_0)
  97+ 7162 CB 77            bit 6,a
  98+ 7164 28 09            jr z,8F
  99+ 7166
 100+ 7166 22 34 89         ld (End_Snapshot_Amadeus),hl
 101+ 7169 ED 7B 28 89      ld sp,(Stack)
 102+ 716D FB               ei
 103+ 716E C9               ret
 104+ 716F
 105+ 716F 22 2E 89     8 ld (Stack_snapshot),hl
 106+ 7172 ED 7B 28 89  6 ld sp,(Stack)
 107+ 7176
 108+ 7176 C9               ret
 109+ 7177
 110+ 7177              ; -----------------------------------------------------------------------------
 111+ 7177              ;
 112+ 7177              ;   21/11/23
 113+ 7177
 114+ 7177              Limpia_y_reinicia_Stack_Snapshot
 115+ 7177
 116+ 7177              ;   Limpia Album_de_fotos.
 117+ 7177
 118+ 7177 2A 2E 89         ld hl,(Stack_snapshot)
 119+ 717A 7D               ld a,l
 120+ 717B A7               and a
 121+ 717C C8               ret z   ;   Salimos si el álbum está vacío.
 122+ 717D
 123+ 717D 47               ld b,a
 124+ 717E 04               inc b
 125+ 717F
 126+ 717F 36 00        1 ld (hl),0
 127+ 7181 2D               dec l
 128+ 7182 10 FB            djnz 1B
 129+ 7184
 130+ 7184              ;   Reinicializa (Stack_snapshot).
 131+ 7184
 132+ 7184 AF               xor a
 133+ 7185 32 2E 89         ld (Stack_snapshot),a
 134+ 7188
 135+ 7188 C9               ret
# file closed: Guarda_foto_registros.asm
1812  7189
1813  7189              	SAVESNA "Pruebas.sna", START
1814  7189
1815  7189
1816  7189
1817  7189
# file closed: Banco_de_pruebas.asm
