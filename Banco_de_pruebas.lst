# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											 ; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 45 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000              ;
 11+  8000              ; Constan de 2Columns y 2scanlines.
 12+  8000
 13+  8000 08 80        Indice_disparo defw Disparo_0
 14+  8002 0C 80        	defw Disparo_f9
 15+  8004 10 80        	defw Disparo_fb
 16+  8006 18 80        	defw Disparo_fd
 17+  8008
 18+  8008              ; Disparo (CTRL_DESPLZ)="0".
 19+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 20+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 21+  800C 60 00 60 00  Disparo_f9 DEFB $60,$00,$60,$00
 22+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 23+  8010 18 00 00 00  Disparo_fb DEFW $18,$00,$18,$00
 23+  8014 18 00 00 00
 24+  8018              ; Disparo (CTRL_DESPLZ)="fd"
 25+  8018 06 00 00 00  Disparo_fd DEFW $06,$00,$06,$00
 25+  801C 06 00 00 00
 26+  8020
 27+  8020              ; ----------------------------------------------------------------------------------------
 28+  8020
 29+  8020              ; Badsat_izq. 2x2.
 30+  8020
 31+  8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
 32+  8022 70 81        	defw Badsat_izq_fe
 33+  8024 40 81        	defw Badsat_izq_fd
 34+  8026 10 81        	defw Badsat_izq_fc
 35+  8028 E0 80        	defw Badsat_izq_fb
 36+  802A B0 80        	defw Badsat_izq_fa
 37+  802C 80 80        	defw Badsat_izq_f9
 38+  802E 50 80        	defw Badsat_izq_f8
 39+  8030
 40+  8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 40+  8034 02 2A 02 55
 41+  8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 41+  803C 7F E8 03 60
 42+  8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 42+  8044 2B E8 54 40
 43+  8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 43+  804C 28 00 10 00
 44+  8050
 45+  8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 45+  8054 0A 00 01 15
 46+  8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 46+  805C 01 55 00 01
 47+  8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 47+  8064 00 01 B0 00
 48+  8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 48+  806C FC 00 15 F4
 49+  8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 49+  8074 55 30 00 2A
 50+  8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 50+  807C 00 08 00 00
 51+  8080
 52+  8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 52+  8084 85 00 00 8A
 53+  8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 53+  808C 00 AA 80 00
 54+  8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 54+  8094 00 00 D8 00
 55+  8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 55+  809C FE 00 0A FA
 56+  80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 56+  80A4 2A 98 00 15
 57+  80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 57+  80AC 00 04 00 00
 58+  80B0
 59+  80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 59+  80B4 42 80 00 45
 60+  80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 60+  80BC 00 55 40 00
 61+  80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 61+  80C4 00 00 6C 00
 62+  80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 62+  80CC FF 00 05 7D
 63+  80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 63+  80D4 15 4C 00 0A
 64+  80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 64+  80DC 00 02 00 00
 65+  80E0
 66+  80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 66+  80E4 21 40 00 22
 67+  80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 67+  80EC 00 2A A0 00
 68+  80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 68+  80F4 80 00 36 00
 69+  80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 69+  80FC 7F 80 02 BE
 70+  8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 70+  8104 0A A6 00 05
 71+  8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 71+  810C 00 01 00 00
 72+  8110
 73+  8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 73+  8114 10 A0 00 11
 74+  8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 74+  811C 00 15 50 00
 75+  8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 75+  8124 40 00 1B 00
 76+  8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 76+  812C BF C0 01 5F
 77+  8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 77+  8134 05 53 00 02
 78+  8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 78+  813C 00 00 80 00
 79+  8140
 80+  8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 80+  8144 08 50 00 08
 81+  8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 81+  814C 00 0A A8 00
 82+  8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 82+  8154 A0 00 0D 80
 83+  8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 83+  815C 5F F8 00 AF
 84+  8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 84+  8164 02 A9 00 01
 85+  8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 85+  816C 00 00 40 00
 86+  8170
 87+  8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 87+  8174 04 28 00 04
 88+  8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 88+  817C 00 05 54 00
 89+  8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 89+  8184 D0 00 06 C0
 90+  8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 90+  818C 2F FC 00 57
 91+  8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 91+  8194 01 54 80 00
 92+  8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 92+  819C 00 00 20 00
 93+  81A0
 94+  81A0
 95+  81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
 96+  81A2 D0 81        	defw Badsat_der_f8
 97+  81A4 00 82        	defw Badsat_der_f9
 98+  81A6 30 82        	defw Badsat_der_fa
 99+  81A8 60 82        	defw Badsat_der_fb
100+  81AA 90 82        	defw Badsat_der_fc
101+  81AC C0 82        	defw Badsat_der_fd
102+  81AE F0 82        	defw Badsat_der_fe
103+  81B0
104+  81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
104+  81B4 54 40 AA 40
105+  81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
105+  81BC 17 FE 06 C0
106+  81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
106+  81C4 17 D4 02 2A
107+  81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
107+  81CC 00 14 00 08
108+  81D0
109+  81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
109+  81D4 20 00 2A 20
110+  81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
110+  81DC 2A A0 00 15
111+  81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
111+  81E4 00 03 60 00
112+  81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
112+  81EC F4 00 0B EA
113+  81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
113+  81F4 03 2A 80 00
114+  81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
114+  81FC 00 00 04 00
115+  8200
116+  8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
116+  8204 10 00 15 10
117+  8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
117+  820C 15 50 00 0A
118+  8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
118+  8214 80 01 B0 00
119+  8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
119+  821C FA 00 05 F5
120+  8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
120+  8224 01 95 40 00
121+  8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
121+  822C 00 00 02 00
122+  8230
123+  8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
123+  8234 08 00 0A 88
124+  8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
124+  823C 0A A8 00 05
125+  8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
125+  8244 C0 00 D8 00
126+  8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
126+  824C FD 00 02 FA
127+  8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
127+  8254 00 CA A0 00
128+  8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
128+  825C 80 00 01 00
129+  8260
130+  8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
130+  8264 84 00 05 44
131+  8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
131+  826C 05 54 00 02
132+  8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
132+  8274 E0 00 6C 00
133+  8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
133+  827C FE 80 01 7D
134+  8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
134+  8284 00 65 50 00
135+  8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
135+  828C 40 00 00 80
136+  8290
137+  8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
137+  8294 42 00 02 A2
138+  8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
138+  829C 02 AA 00 01
139+  82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
139+  82A4 F0 00 36 00
140+  82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
140+  82AC FF 40 00 BE
141+  82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
141+  82B4 00 32 A8 00
142+  82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
142+  82BC A0 00 00 40
143+  82C0
144+  82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
144+  82C4 A1 00 01 51
145+  82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
145+  82CC 01 55 00 00
146+  82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
146+  82D4 F8 00 1B 00
147+  82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
147+  82DC FF A0 00 1F
148+  82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
148+  82E4 00 09 54 00
149+  82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
149+  82EC 50 00 00 20
150+  82F0
151+  82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
151+  82F4 50 80 00 A8
152+  82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
152+  82FC 00 AA 80 00
153+  8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
153+  8304 FC 00 0D 80
154+  8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
154+  830C FF D0 00 0F
155+  8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
155+  8314 00 04 AA 00
156+  8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
156+  831C 28 00 00 10
157+  8320
158+  8320              ; ----------------------------------------------------------------------------------------
159+  8320
160+  8320              ; Amadeus. 2x2.
161+  8320
162+  8320 40 83        Indice_Amadeus_der defw Amadeus
163+  8322 00 00        	defw 0
164+  8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
165+  8326 00 00        	defw 0
166+  8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
167+  832A 00 00        	defw 0
168+  832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
169+  832E 00 00        	defw 0	 								; (Fín de índice).
170+  8330
171+  8330 40 83        Indice_Amadeus_izq defw Amadeus
172+  8332 00 00        	defw 0
173+  8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
174+  8336 00 00        	defw 0
175+  8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
176+  833A 00 00        	defw 0
177+  833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
178+  833E 00 00        	defw 0	 								; (Fín de índice).
179+  8340
180+  8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
180+  8344 26 64 24 24
181+  8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
181+  834C 6F F6 67 E6
182+  8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
182+  8354 F7 EF FF FF
183+  8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
183+  835C 8B D1 71 8E
184+  8360
185+  8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
185+  8364 F1 00 09 99
186+  8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
186+  836C 0B 0D 00 1B
187+  8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
187+  8374 80 19 F9 80
188+  8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
188+  837C F3 C0 3D FB
189+  8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
189+  8384 3E F7 C0 3E
190+  8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
190+  838C 40 1C 63 80
191+  8390
192+  8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
192+  8394 3C 40 02 66
193+  8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
193+  839C 02 C3 40 06
194+  83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
194+  83A4 60 06 7E 60
195+  83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
195+  83AC 3C F0 0F 7E
196+  83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
196+  83B4 0F BD F0 0F
197+  83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
197+  83BC 10 07 18 E0
198+  83C0
199+  83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
199+  83C4 8F 10 00 99
200+  83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
200+  83CC 00 B0 D0 01
201+  83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
201+  83D4 D8 01 9F 98
202+  83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
202+  83DC CF 3C 03 DF
203+  83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
203+  83E4 03 EF 7C 03
204+  83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
204+  83EC 44 01 C6 38
205+  83F0
206+  83F0              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83F0              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83F0
  2+  83F0              ; Base de datos de entidades e Índice.
  3+  83F0              ;
  4+  83F0              ; 17/02/23
  5+  83F0
  6+  83F0              ; Control. %00000001 00000001
  7+  83F0              ;
  8+  83F0              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83F0              ;               _ hacen las entidades hacia abajo.
 10+  83F0              ;
 11+  83F0              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83F0
 13+  83F0 F6 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83F2 FE 83        	defw Disparo_2A
 15+  83F4 06 84        	defw Disparo_3A
 16+  83F6
 17+  83F6 00 00        Disparo_1A defw 0									; Control.
 18+  83F8 00 00        	defw 0											; Puntero objeto.
 19+  83FA 00 00        	defw 0											; Puntero de impresión.
 20+  83FC 00 00        	defw 0											; Rutina de impresión.
 21+  83FE
 22+  83FE 00 00        Disparo_2A defw 0									; Control.
 23+  8400 00 00        	defw 0											; Puntero objeto.
 24+  8402 00 00        	defw 0											; Puntero de impresión.
 25+  8404 00 00        	defw 0											; Rutina de impresión.
 26+  8406
 27+  8406 00 00        Disparo_3A defw 0
 28+  8408
 29+  8408 1E 84        Indice_de_disparos_entidades defw Disparo_1
 30+  840A 26 84        	defw Disparo_2
 31+  840C 2E 84        	defw Disparo_3
 32+  840E 36 84        	defw Disparo_4
 33+  8410 3E 84        	defw Disparo_5
 34+  8412 46 84        	defw Disparo_6
 35+  8414 4E 84        	defw Disparo_7
 36+  8416 56 84        	defw Disparo_8
 37+  8418 5E 84        	defw Disparo_9
 38+  841A 66 84        	defw Disparo_10
 39+  841C 6E 84        	defw Disparo_11
 40+  841E
 41+  841E 00 00        Disparo_1 defw 0									; Control.
 42+  8420 00 00        	defw 0											; Puntero objeto.
 43+  8422 00 00        	defw 0											; Puntero de impresión.
 44+  8424 00 00        	defw 0											; Rutina de impresión.
 45+  8426
 46+  8426 00 00        Disparo_2 defw 0									; Control.
 47+  8428 00 00        	defw 0											; Puntero objeto.
 48+  842A 00 00        	defw 0											; Puntero de impresión.
 49+  842C 00 00        	defw 0											; Rutina de impresión.
 50+  842E
 51+  842E 00 00        Disparo_3 defw 0									; Control.
 52+  8430 00 00        	defw 0											; Puntero objeto.
 53+  8432 00 00        	defw 0											; Puntero de impresión.
 54+  8434 00 00        	defw 0											; Rutina de impresión.
 55+  8436
 56+  8436 00 00        Disparo_4 defw 0									; Control.
 57+  8438 00 00        	defw 0											; Puntero objeto.
 58+  843A 00 00        	defw 0											; Puntero de impresión.
 59+  843C 00 00        	defw 0											; Rutina de impresión.
 60+  843E
 61+  843E 00 00        Disparo_5 defw 0									; Control.
 62+  8440 00 00        	defw 0											; Puntero objeto.
 63+  8442 00 00        	defw 0											; Puntero de impresión.
 64+  8444 00 00        	defw 0											; Rutina de impresión.
 65+  8446
 66+  8446 00 00        Disparo_6 defw 0									; Control.
 67+  8448 00 00        	defw 0											; Puntero objeto.
 68+  844A 00 00        	defw 0											; Puntero de impresión.
 69+  844C 00 00        	defw 0											; Rutina de impresión.
 70+  844E
 71+  844E 00 00        Disparo_7 defw 0									; Control.
 72+  8450 00 00        	defw 0											; Puntero objeto.
 73+  8452 00 00        	defw 0											; Puntero de impresión.
 74+  8454 00 00        	defw 0											; Rutina de impresión.
 75+  8456
 76+  8456 00 00        Disparo_8 defw 0									; Control.
 77+  8458 00 00        	defw 0											; Puntero objeto.
 78+  845A 00 00        	defw 0											; Puntero de impresión.
 79+  845C 00 00        	defw 0											; Rutina de impresión.
 80+  845E
 81+  845E 00 00        Disparo_9 defw 0									; Control.
 82+  8460 00 00        	defw 0											; Puntero objeto.
 83+  8462 00 00        	defw 0											; Puntero de impresión.
 84+  8464 00 00        	defw 0											; Rutina de impresión.
 85+  8466
 86+  8466 00 00        Disparo_10 defw 0									; Control.
 87+  8468 00 00        	defw 0											; Puntero objeto.
 88+  846A 00 00        	defw 0											; Puntero de impresión.
 89+  846C 00 00        	defw 0											; Rutina de impresión.
 90+  846E
 91+  846E 00 00        Disparo_11 defw 0
 92+  8470
 93+  8470              ; -------------------------------------------------------------------------------------
 94+  8470
 95+  8470              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8470
 97+  8470 B6 84        	defw Entidad_1
 98+  8472 F0 84        	defw Entidad_2
 99+  8474 2A 85        	defw Entidad_3
100+  8476 64 85        	defw Entidad_4
101+  8478              ;	...
102+  8478              ;	...
103+  8478              ;	+ entidades ...
104+  8478
105+  8478 00 00        	defw 0
106+  847A 00 00        	defw 0
107+  847C
108+  847C              ; ---------- ---------- ---------- ---------- ----------
109+  847C
110+  847C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  847E 00 00        	defw 0		 									; (Posicion_actual).
112+  8480 00 00        	defw 0	 										; (Puntero_objeto).
113+  8482 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  8485
115+  8485 05           	db %00000101									; (Attr).
116+  8486
117+  8486 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8488 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  848A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  848C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  848E
122+  848E D0 50        	defw $50d0										; (Posicion_inicio).
123+  8490 04           	db 4 											; (Cuad_objeto).
124+  8491
125+  8491 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  8495
127+  8495 00 00        	db 0,0											; Variables_de_borrado
128+  8497 00 00        	defw 0											;	" " " " " " "
129+  8499 00 00        	defw 0											;	" " " " " " "
130+  849B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  849F
132+  849F 00 00        	db 0,0											; Variables_de_pintado
133+  84A1 00 00        	defw 0											;	" " " " " " "
134+  84A3 00 00        	defw 0											;	" " " " " " "
135+  84A5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A9
137+  84A9 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
138+  84AB
139+  84AB 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84AF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84B2
142+  84B2 00           	db 0 											; (Columnas).
143+  84B3 00 00        	defw 0											; (Limite_horizontal).
144+  84B5 00           	db 0											; (Limite_vertical).
145+  84B6
146+  84B6              ; ---------- ---------- ---------- ---------- ----------
147+  84B6
148+  84B6 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B8 00 00        	defw 0											; (Posicion_actual).
150+  84BA 00 00        	defw 0 											; (Puntero_objeto).
151+  84BC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84BF
153+  84BF 00           	db %00000000 									; (Attr).
154+  84C0
155+  84C0 00 00        	defw 0											; (Indice_Sprite_der).
156+  84C2 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84C4 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84C6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C8
160+  84C8 00 00        	defw 0											; (Posicion_inicio).
161+  84CA 00           	db 0											; (Cuad_objeto).
162+  84CB
163+  84CB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84CF
165+  84CF 00 00        	db 0,0										    ; Variables_de_borrado
166+  84D1 00 00        	defw 0											;	" " " " " " "
167+  84D3 00 00        	defw 0											;	" " " " " " "
168+  84D5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D9
170+  84D9 00 00        	db 0,0											; Variables_de_pintado
171+  84DB 00 00        	defw 0											;	" " " " " " "
172+  84DD 00 00        	defw 0											;	" " " " " " "
173+  84DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84E3
175+  84E3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84E5
177+  84E5 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84EC
180+  84EC 00           	db 0 											; (Columnas).
181+  84ED 00 00        	defw 0											; (Limite_horizontal).
182+  84EF 00           	db 0											; (Limite_vertical).
183+  84F0
184+  84F0              ; ---------- ---------- ---------- ---------- ----------
185+  84F0
186+  84F0 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84F2 00 00        	defw 0                                          ; (Posicion_actual).
188+  84F4 00 00        	defw 0											; (Puntero_objeto).
189+  84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F9
191+  84F9 02           	db %00000010									; (Attr).
192+  84FA
193+  84FA A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84FC 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  8502
198+  8502 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  8504 02           	db 2											; (Cuad_objeto).
200+  8505
201+  8505 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8509
203+  8509 00 00        	db 0,0											; Variables_de_borrado
204+  850B 00 00        	defw 0										 	;	" " " " " " "
205+  850D 00 00        	defw 0											;	" " " " " " "
206+  850F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  8513
208+  8513 00 00        	db 0,0											; Variables_de_pintado
209+  8515 00 00        	defw 0											;	" " " " " " "
210+  8517 00 00        	defw 0											;	" " " " " " "
211+  8519 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  851D
213+  851D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  851F
215+  851F D7 92 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  8523 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  8526
218+  8526 00           	db 0 											; (Columnas).
219+  8527 00 00        	defw 0											; (Limite_horizontal).
220+  8529 00           	db 0											; (Limite_vertical).
221+  852A
222+  852A              ; ---------- ---------- ---------- ---------- ----------
223+  852A
224+  852A 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  852C 00 00        	defw 0                                          ; (Posicion_actual).
226+  852E 00 00        	defw 0											; (Puntero_objeto).
227+  8530 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  8533
229+  8533 04           	db %00000100									; (Attr).
230+  8534
231+  8534 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  8536 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8538
234+  8538 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  853A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  853C
237+  853C A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  853E 01           	db 1											; (Cuad_objeto).
239+  853F
240+  853F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  8543
242+  8543 00 00        	db 0,0											; Variables_de_borrado
243+  8545 00 00        	defw 0										 	;	" " " " " " "
244+  8547 00 00        	defw 0											;	" " " " " " "
245+  8549 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  854D
247+  854D 00 00        	db 0,0											; Variables_de_pintado
248+  854F 00 00        	defw 0											;	" " " " " " "
249+  8551 00 00        	defw 0											;	" " " " " " "
250+  8553 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  8557
252+  8557 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8559
254+  8559 D9 92 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  855D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8560
257+  8560 00           	db 0 											; (Columnas).
258+  8561 00 00        	defw 0											; (Limite_horizontal).
259+  8563 00           	db 0											; (Limite_vertical).
260+  8564
261+  8564              ; ---------- ---------- ---------- ---------- ----------
262+  8564
263+  8564 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  8566 00 00        	defw 0                                          ; (Posicion_actual).
265+  8568 00 00        	defw 0 											; (Puntero_objeto).
266+  856A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  856D
268+  856D 01           	db %00000001									; (Attr).
269+  856E
270+  856E A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8570 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  8572
273+  8572 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  8574 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  8576
276+  8576 BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8578 00           	db 0											; (Cuad_objeto).
278+  8579
279+  8579 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  857D
281+  857D 00 00        	db 0,0											; Variables_de_borrado
282+  857F 00 00        	defw 0										 	;	" " " " " " "
283+  8581 00 00        	defw 0											;	" " " " " " "
284+  8583 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  8587
286+  8587 00 00        	db 0,0											; Variables_de_pintado
287+  8589 00 00        	defw 0											;	" " " " " " "
288+  858B 00 00        	defw 0											;	" " " " " " "
289+  858D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8591
291+  8591 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  8593
293+  8593 C9 92 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  8597 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  859A
296+  859A 00           	db 0 											; (Columnas).
297+  859B 00 00        	defw 0											; (Limite_horizontal).
298+  859D 00           	db 0											; (Limite_vertical).
299+  859E
# file closed: Entidades_y_disparos.asm
 21   859E
 22   859E              ; ******************************************************************************************************************************************************************************************
 23   859E              ; Constantes.
 24   859E              ; ******************************************************************************************************************************************************************************************
 25   859E              ;
 26   859E              ; 8/11/22
 27   859E              ;
 28   859E              ; Constantes generales.
 29   859E              ;
 30   859E
 31   859E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   859E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   859E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   859E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   859E              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 36   859E
 37   859E              ;                                   				    ; _de los registros y las llamadas a [Pintorrejeo].
 38   859E              ;                               				        ; De momento situamos este almacén en $7000.
 39   859E
 40   859E
 41   859E              ; ******************************************************************************************************************************************************************************************
 42   859E              ; Variables.
 43   859E              ; ******************************************************************************************************************************************************************************************
 44   859E              ;
 45   859E              ; 10/11/22
 46   859E              ;
 47   859E              ; Variables de DRAW. (Motor principal).
 48   859E              ;
 49   859E              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 50   859E
 51   859E 02           Filas db 2												; Filas. [DRAW]
 52   859F 02           Columns db 2  											; Nº de columnas. [DRAW]
 53   85A0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 54   85A2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 55   85A4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 56   85A5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 57   85A6
 58   85A6              ; ---------- ---------- ---------- ---------;      ;---------
 59   85A6
 60   85A6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 61   85A7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 62   85A7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 63   85A7 04           Attr db %00000100										; Atributos de la entidad:
 64   85A8
 65   85A8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 66   85A8              ;
 67   85A8              ;	COLORES: 0 ..... NEGRO
 68   85A8              ;    		 1 ..... AZUL
 69   85A8              ; 			 2 ..... ROJO
 70   85A8              ;			 3 ..... MAGENTA
 71   85A8              ; 			 4 ..... VERDE
 72   85A8              ; 			 5 ..... CIAN
 73   85A8              ;			 6 ..... AMARILLO
 74   85A8              ; 			 7 ..... BLANCO
 75   85A8
 76   85A8 A0 81        Indice_Sprite_der defw Indice_Badsat_der
 77   85AA 20 80        Indice_Sprite_izq defw Indice_Badsat_izq
 78   85AC 00 00        Puntero_DESPLZ_der defw 0
 79   85AE 00 00        Puntero_DESPLZ_izq defw 0
 80   85B0
 81   85B0 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 82   85B2 02           Cuad_objeto db 2			 							; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 83   85B3
 84   85B3              ; Variables de objeto. (Características).
 85   85B3
 86   85B3 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 87   85B4 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 88   85B5 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 89   85B6 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 90   85B7
 91   85B7 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 92   85B9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 93   85BB 00 00        	defw 0
 94   85BD 00 00 00 00  	db 0,0,0,0
 95   85C1
 96   85C1 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 97   85C3 00 00        	defw 0
 98   85C5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 99   85C7 00 00 00 00  	db 0,0,0,0
100   85CB
101   85CB              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
102   85CB
103   85CB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
104   85CC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
105   85CC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
106   85CC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
107   85CC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
108   85CC              ;
109   85CC              ; 														DESCRIPCIÖN:
110   85CC              ;
111   85CC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
112   85CC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
113   85CC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
114   85CC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
115   85CC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
116   85CC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
117   85CC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
118   85CC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
119   85CC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
120   85CC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
121   85CC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
122   85CC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
123   85CC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
124   85CC              ;
125   85CC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
126   85CC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
127   85CC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
128   85CC
129   85CC 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
130   85CD
131   85CD              ; Movimiento.
132   85CD
133   85CD C5 92        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
134   85CF 00 00        Puntero_mov defw 0
135   85D1 00           Contador_db_mov db 0
136   85D2 00           Incrementa_puntero db 0
137   85D3 00           Repetimos_db db 0
138   85D4
139   85D4              ; Variables de funcionamiento. [DRAW].
140   85D4
141   85D4 00           Columnas db 0
142   85D5 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
143   85D7              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
144   85D7 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
145   85D8
146   85D8              ; 59 Bytes por entidad.
147   85D8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
148   85D8              ;					         		---------;      ;---------
149   85D8
150   85D8
151   85D8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
152   85D8
153   85D8              ; Gestión de ENTIDADES.
154   85D8
155   85D8 00 00        Puntero_store_entidades defw 0
156   85DA 00 00        Puntero_restore_entidades defw 0
157   85DC 00 00        Indice_restore defw 0
158   85DE 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
159   85DF 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
160   85E0              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
161   85E0              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
162   85E0              ;														; _ (Numero_de_malotes)="0".
163   85E0 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
164   85E2              ;														; _variable para almacenar lo posición del puntero_
165   85E2              ; 														; _de pila, SP.
166   85E2 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
167   85E4              ;														; La utiliza la rutina [Extrae_foto_registros].
168   85E4 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
169   85E6              ;														; _el snapshot de los registros de la siguiente entidad.
170   85E6              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
171   85E6
172   85E6              ; Gestión de Disparos.
173   85E6
174   85E6 08 84        Stack_guns defw Indice_de_disparos_entidades			; Este puntero se irá desplazando por el índice de disparos_
175   85E8              ;														; _a medida que estos se van creando. Se sitúa en el siguiente_
176   85E8              ;														; _campo "vacio" del índice para alojar un nuevo disparo.
177   85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
178   85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
179   85EC
180   85EC
181   85EC
182   85EC              ; Gestión de FRAMES.
183   85EC
184   85EC 00           Switch db 0
185   85ED
186   85ED              ; Variables de Raster y localización en pantalla.
187   85ED
188   85ED 00 FF        Temp_Raster defw $ff00
189   85EF
190   85EF              ; Rutina principal *************************************************************************************************************************************************************************
191   85EF              ;
192   85EF              ;	14/11/22
193   85EF
194   85EF 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
195   85F2
196   85F2 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
197   85F4 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
198   85F6 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
199   85F8 F3           	DI
200   85F9
201   85F9 3E 01        	ld a,1
202   85FB D3 FE        	out ($fe),a
203   85FD
204   85FD 3E 07        	ld a,%00000111
205   85FF CD FE 8E     	call Cls
206   8602
207   8602              ;	call Pinta_FILAS
208   8602
209   8602 CD 1C 88     	call Pulsa_ENTER
210   8605
211   8605 21 DE 85     	ld hl,Numero_de_entidades
212   8608 46           	ld b,(hl)
213   8609 04           	inc b
214   860A 05           	dec b
215   860B 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
216   860D
217   860D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
218   860D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
219   860D              ;	Pintamos el resto de entidades:
220   860D
221   860D CD 2E 87     	call Inicia_punteros_de_entidades
222   8610
223   8610              ;	INICIA ENTIDADES!!!!!
224   8610
225   8610 C5           1 push bc  												; Guardo el contador de entidades.
226   8611 CD 6F 87      	call Inicia_Puntero_objeto
227   8614 CD B0 89     	call Draw
228   8617 CD A0 7F     	call Guarda_foto_registros
229   861A CD B7 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
230   861D C1           	pop bc
231   861E 10 F0        	djnz 1B  											; Decremento el contador de entidades.
232   8620
233   8620              ; 	INICIA AMADEUS!!!!!
234   8620
235   8620 CD F8 87     3 call Restore_Amadeus
236   8623 CD 6F 87     	call Inicia_Puntero_objeto
237   8626 CD B0 89     	call Draw
238   8629 CD A0 7F     	call Guarda_foto_registros
239   862C CD 0A 88     	call Store_Amadeus
240   862F
241   862F              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
242   862F
243   862F CD 44 87     	call Inicia_Puntero_Disparo_Entidades
244   8632 CD 4B 87     	call Inicia_Puntero_Disparo_Amadeus
245   8635
246   8635
247   8635              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
248   8635
249   8635 CD 2E 87     	call Inicia_punteros_de_entidades
250   8638 CD E6 87     	call Restore_Primera_entidad
251   863B
252   863B 3A DE 85     	ld a,(Numero_de_entidades)
253   863E 3C           	inc a
254   863F 32 DF 85     	ld (Numero_de_malotes),a
255   8642
256   8642 FB           2 ei
257   8643 18 FD        	jr 2B
258   8645
259   8645              ; -----------------------------------------------------------------------------------
260   8645
261   8645              Frame
262   8645
263   8645              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
264   8645              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
265   8645
266   8645 3E 02            ld a,2
267   8647 D3 FE            out ($fe),a
268   8649 CD B4 8C     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
269   864C 3E 01            ld a,1
270   864E D3 FE            out ($fe),a
271   8650
272   8650              ; ----------------------------------------------------------------------
273   8650
274   8650 21 00 70     	ld hl,Album_de_fotos
275   8653 22 E4 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
276   8656              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
277   8656 3A DE 85         ld a,(Numero_de_entidades)
278   8659 47               ld b,a
279   865A A7           	and a
280   865B 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
281   865D
282   865D C5           2 push bc
283   865E CD A7 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
284   8661 3A CB 85     	ld a,(Ctrl_0)
285   8664 CB 67        	bit 4,a
286   8666 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
287   8668
288   8668              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
289   8668              ; Las entidades sólo generan disparo cuando se mueven.
290   8668              ; 16/02/23.
291   8668              ; [[[
292   8668 CD 53 88     	call Detecta_disparo_entidad
293   866B              ; ]]]
294   866B
295   866B CD F5 86     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
296   866E
297   866E 21 CB 85     1 ld hl,Ctrl_0
298   8671 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
299   8673 AF           	xor a
300   8674 32 CC 85     	ld (Obj_dibujado),a
301   8677 CD B7 87     	call Store_Restore_entidades
302   867A C1           	pop bc
303   867B 10 E0        	djnz 2B
304   867D
305   867D CD F8 87     4 call Restore_Amadeus
306   8680 CD C6 86     	call Mov_Amadeus
307   8683 3A CB 85     	ld a,(Ctrl_0)
308   8686 CB 67        	bit 4,a
309   8688 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
310   868A CD F5 86     	call Guarda_foto_entidad_a_pintar
311   868D
312   868D 21 CB 85     3 ld hl,Ctrl_0
313   8690 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
314   8692 AF           	xor a
315   8693 32 CC 85     	ld (Obj_dibujado),a
316   8696 CD 0A 88     	call Store_Amadeus
317   8699
318   8699              ; -----
319   8699
320   8699 CD 2E 87     	call Inicia_punteros_de_entidades
321   869C CD E6 87     	call Restore_Primera_entidad
322   869F CD 52 87     	call Calcula_numero_de_malotes
323   86A2
324   86A2 3E 04        	ld a,4
325   86A4 D3 FE        	out ($fe),a
326   86A6 C9           	ret
327   86A7
328   86A7              ; --------------------------------------------------------------------------------------------------------------
329   86A7              ;
330   86A7              ;	29/1/23
331   86A7
332   86A7              Mov_obj
333   86A7
334   86A7              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
335   86A7
336   86A7 AF           	xor a
337   86A8 32 CC 85     	ld (Obj_dibujado),a
338   86AB CD FF 86         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
339   86AE              ;														; Obj_dibujado="0".
340   86AE              ; Movemos Entidades malignas.
341   86AE
342   86AE CD DB 92     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
343   86B1 3A CB 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
344   86B4 CB 67        	bit 4,a
345   86B6 C8           	ret z
346   86B7
347   86B7              ; ---------
348   86B7
349   86B7 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
350   86B9 32 CC 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
351   86BC CD FF 86         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
352   86BF CD 16 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
353   86C2 CD E5 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
354   86C5 C9           	ret													; _de la misma.
355   86C6
356   86C6              ; --------------------------------------------------------------------------------------------------------------
357   86C6              ;
358   86C6              ;	29/1/23
359   86C6
360   86C6              Mov_Amadeus
361   86C6
362   86C6 AF           	xor a
363   86C7 32 CC 85     	ld (Obj_dibujado),a
364   86CA CD FF 86         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
365   86CD              ;														; Obj_dibujado="0".
366   86CD              ; Movemos Amadeus.
367   86CD
368   86CD CD 30 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
369   86D0 3A CB 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
370   86D3 CB 67        	bit 4,a
371   86D5 C8           	ret z
372   86D6
373   86D6              ; ---------
374   86D6
375   86D6 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
376   86D8 32 CC 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
377   86DB CD FF 86         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
378   86DE CD 16 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
379   86E1 CD E5 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
380   86E4 C9           	ret													; _de la nave.
381   86E5
382   86E5              ; --------------------------------------------------------------------------------------------------------------
383   86E5              ;
384   86E5              ;	31/01/23
385   86E5              ;
386   86E5              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
387   86E5
388   86E5              Guarda_foto_entidad_a_borrar
389   86E5
390   86E5 CD 8A 8C     	call Prepara_draw
391   86E8 CD C4 8B     	call calcula_CColumnass
392   86EB CD FB 8B     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
393   86EE CD 50 8C     	call Define_rutina_de_impresion
394   86F1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
395   86F4 C9           	ret
396   86F5
397   86F5              ; --------------------------------------------------------------------------------------------------------------
398   86F5              ;
399   86F5              ;	31/01/23
400   86F5              ;
401   86F5              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
402   86F5              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
403   86F5
404   86F5              Guarda_foto_entidad_a_pintar
405   86F5
406   86F5 CD 22 87     	call Repone_pintar
407   86F8 CD B0 89     	call Draw
408   86FB CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
409   86FE C9           	ret
410   86FF
411   86FF              ; --------------------------------------------------------------------------------------------------------------
412   86FF              ;
413   86FF              ;
414   86FF
415   86FF 21 9E 85     Prepara_var_pintado_borrado	ld hl,Filas
416   8702 3A CC 85     	ld a,(Obj_dibujado)
417   8705 A7           	and a
418   8706 28 05        	jr z,1F
419   8708 11 C1 85     	ld de,Variables_de_pintado
420   870B 18 03        	jr 2F
421   870D 11 B7 85     1 ld de,Variables_de_borrado
422   8710 01 08 00     2 ld bc,8
423   8713 ED B0        	ldir
424   8715 C9           	ret
425   8716
426   8716              ; --------------------------------------------------------------------------------------------------------------
427   8716
428   8716 21 B7 85     Repone_borrar ld hl,Variables_de_borrado
429   8719 11 9E 85     	ld de,Filas
430   871C 01 08 00     	ld bc,8
431   871F ED B0        	ldir
432   8721 C9           	ret
433   8722
434   8722 21 C1 85     Repone_pintar ld hl,Variables_de_pintado
435   8725 11 9E 85     	ld de,Filas
436   8728 01 08 00     	ld bc,8
437   872B ED B0        	ldir
438   872D C9           	ret
439   872E
440   872E              ; *************************************************************************************************************************************************************
441   872E              ;
442   872E              ; 8/1/23
443   872E              ;
444   872E              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
445   872E              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
446   872E              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
447   872E
448   872E              ; Destruye HL y DE !!!!!
449   872E
450   872E              Inicia_punteros_de_entidades
451   872E
452   872E 21 70 84     	ld hl,Indice_de_entidades
453   8731 CD 69 87         call Extrae_address
454   8734 22 D8 85         ld (Puntero_store_entidades),hl
455   8737 21 72 84     	ld hl,Indice_de_entidades+2
456   873A 22 DC 85     	ld (Indice_restore),hl
457   873D CD 69 87     	call Extrae_address
458   8740 22 DA 85     	ld (Puntero_restore_entidades),hl
459   8743 C9               ret
460   8744
461   8744              ; *************************************************************************************************************************************************************
462   8744              ;
463   8744              ; 8/1/23
464   8744              ;
465   8744              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
466   8744
467   8744 21 08 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
468   8747 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
469   874A C9           	ret
470   874B 21 F0 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
471   874E 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
472   8751 C9           	ret
473   8752
474   8752              ; -------------------------------------------------------------------------------------------------------------
475   8752              ;
476   8752              ; 30/1/23
477   8752              ;
478   8752
479   8752 2A E4 85     Calcula_numero_de_malotes ld hl,(Stack_snapshot)
480   8755 7D           	ld a,l
481   8756 A7           	and a
482   8757 28 0C        	jr z,3F
483   8759 AF           	xor a
484   875A 67           	ld h,a
485   875B 7D           	ld a,l
486   875C D6 06        1 sub 6
487   875E 28 03        	jr z,2F
488   8760 24           	inc h
489   8761 18 F9        	jr 1B
490   8763 24           2 inc h
491   8764 7C           	ld a,h
492   8765 32 DF 85     3 ld (Numero_de_malotes),a
493   8768 C9           	ret
494   8769
495   8769              ; *************************************************************************************************************************************************************
496   8769              ;
497   8769              ; 20/10/22
498   8769              ;
499   8769              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
500   8769              ;
501   8769              ; Destruye el puntero y DE !!!!!
502   8769
503   8769 5E           Extrae_address ld e,(hl)
504   876A 23           	inc hl
505   876B 56           	ld d,(hl)
506   876C 2B           	dec hl
507   876D EB           	ex de,hl
508   876E C9           	ret
509   876F
510   876F              ; *************************************************************************************************************************************************************
511   876F              ;
512   876F              ;	7/2/23
513   876F              ;
514   876F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
515   876F              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
516   876F              ;
517   876F              ;   Destruye HL y BC !!!!!,
518   876F              ;
519   876F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
520   876F              ;					"0" ..... Izquierda.
521   876F
522   876F              Inicia_Puntero_objeto
523   876F
524   876F 3A B2 85     	ld a,(Cuad_objeto)
525   8772 E6 01        	and 1
526   8774 F5           	push af
527   8775 CC 93 87     	call z,Inicia_puntero_objeto_izq
528   8778 F1           	pop af
529   8779 28 2B        	jr z,1F
530   877B CD 80 87     	call Inicia_puntero_objeto_der
531   877E 18 26        	jr 1F
532   8780
533   8780              ; Arrancamos desde la parte izquierda de la pantalla.
534   8780              ; Iniciamos (Indice_Sprite_der).
535   8780
536   8780 2A A8 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
537   8783 22 AC 85     	ld (Puntero_DESPLZ_der),hl
538   8786 CD 69 87     	call Extrae_address
539   8789 22 A2 85     	ld (Puntero_objeto),hl
540   878C
541   878C 2A AA 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
542   878F              ;	call Extrae_address
543   878F 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
544   8792 C9           	ret
545   8793
546   8793              ; Arrancamos desde la parte derecha de la pantalla.
547   8793              ; Iniciamos (Indice_Sprite_izq).
548   8793
549   8793 2A AA 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
550   8796 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
551   8799 CD 69 87     	call Extrae_address
552   879C 22 A2 85     	ld (Puntero_objeto),hl
553   879F
554   879F 2A A8 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
555   87A2              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
556   87A2 22 AC 85     	ld (Puntero_DESPLZ_der),hl
557   87A5 C9           	ret
558   87A6
559   87A6              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
560   87A6
561   87A6 21 40 83     1 ld hl,Amadeus
562   87A9 ED 4B A2 85  	ld bc,(Puntero_objeto)
563   87AD B7 ED 42     	sub hl,bc
564   87B0 C0           	ret nz
565   87B1 21 CB 85     	ld hl,Ctrl_0
566   87B4 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
567   87B6 C9           	ret 												; _de nuestra nave en los extremos.
568   87B7
569   87B7              ; *************************************************************************************************************************************************************
570   87B7              ;
571   87B7              ;	8/1/23
572   87B7              ;
573   87B7              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
574   87B7              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
575   87B7
576   87B7              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
577   87B7              ;	_de la 2ª y 3ª entidad respectivamente.
578   87B7
579   87B7
580   87B7
581   87B7              Store_Restore_entidades
582   87B7
583   87B7 E5           	push hl
584   87B8 D5           	push de
585   87B9 C5            	push bc
586   87BA
587   87BA              ;	STORE !!!!!
588   87BA              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
589   87BA
590   87BA 21 9E 85     	ld hl,Filas
591   87BD ED 5B D8 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
592   87C1 01 3A 00     	ld bc,58
593   87C4 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
594   87C6
595   87C6              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
596   87C6
597   87C6 2A DA 85     	ld hl,(Puntero_restore_entidades)
598   87C9 22 D8 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
599   87CC 11 9E 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
600   87CF 01 3A 00     	ld bc,58
601   87D2 ED B0        	ldir
602   87D4
603   87D4              ;	Incrementa RESTORE !!!!!
604   87D4
605   87D4 2A DC 85         ld hl,(Indice_restore)
606   87D7 23           	inc hl
607   87D8 23           	inc hl
608   87D9 22 DC 85     	ld (Indice_restore),hl
609   87DC CD 69 87         call Extrae_address
610   87DF 22 DA 85         ld (Puntero_restore_entidades),hl
611   87E2 C1           	pop bc
612   87E3 D1           	pop de
613   87E4 E1           	pop hl
614   87E5 C9           	ret
615   87E6
616   87E6              ; **************************************************************************************************
617   87E6              ;
618   87E6              ;	29/10/22
619   87E6              ;
620   87E6              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
621   87E6
622   87E6 E5           Restore_Primera_entidad push hl
623   87E7 D5           	push de
624   87E8 C5            	push bc
625   87E9 2A D8 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
626   87EC 11 9E 85     	ld de,Filas
627   87EF 01 3A 00     	ld bc,58
628   87F2 ED B0        	ldir
629   87F4 C1           	pop bc
630   87F5 D1           	pop de
631   87F6 E1           	pop hl
632   87F7 C9           	ret
633   87F8
634   87F8              ; **************************************************************************************************
635   87F8              ;
636   87F8              ;	25/01/23
637   87F8              ;
638   87F8              ;	Restore_Amadeus
639   87F8              ;
640   87F8              ;	Cargamos en DRAW los parámetros de Amadeus.
641   87F8              ;
642   87F8
643   87F8 E5           Restore_Amadeus	push hl
644   87F9 D5           	push de
645   87FA C5            	push bc
646   87FB 21 7C 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
647   87FE 11 9E 85     	ld de,Filas
648   8801 01 3A 00     	ld bc,58
649   8804 ED B0        	ldir
650   8806 C1           	pop bc
651   8807 D1           	pop de
652   8808 E1           	pop hl
653   8809 C9           	ret
654   880A
655   880A              ; *************************************************************************************************************************************************************
656   880A              ;
657   880A              ;	29/01/23
658   880A              ;
659   880A              ;	Store_Amadeus
660   880A              ;
661   880A              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
662   880A              ;
663   880A
664   880A E5           Store_Amadeus push hl
665   880B D5           	push de
666   880C C5            	push bc
667   880D 21 9E 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
668   8810 11 7C 84     	ld de,Amadeus_db
669   8813 01 3A 00     	ld bc,58
670   8816 ED B0        	ldir
671   8818 C1           	pop bc
672   8819 D1           	pop de
673   881A E1           	pop hl
674   881B C9           	ret
675   881C
676   881C              ; **************************************************************************************************
677   881C
678   881C              ; Teclado.
679   881C
680   881C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
681   881E DB FE        	in a,($fe)
682   8820 E6 01        	and $01
683   8822 28 02        	jr z,1f
684   8824 18 F6        	jr Pulsa_ENTER
685   8826 C9           1 ret
686   8827
687   8827              ; **************************************************************************************************
688   8827              ;
689   8827              ; Temporización.
690   8827
691   8827              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
692   8827              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
693   8827              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
694   8827              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
695   8827
696   8827              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
697   8827              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
698   8827              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
699   8827
700   8827              ; A partir de $4f61 no hace falta DELAY.
701   8827
702   8827              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
703   8827
704   8827 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
705   882A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
706   882B 78           	LD A,B
707   882C A7           	AND A
708   882D 20 FB        	JR NZ,wait
709   882F C9           	RET
710   8830
711   8830              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
712   8830              ;
713   8830              ;	16/02/23
714   8830
715   8830              Movimiento_Amadeus
716   8830
717   8830 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
718   8832 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
719   8834 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
720   8836 CC 8C 90         call z,Mov_left											;			"			"			"			"			"			"			"			"
721   8839 3E F7        	ld a,$f7
722   883B DB FE        	in a,($fe)
723   883D E6 01        	and $01
724   883F C8           	ret z
725   8840
726   8840 3E F7        	ld a,$f7
727   8842 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
728   8844 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
729   8846 CC 6E 8F     	call z,Mov_right										;			"			"			"			"			"			"			"			"
730   8849
731   8849              ; Disparo.
732   8849
733   8849 3E F7        	ld a,$f7												; "5" para disparar.
734   884B DB FE        	in a,($fe)
735   884D E6 10        	and $10
736   884F CC 87 88     	call z,Genera_disparo
737   8852 C9               ret
738   8853
739   8853              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
740   8853              ;
741   8853              ;	Rutina provisional.
742   8853
743   8853 3E 7F        Detecta_disparo_entidad	ld a,$7f
744   8855 DB FE        	in a,($fe)
745   8857 E6 01        	and 1
746   8859 C0           	ret nz
747   885A CD 87 88     	call Genera_disparo
748   885D C9           	ret
749   885E
750   885E              ; Pinta indicadores de FILAS. ------------------------------------------------------
751   885E
752   885E 21 10 40     Pinta_FILAS ld hl,$4010
753   8861              ;	ld b,9
754   8861              ;2 push hl
755   8861              ;	push bc
756   8861 06 BF        	ld b,$bf
757   8863 36 80        1 ld (hl),%10000000
758   8865 CD 96 8C     	call NextScan
759   8868 10 F9        	djnz 1B
760   886A              ;	pop bc
761   886A              ;	pop hl
762   886A              ;	inc l
763   886A              ;	djnz 2B
764   886A 06 03        	ld b,3
765   886C 21 00 47         ld hl,$4700
766   886F CD 75 88     3 call Bucle_1
767   8872 10 FB            djnz 3B
768   8874 C9               ret
769   8875
770   8875 C5           Bucle_1 push bc
771   8876 E5                   push hl
772   8877 D1                   pop de
773   8878 13                   inc de
774   8879 01 FF 00             ld bc,255
775   887C 36 FF                ld (hl),255
776   887E ED B0                ldir
777   8880 23                   inc hl
778   8881 3E 07                ld a,7
779   8883 84                   add a,h
780   8884 67                   ld h,a
781   8885 C1                   pop bc
782   8886 C9                   ret
783   8887
784   8887              ; ---------------------------------------------------------------
785   8887
786   8887              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  8887              ; ******************************************************************************************************************************************************************************************
  2+  8887              ;
  3+  8887              ;   19/02/23
  4+  8887              ;
  5+  8887              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  8887              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  8887              ;
  8+  8887              ;
  9+  8887              ;       -1 .defw ..... Control. %00000001 00000001
 10+  8887              ;
 11+  8887              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  8887              ;               _ hacen las entidades hacia abajo.
 13+  8887              ;
 14+  8887              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  8887              ;
 16+  8887              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  8887              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  8887              ;
 19+  8887              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  8887              ;           _ la bala.
 21+  8887              ;
 22+  8887              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  8887              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  8887              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  8887              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  8887              ;           _ en el momento de generarse la bala)).
 27+  8887
 28+  8887              Genera_disparo
 29+  8887
 30+  8887              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  8887              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  8887              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  8887              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  8887              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  8887              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga dichos valores.
 36+  8887              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  8887
 38+  8887 3A D4 85         ld a,(Columnas)
 39+  888A 47               ld b,a
 40+  888B 3A 9F 85         ld a,(Columns)
 41+  888E B8               cp b
 42+  888F C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  8890
 44+  8890 21 00 80         ld hl,Indice_disparo
 45+  8893 3A A6 85         ld a,(CTRL_DESPLZ)
 46+  8896 4F               ld c,a
 47+  8897 A7               and a
 48+  8898 28 0F            jr z,1F
 49+  889A E6 01            and 1
 50+  889C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 51+  889D 06 F9            ld b,$f9
 52+  889F 79               ld a,c
 53+  88A0
 54+  88A0 23           2 inc hl
 55+  88A1 23               inc hl
 56+  88A2 B8               cp b
 57+  88A3 28 04            jr z,1F
 58+  88A5 04               inc b
 59+  88A6 04               inc b
 60+  88A7 18 F7            jr 2B
 61+  88A9
 62+  88A9 CD 69 87     1 call Extrae_address
 63+  88AC E5               push hl
 64+  88AD FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 65+  88AF DD 21 01 8D      ld ix,Pinta_Amadeus_2x2             ; Rutinas_de_impresion en IX.
 66+  88B3
 67+  88B3              ; --------------- ---------------- ----------------- -------------
 68+  88B3              ;
 69+  88B3              ;   Genera disparo.
 70+  88B3              ;
 71+  88B3              ;   Generamos variables de disparo. Varían en función del cuadrante en el que nos encontramos.
 72+  88B3
 73+  88B3 3A B2 85         ld a,(Cuad_objeto)
 74+  88B6 FE 02            cp 2
 75+  88B8 38 59            jr c,3F
 76+  88BA 28 57            jr z,3F
 77+  88BC
 78+  88BC              ; Estamos en mitad inferior de pantalla, (cuadrantes 3 y 4).
 79+  88BC
 80+  88BC E6 01            and 1
 81+  88BE 28 27            jr z,4F
 82+  88C0
 83+  88C0              ; Estamos en el 3er cuadrante de pantalla.
 84+  88C0              ; 3er CUAD. ----- ----- ----- ----- -----
 85+  88C0              ;
 86+  88C0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 87+  88C0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 88+  88C0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 89+  88C0
 90+  88C0 2A A0 85     	ld hl,(Posicion_actual)
 91+  88C3
 92+  88C3              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
 93+  88C3
 94+  88C3 3A CB 85         ld a,(Ctrl_0)
 95+  88C6 CB 77            bit 6,a
 96+  88C8 28 0B            jr z,8F
 97+  88CA
 98+  88CA              ; Dispara Amadeus.
 99+  88CA
100+  88CA 0E 01            ld c,1                                          ; Dirección "1", hacia arriba.
101+  88CC CD A5 8C         call PreviousScan
102+  88CF CD A5 8C         call PreviousScan
103+  88D2 2B               dec hl                                          ; Puntero de impresión en HL.
104+  88D3 18 0A            jr 10F
105+  88D5
106+  88D5              ; Dispara Entidad.
107+  88D5
108+  88D5 0E 00        8 ld c,0                                            ; Dirección "0", hacia abajo.
109+  88D7 06 10            ld b,16
110+  88D9 CD 96 8C     9 call NextScan
111+  88DC 10 FB            djnz 9B
112+  88DE
113+  88DE              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
114+  88DE
115+  88DE 2B               dec hl                                          ; Puntero de impresión en HL.
116+  88DF CD 8B 89     10 call Comprueba_Colision                          ; Retorna "1" o "0" en B indicando si se produce Colisión
117+  88E2              ;                                                   ; _al generar el disparo.
118+  88E2
119+  88E2              ; LLegados a este punto tendremos:
120+  88E2              ;
121+  88E2              ;       Puntero_objeto_disparo en IY.
122+  88E2              ;       Rutinas_de_impresion en IX.
123+  88E2              ;       Puntero_de_impresion en HL.
124+  88E2              ;       Impacto/Dirección en BC.
125+  88E2
126+  88E2 CD 38 89         call Almacena_disparo
127+  88E5 18 50            jr 6F                                           ; RET.
128+  88E7
129+  88E7
130+  88E7              ; Estamos en el 4º cuadrante de pantalla.
131+  88E7              ; 4º CUAD. ----- ----- ----- ----- -----
132+  88E7              ;
133+  88E7              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
134+  88E7              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
135+  88E7              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
136+  88E7
137+  88E7 2A A0 85     4 ld hl,(Posicion_actual)
138+  88EA
139+  88EA              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
140+  88EA
141+  88EA 3A CB 85         ld a,(Ctrl_0)
142+  88ED CB 77            bit 6,a
143+  88EF 28 0A            jr z,11F
144+  88F1
145+  88F1              ; Dispara Amadeus.
146+  88F1
147+  88F1 0E 01            ld c,1                                          ; Dirección "1", hacia arriba.
148+  88F3 CD A5 8C         call PreviousScan
149+  88F6 CD A5 8C         call PreviousScan
150+  88F9 18 09            jr 14F
151+  88FB
152+  88FB              ; Dispara Entidad.
153+  88FB
154+  88FB 0E 00        11 ld c,0                                            ; Dirección "0", hacia abajo.
155+  88FD 06 10            ld b,16
156+  88FF CD 96 8C     12 call NextScan
157+  8902 10 FB            djnz 12B
158+  8904
159+  8904              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
160+  8904
161+  8904 3A A6 85     14 ld a,(CTRL_DESPLZ)
162+  8907 A7               and a
163+  8908 28 01            jr z,13F
164+  890A 2B               dec hl                                          ; Puntero de impresión en HL.
165+  890B CD 8B 89     13 call Comprueba_Colision                          ; Retorna "1" o "0" en B indicando si se produce Colisión
166+  890E              ;                                                   ; _al generar el disparo.
167+  890E
168+  890E              ; LLegados a este punto tendremos:
169+  890E              ;
170+  890E              ;       Puntero_objeto_disparo en IY.
171+  890E              ;       Rutinas_de_impresion en IX.
172+  890E              ;       Puntero_de_impresion en HL.
173+  890E              ;       Impacto/Dirección en BC.
174+  890E
175+  890E CD 38 89         call Almacena_disparo
176+  8911 18 24            jr 6F                                           ; RET.
177+  8913
178+  8913              ; Estamos en la mitad superior de pantalla, (cuadrantes 1 y 2).
179+  8913
180+  8913 28 0F        3 jr z,5F
181+  8915
182+  8915              ; 1er CUAD. ----- ----- ----- ----- -----
183+  8915              ;
184+  8915              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
185+  8915              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
186+  8915              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
187+  8915              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
188+  8915
189+  8915 2A A0 85     	ld hl,(Posicion_actual)
190+  8918 CD 96 8C     	call NextScan
191+  891B
192+  891B              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
193+  891B
194+  891B 2B               dec hl                                          ; Puntero de impresión en HL.
195+  891C 01 00 00         ld bc,0                                         ; Impacto,(B)="0". Dirección,(C)="0".
196+  891F
197+  891F              ; LLegados a este punto tendremos:
198+  891F              ;
199+  891F              ;       Puntero_objeto_disparo en IY.
200+  891F              ;       Rutinas_de_impresion en IX.
201+  891F              ;       Puntero_de_impresion en HL.
202+  891F              ;       Impacto/Dirección en BC.
203+  891F
204+  891F CD 38 89         call Almacena_disparo
205+  8922 18 13            jr 6F                                           ; RET.
206+  8924
207+  8924              ; Estamos en el 2º cuadrante de pantalla.
208+  8924              ; 2º CUAD. ----- ----- ----- ----- -----
209+  8924              ;
210+  8924              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
211+  8924              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
212+  8924              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
213+  8924              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
214+  8924
215+  8924 2A A0 85     5 ld hl,(Posicion_actual)
216+  8927 CD 96 8C     	call NextScan
217+  892A
218+  892A              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
219+  892A
220+  892A 3A A6 85         ld a,(CTRL_DESPLZ)
221+  892D A7               and a
222+  892E 28 01            jr z,7F
223+  8930 2B               dec hl
224+  8931 01 00 00     7 ld bc,0                                         ; Impacto,(B)="0". Dirección,(C)="0".
225+  8934
226+  8934              ; LLegados a este punto tendremos:
227+  8934              ;
228+  8934              ;       Puntero_objeto_disparo en IY.
229+  8934              ;       Rutinas_de_impresion en IX.
230+  8934              ;       Puntero_de_impresion en HL.
231+  8934              ;       Impacto/Dirección en BC.
232+  8934
233+  8934 CD 38 89         call Almacena_disparo
234+  8937
235+  8937              ; Preparamos registros para llamar a [Guarda_foto_registros].
236+  8937
237+  8937              6
238+  8937
239+  8937              ;    push ix
240+  8937              ;    pop hl
241+  8937              ;    push af
242+  8937              ;    pop ix
243+  8937
244+  8937
245+  8937              ;    call Guarda_foto_registros
246+  8937
247+  8937              ;    jr $
248+  8937
249+  8937 C9               ret
250+  8938
251+  8938              ; ----------------------------------------------------------------
252+  8938              ;
253+  8938              ;   25/02/23
254+  8938              ;
255+  8938              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
256+  8938              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
257+  8938
258+  8938              Almacena_disparo
259+  8938
260+  8938 E5               push hl
261+  8939 F1               pop af
262+  893A 08               ex af,af                                        ; Puntero_de_impresion en AF'.
263+  893B
264+  893B 0C           3 inc c
265+  893C 0D               dec c
266+  893D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
267+  893F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
268+  893F
269+  893F              ; Dispara AMADEUS.
270+  893F
271+  893F C5               push bc
272+  8940 01 F4 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
273+  8943 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
274+  8946 A7               and a
275+  8947 ED 42            sbc hl,bc
276+  8949 CC 4B 87         call z,Inicia_Puntero_Disparo_Amadeus
277+  894C C1               pop bc
278+  894D 28 3B            jr z,4F
279+  894F
280+  894F 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
281+  8952 23               inc hl
282+  8953 23               inc hl
283+  8954 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
284+  8957              ;                                                   ; _ Disparo_(+1).
285+  8957 18 18            jr 2F
286+  8959
287+  8959              ; Dispara una entidad.
288+  8959
289+  8959 C5           1 push bc
290+  895A 01 1C 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
291+  895D 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
292+  8960 A7               and a
293+  8961 ED 42            sbc hl,bc
294+  8963 CC 44 87         call z,Inicia_Puntero_Disparo_Entidades
295+  8966 C1               pop bc
296+  8967 28 21            jr z,4F
297+  8969
298+  8969 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
299+  896C 23               inc hl
300+  896D 23               inc hl
301+  896E 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
302+  8971              ;                                                   ; _ Disparo_(+1).
303+  8971 CD 69 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
304+  8974              ;                                                   ; _ los 8 bytes que definen el disparo:
305+  8974              ;
306+  8974              ;                                                     Puntero_objeto_disparo en IY.
307+  8974              ;                                                     Rutinas_de_impresion en IX.
308+  8974              ;                                                     Puntero_de_impresion en HL.
309+  8974              ;                                                     Impacto/Dirección en BC.
310+  8974
311+  8974 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
312+  8975 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
313+  8976 23               inc hl                                          ; _ al siguiente.
314+  8977 A7               and a
315+  8978 20 C1            jr nz,3B
316+  897A
317+  897A 08               ex af,af
318+  897B ED 73 E0 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
319+  897F F9               ld sp,hl
320+  8980
321+  8980 DD E5            push ix                                         ; Rutina de impresión.
322+  8982 F5               push af                                         ; Puntero de impresión.
323+  8983 FD E5            push iy                                         ; Puntero objeto.
324+  8985 C5               push bc                                         ; Control.
325+  8986
326+  8986 ED 7B E0 85      ld sp,(Stack)
327+  898A
328+  898A C9           4 ret
329+  898B
330+  898B              ; ----------------------------------------------------------------
331+  898B              ;
332+  898B              ;   20/02/23
333+  898B
334+  898B E5           Comprueba_Colision push hl
335+  898C 1E 00            ld e,0                                         ; E,(Impacto)="0".
336+  898E CD A2 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
337+  8991 1C               inc e
338+  8992 1D               dec e
339+  8993 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
340+  8995              ; Hay impacto.
341+  8995 43           2 ld b,e
342+  8996 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
343+  8997 C9           3 ret
344+  8998 E1           1 pop hl
345+  8999 E5               push hl
346+  899A CD 96 8C         call NextScan
347+  899D CD A2 89         call Bucle_2
348+  89A0 18 F3            jr 2B
349+  89A2
350+  89A2              ; ---------- ----------
351+  89A2
352+  89A2 06 02        Bucle_2 ld b,2
353+  89A4 7E           2 ld a,(hl)
354+  89A5 A7               and a
355+  89A6 20 04            jr nz,1F
356+  89A8 23               inc hl
357+  89A9 10 F9            djnz 2B
358+  89AB C9           3 ret
359+  89AC 1E 01        1 ld e,1
360+  89AE 18 FB            jr 3B
361+  89B0
362+  89B0              ; -------------------------------------------------------------------------------------------------------------
363+  89B0
364+  89B0
365+  89B0
366+  89B0
367+  89B0
# file closed: Disparo.asm
787   89B0              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  89B0              ; ******************************************************************************************************************************************************************************************
  2+  89B0              ;
  3+  89B0              ; 01/23
  4+  89B0              ;
  5+  89B0              ; DRAW. ************************************************************************************************************************************************************************************
  6+  89B0
  7+  89B0 CD 8A 8C     Draw call Prepara_draw
  8+  89B3 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  89B4 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  89B5 28 05        	jr z,2F
 11+  89B7
 12+  89B7 3A B2 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  89BA 18 0C        	jr 1F
 14+  89BC 2A B0 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  89BF 22 A0 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  89C2 CD 51 8B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  89C5              ;													; _la esquina superior izquierda de la pantalla.
 18+  89C5 CD 5D 93     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  89C8 3A CB 85     1 ld a,(Ctrl_0)
 20+  89CB CB 6F        	bit 5,a
 21+  89CD 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  89CF
 23+  89CF CD E7 89     	call Comprueba_limite_horizontal
 24+  89D2 CD 77 8A     	call Comprueba_limite_vertical
 25+  89D5
 26+  89D5              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  89D5
 28+  89D5 CD C4 8B     3 call calcula_CColumnass
 29+  89D8 CD FB 8B     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  89DB CD 50 8C     	call Define_rutina_de_impresion
 31+  89DE
 32+  89DE 3A CB 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  89E1 CB AF        	res 5,a											; _a ser de utilidad.
 34+  89E3 32 CB 85     	ld (Ctrl_0),a
 35+  89E6
 36+  89E6 C9           	ret
 37+  89E7
 38+  89E7              ; *******************************************************************************************************************************************************************************************
 39+  89E7              ;	21/01/23
 40+  89E7              ;
 41+  89E7              ; 	Comprueba_limite_horizontal.
 42+  89E7              ;
 43+  89E7              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  89E7              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  89E7              ;
 46+  89E7              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  89E7              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  89E7              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  89E7              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  89E7
 51+  89E7
 52+  89E7
 53+  89E7 3A CB 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  89EA CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  89EC 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  89EE E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  89F0 32 CB 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  89F3 18 09            jr 6F
 59+  89F5 CB 5F        1 bit 3,a
 60+  89F7 28 0A            jr z,2F
 61+  89F9 E6 F7            and $f7
 62+  89FB 32 CB 85         ld (Ctrl_0),a
 63+  89FE CD 51 8B     6 call Inicializacion
 64+  8A01 18 5B            jr 5F
 65+  8A03 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8A04
 67+  8A04              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8A04              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8A04
 70+  8A04 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8A05 2A D5 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8A08 CD F4 8E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8A0B 67           	ld h,a
 74+  8A0C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8A0D CD F4 8E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8A10 67           	ld h,a
 77+  8A11 A7           	and a
 78+  8A12 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8A14 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8A15 3A B2 85     	ld a,(Cuad_objeto)
 81+  8A18 FE 02        	cp 2
 82+  8A1A 38 1E        	jr c,3F
 83+  8A1C 28 1C        	jr z,3F
 84+  8A1E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8A1F 28 23            jr z,7F
 86+  8A21 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8A23 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8A25 E1           	pop hl
 89+  8A26
 90+  8A26              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8A26              ; _para indicar con E="2" en caso necesario.
 92+  8A26
 93+  8A26 E5               push hl
 94+  8A27 C5               push bc
 95+  8A28 CD F4 8E     	call calcula_tercio
 96+  8A2B FE 01        	cp 1
 97+  8A2D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8A2F CD 5F 8A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8A32 28 26            jr z,9F
100+  8A34 38 24            jr c,9F
101+  8A36 1E 00        11 ld e,0
102+  8A38 18 22            jr 8F
103+  8A3A 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8A3B 28 07        	jr z, 7F
105+  8A3D 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8A3F 1E 00         	ld e,0
107+  8A41 E1           	pop hl
108+  8A42 18 04        	jr 4F
109+  8A44 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8A46 18 15            jr 10F
111+  8A48
112+  8A48              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8A48              ; _para indicar con E="2" en caso necesario.
114+  8A48
115+  8A48 E5           4 push hl
116+  8A49 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8A4A CD F4 8E     	call calcula_tercio
118+  8A4D FE 01        	cp 1
119+  8A4F 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8A51 CD 5F 8A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8A54 28 04            jr z,9F
122+  8A56 30 02            jr nc,9F
123+  8A58 18 02        	jr 8F
124+  8A5A 1E 02        9 ld e,2
125+  8A5C C1           8 pop bc
126+  8A5D E1           10 pop hl
127+  8A5E C9           5 ret
128+  8A5F
129+  8A5F              ; --------------------
130+  8A5F              ;
131+  8A5F              ; 25/08/22
132+  8A5F
133+  8A5F CD F4 8E     Comprueba_centro call calcula_tercio
134+  8A62 67               ld h,a
135+  8A63 08           	ex af,af
136+  8A64 FE 02        	cp 2
137+  8A66 38 07        	jr c,1F
138+  8A68 28 05        	jr z,1F
139+  8A6A 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8A6D 18 03        	jr 2F
141+  8A6F 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8A72 08           2 ex af,af
143+  8A73 A7               and a
144+  8A74 ED 42            sbc hl,bc
145+  8A76 C9               ret
146+  8A77
147+  8A77              ; *********************************************************************************************************************************************************************************************
148+  8A77              ;
149+  8A77              ;   16/8/22
150+  8A77              ;
151+  8A77              ;	Comprueba_limite_vertical
152+  8A77              ;
153+  8A77              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8A77              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8A77              ;
156+  8A77
157+  8A77 2A A0 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8A7A 7D           	ld a,l
159+  8A7B E6 1F        	and $1F
160+  8A7D 57           	ld d,a
161+  8A7E 3A D7 85     	ld a,(Limite_vertical)
162+  8A81 BA           	cp d 											; Límite - Posición.
163+  8A82 08           	ex af,af 										; Resultado de CP d en F'.
164+  8A83 3A B2 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8A86 CB 47        	bit 0,a
166+  8A88 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8A8A
168+  8A8A              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8A8A
170+  8A8A 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8A8B 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8A8D
173+  8A8D              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8A8D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8A8D
176+  8A8D 3A A4 85         ld a,(Coordenada_X)
177+  8A90 16 0F            ld d,Centro_izquierda
178+  8A92 A7               and a
179+  8A93 92               sub d 											 ; Posición - Centro_izquierda.
180+  8A94 28 1E            jr z,3F
181+  8A96 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8A98              ;                                                    ; _salimos sin modificar nada.
183+  8A98 18 0E            jr 2F
184+  8A9A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8A9B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8A9D
187+  8A9D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8A9D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8A9D
190+  8A9D 3A A4 85         ld a,(Coordenada_X)
191+  8AA0 16 10            ld d,Centro_derecha
192+  8AA2 A7               and a
193+  8AA3 92               sub d
194+  8AA4 28 0E            jr z,3F
195+  8AA6 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8AA8              ;                                                    ; _salimos sin modificar nada.
197+  8AA8 CB 43        2 bit 0,e
198+  8AAA 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8AAC C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8AAD CD 41 8B         call Modificaccionne
201+  8AB0 C1           	pop bc
202+  8AB1 CD 51 8B         call Inicializacion
203+  8AB4 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8AB5
205+  8AB5              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8AB5
207+  8AB5 C5           4 push bc
208+  8AB6 01 9F 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8AB9 0A           	ld a,(bc)
210+  8ABA 3D           	dec a
211+  8ABB 47           	ld b,a 											 ; Columnas-1 en B.
212+  8ABC 7D           	ld a,l
213+  8ABD 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8ABE CB 47        	bit 0,a
215+  8AC0 28 03        	jr z,5F
216+  8AC2 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8AC3 18 2E        	jr 7F
218+  8AC5
219+  8AC5              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8AC5
221+  8AC5 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8AC6 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8AC7 3A CB 85     	ld a,(Ctrl_0)
224+  8ACA CB 4F        	bit 1,a
225+  8ACC 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8ACE F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8ACF
228+  8ACF              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8ACF
230+  8ACF 1C               inc e
231+  8AD0 1D               dec e
232+  8AD1 20 07            jr nz,12F
233+  8AD3 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8AD4 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8AD5 22 A0 85     	ld (Posicion_actual),hl
236+  8AD8 18 44        13 jr 9F
237+  8ADA CB 43        12 bit 0,e
238+  8ADC 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8ADE              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8ADE C1           	pop bc
241+  8ADF 18 D3        	jr 3B
242+  8AE1 80           14 add b
243+  8AE2 6F               ld l,a
244+  8AE3 22 A0 85     	ld (Posicion_actual),hl
245+  8AE6 CD 41 8B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8AE9 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8AEB E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8AED 32 CB 85         ld (Ctrl_0),a
249+  8AF0 F1           	pop af
250+  8AF1 18 2B        	jr 9F
251+  8AF3
252+  8AF3              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8AF3
254+  8AF3 F5           7 push af
255+  8AF4 3A CB 85     	ld a,(Ctrl_0)
256+  8AF7 CB 47        	bit 0,a
257+  8AF9 20 1D        	jr nz,8F
258+  8AFB F1           	pop af
259+  8AFC
260+  8AFC              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8AFC
262+  8AFC 1C           	inc e
263+  8AFD 1D               dec e
264+  8AFE 20 07            jr nz,10F
265+  8B00 90           	sub b
266+  8B01 6F               ld l,a
267+  8B02 22 A0 85     	ld (Posicion_actual),hl
268+  8B05 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8B07              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8B07 CB 43        10 bit 0,e
271+  8B09 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8B0B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8B0B C1           	pop bc
274+  8B0C 18 A6        	jr 3B
275+  8B0E 90           16 sub b
276+  8B0F 6F               ld l,a
277+  8B10 22 A0 85     	ld (Posicion_actual),hl
278+  8B13 CD 41 8B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8B16 18 06            jr 9F
280+  8B18 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8B1A 32 CB 85         ld (Ctrl_0),a
282+  8B1D F1           	pop af
283+  8B1E C1           9 pop bc
284+  8B1F 1E 00        	ld e,0
285+  8B21 CD 51 8B         call Inicializacion
286+  8B24 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8B25 08           	ex af,af
288+  8B26 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8B27 18 8B            jr 3B
290+  8B29
291+  8B29              ; --------------------
292+  8B29
293+  8B29 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8B2B CD A5 8C     1 call PreviousScan
295+  8B2E 10 FB            djnz 1B
296+  8B30 22 A0 85     	ld (Posicion_actual),hl
297+  8B33 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8B34 C9           	ret
299+  8B35
300+  8B35              ; --------------------
301+  8B35
302+  8B35 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8B37 CD 96 8C     1 call NextScan
304+  8B3A 10 FB            djnz 1B
305+  8B3C 22 A0 85     	ld (Posicion_actual),hl
306+  8B3F AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8B40 C9           	ret
308+  8B41
309+  8B41              ; --------------------
310+  8B41              ;
311+  8B41              ;	22/01/23
312+  8B41              ;
313+  8B41              ;	E="1". Hemos cambiado de cuadrante.
314+  8B41              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8B41              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8B41
317+  8B41
318+  8B41              Modificaccionne
319+  8B41
320+  8B41 3A B2 85     	ld a,(Cuad_objeto)
321+  8B44 FE 02        	cp 2
322+  8B46 CC 29 8B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8B49 DC 29 8B         call c,Modifica_Pos_actual
324+  8B4C C8           	ret z
325+  8B4D CD 35 8B         call Modifica_Pos_actual2
326+  8B50 C9               ret
327+  8B51
328+  8B51              ; *************************************************************************************************************************************************************************************************
329+  8B51              ;
330+  8B51              ;	13/8/22
331+  8B51              ;
332+  8B51              ;	Inicializacion
333+  8B51              ;
334+  8B51              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8B51              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8B51              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8B51              ;
338+  8B51              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8B51              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8B51              ;	_ desaparece/aparece.
341+  8B51
342+  8B51              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8B51              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8B51              ;
345+  8B51              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8B51              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8B51              ; 		   [E] ="0"
348+  8B51
349+  8B51              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8B51
351+  8B51 CD F4 8E     Inicializacion call calcula_tercio
352+  8B54 28 36        	jr z,primit
353+  8B56 E6 02        	and 2
354+  8B58 20 07        	jr nz,segmit
355+  8B5A 7D           	ld a,l
356+  8B5B FE 7F        	cp $7f
357+  8B5D 38 2D        	jr c,primit
358+  8B5F 28 2B        	jr z,primit
359+  8B61 CD BE 8B     segmit call column
360+  8B64 38 13        	jr c,tercuad
361+  8B66 3E 04        cuarcuad ld a,4
362+  8B68 32 B2 85     	ld (Cuad_objeto),a
363+  8B6B 21 20 48     	ld hl,$4820
364+  8B6E 22 D5 85     	ld (Limite_horizontal),hl
365+  8B71 21 D7 85     	ld hl,Limite_vertical
366+  8B74 36 0D        	ld (hl),$0d
367+  8B76 08           	ex af,af
368+  8B77 18 3C        	jr 1F
369+  8B79              tercuad
370+  8B79 3E 03        	ld a,3
371+  8B7B 32 B2 85     	ld (Cuad_objeto),a
372+  8B7E 21 20 48     	ld hl,$4820
373+  8B81 22 D5 85     	ld (Limite_horizontal),hl
374+  8B84 21 D7 85     	ld hl,Limite_vertical
375+  8B87 36 12        	ld (hl),$12
376+  8B89 08           	ex af,af
377+  8B8A 18 29        	jr 1F
378+  8B8C CD BE 8B     primit call column
379+  8B8F 38 13        	jr c, primcuad
380+  8B91              segcuad
381+  8B91 3E 02        	ld a,2
382+  8B93 32 B2 85     	ld (Cuad_objeto),a
383+  8B96 21 C0 4F     	ld hl,$4fc0
384+  8B99 22 D5 85     	ld (Limite_horizontal),hl
385+  8B9C 21 D7 85     	ld hl,Limite_vertical
386+  8B9F 36 0D        	ld (hl),$0d
387+  8BA1 08           	ex af,af
388+  8BA2 18 11        	jr 1F
389+  8BA4              primcuad
390+  8BA4 3E 01        	ld a,1
391+  8BA6 32 B2 85     	ld (Cuad_objeto),a
392+  8BA9 21 C0 4F     	ld hl,$4fc0
393+  8BAC 22 D5 85     	ld (Limite_horizontal),hl
394+  8BAF 21 D7 85     	ld hl,Limite_vertical
395+  8BB2 36 12        	ld (hl),$12
396+  8BB4 08           	ex af,af
397+  8BB5 CD 26 92     1 call Genera_coordenadas
398+  8BB8 21 CB 85     	ld hl,Ctrl_0
399+  8BBB CB EE        	set 5,(hl)
400+  8BBD C9           	ret
401+  8BBE
402+  8BBE              ; ------------------------------------------------------------------------------------------------------------------
403+  8BBE
404+  8BBE              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8BBE              ;
406+  8BBE              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8BBE
408+  8BBE 7D           column ld a,l
409+  8BBF E6 1F        	and $1f
410+  8BC1 FE 10         	cp $10
411+  8BC3 C9            	ret
412+  8BC4
413+  8BC4              ; --------------------------------------------------------------------------------------------------------------------
414+  8BC4              ;
415+  8BC4              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8BC4              ;
417+  8BC4              ; 14/12/22
418+  8BC4              ;
419+  8BC4              ;	Modifica: A y BC.
420+  8BC4
421+  8BC4 3A B2 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8BC7 E6 01        	and 1
423+  8BC9 28 17        	jr z,1F
424+  8BCB
425+  8BCB              ; Nos encontramos en la parte izquierda de la pantalla
426+  8BCB
427+  8BCB 3A A4 85     	ld a,(Coordenada_X)
428+  8BCE 47           	ld b,a
429+  8BCF 04           	inc b											; (Coordenada_X)+1 en B.
430+  8BD0 79           	ld a,c
431+  8BD1 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8BD2 38 08        	jr c,2F
433+  8BD4 47           	ld b,a
434+  8BD5 79           	ld a,c
435+  8BD6 90           	sub b
436+  8BD7 32 D4 85     	ld (Columnas),a
437+  8BDA 18 1B        	jr 4F
438+  8BDC 79           2 ld a,c
439+  8BDD 32 D4 85     	ld (Columnas),a
440+  8BE0 18 15        	jr 4F
441+  8BE2
442+  8BE2              ; Nos encontramos en la parte derecha de la pantalla.
443+  8BE2
444+  8BE2 3A A4 85     1 ld a,(Coordenada_X)
445+  8BE5 81           	add c
446+  8BE6 3D           	dec a
447+  8BE7 D6 1F        	sub $1f
448+  8BE9 38 08        	jr c,3F
449+  8BEB 47           	ld b,a
450+  8BEC 79           	ld a,c
451+  8BED 90           	sub b
452+  8BEE 32 D4 85     	ld (Columnas),a
453+  8BF1 18 04        	jr 4F
454+  8BF3 79           3 ld a,c
455+  8BF4 32 D4 85     	ld (Columnas),a
456+  8BF7 D9           4 exx
457+  8BF8 4F           	ld c,a
458+  8BF9 D9           	exx
459+  8BFA C9            ret
460+  8BFB
461+  8BFB              ; --------------------------------------------------------------------------------------------------------------------
462+  8BFB              ;
463+  8BFB              ; 7/1/23
464+  8BFB              ;
465+  8BFB              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8BFB              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8BFB              ;
468+  8BFB              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8BFB              ;	DESTRUYE: HL,B Y A.
470+  8BFB
471+  8BFB 3A B2 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8BFE FE 02        	cp 2
473+  8C00 38 18        	jr c,1F
474+  8C02 28 16        	jr z,1F
475+  8C04 E6 01        	and 1
476+  8C06 28 0D        	jr z,3F
477+  8C08
478+  8C08              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8C08
480+  8C08 CD 44 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8C0B
482+  8C0B 7D           9 ld a,l
483+  8C0C E6 1F        	and $1f
484+  8C0E 28 2A        	jr z,7F
485+  8C10 2B           	dec hl
486+  8C11 10 F8        	djnz 9B
487+  8C13 18 25        	jr 7F
488+  8C15
489+  8C15              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8C15
491+  8C15 2A A0 85     3 ld hl,(Posicion_actual)
492+  8C18 18 20        	jr 7F
493+  8C1A
494+  8C1A 28 14        1 jr z,2F
495+  8C1C
496+  8C1C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8C1C
498+  8C1C CD 44 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8C1F 7D           4 ld a,l
500+  8C20 E6 1F        	and $1f
501+  8C22 28 03        	jr z,6F
502+  8C24 2B           	dec hl
503+  8C25 10 F8        	djnz 4B
504+  8C27 06 0F        6 ld b,15
505+  8C29 CD A5 8C     5 call PreviousScan
506+  8C2C 10 FB        	djnz 5B
507+  8C2E 18 0A        	jr 7F
508+  8C30
509+  8C30              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8C30
511+  8C30 CD 44 8C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8C33 06 0F        	ld b,15
513+  8C35 CD A5 8C     8 call PreviousScan
514+  8C38 10 FB        	djnz 8B
515+  8C3A
516+  8C3A E5           7 push hl
517+  8C3B DD E1        	pop ix
518+  8C3D
519+  8C3D 2A A2 85     	ld hl,(Puntero_objeto)
520+  8C40 E5           	push hl
521+  8C41 FD E1        	pop iy
522+  8C43
523+  8C43 C9           	ret
524+  8C44
525+  8C44              ; --------------------------------------------------------------------------------------------------------------------
526+  8C44              ;
527+  8C44              ;	2/1/23
528+  8C44              ;
529+  8C44              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8C44              ;
531+  8C44              ;	Tras esta rutina tenemos:
532+  8C44              ;
533+  8C44              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8C44              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8C44              ;
536+  8C44              ;	DESTRUYE!!!!! HL,B y A.
537+  8C44
538+  8C44 2A A0 85     Operandos ld hl,(Posicion_actual)
539+  8C47 3A D4 85     	ld a,(Columnas)
540+  8C4A 3D           	dec a
541+  8C4B 20 01        	jr nz,1F
542+  8C4D 3C           	inc a
543+  8C4E 47           1 ld b,a
544+  8C4F C9           	ret
545+  8C50
546+  8C50              ; --------------------------------------------------------------------------------------------------------------------
547+  8C50              ;
548+  8C50              ;	3/1/23
549+  8C50              ;
550+  8C50              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8C50              ;
552+  8C50              ;	Destruye: A,B,HL y DE.
553+  8C50
554+  8C50              Define_rutina_de_impresion
555+  8C50
556+  8C50 3A 9F 85     	ld a,(Columns)
557+  8C53 47           	ld b,a
558+  8C54 3A D4 85     	ld a,(Columnas)
559+  8C57 B8           	cp b
560+  8C58 20 0D        	jr nz,2f
561+  8C5A
562+  8C5A              ;	La entidad se imprime entera.
563+  8C5A
564+  8C5A 21 F1 8C     	ld hl, Indice_entidades_completas
565+  8C5D E6 01        	and 1
566+  8C5F 28 02        	jr z,1F
567+  8C61
568+  8C61 23           	inc hl
569+  8C62 23           	inc hl
570+  8C63
571+  8C63 CD 69 87     1 call Extrae_address
572+  8C66 C9           	ret		;	ret
573+  8C67
574+  8C67              ;	La entidad no se imprime entera en pantalla.
575+  8C67
576+  8C67 3A B2 85     2 ld a,(Cuad_objeto)
577+  8C6A E6 01        	and 1
578+  8C6C 28 17        	jr z,3F
579+  8C6E
580+  8C6E              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8C6E
582+  8C6E 21 F5 8C     	ld hl, Indice_entidades_incompletas_izquierda
583+  8C71 3A 9F 85     4 ld a,(Columns)
584+  8C74 E6 01        	and 1
585+  8C76 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8C78
587+  8C78 23           	inc hl
588+  8C79 23           	inc hl
589+  8C7A
590+  8C7A 3A D4 85     	ld a,(Columnas)
591+  8C7D E6 01        	and 1
592+  8C7F 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8C81
594+  8C81 23           	inc hl
595+  8C82 23           	inc hl
596+  8C83
597+  8C83 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8C85
599+  8C85 21 FB 8C     3 ld hl, Indice_entidades_incompletas_derecha
600+  8C88 18 E7        	jr 4B
601+  8C8A
602+  8C8A              ; --------------------------------------------------------------------------------------------------------------------
603+  8C8A              ;
604+  8C8A              ;	Prepara_draw
605+  8C8A              ;
606+  8C8A              ;	Es una rutina de carga.
607+  8C8A              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8C8A              ;
609+  8C8A              ;	FUNCIONAMIENTO:
610+  8C8A              ;
611+  8C8A              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8C8A              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8C8A              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8C8A              ;
615+  8C8A              ;	DESTRUYE:
616+  8C8A              ;
617+  8C8A              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8C8A
619+  8C8A 21 9E 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8C8D 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8C8E 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8C8F 4E           	ld c,(hl)
623+  8C90 2A A0 85     	ld hl,(Posicion_actual)
624+  8C93 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8C95 C9           	ret
626+  8C96
627+  8C96              ;----------------------------------------------------------------------------------------------------------------
628+  8C96              ;
629+  8C96              ;	5/08/22
630+  8C96              ;
631+  8C96              ;   NextScan.
632+  8C96              ;
633+  8C96              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8C96              ;
635+  8C96              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8C96              ;
637+  8C96              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8C96              ;
639+  8C96              ;       DESTRUIDOS: AF y HL !!!
640+  8C96              ;
641+  8C96              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8C96              ;
643+  8C96
644+  8C96 24           NextScan inc h          ; Incrementamos el scanline.
645+  8C97 7C               ld a,h
646+  8C98 E6 07            and 7
647+  8C9A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8C9B
649+  8C9B 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8C9C C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8C9E 6F               ld l,a
652+  8C9F D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8CA0
654+  8CA0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8CA1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8CA3 67               ld h,a
657+  8CA4 C9               ret
658+  8CA5
659+  8CA5              ;----------------------------------------------------------------------------------------------------------------
660+  8CA5              ;
661+  8CA5              ;	5/08/22
662+  8CA5              ;
663+  8CA5              ;   PreviousScan.
664+  8CA5              ;
665+  8CA5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8CA5              ;
667+  8CA5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8CA5              ;
669+  8CA5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8CA5              ;
671+  8CA5              ;       DESTRUIDOS: AF y HL !!!
672+  8CA5              ;
673+  8CA5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8CA5              ;
675+  8CA5
676+  8CA5 7C           PreviousScan ld a,h
677+  8CA6 25               dec h               ; Dec H.
678+  8CA7 E6 07            and 7
679+  8CA9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8CAA
681+  8CAA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8CAB D6 20            sub $20             ; Vamos a comprobarlo...
683+  8CAD 6F               ld l,a
684+  8CAE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8CAF
686+  8CAF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8CB0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8CB2 67               ld h,a
689+  8CB3 C9               ret
690+  8CB4
691+  8CB4              ; -----------------------------------------------------------------------------------
692+  8CB4              ;
693+  8CB4              ;	15/1/23
694+  8CB4
695+  8CB4              Extrae_foto_registros
696+  8CB4
697+  8CB4 3A DF 85     	ld a,(Numero_de_malotes)
698+  8CB7 A7           	and a
699+  8CB8 C8           	ret z
700+  8CB9
701+  8CB9
702+  8CB9 ED 73 E0 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
703+  8CBD 31 00 70     	ld sp,Album_de_fotos
704+  8CC0
705+  8CC0 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
706+  8CC2 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
707+  8CC3 D1           	pop de																	; Dirección de la rutina de impresión en DE.
708+  8CC4
709+  8CC4 ED 73 E2 85  	ld (Stack_2),sp
710+  8CC8 ED 7B E0 85  	ld sp,(Stack)
711+  8CCC
712+  8CCC              ; Fabrica la llamada a la correspondiente rutina de impresión.
713+  8CCC
714+  8CCC 3E CD        	ld a,$cd
715+  8CCE 32 D6 8C     	ld (Imprime),a
716+  8CD1 EB           	ex de,hl
717+  8CD2 22 D7 8C     	ld (Imprime+1),hl
718+  8CD5 EB           	ex de,hl
719+  8CD6
720+  8CD6              ; Ejecuta la llamada:	CALL $xx,xx
721+  8CD6
722+  8CD6 00 00 00     Imprime db 0,0,0
723+  8CD9
724+  8CD9 ED 73 E0 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
725+  8CDD
726+  8CDD 3A DF 85     	ld a,(Numero_de_malotes)
727+  8CE0 3D           	dec a
728+  8CE1 28 09        	jr z,1F
729+  8CE3 32 DF 85      	ld (Numero_de_malotes),a
730+  8CE6 ED 7B E2 85  	ld sp,(Stack_2)
731+  8CEA 18 D4        	jr 2B
732+  8CEC
733+  8CEC AF           1 xor a
734+  8CED 32 E2 85     	ld (Stack_2),a
735+  8CF0 C9           	ret
736+  8CF1
737+  8CF1
# file closed: Draw_XOR.asm
788   8CF1              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8CF1              ;   índices de Rutinas de impresión.
  2+  8CF1
  3+  8CF1 01 8D        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8CF3 2E 8D            defw Pinta_Amadeus_3x2
  5+  8CF5
  6+  8CF5 84 8D        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8CF7 24 8E            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8CF9 D8 8D            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8CFB
 10+  8CFB AE 8D        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8CFD B2 8E            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8CFF 66 8E            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8D01
 14+  8D01
 15+  8D01              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8D01              ;
 17+  8D01              ;   12/12/22
 18+  8D01              ;
 19+  8D01              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8D01              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8D01              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8D01              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8D01              ;
 24+  8D01              ;   Modifica: DE y HL.
 25+  8D01
 26+  8D01 ED 73 E0 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8D05 FD F9        	ld sp,iy
 28+  8D07
 29+  8D07              ; >>>
 30+  8D07
 31+  8D07 06 10            ld b,16
 32+  8D09 D1           1 pop de
 33+  8D0A 7B               ld a,e
 34+  8D0B AE               xor (hl)
 35+  8D0C 77           	ld (hl),a
 36+  8D0D 23           	inc hl
 37+  8D0E 7A               ld a,d
 38+  8D0F AE               xor (hl)
 39+  8D10 77           	ld (hl),a
 40+  8D11 2B           	dec hl
 41+  8D12 24           	inc h
 42+  8D13 7C               ld a,h
 43+  8D14 E6 07            and 7
 44+  8D16 20 0A            jr nz,2F
 45+  8D18 7D               ld a,l
 46+  8D19 C6 20            add a,$20
 47+  8D1B 6F               ld l,a
 48+  8D1C 38 04            jr c,2F
 49+  8D1E 7C               ld a,h
 50+  8D1F D6 08            sub 8
 51+  8D21 67               ld h,a
 52+  8D22 7C           2 ld a,h
 53+  8D23 FE 58            cp $58
 54+  8D25 28 02            jr z,3F
 55+  8D27 10 E0            djnz 1B
 56+  8D29 ED 7B E0 85  3 ld sp,(Stack)
 57+  8D2D C9           	ret
 58+  8D2E
 59+  8D2E ED 73 E0 85  Pinta_Amadeus_3x2 ld (Stack),sp
 60+  8D32 FD F9        	ld sp,iy
 61+  8D34 06 08            ld b,8
 62+  8D36 D1           1 pop de
 63+  8D37 7B               ld a,e
 64+  8D38 AE               xor (hl)
 65+  8D39 77           	ld (hl),a
 66+  8D3A 23           	inc hl
 67+  8D3B 7A               ld a,d
 68+  8D3C AE               xor (hl)
 69+  8D3D 77           	ld (hl),a
 70+  8D3E 23           	inc hl
 71+  8D3F D1           	pop de
 72+  8D40 7B               ld a,e
 73+  8D41 AE               xor (hl)
 74+  8D42 77           	ld (hl),a
 75+  8D43 2B           	dec hl
 76+  8D44 2B           	dec hl
 77+  8D45 24           	inc h
 78+  8D46 7C               ld a,h
 79+  8D47 E6 07            and 7
 80+  8D49 20 0A            jr nz,2F
 81+  8D4B 7D               ld a,l
 82+  8D4C C6 20            add a,$20
 83+  8D4E 6F               ld l,a
 84+  8D4F 38 04            jr c,2F
 85+  8D51 7C               ld a,h
 86+  8D52 D6 08            sub 8
 87+  8D54 67               ld h,a
 88+  8D55 7C           2 ld a,h
 89+  8D56 FE 58            cp $58
 90+  8D58 28 25            jr z,4F
 91+  8D5A 7A               ld a,d
 92+  8D5B AE               xor (hl)
 93+  8D5C 77               ld (hl),a
 94+  8D5D D1           	pop de
 95+  8D5E 23           	inc hl
 96+  8D5F 7B               ld a,e
 97+  8D60 AE               xor (hl)
 98+  8D61 77           	ld (hl),a
 99+  8D62 23           	inc hl
100+  8D63 7A               ld a,d
101+  8D64 AE               xor (hl)
102+  8D65 77           	ld (hl),a
103+  8D66 2B           	dec hl
104+  8D67 2B           	dec hl
105+  8D68 24           	inc h
106+  8D69 7C               ld a,h
107+  8D6A E6 07            and 7
108+  8D6C 20 0A            jr nz,3F
109+  8D6E 7D               ld a,l
110+  8D6F C6 20            add a,$20
111+  8D71 6F               ld l,a
112+  8D72 38 04            jr c,3F
113+  8D74 7C               ld a,h
114+  8D75 D6 08            sub 8
115+  8D77 67               ld h,a
116+  8D78 7C           3 ld a,h
117+  8D79 FE 58            cp $58
118+  8D7B 28 02            jr z,4F
119+  8D7D 10 B7            djnz 1B
120+  8D7F ED 7B E0 85  4 ld sp,(Stack)
121+  8D83 C9           	ret
122+  8D84
123+  8D84              ; ---------------------------------------------------
124+  8D84
125+  8D84 ED 73 E0 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
126+  8D88 FD F9        	ld sp,iy
127+  8D8A
128+  8D8A              ; >>>
129+  8D8A
130+  8D8A 06 10            ld b,16
131+  8D8C D1           1 pop de
132+  8D8D 7A           	ld a,d
133+  8D8E AE           	xor (hl)
134+  8D8F 77           	ld (hl),a
135+  8D90 24           	inc h
136+  8D91 7C               ld a,h
137+  8D92 E6 07            and 7
138+  8D94 20 0C            jr nz,2F
139+  8D96 7D               ld a,l
140+  8D97 C6 20            add a,$20
141+  8D99 6F               ld l,a
142+  8D9A 38 06            jr c,2F
143+  8D9C 7C               ld a,h
144+  8D9D D6 08            sub 8
145+  8D9F 67               ld h,a
146+  8DA0 18 00            jr 2F
147+  8DA2 7C           2 ld a,h
148+  8DA3 FE 58            cp $58
149+  8DA5 28 02            jr z,3F
150+  8DA7 10 E3            djnz 1B
151+  8DA9 ED 7B E0 85  3 ld sp,(Stack)
152+  8DAD C9           	ret
153+  8DAE
154+  8DAE ED 73 E0 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
155+  8DB2 FD F9        	ld sp,iy
156+  8DB4
157+  8DB4              ; >>>
158+  8DB4
159+  8DB4 06 10            ld b,16
160+  8DB6 D1           1 pop de
161+  8DB7 7B           	ld a,e
162+  8DB8 AE           	xor (hl)
163+  8DB9 77           	ld (hl),a
164+  8DBA 24           	inc h
165+  8DBB 7C               ld a,h
166+  8DBC E6 07            and 7
167+  8DBE 20 0C            jr nz,2F
168+  8DC0 7D               ld a,l
169+  8DC1 C6 20            add a,$20
170+  8DC3 6F               ld l,a
171+  8DC4 38 06            jr c,2F
172+  8DC6 7C               ld a,h
173+  8DC7 D6 08            sub 8
174+  8DC9 67               ld h,a
175+  8DCA 18 00            jr 2F
176+  8DCC 7C           2 ld a,h
177+  8DCD FE 58            cp $58
178+  8DCF 28 02            jr z,3F
179+  8DD1 10 E3            djnz 1B
180+  8DD3 ED 7B E0 85  3 ld sp,(Stack)
181+  8DD7 C9           	ret
182+  8DD8
183+  8DD8              ; ---------------------------------------------------
184+  8DD8
185+  8DD8 ED 73 E0 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
186+  8DDC FD F9        	ld sp,iy
187+  8DDE 06 08            ld b,8
188+  8DE0 D1           1 pop de
189+  8DE1 7A           	ld a,d
190+  8DE2 AE           	xor (hl)
191+  8DE3 77           	ld (hl),a
192+  8DE4 23           	inc hl
193+  8DE5 D1           	pop de
194+  8DE6 7B           	ld a,e
195+  8DE7 AE           	xor (hl)
196+  8DE8 77           	ld (hl),a
197+  8DE9 2B           	dec hl
198+  8DEA 24            	inc h
199+  8DEB 7C               ld a,h
200+  8DEC E6 07            and 7
201+  8DEE 20 0A            jr nz,2F
202+  8DF0 7D               ld a,l
203+  8DF1 C6 20            add a,$20
204+  8DF3 6F               ld l,a
205+  8DF4 38 04            jr c,2F
206+  8DF6 7C               ld a,h
207+  8DF7 D6 08            sub 8
208+  8DF9 67               ld h,a
209+  8DFA 7C           2 ld a,h
210+  8DFB FE 58            cp $58
211+  8DFD 28 20            jr z,4F
212+  8DFF D1               pop de
213+  8E00 7B           	ld a,e
214+  8E01 AE           	xor (hl)
215+  8E02 77           	ld (hl),a
216+  8E03 23           	inc hl
217+  8E04 7A           	ld a,d
218+  8E05 AE           	xor (hl)
219+  8E06 77           	ld (hl),a
220+  8E07 2B           	dec hl
221+  8E08 24           	inc h
222+  8E09 7C               ld a,h
223+  8E0A E6 07            and 7
224+  8E0C 20 0A            jr nz,3F
225+  8E0E 7D               ld a,l
226+  8E0F C6 20            add a,$20
227+  8E11 6F               ld l,a
228+  8E12 38 04            jr c,3F
229+  8E14 7C               ld a,h
230+  8E15 D6 08            sub 8
231+  8E17 67               ld h,a
232+  8E18 7C           3 ld a,h
233+  8E19 FE 58            cp $58
234+  8E1B 28 02            jr z,4F
235+  8E1D 10 C1            djnz 1B
236+  8E1F ED 7B E0 85  4 ld sp,(Stack)
237+  8E23 C9           	ret
238+  8E24
239+  8E24 ED 73 E0 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
240+  8E28 FD F9        	ld sp,iy
241+  8E2A 06 08            ld b,8
242+  8E2C D1           1 pop de
243+  8E2D D1           	pop de
244+  8E2E 7B           	ld a,e
245+  8E2F AE           	xor (hl)
246+  8E30 77           	ld (hl),a
247+  8E31 24            	inc h
248+  8E32 7C               ld a,h
249+  8E33 E6 07            and 7
250+  8E35 20 0A            jr nz,2F
251+  8E37 7D               ld a,l
252+  8E38 C6 20            add a,$20
253+  8E3A 6F               ld l,a
254+  8E3B 38 04            jr c,2F
255+  8E3D 7C               ld a,h
256+  8E3E D6 08            sub 8
257+  8E40 67               ld h,a
258+  8E41 7C           2 ld a,h
259+  8E42 FE 58            cp $58
260+  8E44 28 1B            jr z,4F
261+  8E46 D1               pop de
262+  8E47 7A           	ld a,d
263+  8E48 AE           	xor (hl)
264+  8E49 77           	ld (hl),a
265+  8E4A 24           	inc h
266+  8E4B 7C               ld a,h
267+  8E4C E6 07            and 7
268+  8E4E 20 0A            jr nz,3F
269+  8E50 7D               ld a,l
270+  8E51 C6 20            add a,$20
271+  8E53 6F               ld l,a
272+  8E54 38 04            jr c,3F
273+  8E56 7C               ld a,h
274+  8E57 D6 08            sub 8
275+  8E59 67               ld h,a
276+  8E5A 7C           3 ld a,h
277+  8E5B FE 58            cp $58
278+  8E5D 28 02            jr z,4F
279+  8E5F 10 CB            djnz 1B
280+  8E61 ED 7B E0 85  4 ld sp,(Stack)
281+  8E65 C9           	ret
282+  8E66
283+  8E66 ED 73 E0 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
284+  8E6A FD F9        	ld sp,iy
285+  8E6C 06 08            ld b,8
286+  8E6E D1           1 pop de
287+  8E6F 7B           	ld a,e
288+  8E70 AE           	xor (hl)
289+  8E71 77           	ld (hl),a
290+  8E72 23           	inc hl
291+  8E73 7A           	ld a,d
292+  8E74 AE           	xor (hl)
293+  8E75 77           	ld (hl),a
294+  8E76 2B           	dec hl
295+  8E77 24             	inc h
296+  8E78 7C               ld a,h
297+  8E79 E6 07            and 7
298+  8E7B 20 0A            jr nz,2F
299+  8E7D 7D               ld a,l
300+  8E7E C6 20            add a,$20
301+  8E80 6F               ld l,a
302+  8E81 38 04            jr c,2F
303+  8E83 7C               ld a,h
304+  8E84 D6 08            sub 8
305+  8E86 67               ld h,a
306+  8E87 7C           2 ld a,h
307+  8E88 FE 58            cp $58
308+  8E8A 28 21            jr z,4F
309+  8E8C D1               pop de
310+  8E8D 7A           	ld a,d
311+  8E8E AE           	xor (hl)
312+  8E8F 77           	ld (hl),a
313+  8E90 23           	inc hl
314+  8E91 D1               pop de
315+  8E92 7B           	ld a,e
316+  8E93 AE           	xor (hl)
317+  8E94 77           	ld (hl),a
318+  8E95 2B           	dec hl
319+  8E96 24           	inc h
320+  8E97 7C               ld a,h
321+  8E98 E6 07            and 7
322+  8E9A 20 0A            jr nz,3F
323+  8E9C 7D               ld a,l
324+  8E9D C6 20            add a,$20
325+  8E9F 6F               ld l,a
326+  8EA0 38 04            jr c,3F
327+  8EA2 7C               ld a,h
328+  8EA3 D6 08            sub 8
329+  8EA5 67               ld h,a
330+  8EA6 7C           3 ld a,h
331+  8EA7 FE 58            cp $58
332+  8EA9 28 02            jr z,4F
333+  8EAB 10 C1            djnz 1B
334+  8EAD ED 7B E0 85  4 ld sp,(Stack)
335+  8EB1 C9           	ret
336+  8EB2
337+  8EB2 ED 73 E0 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
338+  8EB6 FD F9        	ld sp,iy
339+  8EB8 06 08            ld b,8
340+  8EBA D1           1 pop de
341+  8EBB 7B           	ld a,e
342+  8EBC AE           	xor (hl)
343+  8EBD 77           	ld (hl),a
344+  8EBE 24            	inc h
345+  8EBF 7C               ld a,h
346+  8EC0 E6 07            and 7
347+  8EC2 20 0A            jr nz,2F
348+  8EC4 7D               ld a,l
349+  8EC5 C6 20            add a,$20
350+  8EC7 6F               ld l,a
351+  8EC8 38 04            jr c,2F
352+  8ECA 7C               ld a,h
353+  8ECB D6 08            sub 8
354+  8ECD 67               ld h,a
355+  8ECE 7C           2 ld a,h
356+  8ECF FE 58            cp $58
357+  8ED1 28 1C            jr z,4F
358+  8ED3 D1               pop de
359+  8ED4 7A           	ld a,d
360+  8ED5 AE           	xor (hl)
361+  8ED6 77           	ld (hl),a
362+  8ED7 24           	inc h
363+  8ED8 7C               ld a,h
364+  8ED9 E6 07            and 7
365+  8EDB 20 0A            jr nz,3F
366+  8EDD 7D               ld a,l
367+  8EDE C6 20            add a,$20
368+  8EE0 6F               ld l,a
369+  8EE1 38 04            jr c,3F
370+  8EE3 7C               ld a,h
371+  8EE4 D6 08            sub 8
372+  8EE6 67               ld h,a
373+  8EE7 7C           3 ld a,h
374+  8EE8 FE 58            cp $58
375+  8EEA 28 03            jr z,4F
376+  8EEC D1               pop de
377+  8EED 10 CB            djnz 1B
378+  8EEF ED 7B E0 85  4 ld sp,(Stack)
379+  8EF3 C9           	ret
380+  8EF4
381+  8EF4              ; ---------------------------------------------------
382+  8EF4
# file closed: Rutinas_de_impresion_sprites.asm
789   8EF4              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  8EF4              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  8EF4              ;
  3+  8EF4              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  8EF4              ;
  5+  8EF4              ; *****************************************************************************************************************************************************************************************
  6+  8EF4              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  8EF4
  8+  8EF4 7C           calcula_tercio ld a,h
  9+  8EF5 E6 18        	and $18
 10+  8EF7 CB 2F        	sra a
 11+  8EF9 CB 2F        	sra a
 12+  8EFB CB 2F        	sra a
 13+  8EFD C9           	ret
 14+  8EFE
# file closed: calcula_tercio.asm
790   8EFE              	include "Cls.asm"
# file opened: Cls.asm
  1+  8EFE              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  8EFE              ;
  3+  8EFE              ;
  4+  8EFE              ;	CLS.
  5+  8EFE              ;
  6+  8EFE              ;	Limpia la pantalla y define sus atributos.
  7+  8EFE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  8EFE              ;
  9+  8EFE              ;	COLORES: 0 ..... NEGRO
 10+  8EFE              ;    		 1 ..... AZUL
 11+  8EFE              ; 			 2 ..... ROJO
 12+  8EFE              ;			 3 ..... MAGENTA
 13+  8EFE              ; 			 4 ..... VERDE
 14+  8EFE              ; 			 5 ..... CIAN
 15+  8EFE              ;			 6 ..... AMARILLO
 16+  8EFE              ; 			 7 ..... BLANCO
 17+  8EFE              ;
 18+  8EFE              ;	INPUT: A contiene los atributos de pantalla.
 19+  8EFE              ;
 20+  8EFE              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  8EFE
 22+  8EFE
 23+  8EFE 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  8F01 11 01 40     	LD DE,$4001
 25+  8F04 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  8F07 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  8F09 ED B0        	LDIR
 28+  8F0B 01 FF 02     	LD BC,767
 29+  8F0E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  8F0F ED B0        	LDIR
 31+  8F11 C9           	ret
 32+  8F12
# file closed: Cls.asm
791   8F12              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  8F12              ; ******************************************************************************************************************************************************************************************
  2+  8F12              ;
  3+  8F12              ;   22/01/23
  4+  8F12              ;
  5+  8F12              ;	Mov_down
  6+  8F12              ;
  7+  8F12              ; 	Mueve el Sprite X px hacia abajo.
  8+  8F12              ;
  9+  8F12              ;
 10+  8F12 21 CB 85     Mov_down ld hl,Ctrl_0
 11+  8F15 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  8F17              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  8F17              ; 																	; _ en el caso de que no lo haya.
 14+  8F17 3A B6 85     	ld a,(Vel_down)
 15+  8F1A 47           	ld b,a
 16+  8F1B 2A A0 85         ld hl,(Posicion_actual)
 17+  8F1E CD F4 8E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  8F21 E6 02        	and 2
 19+  8F23 28 0F        	jr z,1F
 20+  8F25
 21+  8F25              ; Nos encontramos en el último tercio de pantalla.
 22+  8F25              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  8F25
 24+  8F25 7C           	ld a,h
 25+  8F26 FE 57        	cp $57
 26+  8F28 20 0A        	jr nz,1F
 27+  8F2A 7D           	ld a,l
 28+  8F2B C6 20        	add $20
 29+  8F2D 30 05        	jr nc,1F
 30+  8F2F
 31+  8F2F              ; ------------------------------
 32+  8F2F CD 10 92     	call Reaparece_arriba
 33+  8F32              ;	call Reinicio
 34+  8F32              ; ------------------------------
 35+  8F32 18 08        	jr 3F
 36+  8F34 CD 96 8C     1 call NextScan
 37+  8F37 22 A0 85     	ld (Posicion_actual),hl
 38+  8F3A 10 E2            djnz 2B
 39+  8F3C CD 26 92     3 call Genera_coordenadas
 40+  8F3F C9           	ret
 41+  8F40
 42+  8F40
 43+  8F40              ; ******************************************************************************************************************************************************************************************
 44+  8F40              ;
 45+  8F40              ;   22/01/23
 46+  8F40              ;
 47+  8F40              ;	Mov_up
 48+  8F40              ;
 49+  8F40              ; 	Mueve el Sprite hacia arriba.
 50+  8F40              ;
 51+  8F40              ;
 52+  8F40 21 CB 85     Mov_up ld hl,Ctrl_0
 53+  8F43 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  8F45              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  8F45              ; 																		; _ en el caso de que no lo haya.
 56+  8F45 3A B5 85     	ld a,(Vel_up)
 57+  8F48 47           	ld b,a
 58+  8F49 2A A0 85     	ld hl,(Posicion_actual)
 59+  8F4C CD F4 8E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  8F4F A7           	and a
 61+  8F50 20 10        	jr nz,1F
 62+  8F52
 63+  8F52              ; Nos encontramos en el 1er tercio de pantalla.
 64+  8F52              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  8F52
 66+  8F52 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  8F53 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  8F55 20 0B            jr nz,1F
 69+  8F57 7D               ld a,l
 70+  8F58 D6 20            sub $20
 71+  8F5A 30 06            jr nc,1F
 72+  8F5C 25               dec h
 73+  8F5D
 74+  8F5D              ; -----------------------------
 75+  8F5D CD 00 92         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  8F60              ;	call Reinicio
 77+  8F60              ; -----------------------------
 78+  8F60
 79+  8F60 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  8F62 CD A5 8C     1 call PreviousScan
 81+  8F65 22 A0 85     	ld (Posicion_actual),hl
 82+  8F68 10 E2            djnz 3B
 83+  8F6A CD 26 92     2 call Genera_coordenadas
 84+  8F6D C9           	ret
 85+  8F6E
 86+  8F6E              ; ******************************************************************************************************************************************************************************************
 87+  8F6E              ;
 88+  8F6E              ;	19/10/22
 89+  8F6E              ;
 90+  8F6E              ;	Mov_right.
 91+  8F6E              ;
 92+  8F6E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  8F6E              ;
 94+  8F6E
 95+  8F6E 21 CB 85     Mov_right ld hl,Ctrl_0
 96+  8F71 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  8F73              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  8F73              ; 																	; _ en el caso de que no lo haya.
 99+  8F73 3A CB 85     	ld a,(Ctrl_0)
100+  8F76 CB 77        	bit 6,a
101+  8F78 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  8F7A
103+  8F7A CD AE 91     	call Stop_Amadeus_right
104+  8F7D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  8F7E 18 4D        	jr 8F
106+  8F80
107+  8F80 3A A4 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  8F83 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  8F85 20 46        	jr nz,8F
110+  8F87
111+  8F87 3A A6 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  8F8A A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  8F8B 28 40        	jr z,8F
114+  8F8D
115+  8F8D              ; ---------- ---------- ----------
116+  8F8D              ;
117+  8F8D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  8F8D
119+  8F8D 3A B4 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  8F90 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  8F92 28 11        	jr z,1F
122+  8F94 38 06        	jr c,6F
123+  8F96 FE 04        	cp 4
124+  8F98 28 14        	jr z,7F
125+  8F9A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  8F9C
127+  8F9C              ; ---------- ---------- ----------
128+  8F9C              ;
129+  8F9C              ; Perfiles de velocidad
130+  8F9C              ;
131+  8F9C
132+  8F9C 3A A6 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  8F9F FE FE        	cp $fe
134+  8FA1 20 2A        	jr nz,8F
135+  8FA3 18 10        	jr 3F
136+  8FA5 3A A6 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  8FA8 FE FD        	cp $fd
138+  8FAA 20 21        	jr nz,8F
139+  8FAC 18 07        	jr 3F
140+  8FAE 3A A6 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  8FB1 FE FB        	cp $fb
142+  8FB3 20 18        	jr nz,8F
143+  8FB5
144+  8FB5              ; ---------- ---------- ----------
145+  8FB5
146+  8FB5              3
147+  8FB5 CD EE 91     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  8FB8              ;	call Reinicio
149+  8FB8
150+  8FB8              ; ---------- ---------- ----------
151+  8FB8              ;
152+  8FB8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  8FB8
154+  8FB8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  8FBA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  8FBB CD D4 8F     	call DESPLZ_DER
157+  8FBE C1           	pop bc
158+  8FBF 10 F9        	djnz 5B
159+  8FC1 2A A0 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  8FC4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  8FC5 22 A0 85     	ld (Posicion_actual),hl
162+  8FC8 CD 26 92     	call Genera_coordenadas
163+  8FCB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  8FCD
165+  8FCD              ; ---------- ---------- ----------
166+  8FCD
167+  8FCD 2A A0 85     8 ld hl,(Posicion_actual)
168+  8FD0 CD D4 8F     	call DESPLZ_DER
169+  8FD3 C9           2 ret
170+  8FD4
171+  8FD4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  8FD4              ;
173+  8FD4              ;	22/9/22
174+  8FD4              ;
175+  8FD4
176+  8FD4 CD E3 8F     DESPLZ_DER call Desplaza_derecha
177+  8FD7 CD 2F 90         call modifica_parametros_1er_DESPLZ_2
178+  8FDA CD 58 90         call Ciclo_completo
179+  8FDD 21 CB 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  8FE0 CB FE        	set 7,(hl)
181+  8FE2 C9           	ret
182+  8FE3
183+  8FE3              ; ******************************************************************************************************************************************************************************************
184+  8FE3              ;	15/02/23
185+  8FE3              ;
186+  8FE3
187+  8FE3 3A B4 85     Desplaza_derecha ld a,(Vel_right)
188+  8FE6 47           	ld b,a
189+  8FE7 2A AC 85     	ld hl,(Puntero_DESPLZ_der)
190+  8FEA 23           1 inc hl
191+  8FEB 23           	inc hl
192+  8FEC 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  8FEE 22 AC 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  8FF1 CD 69 87     	call Extrae_address
195+  8FF4 22 A2 85     	ld (Puntero_objeto),hl
196+  8FF7
197+  8FF7              ; Modifica (Puntero_DESPLZ_izq).
198+  8FF7
199+  8FF7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  8FF7              ; Cuántos movimientos hemos hecho ??
201+  8FF7              ; DE contiene (Puntero_DESPLZ_der).
202+  8FF7
203+  8FF7 2A A8 85     7 ld hl,(Indice_Sprite_der)
204+  8FFA EB           	ex de,hl
205+  8FFB A7           	and a
206+  8FFC ED 52        	sbc hl,de
207+  8FFE CB 3D        	srl l
208+  9000 3E 08        6 ld a,8
209+  9002 95           	sub l
210+  9003 30 1E        	jr nc,3F
211+  9005
212+  9005              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  9005              ; B="0".
214+  9005
215+  9005 04           4 inc b
216+  9006 3C           	inc a
217+  9007 20 FC        	jr nz,4B
218+  9009 78           	ld a,b
219+  900A 08           	ex af,af
220+  900B 2A A8 85     	ld hl,(Indice_Sprite_der)
221+  900E 23           5 inc hl
222+  900F 23           	inc hl
223+  9010 10 FC        	djnz 5B
224+  9012 22 AC 85     	ld (Puntero_DESPLZ_der),hl
225+  9015 CD 69 87     	call Extrae_address
226+  9018 22 A2 85     	ld (Puntero_objeto),hl
227+  901B
228+  901B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  901B              ; _(Posicion_actual).
230+  901B
231+  901B 21 A0 85     	ld hl,Posicion_actual
232+  901E 34           	inc (hl)
233+  901F 08               ex af,af
234+  9020 6F           	ld l,a
235+  9021 18 DD        	jr 6B
236+  9023
237+  9023              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  9023
239+  9023 47           3 ld b,a
240+  9024 2A AA 85     	ld hl,(Indice_Sprite_izq)
241+  9027 23           2 inc hl
242+  9028 23           	inc hl
243+  9029 10 FC        	djnz 2B
244+  902B 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
245+  902E C9           8 ret
246+  902F
247+  902F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  902F              ;
249+  902F              ;	24/7/22
250+  902F              ;
251+  902F              ;	modifica_parametros_1er_DESPLZ_2
252+  902F              ;
253+  902F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  902F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  902F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  902F
257+  902F 3A A6 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  9032 A7           	and a
259+  9033 20 1F        	jr nz,1F
260+  9035 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  9037 32 A6 85         ld (CTRL_DESPLZ),a
262+  903A
263+  903A 21 9F 85     	ld hl,Columns
264+  903D 34           	inc (hl)
265+  903E 3A B2 85     	ld a,(Cuad_objeto)
266+  9041 E6 01        	and 1
267+  9043 28 0F        	jr z,1F
268+  9045 2A A0 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  9048 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  9049 22 A0 85     	ld (Posicion_actual),hl
271+  904C CD 26 92     	call Genera_coordenadas
272+  904F CD BA 91     	call Inc_CTRL_DESPLZ
273+  9052 18 03        	jr 2F
274+  9054 CD BA 91     1 call Inc_CTRL_DESPLZ
275+  9057 C9           2 ret
276+  9058
277+  9058              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  9058              ;
279+  9058              ;	24/7/22
280+  9058              ;
281+  9058              ;	Ciclo_completo.
282+  9058              ;
283+  9058              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  9058              ;
285+  9058              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  9058              ; 	Decrementamos (Columns).
287+  9058              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  9058              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  9058
290+  9058
291+  9058 3A A6 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  905B FE FF        	cp $ff
293+  905D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  905F E6 F0        	and $f0
295+  9061 20 28        	jr nz,3F
296+  9063
297+  9063              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  9063
299+  9063 3A A6 85     	ld a,(CTRL_DESPLZ)
300+  9066 47           	ld b,a
301+  9067 3E F8        	ld a,$f8
302+  9069 80           	add b
303+  906A 32 A6 85     	ld (CTRL_DESPLZ),a
304+  906D 18 1C        	jr 3F
305+  906F 21 9F 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9072 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9073 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9074 32 A6 85     	ld (CTRL_DESPLZ),a
309+  9077 3A B2 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  907A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  907C 20 0A        	jr nz,2F
312+  907E 2A A0 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9081 23           	inc hl
314+  9082 22 A0 85     	ld (Posicion_actual),hl
315+  9085 CD 26 92     	call Genera_coordenadas
316+  9088
317+  9088              ; Inicia el puntero de Sprite.
318+  9088
319+  9088 CD 80 87     2 call Inicia_puntero_objeto_der
320+  908B C9           3 ret
321+  908C
322+  908C              ; ******************************************************************************************************************************************************************************************
323+  908C              ;
324+  908C              ;	15/02/23
325+  908C              ;
326+  908C              ;	Mov_left.
327+  908C              ;
328+  908C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  908C              ;
330+  908C              Mov_left
331+  908C
332+  908C 21 CB 85     	ld hl,Ctrl_0
333+  908F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  9091              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  9091              ; 																	; _ en el caso de que no lo haya.
336+  9091 3A CB 85     	ld a,(Ctrl_0)
337+  9094 CB 77        	bit 6,a
338+  9096 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9098
340+  9098 CD B4 91     	call Stop_Amadeus_left
341+  909B C8           	ret z
342+  909C 20 50        	jr nz,8F
343+  909E
344+  909E 3A A4 85     11 ld a,(Coordenada_X)
345+  90A1 A7           	and a
346+  90A2 20 4A        	jr nz,8F
347+  90A4
348+  90A4 3A A6 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  90A7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  90A8 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  90AA
352+  90AA              ; ---------- ---------- ----------
353+  90AA
354+  90AA 3A B3 85     	ld a,(Vel_left)
355+  90AD FE 02        	cp 2
356+  90AF 28 0F        	jr z,1F
357+  90B1 38 04        	jr c,6F
358+  90B3 FE 04        	cp 4
359+  90B5 28 12        	jr z,7F
360+  90B7
361+  90B7              ; ---------- ---------- ----------
362+  90B7
363+  90B7 3A A6 85     6 ld a,(CTRL_DESPLZ)
364+  90BA FE F9        	cp $f9
365+  90BC 20 30        	jr nz,8F
366+  90BE 18 10        	jr 4F
367+  90C0 3A A6 85     1 ld a,(CTRL_DESPLZ)
368+  90C3 FE FA        	cp $fa
369+  90C5 20 27        	jr nz,8F
370+  90C7 18 07        	jr 4F
371+  90C9 3A A6 85     7 ld a,(CTRL_DESPLZ)
372+  90CC FE FC        	cp $fc
373+  90CE 20 1E        	jr nz,8F
374+  90D0
375+  90D0              ; ---------- ---------- ----------
376+  90D0
377+  90D0              4
378+  90D0 CD DC 91     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  90D3              ;	call Reinicio
380+  90D3
381+  90D3              ; ---------- ---------- ----------
382+  90D3
383+  90D3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  90D5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  90D6
386+  90D6 2A AA 85     	ld hl,(Indice_Sprite_izq)
387+  90D9 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
388+  90DC
389+  90DC CD F5 90     	call DESPLZ_IZQ
390+  90DF C1           	pop bc
391+  90E0 10 F3        	djnz 5B
392+  90E2 2A A0 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  90E5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  90E6 22 A0 85     	ld (Posicion_actual),hl
395+  90E9 CD 26 92     	call Genera_coordenadas
396+  90EC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  90EE
398+  90EE              ; ---------- ---------- ----------
399+  90EE              ; Movemos, no hay recolocación.
400+  90EE
401+  90EE 2A A0 85     8 ld hl,(Posicion_actual)
402+  90F1 CD F5 90     	call DESPLZ_IZQ
403+  90F4 C9           2 ret
404+  90F5
405+  90F5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  90F5              ;
407+  90F5              ;	22/9/22
408+  90F5
409+  90F5              DESPLZ_IZQ
410+  90F5
411+  90F5 CD 04 91     	call Desplaza_izquierda
412+  90F8 CD 50 91         call modifica_parametros_1er_DESPLZ
413+  90FB CD 78 91     	call Ciclo_completo_2
414+  90FE 21 CB 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  9101 CB BE        	res 7,(hl)
416+  9103 C9           	ret
417+  9104
418+  9104              Desplaza_izquierda
419+  9104
420+  9104 3A B3 85     	ld a,(Vel_left)
421+  9107 47           	ld b,a
422+  9108 2A AE 85     	ld hl,(Puntero_DESPLZ_izq)
423+  910B 23           1 inc hl
424+  910C 23           	inc hl
425+  910D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  910F 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
427+  9112 CD 69 87     	call Extrae_address
428+  9115 22 A2 85     	ld (Puntero_objeto),hl
429+  9118
430+  9118              ; Modifica (Puntero_DESPLZ_der).
431+  9118
432+  9118              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  9118              ; Cuántos movimientos hemos hecho ??
434+  9118              ; DE contiene (Puntero_DESPLZ_izq).
435+  9118
436+  9118 2A AA 85     7 ld hl,(Indice_Sprite_izq)
437+  911B EB           	ex de,hl
438+  911C A7           	and a
439+  911D ED 52        	sbc hl,de
440+  911F CB 3D        	srl l
441+  9121 3E 08        6 ld a,8
442+  9123 95           	sub l
443+  9124 30 1E        	jr nc,3F
444+  9126
445+  9126              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  9126              ; B="0".
447+  9126
448+  9126 04           4 inc b
449+  9127 3C           	inc a
450+  9128 20 FC        	jr nz,4B
451+  912A 78           	ld a,b
452+  912B 08           	ex af,af
453+  912C 2A AA 85     	ld hl,(Indice_Sprite_izq)
454+  912F 23           5 inc hl
455+  9130 23           	inc hl
456+  9131 10 FC        	djnz 5B
457+  9133 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
458+  9136 CD 69 87     	call Extrae_address
459+  9139 22 A2 85     	ld (Puntero_objeto),hl
460+  913C
461+  913C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  913C              ; _(Posicion_actual).
463+  913C
464+  913C 21 A0 85     	ld hl,Posicion_actual
465+  913F 35           	dec (hl)
466+  9140 08           	ex af,af
467+  9141 6F           	ld l,a
468+  9142 18 DD        	jr 6B
469+  9144
470+  9144              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  9144
472+  9144 47           3 ld b,a
473+  9145 2A A8 85     	ld hl,(Indice_Sprite_der)
474+  9148 23           2 inc hl
475+  9149 23           	inc hl
476+  914A 10 FC        	djnz 2B
477+  914C 22 AC 85     	ld (Puntero_DESPLZ_der),hl
478+  914F C9           8 ret
479+  9150
480+  9150              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  9150              ;
482+  9150              ;	modifica_parametros_1er_DESPLZ
483+  9150              ;
484+  9150              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  9150              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  9150              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  9150
488+  9150 3A A6 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  9153 A7           	and a
490+  9154 20 1E        	jr nz,1F
491+  9156 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  9157 32 A6 85         ld (CTRL_DESPLZ),a
493+  915A 21 9F 85     	ld hl,Columns
494+  915D 34           	inc (hl)
495+  915E 3A B2 85     	ld a,(Cuad_objeto)
496+  9161 E6 01        	and 1
497+  9163 20 0F        	jr nz,1F
498+  9165 2A A0 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  9168 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  9169 22 A0 85     	ld (Posicion_actual),hl
501+  916C CD 26 92     	call Genera_coordenadas
502+  916F CD CB 91     	call Dec_CTRL_DESPLZ
503+  9172 18 03        	jr 2F
504+  9174 CD CB 91     1 call Dec_CTRL_DESPLZ
505+  9177 C9           2 ret
506+  9178
507+  9178              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  9178
509+  9178 3A A6 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  917B FE F7        	cp $f7
511+  917D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  917F 30 2C        	jr nc,3F
513+  9181
514+  9181              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  9181
516+  9181 06 00        	ld b,0
517+  9183 04           4 inc b
518+  9184 3C           	inc a
519+  9185 FE F7        	cp $f7
520+  9187 20 FA        	jr nz,4B
521+  9189 3E FF        	ld a,$ff
522+  918B 90           	sub b
523+  918C 32 A6 85     	ld (CTRL_DESPLZ),a
524+  918F 18 1C        	jr 3F
525+  9191
526+  9191              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  9191
528+  9191 21 9F 85     1 ld hl,Columns
529+  9194 35           	dec (hl)
530+  9195 AF           	xor a
531+  9196 32 A6 85     	ld (CTRL_DESPLZ),a
532+  9199 3A B2 85     	ld a,(Cuad_objeto)
533+  919C E6 01        	and 1
534+  919E 28 0A        	jr z,2F
535+  91A0 2A A0 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  91A3 2B           	dec hl
537+  91A4 22 A0 85     	ld (Posicion_actual),hl
538+  91A7 CD 26 92     	call Genera_coordenadas
539+  91AA
540+  91AA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  91AA
542+  91AA CD 93 87     2 call Inicia_puntero_objeto_izq
543+  91AD C9           3 ret
544+  91AE
545+  91AE              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  91AE              ;
547+  91AE              ;	19/10/22
548+  91AE              ;
549+  91AE              ;	(cp 29) para un Amadeus de 3 Columns.
550+  91AE              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  91AE
552+  91AE 3A A4 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  91B1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  91B3 C9           	ret
555+  91B4
556+  91B4              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  91B4              ;
558+  91B4              ;	19/10/22
559+  91B4              ;
560+  91B4              ;	(cp 2) para un Amadeus de 3 Columns.
561+  91B4              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  91B4
563+  91B4 3A A4 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  91B7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  91B9 C9           	ret
566+  91BA
567+  91BA              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  91BA              ;
569+  91BA              ;	24/7/22
570+  91BA              ;
571+  91BA              ;	Inc_CTRL_DESPLZ
572+  91BA              ;
573+  91BA              ;
574+  91BA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  91BA
576+  91BA 21 A6 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  91BD 3A B4 85     	ld a,(Vel_right)
578+  91C0 A7           	and a
579+  91C1 28 06        	jr z,1F
580+  91C3 47           	ld b,a
581+  91C4 34           3 inc (hl)
582+  91C5 10 FD        	djnz 3B
583+  91C7 18 01        	jr 2F
584+  91C9 34           1 inc (hl)
585+  91CA C9           2 ret
586+  91CB
587+  91CB              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  91CB              ;
589+  91CB              ;	5/2/23
590+  91CB              ;
591+  91CB              ;	Dec_CTRL_DESPLZ
592+  91CB              ;
593+  91CB              ;
594+  91CB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  91CB
596+  91CB 21 A6 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  91CE 3A B3 85     	ld a,(Vel_left)
598+  91D1 A7           	and a
599+  91D2 28 06        	jr z,1F
600+  91D4 47           	ld b,a
601+  91D5 35           3 dec (hl)
602+  91D6 10 FD        	djnz 3B
603+  91D8 18 01        	jr 2F
604+  91DA 35           1 dec (hl)
605+  91DB C9           2 ret
606+  91DC
607+  91DC              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  91DC
609+  91DC 2A A0 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  91DF 01 1F 00     	ld bc,31
611+  91E2 A7           	and a
612+  91E3 ED 4A        	adc hl,bc
613+  91E5 22 A0 85     	ld (Posicion_actual),hl
614+  91E8 21 CB 85     	ld hl,Ctrl_0														; $xxx1
615+  91EB CB C6        	set 0,(hl)
616+  91ED C9           	ret
617+  91EE
618+  91EE              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  91EE
620+  91EE 2A A0 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  91F1 01 1F 00     	ld bc,31
622+  91F4 A7           	and a
623+  91F5 ED 42        	sbc hl,bc
624+  91F7 22 A0 85     	ld (Posicion_actual),hl 											; $xx1x
625+  91FA 21 CB 85     	ld hl,Ctrl_0
626+  91FD CB CE        	set 1,(hl)
627+  91FF C9           	ret
628+  9200
629+  9200              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  9200
631+  9200 24           Reaparece_abajo inc h
632+  9201 01 E0 17     	ld bc,$17e0
633+  9204 A7           	and a
634+  9205 ED 4A        	adc hl,bc
635+  9207 22 A0 85     	ld (Posicion_actual),hl
636+  920A 21 CB 85     	ld hl,Ctrl_0
637+  920D CB D6        	set 2,(hl)
638+  920F C9           	ret
639+  9210
640+  9210              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  9210
642+  9210 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  9213 A7           	and a
644+  9214 ED 42        	sbc hl,bc
645+  9216 22 A0 85     	ld (Posicion_actual),hl
646+  9219 21 CB 85     	ld hl,Ctrl_0
647+  921C CB DE        	set 3,(hl)
648+  921E C9           	ret
649+  921F
650+  921F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  921F
652+  921F 2A B0 85     Reinicio ld hl,(Posicion_inicio)
653+  9222 22 A0 85     	ld (Posicion_actual),hl
654+  9225 C9           	ret
# file closed: Direcciones.asm
792   9226              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9226              ;	12/12/22
  2+  9226              ;
  3+  9226              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  9226              ;	Fila superior "0", Columna izquierda "0".
  5+  9226              ;
  6+  9226              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  9226              ;
  8+  9226              ;	Modifica: A
  9+  9226
 10+  9226 C5           Genera_coordenadas push bc
 11+  9227 E5           	push hl
 12+  9228 2A A0 85     	ld hl,(Posicion_actual)
 13+  922B 7D           	ld a,l
 14+  922C E6 1F        	and $1f
 15+  922E 32 A4 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  9231 CD F4 8E     	call calcula_tercio
 17+  9234 47           	ld b,a
 18+  9235 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  9236 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  9238 7D           	ld a,l
 21+  9239 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  923B 28 05        	jr z,2F
 23+  923D 0C           1 inc c
 24+  923E D6 20        	sub 32
 25+  9240 20 FB        	jr nz,1B
 26+  9242 0C           2 inc c
 27+  9243 04           	inc b
 28+  9244 05           	dec b
 29+  9245 28 04        	jr z,3F
 30+  9247 3E E0        	ld a,$e0
 31+  9249 10 F2        	djnz 1B
 32+  924B 79           3 ld a,c
 33+  924C 3D           	dec a
 34+  924D 32 A5 85     	ld (Coordenada_y),a
 35+  9250 E1           	pop hl
 36+  9251 C1           	pop bc
 37+  9252 C9           	ret
# file closed: Genera_coordenadas.asm
793   9253              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  9253
  2+  9253
  3+  9253              ;   11/8/22
  4+  9253              ;
  5+  9253              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  9253              ;
  7+  9253              ;   Mov_obj.asm
  8+  9253              ;
  9+  9253              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  9253              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  9253              ;
 12+  9253              ;   Codificación:
 13+  9253              ;
 14+  9253              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  9253
 16+  9253              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  9253
 18+  9253 02 40 00     Arriba db 2,%01000000,0
 19+  9256 02 80 00     Abajo db 2,%10000000,0
 20+  9259 02 20 00     Derecha db 2,%00100000,0
 21+  925C 02 10 00     Izquierda db 2,%00010000,0
 22+  925F 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  9263 60 42 60 40
 22+  9267 63
 23+  9268 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  926C 22 A3 80 A0
 24+  9270 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9274 84 A0 83 A0
 25+  9278 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  927C 80 A3 22 A0
 26+  9280 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9284 40 60 42 60
 27+  9288 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  928C 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  9290 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  9294 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  9298 84
 31+  9299 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  929D 84 00
 32+  929F 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  92A3 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  92A7 1F 1F 1F 1F
 34+  92AB 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  92AF 1F 1F 1F 1F
 34+  92B3 1F
 35+  92B4 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  92B8 2F 2F 2F 2F
 35+  92BC 2F 2F
 36+  92BE 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  92C2 2F 2F 00
 37+  92C5
 38+  92C5
 39+  92C5              ; ----- ----- ----- ----- -----
 40+  92C5
 41+  92C5 A3 92        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  92C7 9F 92        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  92C9 5C 92        Indice_mov_Izquierda defw Izquierda
 44+  92CB 59 92        Indice_mov_Derecha defw Derecha
 45+  92CD 56 92        Indice_mov_Abajo defw Abajo
 46+  92CF 53 92        Indice_mov_Arriba defw Arriba
 47+  92D1 90 92        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  92D3 94 92        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  92D5 8C 92        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  92D7 99 92        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  92D9 5F 92        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  92DB              ; ----- ----- ----- ----- -----
 53+  92DB
 54+  92DB 3A D1 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  92DE A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  92DF 28 02            jr z,1F
 57+  92E1 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  92E3 3A D2 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  92E6 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  92E8 32 D2 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  92EB              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  92EB 2A CF 85         ld hl,(Puntero_mov)
 63+  92EE 7E               ld a,(hl)
 64+  92EF 32 D1 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  92F2 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  92F3 22 CF 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  92F6
 68+  92F6 3A D3 85     Decoder ld a,(Repetimos_db)
 69+  92F9 A7               and a
 70+  92FA 20 0C            jr nz,12F
 71+  92FC 2A CF 85         ld hl,(Puntero_mov)
 72+  92FF 7E               ld a,(hl)
 73+  9300 A7               and a
 74+  9301 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  9303 E6 0F            and $0f
 76+  9305 32 D3 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  9308              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  9308 2A CF 85     12 ld hl,(Puntero_mov)
 79+  930B CB 7E            bit 7,(hl)
 80+  930D 28 03            jr z,2F
 81+  930F CD 12 8F         call Mov_down
 82+  9312 2A CF 85     2 ld hl, (Puntero_mov)
 83+  9315 CB 76            bit 6,(hl)
 84+  9317 28 03            jr z,3F
 85+  9319 CD 40 8F         call Mov_up
 86+  931C 2A CF 85     3 ld hl, (Puntero_mov)
 87+  931F CB 6E            bit 5,(hl)
 88+  9321 28 03            jr z,4F
 89+  9323 CD 6E 8F         call Mov_right
 90+  9326 2A CF 85     4 ld hl, (Puntero_mov)
 91+  9329 CB 66            bit 4,(hl)
 92+  932B 28 03            jr z,5F
 93+  932D CD 8C 90         call Mov_left
 94+  9330
 95+  9330              ; ---------- --------- --------- ---------- ----------
 96+  9330
 97+  9330 3A D3 85     5 ld a,(Repetimos_db)
 98+  9333 A7               and a
 99+  9334 28 07            jr z,6F
100+  9336 3D               dec a
101+  9337 32 D3 85         ld (Repetimos_db),a
102+  933A 28 01            jr z,6f
103+  933C C9           11 ret
104+  933D 21 D1 85     6 ld hl,Contador_db_mov
105+  9340 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  9341 2A CF 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  9344 23               inc hl
108+  9345 22 CF 85         ld (Puntero_mov),hl
109+  9348 18 F2            jr 11B
110+  934A 2A CD 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  934D 3A D2 85         ld a,(Incrementa_puntero)
112+  9350 47               ld b,a
113+  9351 23           8 inc hl
114+  9352 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  9354 5E               ld e,(hl)
116+  9355 23               inc hl
117+  9356 56               ld d,(hl)
118+  9357 EB               ex de,hl
119+  9358 22 CF 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  935B 18 DF            jr 11B
121+  935D
122+  935D              ; ---------- --------- --------- ---------- ----------
123+  935D              ;
124+  935D              ;   11/8/22
125+  935D              ;
126+  935D              ;   Prepara_Puntero_mov
127+  935D
128+  935D E5           Prepara_Puntero_mov push hl
129+  935E D5               push de
130+  935F 2A CD 85         ld hl,(Puntero_indice_mov)
131+  9362 5E               ld e,(hl)
132+  9363 23               inc hl
133+  9364 56               ld d,(hl)
134+  9365 EB               ex de,hl
135+  9366 22 CF 85         ld (Puntero_mov),hl
136+  9369 D1               pop de
137+  936A E1               pop hl
138+  936B C9               ret
139+  936C
140+  936C              ; ---------- --------- --------- ---------- ----------
141+  936C              ;
142+  936C              ;   11/8/22
143+  936C              ;
144+  936C              ;   Reinicia_el_movimiento
145+  936C
146+  936C CD 5D 93     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  936F AF               xor a
148+  9370 32 D1 85         ld (Contador_db_mov),a
149+  9373 32 D2 85         ld (Incrementa_puntero),a
150+  9376
151+  9376              ;    jr $
152+  9376
153+  9376 C3 DB 92         jp Movimiento
154+  9379 C9               ret
155+  937A              ; ---------- --------- --------- ---------- ----------
156+  937A
157+  937A
158+  937A
159+  937A
160+  937A
161+  937A
162+  937A
163+  937A
164+  937A
165+  937A
166+  937A
167+  937A
168+  937A
169+  937A
170+  937A
171+  937A
172+  937A
173+  937A
# file closed: Patrones_de_mov.asm
794   937A              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  937A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  937A              ;
  3+  937A              ;	3/1/23
  4+  937A              ;
  5+  937A              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  937A
  7+  937A              ;	ADC HL,SP	LD (addr),SP
  8+  937A              ;	ADD HL,SP	LD SP,(addr)
  9+  937A              ;	ADD IX,SP	LD SP,nn
 10+  937A              ; 	ADD IY,SP	LD SP,HL
 11+  937A              ;				LD SP,IX
 12+  937A              ;	DEC SP		LD SP,IY
 13+  937A
 14+  937A              ;	EX (SP),HL
 15+  937A              ;	EX (SP),IX
 16+  937A              ;	EX (SP),IY
 17+  937A
 18+  937A              ;	INC SP
 19+  937A
 20+  937A
 21+  937A                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 E0 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 9F 7F         ld sp,Guarda_foto_registros - 1               ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 2A E4 85         ld hl,(Stack_snapshot)                        ; Album_de_fotos contiene la imagen de los registros implicados en el_
 38+  7FAF 06 03            ld b,3                                        ; _correcto funcionamiento de las distintas rutinas de impresión.
 39+  7FB1
 40+  7FB1 D1           1 pop de
 41+  7FB2 73               ld (hl),e
 42+  7FB3 23               inc hl
 43+  7FB4 72               ld (hl),d
 44+  7FB5 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 45+  7FB6 10 F9            djnz 1B
 46+  7FB8
 47+  7FB8 22 E4 85         ld (Stack_snapshot),hl
 48+  7FBB ED 7B E0 85      ld sp,(Stack)
 49+  7FBF
 50+  7FBF C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 51+  7FC0
 52+  7FC0
# file closed: Guarda_foto_registros.asm
795   7FC0
796   7FC0              	SAVESNA "Pruebas.sna", START
797   7FC0
798   7FC0
799   7FC0
# file closed: Banco_de_pruebas.asm
