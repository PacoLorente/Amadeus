# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 50 8A     	call Frame
  15  A104
  16  A104 3A 7C 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8 EE 83        Indice_Explosion_3x3 defw Explosion_3x3_1
 206+ 83EA 1E 84        	defw Explosion_3x3_2
 207+ 83EC 4E 84        	defw Explosion_3x3_3
 208+ 83EE
 209+ 83EE 0D ED E0 0D  Explosion_3x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 209+ 83F2 ED E0 0D ED
 210+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 210+ 83FA 0D ED E0 0D
 211+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 211+ 8402 E0 0D ED E0
 212+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 212+ 840A ED E0 0D ED
 213+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 213+ 8412 0D ED E0 0D
 214+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 214+ 841A E0 0D ED E0
 215+ 841E
 216+ 841E 01 8F 80 01  Explosion_3x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 216+ 8422 8F 80 01 8F
 217+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 217+ 842A 01 8F 80 01
 218+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 218+ 8432 80 01 8F 80
 219+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 219+ 843A 8F 80 01 8F
 220+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 220+ 8442 01 8F 80 01
 221+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 221+ 844A 80 01 8F 80
 222+ 844E
 223+ 844E 01 11 10 01  Explosion_3x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 223+ 8452 11 10 01 11
 224+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 224+ 845A 01 11 10 01
 225+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 225+ 8462 10 01 11 10
 226+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 226+ 846A 11 10 01 11
 227+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 227+ 8472 01 11 10 01
 228+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 228+ 847A 10 01 11 10
 229+ 847E
 230+ 847E
 231+ 847E DE DE DE DE  Explosion_2x2 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 231+ 8482 DE DE DE DE
 232+ 8486 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 232+ 848A DE DE DE DE
 233+ 848E DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 233+ 8492 DE DE DE DE
 234+ 8496 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 234+ 849A DE DE DE DE
# file closed: Sprites_e_indices.asm
  23  849E              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 849E
   2+ 849E              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 849E
   4+ 849E              ; 13/05/23
   5+ 849E
   6+ 849E              ; Control. %00000001 00000001
   7+ 849E              ;
   8+ 849E              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 849E              ;                    _ hacen las entidades hacia abajo.
  10+ 849E              ;
  11+ 849E              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 849E
  13+ 849E A4 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84A0 AC 84        	defw Disparo_2A
  15+ 84A2 B4 84        	defw Disparo_3A
  16+ 84A4
  17+ 84A4 00 00        Disparo_1A defw 0									; Control.
  18+ 84A6 00 00        	defw 0											; Puntero objeto.
  19+ 84A8 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84AA 00 00        	defw 0											; Rutina de impresión.
  21+ 84AC
  22+ 84AC 00 00        Disparo_2A defw 0									; Control.
  23+ 84AE 00 00        	defw 0											; Puntero objeto.
  24+ 84B0 00 00        	defw 0											; Puntero de impresión.
  25+ 84B2 00 00        	defw 0											; Rutina de impresión.
  26+ 84B4
  27+ 84B4 00 00        Disparo_3A defw 0
  28+ 84B6
  29+ 84B6 CC 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 84B8 D4 84        	defw Disparo_2
  31+ 84BA DC 84        	defw Disparo_3
  32+ 84BC E4 84        	defw Disparo_4
  33+ 84BE EC 84        	defw Disparo_5
  34+ 84C0 F4 84        	defw Disparo_6
  35+ 84C2 FC 84        	defw Disparo_7
  36+ 84C4 04 85        	defw Disparo_8
  37+ 84C6 0C 85        	defw Disparo_9
  38+ 84C8 14 85        	defw Disparo_10
  39+ 84CA 1C 85        	defw Disparo_11
  40+ 84CC
  41+ 84CC 00 00        Disparo_1 defw 0									; Control.
  42+ 84CE 00 00        	defw 0											; Puntero objeto.
  43+ 84D0 00 00        	defw 0											; Puntero de impresión.
  44+ 84D2 00 00        	defw 0											; Rutina de impresión.
  45+ 84D4
  46+ 84D4 00 00        Disparo_2 defw 0									; Control.
  47+ 84D6 00 00        	defw 0											; Puntero objeto.
  48+ 84D8 00 00        	defw 0											; Puntero de impresión.
  49+ 84DA 00 00        	defw 0											; Rutina de impresión.
  50+ 84DC
  51+ 84DC 00 00        Disparo_3 defw 0									; Control.
  52+ 84DE 00 00        	defw 0											; Puntero objeto.
  53+ 84E0 00 00        	defw 0											; Puntero de impresión.
  54+ 84E2 00 00        	defw 0											; Rutina de impresión.
  55+ 84E4
  56+ 84E4 00 00        Disparo_4 defw 0									; Control.
  57+ 84E6 00 00        	defw 0											; Puntero objeto.
  58+ 84E8 00 00        	defw 0											; Puntero de impresión.
  59+ 84EA 00 00        	defw 0											; Rutina de impresión.
  60+ 84EC
  61+ 84EC 00 00        Disparo_5 defw 0									; Control.
  62+ 84EE 00 00        	defw 0											; Puntero objeto.
  63+ 84F0 00 00        	defw 0											; Puntero de impresión.
  64+ 84F2 00 00        	defw 0											; Rutina de impresión.
  65+ 84F4
  66+ 84F4 00 00        Disparo_6 defw 0									; Control.
  67+ 84F6 00 00        	defw 0											; Puntero objeto.
  68+ 84F8 00 00        	defw 0											; Puntero de impresión.
  69+ 84FA 00 00        	defw 0											; Rutina de impresión.
  70+ 84FC
  71+ 84FC 00 00        Disparo_7 defw 0									; Control.
  72+ 84FE 00 00        	defw 0											; Puntero objeto.
  73+ 8500 00 00        	defw 0											; Puntero de impresión.
  74+ 8502 00 00        	defw 0											; Rutina de impresión.
  75+ 8504
  76+ 8504 00 00        Disparo_8 defw 0									; Control.
  77+ 8506 00 00        	defw 0											; Puntero objeto.
  78+ 8508 00 00        	defw 0											; Puntero de impresión.
  79+ 850A 00 00        	defw 0											; Rutina de impresión.
  80+ 850C
  81+ 850C 00 00        Disparo_9 defw 0									; Control.
  82+ 850E 00 00        	defw 0											; Puntero objeto.
  83+ 8510 00 00        	defw 0											; Puntero de impresión.
  84+ 8512 00 00        	defw 0											; Rutina de impresión.
  85+ 8514
  86+ 8514 00 00        Disparo_10 defw 0									; Control.
  87+ 8516 00 00        	defw 0											; Puntero objeto.
  88+ 8518 00 00        	defw 0											; Puntero de impresión.
  89+ 851A 00 00        	defw 0											; Rutina de impresión.
  90+ 851C
  91+ 851C 00 00        Disparo_11 defw 0
  92+ 851E
  93+ 851E              ; -------------------------------------------------------------------------------------
  94+ 851E
  95+ 851E              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 851E
  97+ 851E 74 85        	defw Caja_1
  98+ 8520 B2 85        	defw Caja_2
  99+ 8522 F0 85        	defw Caja_3
 100+ 8524 2E 86        	defw Caja_4
 101+ 8526 6C 86        	defw Caja_5
 102+ 8528 AA 86        	defw Caja_6
 103+ 852A E8 86        	defw Caja_7
 104+ 852C 26 87        	defw Caja_8
 105+ 852E 64 87        	defw Caja_9
 106+ 8530 A2 87        	defw Caja_10
 107+ 8532              ;	...
 108+ 8532              ;	...
 109+ 8532              ;	+ entidades ...
 110+ 8532 00 00        	defw 0
 111+ 8534 00 00        	defw 0
 112+ 8536
 113+ 8536              ; ---------- ---------- ---------- ---------- ----------
 114+ 8536
 115+ 8536 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8538 00 00        	defw 0		 									; (Posicion_actual).
 117+ 853A 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 853C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 853F
 120+ 853F 05           	db %00000101									; (Attr).
 121+ 8540 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8542 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8544
 124+ 8544 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8546 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8548
 127+ 8548 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 854A 04           	db 4 											; (Cuad_objeto).
 129+ 854B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 854F
 131+ 854F 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 132+ 8550
 133+ 8550 00 00        	db 0,0											; Variables_de_borrado
 134+ 8552 00 00        	defw 0											;	" " " " " " "
 135+ 8554 00 00        	defw 0											;	" " " " " " "
 136+ 8556 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 855A
 138+ 855A 00 00        	db 0,0											; Variables_de_pintado
 139+ 855C 00 00        	defw 0											;	" " " " " " "
 140+ 855E 00 00        	defw 0											;	" " " " " " "
 141+ 8560 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 8564
 143+ 8564 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 8567
 145+ 8567 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 856B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 856E
 148+ 856E 00           	db 0 											; (Columnas).
 149+ 856F 00 00        	defw 0											; (Limite_horizontal).
 150+ 8571 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2).
 151+ 8574
 152+ 8574              ; ---------- ---------- ---------- ---------- ----------
 153+ 8574
 154+ 8574 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 8576 00 00        	defw 0											; (Posicion_actual).
 156+ 8578 00 00        	defw 0 											; (Puntero_objeto).
 157+ 857A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 857D
 159+ 857D 00           	db %00000000 									; (Attr).
 160+ 857E
 161+ 857E 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 8580 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 8582 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 8584 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 8586
 166+ 8586 00 00        	defw 0											; (Posicion_inicio).
 167+ 8588 00           	db 0											; (Cuad_objeto).
 168+ 8589
 169+ 8589 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 858D
 171+ 858D 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 172+ 858E
 173+ 858E 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 8590 00 00        	defw 0											;	" " " " " " "
 175+ 8592 00 00        	defw 0											;	" " " " " " "
 176+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 8598
 178+ 8598 00 00        	db 0,0											; Variables_de_pintado
 179+ 859A 00 00        	defw 0											;	" " " " " " "
 180+ 859C 00 00        	defw 0											;	" " " " " " "
 181+ 859E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85A2
 183+ 85A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85A5
 185+ 85A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85AC
 188+ 85AC 00           	db 0 											; (Columnas).
 189+ 85AD 00 00        	defw 0											; (Limite_horizontal).
 190+ 85AF 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 191+ 85B2
 192+ 85B2              ; ---------- ---------- ---------- ---------- ----------
 193+ 85B2
 194+ 85B2 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85B4 00 00        	defw 0											; (Posicion_actual).
 196+ 85B6 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 85BB
 199+ 85BB 00           	db %00000000 									; (Attr).
 200+ 85BC
 201+ 85BC 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 85BE 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 85C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 85C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 85C4
 206+ 85C4 00 00        	defw 0											; (Posicion_inicio).
 207+ 85C6 00           	db 0											; (Cuad_objeto).
 208+ 85C7
 209+ 85C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 85CB
 211+ 85CB 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 212+ 85CC
 213+ 85CC 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 85CE 00 00        	defw 0											;	" " " " " " "
 215+ 85D0 00 00        	defw 0											;	" " " " " " "
 216+ 85D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 85D6
 218+ 85D6 00 00        	db 0,0											; Variables_de_pintado
 219+ 85D8 00 00        	defw 0											;	" " " " " " "
 220+ 85DA 00 00        	defw 0											;	" " " " " " "
 221+ 85DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 85E0
 223+ 85E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 85E3
 225+ 85E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 85E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 85EA
 228+ 85EA 00           	db 0 											; (Columnas).
 229+ 85EB 00 00        	defw 0											; (Limite_horizontal).
 230+ 85ED 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 231+ 85F0
 232+ 85F0              ; ---------- ---------- ---------- ---------- ----------
 233+ 85F0
 234+ 85F0 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 85F2 00 00        	defw 0											; (Posicion_actual).
 236+ 85F4 00 00        	defw 0 											; (Puntero_objeto).
 237+ 85F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 85F9
 239+ 85F9 00           	db %00000000 									; (Attr).
 240+ 85FA
 241+ 85FA 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 85FC 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 85FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8600 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8602
 246+ 8602 00 00        	defw 0											; (Posicion_inicio).
 247+ 8604 00           	db 0											; (Cuad_objeto).
 248+ 8605
 249+ 8605 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8609
 251+ 8609 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 252+ 860A
 253+ 860A 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 860C 00 00        	defw 0											;	" " " " " " "
 255+ 860E 00 00        	defw 0											;	" " " " " " "
 256+ 8610 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8614
 258+ 8614 00 00        	db 0,0											; Variables_de_pintado
 259+ 8616 00 00        	defw 0											;	" " " " " " "
 260+ 8618 00 00        	defw 0											;	" " " " " " "
 261+ 861A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 861E
 263+ 861E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8621
 265+ 8621 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 8625 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 8628
 268+ 8628 00           	db 0 											; (Columnas).
 269+ 8629 00 00        	defw 0											; (Limite_horizontal).
 270+ 862B 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 271+ 862E
 272+ 862E              ; ---------- ---------- ---------- ---------- ----------
 273+ 862E
 274+ 862E 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8630 00 00        	defw 0											; (Posicion_actual).
 276+ 8632 00 00        	defw 0 											; (Puntero_objeto).
 277+ 8634 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 8637
 279+ 8637 00           	db %00000000 									; (Attr).
 280+ 8638
 281+ 8638 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 863A 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 863C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 863E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8640
 286+ 8640 00 00        	defw 0											; (Posicion_inicio).
 287+ 8642 00           	db 0											; (Cuad_objeto).
 288+ 8643
 289+ 8643 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 8647
 291+ 8647 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 292+ 8648
 293+ 8648 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 864A 00 00        	defw 0											;	" " " " " " "
 295+ 864C 00 00        	defw 0											;	" " " " " " "
 296+ 864E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8652
 298+ 8652 00 00        	db 0,0											; Variables_de_pintado
 299+ 8654 00 00        	defw 0											;	" " " " " " "
 300+ 8656 00 00        	defw 0											;	" " " " " " "
 301+ 8658 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 865C
 303+ 865C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 865F
 305+ 865F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 8663 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 8666
 308+ 8666 00           	db 0 											; (Columnas).
 309+ 8667 00 00        	defw 0											; (Limite_horizontal).
 310+ 8669 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 311+ 866C
 312+ 866C              ; ---------- ---------- ---------- ---------- ----------
 313+ 866C
 314+ 866C 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 866E 00 00        	defw 0											; (Posicion_actual).
 316+ 8670 00 00        	defw 0 											; (Puntero_objeto).
 317+ 8672 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 8675
 319+ 8675 00           	db %00000000 									; (Attr).
 320+ 8676
 321+ 8676 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 8678 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 867A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 867C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 867E
 326+ 867E 00 00        	defw 0											; (Posicion_inicio).
 327+ 8680 00           	db 0											; (Cuad_objeto).
 328+ 8681
 329+ 8681 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 8685
 331+ 8685 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 332+ 8686
 333+ 8686 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 8688 00 00        	defw 0											;	" " " " " " "
 335+ 868A 00 00        	defw 0											;	" " " " " " "
 336+ 868C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 8690
 338+ 8690 00 00        	db 0,0											; Variables_de_pintado
 339+ 8692 00 00        	defw 0											;	" " " " " " "
 340+ 8694 00 00        	defw 0											;	" " " " " " "
 341+ 8696 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 869A
 343+ 869A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 869D
 345+ 869D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86A4
 348+ 86A4 00           	db 0 											; (Columnas).
 349+ 86A5 00 00        	defw 0											; (Limite_horizontal).
 350+ 86A7 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 351+ 86AA
 352+ 86AA              ; ---------- ---------- ---------- ---------- ----------
 353+ 86AA
 354+ 86AA 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86AC 00 00        	defw 0											; (Posicion_actual).
 356+ 86AE 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86B3
 359+ 86B3 00           	db %00000000 									; (Attr).
 360+ 86B4
 361+ 86B4 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86B6 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 86BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 86BC
 366+ 86BC 00 00        	defw 0											; (Posicion_inicio).
 367+ 86BE 00           	db 0											; (Cuad_objeto).
 368+ 86BF
 369+ 86BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 86C3
 371+ 86C3 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 372+ 86C4
 373+ 86C4 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 86C6 00 00        	defw 0											;	" " " " " " "
 375+ 86C8 00 00        	defw 0											;	" " " " " " "
 376+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 86CE
 378+ 86CE 00 00        	db 0,0											; Variables_de_pintado
 379+ 86D0 00 00        	defw 0											;	" " " " " " "
 380+ 86D2 00 00        	defw 0											;	" " " " " " "
 381+ 86D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 86D8
 383+ 86D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 86DB
 385+ 86DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 86DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 86E2
 388+ 86E2 00           	db 0 											; (Columnas).
 389+ 86E3 00 00        	defw 0											; (Limite_horizontal).
 390+ 86E5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 391+ 86E8
 392+ 86E8              ; ---------- ---------- ---------- ---------- ----------
 393+ 86E8
 394+ 86E8 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 86EA 00 00        	defw 0											; (Posicion_actual).
 396+ 86EC 00 00        	defw 0 											; (Puntero_objeto).
 397+ 86EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 86F1
 399+ 86F1 00           	db %00000000 									; (Attr).
 400+ 86F2
 401+ 86F2 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 86F4 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 86F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 86F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 86FA
 406+ 86FA 00 00        	defw 0											; (Posicion_inicio).
 407+ 86FC 00           	db 0											; (Cuad_objeto).
 408+ 86FD
 409+ 86FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8701
 411+ 8701 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 412+ 8702
 413+ 8702 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 8704 00 00        	defw 0											;	" " " " " " "
 415+ 8706 00 00        	defw 0											;	" " " " " " "
 416+ 8708 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 870C
 418+ 870C 00 00        	db 0,0											; Variables_de_pintado
 419+ 870E 00 00        	defw 0											;	" " " " " " "
 420+ 8710 00 00        	defw 0											;	" " " " " " "
 421+ 8712 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 8716
 423+ 8716 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 8719
 425+ 8719 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 871D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8720
 428+ 8720 00           	db 0 											; (Columnas).
 429+ 8721 00 00        	defw 0											; (Limite_horizontal).
 430+ 8723 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 431+ 8726
 432+ 8726              ; ---------- ---------- ---------- ---------- ----------
 433+ 8726
 434+ 8726 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 8728 00 00        	defw 0											; (Posicion_actual).
 436+ 872A 00 00        	defw 0 											; (Puntero_objeto).
 437+ 872C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 872F
 439+ 872F 00           	db %00000000 									; (Attr).
 440+ 8730
 441+ 8730 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8732 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 8734 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 8736 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 8738
 446+ 8738 00 00        	defw 0											; (Posicion_inicio).
 447+ 873A 00           	db 0											; (Cuad_objeto).
 448+ 873B
 449+ 873B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 873F
 451+ 873F 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 452+ 8740
 453+ 8740 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8742 00 00        	defw 0											;	" " " " " " "
 455+ 8744 00 00        	defw 0											;	" " " " " " "
 456+ 8746 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 874A
 458+ 874A 00 00        	db 0,0											; Variables_de_pintado
 459+ 874C 00 00        	defw 0											;	" " " " " " "
 460+ 874E 00 00        	defw 0											;	" " " " " " "
 461+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 8754
 463+ 8754 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 8757
 465+ 8757 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 875B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 875E
 468+ 875E 00           	db 0 											; (Columnas).
 469+ 875F 00 00        	defw 0											; (Limite_horizontal).
 470+ 8761 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 471+ 8764
 472+ 8764              ; ---------- ---------- ---------- ---------- ----------
 473+ 8764
 474+ 8764 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 8766 00 00        	defw 0											; (Posicion_actual).
 476+ 8768 00 00        	defw 0 											; (Puntero_objeto).
 477+ 876A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 876D
 479+ 876D 00           	db %00000000 									; (Attr).
 480+ 876E
 481+ 876E 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 8770 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 8772 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 8774 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 8776
 486+ 8776 00 00        	defw 0											; (Posicion_inicio).
 487+ 8778 00           	db 0											; (Cuad_objeto).
 488+ 8779
 489+ 8779 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 877D
 491+ 877D 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 492+ 877E
 493+ 877E 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 8780 00 00        	defw 0											;	" " " " " " "
 495+ 8782 00 00        	defw 0											;	" " " " " " "
 496+ 8784 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 8788
 498+ 8788 00 00        	db 0,0											; Variables_de_pintado
 499+ 878A 00 00        	defw 0											;	" " " " " " "
 500+ 878C 00 00        	defw 0											;	" " " " " " "
 501+ 878E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 8792
 503+ 8792 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 8795
 505+ 8795 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 8799 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 879C
 508+ 879C 00           	db 0 											; (Columnas).
 509+ 879D 00 00        	defw 0											; (Limite_horizontal).
 510+ 879F 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 511+ 87A2
 512+ 87A2              ; ---------- ---------- ---------- ---------- ----------
 513+ 87A2
 514+ 87A2 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87A4 00 00        	defw 0											; (Posicion_actual).
 516+ 87A6 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87A8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87AB
 519+ 87AB 00           	db %00000000 									; (Attr).
 520+ 87AC
 521+ 87AC 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87AE 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87B0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87B2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87B4
 526+ 87B4 00 00        	defw 0											; (Posicion_inicio).
 527+ 87B6 00           	db 0											; (Cuad_objeto).
 528+ 87B7
 529+ 87B7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 87BB
 531+ 87BB 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 532+ 87BC
 533+ 87BC 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 87BE 00 00        	defw 0											;	" " " " " " "
 535+ 87C0 00 00        	defw 0											;	" " " " " " "
 536+ 87C2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 87C6
 538+ 87C6 00 00        	db 0,0											; Variables_de_pintado
 539+ 87C8 00 00        	defw 0											;	" " " " " " "
 540+ 87CA 00 00        	defw 0											;	" " " " " " "
 541+ 87CC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 87D0
 543+ 87D0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 87D3
 545+ 87D3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 87D7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 87DA
 548+ 87DA 00           	db 0 											; (Columnas).
 549+ 87DB 00 00        	defw 0											; (Limite_horizontal).
 550+ 87DD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2).
 551+ 87E0
 552+ 87E0              ; -------------------------------------------------------------------------------------
 553+ 87E0              ;
 554+ 87E0              ;	20/05/23
 555+ 87E0              ;
 556+ 87E0              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 87E0              ;
 558+ 87E0              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 87E0              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 87E0              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 87E0              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 87E0
 563+ 87E0              Indice_de_entidades
 564+ 87E0
 565+ 87E0 EA 87        	defw Entidad_1
 566+ 87E2 FA 87        	defw Entidad_2
 567+ 87E4 0A 88        	defw Entidad_3
 568+ 87E6 1A 88        	defw Entidad_4
 569+ 87E8 2A 88        	defw Entidad_5
 570+ 87EA
 571+ 87EA              ;	BADSAT, (Satélite malvado).
 572+ 87EA
 573+ 87EA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 87EC 04           	db %00000100									; (Attr).
 575+ 87ED 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 87EF 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 87F1 60 47        	defw $4760	                             	    ; (Posicion_inicio).
 578+ 87F3 01           	db 1											; (Cuad_objeto).
 579+ 87F4 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 87F8 CD 9B        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 581+ 87FA
 582+ 87FA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 87FC 02           	db %00000010									; (Attr).
 584+ 87FD 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 87FF 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8801 5F 48        	defw $485f                                      ; (Posicion_inicio).
 587+ 8803 01           	db 1											; (Cuad_objeto).
 588+ 8804 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 8808 CB 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 590+ 880A
 591+ 880A 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 880C 04           	db %00000100									; (Attr).
 593+ 880D 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 880F 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8811 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8813 01           	db 1											; (Cuad_objeto).
 597+ 8814 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 8818 BF 9B        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 599+ 881A
 600+ 881A 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 881C 01           	db %00000001									; (Attr).
 602+ 881D 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 881F 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8821 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8823 01           	db 1											; (Cuad_objeto).
 606+ 8824 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 8828 CB 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 882A
 609+ 882A 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 882C 01           	db %00000001									; (Attr).
 611+ 882D 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 882F 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8831 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8833 01           	db 1											; (Cuad_objeto).
 615+ 8834 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 8838 C1 9B        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 617+ 883A
# file closed: Cajas_y_disparos.asm
  24  883A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 883A              ; 13/05/23
   2+ 883A
   3+ 883A              Indice_de_niveles
   4+ 883A
   5+ 883A 48 88        	defw Nivel_1
   6+ 883C 53 88        	defw Nivel_2
   7+ 883E 60 88        	defw Nivel_3
   8+ 8840 70 88        	defw Nivel_4
   9+ 8842 82 88        	defw Nivel_5
  10+ 8844
  11+ 8844              ;	...
  12+ 8844              ;	...
  13+ 8844              ;	+ Niveles ...
  14+ 8844
  15+ 8844 00 00        	defw 0
  16+ 8846 00 00        	defw 0
  17+ 8848
  18+ 8848 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 8849 01 02 03 04  	db 1,2,3,4,5								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 884D 05
  20+ 884E 01 02 03 04  	db 1,2,3,4,5
  20+ 8852 05
  21+ 8853 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 8854 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 8858 01 02
  23+ 885A 02 01 01 01  	db 2,1,1,1,1,2
  23+ 885E 01 02
  24+ 8860 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 8861 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 8865 01
  26+ 8866 03 01 01 01  	db 3,1,1,1,1
  26+ 886A 01
  27+ 886B 03 01 01 01  	db 3,1,1,1,1
  27+ 886F 01
  28+ 8870 11           Nivel_4 db 17									; Nº de entidades.
  29+ 8871 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 8875 01
  30+ 8876 04 01 01 01  	db 4,1,1,1,1
  30+ 887A 01
  31+ 887B 04 01 01 01  	db 4,1,1,1,1
  31+ 887F 01
  32+ 8880 02 03        	db 2,3
  33+ 8882 14           Nivel_5 db 20									; Nº de entidades.
  34+ 8883 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 8887 01
  35+ 8888 05 01 01 01  	db 5,1,1,1,1
  35+ 888C 01
  36+ 888D 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 8891 01
  37+ 8892 05 01 01 01  	db 5,1,1,1,1
  37+ 8896 01
  38+ 8897
  39+ 8897              ;---------------------------------------------------------------------------------------------------------------
  40+ 8897              ;
  41+ 8897              ;   21/5/23
  42+ 8897              ;
  43+ 8897              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 8897              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 8897              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 8897              ;	_en la caja DRAW correspondiente.
  47+ 8897              ;
  48+ 8897              ;	MODIFICA: HL,DE y A.
  49+ 8897              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 8897
  51+ 8897              Inicializa_Punteros_de_nivel
  52+ 8897
  53+ 8897 21 3A 88     	ld hl,Indice_de_niveles
  54+ 889A 22 B2 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 889D CD A0 8C     	call Extrae_address
  56+ 88A0 7E           	ld a,(hl)
  57+ 88A1 32 85 89     	ld (Numero_de_entidades),a
  58+ 88A4 23           	inc hl
  59+ 88A5 22 B4 89     	ld (Datos_de_nivel),hl
  60+ 88A8 C9           	ret
  61+ 88A9
  62+ 88A9              ;---------------------------------------------------------------------------------------------------------------
  63+ 88A9              ;
  64+ 88A9              ;   13/5/23
  65+ 88A9              ;
  66+ 88A9              ;	Destruye A,BC,HL,DE
  67+ 88A9
  68+ 88A9              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88A9              ;	_del juego.
  70+ 88A9
  71+ 88A9              Prepara_cajas
  72+ 88A9
  73+ 88A9              ; Preparamos los punteros de las cajas.
  74+ 88A9
  75+ 88A9 21 1E 85     	ld hl,Indice_de_cajas
  76+ 88AC CD A0 8C     	call Extrae_address
  77+ 88AF CD EC 88     	call Avanza_caja
  78+ 88B2
  79+ 88B2 CD 27 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 88B5
  81+ 88B5 2A B4 89     	ld hl,(Datos_de_nivel)
  82+ 88B8
  83+ 88B8              ; HL está en los datos del nivel correspondiente.
  84+ 88B8              ; B actuará como contador de cajas.
  85+ 88B8
  86+ 88B8 C5           1 push bc
  87+ 88B9
  88+ 88B9 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 88BA CD DD 88     	call PreparaBC
  90+ 88BD
  91+ 88BD 21 E0 87     	ld hl,Indice_de_entidades
  92+ 88C0 CD E5 88     	call SBC_HL_con_BC_y_Extrae
  93+ 88C3 22 8B 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 88C6
  95+ 88C6 CD F6 88     	call Datos_de_entidad_a_caja
  96+ 88C9
  97+ 88C9 2A 83 89     	ld hl,(Indice_restore_caja)
  98+ 88CC CD A0 8C     	call Extrae_address
  99+ 88CF CD EC 88     	call Avanza_caja
 100+ 88D2
 101+ 88D2 2A B4 89     	ld hl,(Datos_de_nivel)
 102+ 88D5 23           	inc hl
 103+ 88D6 22 B4 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 88D9
 105+ 88D9 C1           	pop bc
 106+ 88DA 10 DC        	djnz 1B
 107+ 88DC C9           	ret
 108+ 88DD
 109+ 88DD CB 27        PreparaBC sla a
 110+ 88DF D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 88E1 4F           	ld c,a
 112+ 88E2 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 88E4 C9           	ret
 114+ 88E5
 115+ 88E5 A7           SBC_HL_con_BC_y_Extrae and a
 116+ 88E6 ED 4A        	adc hl,bc
 117+ 88E8 CD A0 8C     	call Extrae_address
 118+ 88EB C9           	ret
 119+ 88EC
 120+ 88EC 22 7F 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 88EF 13           	inc de
 122+ 88F0 13           	inc de
 123+ 88F1 EB           	ex de,hl
 124+ 88F2 22 83 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 88F5 C9           	ret
 126+ 88F6
 127+ 88F6              Datos_de_entidad_a_caja
 128+ 88F6
 129+ 88F6              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 88F6
 131+ 88F6 ED 5B 7F 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 88FA
 133+ 88FA 01 02 00     	ld bc,2
 134+ 88FD ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 88FF
 136+ 88FF 01 07 00     	ld bc,7
 137+ 8902 CD 21 89     	call Situa_DE
 138+ 8905
 139+ 8905 01 05 00     	ld bc,5
 140+ 8908 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 890A
 142+ 890A 01 04 00     	ld bc,4
 143+ 890D CD 21 89     	call Situa_DE
 144+ 8910
 145+ 8910 01 07 00     	ld bc,7
 146+ 8913 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8915
 148+ 8915 01 18 00     	ld bc,24
 149+ 8918 CD 21 89     	call Situa_DE
 150+ 891B
 151+ 891B 01 02 00     	ld bc,2
 152+ 891E ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8920
 154+ 8920 C9           	ret
 155+ 8921
 156+ 8921 EB           Situa_DE ex de,hl
 157+ 8922 A7           	and a
 158+ 8923 ED 4A        	adc hl,bc
 159+ 8925 EB           	ex de,hl
 160+ 8926 C9           	ret
 161+ 8927
 162+ 8927              ;---------------------------------------------------------------------------------------------------------------
 163+ 8927              ;
 164+ 8927              ;	21/5/23
 165+ 8927              ;
 166+ 8927              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 167+ 8927              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 168+ 8927              ;
 169+ 8927              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 170+ 8927              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 171+ 8927              ;	_ total de entidades que contiene (Numero_de_entidades).
 172+ 8927              ;
 173+ 8927              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 174+ 8927              ;	MODIFICA: A y B.
 175+ 8927              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 176+ 8927
 177+ 8927              Admin_num_entidades
 178+ 8927
 179+ 8927              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 180+ 8927
 181+ 8927 3A 85 89     	ld a,(Numero_de_entidades)
 182+ 892A A7           	and a
 183+ 892B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 184+ 892B 28 FE        	jr z,$
 185+ 892D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 186+ 892D FE 0A        	cp 10
 187+ 892F 38 08        	jr c,1F
 188+ 8931
 189+ 8931              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 190+ 8931              ; Actualizamos variables.
 191+ 8931
 192+ 8931 3E 0A        	ld a,10
 193+ 8933 32 86 89     	ld (Numero_parcial_de_entidades),a
 194+ 8936 47           	ld b,a
 195+ 8937 18 04        	jr 2F
 196+ 8939
 197+ 8939              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 198+ 8939              ; (Numero_de_entidades)="0".
 199+ 8939
 200+ 8939 32 86 89     1 ld (Numero_parcial_de_entidades),a
 201+ 893C 47           	ld b,a
 202+ 893D C9           2 ret
# file closed: Niveles.asm
  25  893E
  26  893E              ; ******************************************************************************************************************************************************************************************
  27  893E              ; Constantes.
  28  893E              ; ******************************************************************************************************************************************************************************************
  29  893E              ;
  30  893E              ; 25/05/23
  31  893E              ;
  32  893E              ; Constantes generales.
  33  893E              ;
  34  893E
  35  893E              Sprite_vacio equ $f000
  36  893E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  893E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  893E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  893E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  893E
  41  893E              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  893E              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  893E              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  893E              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  893E              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  893E              ;                               				        ; De momento situamos este almacén en $7060.
  47  893E
  48  893E              ; ******************************************************************************************************************************************************************************************
  49  893E              ; Variables.
  50  893E              ; ******************************************************************************************************************************************************************************************
  51  893E              ;
  52  893E              ; 10/11/22
  53  893E              ;
  54  893E              ; Variables de DRAW. (Motor principal).
  55  893E              ;
  56  893E              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  893E
  58  893E 00           Filas db 0												; Filas. [DRAW]
  59  893F 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  8940 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  8942 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8944 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  8945 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  8946
  65  8946              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  8946
  67  8946 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  8947              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  8947              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  8947 00           Attr db 0												; Atributos de la entidad:
  71  8948
  72  8948              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  8948              ;
  74  8948              ;	COLORES: 0 ..... NEGRO
  75  8948              ;    		 1 ..... AZUL
  76  8948              ; 			 2 ..... ROJO
  77  8948              ;			 3 ..... MAGENTA
  78  8948              ; 			 4 ..... VERDE
  79  8948              ; 			 5 ..... CIAN
  80  8948              ;			 6 ..... AMARILLO
  81  8948              ; 			 7 ..... BLANCO
  82  8948
  83  8948 00 00        Indice_Sprite_der defw 0
  84  894A 00 00        Indice_Sprite_izq defw 0
  85  894C 00 00        Puntero_DESPLZ_der defw 0
  86  894E 00 00        Puntero_DESPLZ_izq defw 0
  87  8950
  88  8950 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  8952 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  8953
  91  8953              ; Variables de objeto. (Características).
  92  8953
  93  8953 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  8954 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  8955 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  8956 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  8957
  98  8957 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  8958              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  8958              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  8958
 102  8958 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  895A 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  895C 00 00        	defw 0
 105  895E 00 00 00 00  	db 0,0,0,0
 106  8962
 107  8962 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  8964 00 00        	defw 0
 109  8966 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  8968 00 00 00 00  	db 0,0,0,0
 111  896C
 112  896C              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  896C
 114  896C 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  896D              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  896D              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  896D              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  896D              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  896D              ;
 120  896D              ; 														DESCRIPCIÖN:
 121  896D              ;
 122  896D              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  896D              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  896D              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  896D              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  896D              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  896D              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  896D              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  896D              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  896D              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  896D              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  896D              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  896D              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  896D              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  896D              ;
 136  896D              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  896D              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  896D              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  896D
 140  896D 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  896E
 142  896E              ; Movimiento.
 143  896E
 144  896E 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  896F 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  8971 00 00        Puntero_mov defw 0
 147  8973 00           Contador_db_mov db 0
 148  8974 00           Incrementa_puntero db 0
 149  8975 00           Repetimos_db db 0
 150  8976
 151  8976              ; Variables de funcionamiento. [DRAW].
 152  8976
 153  8976 00           Columnas db 0
 154  8977 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  8979              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  8979 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  897A
 158  897A              ; variables de control general.
 159  897A
 160  897A 00           Ctrl_2 db 0
 161  897B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  897B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  897B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  897B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  897B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  897B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  897B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  897B
 169  897B 00           Frames_explosion db 0
 170  897C
 171  897C              ; 62 Bytes por entidad.
 172  897C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 173  897C              ;					         		---------;      ;---------
 174  897C
 175  897C
 176  897C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 177  897C
 178  897C 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 179  897D
 180  897D              ;														DESCRIPCIÓN:
 181  897D              ;
 182  897D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 183  897D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 184  897D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 185  897D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 186  897D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 187  897D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 188  897D              ;														BIT 3, .............
 189  897D              ;														BIT 4, .............
 190  897D
 191  897D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 192  897F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 193  897F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 194  897F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 195  897F
 196  897F
 197  897F
 198  897F              ; Gestión de ENTIDADES y CAJAS.
 199  897F
 200  897F              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 201  897F 00 00        Puntero_store_caja defw 0
 202  8981 00 00        Puntero_restore_caja defw 0
 203  8983 00 00        Indice_restore_caja defw 0
 204  8985 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 205  8986 00           Numero_parcial_de_entidades db 0
 206  8987 00           Entidades_en_curso db 0									; ..... ..... .....
 207  8988 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 208  8989              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 209  8989              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 210  8989              ;														; _ (Numero_de_malotes)="0".
 211  8989 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 212  898B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 213  898D              ;														; _ puntero (Indice_entidades).
 214  898D
 215  898D
 216  898D              ;---------------------------------------------------------------------------------------------------------------
 217  898D              ;
 218  898D              ; Sirven para PINTAR.
 219  898D
 220  898D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 221  898F              ;														; _variable para almacenar lo posición del puntero_
 222  898F              ; 														; _de pila, SP.
 223  898F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 224  8991              ;														; La utiliza la rutina [Extrae_foto_registros].
 225  8991 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 226  8993              ;														; _el snapshot de los registros de la siguiente entidad.
 227  8993              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 228  8993 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 229  8995              ;														; _el snapshot de los registros del siguiente disparo.
 230  8995              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 231  8995
 232  8995              ;---------------------------------------------------------------------------------------------------------------
 233  8995
 234  8995              ; Gestión de Disparos.
 235  8995
 236  8995 00           Numero_de_disparotes db 0
 237  8996 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 238  8998 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 239  899A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 240  899B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 241  899B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 242  899B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 243  899D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 244  899D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 245  899D              ;														; _produzca colisión.
 246  899D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 247  899F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 248  899F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 249  89A2              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 250  89A2 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89A5              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 252  89A5
 253  89A5              ;---------------------------------------------------------------------------------------------------------------
 254  89A5
 255  89A5              ; Relojes y temporizaciones.
 256  89A5
 257  89A5 00           Contador_de_frames db 0
 258  89A6 00           Secundero db 0
 259  89A7 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 260  89A8              ;														; Repite la oleada de entidades.
 261  89A8 01           Habilita_disparo_Amadeus db 1
 262  89A9 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 263  89AA 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 264  89AB
 265  89AB 01           Habilita_disparo_entidad db 1
 266  89AC 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 267  89AD 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 268  89AE
 269  89AE              ;---------------------------------------------------------------------------------------------------------------
 270  89AE
 271  89AE              ; Gestión de FRAMES.
 272  89AE
 273  89AE 00           Switch db 0
 274  89AF
 275  89AF              ; Variables de Raster y localización en pantalla.
 276  89AF
 277  89AF 00 FF        Temp_Raster defw $ff00
 278  89B1
 279  89B1              ;---------------------------------------------------------------------------------------------------------------
 280  89B1
 281  89B1              ; Gestión de NIVELES.
 282  89B1
 283  89B1 00           Nivel db 0												 ; Nivel actual del juego.
 284  89B2 00 00        Puntero_indice_NIVELES defw 0
 285  89B4 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 286  89B6              ; 														 ; _ que definen el NIVEL.
 287  89B6
 288  89B6
 289  89B6              ; Y todo comienza aquí .....
 290  89B6              ;
 291  89B6              ; Rutina principal *************************************************************************************************************************************************************************
 292  89B6              ;
 293  89B6              ;	14/11/22
 294  89B6
 295  89B6              START
 296  89B6
 297  89B6 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 298  89B9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 299  89BB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 300  89BD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 301  89BF F3           	DI
 302  89C0
 303  89C0 3E 07        	ld a,%00000111
 304  89C2 CD A1 97     	call Cls
 305  89C5
 306  89C5              ;	call Pinta_marco
 307  89C5
 308  89C5 CD 97 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 309  89C8 CD 79 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 310  89CB
 311  89CB CD A9 88     4 call Prepara_cajas
 312  89CE
 313  89CE CD 4C 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 314  89D1              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 315  89D1 CD 29 8D     	call Restore_entidad
 316  89D4
 317  89D4 21 86 89     	ld hl,Numero_parcial_de_entidades
 318  89D7 46           	ld b,(hl)
 319  89D8 04           	inc b
 320  89D9 05           	dec b
 321  89DA 28 1F        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 322  89DC
 323  89DC              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 324  89DC              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 325  89DC              ;	Pintamos el resto de entidades:
 326  89DC
 327  89DC              ;	INICIA ENTIDADES !!!!!
 328  89DC
 329  89DC C5           1 push bc  												; Guardo el contador de entidades.
 330  89DD CD A6 8C     	call Inicia_Puntero_objeto
 331  89E0
 332  89E0 3E 03        	ld a,3
 333  89E2 32 7B 89     	ld (Frames_explosion),a
 334  89E5
 335  89E5 CD B5 97     	call Recompone_posicion_inicio
 336  89E8 CD F1 91     	call Draw
 337  89EB CD A0 7F     	call Guarda_foto_registros
 338  89EE CD EE 8C      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 339  89F1 C1           	pop bc
 340  89F2 10 E8        	djnz 1B  											; Decremento el contador de entidades.
 341  89F4
 342  89F4              ;	call Pinta_marco
 343  89F4
 344  89F4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 345  89F4
 346  89F4 3A 7C 89     	ld a,(Ctrl_1)
 347  89F7 CB 5F        	bit 3,a
 348  89F9 20 18        	jr nz,5F											; Loop
 349  89FB
 350  89FB              ; 	INICIA AMADEUS !!!!!
 351  89FB
 352  89FB CD 50 8D     3 call Restore_Amadeus
 353  89FE CD A6 8C     	call Inicia_Puntero_objeto
 354  8A01 CD F1 91     	call Draw
 355  8A04 CD A0 7F     	call Guarda_foto_registros
 356  8A07 11 36 85     	ld de,Amadeus_db
 357  8A0A CD 62 8D     	call Store_Amadeus
 358  8A0D
 359  8A0D              ; 	INICIA DISPAROS !!!!!
 360  8A0D
 361  8A0D CD 62 8C     	call Inicia_Puntero_Disparo_Entidades
 362  8A10 CD 69 8C     	call Inicia_Puntero_Disparo_Amadeus
 363  8A13
 364  8A13              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 365  8A13
 366  8A13 CD 4C 8C     5 call Inicia_punteros_de_cajas
 367  8A16 CD 29 8D     	call Restore_entidad
 368  8A19
 369  8A19 3A 7C 89     	ld a,(Ctrl_1)
 370  8A1C CB 5F        	bit 3,a
 371  8A1E 28 0A        	jr z,6F
 372  8A20
 373  8A20              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 374  8A20
 375  8A20 21 7C 89     	ld hl,Ctrl_1
 376  8A23 CB 9E        	res 3,(hl)
 377  8A25 CD 70 8C     	call Calcula_numero_de_malotes
 378  8A28 18 07        	jr 7F
 379  8A2A
 380  8A2A              ; ----------
 381  8A2A
 382  8A2A 3A 86 89     6 ld a,(Numero_parcial_de_entidades)
 383  8A2D 3C           	inc a
 384  8A2E 32 88 89     	ld (Numero_de_malotes),a
 385  8A31
 386  8A31 AF           7 xor a
 387  8A32 FB           2 ei
 388  8A33 28 FD        	jr z,2B
 389  8A35
 390  8A35 3A A6 89     	ld a,(Secundero)
 391  8A38 47           	ld b,a
 392  8A39 3A A7 89     	ld a,(Activa_recarga_cajas)
 393  8A3C B8           	cp b
 394  8A3D 28 08        	jr z,8F
 395  8A3F
 396  8A3F 21 7C 89     	ld hl,Ctrl_1
 397  8A42 CB E6        	set 4,(hl)
 398  8A44 AF           	xor a
 399  8A45 18 EB        	jr 2B
 400  8A47
 401  8A47 21 7C 89     8 ld hl,Ctrl_1
 402  8A4A CB A6        	res 4,(hl)
 403  8A4C F3           	di
 404  8A4D
 405  8A4D C3 CB 89     	jp 4B
 406  8A50
 407  8A50              ; -----------------------------------------------------------------------------------
 408  8A50
 409  8A50              Frame
 410  8A50
 411  8A50              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 412  8A50              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 413  8A50
 414  8A50              ; PINTAMOS.
 415  8A50
 416  8A50 3E 02            ld a,2
 417  8A52 D3 FE            out ($fe),a
 418  8A54 CD F5 94     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 419  8A57 CD 2E 95     	call Extrae_foto_disparos
 420  8A5A 3E 01            ld a,1
 421  8A5C D3 FE            out ($fe),a
 422  8A5E
 423  8A5E              ; ----------------------------------------------------------------------
 424  8A5E
 425  8A5E              ; RELOJES.
 426  8A5E
 427  8A5E 21 A5 89     	ld hl,Contador_de_frames
 428  8A61 34           	inc (hl)											; 0 - 255
 429  8A62
 430  8A62 3E 3C        	ld a,60
 431  8A64 BE           	cp (hl)
 432  8A65 20 22        	jr nz,13F
 433  8A67
 434  8A67 36 00        	ld (hl),0
 435  8A69
 436  8A69 21 A6 89     	ld hl,Secundero
 437  8A6C 34           	inc (hl)
 438  8A6D
 439  8A6D 7E           	ld a,(hl)
 440  8A6E E6 01        	and %00000001
 441  8A70 20 10        	jr nz,20F
 442  8A72
 443  8A72 3A 86 89     	ld a,(Numero_parcial_de_entidades)
 444  8A75 47           	ld b,a
 445  8A76 3A 87 89     	ld a,(Entidades_en_curso)
 446  8A79 B8           	cp b
 447  8A7A 28 06        	jr z,20F
 448  8A7C 30 04        	jr nc,20F
 449  8A7E
 450  8A7E 3C           	inc a
 451  8A7F 32 87 89     	ld (Entidades_en_curso),a
 452  8A82
 453  8A82 3E 3C        20 ld a,60
 454  8A84 BE           	cp (hl)
 455  8A85 20 02        	jr nz,13F
 456  8A87
 457  8A87 36 00        	ld (hl),0
 458  8A89
 459  8A89 21 A8 89     13 ld hl,Habilita_disparo_Amadeus
 460  8A8C 11 AA 89     	ld de,Temporiza_disparo_Amadeus
 461  8A8F CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 462  8A92
 463  8A92 21 AB 89     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 464  8A95 11 AD 89     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 465  8A98 CD D5 7F     	call Habilita_disparos
 466  8A9B
 467  8A9B              ; COLISIONES.
 468  8A9B
 469  8A9B CD 8B 91     	call Selector_de_impactos
 470  8A9E
 471  8A9E              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 472  8A9E              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 473  8A9E              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 474  8A9E
 475  8A9E AF           	xor a
 476  8A9F 32 9A 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 477  8AA2
 478  8AA2 CD 4C 8C     	call Inicia_punteros_de_cajas
 479  8AA5 CD 29 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 480  8AA8              ; 														; _ en DRAW.
 481  8AA8 3A 3E 89     	ld a,(Filas)
 482  8AAB A7           	and a
 483  8AAC 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 484  8AAE CD 3B 8D     	call Incrementa_punteros_de_cajas
 485  8AB1 18 F2        	jr 12B
 486  8AB3
 487  8AB3              ; ---------------------------------------------------------------------------------------
 488  8AB3
 489  8AB3 CD 09 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 490  8AB6 21 00 70     	ld hl,Album_de_fotos
 491  8AB9 22 91 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 492  8ABC              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 493  8ABC 3A 86 89     	ld a,(Numero_parcial_de_entidades)
 494  8ABF 47               ld b,a
 495  8AC0 A7           	and a
 496  8AC1 20 16        	jr nz,2F
 497  8AC3
 498  8AC3 21 7C 89     	ld hl,Ctrl_1
 499  8AC6 CB 66        	bit 4,(hl)
 500  8AC8 C2 4C 8B     	jp nz,4F
 501  8ACB
 502  8ACB 21 7C 89     	ld hl,Ctrl_1
 503  8ACE CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 504  8AD0 3A A6 89     	ld a,(Secundero)
 505  8AD3 3C           	inc a
 506  8AD4 32 A7 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 507  8AD7
 508  8AD7 18 73        	jr 4F
 509  8AD9
 510  8AD9              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 511  8AD9
 512  8AD9              ; Código que ejecutamos con cada entidad:
 513  8AD9
 514  8AD9              ; Impacto ???
 515  8AD9
 516  8AD9 3A 87 89     2 ld a,(Entidades_en_curso)
 517  8ADC A7           	and a
 518  8ADD 28 6D        	jr z,4F
 519  8ADF 47           	ld b,a
 520  8AE0
 521  8AE0 C5           15 push bc 												; Nº de entidades en curso.
 522  8AE1
 523  8AE1 3A 57 89     	ld a,(Impacto)
 524  8AE4 A7           	and a
 525  8AE5 28 1F        	jr z,8F
 526  8AE7
 527  8AE7              ; Hay Impacto en esta entidad.
 528  8AE7
 529  8AE7 CD 03 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 530  8AEA
 531  8AEA              ;!!!!!! DEBUGGIN Desintegración/Explosión!!!!!!!!!!!
 532  8AEA
 533  8AEA 3A 7A 89     	ld a,(Ctrl_2)
 534  8AED CB 4F        	bit 1,a
 535  8AEF 20 3C        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 536  8AF1
 537  8AF1 3A 46 89     	ld a,(CTRL_DESPLZ)
 538  8AF4              ;	ld hl,(Puntero_objeto)
 539  8AF4
 540  8AF4 A7           	and a
 541  8AF5 20 02        	jr nz,21F
 542  8AF7
 543  8AF7 18 FE        	jr $
 544  8AF9
 545  8AF9              ;	ld hl,Explosion_2x2
 546  8AF9              ;	ld (Puntero_objeto),hl
 547  8AF9              ;	jr 29F
 548  8AF9
 549  8AF9 21 E6 83     21 ld hl,Indice_Explosion_3x3-2
 550  8AFC 22 4C 89     	ld (Puntero_DESPLZ_der),hl
 551  8AFF
 552  8AFF 21 7A 89     	ld hl,Ctrl_2
 553  8B02 CB CE        	set 1,(hl)
 554  8B04 18 27        	jr 7F
 555  8B06
 556  8B06              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 557  8B06              ; _con las coordenadas de la entidad almacenada en DRAW.
 558  8B06
 559  8B06 3A 7C 89     8 ld a,(Ctrl_1)
 560  8B09 CB 57        	bit 2,a
 561  8B0B 28 20        	jr z,7F
 562  8B0D
 563  8B0D 2A 9D 89     	ld hl,(Coordenadas_disparo_certero)
 564  8B10 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 565  8B11              ;														; E contiene la coordenada_X del disparo.
 566  8B11 2A 44 89     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 567  8B14              ;														; H Coordenado_y de la entidad.
 568  8B14 A7           	and a
 569  8B15 ED 52        	sbc hl,de
 570  8B17
 571  8B17 CD C2 91     	call Determina_resultado_comparativa
 572  8B1A 04           	inc b
 573  8B1B 05           	dec b
 574  8B1C
 575  8B1C              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 576  8B1C              ;	jr z,$
 577  8B1C              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 578  8B1C
 579  8B1C 28 0F        	jr z,7F
 580  8B1E
 581  8B1E              ; ----- ----- -----
 582  8B1E
 583  8B1E 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 584  8B20 32 57 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 585  8B23 21 7C 89     	ld hl,Ctrl_1
 586  8B26 CB 96        	res 2,(hl)
 587  8B28 21 9D 89     	ld hl,Coordenadas_disparo_certero
 588  8B2B 36 00        	ld (hl),0
 589  8B2D
 590  8B2D CD 7F 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 591  8B30
 592  8B30 3A 6C 89     	ld a,(Ctrl_0)
 593  8B33 CB 67        	bit 4,a
 594  8B35 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 595  8B37
 596  8B37              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 597  8B37              ; [[[
 598  8B37 CD C4 8D     	call Detecta_disparo_entidad
 599  8B3A              ; ]]]
 600  8B3A CD 13 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 601  8B3D
 602  8B3D 21 6C 89     	ld hl,Ctrl_0
 603  8B40 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 604  8B42 AF           	xor a
 605  8B43 32 6D 89     	ld (Obj_dibujado),a
 606  8B46
 607  8B46 CD EE 8C     6 call Store_Restore_cajas
 608  8B49
 609  8B49 C1           	pop bc
 610  8B4A 10 94        	djnz 15B
 611  8B4C
 612  8B4C              ; Tras la gestión de las entidades, ... AMADEUS.
 613  8B4C
 614  8B4C CD 50 8D     4 call Restore_Amadeus
 615  8B4F
 616  8B4F 3A 57 89     	ld a,(Impacto)
 617  8B52 A7           	and a
 618  8B53 20 FE        	jr nz,$
 619  8B55
 620  8B55              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 621  8B55
 622  8B55 CD E4 8B     	call Mov_Amadeus
 623  8B58
 624  8B58 3A 6C 89     	ld a,(Ctrl_0)
 625  8B5B CB 67        	bit 4,a
 626  8B5D 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 627  8B5F
 628  8B5F CD 13 8C     	call Guarda_foto_entidad_a_pintar
 629  8B62
 630  8B62 21 6C 89     3 ld hl,Ctrl_0
 631  8B65 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 632  8B67 AF           	xor a
 633  8B68 32 6D 89     	ld (Obj_dibujado),a
 634  8B6B
 635  8B6B 11 36 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 636  8B6E CD 62 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 637  8B71
 638  8B71 CD 27 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 639  8B74
 640  8B74              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 641  8B74
 642  8B74 CD 88 8C     	call Calcula_numero_de_disparotes
 643  8B77 CD 70 8C     9 call Calcula_numero_de_malotes
 644  8B7A
 645  8B7A 3E 04        	ld a,4
 646  8B7C D3 FE        	out ($fe),a
 647  8B7E
 648  8B7E C9           	ret
 649  8B7F
 650  8B7F              ; --------------------------------------------------------------------------------------------------------------
 651  8B7F              ;
 652  8B7F              ;	27/05/23
 653  8B7F
 654  8B7F              Mov_obj
 655  8B7F
 656  8B7F              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 657  8B7F
 658  8B7F 3A 7A 89     	ld a,(Ctrl_2)
 659  8B82 CB 4F        	bit 1,a
 660  8B84 28 2E        	jr z,2F
 661  8B86
 662  8B86              ; Explosión:
 663  8B86
 664  8B86 3A 7B 89     	ld a,(Frames_explosion)
 665  8B89 A7           	and a
 666  8B8A 20 11        	jr nz,4F
 667  8B8C
 668  8B8C              ; Una alimaña menos!!!!!!!!!1
 669  8B8C
 670  8B8C
 671  8B8C CD 6B 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 672  8B8F
 673  8B8F              ; -----
 674  8B8F
 675  8B8F 21 86 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 676  8B92 35           	dec (hl)
 677  8B93 21 87 89     	ld hl,Entidades_en_curso
 678  8B96 35           	dec (hl)
 679  8B97 21 85 89     	ld hl,Numero_de_entidades
 680  8B9A 35           	dec (hl)
 681  8B9B
 682  8B9B 18 46        	jr 3F
 683  8B9D
 684  8B9D              ; -----
 685  8B9D
 686  8B9D
 687  8B9D
 688  8B9D
 689  8B9D
 690  8B9D
 691  8B9D
 692  8B9D
 693  8B9D 2A 4C 89     4 ld hl,(Puntero_DESPLZ_der)
 694  8BA0 23           	inc hl
 695  8BA1 23           	inc hl
 696  8BA2 22 4C 89     	ld (Puntero_DESPLZ_der),hl
 697  8BA5 CD A0 8C     	call Extrae_address
 698  8BA8 22 42 89     	ld (Puntero_objeto),hl
 699  8BAB
 700  8BAB 21 7B 89     	ld hl,Frames_explosion
 701  8BAE 35           	dec (hl)
 702  8BAF
 703  8BAF CD 03 8C     	call Guarda_foto_entidad_a_borrar
 704  8BB2 18 2F        	jr 3F
 705  8BB4
 706  8BB4 AF           2 xor a
 707  8BB5 32 6D 89     	ld (Obj_dibujado),a
 708  8BB8 32 6C 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 709  8BBB              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 710  8BBB              ; 														; _de la entidad.
 711  8BBB CD 1D 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 712  8BBE              ;														; Obj_dibujado="0".
 713  8BBE              ; Movemos Entidades malignas.
 714  8BBE
 715  8BBE 21 6F 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 716  8BC1 34           	inc (hl)
 717  8BC2 35           	dec (hl)                                            ; Salimos de la rutina.
 718  8BC3 C8           	ret z
 719  8BC4
 720  8BC4 CD CF 9B     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 721  8BC7
 722  8BC7 3A 6C 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 723  8BCA CB 67        	bit 4,a
 724  8BCC C8           	ret z
 725  8BCD
 726  8BCD              ; Ha habido desplazamiento de la entidad maligna.
 727  8BCD              ; Ha llegado a zona de AMADEUS ???
 728  8BCD
 729  8BCD 3A 45 89     	ld a,(Coordenada_y)
 730  8BD0 FE 14        	cp $14
 731  8BD2 D4 58 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 732  8BD5              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 733  8BD5              ; ---------
 734  8BD5
 735  8BD5 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 736  8BD7 32 6D 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 737  8BDA CD 1D 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 738  8BDD CD 34 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 739  8BE0 CD 03 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 740  8BE3 C9           3 ret													; _de la misma.
 741  8BE4
 742  8BE4              ; --------------------------------------------------------------------------------------------------------------
 743  8BE4              ;
 744  8BE4              ;	29/1/23
 745  8BE4
 746  8BE4              Mov_Amadeus
 747  8BE4
 748  8BE4 AF           	xor a
 749  8BE5 32 6D 89     	ld (Obj_dibujado),a
 750  8BE8 CD 1D 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 751  8BEB              ;														; Obj_dibujado="0".
 752  8BEB              ; Movemos Amadeus.
 753  8BEB
 754  8BEB CD 8D 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 755  8BEE 3A 6C 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 756  8BF1 CB 67        	bit 4,a
 757  8BF3 C8           	ret z
 758  8BF4
 759  8BF4              ; ---------
 760  8BF4
 761  8BF4 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 762  8BF6 32 6D 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 763  8BF9 CD 1D 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 764  8BFC CD 34 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 765  8BFF CD 03 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 766  8C02 C9           	ret													; _de la nave.
 767  8C03
 768  8C03              ; --------------------------------------------------------------------------------------------------------------
 769  8C03              ;
 770  8C03              ;	31/01/23
 771  8C03              ;
 772  8C03              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 773  8C03
 774  8C03              Guarda_foto_entidad_a_borrar
 775  8C03
 776  8C03 CD CB 94     	call Prepara_draw
 777  8C06 CD 05 94     	call calcula_CColumnass
 778  8C09 CD 3C 94     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 779  8C0C CD 91 94     	call Define_rutina_de_impresion
 780  8C0F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 781  8C12 C9           	ret
 782  8C13
 783  8C13              ; --------------------------------------------------------------------------------------------------------------
 784  8C13              ;
 785  8C13              ;	31/01/23
 786  8C13              ;
 787  8C13              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 788  8C13              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 789  8C13
 790  8C13              Guarda_foto_entidad_a_pintar
 791  8C13
 792  8C13 CD 40 8C     	call Repone_pintar
 793  8C16 CD F1 91     	call Draw
 794  8C19 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 795  8C1C C9           	ret
 796  8C1D
 797  8C1D              ; --------------------------------------------------------------------------------------------------------------
 798  8C1D              ;
 799  8C1D              ;
 800  8C1D
 801  8C1D 21 3E 89     Prepara_var_pintado_borrado	ld hl,Filas
 802  8C20 3A 6D 89     	ld a,(Obj_dibujado)
 803  8C23 A7           	and a
 804  8C24 28 05        	jr z,1F
 805  8C26 11 62 89     	ld de,Variables_de_pintado
 806  8C29 18 03        	jr 2F
 807  8C2B 11 58 89     1 ld de,Variables_de_borrado
 808  8C2E 01 08 00     2 ld bc,8
 809  8C31 ED B0        	ldir
 810  8C33 C9           	ret
 811  8C34
 812  8C34              ; --------------------------------------------------------------------------------------------------------------
 813  8C34
 814  8C34 21 58 89     Repone_borrar ld hl,Variables_de_borrado
 815  8C37 11 3E 89     	ld de,Filas
 816  8C3A 01 08 00     	ld bc,8
 817  8C3D ED B0        	ldir
 818  8C3F C9           	ret
 819  8C40
 820  8C40 21 62 89     Repone_pintar ld hl,Variables_de_pintado
 821  8C43 11 3E 89     	ld de,Filas
 822  8C46 01 08 00     	ld bc,8
 823  8C49 ED B0        	ldir
 824  8C4B C9           	ret
 825  8C4C
 826  8C4C              ; *************************************************************************************************************************************************************
 827  8C4C              ;
 828  8C4C              ; 8/1/23
 829  8C4C              ;
 830  8C4C              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 831  8C4C              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 832  8C4C              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 833  8C4C
 834  8C4C              ; Destruye HL y DE !!!!!
 835  8C4C
 836  8C4C              Inicia_punteros_de_cajas
 837  8C4C
 838  8C4C 21 1E 85     	ld hl,Indice_de_cajas
 839  8C4F CD A0 8C         call Extrae_address
 840  8C52 22 7F 89         ld (Puntero_store_caja),hl
 841  8C55 21 20 85     	ld hl,Indice_de_cajas+2
 842  8C58 22 83 89     	ld (Indice_restore_caja),hl
 843  8C5B CD A0 8C     	call Extrae_address
 844  8C5E 22 81 89     	ld (Puntero_restore_caja),hl
 845  8C61 C9               ret
 846  8C62
 847  8C62              ; *************************************************************************************************************************************************************
 848  8C62              ;
 849  8C62              ; 8/1/23
 850  8C62              ;
 851  8C62              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 852  8C62
 853  8C62 21 B6 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 854  8C65 22 96 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 855  8C68 C9           	ret
 856  8C69 21 9E 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 857  8C6C 22 98 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 858  8C6F C9           	ret
 859  8C70
 860  8C70              ; -------------------------------------------------------------------------------------------------------------
 861  8C70              ;
 862  8C70              ; 28/2/23
 863  8C70              ;
 864  8C70
 865  8C70              Calcula_numero_de_malotes
 866  8C70
 867  8C70 21 00 70     	ld hl,Album_de_fotos
 868  8C73 EB           	ex de,hl
 869  8C74 2A 91 89     	ld hl,(Stack_snapshot)
 870  8C77
 871  8C77 06 00        	ld b,0
 872  8C79 7D           	ld a,l
 873  8C7A 93           	sub e
 874  8C7B 28 07        	jr z,1F
 875  8C7D
 876  8C7D              ; Nº de malotes no es "0".
 877  8C7D
 878  8C7D D6 06        2 sub 6
 879  8C7F 04           	inc b
 880  8C80 A7           	and a
 881  8C81 20 FA        	jr nz,2B
 882  8C83 78           	ld a,b
 883  8C84
 884  8C84 32 88 89     1 ld (Numero_de_malotes),a
 885  8C87 C9           	ret
 886  8C88
 887  8C88              ; -------------------------------------------------------------------------------------------------------------
 888  8C88              ;
 889  8C88              ; 28/2/23
 890  8C88              ;
 891  8C88
 892  8C88              Calcula_numero_de_disparotes
 893  8C88
 894  8C88 21 85 70     	ld hl,Album_de_fotos_disparos
 895  8C8B EB           	ex de,hl
 896  8C8C 2A 93 89     	ld hl,(Stack_snapshot_disparos)
 897  8C8F
 898  8C8F 06 00        	ld b,0
 899  8C91 7D           	ld a,l
 900  8C92 93           	sub e
 901  8C93 28 07        	jr z,1F
 902  8C95
 903  8C95              ; Nº de malotes no es "0".
 904  8C95
 905  8C95 D6 06        2 sub 6
 906  8C97 04           	inc b
 907  8C98 A7           	and a
 908  8C99 20 FA        	jr nz,2B
 909  8C9B 78           	ld a,b
 910  8C9C
 911  8C9C 32 95 89     1 ld (Numero_de_disparotes),a
 912  8C9F C9           	ret
 913  8CA0              ; *************************************************************************************************************************************************************
 914  8CA0              ;
 915  8CA0              ; 20/10/22
 916  8CA0              ;
 917  8CA0              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 918  8CA0              ;
 919  8CA0              ; Destruye el puntero y DE !!!!!
 920  8CA0
 921  8CA0 5E           Extrae_address ld e,(hl)
 922  8CA1 23           	inc hl
 923  8CA2 56           	ld d,(hl)
 924  8CA3 2B           	dec hl
 925  8CA4 EB           	ex de,hl
 926  8CA5 C9           	ret
 927  8CA6
 928  8CA6              ; *************************************************************************************************************************************************************
 929  8CA6              ;
 930  8CA6              ;	7/2/23
 931  8CA6              ;
 932  8CA6              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 933  8CA6              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 934  8CA6              ;
 935  8CA6              ;   Destruye HL y BC !!!!!,
 936  8CA6              ;
 937  8CA6              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 938  8CA6              ;					"0" ..... Izquierda.
 939  8CA6
 940  8CA6              Inicia_Puntero_objeto
 941  8CA6
 942  8CA6 3A 52 89     	ld a,(Cuad_objeto)
 943  8CA9 E6 01        	and 1
 944  8CAB F5           	push af
 945  8CAC CC CA 8C     	call z,Inicia_puntero_objeto_izq
 946  8CAF F1           	pop af
 947  8CB0 28 2B        	jr z,1F
 948  8CB2 CD B7 8C     	call Inicia_puntero_objeto_der
 949  8CB5 18 26        	jr 1F
 950  8CB7
 951  8CB7              ; Arrancamos desde la parte izquierda de la pantalla.
 952  8CB7              ; Iniciamos (Indice_Sprite_der).
 953  8CB7
 954  8CB7 2A 48 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 955  8CBA 22 4C 89     	ld (Puntero_DESPLZ_der),hl
 956  8CBD CD A0 8C     	call Extrae_address
 957  8CC0 22 42 89     	ld (Puntero_objeto),hl
 958  8CC3
 959  8CC3 2A 4A 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 960  8CC6 22 4E 89     	ld (Puntero_DESPLZ_izq),hl
 961  8CC9 C9           	ret
 962  8CCA
 963  8CCA              ; Arrancamos desde la parte derecha de la pantalla.
 964  8CCA              ; Iniciamos (Indice_Sprite_izq).
 965  8CCA
 966  8CCA 2A 4A 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 967  8CCD 22 4E 89     	ld (Puntero_DESPLZ_izq),hl
 968  8CD0 CD A0 8C     	call Extrae_address
 969  8CD3 22 42 89     	ld (Puntero_objeto),hl
 970  8CD6
 971  8CD6 2A 48 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 972  8CD9 22 4C 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 973  8CDC C9           	ret
 974  8CDD
 975  8CDD              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 976  8CDD
 977  8CDD 21 38 83     1 ld hl,Amadeus
 978  8CE0 ED 4B 42 89  	ld bc,(Puntero_objeto)
 979  8CE4 B7 ED 42     	sub hl,bc
 980  8CE7 C0           	ret nz
 981  8CE8 21 6C 89     	ld hl,Ctrl_0
 982  8CEB CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 983  8CED C9           	ret 												; _de nuestra nave en los extremos.
 984  8CEE
 985  8CEE              ; *************************************************************************************************************************************************************
 986  8CEE              ;
 987  8CEE              ;	14/5/23
 988  8CEE              ;
 989  8CEE              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 990  8CEE              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 991  8CEE
 992  8CEE              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 993  8CEE              ;	_de la 2ª y 3ª entidad respectivamente.
 994  8CEE
 995  8CEE              Store_Restore_cajas
 996  8CEE
 997  8CEE E5           	push hl
 998  8CEF D5           	push de
 999  8CF0 C5            	push bc
1000  8CF1
1001  8CF1              ;	STORE !!!!!
1002  8CF1              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1003  8CF1
1004  8CF1 21 3E 89     	ld hl,Filas
1005  8CF4 ED 5B 7F 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1006  8CF8 01 3E 00     	ld bc,62
1007  8CFB ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1008  8CFD
1009  8CFD              ; 	Entidad_sospechosa. 20/4/23
1010  8CFD
1011  8CFD 3A 57 89     	ld a,(Impacto)
1012  8D00 A7           	and a
1013  8D01 28 0C        	jr z,1F
1014  8D03
1015  8D03 2A 7F 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1016  8D06 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1017  8D09 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1018  8D0A ED 4A        	adc hl,bc 											; _ "0" más adelante.
1019  8D0C 22 9B 89     	ld (Entidad_sospechosa_de_colision),hl
1020  8D0F
1021  8D0F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1022  8D0F
1023  8D0F 2A 81 89     1 ld hl,(Puntero_restore_caja)
1024  8D12 7E           	ld a,(hl)
1025  8D13 A7           	and a
1026  8D14 F5           	push af
1027  8D15 28 08        	jr z,2F
1028  8D17
1029  8D17 11 3E 89     	ld de,Filas
1030  8D1A 01 3E 00     	ld bc,62
1031  8D1D ED B0        	ldir
1032  8D1F
1033  8D1F CD 3B 8D     2 call Incrementa_punteros_de_cajas
1034  8D22 F1           	pop af
1035  8D23 28 EA        	jr z,1B
1036  8D25
1037  8D25 C1           	pop bc
1038  8D26 D1           	pop de
1039  8D27 E1           	pop hl
1040  8D28
1041  8D28 C9           	ret
1042  8D29
1043  8D29              ; **************************************************************************************************
1044  8D29              ;
1045  8D29              ;	12/05/23
1046  8D29              ;
1047  8D29              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1048  8D29
1049  8D29 E5           Restore_entidad push hl
1050  8D2A D5           	push de
1051  8D2B C5            	push bc
1052  8D2C
1053  8D2C 2A 7F 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1054  8D2F 11 3E 89     	ld de,Filas
1055  8D32 01 3E 00     	ld bc,62
1056  8D35 ED B0        	ldir
1057  8D37
1058  8D37 C1           	pop bc
1059  8D38 D1           	pop de
1060  8D39 E1           	pop hl
1061  8D3A C9           	ret
1062  8D3B
1063  8D3B
1064  8D3B              ; **************************************************************************************************
1065  8D3B              ;
1066  8D3B              ;	08/05/23
1067  8D3B              ;
1068  8D3B              ;	Incrementamos los dos punteros de entidades. (+1).
1069  8D3B
1070  8D3B 2A 81 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1071  8D3E 22 7F 89     	ld (Puntero_store_caja),hl
1072  8D41 2A 83 89     	ld hl,(Indice_restore_caja)
1073  8D44 23           	inc hl
1074  8D45 23           	inc hl
1075  8D46 22 83 89     	ld (Indice_restore_caja),hl
1076  8D49 CD A0 8C         call Extrae_address
1077  8D4C 22 81 89         ld (Puntero_restore_caja),hl
1078  8D4F C9               ret
1079  8D50
1080  8D50              ; **************************************************************************************************
1081  8D50              ;
1082  8D50              ;	25/01/23
1083  8D50              ;
1084  8D50              ;	Restore_Amadeus
1085  8D50              ;
1086  8D50              ;	Cargamos en DRAW los parámetros de Amadeus.
1087  8D50              ;
1088  8D50
1089  8D50 E5           Restore_Amadeus	push hl
1090  8D51 D5           	push de
1091  8D52 C5            	push bc
1092  8D53 21 36 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1093  8D56 11 3E 89     	ld de,Filas
1094  8D59 01 3E 00     	ld bc,62
1095  8D5C ED B0        	ldir
1096  8D5E C1           	pop bc
1097  8D5F D1           	pop de
1098  8D60 E1           	pop hl
1099  8D61 C9           	ret
1100  8D62
1101  8D62              ; *************************************************************************************************************************************************************
1102  8D62              ;
1103  8D62              ;	29/04/23
1104  8D62              ;
1105  8D62              ;	Store_Amadeus
1106  8D62              ;
1107  8D62              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1108  8D62              ;
1109  8D62              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1110  8D62              ;
1111  8D62              ;	DESTRUYE: HL y BC y DE.
1112  8D62
1113  8D62 21 3E 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1114  8D65 01 3E 00     	ld bc,62
1115  8D68 ED B0        	ldir
1116  8D6A C9           	ret
1117  8D6B
1118  8D6B              ; -----------------------------------------------------------
1119  8D6B              ;
1120  8D6B              ;	27/04/23
1121  8D6B              ;
1122  8D6B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1123  8D6B              ;
1124  8D6B              ;	Destruye: HL,BC,DE,A
1125  8D6B
1126  8D6B 21 3E 89     Borra_datos_entidad ld hl,Filas
1127  8D6E 01 3D 00     	ld bc,61
1128  8D71 AF           	xor a
1129  8D72 77           	ld (hl),a
1130  8D73 11 3F 89     	ld de,Filas+1
1131  8D76 ED B0        	ldir
1132  8D78 C9           	ret
1133  8D79
1134  8D79              ; -----------------------------------------------------------
1135  8D79
1136  8D79              ; Teclado.
1137  8D79
1138  8D79 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1139  8D7B DB FE        	in a,($fe)
1140  8D7D E6 01        	and $01
1141  8D7F 28 02        	jr z,1f
1142  8D81 18 F6        	jr Pulsa_ENTER
1143  8D83 C9           1 ret
1144  8D84
1145  8D84              ; **************************************************************************************************
1146  8D84              ;
1147  8D84              ; Temporización.
1148  8D84
1149  8D84              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1150  8D84              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1151  8D84              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1152  8D84              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1153  8D84
1154  8D84              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1155  8D84              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1156  8D84              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1157  8D84
1158  8D84              ; A partir de $4f61 no hace falta DELAY.
1159  8D84
1160  8D84              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1161  8D84
1162  8D84 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1163  8D87 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1164  8D88 78           	LD A,B
1165  8D89 A7           	AND A
1166  8D8A 20 FB        	JR NZ,wait
1167  8D8C C9           	RET
1168  8D8D
1169  8D8D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1170  8D8D              ;
1171  8D8D              ;	5/3/23
1172  8D8D              ;
1173  8D8D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1174  8D8D
1175  8D8D              Movimiento_Amadeus
1176  8D8D
1177  8D8D              ; Disparo.
1178  8D8D
1179  8D8D 3A A8 89     	ld a,(Habilita_disparo_Amadeus)
1180  8D90 A7           	and a
1181  8D91 20 02        	jr nz,1F
1182  8D93 18 15        	jr 2F
1183  8D95
1184  8D95 3E F7        1 ld a,$f7													; "5" para disparar.
1185  8D97 DB FE        	in a,($fe)
1186  8D99 E6 10        	and $10
1187  8D9B
1188  8D9B F5           	push af
1189  8D9C CC D4 8D     	call z,Genera_disparo
1190  8D9F F1           	pop af
1191  8DA0 20 08        	jr nz,2F
1192  8DA2
1193  8DA2 3A A8 89     	ld a,(Habilita_disparo_Amadeus)
1194  8DA5 EE 01        	xor 1
1195  8DA7 32 A8 89     	ld (Habilita_disparo_Amadeus),a
1196  8DAA
1197  8DAA 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1198  8DAC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1199  8DAE E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1200  8DB0 CC 6F 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1201  8DB3 3E F7        	ld a,$f7
1202  8DB5 DB FE        	in a,($fe)
1203  8DB7 E6 01        	and $01
1204  8DB9 C8           	ret z
1205  8DBA
1206  8DBA 3E F7        	ld a,$f7
1207  8DBC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1208  8DBE E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1209  8DC0 CC 51 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1210  8DC3 C9           	ret
1211  8DC4
1212  8DC4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1213  8DC4              ;
1214  8DC4              ;	Rutina provisional para que los malotes cagen balas.
1215  8DC4
1216  8DC4              Detecta_disparo_entidad
1217  8DC4
1218  8DC4 3A AB 89     	ld a,(Habilita_disparo_entidad)
1219  8DC7 A7           	and a
1220  8DC8 C8           	ret z
1221  8DC9 3E 7F        	ld a,$7f
1222  8DCB DB FE        	in a,($fe)
1223  8DCD E6 01        	and 1
1224  8DCF C0           	ret nz
1225  8DD0 CD D4 8D     	call Genera_disparo
1226  8DD3 C9           	ret
1227  8DD4
1228  8DD4              ; ---------------------------------------------------------------
1229  8DD4
1230  8DD4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DD4              ; ******************************************************************************************************************************************************************************************
   2+ 8DD4              ;
   3+ 8DD4              ;   17/04/23
   4+ 8DD4              ;
   5+ 8DD4              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DD4              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DD4              ;
   8+ 8DD4              ;
   9+ 8DD4              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DD4              ;
  11+ 8DD4              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DD4              ;               _ hacen las entidades hacia abajo.
  13+ 8DD4              ;
  14+ 8DD4              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DD4              ;
  16+ 8DD4              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DD4              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DD4              ;
  19+ 8DD4              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DD4              ;           _ la bala.
  21+ 8DD4              ;
  22+ 8DD4              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DD4              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DD4              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DD4              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DD4              ;           _ en el momento de generarse la bala)).
  27+ 8DD4
  28+ 8DD4              Genera_disparo
  29+ 8DD4
  30+ 8DD4              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DD4              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DD4              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DD4              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DD4              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DD4              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DD4              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DD4
  38+ 8DD4              ; Exclusiones:
  39+ 8DD4
  40+ 8DD4 3A 76 89         ld a,(Columnas)
  41+ 8DD7 47               ld b,a
  42+ 8DD8 3A 3F 89         ld a,(Columns)
  43+ 8DDB B8               cp b
  44+ 8DDC C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8DDD
  46+ 8DDD              ; ----- ----- -----
  47+ 8DDD
  48+ 8DDD 3A 6C 89         ld a,(Ctrl_0)
  49+ 8DE0 CB 77            bit 6,a
  50+ 8DE2 20 06            jr nz,14F
  51+ 8DE4
  52+ 8DE4 3A 45 89         ld a,(Coordenada_y)
  53+ 8DE7 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8DE9 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8DEA
  56+ 8DEA 21 00 80     14 ld hl,Indice_disparo
  57+ 8DED 3A 46 89         ld a,(CTRL_DESPLZ)
  58+ 8DF0 4F               ld c,a
  59+ 8DF1 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8DF3              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8DF3              ;                                            ""        ""       "f9", B="1"
  62+ 8DF3              ;                                            ""        ""       "fb", B="2"
  63+ 8DF3              ;                                            ""        ""       "fb", B="3"
  64+ 8DF3 A7               and a
  65+ 8DF4 28 10            jr z,1F
  66+ 8DF6 E6 01            and 1
  67+ 8DF8 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8DF9
  69+ 8DF9 79               ld a,c
  70+ 8DFA 16 F9            ld d,$f9
  71+ 8DFC 23           2 inc hl
  72+ 8DFD 23               inc hl
  73+ 8DFE 04               inc b
  74+ 8DFF BA               cp d
  75+ 8E00 28 04            jr z,1F
  76+ 8E02 14               inc d
  77+ 8E03 14               inc d
  78+ 8E04 18 F6            jr 2B
  79+ 8E06
  80+ 8E06 CD A0 8C     1 call Extrae_address
  81+ 8E09 E5               push hl
  82+ 8E0A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E0C DD 21 6A 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E10
  85+ 8E10              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E10              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E10
  88+ 8E10 3A 6C 89         ld a,(Ctrl_0)
  89+ 8E13 CB 77            bit 6,a
  90+ 8E15 20 04            jr nz,19F
  91+ 8E17
  92+ 8E17 AF               xor a
  93+ 8E18 32 AB 89         ld (Habilita_disparo_entidad),a
  94+ 8E1B
  95+ 8E1B 3A 52 89     19 ld a,(Cuad_objeto)
  96+ 8E1E FE 02            cp 2
  97+ 8E20 38 66            jr c,3F
  98+ 8E22 28 64            jr z,3F
  99+ 8E24
 100+ 8E24              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E24
 102+ 8E24 E6 01            and 1
 103+ 8E26 28 30            jr z,4F
 104+ 8E28
 105+ 8E28              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E28              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E28              ;
 108+ 8E28              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E28              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E28              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E28
 112+ 8E28 2A 40 89     	ld hl,(Posicion_actual)
 113+ 8E2B
 114+ 8E2B              ;   Amadeus o entidad ???.
 115+ 8E2B
 116+ 8E2B 3A 6C 89         ld a,(Ctrl_0)
 117+ 8E2E CB 77            bit 6,a
 118+ 8E30 28 0A            jr z,8F
 119+ 8E32
 120+ 8E32              ; 	Dispara Amadeus.
 121+ 8E32
 122+ 8E32 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E34 CD E6 94         call PreviousScan
 124+ 8E37 CD E6 94         call PreviousScan
 125+ 8E3A
 126+ 8E3A              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E3A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E3A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E3A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E3A
 131+ 8E3A 18 11            jr 10F
 132+ 8E3C
 133+ 8E3C              ; 	Dispara Entidad.
 134+ 8E3C
 135+ 8E3C 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E3F              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E3F
 138+ 8E3F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E3F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E3F
 141+ 8E3F C5               push bc
 142+ 8E40 06 10            ld b,16
 143+ 8E42 CD D7 94     9 call NextScan
 144+ 8E45 10 FB            djnz 9B
 145+ 8E47 C1               pop bc
 146+ 8E48 CD B2 8E         call Ajusta_disparo_parte_izquierda
 147+ 8E4B 18 06            jr 17F
 148+ 8E4D
 149+ 8E4D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8E4D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8E4D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8E4D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8E4D
 154+ 8E4D CD B2 8E     10 call Ajusta_disparo_parte_izquierda
 155+ 8E50 CD 27 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8E53              ;                                                      ; _al generar el disparo.
 157+ 8E53
 158+ 8E53              ; 	LLegados a este punto tendremos:
 159+ 8E53              ;
 160+ 8E53              ;       Puntero_objeto_disparo en IY.
 161+ 8E53              ;       Rutinas_de_impresion en IX.
 162+ 8E53              ;       Puntero_de_impresion en HL.
 163+ 8E53              ;       Impacto/Dirección en BC.
 164+ 8E53
 165+ 8E53 CD BA 8E     17 call Almacena_disparo
 166+ 8E56 18 52            jr 6F                                             ; RET.
 167+ 8E58
 168+ 8E58              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8E58              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8E58              ;
 171+ 8E58              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8E58              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8E58              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8E58
 175+ 8E58 2A 40 89     4 ld hl,(Posicion_actual)
 176+ 8E5B
 177+ 8E5B              ;   Amadeus o entidad ???.
 178+ 8E5B
 179+ 8E5B 3A 6C 89         ld a,(Ctrl_0)
 180+ 8E5E CB 77            bit 6,a
 181+ 8E60 28 0A            jr z,11F
 182+ 8E62
 183+ 8E62              ; 	Dispara Amadeus.
 184+ 8E62
 185+ 8E62 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8E64 CD E6 94         call PreviousScan
 187+ 8E67 CD E6 94         call PreviousScan
 188+ 8E6A
 189+ 8E6A              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8E6A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8E6A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8E6A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8E6A
 194+ 8E6A 18 11            jr 13F
 195+ 8E6C
 196+ 8E6C              ; 	Dispara Entidad.
 197+ 8E6C
 198+ 8E6C 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8E6F              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8E6F
 201+ 8E6F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8E6F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8E6F
 204+ 8E6F C5               push bc
 205+ 8E70 06 10            ld b,16
 206+ 8E72 CD D7 94     12 call NextScan
 207+ 8E75 10 FB            djnz 12B
 208+ 8E77 C1               pop bc
 209+ 8E78
 210+ 8E78 CD AB 8E         call Ajusta_disparo_parte_derecha
 211+ 8E7B 18 06            jr 18F
 212+ 8E7D
 213+ 8E7D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8E7D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8E7D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8E7D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8E7D
 218+ 8E7D CD AB 8E     13 call Ajusta_disparo_parte_derecha
 219+ 8E80 CD 27 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8E83              ;                                                       ; _al generar el disparo.
 221+ 8E83
 222+ 8E83              ; LLegados a este punto tendremos:
 223+ 8E83              ;
 224+ 8E83              ;       Puntero_objeto_disparo en IY.
 225+ 8E83              ;       Rutinas_de_impresion en IX.
 226+ 8E83              ;       Puntero_de_impresion en HL.
 227+ 8E83              ;       Impacto/Dirección en BC.
 228+ 8E83
 229+ 8E83 CD BA 8E     18 call Almacena_disparo
 230+ 8E86 18 22            jr 6F                                               ; RET.
 231+ 8E88
 232+ 8E88              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8E88
 234+ 8E88 28 11        3 jr z,5F
 235+ 8E8A
 236+ 8E8A              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8E8A              ;
 238+ 8E8A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8E8A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8E8A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8E8A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8E8A
 243+ 8E8A              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8E8A              ;	   ""        ""       "f9", B="1"
 245+ 8E8A              ;	   ""        ""       "fb", B="2"
 246+ 8E8A              ; 	   ""        ""       "fb", B="3"
 247+ 8E8A
 248+ 8E8A 2A 40 89     	ld hl,(Posicion_actual)
 249+ 8E8D CD D7 94     	call NextScan
 250+ 8E90
 251+ 8E90              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8E90              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8E90              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8E90              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8E90
 256+ 8E90 CD B2 8E         call Ajusta_disparo_parte_izquierda
 257+ 8E93
 258+ 8E93              ; 	No se produce impacto. B="$80"
 259+ 8E93              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8E93
 261+ 8E93 01 80 80         ld bc,$8080
 262+ 8E96
 263+ 8E96              ; 	LLegados a este punto tendremos:
 264+ 8E96              ;
 265+ 8E96              ;       Puntero_objeto_disparo en IY.
 266+ 8E96              ;       Rutinas_de_impresion en IX.
 267+ 8E96              ;       Puntero_de_impresion en HL.
 268+ 8E96              ;       Impacto/Dirección en BC.
 269+ 8E96
 270+ 8E96 CD BA 8E         call Almacena_disparo
 271+ 8E99 18 0F            jr 6F                                           ; RET.
 272+ 8E9B
 273+ 8E9B              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8E9B              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8E9B              ;
 276+ 8E9B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8E9B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8E9B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8E9B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8E9B
 281+ 8E9B 2A 40 89     5 ld hl,(Posicion_actual)
 282+ 8E9E CD D7 94     	call NextScan
 283+ 8EA1
 284+ 8EA1              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EA1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EA1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EA1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EA1
 289+ 8EA1 CD AB 8E         call Ajusta_disparo_parte_derecha
 290+ 8EA4
 291+ 8EA4              ; 	No se produce impacto. B="$80"
 292+ 8EA4              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EA4
 294+ 8EA4 01 80 80     15 ld bc,$8080
 295+ 8EA7
 296+ 8EA7              ; 	LLegados a este punto tendremos:
 297+ 8EA7              ;
 298+ 8EA7              ;       Puntero_objeto_disparo en IY.
 299+ 8EA7              ;       Rutinas_de_impresion en IX.
 300+ 8EA7              ;       Puntero_de_impresion en HL.
 301+ 8EA7              ;       Impacto/Dirección en BC.
 302+ 8EA7
 303+ 8EA7 CD BA 8E         call Almacena_disparo
 304+ 8EAA
 305+ 8EAA C9           6 ret
 306+ 8EAB
 307+ 8EAB              ; ----------------------------------------------------------------
 308+ 8EAB              ;
 309+ 8EAB              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8EAB              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8EAB              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8EAB
 313+ 8EAB 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8EAC FE 02            cp 2
 315+ 8EAE 38 01            jr c,1F
 316+ 8EB0 23               inc hl
 317+ 8EB1 C9           1 ret
 318+ 8EB2
 319+ 8EB2 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8EB3 FE 01        	cp 1
 321+ 8EB5 20 01        	jr nz,1F
 322+ 8EB7 2B           	dec hl
 323+ 8EB8 2B           1 dec hl
 324+ 8EB9 C9               ret
 325+ 8EBA
 326+ 8EBA              ; ----------------------------------------------------------------
 327+ 8EBA              ;
 328+ 8EBA              ;   25/02/23
 329+ 8EBA              ;
 330+ 8EBA              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8EBA              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8EBA              ;
 333+ 8EBA              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8EBA              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8EBA
 336+ 8EBA              Almacena_disparo
 337+ 8EBA
 338+ 8EBA E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8EBB F1               pop af
 340+ 8EBC 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8EBD
 342+ 8EBD 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8EBE E6 01            and 1
 344+ 8EC0 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8EC2              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8EC2              ; 	Dispara AMADEUS.
 347+ 8EC2
 348+ 8EC2              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8EC2              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8EC2              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8EC2              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8EC2
 353+ 8EC2 C5               push bc
 354+ 8EC3 01 A2 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8EC6 2A 98 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8EC9 A7               and a
 357+ 8ECA ED 42            sbc hl,bc
 358+ 8ECC CC 69 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8ECF C1               pop bc
 360+ 8ED0 28 54            jr z,4F
 361+ 8ED2
 362+ 8ED2 2A 98 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8ED5 23               inc hl
 364+ 8ED6 23               inc hl
 365+ 8ED7 22 98 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8EDA              ;                                                   ; _ Disparo_(+1).
 367+ 8EDA 18 18            jr 2F
 368+ 8EDC
 369+ 8EDC              ; Dispara una entidad.
 370+ 8EDC
 371+ 8EDC C5           1 push bc
 372+ 8EDD 01 CA 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8EE0 2A 96 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8EE3 A7               and a
 375+ 8EE4 ED 42            sbc hl,bc
 376+ 8EE6 CC 62 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8EE9 C1               pop bc
 378+ 8EEA 28 3A            jr z,4F
 379+ 8EEC
 380+ 8EEC 2A 96 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8EEF 23               inc hl
 382+ 8EF0 23               inc hl
 383+ 8EF1 22 96 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8EF4              ;                                                   ; _ Disparo_(+1).
 385+ 8EF4 CD A0 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8EF7              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8EF7              ;
 388+ 8EF7              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8EF7              ;                                                     Rutinas_de_impresion en IX.
 390+ 8EF7              ;                                                     Puntero_de_impresion en HL.
 391+ 8EF7              ;                                                     Impacto/Dirección en BC.
 392+ 8EF7
 393+ 8EF7 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8EF8 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8EF9 23               inc hl                                          ; _ al siguiente.
 396+ 8EFA A7               and a
 397+ 8EFB 20 C0            jr nz,3B
 398+ 8EFD
 399+ 8EFD 08               ex af,af
 400+ 8EFE ED 73 8D 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F02 F9               ld sp,hl
 402+ 8F03
 403+ 8F03 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F05 F5               push af                                         ; Puntero de impresión.
 405+ 8F06 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F08 C5               push bc                                         ; Control.
 407+ 8F09
 408+ 8F09 ED 7B 8D 89      ld sp,(Stack)
 409+ 8F0D
 410+ 8F0D              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F0D
 412+ 8F0D 21 7C 89     	ld hl,Ctrl_1
 413+ 8F10 CB C6        	set 0,(hl)
 414+ 8F12
 415+ 8F12 DD E5        	push ix
 416+ 8F14 E1               pop hl
 417+ 8F15 F5               push af
 418+ 8F16 DD E1            pop ix
 419+ 8F18
 420+ 8F18 CD A0 7F     	call Guarda_foto_registros
 421+ 8F1B
 422+ 8F1B 21 7C 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F1E CB 86        	res 0,(hl)
 424+ 8F20
 425+ 8F20              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F20              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F20
 428+ 8F20 CD 69 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F23 CD 62 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F26
 431+ 8F26 C9           4 ret
 432+ 8F27
 433+ 8F27              ; ----------------------------------------------------------------
 434+ 8F27              ;
 435+ 8F27              ;   4/3/23
 436+ 8F27              ;
 437+ 8F27              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F27              ;   _ al generarse el disparo.
 439+ 8F27              ;
 440+ 8F27              ;       "$80" ..... No se produce colisión.
 441+ 8F27              ;       "$81" ..... Se produce colisión.
 442+ 8F27
 443+ 8F27              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F27              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F27
 446+ 8F27
 447+ 8F27 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F29 E5               push hl                                        ; Puntero de impresión.
 449+ 8F2A
 450+ 8F2A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F2C CD 48 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F2F
 453+ 8F2F 7B               ld a,e
 454+ 8F30 E6 01            and 1
 455+ 8F32 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F34
 457+ 8F34 E1               pop hl
 458+ 8F35 E5               push hl
 459+ 8F36 CD D7 94         call NextScan
 460+ 8F39
 461+ 8F39 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F3A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F3C 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F3E              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F3E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F40 CD 48 8F         call Bucle_2
 467+ 8F43
 468+ 8F43 43           2 ld b,e
 469+ 8F44 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F45 FD E1            pop iy
 471+ 8F47 C9               ret
 472+ 8F48
 473+ 8F48               ; ---------- ----------
 474+ 8F48
 475+ 8F48 06 02        Bucle_2 ld b,2
 476+ 8F4A FD 7E 00     2 ld a,(iy)
 477+ 8F4D A6               and (hl)
 478+ 8F4E 28 02            jr z,1F
 479+ 8F50 1E 81            ld e,$81
 480+ 8F52 23           1 inc hl
 481+ 8F53 FD 23            inc iy
 482+ 8F55 10 F3            djnz 2B
 483+ 8F57 C9               ret
 484+ 8F58
 485+ 8F58              ; -------------------------------------------------------------------------------------------------------------
 486+ 8F58              ;
 487+ 8F58              ;   11/04/23
 488+ 8F58              ;
 489+ 8F58              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8F58              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8F58              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8F58              ;
 493+ 8F58              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8F58
 495+ 8F58              Compara_coordenadas_X
 496+ 8F58
 497+ 8F58              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8F58              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8F58
 500+ 8F58              ; Preparamos registros:
 501+ 8F58
 502+ 8F58 21 44 89         ld hl,Filas+6
 503+ 8F5B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8F5C 23               inc hl
 505+ 8F5D 23               inc hl
 506+ 8F5E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8F5F 43               ld b,e
 508+ 8F60 21 52 89         ld hl,Filas+20
 509+ 8F63 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8F64 21 A2 89         ld hl,Coordenadas_X_Entidad
 511+ 8F67 CD 78 91         call Guarda_coordenadas_X
 512+ 8F6A
 513+ 8F6A              ; Preparamos registros:
 514+ 8F6A
 515+ 8F6A 21 3C 85         ld hl,Amadeus_db+6
 516+ 8F6D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8F6E 23               inc hl
 518+ 8F6F 23               inc hl
 519+ 8F70 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8F71 7B               ld a,e
 521+ 8F72 08               ex af,af'
 522+ 8F73 21 4A 85         ld hl,Amadeus_db+20
 523+ 8F76 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8F77 21 9F 89         ld hl,Coordenadas_X_Amadeus
 525+ 8F7A CD 78 91         call Guarda_coordenadas_X
 526+ 8F7D
 527+ 8F7D              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8F7D              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8F7D
 530+ 8F7D 04               inc b
 531+ 8F7E 05               dec b
 532+ 8F7F 28 04            jr z,1F
 533+ 8F81 06 03            ld b,3
 534+ 8F83 18 02            jr 2F
 535+ 8F85 06 02        1 ld b,2
 536+ 8F87 08           2 ex af,af'
 537+ 8F88 3C               inc a
 538+ 8F89 3D               dec a
 539+ 8F8A 28 04            jr z,5F
 540+ 8F8C 0E 03            ld c,3
 541+ 8F8E 18 02            jr 6F
 542+ 8F90 0E 02        5 ld c,2
 543+ 8F92 79           6 ld a,c
 544+ 8F93 08               ex af,af'
 545+ 8F94 11 A2 89         ld de,Coordenadas_X_Entidad
 546+ 8F97 1A           4 ld a,(de)
 547+ 8F98 21 9F 89         ld hl,Coordenadas_X_Amadeus
 548+ 8F9B BE           3 cp (hl)
 549+ 8F9C 28 0E            jr z,7F
 550+ 8F9E 23               inc hl
 551+ 8F9F 0D               dec c
 552+ 8FA0 20 F9            jr nz,3B
 553+ 8FA2 13               inc de
 554+ 8FA3 08               ex af,af'
 555+ 8FA4 4F               ld c,a
 556+ 8FA5 08               ex af,af'
 557+ 8FA6 10 EF            djnz 4B
 558+ 8FA8
 559+ 8FA8              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8FA8
 561+ 8FA8 CD B7 91     8 call Limpia_Coordenadas_X
 562+ 8FAB C9               ret
 563+ 8FAC
 564+ 8FAC              7
 565+ 8FAC 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8FAE 32 57 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8FB1 21 9A 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8FB4 CB D6            set 2,(hl)
 569+ 8FB6 18 F0            jr 8B
 570+ 8FB8
 571+ 8FB8              ; -----------------------------------------------------------------------
 572+ 8FB8              ;
 573+ 8FB8              ;   17/04/23
 574+ 8FB8              ;
 575+ 8FB8
 576+ 8FB8              Detecta_colision_nave_entidad
 577+ 8FB8
 578+ 8FB8              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8FB8
 580+ 8FB8 2A 40 89         ld hl,(Posicion_actual)
 581+ 8FBB CD 3C 94         call Calcula_puntero_de_impresion
 582+ 8FBE
 583+ 8FBE              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8FBE              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8FBE
 586+ 8FBE DD E5            push ix
 587+ 8FC0 E1               pop hl
 588+ 8FC1 E5               push hl
 589+ 8FC2
 590+ 8FC2              ; ----- ----- -----
 591+ 8FC2 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8FC4 06 0A            ld b,10
 593+ 8FC6 CD F6 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8FC9 7B               ld a,e
 595+ 8FCA FE 05            cp 5
 596+ 8FCC 38 0E            jr c,3F
 597+ 8FCE
 598+ 8FCE              ; LLegados a este punto:
 599+ 8FCE              ;
 600+ 8FCE              ;   HAY COLISIÓN !!!!!.
 601+ 8FCE              ;
 602+ 8FCE              ;   .db (Impacto) de Amadeus a "1".
 603+ 8FCE              ;   SET el bit3 de (Impacto2).
 604+ 8FCE              ;
 605+ 8FCE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8FCE
 607+ 8FCE 21 4F 85         ld hl,Amadeus_db+25
 608+ 8FD1 36 01            ld (hl),1
 609+ 8FD3 21 9A 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8FD6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8FD8 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8FDA 18 18            jr 1F
 613+ 8FDC
 614+ 8FDC              ; -----
 615+ 8FDC
 616+ 8FDC E1           3 pop hl
 617+ 8FDD CD D7 94         call NextScan
 618+ 8FE0 E5               push hl
 619+ 8FE1 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8FE2 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8FE4 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8FE6 30 0C            jr nc,1F
 623+ 8FE8              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8FE8 10 DC            djnz 2B
 625+ 8FEA
 626+ 8FEA              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8FEA
 628+ 8FEA              ; LLegados a este punto:
 629+ 8FEA              ;
 630+ 8FEA              ;   NO HAY COLISIÓN !!!!!.
 631+ 8FEA              ;
 632+ 8FEA              ;   .db (Impacto) de Amadeus a "0".
 633+ 8FEA              ;   RES el bit2 de (Impacto2).
 634+ 8FEA              ;
 635+ 8FEA              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8FEA              ;   Lo colocamos a "0".
 637+ 8FEA
 638+ 8FEA 21 9A 89         ld hl,Impacto2
 639+ 8FED CB 96            res 2,(hl)
 640+ 8FEF 2A 9B 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8FF2 36 00            ld (hl),0
 642+ 8FF4
 643+ 8FF4 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8FF5 C9               ret
 645+ 8FF6
 646+ 8FF6               ; ---------- ----------
 647+ 8FF6
 648+ 8FF6 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8FF7 3A 3F 89         ld a,(Columns)
 650+ 8FFA 47               ld b,a
 651+ 8FFB FD 7E 00     2 ld a,(iy)
 652+ 8FFE BE               cp (hl)
 653+ 8FFF 28 01            jr z,1F
 654+ 9001
 655+ 9001 1C               inc e
 656+ 9002
 657+ 9002 23           1 inc hl
 658+ 9003 FD 23            inc iy
 659+ 9005 10 F4            djnz 2B
 660+ 9007 C1               pop bc
 661+ 9008 C9               ret
 662+ 9009
 663+ 9009              ; -------------------------------------------------------------------------------------------------------------
 664+ 9009              ;
 665+ 9009              ;   13/03/23
 666+ 9009              ;
 667+ 9009              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9009              ;
 669+ 9009              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9009
 671+ 9009 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 900C 7E               ld a,(hl)
 673+ 900D A7               and a
 674+ 900E C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 900F
 676+ 900F 44               ld b,h
 677+ 9010 4D               ld c,l
 678+ 9011 2A 93 89         ld hl,(Stack_snapshot_disparos)
 679+ 9014 E5               push hl
 680+ 9015 A7               and a
 681+ 9016 ED 42            sbc hl,bc
 682+ 9018 E5               push hl
 683+ 9019 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 901A
 685+ 901A E1               pop hl
 686+ 901B 54               ld d,h
 687+ 901C 5D               ld e,l
 688+ 901D 1B               dec de
 689+ 901E ED B8            lddr                                                ; Limpiamos.
 690+ 9020
 691+ 9020 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 9023 22 93 89         ld (Stack_snapshot_disparos),hl
 693+ 9026
 694+ 9026 C9               ret
 695+ 9027
 696+ 9027              ; -------------------------------------------------------------------------------------------------------------
 697+ 9027              ;
 698+ 9027              ;   28/03/23
 699+ 9027              ;
 700+ 9027
 701+ 9027 01 B4 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 902A 2A 98 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 902D
 704+ 902D CD A0 8C     2 call Extrae_address
 705+ 9030 7E               ld a,(hl)
 706+ 9031 A7               and a
 707+ 9032 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 9034
 709+ 9034              ; ----- ----- ----- ----- ----- -----
 710+ 9034
 711+ 9034 C5               push bc
 712+ 9035 CD F1 90         call foto_disparo_a_borrar
 713+ 9038
 714+ 9038              ; Existe colisión con este disparo???
 715+ 9038
 716+ 9038 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 9039 7E               ld a,(hl)
 718+ 903A 2B               dec hl
 719+ 903B E6 01            and 1
 720+ 903D 28 1D            jr z,9F
 721+ 903F
 722+ 903F              ;   En este punto:
 723+ 903F              ;
 724+ 903F              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 903F              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 903F              ;   _con la entidad).
 727+ 903F              ;
 728+ 903F              ;   Disparo_2A defw 0                                ; Control.
 729+ 903F              ;    defw 0                                          ; Puntero objeto.
 730+ 903F              ;    defw 0                                          ; Puntero de impresión.
 731+ 903F              ;    defw 0                                          ; Rutina de impresión.
 732+ 903F
 733+ 903F E5               push hl
 734+ 9040
 735+ 9040 06 04            ld b,4
 736+ 9042 23           19 inc hl
 737+ 9043 10 FD            djnz 19B
 738+ 9045
 739+ 9045 CD A0 8C         call Extrae_address
 740+ 9048 CD 2E 9B         call Genera_coordenadas_disparo
 741+ 904B
 742+ 904B              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 904B
 744+ 904B 21 9D 89         ld hl,Coordenadas_disparo_certero
 745+ 904E 72               ld (hl),d
 746+ 904F 23               inc hl
 747+ 9050 73               ld (hl),e
 748+ 9051
 749+ 9051              ; Elimino el disparo de la base de datos.
 750+ 9051
 751+ 9051 E1               pop hl
 752+ 9052 CD 6D 91         call Elimina_disparo_de_base_de_datos
 753+ 9055 21 9A 89         ld hl,Impacto2
 754+ 9058 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 905A
 756+ 905A 18 06            jr 11F
 757+ 905C
 758+ 905C CD 1A 91     9 call Mueve_disparo
 759+ 905F CD F1 90         call foto_disparo_a_borrar
 760+ 9062
 761+ 9062 C1           11 pop bc
 762+ 9063 18 04            jr 7F
 763+ 9065
 764+ 9065              ; ----- ----- ----- ----- ----- -----
 765+ 9065
 766+ 9065 ED 42        1 sbc hl,bc
 767+ 9067 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 9069 2A 98 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 906C 23               inc hl
 770+ 906D 23               inc hl
 771+ 906E 22 98 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 9071 18 BA            jr 2B
 773+ 9073 CD 69 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 9076
 775+ 9076 01 1C 85         ld bc,Disparo_11
 776+ 9079 2A 96 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 907C
 778+ 907C CD A0 8C     5 call Extrae_address
 779+ 907F 7E               ld a,(hl)
 780+ 9080 A7               and a
 781+ 9081 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 9083
 783+ 9083              ; ----- ----- ----- ----- ----- -----
 784+ 9083
 785+ 9083 C5               push bc
 786+ 9084 CD F1 90         call foto_disparo_a_borrar
 787+ 9087
 788+ 9087              ; Existe colisión con este disparo???
 789+ 9087
 790+ 9087 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 9088 7E               ld a,(hl)
 792+ 9089 2B               dec hl
 793+ 908A E6 01            and 1
 794+ 908C 28 48            jr z,10F
 795+ 908E
 796+ 908E              ; La colisión se produce con Amadeus???
 797+ 908E              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 908E
 799+ 908E E5               push hl
 800+ 908F
 801+ 908F 06 04            ld b,4
 802+ 9091 23           16 inc hl
 803+ 9092 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 9094 CD A0 8C         call Extrae_address
 805+ 9097 CD 2E 9B         call Genera_coordenadas_disparo
 806+ 909A
 807+ 909A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 909B FE 16            cp $16
 809+ 909D 38 22            jr c,15F
 810+ 909F
 811+ 909F              ; (Colisiones en filas 16 y 17).
 812+ 909F
 813+ 909F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90A0
 815+ 90A0              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90A0
 817+ 90A0 21 3C 85         ld hl,Amadeus_db+6
 818+ 90A3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90A4 23               inc hl
 820+ 90A5 23               inc hl
 821+ 90A6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 90A7 21 4A 85         ld hl,Amadeus_db+20
 823+ 90AA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 90AB 21 9F 89         ld hl,Coordenadas_X_Amadeus
 825+ 90AE CD 78 91         call Guarda_coordenadas_X
 826+ 90B1
 827+ 90B1 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 90B2
 829+ 90B2              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 90B2
 831+ 90B2 06 03            ld b,3
 832+ 90B4 21 9F 89         ld hl,Coordenadas_X_Amadeus
 833+ 90B7 7E           18 ld a,(hl)
 834+ 90B8 BA               cp d
 835+ 90B9 20 03            jr nz,17F
 836+ 90BB
 837+ 90BB              ; Colisión Amadeus !!!!!!!!!!
 838+ 90BB
 839+ 90BB E1               pop hl
 840+ 90BC 18 09            jr 14F
 841+ 90BE
 842+ 90BE 23           17 inc hl
 843+ 90BF 10 F6            djnz 18B
 844+ 90C1
 845+ 90C1              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 90C1              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 90C1
 848+ 90C1 E1           15 pop hl
 849+ 90C2 23               inc hl
 850+ 90C3 35               dec (hl)
 851+ 90C4 2B               dec hl
 852+ 90C5 18 0F            jr 10F
 853+ 90C7
 854+ 90C7              ; -----------------------debug
 855+ 90C7
 856+ 90C7              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 90C7              ; _ almacén de coordenadas_X de Amadeus.
 858+ 90C7
 859+ 90C7 E5           14 push hl
 860+ 90C8 CD 6D 91         call Elimina_disparo_de_base_de_datos
 861+ 90CB 21 9A 89         ld hl,Impacto2
 862+ 90CE CB CE            set 1,(hl)
 863+ 90D0 CD B7 91         call Limpia_Coordenadas_X
 864+ 90D3
 865+ 90D3 E1               pop hl
 866+ 90D4 18 06            jr 12F
 867+ 90D6
 868+ 90D6 CD 1A 91     10 call Mueve_disparo
 869+ 90D9 CD F1 90         call foto_disparo_a_borrar
 870+ 90DC C1           12 pop bc
 871+ 90DD
 872+ 90DD 18 04            jr 8F
 873+ 90DF
 874+ 90DF              ; ----- ----- ----- ----- ----- -----
 875+ 90DF
 876+ 90DF ED 42        4 sbc hl,bc
 877+ 90E1 28 0A            jr z,6F
 878+ 90E3
 879+ 90E3 2A 96 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 90E6 23               inc hl
 881+ 90E7 23               inc hl
 882+ 90E8 22 96 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 90EB 18 8F            jr 5B
 884+ 90ED
 885+ 90ED CD 62 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 90F0 C9               ret
 887+ 90F1
 888+ 90F1              ; ------------------------------------------------------------------
 889+ 90F1
 890+ 90F1              foto_disparo_a_borrar
 891+ 90F1
 892+ 90F1 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 90F2 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 90F3 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 90F4
 896+ 90F4 E5               push hl
 897+ 90F5 23               inc hl
 898+ 90F6 23               inc hl
 899+ 90F7 ED 73 8D 89      ld (Stack),sp
 900+ 90FB F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 90FC FD E1            pop iy
 902+ 90FE DD E1            pop ix
 903+ 9100 E1               pop hl
 904+ 9101 ED 7B 8D 89      ld sp,(Stack)
 905+ 9105 3A 7C 89         ld a,(Ctrl_1)
 906+ 9108 CB C7            set 0,a
 907+ 910A 32 7C 89         ld (Ctrl_1),a
 908+ 910D CD A0 7F         call Guarda_foto_registros
 909+ 9110 3A 7C 89         ld a,(Ctrl_1)
 910+ 9113 CB 87            res 0,a
 911+ 9115 32 7C 89         ld (Ctrl_1),a
 912+ 9118 E1               pop hl
 913+ 9119 C9               ret
 914+ 911A
 915+ 911A E5           Mueve_disparo push hl
 916+ 911B 7E               ld a,(hl)
 917+ 911C 06 04            ld b,4
 918+ 911E 23           1 inc hl
 919+ 911F 10 FD            djnz 1B
 920+ 9121
 921+ 9121              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9121
 923+ 9121 CD A0 8C         call Extrae_address
 924+ 9124
 925+ 9124 E6 01            and 1
 926+ 9126 28 2B            jr z,2F
 927+ 9128
 928+ 9128              ; Disparo hacia arriba, (Amadeus).
 929+ 9128
 930+ 9128              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9128              ; _ de la dificultad.
 932+ 9128
 933+ 9128 CD E6 94         call PreviousScan
 934+ 912B CD E6 94         call PreviousScan
 935+ 912E CD E6 94         call PreviousScan
 936+ 9131
 937+ 9131              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9131
 939+ 9131 7C               ld a,h
 940+ 9132 FE 40            cp $40
 941+ 9134 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 9136
 943+ 9136              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 9136
 945+ 9136 EB               ex de,hl
 946+ 9137 06 04            ld b,4
 947+ 9139 2B           6 dec hl
 948+ 913A 10 FD            djnz 6B
 949+ 913C
 950+ 913C CD 6D 91         call Elimina_disparo_de_base_de_datos
 951+ 913F E1               pop hl
 952+ 9140 18 10            jr 7F
 953+ 9142
 954+ 9142              ; Se ha desplazado la bala, compruebo colisión.
 955+ 9142
 956+ 9142 D5           3 push de
 957+ 9143 C5               push bc
 958+ 9144
 959+ 9144 CD 27 8F         call Comprueba_Colision
 960+ 9147
 961+ 9147              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 9147
 963+ 9147 78               ld a,b
 964+ 9148
 965+ 9148 C1               pop bc
 966+ 9149 D1               pop de
 967+ 914A
 968+ 914A EB               ex de,hl
 969+ 914B
 970+ 914B 73               ld (hl),e
 971+ 914C 23               inc hl
 972+ 914D 72               ld (hl),d
 973+ 914E
 974+ 914E E1           4 pop hl
 975+ 914F 23               inc hl
 976+ 9150 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 9151 2B               dec hl
 978+ 9152 C9           7 ret
 979+ 9153
 980+ 9153              ; Disparo hacia abajo, (Entidad).
 981+ 9153
 982+ 9153              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 9153              ; _ de la dificultad.
 984+ 9153
 985+ 9153 CD D7 94     2 call NextScan
 986+ 9156 CD D7 94         call NextScan
 987+ 9159 CD D7 94         call NextScan
 988+ 915C
 989+ 915C              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 915C
 991+ 915C 7C               ld a,h
 992+ 915D FE 58            cp $58
 993+ 915F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 9161
 995+ 9161 EB               ex de,hl
 996+ 9162 06 04            ld b,4
 997+ 9164 2B           5 dec hl
 998+ 9165 10 FD            djnz 5B
 999+ 9167
1000+ 9167 CD 6D 91         call Elimina_disparo_de_base_de_datos
1001+ 916A E1               pop hl
1002+ 916B 18 E5            jr 7B
1003+ 916D
1004+ 916D              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 916D
1006+ 916D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 9170 AF               xor a
1008+ 9171 77               ld (hl),a
1009+ 9172 54               ld d,h
1010+ 9173 5D               ld e,l
1011+ 9174 13               inc de
1012+ 9175 ED B0            ldir
1013+ 9177 C9               ret
1014+ 9178
1015+ 9178              ; -----------------------------------------------------------------
1016+ 9178              ;
1017+ 9178              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 9178              ;
1019+ 9178              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 9178              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 9178              ;
1022+ 9178              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 9178              ;
1024+ 9178              ;   INPUTS:
1025+ 9178              ;
1026+ 9178              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 9178              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 9178              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 9178
1030+ 9178              ;   MODIFICA: A, HL, DE y C
1031+ 9178
1032+ 9178 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 9179 79               ld a,c
1034+ 917A E6 01            and 1
1035+ 917C 20 03            jr nz,1F
1036+ 917E 14               inc d
1037+ 917F 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 9181
1039+ 9181              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 9181              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 9181
1042+ 9181 15           1 dec d
1043+ 9182 23           2 inc hl
1044+ 9183 72               ld (hl),d
1045+ 9184
1046+ 9184 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 9185 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 9186 C8               ret z
1049+ 9187
1050+ 9187 AF               xor a
1051+ 9188 5F               ld e,a
1052+ 9189 18 ED            jr Guarda_coordenadas_X
1053+ 918B
1054+ 918B              ; -----------------------------------------------------------------
1055+ 918B              ;
1056+ 918B              ;   12/04/23
1057+ 918B              ;
1058+ 918B
1059+ 918B 3A 9A 89     Selector_de_impactos ld a,(Impacto2)
1060+ 918E A7               and a
1061+ 918F C8               ret z
1062+ 9190
1063+ 9190 FE 04            cp 4
1064+ 9192 20 09            jr nz,1F
1065+ 9194
1066+ 9194
1067+ 9194              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 9194
1069+ 9194 CD B8 8F         call Detecta_colision_nave_entidad
1070+ 9197
1071+ 9197 21 9A 89         ld hl,Impacto2
1072+ 919A CB 5E            bit 3,(hl)
1073+ 919C C0               ret nz                                               ; Existe colisión, RET.
1074+ 919D
1075+ 919D              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 919D              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 919D
1078+ 919D 21 9A 89     1 ld hl,Impacto2
1079+ 91A0 CB 4E            bit 1,(hl)
1080+ 91A2 28 07            jr z,2F
1081+ 91A4
1082+ 91A4 21 4F 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 91A7 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 91A9 18 0B            jr 3F
1085+ 91AB
1086+ 91AB 21 9A 89     2 ld hl,Impacto2
1087+ 91AE CB 46            bit 0,(hl)
1088+ 91B0 C8               ret z
1089+ 91B1
1090+ 91B1              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 91B1
1092+ 91B1 21 7C 89         ld hl,Ctrl_1
1093+ 91B4 CB D6            set 2,(hl)
1094+ 91B6
1095+ 91B6 C9           3 ret
1096+ 91B7
1097+ 91B7              ; -----------------------------------------------------------------
1098+ 91B7              ;
1099+ 91B7              ;   16/04/23
1100+ 91B7              ;
1101+ 91B7
1102+ 91B7 AF           Limpia_Coordenadas_X xor a
1103+ 91B8 06 06            ld b,6
1104+ 91BA 21 9F 89         ld hl,Coordenadas_X_Amadeus
1105+ 91BD 77           1 ld (hl),a
1106+ 91BE 23               inc hl
1107+ 91BF 10 FC            djnz 1B
1108+ 91C1 C9               ret
1109+ 91C2
1110+ 91C2              ; -----------------------------------------------------------------
1111+ 91C2              ;
1112+ 91C2              ;   25/04/23
1113+ 91C2              ;
1114+ 91C2
1115+ 91C2              Determina_resultado_comparativa
1116+ 91C2
1117+ 91C2              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 91C2              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 91C2              ;
1120+ 91C2              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 91C2              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 91C2              ;
1123+ 91C2              ;   SBC HL,DE
1124+ 91C2
1125+ 91C2 7C               ld a,h
1126+ 91C3 06 00            ld b,0
1127+ 91C5
1128+ 91C5 CD D5 91         call Compara_cositas
1129+ 91C8
1130+ 91C8 04               inc b
1131+ 91C9 05               dec b
1132+ 91CA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 91CB
1134+ 91CB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 91CC 06 00            ld b,0
1136+ 91CE
1137+ 91CE CD D5 91         call Compara_cositas
1138+ 91D1 18 01            jr 2F
1139+ 91D3
1140+ 91D3 04           1 inc b
1141+ 91D4 C9           2 ret
1142+ 91D5
1143+ 91D5 A7           Compara_cositas and a
1144+ 91D6 28 17            jr z,1F
1145+ 91D8
1146+ 91D8 FE FD            cp $fd
1147+ 91DA 28 13            jr z,1F
1148+ 91DC FE FE            cp $fe
1149+ 91DE 28 0F            jr z,1F
1150+ 91E0 FE FF            cp $ff
1151+ 91E2 28 0B            jr z,1F
1152+ 91E4 FE 01            cp $01
1153+ 91E6 28 07            jr z,1F
1154+ 91E8 FE 02            cp $02
1155+ 91EA 28 03            jr z,1F
1156+ 91EC FE 03            cp $03
1157+ 91EE C0               ret nz
1158+ 91EF
1159+ 91EF 04           1 inc b
1160+ 91F0 C9               ret
1161+ 91F1
# file closed: Disparo.asm
1231  91F1              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91F1              ; ******************************************************************************************************************************************************************************************
   2+ 91F1              ;
   3+ 91F1              ; 01/23
   4+ 91F1              ;
   5+ 91F1              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91F1
   7+ 91F1 CD CB 94     Draw call Prepara_draw
   8+ 91F4 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 91F5 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 91F6 28 05        	jr z,2F
  11+ 91F8
  12+ 91F8 3A 52 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 91FB 18 0C        	jr 1F
  14+ 91FD 2A 50 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9200 22 40 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9203 CD 92 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9206              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9206 CD 51 9C     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9209 3A 6C 89     1 ld a,(Ctrl_0)
  20+ 920C CB 6F        	bit 5,a
  21+ 920E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9210
  23+ 9210 CD 28 92     	call Comprueba_limite_horizontal
  24+ 9213 CD B8 92     	call Comprueba_limite_vertical
  25+ 9216
  26+ 9216              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9216
  28+ 9216 CD 05 94     3 call calcula_CColumnass
  29+ 9219 CD 3C 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 921C CD 91 94     	call Define_rutina_de_impresion
  31+ 921F
  32+ 921F 3A 6C 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9222 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9224 32 6C 89     	ld (Ctrl_0),a
  35+ 9227
  36+ 9227 C9           	ret
  37+ 9228
  38+ 9228              ; *******************************************************************************************************************************************************************************************
  39+ 9228              ;	21/01/23
  40+ 9228              ;
  41+ 9228              ; 	Comprueba_limite_horizontal.
  42+ 9228              ;
  43+ 9228              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9228              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9228              ;
  46+ 9228              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9228              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9228              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9228              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9228
  51+ 9228
  52+ 9228
  53+ 9228 3A 6C 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 922B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 922D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 922F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9231 32 6C 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9234 18 09            jr 6F
  59+ 9236 CB 5F        1 bit 3,a
  60+ 9238 28 0A            jr z,2F
  61+ 923A E6 F7            and $f7
  62+ 923C 32 6C 89         ld (Ctrl_0),a
  63+ 923F CD 92 93     6 call Inicializacion
  64+ 9242 18 5B            jr 5F
  65+ 9244 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9245
  67+ 9245              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9245              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9245
  70+ 9245 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9246 2A 77 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9249 CD 97 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 924C 67           	ld h,a
  74+ 924D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 924E CD 97 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9251 67           	ld h,a
  77+ 9252 A7           	and a
  78+ 9253 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9255 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9256 3A 52 89     	ld a,(Cuad_objeto)
  81+ 9259 FE 02        	cp 2
  82+ 925B 38 1E        	jr c,3F
  83+ 925D 28 1C        	jr z,3F
  84+ 925F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9260 28 23            jr z,7F
  86+ 9262 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9264 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9266 E1           	pop hl
  89+ 9267
  90+ 9267              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9267              ; _para indicar con E="2" en caso necesario.
  92+ 9267
  93+ 9267 E5               push hl
  94+ 9268 C5               push bc
  95+ 9269 CD 97 97     	call calcula_tercio
  96+ 926C FE 01        	cp 1
  97+ 926E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9270 CD A0 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9273 28 26            jr z,9F
 100+ 9275 38 24            jr c,9F
 101+ 9277 1E 00        11 ld e,0
 102+ 9279 18 22            jr 8F
 103+ 927B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 927C 28 07        	jr z, 7F
 105+ 927E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 9280 1E 00         	ld e,0
 107+ 9282 E1           	pop hl
 108+ 9283 18 04        	jr 4F
 109+ 9285 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9287 18 15            jr 10F
 111+ 9289
 112+ 9289              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9289              ; _para indicar con E="2" en caso necesario.
 114+ 9289
 115+ 9289 E5           4 push hl
 116+ 928A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 928B CD 97 97     	call calcula_tercio
 118+ 928E FE 01        	cp 1
 119+ 9290 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 9292 CD A0 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 9295 28 04            jr z,9F
 122+ 9297 30 02            jr nc,9F
 123+ 9299 18 02        	jr 8F
 124+ 929B 1E 02        9 ld e,2
 125+ 929D C1           8 pop bc
 126+ 929E E1           10 pop hl
 127+ 929F C9           5 ret
 128+ 92A0
 129+ 92A0              ; --------------------
 130+ 92A0              ;
 131+ 92A0              ; 25/08/22
 132+ 92A0
 133+ 92A0 CD 97 97     Comprueba_centro call calcula_tercio
 134+ 92A3 67               ld h,a
 135+ 92A4 08           	ex af,af
 136+ 92A5 FE 02        	cp 2
 137+ 92A7 38 07        	jr c,1F
 138+ 92A9 28 05        	jr z,1F
 139+ 92AB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 92AE 18 03        	jr 2F
 141+ 92B0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 92B3 08           2 ex af,af
 143+ 92B4 A7               and a
 144+ 92B5 ED 42            sbc hl,bc
 145+ 92B7 C9               ret
 146+ 92B8
 147+ 92B8              ; *********************************************************************************************************************************************************************************************
 148+ 92B8              ;
 149+ 92B8              ;   16/8/22
 150+ 92B8              ;
 151+ 92B8              ;	Comprueba_limite_vertical
 152+ 92B8              ;
 153+ 92B8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 92B8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 92B8              ;
 156+ 92B8
 157+ 92B8 2A 40 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 92BB 7D           	ld a,l
 159+ 92BC E6 1F        	and $1F
 160+ 92BE 57           	ld d,a
 161+ 92BF 3A 79 89     	ld a,(Limite_vertical)
 162+ 92C2 BA           	cp d 											; Límite - Posición.
 163+ 92C3 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 92C4 3A 52 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 92C7 CB 47        	bit 0,a
 166+ 92C9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 92CB
 168+ 92CB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 92CB
 170+ 92CB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 92CC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 92CE
 173+ 92CE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 92CE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 92CE
 176+ 92CE 3A 44 89         ld a,(Coordenada_X)
 177+ 92D1 16 0F            ld d,Centro_izquierda
 178+ 92D3 A7               and a
 179+ 92D4 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 92D5 28 1E            jr z,3F
 181+ 92D7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 92D9              ;                                                    ; _salimos sin modificar nada.
 183+ 92D9 18 0E            jr 2F
 184+ 92DB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 92DC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 92DE
 187+ 92DE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 92DE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 92DE
 190+ 92DE 3A 44 89         ld a,(Coordenada_X)
 191+ 92E1 16 10            ld d,Centro_derecha
 192+ 92E3 A7               and a
 193+ 92E4 92               sub d
 194+ 92E5 28 0E            jr z,3F
 195+ 92E7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 92E9              ;                                                    ; _salimos sin modificar nada.
 197+ 92E9 CB 43        2 bit 0,e
 198+ 92EB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 92ED C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 92EE CD 82 93         call Modificaccionne
 201+ 92F1 C1           	pop bc
 202+ 92F2 CD 92 93         call Inicializacion
 203+ 92F5 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 92F6
 205+ 92F6              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 92F6
 207+ 92F6 C5           4 push bc
 208+ 92F7 01 3F 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 92FA 0A           	ld a,(bc)
 210+ 92FB 3D           	dec a
 211+ 92FC 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 92FD 7D           	ld a,l
 213+ 92FE 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 92FF CB 47        	bit 0,a
 215+ 9301 28 03        	jr z,5F
 216+ 9303 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9304 18 2E        	jr 7F
 218+ 9306
 219+ 9306              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9306
 221+ 9306 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9307 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9308 3A 6C 89     	ld a,(Ctrl_0)
 224+ 930B CB 4F        	bit 1,a
 225+ 930D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 930F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9310
 228+ 9310              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9310
 230+ 9310 1C               inc e
 231+ 9311 1D               dec e
 232+ 9312 20 07            jr nz,12F
 233+ 9314 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9315 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9316 22 40 89     	ld (Posicion_actual),hl
 236+ 9319 18 44        13 jr 9F
 237+ 931B CB 43        12 bit 0,e
 238+ 931D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 931F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 931F C1           	pop bc
 241+ 9320 18 D3        	jr 3B
 242+ 9322 80           14 add b
 243+ 9323 6F               ld l,a
 244+ 9324 22 40 89     	ld (Posicion_actual),hl
 245+ 9327 CD 82 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 932A 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 932C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 932E 32 6C 89         ld (Ctrl_0),a
 249+ 9331 F1           	pop af
 250+ 9332 18 2B        	jr 9F
 251+ 9334
 252+ 9334              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9334
 254+ 9334 F5           7 push af
 255+ 9335 3A 6C 89     	ld a,(Ctrl_0)
 256+ 9338 CB 47        	bit 0,a
 257+ 933A 20 1D        	jr nz,8F
 258+ 933C F1           	pop af
 259+ 933D
 260+ 933D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 933D
 262+ 933D 1C           	inc e
 263+ 933E 1D               dec e
 264+ 933F 20 07            jr nz,10F
 265+ 9341 90           	sub b
 266+ 9342 6F               ld l,a
 267+ 9343 22 40 89     	ld (Posicion_actual),hl
 268+ 9346 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9348              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9348 CB 43        10 bit 0,e
 271+ 934A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 934C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 934C C1           	pop bc
 274+ 934D 18 A6        	jr 3B
 275+ 934F 90           16 sub b
 276+ 9350 6F               ld l,a
 277+ 9351 22 40 89     	ld (Posicion_actual),hl
 278+ 9354 CD 82 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9357 18 06            jr 9F
 280+ 9359 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 935B 32 6C 89         ld (Ctrl_0),a
 282+ 935E F1           	pop af
 283+ 935F C1           9 pop bc
 284+ 9360 1E 00        	ld e,0
 285+ 9362 CD 92 93         call Inicializacion
 286+ 9365 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9366 08           	ex af,af
 288+ 9367 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9368 18 8B            jr 3B
 290+ 936A
 291+ 936A              ; --------------------
 292+ 936A
 293+ 936A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 936C CD E6 94     1 call PreviousScan
 295+ 936F 10 FB            djnz 1B
 296+ 9371 22 40 89     	ld (Posicion_actual),hl
 297+ 9374 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9375 C9           	ret
 299+ 9376
 300+ 9376              ; --------------------
 301+ 9376
 302+ 9376 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9378 CD D7 94     1 call NextScan
 304+ 937B 10 FB            djnz 1B
 305+ 937D 22 40 89     	ld (Posicion_actual),hl
 306+ 9380 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 9381 C9           	ret
 308+ 9382
 309+ 9382              ; --------------------
 310+ 9382              ;
 311+ 9382              ;	22/01/23
 312+ 9382              ;
 313+ 9382              ;	E="1". Hemos cambiado de cuadrante.
 314+ 9382              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 9382              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 9382
 317+ 9382
 318+ 9382              Modificaccionne
 319+ 9382
 320+ 9382 3A 52 89     	ld a,(Cuad_objeto)
 321+ 9385 FE 02        	cp 2
 322+ 9387 CC 6A 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 938A DC 6A 93         call c,Modifica_Pos_actual
 324+ 938D C8           	ret z
 325+ 938E CD 76 93         call Modifica_Pos_actual2
 326+ 9391 C9               ret
 327+ 9392
 328+ 9392              ; *************************************************************************************************************************************************************************************************
 329+ 9392              ;
 330+ 9392              ;	13/8/22
 331+ 9392              ;
 332+ 9392              ;	Inicializacion
 333+ 9392              ;
 334+ 9392              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9392              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 9392              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 9392              ;
 338+ 9392              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 9392              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 9392              ;	_ desaparece/aparece.
 341+ 9392
 342+ 9392              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 9392              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 9392              ;
 345+ 9392              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 9392              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 9392              ; 		   [E] ="0"
 348+ 9392
 349+ 9392              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 9392
 351+ 9392 CD 97 97     Inicializacion call calcula_tercio
 352+ 9395 28 36        	jr z,primit
 353+ 9397 E6 02        	and 2
 354+ 9399 20 07        	jr nz,segmit
 355+ 939B 7D           	ld a,l
 356+ 939C FE 7F        	cp $7f
 357+ 939E 38 2D        	jr c,primit
 358+ 93A0 28 2B        	jr z,primit
 359+ 93A2 CD FF 93     segmit call column
 360+ 93A5 38 13        	jr c,tercuad
 361+ 93A7 3E 04        cuarcuad ld a,4
 362+ 93A9 32 52 89     	ld (Cuad_objeto),a
 363+ 93AC 21 20 48     	ld hl,$4820
 364+ 93AF 22 77 89     	ld (Limite_horizontal),hl
 365+ 93B2 21 79 89     	ld hl,Limite_vertical
 366+ 93B5 36 0D        	ld (hl),$0d
 367+ 93B7 08           	ex af,af
 368+ 93B8 18 3C        	jr 1F
 369+ 93BA              tercuad
 370+ 93BA 3E 03        	ld a,3
 371+ 93BC 32 52 89     	ld (Cuad_objeto),a
 372+ 93BF 21 20 48     	ld hl,$4820
 373+ 93C2 22 77 89     	ld (Limite_horizontal),hl
 374+ 93C5 21 79 89     	ld hl,Limite_vertical
 375+ 93C8 36 12        	ld (hl),$12
 376+ 93CA 08           	ex af,af
 377+ 93CB 18 29        	jr 1F
 378+ 93CD CD FF 93     primit call column
 379+ 93D0 38 13        	jr c, primcuad
 380+ 93D2              segcuad
 381+ 93D2 3E 02        	ld a,2
 382+ 93D4 32 52 89     	ld (Cuad_objeto),a
 383+ 93D7 21 C0 4F     	ld hl,$4fc0
 384+ 93DA 22 77 89     	ld (Limite_horizontal),hl
 385+ 93DD 21 79 89     	ld hl,Limite_vertical
 386+ 93E0 36 0D        	ld (hl),$0d
 387+ 93E2 08           	ex af,af
 388+ 93E3 18 11        	jr 1F
 389+ 93E5              primcuad
 390+ 93E5 3E 01        	ld a,1
 391+ 93E7 32 52 89     	ld (Cuad_objeto),a
 392+ 93EA 21 C0 4F     	ld hl,$4fc0
 393+ 93ED 22 77 89     	ld (Limite_horizontal),hl
 394+ 93F0 21 79 89     	ld hl,Limite_vertical
 395+ 93F3 36 12        	ld (hl),$12
 396+ 93F5 08           	ex af,af
 397+ 93F6 CD 03 9B     1 call Genera_coordenadas
 398+ 93F9 21 6C 89     	ld hl,Ctrl_0
 399+ 93FC CB EE        	set 5,(hl)
 400+ 93FE C9           	ret
 401+ 93FF
 402+ 93FF              ; ------------------------------------------------------------------------------------------------------------------
 403+ 93FF
 404+ 93FF              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 93FF              ;
 406+ 93FF              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 93FF
 408+ 93FF 7D           column ld a,l
 409+ 9400 E6 1F        	and $1f
 410+ 9402 FE 10         	cp $10
 411+ 9404 C9            	ret
 412+ 9405
 413+ 9405              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9405              ;
 415+ 9405              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9405              ;
 417+ 9405              ; 14/12/22
 418+ 9405              ;
 419+ 9405              ;	Modifica: A y BC.
 420+ 9405
 421+ 9405 3A 52 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9408 E6 01        	and 1
 423+ 940A 28 17        	jr z,1F
 424+ 940C
 425+ 940C              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 940C
 427+ 940C 3A 44 89     	ld a,(Coordenada_X)
 428+ 940F 47           	ld b,a
 429+ 9410 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9411 79           	ld a,c
 431+ 9412 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9413 38 08        	jr c,2F
 433+ 9415 47           	ld b,a
 434+ 9416 79           	ld a,c
 435+ 9417 90           	sub b
 436+ 9418 32 76 89     	ld (Columnas),a
 437+ 941B 18 1B        	jr 4F
 438+ 941D 79           2 ld a,c
 439+ 941E 32 76 89     	ld (Columnas),a
 440+ 9421 18 15        	jr 4F
 441+ 9423
 442+ 9423              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9423
 444+ 9423 3A 44 89     1 ld a,(Coordenada_X)
 445+ 9426 81           	add c
 446+ 9427 3D           	dec a
 447+ 9428 D6 1F        	sub $1f
 448+ 942A 38 08        	jr c,3F
 449+ 942C 47           	ld b,a
 450+ 942D 79           	ld a,c
 451+ 942E 90           	sub b
 452+ 942F 32 76 89     	ld (Columnas),a
 453+ 9432 18 04        	jr 4F
 454+ 9434 79           3 ld a,c
 455+ 9435 32 76 89     	ld (Columnas),a
 456+ 9438 D9           4 exx
 457+ 9439 4F           	ld c,a
 458+ 943A D9           	exx
 459+ 943B C9            ret
 460+ 943C
 461+ 943C              ; --------------------------------------------------------------------------------------------------------------------
 462+ 943C              ;
 463+ 943C              ; 7/1/23
 464+ 943C              ;
 465+ 943C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 943C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 943C              ;
 468+ 943C              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 943C              ;	DESTRUYE: HL,B Y A.
 470+ 943C
 471+ 943C 3A 52 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 943F FE 02        	cp 2
 473+ 9441 38 18        	jr c,1F
 474+ 9443 28 16        	jr z,1F
 475+ 9445 E6 01        	and 1
 476+ 9447 28 0D        	jr z,3F
 477+ 9449
 478+ 9449              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9449
 480+ 9449 CD 85 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 944C
 482+ 944C 7D           9 ld a,l
 483+ 944D E6 1F        	and $1f
 484+ 944F 28 2A        	jr z,7F
 485+ 9451 2B           	dec hl
 486+ 9452 10 F8        	djnz 9B
 487+ 9454 18 25        	jr 7F
 488+ 9456
 489+ 9456              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9456
 491+ 9456 2A 40 89     3 ld hl,(Posicion_actual)
 492+ 9459 18 20        	jr 7F
 493+ 945B
 494+ 945B 28 14        1 jr z,2F
 495+ 945D
 496+ 945D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 945D
 498+ 945D CD 85 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9460 7D           4 ld a,l
 500+ 9461 E6 1F        	and $1f
 501+ 9463 28 03        	jr z,6F
 502+ 9465 2B           	dec hl
 503+ 9466 10 F8        	djnz 4B
 504+ 9468 06 0F        6 ld b,15
 505+ 946A CD E6 94     5 call PreviousScan
 506+ 946D 10 FB        	djnz 5B
 507+ 946F 18 0A        	jr 7F
 508+ 9471
 509+ 9471              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9471
 511+ 9471 CD 85 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9474 06 0F        	ld b,15
 513+ 9476 CD E6 94     8 call PreviousScan
 514+ 9479 10 FB        	djnz 8B
 515+ 947B
 516+ 947B E5           7 push hl
 517+ 947C DD E1        	pop ix
 518+ 947E
 519+ 947E 2A 42 89     	ld hl,(Puntero_objeto)
 520+ 9481 E5           	push hl
 521+ 9482 FD E1        	pop iy
 522+ 9484
 523+ 9484 C9           	ret
 524+ 9485
 525+ 9485              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9485              ;
 527+ 9485              ;	2/1/23
 528+ 9485              ;
 529+ 9485              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9485              ;
 531+ 9485              ;	Tras esta rutina tenemos:
 532+ 9485              ;
 533+ 9485              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9485              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9485              ;
 536+ 9485              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9485
 538+ 9485 2A 40 89     Operandos ld hl,(Posicion_actual)
 539+ 9488 3A 76 89     	ld a,(Columnas)
 540+ 948B 3D           	dec a
 541+ 948C 20 01        	jr nz,1F
 542+ 948E 3C           	inc a
 543+ 948F 47           1 ld b,a
 544+ 9490 C9           	ret
 545+ 9491
 546+ 9491              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9491              ;
 548+ 9491              ;	3/1/23
 549+ 9491              ;
 550+ 9491              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9491              ;
 552+ 9491              ;	Destruye: A,B,HL y DE.
 553+ 9491
 554+ 9491              Define_rutina_de_impresion
 555+ 9491
 556+ 9491 3A 3F 89     	ld a,(Columns)
 557+ 9494 47           	ld b,a
 558+ 9495 3A 76 89     	ld a,(Columnas)
 559+ 9498 B8           	cp b
 560+ 9499 20 0D        	jr nz,2f
 561+ 949B
 562+ 949B              ;	La entidad se imprime entera.
 563+ 949B
 564+ 949B 21 67 95     	ld hl, Indice_entidades_completas
 565+ 949E E6 01        	and 1
 566+ 94A0 28 02        	jr z,1F
 567+ 94A2
 568+ 94A2 23           	inc hl
 569+ 94A3 23           	inc hl
 570+ 94A4
 571+ 94A4 CD A0 8C     1 call Extrae_address
 572+ 94A7 C9           	ret		;	ret
 573+ 94A8
 574+ 94A8              ;	La entidad no se imprime entera en pantalla.
 575+ 94A8
 576+ 94A8 3A 52 89     2 ld a,(Cuad_objeto)
 577+ 94AB E6 01        	and 1
 578+ 94AD 28 17        	jr z,3F
 579+ 94AF
 580+ 94AF              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 94AF
 582+ 94AF 21 6B 95     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 94B2 3A 3F 89     4 ld a,(Columns)
 584+ 94B5 E6 01        	and 1
 585+ 94B7 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 94B9
 587+ 94B9 23           	inc hl
 588+ 94BA 23           	inc hl
 589+ 94BB
 590+ 94BB 3A 76 89     	ld a,(Columnas)
 591+ 94BE E6 01        	and 1
 592+ 94C0 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 94C2
 594+ 94C2 23           	inc hl
 595+ 94C3 23           	inc hl
 596+ 94C4
 597+ 94C4 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 94C6
 599+ 94C6 21 71 95     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 94C9 18 E7        	jr 4B
 601+ 94CB
 602+ 94CB              ; --------------------------------------------------------------------------------------------------------------------
 603+ 94CB              ;
 604+ 94CB              ;	Prepara_draw
 605+ 94CB              ;
 606+ 94CB              ;	Es una rutina de carga.
 607+ 94CB              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 94CB              ;
 609+ 94CB              ;	FUNCIONAMIENTO:
 610+ 94CB              ;
 611+ 94CB              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 94CB              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 94CB              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 94CB              ;
 615+ 94CB              ;	DESTRUYE:
 616+ 94CB              ;
 617+ 94CB              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 94CB
 619+ 94CB 21 3E 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 94CE 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 94CF 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 94D0 4E           	ld c,(hl)
 623+ 94D1 2A 40 89     	ld hl,(Posicion_actual)
 624+ 94D4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 94D6 C9           	ret
 626+ 94D7
 627+ 94D7              ;----------------------------------------------------------------------------------------------------------------
 628+ 94D7              ;
 629+ 94D7              ;	5/08/22
 630+ 94D7              ;
 631+ 94D7              ;   NextScan.
 632+ 94D7              ;
 633+ 94D7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 94D7              ;
 635+ 94D7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 94D7              ;
 637+ 94D7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 94D7              ;
 639+ 94D7              ;       DESTRUIDOS: AF y HL !!!
 640+ 94D7              ;
 641+ 94D7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 94D7              ;
 643+ 94D7
 644+ 94D7 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 94D8 7C               ld a,h
 646+ 94D9 E6 07            and 7
 647+ 94DB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 94DC
 649+ 94DC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 94DD C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 94DF 6F               ld l,a
 652+ 94E0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 94E1
 654+ 94E1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 94E2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 94E4 67               ld h,a
 657+ 94E5 C9               ret
 658+ 94E6
 659+ 94E6              ;----------------------------------------------------------------------------------------------------------------
 660+ 94E6              ;
 661+ 94E6              ;	5/08/22
 662+ 94E6              ;
 663+ 94E6              ;   PreviousScan.
 664+ 94E6              ;
 665+ 94E6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 94E6              ;
 667+ 94E6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 94E6              ;
 669+ 94E6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 94E6              ;
 671+ 94E6              ;       DESTRUIDOS: AF y HL !!!
 672+ 94E6              ;
 673+ 94E6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 94E6              ;
 675+ 94E6
 676+ 94E6 7C           PreviousScan ld a,h
 677+ 94E7 25               dec h               ; Dec H.
 678+ 94E8 E6 07            and 7
 679+ 94EA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 94EB
 681+ 94EB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 94EC D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 94EE 6F               ld l,a
 684+ 94EF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 94F0
 686+ 94F0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 94F1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 94F3 67               ld h,a
 689+ 94F4 C9               ret
 690+ 94F5
 691+ 94F5              ; -----------------------------------------------------------------------------------
 692+ 94F5              ;
 693+ 94F5              ;	28/2/23
 694+ 94F5              ;
 695+ 94F5              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 94F5              ;	Extrae fotos de Album_de_fotos.
 697+ 94F5
 698+ 94F5 3A 88 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 94F8 A7           	and a
 700+ 94F9 C8           	ret z
 701+ 94FA ED 73 8D 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 94FE 31 00 70     	ld sp,Album_de_fotos
 703+ 9501
 704+ 9501 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 9503 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 9504 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 9505
 708+ 9505 ED 73 8F 89  	ld (Stack_2),sp
 709+ 9509 ED 7B 8D 89  	ld sp,(Stack)
 710+ 950D
 711+ 950D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 950D
 713+ 950D 3E CD        	ld a,$cd
 714+ 950F 32 17 95     	ld (Imprime),a
 715+ 9512 EB           	ex de,hl
 716+ 9513 22 18 95     	ld (Imprime+1),hl
 717+ 9516 EB           	ex de,hl
 718+ 9517
 719+ 9517              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 9517
 721+ 9517 00 00 00     Imprime db 0,0,0
 722+ 951A
 723+ 951A 3A 88 89     	ld a,(Numero_de_malotes)
 724+ 951D 3D           	dec a
 725+ 951E 28 09        	jr z,1F
 726+ 9520 32 88 89      	ld (Numero_de_malotes),a
 727+ 9523
 728+ 9523 ED 7B 8F 89   	ld sp,(Stack_2)
 729+ 9527 18 D8        	jr 2B
 730+ 9529
 731+ 9529 AF           1 xor a
 732+ 952A 32 8F 89     	ld (Stack_2),a
 733+ 952D C9           	ret
 734+ 952E
 735+ 952E              ; -----------------------------------------------------------------------------------
 736+ 952E              ;
 737+ 952E              ;	28/2/23
 738+ 952E              ;
 739+ 952E              ;	Pinta los disparos generados.
 740+ 952E
 741+ 952E              Extrae_foto_disparos
 742+ 952E
 743+ 952E 3A 95 89     	ld a,(Numero_de_disparotes)
 744+ 9531 A7           	and a
 745+ 9532 C8           	ret z
 746+ 9533 ED 73 8D 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9537 31 85 70     	ld sp,Album_de_fotos_disparos
 748+ 953A
 749+ 953A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 953C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 953D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 953E
 753+ 953E ED 73 8F 89  	ld (Stack_2),sp
 754+ 9542 ED 7B 8D 89  	ld sp,(Stack)
 755+ 9546
 756+ 9546              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9546
 758+ 9546 3E CD        	ld a,$cd
 759+ 9548 32 50 95     	ld (Imprime2),a
 760+ 954B EB           	ex de,hl
 761+ 954C 22 51 95     	ld (Imprime2+1),hl
 762+ 954F EB           	ex de,hl
 763+ 9550
 764+ 9550              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9550
 766+ 9550 00 00 00     Imprime2 db 0,0,0
 767+ 9553
 768+ 9553 3A 95 89     	ld a,(Numero_de_disparotes)
 769+ 9556 3D           	dec a
 770+ 9557 28 09        	jr z,1F
 771+ 9559 32 95 89      	ld (Numero_de_disparotes),a
 772+ 955C
 773+ 955C ED 7B 8F 89  	ld sp,(Stack_2)
 774+ 9560 18 D8        	jr 2B
 775+ 9562
 776+ 9562 AF           1 xor a
 777+ 9563 32 8F 89     	ld (Stack_2),a
 778+ 9566 C9           	ret
 779+ 9567
# file closed: Draw_XOR.asm
1232  9567              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9567              ;   índices de Rutinas de impresión.
   2+ 9567
   3+ 9567 77 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9569 A4 95            defw Pinta_Amadeus_3x2
   5+ 956B
   6+ 956B FA 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 956D 9A 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 956F 4E 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9571
  10+ 9571 24 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9573 28 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9575 DC 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9577
  14+ 9577
  15+ 9577              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9577              ;
  17+ 9577              ;   12/12/22
  18+ 9577              ;
  19+ 9577              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9577              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9577              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9577              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9577              ;
  24+ 9577              ;   Modifica: DE y HL.
  25+ 9577
  26+ 9577 ED 73 8D 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 957B FD F9        	ld sp,iy
  28+ 957D 06 10            ld b,16
  29+ 957F D1           1 pop de
  30+ 9580 7B               ld a,e
  31+ 9581 AE               xor (hl)
  32+ 9582 77           	ld (hl),a
  33+ 9583 23           	inc hl
  34+ 9584 7A               ld a,d
  35+ 9585 AE               xor (hl)
  36+ 9586 77           	ld (hl),a
  37+ 9587 2B           	dec hl
  38+ 9588 24           	inc h
  39+ 9589 7C               ld a,h
  40+ 958A E6 07            and 7
  41+ 958C 20 0A            jr nz,2F
  42+ 958E 7D               ld a,l
  43+ 958F C6 20            add a,$20
  44+ 9591 6F               ld l,a
  45+ 9592 38 04            jr c,2F
  46+ 9594 7C               ld a,h
  47+ 9595 D6 08            sub 8
  48+ 9597 67               ld h,a
  49+ 9598 7C           2 ld a,h
  50+ 9599 FE 58            cp $58
  51+ 959B 28 02            jr z,3F
  52+ 959D 10 E0            djnz 1B
  53+ 959F ED 7B 8D 89  3 ld sp,(Stack)
  54+ 95A3 C9           	ret
  55+ 95A4
  56+ 95A4 ED 73 8D 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95A8 FD F9        	ld sp,iy
  58+ 95AA 06 08            ld b,8
  59+ 95AC D1           1 pop de
  60+ 95AD 7B               ld a,e
  61+ 95AE AE               xor (hl)
  62+ 95AF 77           	ld (hl),a
  63+ 95B0 23           	inc hl
  64+ 95B1 7A               ld a,d
  65+ 95B2 AE               xor (hl)
  66+ 95B3 77           	ld (hl),a
  67+ 95B4 23           	inc hl
  68+ 95B5 D1           	pop de
  69+ 95B6 7B               ld a,e
  70+ 95B7 AE               xor (hl)
  71+ 95B8 77           	ld (hl),a
  72+ 95B9 2B           	dec hl
  73+ 95BA 2B           	dec hl
  74+ 95BB 24           	inc h
  75+ 95BC 7C               ld a,h
  76+ 95BD E6 07            and 7
  77+ 95BF 20 0A            jr nz,2F
  78+ 95C1 7D               ld a,l
  79+ 95C2 C6 20            add a,$20
  80+ 95C4 6F               ld l,a
  81+ 95C5 38 04            jr c,2F
  82+ 95C7 7C               ld a,h
  83+ 95C8 D6 08            sub 8
  84+ 95CA 67               ld h,a
  85+ 95CB 7C           2 ld a,h
  86+ 95CC FE 58            cp $58
  87+ 95CE 28 25            jr z,4F
  88+ 95D0 7A               ld a,d
  89+ 95D1 AE               xor (hl)
  90+ 95D2 77               ld (hl),a
  91+ 95D3 D1           	pop de
  92+ 95D4 23           	inc hl
  93+ 95D5 7B               ld a,e
  94+ 95D6 AE               xor (hl)
  95+ 95D7 77           	ld (hl),a
  96+ 95D8 23           	inc hl
  97+ 95D9 7A               ld a,d
  98+ 95DA AE               xor (hl)
  99+ 95DB 77           	ld (hl),a
 100+ 95DC 2B           	dec hl
 101+ 95DD 2B           	dec hl
 102+ 95DE 24           	inc h
 103+ 95DF 7C               ld a,h
 104+ 95E0 E6 07            and 7
 105+ 95E2 20 0A            jr nz,3F
 106+ 95E4 7D               ld a,l
 107+ 95E5 C6 20            add a,$20
 108+ 95E7 6F               ld l,a
 109+ 95E8 38 04            jr c,3F
 110+ 95EA 7C               ld a,h
 111+ 95EB D6 08            sub 8
 112+ 95ED 67               ld h,a
 113+ 95EE 7C           3 ld a,h
 114+ 95EF FE 58            cp $58
 115+ 95F1 28 02            jr z,4F
 116+ 95F3 10 B7            djnz 1B
 117+ 95F5 ED 7B 8D 89  4 ld sp,(Stack)
 118+ 95F9 C9           	ret
 119+ 95FA
 120+ 95FA              ; ---------------------------------------------------
 121+ 95FA
 122+ 95FA ED 73 8D 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 95FE FD F9        	ld sp,iy
 124+ 9600
 125+ 9600              ; >>>
 126+ 9600
 127+ 9600 06 10            ld b,16
 128+ 9602 D1           1 pop de
 129+ 9603 7A           	ld a,d
 130+ 9604 AE           	xor (hl)
 131+ 9605 77           	ld (hl),a
 132+ 9606 24           	inc h
 133+ 9607 7C               ld a,h
 134+ 9608 E6 07            and 7
 135+ 960A 20 0C            jr nz,2F
 136+ 960C 7D               ld a,l
 137+ 960D C6 20            add a,$20
 138+ 960F 6F               ld l,a
 139+ 9610 38 06            jr c,2F
 140+ 9612 7C               ld a,h
 141+ 9613 D6 08            sub 8
 142+ 9615 67               ld h,a
 143+ 9616 18 00            jr 2F
 144+ 9618 7C           2 ld a,h
 145+ 9619 FE 58            cp $58
 146+ 961B 28 02            jr z,3F
 147+ 961D 10 E3            djnz 1B
 148+ 961F ED 7B 8D 89  3 ld sp,(Stack)
 149+ 9623 C9           	ret
 150+ 9624
 151+ 9624 ED 73 8D 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9628 FD F9        	ld sp,iy
 153+ 962A
 154+ 962A              ; >>>
 155+ 962A
 156+ 962A 06 10            ld b,16
 157+ 962C D1           1 pop de
 158+ 962D 7B           	ld a,e
 159+ 962E AE           	xor (hl)
 160+ 962F 77           	ld (hl),a
 161+ 9630 24           	inc h
 162+ 9631 7C               ld a,h
 163+ 9632 E6 07            and 7
 164+ 9634 20 0C            jr nz,2F
 165+ 9636 7D               ld a,l
 166+ 9637 C6 20            add a,$20
 167+ 9639 6F               ld l,a
 168+ 963A 38 06            jr c,2F
 169+ 963C 7C               ld a,h
 170+ 963D D6 08            sub 8
 171+ 963F 67               ld h,a
 172+ 9640 18 00            jr 2F
 173+ 9642 7C           2 ld a,h
 174+ 9643 FE 58            cp $58
 175+ 9645 28 02            jr z,3F
 176+ 9647 10 E3            djnz 1B
 177+ 9649 ED 7B 8D 89  3 ld sp,(Stack)
 178+ 964D C9           	ret
 179+ 964E
 180+ 964E              ; ---------------------------------------------------
 181+ 964E
 182+ 964E ED 73 8D 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9652 FD F9        	ld sp,iy
 184+ 9654 06 08            ld b,8
 185+ 9656 D1           1 pop de
 186+ 9657 7A           	ld a,d
 187+ 9658 AE           	xor (hl)
 188+ 9659 77           	ld (hl),a
 189+ 965A 23           	inc hl
 190+ 965B D1           	pop de
 191+ 965C 7B           	ld a,e
 192+ 965D AE           	xor (hl)
 193+ 965E 77           	ld (hl),a
 194+ 965F 2B           	dec hl
 195+ 9660 24            	inc h
 196+ 9661 7C               ld a,h
 197+ 9662 E6 07            and 7
 198+ 9664 20 0A            jr nz,2F
 199+ 9666 7D               ld a,l
 200+ 9667 C6 20            add a,$20
 201+ 9669 6F               ld l,a
 202+ 966A 38 04            jr c,2F
 203+ 966C 7C               ld a,h
 204+ 966D D6 08            sub 8
 205+ 966F 67               ld h,a
 206+ 9670 7C           2 ld a,h
 207+ 9671 FE 58            cp $58
 208+ 9673 28 20            jr z,4F
 209+ 9675 D1               pop de
 210+ 9676 7B           	ld a,e
 211+ 9677 AE           	xor (hl)
 212+ 9678 77           	ld (hl),a
 213+ 9679 23           	inc hl
 214+ 967A 7A           	ld a,d
 215+ 967B AE           	xor (hl)
 216+ 967C 77           	ld (hl),a
 217+ 967D 2B           	dec hl
 218+ 967E 24           	inc h
 219+ 967F 7C               ld a,h
 220+ 9680 E6 07            and 7
 221+ 9682 20 0A            jr nz,3F
 222+ 9684 7D               ld a,l
 223+ 9685 C6 20            add a,$20
 224+ 9687 6F               ld l,a
 225+ 9688 38 04            jr c,3F
 226+ 968A 7C               ld a,h
 227+ 968B D6 08            sub 8
 228+ 968D 67               ld h,a
 229+ 968E 7C           3 ld a,h
 230+ 968F FE 58            cp $58
 231+ 9691 28 02            jr z,4F
 232+ 9693 10 C1            djnz 1B
 233+ 9695 ED 7B 8D 89  4 ld sp,(Stack)
 234+ 9699 C9           	ret
 235+ 969A
 236+ 969A ED 73 8D 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 969E FD F9        	ld sp,iy
 238+ 96A0 06 08            ld b,8
 239+ 96A2 D1           1 pop de
 240+ 96A3 D1           	pop de
 241+ 96A4 7B           	ld a,e
 242+ 96A5 AE           	xor (hl)
 243+ 96A6 77           	ld (hl),a
 244+ 96A7 24            	inc h
 245+ 96A8 7C               ld a,h
 246+ 96A9 E6 07            and 7
 247+ 96AB 20 0A            jr nz,2F
 248+ 96AD 7D               ld a,l
 249+ 96AE C6 20            add a,$20
 250+ 96B0 6F               ld l,a
 251+ 96B1 38 04            jr c,2F
 252+ 96B3 7C               ld a,h
 253+ 96B4 D6 08            sub 8
 254+ 96B6 67               ld h,a
 255+ 96B7 7C           2 ld a,h
 256+ 96B8 FE 58            cp $58
 257+ 96BA 28 1B            jr z,4F
 258+ 96BC D1               pop de
 259+ 96BD 7A           	ld a,d
 260+ 96BE AE           	xor (hl)
 261+ 96BF 77           	ld (hl),a
 262+ 96C0 24           	inc h
 263+ 96C1 7C               ld a,h
 264+ 96C2 E6 07            and 7
 265+ 96C4 20 0A            jr nz,3F
 266+ 96C6 7D               ld a,l
 267+ 96C7 C6 20            add a,$20
 268+ 96C9 6F               ld l,a
 269+ 96CA 38 04            jr c,3F
 270+ 96CC 7C               ld a,h
 271+ 96CD D6 08            sub 8
 272+ 96CF 67               ld h,a
 273+ 96D0 7C           3 ld a,h
 274+ 96D1 FE 58            cp $58
 275+ 96D3 28 02            jr z,4F
 276+ 96D5 10 CB            djnz 1B
 277+ 96D7 ED 7B 8D 89  4 ld sp,(Stack)
 278+ 96DB C9           	ret
 279+ 96DC
 280+ 96DC ED 73 8D 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 96E0 FD F9        	ld sp,iy
 282+ 96E2 06 08            ld b,8
 283+ 96E4 D1           1 pop de
 284+ 96E5 7B           	ld a,e
 285+ 96E6 AE           	xor (hl)
 286+ 96E7 77           	ld (hl),a
 287+ 96E8 23           	inc hl
 288+ 96E9 7A           	ld a,d
 289+ 96EA AE           	xor (hl)
 290+ 96EB 77           	ld (hl),a
 291+ 96EC 2B           	dec hl
 292+ 96ED 24             	inc h
 293+ 96EE 7C               ld a,h
 294+ 96EF E6 07            and 7
 295+ 96F1 20 0A            jr nz,2F
 296+ 96F3 7D               ld a,l
 297+ 96F4 C6 20            add a,$20
 298+ 96F6 6F               ld l,a
 299+ 96F7 38 04            jr c,2F
 300+ 96F9 7C               ld a,h
 301+ 96FA D6 08            sub 8
 302+ 96FC 67               ld h,a
 303+ 96FD 7C           2 ld a,h
 304+ 96FE FE 58            cp $58
 305+ 9700 28 21            jr z,4F
 306+ 9702 D1               pop de
 307+ 9703 7A           	ld a,d
 308+ 9704 AE           	xor (hl)
 309+ 9705 77           	ld (hl),a
 310+ 9706 23           	inc hl
 311+ 9707 D1               pop de
 312+ 9708 7B           	ld a,e
 313+ 9709 AE           	xor (hl)
 314+ 970A 77           	ld (hl),a
 315+ 970B 2B           	dec hl
 316+ 970C 24           	inc h
 317+ 970D 7C               ld a,h
 318+ 970E E6 07            and 7
 319+ 9710 20 0A            jr nz,3F
 320+ 9712 7D               ld a,l
 321+ 9713 C6 20            add a,$20
 322+ 9715 6F               ld l,a
 323+ 9716 38 04            jr c,3F
 324+ 9718 7C               ld a,h
 325+ 9719 D6 08            sub 8
 326+ 971B 67               ld h,a
 327+ 971C 7C           3 ld a,h
 328+ 971D FE 58            cp $58
 329+ 971F 28 02            jr z,4F
 330+ 9721 10 C1            djnz 1B
 331+ 9723 ED 7B 8D 89  4 ld sp,(Stack)
 332+ 9727 C9           	ret
 333+ 9728
 334+ 9728 ED 73 8D 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 972C FD F9        	ld sp,iy
 336+ 972E 06 08            ld b,8
 337+ 9730 D1           1 pop de
 338+ 9731 7B           	ld a,e
 339+ 9732 AE           	xor (hl)
 340+ 9733 77           	ld (hl),a
 341+ 9734 24            	inc h
 342+ 9735 7C               ld a,h
 343+ 9736 E6 07            and 7
 344+ 9738 20 0A            jr nz,2F
 345+ 973A 7D               ld a,l
 346+ 973B C6 20            add a,$20
 347+ 973D 6F               ld l,a
 348+ 973E 38 04            jr c,2F
 349+ 9740 7C               ld a,h
 350+ 9741 D6 08            sub 8
 351+ 9743 67               ld h,a
 352+ 9744 7C           2 ld a,h
 353+ 9745 FE 58            cp $58
 354+ 9747 28 1C            jr z,4F
 355+ 9749 D1               pop de
 356+ 974A 7A           	ld a,d
 357+ 974B AE           	xor (hl)
 358+ 974C 77           	ld (hl),a
 359+ 974D 24           	inc h
 360+ 974E 7C               ld a,h
 361+ 974F E6 07            and 7
 362+ 9751 20 0A            jr nz,3F
 363+ 9753 7D               ld a,l
 364+ 9754 C6 20            add a,$20
 365+ 9756 6F               ld l,a
 366+ 9757 38 04            jr c,3F
 367+ 9759 7C               ld a,h
 368+ 975A D6 08            sub 8
 369+ 975C 67               ld h,a
 370+ 975D 7C           3 ld a,h
 371+ 975E FE 58            cp $58
 372+ 9760 28 03            jr z,4F
 373+ 9762 D1               pop de
 374+ 9763 10 CB            djnz 1B
 375+ 9765 ED 7B 8D 89  4 ld sp,(Stack)
 376+ 9769 C9           	ret
 377+ 976A
 378+ 976A              ; ---------------------------------------------------
 379+ 976A              ;
 380+ 976A              ;   27/02/23
 381+ 976A              ;
 382+ 976A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 976A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 976A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 976A
 386+ 976A ED 73 8D 89  Pinta_Disparo ld (Stack),sp
 387+ 976E FD F9            ld sp,iy
 388+ 9770 06 02            ld b,2
 389+ 9772 D1           1 pop de
 390+ 9773 7B               ld a,e
 391+ 9774 AE               xor (hl)
 392+ 9775 77               ld (hl),a
 393+ 9776 23               inc hl
 394+ 9777 7A               ld a,d
 395+ 9778 AE               xor (hl)
 396+ 9779 77               ld (hl),a
 397+ 977A 2B               dec hl
 398+ 977B
 399+ 977B 24               inc h
 400+ 977C 7C               ld a,h
 401+ 977D E6 07            and 7
 402+ 977F 20 0A            jr nz,2F
 403+ 9781 7D               ld a,l
 404+ 9782 C6 20            add a,$20
 405+ 9784 6F               ld l,a
 406+ 9785 38 04            jr c,2F
 407+ 9787 7C               ld a,h
 408+ 9788 D6 08            sub 8
 409+ 978A 67               ld h,a
 410+ 978B 7C           2 ld a,h
 411+ 978C FE 58            cp $58
 412+ 978E 28 02            jr z,3F
 413+ 9790
 414+ 9790 10 E0            djnz 1B
 415+ 9792 ED 7B 8D 89  3 ld sp,(Stack)
 416+ 9796 C9               ret
 417+ 9797
# file closed: Rutinas_de_impresion_sprites.asm
1233  9797              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9797              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9797              ;
   3+ 9797              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9797              ;
   5+ 9797              ; *****************************************************************************************************************************************************************************************
   6+ 9797              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9797
   8+ 9797 7C           calcula_tercio ld a,h
   9+ 9798 E6 18        	and $18
  10+ 979A CB 2F        	sra a
  11+ 979C CB 2F        	sra a
  12+ 979E CB 2F        	sra a
  13+ 97A0 C9           	ret
  14+ 97A1
# file closed: calcula_tercio.asm
1234  97A1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97A1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97A1              ;
   3+ 97A1              ;
   4+ 97A1              ;	CLS.
   5+ 97A1              ;
   6+ 97A1              ;	Limpia la pantalla y define sus atributos.
   7+ 97A1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97A1              ;
   9+ 97A1              ;	COLORES: 0 ..... NEGRO
  10+ 97A1              ;    		 1 ..... AZUL
  11+ 97A1              ; 			 2 ..... ROJO
  12+ 97A1              ;			 3 ..... MAGENTA
  13+ 97A1              ; 			 4 ..... VERDE
  14+ 97A1              ; 			 5 ..... CIAN
  15+ 97A1              ;			 6 ..... AMARILLO
  16+ 97A1              ; 			 7 ..... BLANCO
  17+ 97A1              ;
  18+ 97A1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97A1              ;
  20+ 97A1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97A1
  22+ 97A1
  23+ 97A1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97A4 11 01 40     	LD DE,$4001
  25+ 97A7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97AA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97AC ED B0        	LDIR
  28+ 97AE 01 FF 02     	LD BC,767
  29+ 97B1 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 97B2 ED B0        	LDIR
  31+ 97B4 C9           	ret
  32+ 97B5
# file closed: Cls.asm
1235  97B5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 97B5              ; ******************************************************************************************************************************************************************************************
   2+ 97B5              ;
   3+ 97B5              ;   20/05/23
   4+ 97B5              ;
   5+ 97B5              ;	Recompone_posicion_inicio
   6+ 97B5              ;
   7+ 97B5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 97B5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 97B5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 97B5              ;	_ a una u otra rutina.
  11+ 97B5
  12+ 97B5              Recompone_posicion_inicio
  13+ 97B5
  14+ 97B5 2A 50 89     	ld hl,(Posicion_inicio)
  15+ 97B8 7D           	ld a,l
  16+ 97B9 E6 1F        	and $1f
  17+ 97BB 28 16        	jr z,1F
  18+ 97BD
  19+ 97BD FE 1F        	cp $1f
  20+ 97BF 28 0D        	jr z,3F
  21+ 97C1
  22+ 97C1 21 7A 89     	ld hl,Ctrl_2
  23+ 97C4 CB CE        	set 1,(hl)
  24+ 97C6 2A 42 89     	ld hl,(Puntero_objeto)
  25+ 97C9 22 7D 89     	ld (Repone_puntero_objeto),hl
  26+ 97CC 18 08        	jr 2F
  27+ 97CE
  28+ 97CE CD 6F 99     3 call Mov_left
  29+ 97D1 18 03        	jr 2F
  30+ 97D3
  31+ 97D3 CD 51 98     1 call Mov_right
  32+ 97D6 21 00 F0     2 ld hl,Sprite_vacio
  33+ 97D9 22 42 89     	ld (Puntero_objeto),hl
  34+ 97DC C9           	ret
  35+ 97DD
  36+ 97DD              ; ******************************************************************************************************************************************************************************************
  37+ 97DD              ;
  38+ 97DD              ;   27/05/23
  39+ 97DD              ;
  40+ 97DD              ;	Mov_down
  41+ 97DD              ;
  42+ 97DD              ; 	Mueve el Sprite X px hacia abajo.
  43+ 97DD              ;
  44+ 97DD              ;
  45+ 97DD              Mov_down
  46+ 97DD
  47+ 97DD CD 3F 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 97E0              ;																	; _ repone (Puntero_objeto).
  49+ 97E0 21 6C 89     	ld hl,Ctrl_0
  50+ 97E3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 97E5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 97E5              ; 																	; _ en el caso de que no lo haya.
  53+ 97E5 3A 56 89     	ld a,(Vel_down)
  54+ 97E8 47           	ld b,a
  55+ 97E9 2A 40 89         ld hl,(Posicion_actual)
  56+ 97EC CD 97 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 97EF E6 02        	and 2
  58+ 97F1 28 0F        	jr z,1F
  59+ 97F3
  60+ 97F3              ; Nos encontramos en el último tercio de pantalla.
  61+ 97F3              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 97F3
  63+ 97F3 7C           	ld a,h
  64+ 97F4 FE 57        	cp $57
  65+ 97F6 20 0A        	jr nz,1F
  66+ 97F8 7D           	ld a,l
  67+ 97F9 C6 20        	add $20
  68+ 97FB 30 05        	jr nc,1F
  69+ 97FD
  70+ 97FD              ; ------------------------------
  71+ 97FD CD ED 9A     	call Reaparece_arriba
  72+ 9800              ;	call Reinicio
  73+ 9800              ; ------------------------------
  74+ 9800
  75+ 9800 18 08        	jr 3F
  76+ 9802 CD D7 94     1 call NextScan
  77+ 9805 22 40 89     	ld (Posicion_actual),hl
  78+ 9808 10 E2            djnz 2B
  79+ 980A CD 03 9B     3 call Genera_coordenadas
  80+ 980D C9           	ret
  81+ 980E
  82+ 980E              ; ******************************************************************************************************************************************************************************************
  83+ 980E              ;
  84+ 980E              ;   27/05/23
  85+ 980E              ;
  86+ 980E              ;	Mov_up
  87+ 980E              ;
  88+ 980E              ; 	Mueve el Sprite hacia arriba.
  89+ 980E              ;
  90+ 980E              ;
  91+ 980E              Mov_up
  92+ 980E
  93+ 980E CD 3F 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9811              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9811 21 6C 89     	ld hl,Ctrl_0
  96+ 9814 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9816              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9816              ; 																		; _ en el caso de que no lo haya.
  99+ 9816 3A 55 89     	ld a,(Vel_up)
 100+ 9819 47           	ld b,a
 101+ 981A 2A 40 89     	ld hl,(Posicion_actual)
 102+ 981D CD 97 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9820 A7           	and a
 104+ 9821 20 10        	jr nz,1F
 105+ 9823
 106+ 9823              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9823              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9823
 109+ 9823 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9824 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9826 20 0B            jr nz,1F
 112+ 9828 7D               ld a,l
 113+ 9829 D6 20            sub $20
 114+ 982B 30 06            jr nc,1F
 115+ 982D 25               dec h
 116+ 982E
 117+ 982E              ; -----------------------------
 118+ 982E CD DD 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9831              ;	call Reinicio
 120+ 9831              ; -----------------------------
 121+ 9831
 122+ 9831 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9833 CD E6 94     1 call PreviousScan
 124+ 9836 22 40 89     	ld (Posicion_actual),hl
 125+ 9839 10 E2            djnz 3B
 126+ 983B CD 03 9B     2 call Genera_coordenadas
 127+ 983E C9           	ret
 128+ 983F
 129+ 983F              ; -----------------------------
 130+ 983F              ;
 131+ 983F              ;	27/5/23
 132+ 983F              ;
 133+ 983F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 983F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 983F              ;
 136+ 983F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 983F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 983F              ;
 139+ 983F              ;	Modifica: A y (Puntero_objeto).
 140+ 983F
 141+ 983F 3A 7A 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9842 CB 4F        	bit 1,a
 143+ 9844 C8           	ret z
 144+ 9845 CB 8F        	res 1,a
 145+ 9847 32 7A 89     	ld (Ctrl_2),a
 146+ 984A 2A 7D 89     	ld hl,(Repone_puntero_objeto)
 147+ 984D 22 42 89     	ld (Puntero_objeto),hl
 148+ 9850 C9           	ret
 149+ 9851
 150+ 9851              ; ******************************************************************************************************************************************************************************************
 151+ 9851              ;
 152+ 9851              ;	19/10/22
 153+ 9851              ;
 154+ 9851              ;	Mov_right.
 155+ 9851              ;
 156+ 9851              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9851              ;
 158+ 9851
 159+ 9851 21 6C 89     Mov_right ld hl,Ctrl_0
 160+ 9854 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9856              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9856              ; 																	; _ en el caso de que no lo haya.
 163+ 9856 3A 6C 89     	ld a,(Ctrl_0)
 164+ 9859 CB 77        	bit 6,a
 165+ 985B 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 985D
 167+ 985D CD 8B 9A     	call Stop_Amadeus_right
 168+ 9860 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 9861 18 4D        	jr 8F
 170+ 9863
 171+ 9863 3A 44 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 9866 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 9868 20 46        	jr nz,8F
 174+ 986A
 175+ 986A 3A 46 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 986D A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 986E 28 40        	jr z,8F
 178+ 9870
 179+ 9870              ; ---------- ---------- ----------
 180+ 9870              ;
 181+ 9870              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 9870
 183+ 9870 3A 54 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 9873 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 9875 28 11        	jr z,1F
 186+ 9877 38 06        	jr c,6F
 187+ 9879 FE 04        	cp 4
 188+ 987B 28 14        	jr z,7F
 189+ 987D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 987F
 191+ 987F              ; ---------- ---------- ----------
 192+ 987F              ;
 193+ 987F              ; Perfiles de velocidad
 194+ 987F              ;
 195+ 987F
 196+ 987F 3A 46 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 9882 FE FE        	cp $fe
 198+ 9884 20 2A        	jr nz,8F
 199+ 9886 18 10        	jr 3F
 200+ 9888 3A 46 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 988B FE FD        	cp $fd
 202+ 988D 20 21        	jr nz,8F
 203+ 988F 18 07        	jr 3F
 204+ 9891 3A 46 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 9894 FE FB        	cp $fb
 206+ 9896 20 18        	jr nz,8F
 207+ 9898
 208+ 9898              ; ---------- ---------- ----------
 209+ 9898
 210+ 9898              3
 211+ 9898 CD CB 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 989B              ;	call Reinicio
 213+ 989B
 214+ 989B              ; ---------- ---------- ----------
 215+ 989B              ;
 216+ 989B              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 989B
 218+ 989B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 989D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 989E CD B7 98     	call DESPLZ_DER
 221+ 98A1 C1           	pop bc
 222+ 98A2 10 F9        	djnz 5B
 223+ 98A4 2A 40 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 98A7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 98A8 22 40 89     	ld (Posicion_actual),hl
 226+ 98AB CD 03 9B     	call Genera_coordenadas
 227+ 98AE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 98B0
 229+ 98B0              ; ---------- ---------- ----------
 230+ 98B0
 231+ 98B0 2A 40 89     8 ld hl,(Posicion_actual)
 232+ 98B3 CD B7 98     	call DESPLZ_DER
 233+ 98B6 C9           2 ret
 234+ 98B7
 235+ 98B7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 98B7              ;
 237+ 98B7              ;	22/9/22
 238+ 98B7              ;
 239+ 98B7
 240+ 98B7 CD C6 98     DESPLZ_DER call Desplaza_derecha
 241+ 98BA CD 12 99         call modifica_parametros_1er_DESPLZ_2
 242+ 98BD CD 3B 99         call Ciclo_completo
 243+ 98C0 21 6C 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 98C3 CB FE        	set 7,(hl)
 245+ 98C5 C9           	ret
 246+ 98C6
 247+ 98C6              ; ******************************************************************************************************************************************************************************************
 248+ 98C6              ;	15/02/23
 249+ 98C6              ;
 250+ 98C6
 251+ 98C6 3A 54 89     Desplaza_derecha ld a,(Vel_right)
 252+ 98C9 47           	ld b,a
 253+ 98CA 2A 4C 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 98CD 23           1 inc hl
 255+ 98CE 23           	inc hl
 256+ 98CF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 98D1 22 4C 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 98D4 CD A0 8C     	call Extrae_address
 259+ 98D7 22 42 89     	ld (Puntero_objeto),hl
 260+ 98DA
 261+ 98DA              ; Modifica (Puntero_DESPLZ_izq).
 262+ 98DA
 263+ 98DA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 98DA              ; Cuántos movimientos hemos hecho ??
 265+ 98DA              ; DE contiene (Puntero_DESPLZ_der).
 266+ 98DA
 267+ 98DA 2A 48 89     7 ld hl,(Indice_Sprite_der)
 268+ 98DD EB           	ex de,hl
 269+ 98DE A7           	and a
 270+ 98DF ED 52        	sbc hl,de
 271+ 98E1 CB 3D        	srl l
 272+ 98E3 3E 08        6 ld a,8
 273+ 98E5 95           	sub l
 274+ 98E6 30 1E        	jr nc,3F
 275+ 98E8
 276+ 98E8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 98E8              ; B="0".
 278+ 98E8
 279+ 98E8 04           4 inc b
 280+ 98E9 3C           	inc a
 281+ 98EA 20 FC        	jr nz,4B
 282+ 98EC 78           	ld a,b
 283+ 98ED 08           	ex af,af
 284+ 98EE 2A 48 89     	ld hl,(Indice_Sprite_der)
 285+ 98F1 23           5 inc hl
 286+ 98F2 23           	inc hl
 287+ 98F3 10 FC        	djnz 5B
 288+ 98F5 22 4C 89     	ld (Puntero_DESPLZ_der),hl
 289+ 98F8 CD A0 8C     	call Extrae_address
 290+ 98FB 22 42 89     	ld (Puntero_objeto),hl
 291+ 98FE
 292+ 98FE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 98FE              ; _(Posicion_actual).
 294+ 98FE
 295+ 98FE 21 40 89     	ld hl,Posicion_actual
 296+ 9901 34           	inc (hl)
 297+ 9902 08               ex af,af
 298+ 9903 6F           	ld l,a
 299+ 9904 18 DD        	jr 6B
 300+ 9906
 301+ 9906              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9906
 303+ 9906 47           3 ld b,a
 304+ 9907 2A 4A 89     	ld hl,(Indice_Sprite_izq)
 305+ 990A 23           2 inc hl
 306+ 990B 23           	inc hl
 307+ 990C 10 FC        	djnz 2B
 308+ 990E 22 4E 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9911 C9           8 ret
 310+ 9912
 311+ 9912              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9912              ;
 313+ 9912              ;	24/7/22
 314+ 9912              ;
 315+ 9912              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9912              ;
 317+ 9912              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9912              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9912              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9912
 321+ 9912 3A 46 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9915 A7           	and a
 323+ 9916 20 1F        	jr nz,1F
 324+ 9918 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 991A 32 46 89         ld (CTRL_DESPLZ),a
 326+ 991D
 327+ 991D 21 3F 89     	ld hl,Columns
 328+ 9920 34           	inc (hl)
 329+ 9921 3A 52 89     	ld a,(Cuad_objeto)
 330+ 9924 E6 01        	and 1
 331+ 9926 28 0F        	jr z,1F
 332+ 9928 2A 40 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 992B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 992C 22 40 89     	ld (Posicion_actual),hl
 335+ 992F CD 03 9B     	call Genera_coordenadas
 336+ 9932 CD 97 9A     	call Inc_CTRL_DESPLZ
 337+ 9935 18 03        	jr 2F
 338+ 9937 CD 97 9A     1 call Inc_CTRL_DESPLZ
 339+ 993A C9           2 ret
 340+ 993B
 341+ 993B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 993B              ;
 343+ 993B              ;	24/7/22
 344+ 993B              ;
 345+ 993B              ;	Ciclo_completo.
 346+ 993B              ;
 347+ 993B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 993B              ;
 349+ 993B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 993B              ; 	Decrementamos (Columns).
 351+ 993B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 993B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 993B
 354+ 993B
 355+ 993B 3A 46 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 993E FE FF        	cp $ff
 357+ 9940 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9942 E6 F0        	and $f0
 359+ 9944 20 28        	jr nz,3F
 360+ 9946
 361+ 9946              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9946
 363+ 9946 3A 46 89     	ld a,(CTRL_DESPLZ)
 364+ 9949 47           	ld b,a
 365+ 994A 3E F8        	ld a,$f8
 366+ 994C 80           	add b
 367+ 994D 32 46 89     	ld (CTRL_DESPLZ),a
 368+ 9950 18 1C        	jr 3F
 369+ 9952 21 3F 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9955 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9956 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9957 32 46 89     	ld (CTRL_DESPLZ),a
 373+ 995A 3A 52 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 995D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 995F 20 0A        	jr nz,2F
 376+ 9961 2A 40 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9964 23           	inc hl
 378+ 9965 22 40 89     	ld (Posicion_actual),hl
 379+ 9968 CD 03 9B     	call Genera_coordenadas
 380+ 996B
 381+ 996B              ; Inicia el puntero de Sprite.
 382+ 996B
 383+ 996B CD B7 8C     2 call Inicia_puntero_objeto_der
 384+ 996E C9           3 ret
 385+ 996F
 386+ 996F              ; ******************************************************************************************************************************************************************************************
 387+ 996F              ;
 388+ 996F              ;	15/02/23
 389+ 996F              ;
 390+ 996F              ;	Mov_left.
 391+ 996F              ;
 392+ 996F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 996F              ;
 394+ 996F 21 6C 89     Mov_left ld hl,Ctrl_0
 395+ 9972 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9974              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9974              ; 																	; _ en el caso de que no lo haya.
 398+ 9974 3A 6C 89     	ld a,(Ctrl_0)
 399+ 9977 CB 77        	bit 6,a
 400+ 9979 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 997B
 402+ 997B CD 91 9A     	call Stop_Amadeus_left
 403+ 997E C8           	ret z
 404+ 997F 20 4A        	jr nz,8F
 405+ 9981
 406+ 9981 3A 44 89     11 ld a,(Coordenada_X)
 407+ 9984 A7           	and a
 408+ 9985 20 44        	jr nz,8F
 409+ 9987
 410+ 9987 3A 46 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 998A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 998B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 998D
 414+ 998D              ; ---------- ---------- ----------
 415+ 998D
 416+ 998D 3A 53 89     	ld a,(Vel_left)
 417+ 9990 FE 02        	cp 2
 418+ 9992 28 0F        	jr z,1F
 419+ 9994 38 04        	jr c,6F
 420+ 9996 FE 04        	cp 4
 421+ 9998 28 12        	jr z,7F
 422+ 999A
 423+ 999A              ; ---------- ---------- ----------
 424+ 999A
 425+ 999A 3A 46 89     6 ld a,(CTRL_DESPLZ)
 426+ 999D FE F8        	cp $f8
 427+ 999F 20 2A        	jr nz,8F
 428+ 99A1 18 10        	jr 4F
 429+ 99A3 3A 46 89     1 ld a,(CTRL_DESPLZ)
 430+ 99A6 FE F9        	cp $f9
 431+ 99A8 20 21        	jr nz,8F
 432+ 99AA 18 07        	jr 4F
 433+ 99AC 3A 46 89     7 ld a,(CTRL_DESPLZ)
 434+ 99AF FE FB        	cp $fb
 435+ 99B1 20 18        	jr nz,8F
 436+ 99B3
 437+ 99B3              ; ---------- ---------- ----------
 438+ 99B3
 439+ 99B3              4
 440+ 99B3 CD B9 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 99B6              ;	call Reinicio
 442+ 99B6
 443+ 99B6              ; ---------- ---------- ----------
 444+ 99B6
 445+ 99B6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 99B8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 99B9
 448+ 99B9              ;	ld hl,(Indice_Sprite_izq)
 449+ 99B9              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 99B9
 451+ 99B9 CD D2 99     	call DESPLZ_IZQ
 452+ 99BC C1           	pop bc
 453+ 99BD 10 F9        	djnz 5B
 454+ 99BF 2A 40 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 99C2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 99C3 22 40 89     	ld (Posicion_actual),hl
 457+ 99C6 CD 03 9B     	call Genera_coordenadas
 458+ 99C9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 99CB
 460+ 99CB              ; ---------- ---------- ----------
 461+ 99CB
 462+ 99CB              ; Movemos, no hay recolocación.
 463+ 99CB
 464+ 99CB 2A 40 89     8 ld hl,(Posicion_actual)
 465+ 99CE CD D2 99     	call DESPLZ_IZQ
 466+ 99D1 C9           2 ret
 467+ 99D2
 468+ 99D2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 99D2              ;
 470+ 99D2              ;	22/9/22
 471+ 99D2
 472+ 99D2              DESPLZ_IZQ
 473+ 99D2
 474+ 99D2 CD E1 99     	call Desplaza_izquierda
 475+ 99D5 CD 2D 9A         call modifica_parametros_1er_DESPLZ
 476+ 99D8 CD 55 9A     	call Ciclo_completo_2
 477+ 99DB 21 6C 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 99DE CB BE        	res 7,(hl)
 479+ 99E0 C9           	ret
 480+ 99E1
 481+ 99E1              Desplaza_izquierda
 482+ 99E1
 483+ 99E1 3A 53 89     	ld a,(Vel_left)
 484+ 99E4 47           	ld b,a
 485+ 99E5 2A 4E 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 99E8 23           1 inc hl
 487+ 99E9 23           	inc hl
 488+ 99EA 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 99EC 22 4E 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 99EF CD A0 8C     	call Extrae_address
 491+ 99F2 22 42 89     	ld (Puntero_objeto),hl
 492+ 99F5
 493+ 99F5              ; Modifica (Puntero_DESPLZ_der).
 494+ 99F5
 495+ 99F5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 99F5              ; Cuántos movimientos hemos hecho ??
 497+ 99F5              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 99F5
 499+ 99F5 2A 4A 89     7 ld hl,(Indice_Sprite_izq)
 500+ 99F8 EB           	ex de,hl
 501+ 99F9 A7           	and a
 502+ 99FA ED 52        	sbc hl,de
 503+ 99FC CB 3D        	srl l
 504+ 99FE 3E 08        6 ld a,8
 505+ 9A00 95           	sub l
 506+ 9A01 30 1E        	jr nc,3F
 507+ 9A03
 508+ 9A03              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9A03              ; B="0".
 510+ 9A03
 511+ 9A03 04           4 inc b
 512+ 9A04 3C           	inc a
 513+ 9A05 20 FC        	jr nz,4B
 514+ 9A07 78           	ld a,b
 515+ 9A08 08           	ex af,af
 516+ 9A09 2A 4A 89     	ld hl,(Indice_Sprite_izq)
 517+ 9A0C 23           5 inc hl
 518+ 9A0D 23           	inc hl
 519+ 9A0E 10 FC        	djnz 5B
 520+ 9A10 22 4E 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9A13 CD A0 8C     	call Extrae_address
 522+ 9A16 22 42 89     	ld (Puntero_objeto),hl
 523+ 9A19
 524+ 9A19              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9A19              ; _(Posicion_actual).
 526+ 9A19
 527+ 9A19 21 40 89     	ld hl,Posicion_actual
 528+ 9A1C 35           	dec (hl)
 529+ 9A1D 08           	ex af,af
 530+ 9A1E 6F           	ld l,a
 531+ 9A1F 18 DD        	jr 6B
 532+ 9A21
 533+ 9A21              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9A21
 535+ 9A21 47           3 ld b,a
 536+ 9A22 2A 48 89     	ld hl,(Indice_Sprite_der)
 537+ 9A25 23           2 inc hl
 538+ 9A26 23           	inc hl
 539+ 9A27 10 FC        	djnz 2B
 540+ 9A29 22 4C 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9A2C C9           8 ret
 542+ 9A2D
 543+ 9A2D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9A2D              ;
 545+ 9A2D              ;	modifica_parametros_1er_DESPLZ
 546+ 9A2D              ;
 547+ 9A2D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9A2D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9A2D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9A2D
 551+ 9A2D 3A 46 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9A30 A7           	and a
 553+ 9A31 20 1E        	jr nz,1F
 554+ 9A33 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9A34 32 46 89         ld (CTRL_DESPLZ),a
 556+ 9A37 21 3F 89     	ld hl,Columns
 557+ 9A3A 34           	inc (hl)
 558+ 9A3B 3A 52 89     	ld a,(Cuad_objeto)
 559+ 9A3E E6 01        	and 1
 560+ 9A40 20 0F        	jr nz,1F
 561+ 9A42 2A 40 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9A45 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9A46 22 40 89     	ld (Posicion_actual),hl
 564+ 9A49 CD 03 9B     	call Genera_coordenadas
 565+ 9A4C CD A8 9A     	call Dec_CTRL_DESPLZ
 566+ 9A4F 18 03        	jr 2F
 567+ 9A51 CD A8 9A     1 call Dec_CTRL_DESPLZ
 568+ 9A54 C9           2 ret
 569+ 9A55
 570+ 9A55              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9A55
 572+ 9A55 3A 46 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9A58 FE F7        	cp $f7
 574+ 9A5A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9A5C 30 2C        	jr nc,3F
 576+ 9A5E
 577+ 9A5E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9A5E
 579+ 9A5E 06 00        	ld b,0
 580+ 9A60 04           4 inc b
 581+ 9A61 3C           	inc a
 582+ 9A62 FE F7        	cp $f7
 583+ 9A64 20 FA        	jr nz,4B
 584+ 9A66 3E FF        	ld a,$ff
 585+ 9A68 90           	sub b
 586+ 9A69 32 46 89     	ld (CTRL_DESPLZ),a
 587+ 9A6C 18 1C        	jr 3F
 588+ 9A6E
 589+ 9A6E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9A6E
 591+ 9A6E 21 3F 89     1 ld hl,Columns
 592+ 9A71 35           	dec (hl)
 593+ 9A72 AF           	xor a
 594+ 9A73 32 46 89     	ld (CTRL_DESPLZ),a
 595+ 9A76 3A 52 89     	ld a,(Cuad_objeto)
 596+ 9A79 E6 01        	and 1
 597+ 9A7B 28 0A        	jr z,2F
 598+ 9A7D 2A 40 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9A80 2B           	dec hl
 600+ 9A81 22 40 89     	ld (Posicion_actual),hl
 601+ 9A84 CD 03 9B     	call Genera_coordenadas
 602+ 9A87
 603+ 9A87              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9A87
 605+ 9A87 CD CA 8C     2 call Inicia_puntero_objeto_izq
 606+ 9A8A C9           3 ret
 607+ 9A8B
 608+ 9A8B              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9A8B              ;
 610+ 9A8B              ;	19/10/22
 611+ 9A8B              ;
 612+ 9A8B              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9A8B              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9A8B
 615+ 9A8B 3A 44 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9A8E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9A90 C9           	ret
 618+ 9A91
 619+ 9A91              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9A91              ;
 621+ 9A91              ;	19/10/22
 622+ 9A91              ;
 623+ 9A91              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9A91              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9A91
 626+ 9A91 3A 44 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9A94 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9A96 C9           	ret
 629+ 9A97
 630+ 9A97              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9A97              ;
 632+ 9A97              ;	24/7/22
 633+ 9A97              ;
 634+ 9A97              ;	Inc_CTRL_DESPLZ
 635+ 9A97              ;
 636+ 9A97              ;
 637+ 9A97              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9A97
 639+ 9A97 21 46 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9A9A 3A 54 89     	ld a,(Vel_right)
 641+ 9A9D A7           	and a
 642+ 9A9E 28 06        	jr z,1F
 643+ 9AA0 47           	ld b,a
 644+ 9AA1 34           3 inc (hl)
 645+ 9AA2 10 FD        	djnz 3B
 646+ 9AA4 18 01        	jr 2F
 647+ 9AA6 34           1 inc (hl)
 648+ 9AA7 C9           2 ret
 649+ 9AA8
 650+ 9AA8              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9AA8              ;
 652+ 9AA8              ;	5/2/23
 653+ 9AA8              ;
 654+ 9AA8              ;	Dec_CTRL_DESPLZ
 655+ 9AA8              ;
 656+ 9AA8              ;
 657+ 9AA8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9AA8
 659+ 9AA8 21 46 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9AAB 3A 53 89     	ld a,(Vel_left)
 661+ 9AAE A7           	and a
 662+ 9AAF 28 06        	jr z,1F
 663+ 9AB1 47           	ld b,a
 664+ 9AB2 35           3 dec (hl)
 665+ 9AB3 10 FD        	djnz 3B
 666+ 9AB5 18 01        	jr 2F
 667+ 9AB7 35           1 dec (hl)
 668+ 9AB8 C9           2 ret
 669+ 9AB9
 670+ 9AB9              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9AB9
 672+ 9AB9 2A 40 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9ABC 01 1F 00     	ld bc,31
 674+ 9ABF A7           	and a
 675+ 9AC0 ED 4A        	adc hl,bc
 676+ 9AC2 22 40 89     	ld (Posicion_actual),hl
 677+ 9AC5 21 6C 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9AC8 CB C6        	set 0,(hl)
 679+ 9ACA C9           	ret
 680+ 9ACB
 681+ 9ACB              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9ACB
 683+ 9ACB 2A 40 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9ACE 01 1F 00     	ld bc,31
 685+ 9AD1 A7           	and a
 686+ 9AD2 ED 42        	sbc hl,bc
 687+ 9AD4 22 40 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9AD7 21 6C 89     	ld hl,Ctrl_0
 689+ 9ADA CB CE        	set 1,(hl)
 690+ 9ADC C9           	ret
 691+ 9ADD
 692+ 9ADD              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9ADD
 694+ 9ADD 24           Reaparece_abajo inc h
 695+ 9ADE 01 E0 17     	ld bc,$17e0
 696+ 9AE1 A7           	and a
 697+ 9AE2 ED 4A        	adc hl,bc
 698+ 9AE4 22 40 89     	ld (Posicion_actual),hl
 699+ 9AE7 21 6C 89     	ld hl,Ctrl_0
 700+ 9AEA CB D6        	set 2,(hl)
 701+ 9AEC C9           	ret
 702+ 9AED
 703+ 9AED              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9AED
 705+ 9AED 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9AF0 A7           	and a
 707+ 9AF1 ED 42        	sbc hl,bc
 708+ 9AF3 22 40 89     	ld (Posicion_actual),hl
 709+ 9AF6 21 6C 89     	ld hl,Ctrl_0
 710+ 9AF9 CB DE        	set 3,(hl)
 711+ 9AFB C9           	ret
 712+ 9AFC
 713+ 9AFC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9AFC
 715+ 9AFC 2A 50 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9AFF 22 40 89     	ld (Posicion_actual),hl
 717+ 9B02 C9           	ret
# file closed: Direcciones.asm
1236  9B03              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B03              ; ------------------------------------------------------------------------
   2+ 9B03              ;
   3+ 9B03              ;	02/04/23
   4+ 9B03              ;
   5+ 9B03              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B03              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B03              ;
   8+ 9B03              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B03              ;
  10+ 9B03              ;	Modifica: A,BC y DE.
  11+ 9B03
  12+ 9B03 C5           Genera_coordenadas push bc
  13+ 9B04 E5           	push hl
  14+ 9B05 D5           	push de
  15+ 9B06
  16+ 9B06 2A 40 89     	ld hl,(Posicion_actual)
  17+ 9B09
  18+ 9B09 7D           	ld a,l
  19+ 9B0A E6 1F        	and $1f
  20+ 9B0C 32 44 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9B0F
  22+ 9B0F CD 97 97     	call calcula_tercio
  23+ 9B12 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9B13
  25+ 9B13 1E 00        	ld e,0
  26+ 9B15 7D           	ld a,l
  27+ 9B16 E6 E0        	and $e0
  28+ 9B18 28 01        	jr z,1F
  29+ 9B1A 04           	inc b
  30+ 9B1B
  31+ 9B1B 04           1 inc b
  32+ 9B1C 05           	dec b
  33+ 9B1D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9B1F              ;														; _ , salimos.
  35+ 9B1F 1C           3 inc e
  36+ 9B20 D6 20        	sub 32
  37+ 9B22 20 FB        	jr nz,3B
  38+ 9B24 10 F5        	djnz 1B
  39+ 9B26
  40+ 9B26 7B           2 ld a,e
  41+ 9B27 32 45 89     	ld (Coordenada_y),a
  42+ 9B2A
  43+ 9B2A D1           	pop de
  44+ 9B2B E1           	pop hl
  45+ 9B2C C1           	pop bc
  46+ 9B2D
  47+ 9B2D C9           	ret
  48+ 9B2E
  49+ 9B2E              ; ------------------------------------------------------------------------
  50+ 9B2E              ;	28/03/23
  51+ 9B2E              ;
  52+ 9B2E              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9B2E              ;	Fila superior "0", Columna izquierda "0".
  54+ 9B2E              ;
  55+ 9B2E              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9B2E              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9B2E              ;
  58+ 9B2E              ;		DE="$120d"
  59+ 9B2E              ;
  60+ 9B2E              ;		D, (Coordenada_X), Columnas, $12
  61+ 9B2E              ;		E, (Coordenada_y), Filas, $0d
  62+ 9B2E              ;
  63+ 9B2E              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9B2E
  65+ 9B2E              ;	Modifica: A,BC y DE.
  66+ 9B2E
  67+ 9B2E
  68+ 9B2E              Genera_coordenadas_disparo
  69+ 9B2E
  70+ 9B2E              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9B2E
  72+ 9B2E 7D           	ld a,l
  73+ 9B2F E6 1F        	and $1f
  74+ 9B31 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9B32 CD 97 97     	call calcula_tercio
  76+ 9B35 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9B36 1E 00        	ld e,0
  78+ 9B38 7D           	ld a,l
  79+ 9B39 E6 E0        	and $e0
  80+ 9B3B 28 01        	jr z,1F
  81+ 9B3D 04           	inc b
  82+ 9B3E 1C           1 inc e
  83+ 9B3F D6 20        	sub 32
  84+ 9B41 20 FB        	jr nz,1B
  85+ 9B43 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9B45 C9           	ret
  87+ 9B46
# file closed: Genera_coordenadas.asm
1237  9B46              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9B46
   2+ 9B46
   3+ 9B46              ;   11/8/22
   4+ 9B46              ;
   5+ 9B46              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9B46              ;
   7+ 9B46              ;   Mov_obj.asm
   8+ 9B46              ;
   9+ 9B46              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9B46              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9B46              ;
  12+ 9B46              ;   Codificación:
  13+ 9B46              ;
  14+ 9B46              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9B46
  16+ 9B46              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9B46
  18+ 9B46 02 40 00     Arriba db 2,%01000000,0
  19+ 9B49 02 80 00     Abajo db 2,%10000000,0
  20+ 9B4C 02 20 00     Derecha db 2,%00100000,0
  21+ 9B4F 02 10 00     Izquierda db 2,%00010000,0
  22+ 9B52 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9B56 60 42 60 40
  22+ 9B5A 63
  23+ 9B5B 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9B5F 22 A3 80 A0
  24+ 9B63 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9B67 84 A0 83 A0
  25+ 9B6B 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9B6F 80 A3 22 A0
  26+ 9B73 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9B77 40 60 42 60
  27+ 9B7B 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9B7F
  29+ 9B7F 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9B83 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9B87 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9B8B 84 00
  32+ 9B8D 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9B91 84 00
  33+ 9B93 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9B97 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9B9B 1F 1F 1F 1F
  35+ 9B9F 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9BA3 1F 1F 1F 1F
  35+ 9BA7 1F
  36+ 9BA8 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9BAC 2F 2F 2F 2F
  36+ 9BB0 2F 2F
  37+ 9BB2 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9BB6 2F 2F 00
  38+ 9BB9
  39+ 9BB9              ; ----- ----- ----- ----- -----
  40+ 9BB9
  41+ 9BB9 97 9B        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9BBB 93 9B        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9BBD 4F 9B        Indice_mov_Izquierda defw Izquierda
  44+ 9BBF 4C 9B        Indice_mov_Derecha defw Derecha
  45+ 9BC1 49 9B        Indice_mov_Abajo defw Abajo
  46+ 9BC3 46 9B        Indice_mov_Arriba defw Arriba
  47+ 9BC5 83 9B        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9BC7 87 9B        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9BC9 7F 9B        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9BCB 8D 9B        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9BCD 52 9B        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9BCF              ; ----- ----- ----- ----- -----
  53+ 9BCF
  54+ 9BCF 3A 73 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9BD2 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9BD3 28 02            jr z,1F
  57+ 9BD5 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9BD7 3A 74 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9BDA C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9BDC 32 74 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9BDF              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9BDF 2A 71 89         ld hl,(Puntero_mov)
  63+ 9BE2 7E               ld a,(hl)
  64+ 9BE3 32 73 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9BE6 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9BE7 22 71 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9BEA
  68+ 9BEA 3A 75 89     Decoder ld a,(Repetimos_db)
  69+ 9BED A7               and a
  70+ 9BEE 20 0C            jr nz,12F
  71+ 9BF0 2A 71 89         ld hl,(Puntero_mov)
  72+ 9BF3 7E               ld a,(hl)
  73+ 9BF4 A7               and a
  74+ 9BF5 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9BF7 E6 0F            and $0f
  76+ 9BF9 32 75 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9BFC              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9BFC 2A 71 89     12 ld hl,(Puntero_mov)
  79+ 9BFF CB 7E            bit 7,(hl)
  80+ 9C01 28 03            jr z,2F
  81+ 9C03 CD DD 97         call Mov_down
  82+ 9C06 2A 71 89     2 ld hl, (Puntero_mov)
  83+ 9C09 CB 76            bit 6,(hl)
  84+ 9C0B 28 03            jr z,3F
  85+ 9C0D CD 0E 98         call Mov_up
  86+ 9C10 2A 71 89     3 ld hl, (Puntero_mov)
  87+ 9C13 CB 6E            bit 5,(hl)
  88+ 9C15 28 03            jr z,4F
  89+ 9C17 CD 51 98         call Mov_right
  90+ 9C1A 2A 71 89     4 ld hl, (Puntero_mov)
  91+ 9C1D CB 66            bit 4,(hl)
  92+ 9C1F 28 03            jr z,5F
  93+ 9C21 CD 6F 99         call Mov_left
  94+ 9C24
  95+ 9C24              ; ---------- --------- --------- ---------- ----------
  96+ 9C24
  97+ 9C24 3A 75 89     5 ld a,(Repetimos_db)
  98+ 9C27 A7               and a
  99+ 9C28 28 07            jr z,6F
 100+ 9C2A 3D               dec a
 101+ 9C2B 32 75 89         ld (Repetimos_db),a
 102+ 9C2E 28 01            jr z,6f
 103+ 9C30 C9           11 ret
 104+ 9C31 21 73 89     6 ld hl,Contador_db_mov
 105+ 9C34 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9C35 2A 71 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9C38 23               inc hl
 108+ 9C39 22 71 89         ld (Puntero_mov),hl
 109+ 9C3C 18 F2            jr 11B
 110+ 9C3E 2A 6F 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9C41 3A 74 89         ld a,(Incrementa_puntero)
 112+ 9C44 47               ld b,a
 113+ 9C45 23           8 inc hl
 114+ 9C46 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9C48 5E               ld e,(hl)
 116+ 9C49 23               inc hl
 117+ 9C4A 56               ld d,(hl)
 118+ 9C4B EB               ex de,hl
 119+ 9C4C 22 71 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9C4F 18 DF            jr 11B
 121+ 9C51
 122+ 9C51              ; ---------- --------- --------- ---------- ----------
 123+ 9C51              ;
 124+ 9C51              ;   11/8/22
 125+ 9C51              ;
 126+ 9C51              ;   Prepara_Puntero_mov
 127+ 9C51
 128+ 9C51 E5           Prepara_Puntero_mov push hl
 129+ 9C52 D5               push de
 130+ 9C53 2A 6F 89         ld hl,(Puntero_indice_mov)
 131+ 9C56 5E               ld e,(hl)
 132+ 9C57 23               inc hl
 133+ 9C58 56               ld d,(hl)
 134+ 9C59 EB               ex de,hl
 135+ 9C5A 22 71 89         ld (Puntero_mov),hl
 136+ 9C5D D1               pop de
 137+ 9C5E E1               pop hl
 138+ 9C5F C9               ret
 139+ 9C60
 140+ 9C60              ; ---------- --------- --------- ---------- ----------
 141+ 9C60              ;
 142+ 9C60              ;   11/8/22
 143+ 9C60              ;
 144+ 9C60              ;   Reinicia_el_movimiento
 145+ 9C60
 146+ 9C60 CD 51 9C     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9C63 AF               xor a
 148+ 9C64 32 73 89         ld (Contador_db_mov),a
 149+ 9C67 32 74 89         ld (Incrementa_puntero),a
 150+ 9C6A C3 CF 9B         jp Movimiento
 151+ 9C6D C9               ret
 152+ 9C6E              ; ---------- --------- --------- ---------- ----------
 153+ 9C6E
 154+ 9C6E
 155+ 9C6E
 156+ 9C6E
 157+ 9C6E
 158+ 9C6E
 159+ 9C6E
 160+ 9C6E
 161+ 9C6E
 162+ 9C6E
 163+ 9C6E
 164+ 9C6E
 165+ 9C6E
 166+ 9C6E
 167+ 9C6E
 168+ 9C6E
 169+ 9C6E
 170+ 9C6E
# file closed: Patrones_de_mov.asm
1238  9C6E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9C6E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9C6E              ;
   3+ 9C6E              ;	3/1/23
   4+ 9C6E              ;
   5+ 9C6E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9C6E
   7+ 9C6E              ;	ADC HL,SP	LD (addr),SP
   8+ 9C6E              ;	ADD HL,SP	LD SP,(addr)
   9+ 9C6E              ;	ADD IX,SP	LD SP,nn
  10+ 9C6E              ; 	ADD IY,SP	LD SP,HL
  11+ 9C6E              ;				LD SP,IX
  12+ 9C6E              ;	DEC SP		LD SP,IY
  13+ 9C6E
  14+ 9C6E              ;	EX (SP),HL
  15+ 9C6E              ;	EX (SP),IX
  16+ 9C6E              ;	EX (SP),IY
  17+ 9C6E
  18+ 9C6E              ;	INC SP
  19+ 9C6E
  20+ 9C6E
  21+ 9C6E                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 8D 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 7C 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 93 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 91 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 93 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 91 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 8D 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1239  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1240  7FE6
1241  7FE6              	SAVESNA "Pruebas.sna", START
1242  7FE6
1243  7FE6
1244  7FE6
1245  7FE6
# file closed: Banco_de_pruebas.asm
