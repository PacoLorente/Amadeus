# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD B1 8E     	call Frame
  15  AA04 FB           	ei
  16  AA05 ED 4D        	reti
  17  AA07
  18  AA07              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  AA07
  20  AA07              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA07              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA07              ;
   3+ AA07              ;	17/02/23
   4+ AA07              ;
   5+ AA07              ;	Sprites e índices.
   6+ AA07
   7+ AA07              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 14 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 18 8A        	defw End_Snapshot_1
 267+ 8500 1C 8A        	defw End_Snapshot_2
 268+ 8502 20 8A        	defw End_Snapshot_3
 269+ 8504 16 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 1A 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1E 8A        	defw End_Snapshot_disparos_2
 272+ 850A 22 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 C0 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 C0 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  22  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BC 88        	defw Nivel_2
   7+ 88AD C9 88        	defw Nivel_3
   8+ 88AF D9 88        	defw Nivel_4
   9+ 88B1 EB 88        	defw Nivel_5
  10+ 88B3              ;	...
  11+ 88B3              ;	...
  12+ 88B3              ;	+ Niveles ...
  13+ 88B3
  14+ 88B3 00 00        	defw 0
  15+ 88B5 00 00        	defw 0
  16+ 88B7
  17+ 88B7 04           Nivel_1 db 4	                                ; Nº de entidades.
  18+ 88B8 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 88BC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 88BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88C1 01 02
  21+ 88C3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 88C7 01 02
  22+ 88C9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 88CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  23+ 88CE 01
  24+ 88CF 03 01 01 01  	db 3,1,1,1,1
  24+ 88D3 01
  25+ 88D4 03 01 01 01  	db 3,1,1,1,1
  25+ 88D8 01
  26+ 88D9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 88DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  27+ 88DE 01
  28+ 88DF 04 01 01 01  	db 4,1,1,1,1
  28+ 88E3 01
  29+ 88E4 04 01 01 01  	db 4,1,1,1,1
  29+ 88E8 01
  30+ 88E9 02 03        	db 2,3
  31+ 88EB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 88EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  32+ 88F0 01
  33+ 88F1 05 01 01 01  	db 5,1,1,1,1
  33+ 88F5 01
  34+ 88F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88FA 01
  35+ 88FB 05 01 01 01  	db 5,1,1,1,1
  35+ 88FF 01
  36+ 8900
  37+ 8900              ;---------------------------------------------------------------------------------------------------------------
  38+ 8900              ;
  39+ 8900              ;   21/5/23
  40+ 8900              ;
  41+ 8900              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8900              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8900              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8900              ;	_en la caja DRAW correspondiente.
  45+ 8900              ;
  46+ 8900              ;	MODIFICA: HL,DE y A.
  47+ 8900              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8900
  49+ 8900              Inicializa_Punteros_de_nivel
  50+ 8900
  51+ 8900 21 A9 88     	ld hl,Indice_de_niveles
  52+ 8903 22 4F 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8906 CD 87 8D     	call Extrae_address
  54+ 8909 7E           	ld a,(hl)
  55+ 890A 32 02 8A     	ld (Numero_de_entidades),a
  56+ 890D 23           	inc hl
  57+ 890E 22 51 8A     	ld (Datos_de_nivel),hl
  58+ 8911 C9           	ret
  59+ 8912
  60+ 8912              ;---------------------------------------------------------------------------------------------------------------
  61+ 8912              ;
  62+ 8912              ;   13/5/23
  63+ 8912              ;
  64+ 8912              ;	Destruye A,BC,HL,DE
  65+ 8912
  66+ 8912              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8912              ;	_del juego.
  68+ 8912
  69+ 8912              Prepara_cajas
  70+ 8912
  71+ 8912              ; Preparamos los punteros de las cajas.
  72+ 8912
  73+ 8912 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8915 CD 87 8D     	call Extrae_address
  75+ 8918 CD 55 89     	call Avanza_caja
  76+ 891B
  77+ 891B CD 99 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 891E
  79+ 891E 2A 51 8A     	ld hl,(Datos_de_nivel)
  80+ 8921
  81+ 8921              ; HL está en los datos del nivel correspondiente.
  82+ 8921              ; B actuará como contador de cajas.
  83+ 8921
  84+ 8921 C5           1 push bc
  85+ 8922
  86+ 8922 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8923 CD 46 89     	call PreparaBC
  88+ 8926
  89+ 8926 21 85 88     	ld hl,Indice_de_entidades
  90+ 8929 CD 4E 89     	call SBC_HL_con_BC_y_Extrae
  91+ 892C 22 08 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 892F
  93+ 892F CD 5F 89     	call Datos_de_entidad_a_caja
  94+ 8932
  95+ 8932 2A 00 8A     	ld hl,(Indice_restore_caja)
  96+ 8935 CD 87 8D     	call Extrae_address
  97+ 8938 CD 55 89     	call Avanza_caja
  98+ 893B
  99+ 893B 2A 51 8A     	ld hl,(Datos_de_nivel)
 100+ 893E 23           	inc hl
 101+ 893F 22 51 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8942
 103+ 8942 C1           	pop bc
 104+ 8943 10 DC        	djnz 1B
 105+ 8945 C9           	ret
 106+ 8946
 107+ 8946 CB 27        PreparaBC sla a
 108+ 8948 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 894A 4F           	ld c,a
 110+ 894B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 894D C9           	ret
 112+ 894E
 113+ 894E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 894F ED 4A        	adc hl,bc
 115+ 8951 CD 87 8D     	call Extrae_address
 116+ 8954 C9           	ret
 117+ 8955
 118+ 8955 22 FC 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8958 13           	inc de
 120+ 8959 13           	inc de
 121+ 895A EB           	ex de,hl
 122+ 895B 22 00 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 895E C9           	ret
 124+ 895F
 125+ 895F              Datos_de_entidad_a_caja
 126+ 895F
 127+ 895F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 895F
 129+ 895F
 130+ 895F ED 5B FC 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8963
 132+ 8963 01 02 00     	ld bc,2
 133+ 8966 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8968
 135+ 8968 01 07 00     	ld bc,7
 136+ 896B CD 93 89     	call Situa_DE
 137+ 896E
 138+ 896E 01 05 00     	ld bc,5
 139+ 8971 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8973
 141+ 8973 01 04 00     	ld bc,4
 142+ 8976 CD 93 89     	call Situa_DE
 143+ 8979
 144+ 8979 01 07 00     	ld bc,7
 145+ 897C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 897E
 147+ 897E 01 18 00     	ld bc,24
 148+ 8981 CD 93 89     	call Situa_DE
 149+ 8984
 150+ 8984 01 02 00     	ld bc,2
 151+ 8987 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8989
 153+ 8989              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8989              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8989
 156+ 8989 01 0F 00     	ld bc,15									; *****
 157+ 898C CD 93 89     	call Situa_DE
 158+ 898F
 159+ 898F 3E 03        	ld a,3
 160+ 8991 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8992
 162+ 8992 C9           	ret
 163+ 8993
 164+ 8993 EB           Situa_DE ex de,hl
 165+ 8994 A7           	and a
 166+ 8995 ED 4A        	adc hl,bc
 167+ 8997 EB           	ex de,hl
 168+ 8998 C9           	ret
 169+ 8999
 170+ 8999              ;---------------------------------------------------------------------------------------------------------------
 171+ 8999              ;
 172+ 8999              ;	21/5/23
 173+ 8999              ;
 174+ 8999              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8999              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8999              ;
 177+ 8999              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8999              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8999              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8999              ;
 181+ 8999              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8999              ;	MODIFICA: A y B.
 183+ 8999              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8999
 185+ 8999              Admin_num_entidades
 186+ 8999
 187+ 8999              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8999
 189+ 8999 3A 02 8A     	ld a,(Numero_de_entidades)
 190+ 899C A7           	and a
 191+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 899D              ;	jr z,$
 193+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 899D
 195+ 899D 20 03        	jr nz,3F
 196+ 899F
 197+ 899F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 899F
 199+ 899F CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 89A2
 201+ 89A2 3A 02 8A     3 ld a,(Numero_de_entidades)
 202+ 89A5 FE 0A        	cp 10
 203+ 89A7 38 08        	jr c,1F
 204+ 89A9
 205+ 89A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 89A9              ; Actualizamos variables.
 207+ 89A9
 208+ 89A9 3E 0A        	ld a,10
 209+ 89AB 32 03 8A     	ld (Numero_parcial_de_entidades),a
 210+ 89AE 47           	ld b,a
 211+ 89AF 18 04        	jr 2F
 212+ 89B1
 213+ 89B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 89B1              ; (Numero_de_entidades)="0".
 215+ 89B1
 216+ 89B1 32 03 8A     1 ld (Numero_parcial_de_entidades),a
 217+ 89B4 47           	ld b,a
 218+ 89B5 C9           2 ret
# file closed: Niveles.asm
  23  89B6
  24  89B6              ; ******************************************************************************************************************************************************************************************
  25  89B6              ; Constantes.
  26  89B6              ; ******************************************************************************************************************************************************************************************
  27  89B6              ;
  28  89B6              ; 25/05/23
  29  89B6              ;
  30  89B6              ; Constantes generales.
  31  89B6              ;
  32  89B6
  33  89B6              Sprite_vacio equ $f000
  34  89B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  89B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  89B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  89B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  89B6
  39  89B6              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  89B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  89B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  89B6              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  89B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  89B6              ;                               				        ; De momento situamos este almacén en $7060.
  45  89B6              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  89B6              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  89B6              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  89B6              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  89B6              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  89B6              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  51  89B6
  52  89B6              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  89B6
  54  89B6              ; ******************************************************************************************************************************************************************************************
  55  89B6              ; Variables.
  56  89B6              ; ******************************************************************************************************************************************************************************************
  57  89B6              ;
  58  89B6              ; 28/07/23
  59  89B6              ;
  60  89B6              ; Variables de DRAW. (Motor principal).
  61  89B6              ;
  62  89B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  89B6
  64  89B6 00           Filas db 0												; Filas. [DRAW]
  65  89B7 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  89B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  89BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  89BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  89BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  89BE
  71  89BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  89BE
  73  89BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  89BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  89BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  89BF 00           Attr db 0												; Atributos de la entidad:
  77  89C0
  78  89C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  89C0              ;
  80  89C0              ;	COLORES: 0 ..... NEGRO
  81  89C0              ;    		 1 ..... AZUL
  82  89C0              ; 			 2 ..... ROJO
  83  89C0              ;			 3 ..... MAGENTA
  84  89C0              ; 			 4 ..... VERDE
  85  89C0              ; 			 5 ..... CIAN
  86  89C0              ;			 6 ..... AMARILLO
  87  89C0              ; 			 7 ..... BLANCO
  88  89C0
  89  89C0 00 00        Indice_Sprite_der defw 0
  90  89C2 00 00        Indice_Sprite_izq defw 0
  91  89C4 00 00        Puntero_DESPLZ_der defw 0
  92  89C6 00 00        Puntero_DESPLZ_izq defw 0
  93  89C8
  94  89C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  89CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  89CB
  97  89CB              ; Variables de objeto. (Características).
  98  89CB
  99  89CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  89CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  89CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  89CF
 104  89CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  89D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  89D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  89D0
 108  89D0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 109  89D2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89D4 00 00        	defw 0
 111  89D6 00 00 00 00  	db 0,0,0,0
 112  89DA
 113  89DA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 114  89DC 00 00        	defw 0
 115  89DE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 116  89E0 00 00 00 00  	db 0,0,0,0
 117  89E4
 118  89E4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 119  89E4
 120  89E4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 121  89E5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 122  89E5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 123  89E5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 124  89E5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 125  89E5              ;
 126  89E5              ; 														DESCRIPCIÖN:
 127  89E5              ;
 128  89E5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 129  89E5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 130  89E5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 131  89E5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 132  89E5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 133  89E5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 134  89E5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 135  89E5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 136  89E5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 137  89E5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 138  89E5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 139  89E5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 140  89E5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 141  89E5              ;
 142  89E5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 143  89E5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 144  89E5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 145  89E5
 146  89E5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 147  89E6
 148  89E6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 149  89E6
 150  89E6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 151  89E7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 152  89E9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 153  89EB 00 00        Puntero_indice_mov_bucle defw 0							;
 154  89ED              ;
 155  89ED              ;
 156  89ED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 157  89EE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 158  89EE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 159  89EE 00           Incrementa_puntero_backup db 0
 160  89EF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 161  89F0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 162  89F0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 163  89F1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 164  89F2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 165  89F3              ;
 166  89F3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 167  89F3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 168  89F3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 169  89F3              ;
 170  89F3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 171  89F3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 172  89F3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 173  89F3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 174  89F3              ;
 175  89F3              ;														;	"$ff" ..... Bucle infinito de repetición.
 176  89F3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 177  89F3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 178  89F3
 179  89F3
 180  89F3              ; Variables de funcionamiento. [DRAW].
 181  89F3
 182  89F3 00           Columnas db 0
 183  89F4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 184  89F6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  89F7
 187  89F7              ; variables de control general.
 188  89F7
 189  89F7 00           Ctrl_2 db 0
 190  89F8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 191  89F8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 192  89F8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 193  89F8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 194  89F8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 195  89F8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 196  89F8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 197  89F8              ;
 198  89F8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 199  89F8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 200  89F8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 201  89F8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 202  89F8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 203  89F8
 204  89F8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 205  89F9
 206  89F9              ;! 67 Bytes por entidad.
 207  89F9
 208  89F9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 209  89F9              ;					         		---------;      ;---------
 210  89F9
 211  89F9
 212  89F9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 213  89F9
 214  89F9 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 215  89FA
 216  89FA              ;														DESCRIPCIÓN:
 217  89FA              ;
 218  89FA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 219  89FA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 220  89FA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 221  89FA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 222  89FA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 223  89FA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 224  89FA
 225  89FA              ;														BIT 3, Recarga de nueva oleada.
 226  89FA              ;														BIT 4, Recarga de nueva oleada.
 227  89FA              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 228  89FA              ;														BIT 6, **** Frame completo.
 229  89FA
 230  89FA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 231  89FC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 232  89FC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 233  89FC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 234  89FC
 235  89FC
 236  89FC
 237  89FC              ; Gestión de ENTIDADES y CAJAS.
 238  89FC
 239  89FC 00 00        Puntero_store_caja defw 0
 240  89FE 00 00        Puntero_restore_caja defw 0
 241  8A00 00 00        Indice_restore_caja defw 0
 242  8A02 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 243  8A03 00           Numero_parcial_de_entidades db 0
 244  8A04 00           Entidades_en_curso db 0									; ..... ..... .....
 245  8A05 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 246  8A06              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 247  8A06              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 248  8A06              ;														; _ (Numero_de_malotes)="0".
 249  8A06 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 250  8A08 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 251  8A0A              ;														; _ puntero (Indice_entidades).
 252  8A0A
 253  8A0A
 254  8A0A              ;---------------------------------------------------------------------------------------------------------------
 255  8A0A              ;
 256  8A0A              ;	2/9/23
 257  8A0A              ;
 258  8A0A              ;	Álbumes.
 259  8A0A
 260  8A0A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 261  8A0C              ;														; _variable para almacenar lo posición del puntero_
 262  8A0C              ; 														; _de pila, SP.
 263  8A0C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 264  8A0E              ;														; La utiliza la rutina [Extrae_foto_registros].
 265  8A0E 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 266  8A10 00 00        Stack_snapshot defw 0
 267  8A12 00 00        Stack_snapshot_disparos defw 0
 268  8A14
 269  8A14 00 00        End_Snapshot defw 0
 270  8A16              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 271  8A16 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 272  8A18              ;														; _el snapshot de los registros del siguiente disparo.
 273  8A18              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 274  8A18 00 00        End_Snapshot_1 defw 0
 275  8A1A 00 00        End_Snapshot_disparos_1 defw 0
 276  8A1C 00 00        End_Snapshot_2 defw 0
 277  8A1E 00 00        End_Snapshot_disparos_2 defw 0
 278  8A20 00 00        End_Snapshot_3 defw 0
 279  8A22 00 00        End_Snapshot_disparos_3 defw 0
 280  8A24
 281  8A24 00 00        Puntero_indice_album_de_fotos defw 0
 282  8A26 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 283  8A28
 284  8A28 00 00        Puntero_indice_End_Snapshot defw 0
 285  8A2A 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 286  8A2C 00 00        Puntero_de_End_Snapshot defw 0
 287  8A2E 00 00        Puntero_de_End_Snapshot_disparos defw 0
 288  8A30
 289  8A30              ;---------------------------------------------------------------------------------------------------------------
 290  8A30
 291  8A30              ; Gestión de Disparos.
 292  8A30
 293  8A30 00           Numero_de_disparotes db 0
 294  8A31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 295  8A33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 296  8A35 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 297  8A36              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 298  8A36              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 299  8A36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 300  8A38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 301  8A38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 302  8A38              ;														; _produzca colisión.
 303  8A38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 304  8A3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 305  8A3A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 306  8A3D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 307  8A3D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 308  8A40              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 309  8A40 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 310  8A42 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 311  8A43
 312  8A43              ;---------------------------------------------------------------------------------------------------------------
 313  8A43
 314  8A43              ; Relojes y temporizaciones.
 315  8A43
 316  8A43 00           Contador_de_frames db 0
 317  8A44 00           Contador_de_frames_2 db 0
 318  8A45
 319  8A45 04           Clock_explosion db 4
 320  8A46 1E           Clock_Entidades_en_curso db 30
 321  8A47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 322  8A48              ;														; Repite la oleada de entidades.
 323  8A48 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 324  8A49 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 325  8A4A 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 326  8A4B
 327  8A4B 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 328  8A4C 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 329  8A4D 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 330  8A4E
 331  8A4E              ;---------------------------------------------------------------------------------------------------------------
 332  8A4E
 333  8A4E              ; Gestión de NIVELES.
 334  8A4E
 335  8A4E 00           Nivel db 0												; Nivel actual del juego.
 336  8A4F 00 00        Puntero_indice_NIVELES defw 0
 337  8A51 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 338  8A53              ; 														; _ que definen el NIVEL.
 339  8A53              ; Y todo comienza aquí .....
 340  8A53              ;
 341  8A53              ; Rutina principal *************************************************************************************************************************************************************************
 342  8A53              ;
 343  8A53              ;	14/11/22
 344  8A53
 345  8A53              START
 346  8A53
 347  8A53 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 348  8A56 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 349  8A58 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 350  8A5A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 351  8A5C F3           	DI
 352  8A5D
 353  8A5D 3E 07        	ld a,%00000111
 354  8A5F CD FC 99     	call Cls
 355  8A62
 356  8A62 CD 60 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 357  8A65
 358  8A65              ; INICIALIZACIÓN.
 359  8A65
 360  8A65 CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 361  8A68
 362  8A68 CD 12 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 363  8A6B
 364  8A6B CD D1 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 365  8A6E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 366  8A6E CD E7 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 367  8A71              ;													     ; _ malotes antes de guardar ninguna foto.
 368  8A71              ; ----------
 369  8A71
 370  8A71 CD 10 8E     	call Restore_entidad
 371  8A74
 372  8A74 21 03 8A     	ld hl,Numero_parcial_de_entidades
 373  8A77 46           	ld b,(hl)
 374  8A78 04           	inc b
 375  8A79 05           	dec b
 376  8A7A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 377  8A7C
 378  8A7C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 379  8A7C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 380  8A7C              ;	Pintamos el resto de entidades:
 381  8A7C
 382  8A7C              ;	INICIA ENTIDADES !!!!!
 383  8A7C
 384  8A7C C5           1 push bc  												; Guardo el contador de entidades.
 385  8A7D
 386  8A7D CD 78 8C     	call Inicia_entidad
 387  8A80
 388  8A80 C1           	pop bc
 389  8A81 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 390  8A83
 391  8A83              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 392  8A83              ; (Esto se dá cuando se inicia una nueva oleada).
 393  8A83
 394  8A83 3A F9 89     	ld a,(Ctrl_1)
 395  8A86 CB 5F        	bit 3,a
 396  8A88 20 18        	jr nz,5F											; Loop
 397  8A8A
 398  8A8A              ; 	INICIA AMADEUS !!!!!
 399  8A8A
 400  8A8A CD 37 8E     3 call Restore_Amadeus
 401  8A8D CD 8D 8D     	call Inicia_Puntero_objeto
 402  8A90 CD 32 94     	call Draw
 403  8A93 CD A0 7F     	call Guarda_foto_registros
 404  8A96 11 A4 85     	ld de,Amadeus_db
 405  8A99 CD 49 8E     	call Store_Amadeus
 406  8A9C
 407  8A9C              ; 	INICIA DISPAROS !!!!!
 408  8A9C
 409  8A9C CD 49 8D     	call Inicia_Puntero_Disparo_Entidades
 410  8A9F CD 50 8D     	call Inicia_Puntero_Disparo_Amadeus
 411  8AA2
 412  8AA2              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 413  8AA2
 414  8AA2 CD D1 8C     5 call Inicia_punteros_de_cajas
 415  8AA5 CD 10 8E     	call Restore_entidad
 416  8AA8
 417  8AA8 3A F9 89     	ld a,(Ctrl_1)
 418  8AAB CB 5F        	bit 3,a
 419  8AAD 28 0A        	jr z,6F
 420  8AAF
 421  8AAF              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 422  8AAF
 423  8AAF 21 F9 89     	ld hl,Ctrl_1
 424  8AB2 CB 9E        	res 3,(hl)
 425  8AB4 CD 57 8D     	call Calcula_numero_de_malotes
 426  8AB7 18 0A        	jr Main
 427  8AB9
 428  8AB9              ; ----------
 429  8AB9
 430  8AB9 3A 03 8A     6 ld a,(Numero_parcial_de_entidades)
 431  8ABC 3C           	inc a
 432  8ABD 32 05 8A     	ld (Numero_de_malotes),a
 433  8AC0
 434  8AC0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 435  8AC0              ; _ tenemos calculado (Numero_de_malotes).
 436  8AC0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 437  8AC0              ; _ para situarnos en el siguiente album.
 438  8AC0
 439  8AC0 CD 18 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 440  8AC3
 441  8AC3              ; ------------------------------------
 442  8AC3
 443  8AC3              Main
 444  8AC3
 445  8AC3              ;
 446  8AC3              ;	3/8/23
 447  8AC3
 448  8AC3 FB           	ei
 449  8AC4
 450  8AC4 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 451  8AC7 47           	ld b,a
 452  8AC8 3A 43 8A     	ld a,(Contador_de_frames)
 453  8ACB B8           	cp b
 454  8ACC 20 18        	jr nz,13F
 455  8ACE
 456  8ACE 3A 03 8A     	ld a,(Numero_parcial_de_entidades)
 457  8AD1 47           	ld b,a
 458  8AD2 3A 04 8A     	ld a,(Entidades_en_curso)
 459  8AD5 B8           	cp b
 460  8AD6 28 0E        	jr z,13F
 461  8AD8 30 0C        	jr nc,13F
 462  8ADA
 463  8ADA 3C           	inc a
 464  8ADB 32 04 8A     	ld (Entidades_en_curso),a
 465  8ADE
 466  8ADE 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 467  8AE1
 468  8AE1              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 469  8AE1              ;! _ IMPREDECIBLE !!!!
 470  8AE1
 471  8AE1 C6 64        	add 100
 472  8AE3 32 46 8A     	ld (Clock_Entidades_en_curso),a
 473  8AE6
 474  8AE6              ; Habilita disparos.
 475  8AE6
 476  8AE6 21 48 8A     13 ld hl,Disparo_Amadeus
 477  8AE9 11 4A 8A     	ld de,CLOCK_repone_disparo_Amadeus
 478  8AEC CD C1 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 479  8AEF
 480  8AEF 21 4B 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 481  8AF2 11 4D 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 482  8AF5 CD C1 A0     	call Habilita_disparos
 483  8AF8
 484  8AF8              ; COLISIONES.
 485  8AF8
 486  8AF8 CD 14 93     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 487  8AFB
 488  8AFB              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 489  8AFB              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 490  8AFB              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 491  8AFB
 492  8AFB AF           	xor a
 493  8AFC 32 35 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 494  8AFF
 495  8AFF CD D1 8C     	call Inicia_punteros_de_cajas
 496  8B02 CD 10 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 497  8B05              ; 														; _ en DRAW.
 498  8B05 3A B6 89     	ld a,(Filas)
 499  8B08 A7           	and a
 500  8B09 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 501  8B0B CD 22 8E     	call Incrementa_punteros_de_cajas
 502  8B0E 18 F2        	jr 12B
 503  8B10
 504  8B10              ; ---------------------------------------------------------------------------------------
 505  8B10
 506  8B10 3A 03 8A     10 ld a,(Numero_parcial_de_entidades)
 507  8B13 47               ld b,a
 508  8B14 A7           	and a
 509  8B15 20 14        	jr nz,11F
 510  8B17
 511  8B17 21 F9 89     	ld hl,Ctrl_1
 512  8B1A CB 66        	bit 4,(hl)
 513  8B1C C2 A8 8B     	jp nz,16F
 514  8B1F
 515  8B1F 21 F9 89     	ld hl,Ctrl_1
 516  8B22 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 517  8B24
 518  8B24 3A 43 8A     	ld a,(Contador_de_frames)
 519  8B27 3C           	inc a
 520  8B28 32 47 8A     	ld (Activa_recarga_cajas),a
 521  8B2B
 522  8B2B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 523  8B2B
 524  8B2B 3A 04 8A     11 ld a,(Entidades_en_curso)
 525  8B2E A7           	and a
 526  8B2F CA A8 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 527  8B32 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 528  8B33
 529  8B33              ; Código que ejecutamos con cada entidad:
 530  8B33              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 531  8B33
 532  8B33 C5           15 push bc 												; Nº de entidades en curso.
 533  8B34
 534  8B34              ; Impacto ???
 535  8B34
 536  8B34 3A CF 89     	ld a,(Impacto)
 537  8B37 A7           	and a
 538  8B38 28 2D        	jr z,8F
 539  8B3A
 540  8B3A              ; Hay Impacto en esta entidad.
 541  8B3A
 542  8B3A 21 45 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 543  8B3D 35           	dec (hl)
 544  8B3E 20 62        	jr nz,17F
 545  8B40
 546  8B40              ;! Velocidad de la animación de la explosión.
 547  8B40
 548  8B40 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 549  8B42              ;														; _,(velocidad de la explosión).
 550  8B42 CD 88 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 551  8B45
 552  8B45              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 553  8B45
 554  8B45 3A F7 89     	ld a,(Ctrl_2)
 555  8B48 CB 4F        	bit 1,a
 556  8B4A 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 557  8B4C
 558  8B4C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 559  8B4C
 560  8B4C 3A BE 89     	ld a,(CTRL_DESPLZ)
 561  8B4F A7           	and a
 562  8B50 20 08        	jr nz,18F
 563  8B52
 564  8B52 21 84 84     	ld hl,Indice_Explosion_2x2-2
 565  8B55 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 566  8B58 18 06        	jr 19F
 567  8B5A
 568  8B5A 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 569  8B5D 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 570  8B60
 571  8B60 21 F7 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 572  8B63 CB CE        	set 1,(hl)
 573  8B65 18 22        	jr 7F
 574  8B67
 575  8B67              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 576  8B67              ; _con las coordenadas de la entidad almacenada en DRAW.
 577  8B67
 578  8B67 3A F9 89     8 ld a,(Ctrl_1)
 579  8B6A CB 57        	bit 2,a
 580  8B6C 28 1B        	jr z,7F
 581  8B6E
 582  8B6E 2A 38 8A     	ld hl,(Coordenadas_disparo_certero)
 583  8B71 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 584  8B72              ;														; E contiene la coordenada_X del disparo.
 585  8B72 2A BC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 586  8B75              ;														; H FILA, (Coordenada_y de la entidad).
 587  8B75 A7           	and a
 588  8B76 ED 52        	sbc hl,de
 589  8B78
 590  8B78 CD 4B 93     	call Determina_resultado_comparativa
 591  8B7B
 592  8B7B 78           	ld a,b
 593  8B7C A7           	and a
 594  8B7D 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 595  8B7F
 596  8B7F              ; ----- ----- -----
 597  8B7F
 598  8B7F 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 599  8B81 32 CF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 600  8B84
 601  8B84 21 F9 89     	ld hl,Ctrl_1
 602  8B87 CB 96        	res 2,(hl)
 603  8B89
 604  8B89 CD FA 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 605  8B8C
 606  8B8C 3A E4 89     	ld a,(Ctrl_0)
 607  8B8F CB 67        	bit 4,a
 608  8B91 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 609  8B93
 610  8B93              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 611  8B93              ; [[[
 612  8B93 CD AB 8E     	call Detecta_disparo_entidad
 613  8B96              ; ]]]
 614  8B96 CD 98 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 615  8B99
 616  8B99 21 E4 89     	ld hl,Ctrl_0
 617  8B9C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 618  8B9E AF           	xor a
 619  8B9F 32 E5 89     	ld (Obj_dibujado),a
 620  8BA2
 621  8BA2 CD D5 8D     17 call Store_Restore_cajas
 622  8BA5
 623  8BA5 C1           	pop bc
 624  8BA6 10 8B        	djnz 15B
 625  8BA8
 626  8BA8              ; ------------------------------------
 627  8BA8
 628  8BA8              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 629  8BA8              ; Hemos gestionado todas las unidades.
 630  8BA8              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 631  8BA8
 632  8BA8              ;	ld hl,Ctrl_1
 633  8BA8              ;	res 2,(hl)
 634  8BA8
 635  8BA8              ; ------------------------------------
 636  8BA8
 637  8BA8              ; Tras la gestión de las entidades, ... AMADEUS.
 638  8BA8
 639  8BA8 CD 37 8E     16 call Restore_Amadeus
 640  8BAB
 641  8BAB              ;! Activa/desactiva impacto con Amadeus.
 642  8BAB
 643  8BAB              ;	ld a,(Impacto)
 644  8BAB              ;	and a
 645  8BAB              ;	jr nz,$
 646  8BAB
 647  8BAB CD 59 8C     	call Mov_Amadeus
 648  8BAE
 649  8BAE 3A E4 89     	ld a,(Ctrl_0)
 650  8BB1 CB 67        	bit 4,a
 651  8BB3 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 652  8BB5
 653  8BB5 CD 98 8C     	call Guarda_foto_entidad_a_pintar
 654  8BB8
 655  8BB8 21 E4 89     14 ld hl,Ctrl_0
 656  8BBB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 657  8BBD
 658  8BBD AF           	xor a
 659  8BBE 32 E5 89     	ld (Obj_dibujado),a
 660  8BC1
 661  8BC1 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 662  8BC4 CD 49 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 663  8BC7
 664  8BC7              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 665  8BC7
 666  8BC7              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 667  8BC7
 668  8BC7              ;	call Calcula_numero_de_disparotes
 669  8BC7
 670  8BC7 CD 18 8D      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 671  8BCA              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 672  8BCA              ;														; _ interrupción.
 673  8BCA 3E 04        	ld a,4
 674  8BCC D3 FE        	out ($fe),a
 675  8BCE
 676  8BCE              ; ----------------------------------------
 677  8BCE
 678  8BCE 3A F9 89     	ld a,(Ctrl_1) 										; Existe Loop?
 679  8BD1 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 680  8BD3 CA C3 8A     	jp z,Main
 681  8BD6
 682  8BD6              ; -----
 683  8BD6              ;	(((
 684  8BD6
 685  8BD6 3A 43 8A     	ld a,(Contador_de_frames)
 686  8BD9 47           	ld b,a
 687  8BDA 3A 47 8A     	ld a,(Activa_recarga_cajas)
 688  8BDD B8           	cp b
 689  8BDE 28 08        	jr z,20F
 690  8BE0
 691  8BE0 21 F9 89     	ld hl,Ctrl_1
 692  8BE3 CB E6        	set 4,(hl)
 693  8BE5 C3 C3 8A     	jp Main
 694  8BE8
 695  8BE8 21 F9 89     20 ld hl,Ctrl_1
 696  8BEB CB A6        	res 4,(hl)
 697  8BED F3           	di
 698  8BEE
 699  8BEE 3A 43 8A     	ld a,(Contador_de_frames)
 700  8BF1
 701  8BF1              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 702  8BF1              ;! _ IMPREDECIBLE !!!!
 703  8BF1
 704  8BF1 C6 0A        	add 10
 705  8BF3 32 46 8A     	ld (Clock_Entidades_en_curso),a
 706  8BF6
 707  8BF6 C3 68 8A     	jp 4B
 708  8BF9
 709  8BF9 C9           	ret
 710  8BFA
 711  8BFA              ; --------------------------------------------------------------------------------------------------------------
 712  8BFA              ;
 713  8BFA              ;	27/05/23
 714  8BFA
 715  8BFA              Mov_obj
 716  8BFA
 717  8BFA              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 718  8BFA
 719  8BFA 3A F7 89     	ld a,(Ctrl_2)
 720  8BFD CB 4F        	bit 1,a
 721  8BFF 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 722  8C01
 723  8C01              ; Explosión:
 724  8C01
 725  8C01 3A F8 89     	ld a,(Frames_explosion)
 726  8C04 A7           	and a
 727  8C05 20 11        	jr nz,4F
 728  8C07
 729  8C07              ; Una alimaña menos!!!!!!!!!1
 730  8C07
 731  8C07 CD 52 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 732  8C0A 21 03 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 733  8C0D 35           	dec (hl)
 734  8C0E 21 04 8A     	ld hl,Entidades_en_curso
 735  8C11 35           	dec (hl)
 736  8C12 21 02 8A     	ld hl,Numero_de_entidades
 737  8C15 35           	dec (hl)
 738  8C16 18 40        	jr 3F
 739  8C18
 740  8C18              ; -----
 741  8C18
 742  8C18              ;	`Movemos´ la explosión.
 743  8C18
 744  8C18 2A C4 89     4 ld hl,(Puntero_DESPLZ_der)
 745  8C1B 23           	inc hl
 746  8C1C 23           	inc hl
 747  8C1D 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 748  8C20 CD 87 8D     	call Extrae_address
 749  8C23 22 BA 89     	ld (Puntero_objeto),hl
 750  8C26
 751  8C26 21 F8 89     	ld hl,Frames_explosion
 752  8C29 35           	dec (hl)
 753  8C2A
 754  8C2A CD 88 8C     	call Guarda_foto_entidad_a_borrar
 755  8C2D 18 29        	jr 3F
 756  8C2F
 757  8C2F AF           2 xor a
 758  8C30 32 E5 89     	ld (Obj_dibujado),a
 759  8C33 32 E4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 760  8C36              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 761  8C36              ; 														; _de la entidad.
 762  8C36 CD A2 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 763  8C39              ;														; Obj_dibujado="0".
 764  8C39              ; Movemos Entidades malignas.
 765  8C39
 766  8C39              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 767  8C39              ;	and a 												; _a movernos. (Limitador_de_entidades).
 768  8C39              ;	ret z
 769  8C39
 770  8C39 CD 5C 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 771  8C3C
 772  8C3C 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 773  8C3F CB 67        	bit 4,a
 774  8C41 C8           	ret z
 775  8C42
 776  8C42              ; Ha habido desplazamiento de la entidad maligna.
 777  8C42              ; Ha llegado a zona de AMADEUS ???
 778  8C42
 779  8C42 3A BD 89     	ld a,(Coordenada_y)
 780  8C45 FE 14        	cp $14
 781  8C47 D4 D9 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 782  8C4A              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 783  8C4A              ; ---------
 784  8C4A
 785  8C4A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 786  8C4C 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 787  8C4F CD A2 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 788  8C52 CD B9 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 789  8C55 CD 88 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 790  8C58 C9           3 ret													; _de la misma.
 791  8C59
 792  8C59              ; --------------------------------------------------------------------------------------------------------------
 793  8C59              ;
 794  8C59              ;	29/1/23
 795  8C59
 796  8C59              Mov_Amadeus
 797  8C59
 798  8C59 AF           	xor a
 799  8C5A 32 E5 89     	ld (Obj_dibujado),a
 800  8C5D CD A2 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 801  8C60              ;														; Obj_dibujado="0".
 802  8C60              ; Movemos Amadeus.
 803  8C60
 804  8C60 CD 74 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 805  8C63 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 806  8C66 CB 67        	bit 4,a
 807  8C68 C8           	ret z
 808  8C69
 809  8C69              ; ---------
 810  8C69
 811  8C69 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 812  8C6B 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 813  8C6E CD A2 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 814  8C71 CD B9 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 815  8C74 CD 88 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 816  8C77 C9           	ret													; _de la nave.
 817  8C78
 818  8C78              ; -----------------------------------------------------------------------------------
 819  8C78
 820  8C78 CD 8D 8D     Inicia_entidad	call Inicia_Puntero_objeto
 821  8C7B CD 10 9A     	call Recompone_posicion_inicio
 822  8C7E CD 32 94     	call Draw
 823  8C81 CD A0 7F     	call Guarda_foto_registros
 824  8C84 CD D5 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 825  8C87 C9           	ret
 826  8C88
 827  8C88              ; --------------------------------------------------------------------------------------------------------------
 828  8C88              ;
 829  8C88              ;	31/8/23
 830  8C88              ;
 831  8C88              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 832  8C88
 833  8C88              Guarda_foto_entidad_a_borrar
 834  8C88
 835  8C88 CD 16 97     	call Prepara_draw
 836  8C8B CD 46 96     	call calcula_CColumnass
 837  8C8E CD 7D 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 838  8C91 CD DC 96     	call Define_rutina_de_impresion
 839  8C94 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 840  8C97 C9           	ret
 841  8C98
 842  8C98              ; --------------------------------------------------------------------------------------------------------------
 843  8C98              ;
 844  8C98              ;	31/08/23
 845  8C98              ;
 846  8C98              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 847  8C98              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 848  8C98
 849  8C98              Guarda_foto_entidad_a_pintar
 850  8C98
 851  8C98 CD C5 8C     	call Repone_pintar
 852  8C9B CD 32 94     	call Draw
 853  8C9E CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 854  8CA1 C9           	ret
 855  8CA2
 856  8CA2              ; --------------------------------------------------------------------------------------------------------------
 857  8CA2              ;
 858  8CA2              ;
 859  8CA2
 860  8CA2 21 B6 89     Prepara_var_pintado_borrado	ld hl,Filas
 861  8CA5 3A E5 89     	ld a,(Obj_dibujado)
 862  8CA8 A7           	and a
 863  8CA9 28 05        	jr z,1F
 864  8CAB 11 DA 89     	ld de,Variables_de_pintado
 865  8CAE 18 03        	jr 2F
 866  8CB0 11 D0 89     1 ld de,Variables_de_borrado
 867  8CB3 01 08 00     2 ld bc,8
 868  8CB6 ED B0        	ldir
 869  8CB8 C9           	ret
 870  8CB9
 871  8CB9              ; --------------------------------------------------------------------------------------------------------------
 872  8CB9
 873  8CB9 21 D0 89     Repone_borrar ld hl,Variables_de_borrado
 874  8CBC 11 B6 89     	ld de,Filas
 875  8CBF 01 08 00     	ld bc,8
 876  8CC2 ED B0        	ldir
 877  8CC4 C9           	ret
 878  8CC5
 879  8CC5 21 DA 89     Repone_pintar ld hl,Variables_de_pintado
 880  8CC8 11 B6 89     	ld de,Filas
 881  8CCB 01 08 00     	ld bc,8
 882  8CCE ED B0        	ldir
 883  8CD0 C9           	ret
 884  8CD1
 885  8CD1              ; *************************************************************************************************************************************************************
 886  8CD1              ;
 887  8CD1              ; 8/1/23
 888  8CD1              ;
 889  8CD1              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 890  8CD1              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 891  8CD1              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 892  8CD1
 893  8CD1              ; Destruye HL y DE !!!!!
 894  8CD1
 895  8CD1              Inicia_punteros_de_cajas
 896  8CD1
 897  8CD1 21 8C 85     	ld hl,Indice_de_cajas
 898  8CD4 CD 87 8D         call Extrae_address
 899  8CD7 22 FC 89         ld (Puntero_store_caja),hl
 900  8CDA 21 8E 85     	ld hl,Indice_de_cajas+2
 901  8CDD 22 00 8A     	ld (Indice_restore_caja),hl
 902  8CE0 CD 87 8D     	call Extrae_address
 903  8CE3 22 FE 89     	ld (Puntero_restore_caja),hl
 904  8CE6 C9               ret
 905  8CE7
 906  8CE7              ; ---------------------------------------------------------------
 907  8CE7              ;
 908  8CE7              ;	9/8/23
 909  8CE7              ;
 910  8CE7              ;	Inicialización y gestión de álbumes de fotos y cajas.
 911  8CE7
 912  8CE7              Inicia_punteros_de_albumes_y_malotes
 913  8CE7
 914  8CE7 21 EC 84     	ld hl,Indice_album_de_fotos
 915  8CEA 22 24 8A     	ld (Puntero_indice_album_de_fotos),hl
 916  8CED CD 87 8D     	call Extrae_address
 917  8CF0 22 10 8A     	ld (Stack_snapshot),hl
 918  8CF3
 919  8CF3 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 920  8CF6 22 26 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 921  8CF9 CD 87 8D     	call Extrae_address
 922  8CFC 22 12 8A     	ld (Stack_snapshot_disparos),hl
 923  8CFF
 924  8CFF 21 FC 84     	ld hl,Indice_End_Snapshot
 925  8D02 22 28 8A     	ld (Puntero_indice_End_Snapshot),hl
 926  8D05 CD 87 8D     	call Extrae_address
 927  8D08 22 2C 8A     	ld (Puntero_de_End_Snapshot),hl
 928  8D0B
 929  8D0B 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 930  8D0E 22 2A 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 931  8D11 CD 87 8D     	call Extrae_address
 932  8D14 22 2E 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 933  8D17
 934  8D17 C9           	ret
 935  8D18
 936  8D18              ;	2/9/23
 937  8D18
 938  8D18              Avanza_puntero_de_album_de_fotos_y_malotes
 939  8D18
 940  8D18              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 941  8D18
 942  8D18              ; Estamos en el último álbum del índice???.
 943  8D18
 944  8D18 2A 24 8A     	ld hl,(Puntero_indice_album_de_fotos)
 945  8D1B 01 F2 84     	ld bc,Indice_album_de_fotos+6
 946  8D1E A7           	and a
 947  8D1F ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 948  8D21 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 949  8D23
 950  8D23 21 F9 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 951  8D26 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 952  8D28 76           	halt
 953  8D29 C9           	ret
 954  8D2A
 955  8D2A F3           1 di
 956  8D2B 2A 24 8A     	ld hl,(Puntero_indice_album_de_fotos)
 957  8D2E 23           	inc hl
 958  8D2F 23           	inc hl
 959  8D30 22 24 8A     	ld (Puntero_indice_album_de_fotos),hl
 960  8D33 CD 87 8D     	call Extrae_address
 961  8D36 22 10 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 962  8D39
 963  8D39 2A 28 8A     	ld hl,(Puntero_indice_End_Snapshot)
 964  8D3C 23           	inc hl
 965  8D3D 23           	inc hl
 966  8D3E 22 28 8A     	ld (Puntero_indice_End_Snapshot),hl
 967  8D41 CD 87 8D     	call Extrae_address
 968  8D44 22 2C 8A     	ld (Puntero_de_End_Snapshot),hl
 969  8D47 FB           	ei
 970  8D48
 971  8D48 C9           	ret
 972  8D49
 973  8D49              ; *************************************************************************************************************************************************************
 974  8D49              ;
 975  8D49              ; 8/1/23
 976  8D49              ;
 977  8D49              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 978  8D49
 979  8D49 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 980  8D4C 22 31 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 981  8D4F C9           	ret
 982  8D50 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 983  8D53 22 33 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 984  8D56 C9           	ret
 985  8D57
 986  8D57              ; -------------------------------------------------------------------------------------------------------------
 987  8D57              ;
 988  8D57              ; 3/8/23
 989  8D57              ;
 990  8D57
 991  8D57              Calcula_numero_de_malotes
 992  8D57
 993  8D57 21 00 70     	ld hl,Album_de_fotos
 994  8D5A EB           	ex de,hl
 995  8D5B 2A 14 8A     	ld hl,(End_Snapshot)
 996  8D5E
 997  8D5E 06 00        	ld b,0
 998  8D60 7D           	ld a,l
 999  8D61 93           	sub e
1000  8D62 28 07        	jr z,1F
1001  8D64
1002  8D64              ; Nº de malotes no es "0".
1003  8D64
1004  8D64 D6 06        2 sub 6
1005  8D66 04           	inc b
1006  8D67 A7           	and a
1007  8D68 20 FA        	jr nz,2B
1008  8D6A 78           	ld a,b
1009  8D6B
1010  8D6B 32 05 8A     1 ld (Numero_de_malotes),a
1011  8D6E C9           	ret
1012  8D6F
1013  8D6F              ; -------------------------------------------------------------------------------------------------------------
1014  8D6F              ;
1015  8D6F              ; 28/2/23
1016  8D6F              ;
1017  8D6F
1018  8D6F              Calcula_numero_de_disparotes
1019  8D6F
1020  8D6F 21 0D 72     	ld hl,Album_de_fotos_disparos
1021  8D72 EB           	ex de,hl
1022  8D73 2A 2E 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1023  8D76
1024  8D76 06 00        	ld b,0
1025  8D78 7D           	ld a,l
1026  8D79 93           	sub e
1027  8D7A 28 07        	jr z,1F
1028  8D7C
1029  8D7C              ; Nº de malotes no es "0".
1030  8D7C
1031  8D7C D6 06        2 sub 6
1032  8D7E 04           	inc b
1033  8D7F A7           	and a
1034  8D80 20 FA        	jr nz,2B
1035  8D82 78           	ld a,b
1036  8D83
1037  8D83 32 30 8A     1 ld (Numero_de_disparotes),a
1038  8D86 C9           	ret
1039  8D87
1040  8D87              ; *************************************************************************************************************************************************************
1041  8D87              ;
1042  8D87              ; 20/10/22
1043  8D87              ;
1044  8D87              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1045  8D87              ;
1046  8D87              ; Destruye el puntero y DE !!!!!
1047  8D87
1048  8D87 5E           Extrae_address ld e,(hl)
1049  8D88 23           	inc hl
1050  8D89 56           	ld d,(hl)
1051  8D8A 2B           	dec hl
1052  8D8B EB           	ex de,hl
1053  8D8C C9           	ret
1054  8D8D
1055  8D8D              ; *************************************************************************************************************************************************************
1056  8D8D              ;
1057  8D8D              ;	7/2/23
1058  8D8D              ;
1059  8D8D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1060  8D8D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1061  8D8D              ;
1062  8D8D              ;   Destruye HL y BC !!!!!,
1063  8D8D              ;
1064  8D8D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1065  8D8D              ;					"0" ..... Izquierda.
1066  8D8D
1067  8D8D              Inicia_Puntero_objeto
1068  8D8D
1069  8D8D 3A CA 89     	ld a,(Cuad_objeto)
1070  8D90 E6 01        	and 1
1071  8D92 F5           	push af
1072  8D93 CC B1 8D     	call z,Inicia_puntero_objeto_izq
1073  8D96 F1           	pop af
1074  8D97 28 2B        	jr z,1F
1075  8D99 CD 9E 8D     	call Inicia_puntero_objeto_der
1076  8D9C 18 26        	jr 1F
1077  8D9E
1078  8D9E              ; Arrancamos desde la parte izquierda de la pantalla.
1079  8D9E              ; Iniciamos (Indice_Sprite_der).
1080  8D9E
1081  8D9E 2A C0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1082  8DA1 22 C4 89     	ld (Puntero_DESPLZ_der),hl
1083  8DA4 CD 87 8D     	call Extrae_address
1084  8DA7 22 BA 89     	ld (Puntero_objeto),hl
1085  8DAA
1086  8DAA 2A C2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1087  8DAD 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1088  8DB0 C9           	ret
1089  8DB1
1090  8DB1              ; Arrancamos desde la parte derecha de la pantalla.
1091  8DB1              ; Iniciamos (Indice_Sprite_izq).
1092  8DB1
1093  8DB1 2A C2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1094  8DB4 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1095  8DB7 CD 87 8D     	call Extrae_address
1096  8DBA 22 BA 89     	ld (Puntero_objeto),hl
1097  8DBD
1098  8DBD 2A C0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1099  8DC0 22 C4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1100  8DC3 C9           	ret
1101  8DC4
1102  8DC4              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1103  8DC4
1104  8DC4 21 40 83     1 ld hl,Amadeus
1105  8DC7 ED 4B BA 89  	ld bc,(Puntero_objeto)
1106  8DCB B7 ED 42     	sub hl,bc
1107  8DCE C0           	ret nz
1108  8DCF 21 E4 89     	ld hl,Ctrl_0
1109  8DD2 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1110  8DD4 C9           	ret 												; _de nuestra nave en los extremos.
1111  8DD5
1112  8DD5              ; *************************************************************************************************************************************************************
1113  8DD5              ;
1114  8DD5              ;	14/5/23
1115  8DD5              ;
1116  8DD5              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1117  8DD5              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1118  8DD5
1119  8DD5              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1120  8DD5              ;	_de la 2ª y 3ª entidad respectivamente.
1121  8DD5
1122  8DD5              Store_Restore_cajas
1123  8DD5
1124  8DD5 E5           	push hl
1125  8DD6 D5           	push de
1126  8DD7 C5            	push bc
1127  8DD8
1128  8DD8              ;	STORE !!!!!
1129  8DD8              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1130  8DD8
1131  8DD8 21 B6 89     	ld hl,Filas
1132  8DDB ED 5B FC 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1133  8DDF 01 43 00     	ld bc,67
1134  8DE2 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1135  8DE4
1136  8DE4              ; 	Entidad_sospechosa. 20/4/23
1137  8DE4
1138  8DE4 3A CF 89     	ld a,(Impacto)
1139  8DE7 A7           	and a
1140  8DE8 28 0C        	jr z,1F
1141  8DEA
1142  8DEA 2A FC 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1143  8DED 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1144  8DF0 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1145  8DF1 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1146  8DF3 22 36 8A     	ld (Entidad_sospechosa_de_colision),hl
1147  8DF6
1148  8DF6              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1149  8DF6
1150  8DF6 2A FE 89     1 ld hl,(Puntero_restore_caja)
1151  8DF9 7E           	ld a,(hl)
1152  8DFA A7           	and a
1153  8DFB F5           	push af
1154  8DFC 28 08        	jr z,2F
1155  8DFE
1156  8DFE 11 B6 89     	ld de,Filas
1157  8E01 01 43 00     	ld bc,67
1158  8E04 ED B0        	ldir
1159  8E06
1160  8E06 CD 22 8E     2 call Incrementa_punteros_de_cajas
1161  8E09 F1           	pop af
1162  8E0A 28 EA        	jr z,1B
1163  8E0C
1164  8E0C C1           	pop bc
1165  8E0D D1           	pop de
1166  8E0E E1           	pop hl
1167  8E0F
1168  8E0F C9           	ret
1169  8E10
1170  8E10              ; **************************************************************************************************
1171  8E10              ;
1172  8E10              ;	12/05/23
1173  8E10              ;
1174  8E10              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1175  8E10
1176  8E10 E5           Restore_entidad push hl
1177  8E11 D5           	push de
1178  8E12 C5            	push bc
1179  8E13
1180  8E13 2A FC 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1181  8E16 11 B6 89     	ld de,Filas
1182  8E19 01 43 00     	ld bc,67
1183  8E1C ED B0        	ldir
1184  8E1E
1185  8E1E C1           	pop bc
1186  8E1F D1           	pop de
1187  8E20 E1           	pop hl
1188  8E21 C9           	ret
1189  8E22
1190  8E22
1191  8E22              ; **************************************************************************************************
1192  8E22              ;
1193  8E22              ;	08/05/23
1194  8E22              ;
1195  8E22              ;	Incrementamos los dos punteros de entidades. (+1).
1196  8E22
1197  8E22 2A FE 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1198  8E25 22 FC 89     	ld (Puntero_store_caja),hl
1199  8E28 2A 00 8A     	ld hl,(Indice_restore_caja)
1200  8E2B 23           	inc hl
1201  8E2C 23           	inc hl
1202  8E2D 22 00 8A     	ld (Indice_restore_caja),hl
1203  8E30 CD 87 8D         call Extrae_address
1204  8E33 22 FE 89         ld (Puntero_restore_caja),hl
1205  8E36 C9               ret
1206  8E37
1207  8E37              ; **************************************************************************************************
1208  8E37              ;
1209  8E37              ;	25/01/23
1210  8E37              ;
1211  8E37              ;	Restore_Amadeus
1212  8E37              ;
1213  8E37              ;	Cargamos en DRAW los parámetros de Amadeus.
1214  8E37              ;
1215  8E37
1216  8E37 E5           Restore_Amadeus	push hl
1217  8E38 D5           	push de
1218  8E39 C5            	push bc
1219  8E3A 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1220  8E3D 11 B6 89     	ld de,Filas
1221  8E40 01 43 00     	ld bc,67
1222  8E43 ED B0        	ldir
1223  8E45 C1           	pop bc
1224  8E46 D1           	pop de
1225  8E47 E1           	pop hl
1226  8E48 C9           	ret
1227  8E49
1228  8E49              ; *************************************************************************************************************************************************************
1229  8E49              ;
1230  8E49              ;	29/04/23
1231  8E49              ;
1232  8E49              ;	Store_Amadeus
1233  8E49              ;
1234  8E49              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1235  8E49              ;
1236  8E49              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1237  8E49              ;
1238  8E49              ;	DESTRUYE: HL y BC y DE.
1239  8E49
1240  8E49 21 B6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1241  8E4C 01 43 00     	ld bc,67
1242  8E4F ED B0        	ldir
1243  8E51 C9           	ret
1244  8E52
1245  8E52              ; -----------------------------------------------------------
1246  8E52              ;
1247  8E52              ;	27/04/23
1248  8E52              ;
1249  8E52              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1250  8E52              ;
1251  8E52              ;	Destruye: HL,BC,DE,A
1252  8E52
1253  8E52 21 B6 89     Borra_datos_entidad ld hl,Filas
1254  8E55 01 42 00     	ld bc,66
1255  8E58 AF           	xor a
1256  8E59 77           	ld (hl),a
1257  8E5A 11 B7 89     	ld de,Filas+1
1258  8E5D ED B0        	ldir
1259  8E5F C9           	ret
1260  8E60
1261  8E60              ; -----------------------------------------------------------
1262  8E60
1263  8E60              ; Teclado.
1264  8E60
1265  8E60 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1266  8E62 DB FE        	in a,($fe)
1267  8E64 E6 01        	and $01
1268  8E66 28 02        	jr z,1f
1269  8E68 18 F6        	jr Pulsa_ENTER
1270  8E6A C9           1 ret
1271  8E6B
1272  8E6B              ; **************************************************************************************************
1273  8E6B              ;
1274  8E6B              ; Temporización.
1275  8E6B
1276  8E6B              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1277  8E6B              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1278  8E6B              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1279  8E6B              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1280  8E6B
1281  8E6B              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1282  8E6B              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1283  8E6B              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1284  8E6B
1285  8E6B              ; A partir de $4f61 no hace falta DELAY.
1286  8E6B
1287  8E6B              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1288  8E6B
1289  8E6B 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1290  8E6E 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1291  8E6F 78           	LD A,B
1292  8E70 A7           	AND A
1293  8E71 20 FB        	JR NZ,wait
1294  8E73 C9           	RET
1295  8E74
1296  8E74              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1297  8E74              ;
1298  8E74              ;	5/3/23
1299  8E74              ;
1300  8E74              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1301  8E74
1302  8E74              Movimiento_Amadeus
1303  8E74
1304  8E74              ; Disparo.
1305  8E74
1306  8E74 3A 48 8A     	ld a,(Disparo_Amadeus)
1307  8E77 A7           	and a
1308  8E78 20 02        	jr nz,1F
1309  8E7A 18 15        	jr 2F
1310  8E7C
1311  8E7C 3E F7        1 ld a,$f7													; "5" para disparar.
1312  8E7E DB FE        	in a,($fe)
1313  8E80 E6 10        	and $10
1314  8E82
1315  8E82 F5           	push af
1316  8E83 CC 3C 8F     	call z,Genera_disparo
1317  8E86 F1           	pop af
1318  8E87 20 08        	jr nz,2F
1319  8E89
1320  8E89 3A 48 8A     	ld a,(Disparo_Amadeus)
1321  8E8C EE 01        	xor 1
1322  8E8E 32 48 8A     	ld (Disparo_Amadeus),a
1323  8E91
1324  8E91 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1325  8E93 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1326  8E95 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1327  8E97 CC CA 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1328  8E9A 3E F7        	ld a,$f7
1329  8E9C DB FE        	in a,($fe)
1330  8E9E E6 01        	and $01
1331  8EA0 C8           	ret z
1332  8EA1
1333  8EA1 3E F7        	ld a,$f7
1334  8EA3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1335  8EA5 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1336  8EA7 CC AC 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1337  8EAA C9           	ret
1338  8EAB
1339  8EAB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1340  8EAB              ;
1341  8EAB              ;	Rutina provisional para que los malotes cagen balas.
1342  8EAB
1343  8EAB              Detecta_disparo_entidad
1344  8EAB
1345  8EAB 3A 4B 8A     	ld a,(Disparo_entidad)
1346  8EAE A7           	and a
1347  8EAF C8           	ret z
1348  8EB0
1349  8EB0              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1350  8EB0
1351  8EB0              ;	ld a,$7f				; Detecta SPACE.
1352  8EB0              ;	in a,($fe)
1353  8EB0              ;	and 1
1354  8EB0              ;	ret nz
1355  8EB0
1356  8EB0              ;	call Genera_disparo
1357  8EB0 C9           	ret
1358  8EB1
1359  8EB1              ; ----------------------------------------------------------------------
1360  8EB1              ;
1361  8EB1              ;	11/8/23
1362  8EB1
1363  8EB1              Frame
1364  8EB1
1365  8EB1              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1366  8EB1              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1367  8EB1
1368  8EB1              ; PINTAMOS.
1369  8EB1
1370  8EB1 ED 73 0E 8A  	ld (Stack_3),sp
1371  8EB5
1372  8EB5              ; Guardamos registros y SP.
1373  8EB5
1374  8EB5 08           	ex af,af'
1375  8EB6 F5           	push af	;af'
1376  8EB7 D9           	exx
1377  8EB8 E5           	push hl	;hl'
1378  8EB9 D5           	push de	;de'
1379  8EBA C5           	push bc	;bc'
1380  8EBB D9           	exx
1381  8EBC E5           	push hl	;hl
1382  8EBD D5           	push de	;de
1383  8EBE C5           	push bc	;bc
1384  8EBF 08           	ex af,af'
1385  8EC0 F5           	push af	;af
1386  8EC1 DD E5        	push ix
1387  8EC3 FD E5        	push iy
1388  8EC5
1389  8EC5 3E 02        	ld a,2
1390  8EC7 D3 FE            out ($fe),a											; Rojo.
1391  8EC9
1392  8EC9              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1393  8EC9              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1394  8EC9
1395  8EC9 2A 24 8A     	ld hl,(Puntero_indice_album_de_fotos)
1396  8ECC 01 EC 84     	ld bc,Indice_album_de_fotos
1397  8ECF A7           	and a
1398  8ED0 ED 42        	sbc hl,bc
1399  8ED2 28 4E        	jr z,6F
1400  8ED4
1401  8ED4              ; $59,
1402  8ED4
1403  8ED4 CD 57 8D     	call Calcula_numero_de_malotes
1404  8ED7
1405  8ED7 CD 40 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1406  8EDA
1407  8EDA              ;	call Extrae_foto_disparos
1408  8EDA 3E 01            ld a,1
1409  8EDC D3 FE            out ($fe),a											; Azul.
1410  8EDE
1411  8EDE              ; 	Gestiona albumes de fotos.
1412  8EDE
1413  8EDE              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1414  8EDE CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1415  8EE1
1416  8EE1              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1417  8EE1
1418  8EE1 3A F9 89     	ld a,(Ctrl_1)
1419  8EE4 CB 6F        	bit 5,a
1420  8EE6 20 24        	jr nz,1F
1421  8EE8
1422  8EE8              ; No hemos terminado de guardar el último FRAME.
1423  8EE8
1424  8EE8 2A 24 8A     	ld hl,(Puntero_indice_album_de_fotos)
1425  8EEB              ;	ld bc,Indice_album_de_fotos
1426  8EEB 2B           	dec hl
1427  8EEC 2B           	dec hl
1428  8EED
1429  8EED              ;	ld a,l
1430  8EED              ;	sub c
1431  8EED              ;	jr z,$
1432  8EED
1433  8EED 22 24 8A     	ld (Puntero_indice_album_de_fotos),hl
1434  8EF0
1435  8EF0 2A 28 8A     	ld hl,(Puntero_indice_End_Snapshot)
1436  8EF3 2B           	dec hl
1437  8EF4 2B           	dec hl
1438  8EF5 22 28 8A     	ld (Puntero_indice_End_Snapshot),hl
1439  8EF8 CD 87 8D     	call Extrae_address
1440  8EFB 22 2C 8A     	ld (Puntero_de_End_Snapshot),hl
1441  8EFE
1442  8EFE CD 87 8D     	call Extrae_address
1443  8F01
1444  8F01              ; Esta vacío este album???
1445  8F01
1446  8F01 24           	inc h
1447  8F02 25           	dec h
1448  8F03 20 02        	jr nz,5F
1449  8F05
1450  8F05              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1451  8F05
1452  8F05 18 05        	jr 1F
1453  8F07
1454  8F07 22 10 8A     5 ld (Stack_snapshot),hl
1455  8F0A 18 09        	jr 2F
1456  8F0C
1457  8F0C              ; FRAME completo.
1458  8F0C
1459  8F0C 2A 24 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1460  8F0F CD 87 8D     	call Extrae_address
1461  8F12 22 10 8A     	ld (Stack_snapshot),hl
1462  8F15
1463  8F15              ;	En este punto:
1464  8F15
1465  8F15              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1466  8F15              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1467  8F15
1468  8F15              ; RELOJES.
1469  8F15
1470  8F15 21 43 8A     2 ld hl,Contador_de_frames
1471  8F18 7E           	ld a,(hl)
1472  8F19 FE FF        	cp $ff
1473  8F1B 20 04        	jr nz,3F
1474  8F1D 34           	inc (hl)
1475  8F1E 21 44 8A     	ld hl,Contador_de_frames_2
1476  8F21 34           3 inc (hl)											; 0 - 255
1477  8F22
1478  8F22 21 F9 89     6 ld hl,Ctrl_1
1479  8F25 CB AE        	res 5,(hl)
1480  8F27
1481  8F27              ; Recuperamos registros y SP.
1482  8F27
1483  8F27 FD E1        	pop iy
1484  8F29 DD E1        	pop ix
1485  8F2B F1           	pop af
1486  8F2C C1           	pop bc
1487  8F2D D1           	pop de
1488  8F2E E1           	pop hl
1489  8F2F D9           	exx
1490  8F30 C1           	pop bc
1491  8F31 D1           	pop de
1492  8F32 E1           	pop hl
1493  8F33 08           	ex af,af'
1494  8F34 F1           	pop af
1495  8F35 08           	ex af,af'
1496  8F36 D9           	exx
1497  8F37
1498  8F37 ED 7B 0E 8A  	ld sp,(Stack_3)
1499  8F3B
1500  8F3B C9           	ret
1501  8F3C
1502  8F3C              ; ---------------------------------------------------------------
1503  8F3C
1504  8F3C              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F3C              ; ******************************************************************************************************************************************************************************************
   2+ 8F3C              ;
   3+ 8F3C              ;   21/07/23
   4+ 8F3C              ;
   5+ 8F3C              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F3C              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F3C              ;
   8+ 8F3C              ;
   9+ 8F3C              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F3C              ;
  11+ 8F3C              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F3C              ;               _ hacen las entidades hacia abajo.
  13+ 8F3C              ;
  14+ 8F3C              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F3C              ;
  16+ 8F3C              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F3C              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F3C              ;
  19+ 8F3C              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F3C              ;           _ la bala.
  21+ 8F3C              ;
  22+ 8F3C              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F3C              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F3C              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F3C              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F3C              ;           _ en el momento de generarse la bala)).
  27+ 8F3C
  28+ 8F3C              Genera_disparo
  29+ 8F3C
  30+ 8F3C              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F3C              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F3C              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F3C              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F3C              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F3C              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F3C              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F3C
  38+ 8F3C              ; Exclusiones:
  39+ 8F3C
  40+ 8F3C 3A CE 89         ld a,(Vel_down)
  41+ 8F3F 47               ld b,a
  42+ 8F40 3A 42 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F43 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F44 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F45 3A F3 89         ld a,(Columnas)
  46+ 8F48 47               ld b,a
  47+ 8F49 3A B7 89         ld a,(Columns)
  48+ 8F4C B8               cp b
  49+ 8F4D C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F4E
  51+ 8F4E              ; ----- ----- -----
  52+ 8F4E
  53+ 8F4E 3A E4 89         ld a,(Ctrl_0)
  54+ 8F51 CB 77            bit 6,a
  55+ 8F53 20 06            jr nz,14F
  56+ 8F55
  57+ 8F55 3A BD 89         ld a,(Coordenada_y)
  58+ 8F58 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F5A D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F5B
  61+ 8F5B 21 00 80     14 ld hl,Indice_disparo
  62+ 8F5E 3A BE 89         ld a,(CTRL_DESPLZ)
  63+ 8F61 4F               ld c,a
  64+ 8F62 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F64              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F64              ;                                            ""        ""       "f9", B="1"
  67+ 8F64              ;                                            ""        ""       "fb", B="2"
  68+ 8F64              ;                                            ""        ""       "fb", B="3"
  69+ 8F64 A7               and a
  70+ 8F65 28 10            jr z,1F
  71+ 8F67 E6 01            and 1
  72+ 8F69 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F6A
  74+ 8F6A 79               ld a,c
  75+ 8F6B 16 F9            ld d,$f9
  76+ 8F6D 23           2 inc hl
  77+ 8F6E 23               inc hl
  78+ 8F6F 04               inc b
  79+ 8F70 BA               cp d
  80+ 8F71 28 04            jr z,1F
  81+ 8F73 14               inc d
  82+ 8F74 14               inc d
  83+ 8F75 18 F6            jr 2B
  84+ 8F77
  85+ 8F77 CD 87 8D     1 call Extrae_address
  86+ 8F7A E5               push hl
  87+ 8F7B FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F7D DD 21 C5 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F81
  90+ 8F81              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F81              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F81
  93+ 8F81 3A E4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F84 CB 77            bit 6,a
  95+ 8F86 20 04            jr nz,19F
  96+ 8F88
  97+ 8F88 AF               xor a
  98+ 8F89 32 4B 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F8C
 100+ 8F8C 3A CA 89     19 ld a,(Cuad_objeto)
 101+ 8F8F FE 02            cp 2
 102+ 8F91 38 66            jr c,3F
 103+ 8F93 28 64            jr z,3F
 104+ 8F95
 105+ 8F95              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F95
 107+ 8F95 E6 01            and 1
 108+ 8F97 28 30            jr z,4F
 109+ 8F99
 110+ 8F99              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F99              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F99              ;
 113+ 8F99              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F99              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F99              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F99
 117+ 8F99 2A B8 89     	ld hl,(Posicion_actual)
 118+ 8F9C
 119+ 8F9C              ;   Amadeus o entidad ???.
 120+ 8F9C
 121+ 8F9C 3A E4 89         ld a,(Ctrl_0)
 122+ 8F9F CB 77            bit 6,a
 123+ 8FA1 28 0A            jr z,8F
 124+ 8FA3
 125+ 8FA3              ; 	Dispara Amadeus.
 126+ 8FA3
 127+ 8FA3 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8FA5 CD 31 97         call PreviousScan
 129+ 8FA8 CD 31 97         call PreviousScan
 130+ 8FAB
 131+ 8FAB              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8FAB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8FAB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8FAB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8FAB
 136+ 8FAB 18 11            jr 10F
 137+ 8FAD
 138+ 8FAD              ; 	Dispara Entidad.
 139+ 8FAD
 140+ 8FAD 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8FB0              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8FB0
 143+ 8FB0              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8FB0              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8FB0
 146+ 8FB0 C5               push bc
 147+ 8FB1 06 10            ld b,16
 148+ 8FB3 CD 22 97     9 call NextScan
 149+ 8FB6 10 FB            djnz 9B
 150+ 8FB8 C1               pop bc
 151+ 8FB9 CD 23 90         call Ajusta_disparo_parte_izquierda
 152+ 8FBC 18 06            jr 17F
 153+ 8FBE
 154+ 8FBE              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FBE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FBE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FBE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FBE
 159+ 8FBE CD 23 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FC1 CD 98 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FC4              ;                                                      ; _al generar el disparo.
 162+ 8FC4
 163+ 8FC4              ; 	LLegados a este punto tendremos:
 164+ 8FC4              ;
 165+ 8FC4              ;       Puntero_objeto_disparo en IY.
 166+ 8FC4              ;       Rutinas_de_impresion en IX.
 167+ 8FC4              ;       Puntero_de_impresion en HL.
 168+ 8FC4              ;       Impacto/Dirección en BC.
 169+ 8FC4
 170+ 8FC4 CD 2B 90     17 call Almacena_disparo
 171+ 8FC7 18 52            jr 6F                                             ; RET.
 172+ 8FC9
 173+ 8FC9              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FC9              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FC9              ;
 176+ 8FC9              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FC9              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FC9              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FC9
 180+ 8FC9 2A B8 89     4 ld hl,(Posicion_actual)
 181+ 8FCC
 182+ 8FCC              ;   Amadeus o entidad ???.
 183+ 8FCC
 184+ 8FCC 3A E4 89         ld a,(Ctrl_0)
 185+ 8FCF CB 77            bit 6,a
 186+ 8FD1 28 0A            jr z,11F
 187+ 8FD3
 188+ 8FD3              ; 	Dispara Amadeus.
 189+ 8FD3
 190+ 8FD3 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FD5 CD 31 97         call PreviousScan
 192+ 8FD8 CD 31 97         call PreviousScan
 193+ 8FDB
 194+ 8FDB              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FDB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FDB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FDB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FDB
 199+ 8FDB 18 11            jr 13F
 200+ 8FDD
 201+ 8FDD              ; 	Dispara Entidad.
 202+ 8FDD
 203+ 8FDD 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FE0              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FE0
 206+ 8FE0              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FE0              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FE0
 209+ 8FE0 C5               push bc
 210+ 8FE1 06 10            ld b,16
 211+ 8FE3 CD 22 97     12 call NextScan
 212+ 8FE6 10 FB            djnz 12B
 213+ 8FE8 C1               pop bc
 214+ 8FE9
 215+ 8FE9 CD 1C 90         call Ajusta_disparo_parte_derecha
 216+ 8FEC 18 06            jr 18F
 217+ 8FEE
 218+ 8FEE              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FEE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FEE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FEE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FEE
 223+ 8FEE CD 1C 90     13 call Ajusta_disparo_parte_derecha
 224+ 8FF1 CD 98 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FF4              ;                                                       ; _al generar el disparo.
 226+ 8FF4
 227+ 8FF4              ; LLegados a este punto tendremos:
 228+ 8FF4              ;
 229+ 8FF4              ;       Puntero_objeto_disparo en IY.
 230+ 8FF4              ;       Rutinas_de_impresion en IX.
 231+ 8FF4              ;       Puntero_de_impresion en HL.
 232+ 8FF4              ;       Impacto/Dirección en BC.
 233+ 8FF4
 234+ 8FF4 CD 2B 90     18 call Almacena_disparo
 235+ 8FF7 18 22            jr 6F                                               ; RET.
 236+ 8FF9
 237+ 8FF9              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FF9
 239+ 8FF9 28 11        3 jr z,5F
 240+ 8FFB
 241+ 8FFB              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FFB              ;
 243+ 8FFB              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FFB              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FFB              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FFB              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FFB
 248+ 8FFB              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FFB              ;	   ""        ""       "f9", B="1"
 250+ 8FFB              ;	   ""        ""       "fb", B="2"
 251+ 8FFB              ; 	   ""        ""       "fb", B="3"
 252+ 8FFB
 253+ 8FFB 2A B8 89     	ld hl,(Posicion_actual)
 254+ 8FFE CD 22 97     	call NextScan
 255+ 9001
 256+ 9001              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9001              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9001              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9001              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9001
 261+ 9001 CD 23 90         call Ajusta_disparo_parte_izquierda
 262+ 9004
 263+ 9004              ; 	No se produce impacto. B="$80"
 264+ 9004              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9004
 266+ 9004 01 80 80         ld bc,$8080
 267+ 9007
 268+ 9007              ; 	LLegados a este punto tendremos:
 269+ 9007              ;
 270+ 9007              ;       Puntero_objeto_disparo en IY.
 271+ 9007              ;       Rutinas_de_impresion en IX.
 272+ 9007              ;       Puntero_de_impresion en HL.
 273+ 9007              ;       Impacto/Dirección en BC.
 274+ 9007
 275+ 9007 CD 2B 90         call Almacena_disparo
 276+ 900A 18 0F            jr 6F                                           ; RET.
 277+ 900C
 278+ 900C              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 900C              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 900C              ;
 281+ 900C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 900C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 900C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 900C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 900C
 286+ 900C 2A B8 89     5 ld hl,(Posicion_actual)
 287+ 900F CD 22 97     	call NextScan
 288+ 9012
 289+ 9012              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9012              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9012              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9012              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9012
 294+ 9012 CD 1C 90         call Ajusta_disparo_parte_derecha
 295+ 9015
 296+ 9015              ; 	No se produce impacto. B="$80"
 297+ 9015              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9015
 299+ 9015 01 80 80     15 ld bc,$8080
 300+ 9018
 301+ 9018              ; 	LLegados a este punto tendremos:
 302+ 9018              ;
 303+ 9018              ;       Puntero_objeto_disparo en IY.
 304+ 9018              ;       Rutinas_de_impresion en IX.
 305+ 9018              ;       Puntero_de_impresion en HL.
 306+ 9018              ;       Impacto/Dirección en BC.
 307+ 9018
 308+ 9018 CD 2B 90         call Almacena_disparo
 309+ 901B
 310+ 901B C9           6 ret
 311+ 901C
 312+ 901C              ; ----------------------------------------------------------------
 313+ 901C              ;
 314+ 901C              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 901C              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 901C              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 901C
 318+ 901C 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 901D FE 02            cp 2
 320+ 901F 38 01            jr c,1F
 321+ 9021 23               inc hl
 322+ 9022 C9           1 ret
 323+ 9023
 324+ 9023 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9024 FE 01        	cp 1
 326+ 9026 20 01        	jr nz,1F
 327+ 9028 2B           	dec hl
 328+ 9029 2B           1 dec hl
 329+ 902A C9               ret
 330+ 902B
 331+ 902B              ; ----------------------------------------------------------------
 332+ 902B              ;
 333+ 902B              ;   25/02/23
 334+ 902B              ;
 335+ 902B              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 902B              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 902B              ;
 338+ 902B              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 902B              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 902B
 341+ 902B              Almacena_disparo
 342+ 902B
 343+ 902B E5               push hl  										; HL contiene el puntero de impresión.
 344+ 902C F1               pop af
 345+ 902D 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 902E
 347+ 902E 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 902F E6 01            and 1
 349+ 9031 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9033              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9033              ; 	Dispara AMADEUS.
 352+ 9033
 353+ 9033              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9033              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9033              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9033              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9033
 358+ 9033 C5               push bc
 359+ 9034 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9037 2A 33 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 903A A7               and a
 362+ 903B ED 42            sbc hl,bc
 363+ 903D CC 50 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9040 C1               pop bc
 365+ 9041 28 54            jr z,4F
 366+ 9043
 367+ 9043 2A 33 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9046 23               inc hl
 369+ 9047 23               inc hl
 370+ 9048 22 33 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 904B              ;                                                   ; _ Disparo_(+1).
 372+ 904B 18 18            jr 2F
 373+ 904D
 374+ 904D              ; Dispara una entidad.
 375+ 904D
 376+ 904D C5           1 push bc
 377+ 904E 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9051 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9054 A7               and a
 380+ 9055 ED 42            sbc hl,bc
 381+ 9057 CC 49 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 905A C1               pop bc
 383+ 905B 28 3A            jr z,4F
 384+ 905D
 385+ 905D 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9060 23               inc hl
 387+ 9061 23               inc hl
 388+ 9062 22 31 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9065              ;                                                   ; _ Disparo_(+1).
 390+ 9065 CD 87 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9068              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9068              ;
 393+ 9068              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9068              ;                                                     Rutinas_de_impresion en IX.
 395+ 9068              ;                                                     Puntero_de_impresion en HL.
 396+ 9068              ;                                                     Impacto/Dirección en BC.
 397+ 9068
 398+ 9068 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9069 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 906A 23               inc hl                                          ; _ al siguiente.
 401+ 906B A7               and a
 402+ 906C 20 C0            jr nz,3B
 403+ 906E
 404+ 906E 08               ex af,af
 405+ 906F ED 73 0A 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9073 F9               ld sp,hl
 407+ 9074
 408+ 9074 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9076 F5               push af                                         ; Puntero de impresión.
 410+ 9077 FD E5            push iy                                         ; Puntero objeto.
 411+ 9079 C5               push bc                                         ; Control.
 412+ 907A
 413+ 907A ED 7B 0A 8A      ld sp,(Stack)
 414+ 907E
 415+ 907E              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 907E
 417+ 907E 21 F9 89     	ld hl,Ctrl_1
 418+ 9081 CB C6        	set 0,(hl)
 419+ 9083
 420+ 9083 DD E5        	push ix
 421+ 9085 E1               pop hl
 422+ 9086 F5               push af
 423+ 9087 DD E1            pop ix
 424+ 9089
 425+ 9089 CD A0 7F     	call Guarda_foto_registros
 426+ 908C
 427+ 908C 21 F9 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 908F CB 86        	res 0,(hl)
 429+ 9091
 430+ 9091              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9091              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9091
 433+ 9091 CD 50 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9094 CD 49 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 9097
 436+ 9097 C9           4 ret
 437+ 9098
 438+ 9098              ; ----------------------------------------------------------------
 439+ 9098              ;
 440+ 9098              ;   4/3/23
 441+ 9098              ;
 442+ 9098              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9098              ;   _ al generarse el disparo.
 444+ 9098              ;
 445+ 9098              ;       "$80" ..... No se produce colisión.
 446+ 9098              ;       "$81" ..... Se produce colisión.
 447+ 9098              ;
 448+ 9098              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9098              ;         _ que forman el disparo.
 450+ 9098
 451+ 9098
 452+ 9098              Comprueba_Colision
 453+ 9098
 454+ 9098              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9098
 456+ 9098 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 909A E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 909B
 459+ 909B CD D1 90         call Modifica_H_Velocidad_disparo
 460+ 909E
 461+ 909E 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 909F FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 90A1 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 90A3
 465+ 90A3 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 90A5 CD C1 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 90A8
 468+ 90A8 7B               ld a,e
 469+ 90A9 E6 01            and 1
 470+ 90AB 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 90AD              ;                                                  ; _ para activar IMPACTO.
 472+ 90AD E1               pop hl
 473+ 90AE E5               push hl
 474+ 90AF CD 22 97         call NextScan
 475+ 90B2
 476+ 90B2 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 90B3 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 90B5 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 90B7              ;                                                  ; _ 2º scanline si esto es así.
 480+ 90B7 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 90B9 CD C1 90         call Bucle_2
 482+ 90BC
 483+ 90BC 43           1 ld b,e
 484+ 90BD E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90BE FD E1            pop iy
 486+ 90C0 C9               ret
 487+ 90C1
 488+ 90C1              ; ---------- ----------
 489+ 90C1
 490+ 90C1 06 02        Bucle_2 ld b,2
 491+ 90C3 FD 7E 00     2 ld a,(iy)
 492+ 90C6 A6               and (hl)
 493+ 90C7 28 02            jr z,1F
 494+ 90C9 1E 81            ld e,$81
 495+ 90CB 23           1 inc hl
 496+ 90CC FD 23            inc iy
 497+ 90CE 10 F3            djnz 2B
 498+ 90D0 C9               ret
 499+ 90D1
 500+ 90D1              ; ---------- ----------
 501+ 90D1              ;
 502+ 90D1              ;   21/7/23
 503+ 90D1
 504+ 90D1              Modifica_H_Velocidad_disparo
 505+ 90D1
 506+ 90D1 3A 42 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90D4 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90D6 D0               ret nc                                         ; _ incrementamos H.
 509+ 90D7 24               inc h
 510+ 90D8
 511+ 90D8 C9               ret
 512+ 90D9
 513+ 90D9              ; -------------------------------------------------------------------------------------------------------------
 514+ 90D9              ;
 515+ 90D9              ;   11/04/23
 516+ 90D9              ;
 517+ 90D9              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90D9              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90D9              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90D9              ;
 521+ 90D9              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90D9
 523+ 90D9              Compara_coordenadas_X
 524+ 90D9
 525+ 90D9              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90D9              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90D9
 528+ 90D9              ; Preparamos registros:
 529+ 90D9
 530+ 90D9 21 BC 89         ld hl,Filas+6
 531+ 90DC 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90DD 23               inc hl
 533+ 90DE 23               inc hl
 534+ 90DF 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90E0 43               ld b,e
 536+ 90E1
 537+ 90E1 21 CA 89         ld hl,Filas+20
 538+ 90E4 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90E5 21 3D 8A         ld hl,Coordenadas_X_Entidad
 540+ 90E8 CD 04 93         call Guarda_coordenadas_X
 541+ 90EB
 542+ 90EB              ; Preparamos registros:
 543+ 90EB
 544+ 90EB 21 AA 85         ld hl,Amadeus_db+6
 545+ 90EE 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90EF 23               inc hl
 547+ 90F0 23               inc hl
 548+ 90F1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90F2 7B               ld a,e
 550+ 90F3 08               ex af,af'
 551+ 90F4 21 B8 85         ld hl,Amadeus_db+20
 552+ 90F7 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90F8 21 3A 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90FB CD 04 93         call Guarda_coordenadas_X
 555+ 90FE
 556+ 90FE              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90FE              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90FE
 559+ 90FE 04               inc b
 560+ 90FF 05               dec b
 561+ 9100 28 04            jr z,1F
 562+ 9102 06 03            ld b,3
 563+ 9104 18 02            jr 2F
 564+ 9106 06 02        1 ld b,2
 565+ 9108 08           2 ex af,af'
 566+ 9109 3C               inc a
 567+ 910A 3D               dec a
 568+ 910B 28 04            jr z,5F
 569+ 910D 0E 03            ld c,3
 570+ 910F 18 02            jr 6F
 571+ 9111 0E 02        5 ld c,2
 572+ 9113 79           6 ld a,c
 573+ 9114 08               ex af,af'
 574+ 9115 11 3D 8A         ld de,Coordenadas_X_Entidad
 575+ 9118 1A           4 ld a,(de)
 576+ 9119 21 3A 8A         ld hl,Coordenadas_X_Amadeus
 577+ 911C BE           3 cp (hl)
 578+ 911D 28 0E            jr z,7F
 579+ 911F 23               inc hl
 580+ 9120 0D               dec c
 581+ 9121 20 F9            jr nz,3B
 582+ 9123 13               inc de
 583+ 9124 08               ex af,af'
 584+ 9125 4F               ld c,a
 585+ 9126 08               ex af,af'
 586+ 9127 10 EF            djnz 4B
 587+ 9129
 588+ 9129              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9129
 590+ 9129 CD 40 93     8 call Limpia_Coordenadas_X
 591+ 912C C9               ret
 592+ 912D
 593+ 912D 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 912F 32 CF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9132 21 35 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9135 CB D6            set 2,(hl)
 597+ 9137 18 F0            jr 8B
 598+ 9139
 599+ 9139              ; -----------------------------------------------------------------------
 600+ 9139              ;
 601+ 9139              ;   17/04/23
 602+ 9139              ;
 603+ 9139
 604+ 9139              Detecta_colision_nave_entidad
 605+ 9139
 606+ 9139              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9139
 608+ 9139 2A B8 89         ld hl,(Posicion_actual)
 609+ 913C CD 7D 96         call Calcula_puntero_de_impresion
 610+ 913F
 611+ 913F              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 913F              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 913F
 614+ 913F DD E5            push ix
 615+ 9141 E1               pop hl
 616+ 9142 E5               push hl
 617+ 9143
 618+ 9143              ; ----- ----- -----
 619+ 9143 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9145 06 0A            ld b,10
 621+ 9147 CD 77 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 914A 7B               ld a,e
 623+ 914B FE 05            cp 5
 624+ 914D 38 0E            jr c,3F
 625+ 914F
 626+ 914F              ; LLegados a este punto:
 627+ 914F              ;
 628+ 914F              ;   HAY COLISIÓN !!!!!.
 629+ 914F              ;
 630+ 914F              ;   .db (Impacto) de Amadeus a "1".
 631+ 914F              ;   SET el bit3 de (Impacto2).
 632+ 914F              ;
 633+ 914F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 914F
 635+ 914F 21 BD 85         ld hl,Amadeus_db+25
 636+ 9152 36 01            ld (hl),1
 637+ 9154 21 35 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9157 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9159 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 915B 18 18            jr 1F
 641+ 915D
 642+ 915D              ; -----
 643+ 915D
 644+ 915D E1           3 pop hl
 645+ 915E CD 22 97         call NextScan
 646+ 9161 E5               push hl
 647+ 9162 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9163 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9165 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9167 30 0C            jr nc,1F
 651+ 9169              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9169 10 DC            djnz 2B
 653+ 916B
 654+ 916B              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 916B
 656+ 916B              ; LLegados a este punto:
 657+ 916B              ;
 658+ 916B              ;   NO HAY COLISIÓN !!!!!.
 659+ 916B              ;
 660+ 916B              ;   .db (Impacto) de Amadeus a "0".
 661+ 916B              ;   RES el bit2 de (Impacto2).
 662+ 916B              ;
 663+ 916B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 916B              ;   Lo colocamos a "0".
 665+ 916B
 666+ 916B 21 35 8A         ld hl,Impacto2
 667+ 916E CB 96            res 2,(hl)
 668+ 9170 2A 36 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9173 36 00            ld (hl),0
 670+ 9175
 671+ 9175 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9176 C9               ret
 673+ 9177
 674+ 9177               ; ---------- ----------
 675+ 9177
 676+ 9177 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9178 3A B7 89         ld a,(Columns)
 678+ 917B 47               ld b,a
 679+ 917C FD 7E 00     2 ld a,(iy)
 680+ 917F BE               cp (hl)
 681+ 9180 28 01            jr z,1F
 682+ 9182
 683+ 9182 1C               inc e
 684+ 9183
 685+ 9183 23           1 inc hl
 686+ 9184 FD 23            inc iy
 687+ 9186 10 F4            djnz 2B
 688+ 9188 C1               pop bc
 689+ 9189 C9               ret
 690+ 918A
 691+ 918A              ; -------------------------------------------------------------------------------------------------------------
 692+ 918A              ;
 693+ 918A              ;   13/03/23
 694+ 918A              ;
 695+ 918A              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 918A              ;
 697+ 918A              ;   DESTRUYE: HL,BC,DE y A.
 698+ 918A
 699+ 918A 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 918D 7E               ld a,(hl)
 701+ 918E A7               and a
 702+ 918F C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9190
 704+ 9190 44               ld b,h
 705+ 9191 4D               ld c,l
 706+ 9192 2A 12 8A         ld hl,(Stack_snapshot_disparos)
 707+ 9195 E5               push hl
 708+ 9196 A7               and a
 709+ 9197 ED 42            sbc hl,bc
 710+ 9199 E5               push hl
 711+ 919A C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 919B
 713+ 919B E1               pop hl
 714+ 919C 54               ld d,h
 715+ 919D 5D               ld e,l
 716+ 919E 1B               dec de
 717+ 919F ED B8            lddr                                                ; Limpiamos.
 718+ 91A1
 719+ 91A1 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 91A4 22 12 8A         ld (Stack_snapshot_disparos),hl
 721+ 91A7
 722+ 91A7 C9               ret
 723+ 91A8
 724+ 91A8              ; -------------------------------------------------------------------------------------------------------------
 725+ 91A8              ;
 726+ 91A8              ;   18/07/23
 727+ 91A8              ;
 728+ 91A8
 729+ 91A8              Motor_de_disparos
 730+ 91A8
 731+ 91A8              ; Gestiona DISPAROS DE AMADEUS.
 732+ 91A8
 733+ 91A8 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 91AB 2A 33 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 91AE
 736+ 91AE CD 87 8D     2 call Extrae_address
 737+ 91B1 7E               ld a,(hl)
 738+ 91B2 A7               and a
 739+ 91B3 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 91B5
 741+ 91B5              ; ----- ----- ----- ----- ----- -----
 742+ 91B5
 743+ 91B5 C5               push bc
 744+ 91B6 CD 7A 92         call foto_disparo_a_borrar
 745+ 91B9
 746+ 91B9              ; Existe colisión con este disparo???
 747+ 91B9
 748+ 91B9 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 91BA 7E               ld a,(hl)
 750+ 91BB 2B               dec hl
 751+ 91BC E6 01            and 1
 752+ 91BE 28 1D            jr z,9F
 753+ 91C0
 754+ 91C0              ;   En este punto:
 755+ 91C0              ;
 756+ 91C0              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91C0              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91C0              ;   _con la entidad).
 759+ 91C0              ;
 760+ 91C0              ;   Disparo_2A defw 0                                ; Control.
 761+ 91C0              ;    defw 0                                          ; Puntero objeto.
 762+ 91C0              ;    defw 0                                          ; Puntero de impresión.
 763+ 91C0              ;    defw 0                                          ; Rutina de impresión.
 764+ 91C0
 765+ 91C0 E5               push hl
 766+ 91C1
 767+ 91C1 06 04            ld b,4
 768+ 91C3 23           19 inc hl
 769+ 91C4 10 FD            djnz 19B
 770+ 91C6
 771+ 91C6 CD 87 8D         call Extrae_address
 772+ 91C9 CD A8 9D         call Genera_coordenadas_disparo
 773+ 91CC
 774+ 91CC              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91CC
 776+ 91CC 21 38 8A         ld hl,Coordenadas_disparo_certero
 777+ 91CF 72               ld (hl),d
 778+ 91D0 23               inc hl
 779+ 91D1 73               ld (hl),e
 780+ 91D2
 781+ 91D2              ; Elimino el disparo de la base de datos.
 782+ 91D2
 783+ 91D2 E1               pop hl
 784+ 91D3 CD F9 92         call Elimina_disparo_de_base_de_datos
 785+ 91D6 21 35 8A         ld hl,Impacto2
 786+ 91D9 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91DB
 788+ 91DB 18 06            jr 11F
 789+ 91DD
 790+ 91DD CD A3 92     9 call Mueve_disparo
 791+ 91E0 CD 7A 92         call foto_disparo_a_borrar
 792+ 91E3
 793+ 91E3 C1           11 pop bc
 794+ 91E4 18 04            jr 7F
 795+ 91E6
 796+ 91E6              ; ----- ----- ----- ----- ----- -----
 797+ 91E6
 798+ 91E6 ED 42        1 sbc hl,bc
 799+ 91E8 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91EA
 801+ 91EA 2A 33 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91ED 23               inc hl
 803+ 91EE 23               inc hl
 804+ 91EF 22 33 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91F2 18 BA            jr 2B
 806+ 91F4
 807+ 91F4 CD 50 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91F7              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91F7
 810+ 91F7              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91F7
 812+ 91F7 01 8A 85         ld bc,Disparo_11
 813+ 91FA 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91FD
 815+ 91FD CD 87 8D     5 call Extrae_address
 816+ 9200 7E               ld a,(hl)
 817+ 9201 A7               and a
 818+ 9202 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9204
 820+ 9204              ; ----- ----- ----- ----- ----- -----
 821+ 9204
 822+ 9204 C5               push bc
 823+ 9205 CD 7A 92         call foto_disparo_a_borrar
 824+ 9208
 825+ 9208              ; Existe colisión con este disparo???
 826+ 9208
 827+ 9208 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9209 7E               ld a,(hl)
 829+ 920A 2B               dec hl
 830+ 920B E6 01            and 1
 831+ 920D 28 4D            jr z,10F
 832+ 920F
 833+ 920F              ;! La colisión se produce con Amadeus???
 834+ 920F              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 920F
 836+ 920F E5               push hl
 837+ 9210
 838+ 9210 06 04            ld b,4
 839+ 9212 23           16 inc hl
 840+ 9213 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9215
 842+ 9215 CD 87 8D         call Extrae_address
 843+ 9218 CD A8 9D         call Genera_coordenadas_disparo
 844+ 921B
 845+ 921B 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 921C FE 16            cp $16
 847+ 921E 38 2A            jr c,15F
 848+ 9220
 849+ 9220
 850+ 9220              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9220
 852+ 9220 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9221
 854+ 9221              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9221
 856+ 9221
 857+ 9221 2A 40 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9224
 859+ 9224              ; Coordenada X de Amadeus en D.
 860+ 9224
 861+ 9224 7D               ld a,l
 862+ 9225 E6 1F            and $1F
 863+ 9227 57               ld d,a
 864+ 9228
 865+ 9228 21 AC 85         ld hl,Amadeus_db+8
 866+ 922B 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 922C
 868+ 922C 21 3A 8A         ld hl,Coordenadas_X_Amadeus
 869+ 922F CD 04 93         call Guarda_coordenadas_X
 870+ 9232
 871+ 9232 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9233
 873+ 9233              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9233
 875+ 9233 06 02            ld b,2
 876+ 9235 C5           20 push bc
 877+ 9236
 878+ 9236 06 03            ld b,3
 879+ 9238 21 3A 8A         ld hl,Coordenadas_X_Amadeus
 880+ 923B 7E           18 ld a,(hl)
 881+ 923C BA               cp d
 882+ 923D 20 04            jr nz,17F
 883+ 923F
 884+ 923F              ;! Colisión Amadeus !!!!!!!!!!
 885+ 923F
 886+ 923F C1               pop bc
 887+ 9240 E1               pop hl
 888+ 9241 18 0D            jr 14F
 889+ 9243
 890+ 9243 23           17 inc hl
 891+ 9244 10 F5            djnz 18B
 892+ 9246
 893+ 9246 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9247
 895+ 9247 C1               pop bc
 896+ 9248 10 EB            djnz 20B
 897+ 924A
 898+ 924A
 899+ 924A              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 924A              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 924A
 902+ 924A E1           15 pop hl
 903+ 924B 23               inc hl
 904+ 924C 35               dec (hl)
 905+ 924D 2B               dec hl
 906+ 924E 18 0C            jr 10F
 907+ 9250
 908+ 9250              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9250              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9250
 911+ 9250 E5           14 push hl
 912+ 9251 CD F9 92         call Elimina_disparo_de_base_de_datos
 913+ 9254 21 35 8A         ld hl,Impacto2
 914+ 9257 CB CE            set 1,(hl)
 915+ 9259 E1               pop hl
 916+ 925A 18 06            jr 12F
 917+ 925C
 918+ 925C              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 925C
 920+ 925C CD A3 92     10 call Mueve_disparo
 921+ 925F CD 7A 92         call foto_disparo_a_borrar
 922+ 9262 C1           12 pop bc
 923+ 9263
 924+ 9263 18 04            jr 8F
 925+ 9265
 926+ 9265              ; ----- ----- ----- ----- ----- -----
 927+ 9265
 928+ 9265 ED 42        4 sbc hl,bc
 929+ 9267 28 0A            jr z,6F
 930+ 9269
 931+ 9269 2A 31 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 926C 23               inc hl
 933+ 926D 23               inc hl
 934+ 926E 22 31 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9271 18 8A            jr 5B
 936+ 9273
 937+ 9273 CD 49 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9276 CD 40 93         call Limpia_Coordenadas_X
 939+ 9279 C9               ret
 940+ 927A
 941+ 927A              ; ------------------------------------------------------------------
 942+ 927A
 943+ 927A              foto_disparo_a_borrar
 944+ 927A
 945+ 927A 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 927B A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 927C C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 927D
 949+ 927D E5               push hl
 950+ 927E 23               inc hl
 951+ 927F 23               inc hl
 952+ 9280 ED 73 0A 8A      ld (Stack),sp
 953+ 9284 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9285 FD E1            pop iy
 955+ 9287 DD E1            pop ix
 956+ 9289 E1               pop hl
 957+ 928A ED 7B 0A 8A      ld sp,(Stack)
 958+ 928E 3A F9 89         ld a,(Ctrl_1)
 959+ 9291 CB C7            set 0,a
 960+ 9293 32 F9 89         ld (Ctrl_1),a
 961+ 9296 CD A0 7F         call Guarda_foto_registros
 962+ 9299 3A F9 89         ld a,(Ctrl_1)
 963+ 929C CB 87            res 0,a
 964+ 929E 32 F9 89         ld (Ctrl_1),a
 965+ 92A1 E1               pop hl
 966+ 92A2 C9               ret
 967+ 92A3
 968+ 92A3              ;---------------------------------------------------
 969+ 92A3              ;
 970+ 92A3              ;   18/07/23
 971+ 92A3              ;
 972+ 92A3
 973+ 92A3              Mueve_disparo
 974+ 92A3
 975+ 92A3              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 92A3              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 92A3              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 92A3
 979+ 92A3 E5               push hl
 980+ 92A4
 981+ 92A4 7E               ld a,(hl)
 982+ 92A5
 983+ 92A5 06 04            ld b,4
 984+ 92A7 23           1 inc hl
 985+ 92A8 10 FD            djnz 1B
 986+ 92AA
 987+ 92AA              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 92AA
 989+ 92AA CD 87 8D         call Extrae_address
 990+ 92AD
 991+ 92AD E6 01            and 1
 992+ 92AF 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 92B1
 994+ 92B1              ; Disparo hacia arriba, (Amadeus).
 995+ 92B1
 996+ 92B1              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 92B1              ; _ de la dificultad.
 998+ 92B1
 999+ 92B1 CD 31 97         call PreviousScan
1000+ 92B4 CD 31 97         call PreviousScan
1001+ 92B7 CD 31 97         call PreviousScan
1002+ 92BA CD 31 97         call PreviousScan
1003+ 92BD
1004+ 92BD              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92BD
1006+ 92BD 7C               ld a,h
1007+ 92BE FE 40            cp $40
1008+ 92C0 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92C2
1010+ 92C2              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92C2
1012+ 92C2 EB               ex de,hl
1013+ 92C3 06 04            ld b,4
1014+ 92C5 2B           6 dec hl
1015+ 92C6 10 FD            djnz 6B
1016+ 92C8
1017+ 92C8 CD F9 92         call Elimina_disparo_de_base_de_datos
1018+ 92CB E1               pop hl
1019+ 92CC 18 10            jr 7F
1020+ 92CE
1021+ 92CE              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92CE              ; HL contiene el puntero de impresión del disparo.
1023+ 92CE              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92CE
1025+ 92CE D5           3 push de
1026+ 92CF C5               push bc
1027+ 92D0
1028+ 92D0 CD 98 90         call Comprueba_Colision
1029+ 92D3
1030+ 92D3              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92D3
1032+ 92D3 78               ld a,b
1033+ 92D4
1034+ 92D4 C1               pop bc
1035+ 92D5 D1               pop de
1036+ 92D6
1037+ 92D6 EB               ex de,hl
1038+ 92D7
1039+ 92D7 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92D8 23               inc hl                                      ; _ movimiento.
1041+ 92D9 72               ld (hl),d
1042+ 92DA
1043+ 92DA E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92DB
1045+ 92DB 23               inc hl                                      ; _ en curso.
1046+ 92DC 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92DD 2B               dec hl
1048+ 92DE
1049+ 92DE C9           7 ret
1050+ 92DF
1051+ 92DF              ; Disparo hacia abajo, (Entidad).
1052+ 92DF
1053+ 92DF 3A 42 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92E2 47               ld b,a
1055+ 92E3
1056+ 92E3 CD 22 97     4 call NextScan
1057+ 92E6 10 FB            djnz 4B
1058+ 92E8
1059+ 92E8              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92E8
1061+ 92E8 7C               ld a,h
1062+ 92E9 FE 58            cp $58
1063+ 92EB 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92ED
1065+ 92ED EB               ex de,hl
1066+ 92EE 06 04            ld b,4
1067+ 92F0 2B           5 dec hl
1068+ 92F1 10 FD            djnz 5B
1069+ 92F3
1070+ 92F3 CD F9 92         call Elimina_disparo_de_base_de_datos
1071+ 92F6 E1               pop hl
1072+ 92F7 18 E5            jr 7B
1073+ 92F9
1074+ 92F9              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92F9
1076+ 92F9 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92FC AF               xor a
1078+ 92FD 77               ld (hl),a
1079+ 92FE 54               ld d,h
1080+ 92FF 5D               ld e,l
1081+ 9300 13               inc de
1082+ 9301 ED B0            ldir
1083+ 9303 C9               ret
1084+ 9304
1085+ 9304              ; -----------------------------------------------------------------
1086+ 9304              ;
1087+ 9304              ;   19/7/23
1088+ 9304              ;
1089+ 9304              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9304              ;
1091+ 9304              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9304              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9304              ;
1094+ 9304              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9304              ;
1096+ 9304              ;   INPUTS:
1097+ 9304              ;
1098+ 9304              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9304              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9304
1101+ 9304              ;   MODIFICA: A, HL, BC y DE.
1102+ 9304
1103+ 9304              Guarda_coordenadas_X
1104+ 9304
1105+ 9304 7B               ld a,e
1106+ 9305 A7               and a
1107+ 9306 20 04            jr nz,1F
1108+ 9308
1109+ 9308 06 02            ld b,2
1110+ 930A 18 02            jr 2F
1111+ 930C
1112+ 930C 06 03        1 ld b,3
1113+ 930E 72           2 ld (hl),d
1114+ 930F 23               inc hl
1115+ 9310 14               inc d
1116+ 9311 10 FB            djnz 2B
1117+ 9313
1118+ 9313 C9               ret
1119+ 9314
1120+ 9314              ; -----------------------------------------------------------------
1121+ 9314              ;
1122+ 9314              ;   12/04/23
1123+ 9314              ;
1124+ 9314
1125+ 9314 3A 35 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9317 A7               and a
1127+ 9318 C8               ret z
1128+ 9319
1129+ 9319 FE 04            cp 4
1130+ 931B 20 09            jr nz,1F
1131+ 931D
1132+ 931D
1133+ 931D              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 931D
1135+ 931D CD 39 91         call Detecta_colision_nave_entidad
1136+ 9320
1137+ 9320 21 35 8A         ld hl,Impacto2
1138+ 9323 CB 5E            bit 3,(hl)
1139+ 9325 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9326
1141+ 9326              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9326              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9326
1144+ 9326 21 35 8A     1 ld hl,Impacto2
1145+ 9329 CB 4E            bit 1,(hl)
1146+ 932B 28 07            jr z,2F
1147+ 932D
1148+ 932D 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9330 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9332 18 0B            jr 3F
1151+ 9334
1152+ 9334 21 35 8A     2 ld hl,Impacto2
1153+ 9337 CB 46            bit 0,(hl)
1154+ 9339 C8               ret z
1155+ 933A
1156+ 933A              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 933A
1158+ 933A 21 F9 89         ld hl,Ctrl_1
1159+ 933D CB D6            set 2,(hl)
1160+ 933F
1161+ 933F C9           3 ret
1162+ 9340
1163+ 9340              ; -----------------------------------------------------------------
1164+ 9340              ;
1165+ 9340              ;   19/7/23
1166+ 9340              ;
1167+ 9340              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9340
1169+ 9340 AF           Limpia_Coordenadas_X xor a
1170+ 9341 06 06            ld b,6
1171+ 9343 21 3A 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9346 77           1 ld (hl),a
1173+ 9347 23               inc hl
1174+ 9348 10 FC            djnz 1B
1175+ 934A C9               ret
1176+ 934B
1177+ 934B              ; -----------------------------------------------------------------
1178+ 934B              ;
1179+ 934B              ;   25/04/23
1180+ 934B              ;
1181+ 934B
1182+ 934B              Determina_resultado_comparativa
1183+ 934B
1184+ 934B              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 934B              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 934B              ;
1187+ 934B              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 934B              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 934B              ;
1190+ 934B              ;   SBC HL,DE
1191+ 934B
1192+ 934B              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 934B              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 934B
1195+ 934B              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 934B              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 934B
1198+ 934B
1199+ 934B 3A CA 89         ld a,(Cuad_objeto)
1200+ 934E FE 02            cp 2
1201+ 9350 28 26            jr z,2F
1202+ 9352 38 24            jr c,2F
1203+ 9354
1204+ 9354              ; Cuadrantes 3º y 4º
1205+ 9354
1206+ 9354 E6 01            and 1
1207+ 9356 28 10            jr z,4F
1208+ 9358
1209+ 9358              ; Cuadrante 3º
1210+ 9358
1211+ 9358 7C               ld a,h
1212+ 9359 06 00            ld b,0
1213+ 935B
1214+ 935B CD E6 93         call Compara_cositas_H3
1215+ 935E
1216+ 935E 04               inc b
1217+ 935F 05               dec b
1218+ 9360 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9361
1220+ 9361 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9362 06 00            ld b,0
1222+ 9364
1223+ 9364 CD F8 93         call Compara_cositas_L3
1224+ 9367 C9               ret
1225+ 9368
1226+ 9368              ; Cuadrante 4º
1227+ 9368
1228+ 9368 7C           4 ld a,h
1229+ 9369 06 00            ld b,0
1230+ 936B
1231+ 936B CD 0A 94         call Compara_cositas_H4
1232+ 936E
1233+ 936E 04               inc b
1234+ 936F 05               dec b
1235+ 9370 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9371
1237+ 9371 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9372 06 00            ld b,0
1239+ 9374
1240+ 9374 CD 20 94         call Compara_cositas_L4
1241+ 9377 C9               ret
1242+ 9378
1243+ 9378              ; Cuadrantes 1º y 2º.
1244+ 9378
1245+ 9378 28 10        2 jr z,3F
1246+ 937A
1247+ 937A              ; 1er Cuadrante
1248+ 937A
1249+ 937A 7C               ld a,h
1250+ 937B 06 00            ld b,0
1251+ 937D
1252+ 937D CD BE 93         call Compara_cositas_H1
1253+ 9380
1254+ 9380 04               inc b
1255+ 9381 05               dec b
1256+ 9382 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9383
1258+ 9383 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9384 06 00            ld b,0
1260+ 9386
1261+ 9386 CD D4 93         call Compara_cositas_L1
1262+ 9389 C9               ret
1263+ 938A
1264+ 938A
1265+ 938A              ; 2º Cuadrante
1266+ 938A
1267+ 938A 7C           3 ld a,h
1268+ 938B 06 00            ld b,0
1269+ 938D
1270+ 938D CD 9A 93         call Compara_cositas_H2
1271+ 9390
1272+ 9390 04               inc b
1273+ 9391 05               dec b
1274+ 9392 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9393
1276+ 9393 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9394 06 00            ld b,0
1278+ 9396
1279+ 9396 CD AC 93         call Compara_cositas_L2
1280+ 9399 C9               ret
1281+ 939A
1282+ 939A A7           Compara_cositas_H2 and a
1283+ 939B 28 0D            jr z,1F
1284+ 939D              ;    cp $fd
1285+ 939D              ;    jr z,1F
1286+ 939D              ;    cp $fe
1287+ 939D              ;    jr z,1F
1288+ 939D FE FF            cp $ff
1289+ 939F 28 09            jr z,1F
1290+ 93A1 FE 01            cp $01
1291+ 93A3 28 05            jr z,1F
1292+ 93A5 FE 02            cp $02
1293+ 93A7 28 01            jr z,1F
1294+ 93A9 C0               ret nz
1295+ 93AA 04           1 inc b
1296+ 93AB C9               ret
1297+ 93AC
1298+ 93AC A7           Compara_cositas_L2 and a
1299+ 93AD 28 0D            jr z,1F
1300+ 93AF              ;    cp $fd
1301+ 93AF              ;    jr z,1F
1302+ 93AF FE FE            cp $fe
1303+ 93B1 28 09            jr z,1F
1304+ 93B3 FE FF            cp $ff
1305+ 93B5 28 05            jr z,1F
1306+ 93B7 FE 01            cp $01
1307+ 93B9 28 01            jr z,1F
1308+ 93BB              ;    cp $02
1309+ 93BB              ;    jr z,1F
1310+ 93BB C0               ret nz
1311+ 93BC 04           1 inc b
1312+ 93BD C9               ret
1313+ 93BE
1314+ 93BE A7           Compara_cositas_H1 and a
1315+ 93BF 28 11            jr z,1F
1316+ 93C1              ;    cp $fd
1317+ 93C1              ;    jr z,1F
1318+ 93C1              ;    cp $fe
1319+ 93C1              ;    jr z,1F
1320+ 93C1 FE FF            cp $ff
1321+ 93C3 28 0D            jr z,1F
1322+ 93C5 FE 01            cp $01
1323+ 93C7 28 09            jr z,1F
1324+ 93C9 FE 02            cp $02
1325+ 93CB 28 05            jr z,1F
1326+ 93CD FE 03            cp $03
1327+ 93CF 28 01            jr z,1F
1328+ 93D1 C0               ret nz
1329+ 93D2 04           1 inc b
1330+ 93D3 C9               ret
1331+ 93D4
1332+ 93D4 A7           Compara_cositas_L1 and a
1333+ 93D5 28 0D            jr z,1F
1334+ 93D7              ;    cp $fd
1335+ 93D7              ;    jr z,1F
1336+ 93D7              ;    cp $fe
1337+ 93D7              ;    jr z,1F
1338+ 93D7              ;    cp $ff
1339+ 93D7              ;    jr z,1F
1340+ 93D7 FE 01            cp $01
1341+ 93D9 28 09            jr z,1F
1342+ 93DB FE 02            cp $02
1343+ 93DD 28 05            jr z,1F
1344+ 93DF FE 03            cp $03
1345+ 93E1 28 01            jr z,1F
1346+ 93E3 C0               ret nz
1347+ 93E4 04           1 inc b
1348+ 93E5 C9               ret
1349+ 93E6
1350+ 93E6 A7           Compara_cositas_H3 and a
1351+ 93E7 28 0D            jr z,1F
1352+ 93E9              ;    cp $fd
1353+ 93E9              ;    jr z,1F
1354+ 93E9 FE FE            cp $fe
1355+ 93EB 28 09            jr z,1F
1356+ 93ED FE FF            cp $ff
1357+ 93EF 28 05            jr z,1F
1358+ 93F1 FE 01            cp $01
1359+ 93F3 28 01            jr z,1F
1360+ 93F5              ;    cp $02
1361+ 93F5              ;    jr z,1F
1362+ 93F5              ;    cp $03
1363+ 93F5              ;    jr z,1F
1364+ 93F5 C0               ret nz
1365+ 93F6 04           1 inc b
1366+ 93F7 C9               ret
1367+ 93F8
1368+ 93F8 A7           Compara_cositas_L3 and a
1369+ 93F9 28 0D            jr z,1F
1370+ 93FB              ;    cp $fd
1371+ 93FB              ;    jr z,1F
1372+ 93FB              ;    cp $fe
1373+ 93FB              ;    jr z,1F
1374+ 93FB              ;    cp $ff
1375+ 93FB              ;    jr z,1F
1376+ 93FB FE 01            cp $01
1377+ 93FD 28 09            jr z,1F
1378+ 93FF FE 02            cp $02
1379+ 9401 28 05            jr z,1F
1380+ 9403 FE 03            cp $03
1381+ 9405 28 01            jr z,1F
1382+ 9407 C0               ret nz
1383+ 9408 04           1 inc b
1384+ 9409 C9               ret
1385+ 940A
1386+ 940A A7           Compara_cositas_H4 and a
1387+ 940B 28 11            jr z,1F
1388+ 940D FE FD            cp $fd
1389+ 940F 28 0D            jr z,1F
1390+ 9411 FE FE            cp $fe
1391+ 9413 28 09            jr z,1F
1392+ 9415 FE FF            cp $ff
1393+ 9417 28 05            jr z,1F
1394+ 9419 FE 01            cp $01
1395+ 941B 28 01            jr z,1F
1396+ 941D              ;    cp $02
1397+ 941D              ;    jr z,1F
1398+ 941D              ;    cp $03
1399+ 941D              ;    jr z,1F
1400+ 941D C0               ret nz
1401+ 941E 04           1 inc b
1402+ 941F C9               ret
1403+ 9420
1404+ 9420 A7           Compara_cositas_L4 and a
1405+ 9421 28 0D            jr z,1F
1406+ 9423              ;    cp $fd
1407+ 9423              ;    jr z,1F
1408+ 9423 FE FE            cp $fe
1409+ 9425 28 09            jr z,1F
1410+ 9427 FE FF            cp $ff
1411+ 9429 28 05            jr z,1F
1412+ 942B FE 01            cp $01
1413+ 942D 28 01            jr z,1F
1414+ 942F              ;    cp $02
1415+ 942F              ;    jr z,1F
1416+ 942F              ;    cp $03
1417+ 942F              ;    jr z,1F
1418+ 942F C0               ret nz
1419+ 9430 04           1 inc b
1420+ 9431 C9               ret
# file closed: Disparo.asm
1505  9432              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9432              ; ******************************************************************************************************************************************************************************************
   2+ 9432              ;
   3+ 9432              ; 26/06/23
   4+ 9432              ;
   5+ 9432              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9432
   7+ 9432 CD 16 97     Draw call Prepara_draw
   8+ 9435 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9436 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9437 28 05        	jr z,2F
  11+ 9439
  12+ 9439 3A CA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 943C 18 0C        	jr 1F
  14+ 943E
  15+ 943E 2A C8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9441 22 B8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9444 CD D3 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9447              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9447 CD 24 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 944A
  21+ 944A 3A E4 89     1 ld a,(Ctrl_0)
  22+ 944D CB 6F        	bit 5,a
  23+ 944F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9451
  25+ 9451 CD 69 94     	call Comprueba_limite_horizontal
  26+ 9454 CD F9 94     	call Comprueba_limite_vertical
  27+ 9457
  28+ 9457              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9457              ; -----------------------
  30+ 9457              ; -----------------------
  31+ 9457              ; -----------------------
  32+ 9457
  33+ 9457 CD 46 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 945A CD 7D 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 945D CD DC 96     	call Define_rutina_de_impresion
  36+ 9460
  37+ 9460 3A E4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9463 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9465 32 E4 89     	ld (Ctrl_0),a
  40+ 9468
  41+ 9468 C9           	ret
  42+ 9469
  43+ 9469              ; *******************************************************************************************************************************************************************************************
  44+ 9469              ;	21/01/23
  45+ 9469              ;
  46+ 9469              ; 	Comprueba_limite_horizontal.
  47+ 9469              ;
  48+ 9469              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9469              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9469              ;
  51+ 9469              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9469              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9469              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9469              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9469
  56+ 9469
  57+ 9469
  58+ 9469 3A E4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 946C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 946E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9470 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9472 32 E4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9475 18 09            jr 6F
  64+ 9477 CB 5F        1 bit 3,a
  65+ 9479 28 0A            jr z,2F
  66+ 947B E6 F7            and $f7
  67+ 947D 32 E4 89         ld (Ctrl_0),a
  68+ 9480 CD D3 95     6 call Inicializacion
  69+ 9483 18 5B            jr 5F
  70+ 9485 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9486
  72+ 9486              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9486              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9486
  75+ 9486 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9487 2A F4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 948A CD F2 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 948D 67           	ld h,a
  79+ 948E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 948F CD F2 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9492 67           	ld h,a
  82+ 9493 A7           	and a
  83+ 9494 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9496 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9497 3A CA 89     	ld a,(Cuad_objeto)
  86+ 949A FE 02        	cp 2
  87+ 949C 38 1E        	jr c,3F
  88+ 949E 28 1C        	jr z,3F
  89+ 94A0 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 94A1 28 23            jr z,7F
  91+ 94A3 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 94A5 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 94A7 E1           	pop hl
  94+ 94A8
  95+ 94A8              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 94A8              ; _para indicar con E="2" en caso necesario.
  97+ 94A8
  98+ 94A8 E5               push hl
  99+ 94A9 C5               push bc
 100+ 94AA CD F2 99     	call calcula_tercio
 101+ 94AD FE 01        	cp 1
 102+ 94AF 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 94B1 CD E1 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 94B4 28 26            jr z,9F
 105+ 94B6 38 24            jr c,9F
 106+ 94B8 1E 00        11 ld e,0
 107+ 94BA 18 22            jr 8F
 108+ 94BC 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94BD 28 07        	jr z, 7F
 110+ 94BF 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94C1 1E 00         	ld e,0
 112+ 94C3 E1           	pop hl
 113+ 94C4 18 04        	jr 4F
 114+ 94C6 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94C8 18 15            jr 10F
 116+ 94CA
 117+ 94CA              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94CA              ; _para indicar con E="2" en caso necesario.
 119+ 94CA
 120+ 94CA E5           4 push hl
 121+ 94CB C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94CC CD F2 99     	call calcula_tercio
 123+ 94CF FE 01        	cp 1
 124+ 94D1 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94D3 CD E1 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94D6 28 04            jr z,9F
 127+ 94D8 30 02            jr nc,9F
 128+ 94DA 18 02        	jr 8F
 129+ 94DC 1E 02        9 ld e,2
 130+ 94DE C1           8 pop bc
 131+ 94DF E1           10 pop hl
 132+ 94E0 C9           5 ret
 133+ 94E1
 134+ 94E1              ; --------------------
 135+ 94E1              ;
 136+ 94E1              ; 25/08/22
 137+ 94E1
 138+ 94E1 CD F2 99     Comprueba_centro call calcula_tercio
 139+ 94E4 67               ld h,a
 140+ 94E5 08           	ex af,af
 141+ 94E6 FE 02        	cp 2
 142+ 94E8 38 07        	jr c,1F
 143+ 94EA 28 05        	jr z,1F
 144+ 94EC 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94EF 18 03        	jr 2F
 146+ 94F1 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94F4 08           2 ex af,af
 148+ 94F5 A7               and a
 149+ 94F6 ED 42            sbc hl,bc
 150+ 94F8 C9               ret
 151+ 94F9
 152+ 94F9              ; *********************************************************************************************************************************************************************************************
 153+ 94F9              ;
 154+ 94F9              ;   16/8/22
 155+ 94F9              ;
 156+ 94F9              ;	Comprueba_limite_vertical
 157+ 94F9              ;
 158+ 94F9              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94F9              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94F9              ;
 161+ 94F9
 162+ 94F9 2A B8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94FC 7D           	ld a,l
 164+ 94FD E6 1F        	and $1F
 165+ 94FF 57           	ld d,a
 166+ 9500 3A F6 89     	ld a,(Limite_vertical)
 167+ 9503 BA           	cp d 											; Límite - Posición.
 168+ 9504 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9505 3A CA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9508 CB 47        	bit 0,a
 171+ 950A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 950C
 173+ 950C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 950C
 175+ 950C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 950D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 950F
 178+ 950F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 950F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 950F
 181+ 950F 3A BC 89         ld a,(Coordenada_X)
 182+ 9512 16 0F            ld d,Centro_izquierda
 183+ 9514 A7               and a
 184+ 9515 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9516 28 1E            jr z,3F
 186+ 9518 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 951A              ;                                                    ; _salimos sin modificar nada.
 188+ 951A 18 0E            jr 2F
 189+ 951C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 951D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 951F
 192+ 951F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 951F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 951F
 195+ 951F 3A BC 89         ld a,(Coordenada_X)
 196+ 9522 16 10            ld d,Centro_derecha
 197+ 9524 A7               and a
 198+ 9525 92               sub d
 199+ 9526 28 0E            jr z,3F
 200+ 9528 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 952A              ;                                                    ; _salimos sin modificar nada.
 202+ 952A CB 43        2 bit 0,e
 203+ 952C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 952E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 952F CD C3 95         call Modificaccionne
 206+ 9532 C1           	pop bc
 207+ 9533 CD D3 95         call Inicializacion
 208+ 9536 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9537
 210+ 9537              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9537
 212+ 9537 C5           4 push bc
 213+ 9538 01 B7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 953B 0A           	ld a,(bc)
 215+ 953C 3D           	dec a
 216+ 953D 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 953E 7D           	ld a,l
 218+ 953F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9540 CB 47        	bit 0,a
 220+ 9542 28 03        	jr z,5F
 221+ 9544 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9545 18 2E        	jr 7F
 223+ 9547
 224+ 9547              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9547
 226+ 9547 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9548 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9549 3A E4 89     	ld a,(Ctrl_0)
 229+ 954C CB 4F        	bit 1,a
 230+ 954E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9550 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9551
 233+ 9551              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9551
 235+ 9551 1C               inc e
 236+ 9552 1D               dec e
 237+ 9553 20 07            jr nz,12F
 238+ 9555 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9556 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9557 22 B8 89     	ld (Posicion_actual),hl
 241+ 955A 18 44        13 jr 9F
 242+ 955C CB 43        12 bit 0,e
 243+ 955E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9560              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9560 C1           	pop bc
 246+ 9561 18 D3        	jr 3B
 247+ 9563 80           14 add b
 248+ 9564 6F               ld l,a
 249+ 9565 22 B8 89     	ld (Posicion_actual),hl
 250+ 9568 CD C3 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 956B 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 956D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 956F 32 E4 89         ld (Ctrl_0),a
 254+ 9572 F1           	pop af
 255+ 9573 18 2B        	jr 9F
 256+ 9575
 257+ 9575              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9575
 259+ 9575 F5           7 push af
 260+ 9576 3A E4 89     	ld a,(Ctrl_0)
 261+ 9579 CB 47        	bit 0,a
 262+ 957B 20 1D        	jr nz,8F
 263+ 957D F1           	pop af
 264+ 957E
 265+ 957E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 957E
 267+ 957E 1C           	inc e
 268+ 957F 1D               dec e
 269+ 9580 20 07            jr nz,10F
 270+ 9582 90           	sub b
 271+ 9583 6F               ld l,a
 272+ 9584 22 B8 89     	ld (Posicion_actual),hl
 273+ 9587 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9589              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9589 CB 43        10 bit 0,e
 276+ 958B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 958D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 958D C1           	pop bc
 279+ 958E 18 A6        	jr 3B
 280+ 9590 90           16 sub b
 281+ 9591 6F               ld l,a
 282+ 9592 22 B8 89     	ld (Posicion_actual),hl
 283+ 9595 CD C3 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9598 18 06            jr 9F
 285+ 959A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 959C 32 E4 89         ld (Ctrl_0),a
 287+ 959F F1           	pop af
 288+ 95A0 C1           9 pop bc
 289+ 95A1 1E 00        	ld e,0
 290+ 95A3 CD D3 95         call Inicializacion
 291+ 95A6 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 95A7 08           	ex af,af
 293+ 95A8 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 95A9 18 8B            jr 3B
 295+ 95AB
 296+ 95AB              ; --------------------
 297+ 95AB
 298+ 95AB 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 95AD CD 31 97     1 call PreviousScan
 300+ 95B0 10 FB            djnz 1B
 301+ 95B2 22 B8 89     	ld (Posicion_actual),hl
 302+ 95B5 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 95B6 C9           	ret
 304+ 95B7
 305+ 95B7              ; --------------------
 306+ 95B7
 307+ 95B7 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 95B9 CD 22 97     1 call NextScan
 309+ 95BC 10 FB            djnz 1B
 310+ 95BE 22 B8 89     	ld (Posicion_actual),hl
 311+ 95C1 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95C2 C9           	ret
 313+ 95C3
 314+ 95C3              ; --------------------
 315+ 95C3              ;
 316+ 95C3              ;	22/01/23
 317+ 95C3              ;
 318+ 95C3              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95C3              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95C3              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95C3
 322+ 95C3
 323+ 95C3              Modificaccionne
 324+ 95C3
 325+ 95C3 3A CA 89     	ld a,(Cuad_objeto)
 326+ 95C6 FE 02        	cp 2
 327+ 95C8 CC AB 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95CB DC AB 95         call c,Modifica_Pos_actual
 329+ 95CE C8           	ret z
 330+ 95CF CD B7 95         call Modifica_Pos_actual2
 331+ 95D2 C9               ret
 332+ 95D3
 333+ 95D3              ; *************************************************************************************************************************************************************************************************
 334+ 95D3              ;
 335+ 95D3              ;	13/8/22
 336+ 95D3              ;
 337+ 95D3              ;	Inicializacion
 338+ 95D3              ;
 339+ 95D3              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95D3              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95D3              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95D3              ;
 343+ 95D3              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95D3              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95D3              ;	_ desaparece/aparece.
 346+ 95D3
 347+ 95D3              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95D3              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95D3              ;
 350+ 95D3              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95D3              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95D3              ; 		   [E] ="0"
 353+ 95D3
 354+ 95D3              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95D3
 356+ 95D3 CD F2 99     Inicializacion call calcula_tercio
 357+ 95D6 28 36        	jr z,primit
 358+ 95D8 E6 02        	and 2
 359+ 95DA 20 07        	jr nz,segmit
 360+ 95DC 7D           	ld a,l
 361+ 95DD FE 7F        	cp $7f
 362+ 95DF 38 2D        	jr c,primit
 363+ 95E1 28 2B        	jr z,primit
 364+ 95E3 CD 40 96     segmit call column
 365+ 95E6 38 13        	jr c,tercuad
 366+ 95E8 3E 04        cuarcuad ld a,4
 367+ 95EA 32 CA 89     	ld (Cuad_objeto),a
 368+ 95ED 21 20 48     	ld hl,$4820
 369+ 95F0 22 F4 89     	ld (Limite_horizontal),hl
 370+ 95F3 21 F6 89     	ld hl,Limite_vertical
 371+ 95F6 36 0D        	ld (hl),$0d
 372+ 95F8 08           	ex af,af
 373+ 95F9 18 3C        	jr 1F
 374+ 95FB              tercuad
 375+ 95FB 3E 03        	ld a,3
 376+ 95FD 32 CA 89     	ld (Cuad_objeto),a
 377+ 9600 21 20 48     	ld hl,$4820
 378+ 9603 22 F4 89     	ld (Limite_horizontal),hl
 379+ 9606 21 F6 89     	ld hl,Limite_vertical
 380+ 9609 36 12        	ld (hl),$12
 381+ 960B 08           	ex af,af
 382+ 960C 18 29        	jr 1F
 383+ 960E CD 40 96     primit call column
 384+ 9611 38 13        	jr c, primcuad
 385+ 9613              segcuad
 386+ 9613 3E 02        	ld a,2
 387+ 9615 32 CA 89     	ld (Cuad_objeto),a
 388+ 9618 21 C0 4F     	ld hl,$4fc0
 389+ 961B 22 F4 89     	ld (Limite_horizontal),hl
 390+ 961E 21 F6 89     	ld hl,Limite_vertical
 391+ 9621 36 0D        	ld (hl),$0d
 392+ 9623 08           	ex af,af
 393+ 9624 18 11        	jr 1F
 394+ 9626              primcuad
 395+ 9626 3E 01        	ld a,1
 396+ 9628 32 CA 89     	ld (Cuad_objeto),a
 397+ 962B 21 C0 4F     	ld hl,$4fc0
 398+ 962E 22 F4 89     	ld (Limite_horizontal),hl
 399+ 9631 21 F6 89     	ld hl,Limite_vertical
 400+ 9634 36 12        	ld (hl),$12
 401+ 9636 08           	ex af,af
 402+ 9637 CD 7D 9D     1 call Genera_coordenadas
 403+ 963A 21 E4 89     	ld hl,Ctrl_0
 404+ 963D CB EE        	set 5,(hl)
 405+ 963F C9           	ret
 406+ 9640
 407+ 9640              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9640
 409+ 9640              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9640              ;
 411+ 9640              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9640
 413+ 9640 7D           column ld a,l
 414+ 9641 E6 1F        	and $1f
 415+ 9643 FE 10         	cp $10
 416+ 9645 C9            	ret
 417+ 9646
 418+ 9646              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9646              ;
 420+ 9646              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9646              ;
 422+ 9646              ; 14/12/22
 423+ 9646              ;
 424+ 9646              ;	Modifica: A y BC.
 425+ 9646
 426+ 9646 3A CA 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9649 E6 01        	and 1
 428+ 964B 28 17        	jr z,1F
 429+ 964D
 430+ 964D              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 964D
 432+ 964D 3A BC 89     	ld a,(Coordenada_X)
 433+ 9650 47           	ld b,a
 434+ 9651 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9652 79           	ld a,c
 436+ 9653 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9654 38 08        	jr c,2F
 438+ 9656 47           	ld b,a
 439+ 9657 79           	ld a,c
 440+ 9658 90           	sub b
 441+ 9659 32 F3 89     	ld (Columnas),a
 442+ 965C 18 1B        	jr 4F
 443+ 965E 79           2 ld a,c
 444+ 965F 32 F3 89     	ld (Columnas),a
 445+ 9662 18 15        	jr 4F
 446+ 9664
 447+ 9664              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9664
 449+ 9664 3A BC 89     1 ld a,(Coordenada_X)
 450+ 9667 81           	add c
 451+ 9668 3D           	dec a
 452+ 9669 D6 1F        	sub $1f
 453+ 966B 38 08        	jr c,3F
 454+ 966D 47           	ld b,a
 455+ 966E 79           	ld a,c
 456+ 966F 90           	sub b
 457+ 9670 32 F3 89     	ld (Columnas),a
 458+ 9673 18 04        	jr 4F
 459+ 9675 79           3 ld a,c
 460+ 9676 32 F3 89     	ld (Columnas),a
 461+ 9679 D9           4 exx
 462+ 967A 4F           	ld c,a
 463+ 967B D9           	exx
 464+ 967C C9            ret
 465+ 967D
 466+ 967D              ; --------------------------------------------------------------------------------------------------------------------
 467+ 967D              ;
 468+ 967D              ;   19/7/23
 469+ 967D              ;
 470+ 967D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 967D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 967D              ;
 473+ 967D              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 967D              ;			HL e IY Contienen (Puntero_objeto).
 475+ 967D              ;
 476+ 967D              ;	DESTRUYE: HL,B Y A.
 477+ 967D
 478+ 967D 3A CA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9680 FE 02        	cp 2
 480+ 9682 38 18        	jr c,1F
 481+ 9684 28 16        	jr z,1F
 482+ 9686 E6 01        	and 1
 483+ 9688 28 0D        	jr z,3F
 484+ 968A
 485+ 968A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 968A
 487+ 968A CD D0 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 968D
 489+ 968D 7D           9 ld a,l
 490+ 968E E6 1F        	and $1f
 491+ 9690 28 2A        	jr z,7F
 492+ 9692 2B           	dec hl
 493+ 9693 10 F8        	djnz 9B
 494+ 9695 18 25        	jr 7F
 495+ 9697
 496+ 9697              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9697
 498+ 9697 2A B8 89     3 ld hl,(Posicion_actual)
 499+ 969A 18 20        	jr 7F
 500+ 969C
 501+ 969C 28 14        1 jr z,2F
 502+ 969E
 503+ 969E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 969E
 505+ 969E CD D0 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 96A1
 507+ 96A1 7D           4 ld a,l
 508+ 96A2 E6 1F        	and $1f
 509+ 96A4 28 03        	jr z,6F
 510+ 96A6 2B           	dec hl
 511+ 96A7 10 F8        	djnz 4B
 512+ 96A9 06 0F        6 ld b,15
 513+ 96AB CD 31 97     5 call PreviousScan
 514+ 96AE 10 FB        	djnz 5B
 515+ 96B0 18 0A        	jr 7F
 516+ 96B2
 517+ 96B2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 96B2
 519+ 96B2 CD D0 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 96B5 06 0F        	ld b,15
 521+ 96B7 CD 31 97     8 call PreviousScan
 522+ 96BA 10 FB        	djnz 8B
 523+ 96BC
 524+ 96BC E5           7 push hl
 525+ 96BD DD E1        	pop ix
 526+ 96BF
 527+ 96BF 2A BA 89     	ld hl,(Puntero_objeto)
 528+ 96C2 E5           	push hl
 529+ 96C3 FD E1        	pop iy
 530+ 96C5
 531+ 96C5              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96C5
 533+ 96C5 3A E4 89     	ld a,(Ctrl_0)
 534+ 96C8 CB 77        	bit 6,a
 535+ 96CA C8           	ret z
 536+ 96CB
 537+ 96CB              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96CB              ; _ entidad / Amadeus´.
 539+ 96CB
 540+ 96CB DD 22 40 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96CF
 542+ 96CF C9           	ret
 543+ 96D0
 544+ 96D0              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96D0              ;
 546+ 96D0              ;	2/1/23
 547+ 96D0              ;
 548+ 96D0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96D0              ;
 550+ 96D0              ;	Tras esta rutina tenemos:
 551+ 96D0              ;
 552+ 96D0              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96D0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96D0              ;
 555+ 96D0              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96D0
 557+ 96D0 2A B8 89     Operandos ld hl,(Posicion_actual)
 558+ 96D3 3A F3 89     	ld a,(Columnas)
 559+ 96D6 3D           	dec a
 560+ 96D7 20 01        	jr nz,1F
 561+ 96D9 3C           	inc a
 562+ 96DA 47           1 ld b,a
 563+ 96DB C9           	ret
 564+ 96DC
 565+ 96DC              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96DC              ;
 567+ 96DC              ;	3/1/23
 568+ 96DC              ;
 569+ 96DC              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96DC              ;
 571+ 96DC              ;	Destruye: A,B,HL y DE.
 572+ 96DC
 573+ 96DC              Define_rutina_de_impresion
 574+ 96DC
 575+ 96DC 3A B7 89     	ld a,(Columns)
 576+ 96DF 47           	ld b,a
 577+ 96E0 3A F3 89     	ld a,(Columnas)
 578+ 96E3 B8           	cp b
 579+ 96E4 20 0D        	jr nz,2f
 580+ 96E6
 581+ 96E6              ;	La entidad se imprime entera.
 582+ 96E6
 583+ 96E6 21 C2 97     	ld hl, Indice_entidades_completas
 584+ 96E9 E6 01        	and 1
 585+ 96EB 28 02        	jr z,1F
 586+ 96ED
 587+ 96ED 23           	inc hl
 588+ 96EE 23           	inc hl
 589+ 96EF
 590+ 96EF CD 87 8D     1 call Extrae_address
 591+ 96F2 C9           	ret		;	ret
 592+ 96F3
 593+ 96F3              ;	La entidad no se imprime entera en pantalla.
 594+ 96F3
 595+ 96F3 3A CA 89     2 ld a,(Cuad_objeto)
 596+ 96F6 E6 01        	and 1
 597+ 96F8 28 17        	jr z,3F
 598+ 96FA
 599+ 96FA              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96FA
 601+ 96FA 21 C6 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96FD 3A B7 89     4 ld a,(Columns)
 603+ 9700 E6 01        	and 1
 604+ 9702 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9704
 606+ 9704 23           	inc hl
 607+ 9705 23           	inc hl
 608+ 9706
 609+ 9706 3A F3 89     	ld a,(Columnas)
 610+ 9709 E6 01        	and 1
 611+ 970B 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 970D
 613+ 970D 23           	inc hl
 614+ 970E 23           	inc hl
 615+ 970F
 616+ 970F 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9711
 618+ 9711 21 CC 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9714 18 E7        	jr 4B
 620+ 9716
 621+ 9716              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9716              ;
 623+ 9716              ;	Prepara_draw
 624+ 9716              ;
 625+ 9716              ;	Es una rutina de carga.
 626+ 9716              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9716              ;
 628+ 9716              ;	FUNCIONAMIENTO:
 629+ 9716              ;
 630+ 9716              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9716              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9716              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9716              ;
 634+ 9716              ;	DESTRUYE:
 635+ 9716              ;
 636+ 9716              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9716
 638+ 9716 21 B6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9719 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 971A 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 971B 4E           	ld c,(hl)
 642+ 971C 2A B8 89     	ld hl,(Posicion_actual)
 643+ 971F 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9721 C9           	ret
 645+ 9722
 646+ 9722              ;----------------------------------------------------------------------------------------------------------------
 647+ 9722              ;
 648+ 9722              ;	5/08/22
 649+ 9722              ;
 650+ 9722              ;   NextScan.
 651+ 9722              ;
 652+ 9722              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9722              ;
 654+ 9722              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9722              ;
 656+ 9722              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9722              ;
 658+ 9722              ;       DESTRUIDOS: AF y HL !!!
 659+ 9722              ;
 660+ 9722              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9722              ;
 662+ 9722
 663+ 9722 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9723 7C               ld a,h
 665+ 9724 E6 07            and 7
 666+ 9726 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9727
 668+ 9727 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9728 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 972A 6F               ld l,a
 671+ 972B D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 972C
 673+ 972C 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 972D D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 972F 67               ld h,a
 676+ 9730 C9               ret
 677+ 9731
 678+ 9731              ;----------------------------------------------------------------------------------------------------------------
 679+ 9731              ;
 680+ 9731              ;	5/08/22
 681+ 9731              ;
 682+ 9731              ;   PreviousScan.
 683+ 9731              ;
 684+ 9731              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9731              ;
 686+ 9731              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9731              ;
 688+ 9731              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9731              ;
 690+ 9731              ;       DESTRUIDOS: AF y HL !!!
 691+ 9731              ;
 692+ 9731              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9731              ;
 694+ 9731
 695+ 9731 7C           PreviousScan ld a,h
 696+ 9732 25               dec h               ; Dec H.
 697+ 9733 E6 07            and 7
 698+ 9735 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9736
 700+ 9736 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9737 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9739 6F               ld l,a
 703+ 973A D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 973B
 705+ 973B 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 973C C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 973E 67               ld h,a
 708+ 973F C9               ret
 709+ 9740
 710+ 9740              ; -----------------------------------------------------------------------------------
 711+ 9740              ;
 712+ 9740              ;	31/7/23
 713+ 9740              ;
 714+ 9740              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9740              ;	Extrae fotos de Album_de_fotos.
 716+ 9740
 717+ 9740              Extrae_foto_entidades
 718+ 9740
 719+ 9740 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9743 7E           	ld a,(hl)
 721+ 9744 A7           	and a
 722+ 9745 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9746
 724+ 9746 3A 05 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9749 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 974A C8           	ret z
 727+ 974B
 728+ 974B              ; -----------------------------------
 729+ 974B
 730+ 974B ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 974F 31 00 70     	ld sp,Album_de_fotos
 732+ 9752
 733+ 9752 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9754 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9755 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9756
 737+ 9756 ED 73 0C 8A  	ld (Stack_2),sp
 738+ 975A ED 7B 0A 8A  	ld sp,(Stack)
 739+ 975E
 740+ 975E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 975E
 742+ 975E 3E CD        	ld a,$cd
 743+ 9760 32 68 97     	ld (Imprime),a
 744+ 9763 EB           	ex de,hl
 745+ 9764 22 69 97     	ld (Imprime+1),hl
 746+ 9767 EB           	ex de,hl
 747+ 9768
 748+ 9768              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 9768
 750+ 9768 00 00 00     Imprime db 0,0,0
 751+ 976B
 752+ 976B ED 73 0A 8A  	ld (Stack),sp
 753+ 976F
 754+ 976F 3A 05 8A     	ld a,(Numero_de_malotes)
 755+ 9772 3D           	dec a
 756+ 9773 28 09        	jr z,1F
 757+ 9775 32 05 8A      	ld (Numero_de_malotes),a
 758+ 9778
 759+ 9778 ED 7B 0C 8A  	ld sp,(Stack_2)
 760+ 977C 18 D4        	jr 2B
 761+ 977E
 762+ 977E AF           1 xor a
 763+ 977F 32 0C 8A     	ld (Stack_2),a
 764+ 9782
 765+ 9782 C9           	ret
 766+ 9783
 767+ 9783              ; -----------------------------------------------------------------------------------
 768+ 9783              ;
 769+ 9783              ;	28/2/23
 770+ 9783              ;
 771+ 9783              ;	Pinta los disparos generados.
 772+ 9783
 773+ 9783              Extrae_foto_disparos
 774+ 9783
 775+ 9783 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 776+ 9786 7E               ld a,(hl)
 777+ 9787 A7               and a
 778+ 9788 C8               ret z
 779+ 9789
 780+ 9789 3A 30 8A     	ld a,(Numero_de_disparotes)
 781+ 978C A7           	and a
 782+ 978D C8           	ret z
 783+ 978E ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9792 31 0D 72     	ld sp,Album_de_fotos_disparos
 785+ 9795
 786+ 9795 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 9797 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 9798 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 9799
 790+ 9799 ED 73 0C 8A  	ld (Stack_2),sp
 791+ 979D ED 7B 0A 8A  	ld sp,(Stack)
 792+ 97A1
 793+ 97A1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 97A1
 795+ 97A1 3E CD        	ld a,$cd
 796+ 97A3 32 AB 97     	ld (Imprime2),a
 797+ 97A6 EB           	ex de,hl
 798+ 97A7 22 AC 97     	ld (Imprime2+1),hl
 799+ 97AA EB           	ex de,hl
 800+ 97AB
 801+ 97AB              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 97AB
 803+ 97AB 00 00 00     Imprime2 db 0,0,0
 804+ 97AE
 805+ 97AE 3A 30 8A     	ld a,(Numero_de_disparotes)
 806+ 97B1 3D           	dec a
 807+ 97B2 28 09        	jr z,1F
 808+ 97B4 32 30 8A      	ld (Numero_de_disparotes),a
 809+ 97B7
 810+ 97B7 ED 7B 0C 8A  	ld sp,(Stack_2)
 811+ 97BB 18 D8        	jr 2B
 812+ 97BD
 813+ 97BD AF           1 xor a
 814+ 97BE 32 0C 8A     	ld (Stack_2),a
 815+ 97C1 C9           	ret
 816+ 97C2
# file closed: Draw_XOR.asm
1506  97C2              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97C2              ;   índices de Rutinas de impresión.
   2+ 97C2
   3+ 97C2 D2 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97C4 FF 97            defw Pinta_Amadeus_3x2
   5+ 97C6
   6+ 97C6 55 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97C8 F5 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97CA A9 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97CC
  10+ 97CC 7F 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97CE 83 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97D0 37 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97D2
  14+ 97D2
  15+ 97D2              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97D2              ;
  17+ 97D2              ;   12/12/22
  18+ 97D2              ;
  19+ 97D2              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97D2              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97D2              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97D2              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97D2              ;
  24+ 97D2              ;   Modifica: DE y HL.
  25+ 97D2
  26+ 97D2 ED 73 0A 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97D6 FD F9        	ld sp,iy
  28+ 97D8 06 10            ld b,16
  29+ 97DA D1           1 pop de
  30+ 97DB 7B               ld a,e
  31+ 97DC AE               xor (hl)
  32+ 97DD 77           	ld (hl),a
  33+ 97DE 23           	inc hl
  34+ 97DF 7A               ld a,d
  35+ 97E0 AE               xor (hl)
  36+ 97E1 77           	ld (hl),a
  37+ 97E2 2B           	dec hl
  38+ 97E3 24           	inc h
  39+ 97E4 7C               ld a,h
  40+ 97E5 E6 07            and 7
  41+ 97E7 20 0A            jr nz,2F
  42+ 97E9 7D               ld a,l
  43+ 97EA C6 20            add a,$20
  44+ 97EC 6F               ld l,a
  45+ 97ED 38 04            jr c,2F
  46+ 97EF 7C               ld a,h
  47+ 97F0 D6 08            sub 8
  48+ 97F2 67               ld h,a
  49+ 97F3 7C           2 ld a,h
  50+ 97F4 FE 58            cp $58
  51+ 97F6 28 02            jr z,3F
  52+ 97F8 10 E0            djnz 1B
  53+ 97FA ED 7B 0A 8A  3 ld sp,(Stack)
  54+ 97FE C9           	ret
  55+ 97FF
  56+ 97FF ED 73 0A 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9803 FD F9        	ld sp,iy
  58+ 9805 06 08            ld b,8
  59+ 9807 D1           1 pop de
  60+ 9808 7B               ld a,e
  61+ 9809 AE               xor (hl)
  62+ 980A 77           	ld (hl),a
  63+ 980B 23           	inc hl
  64+ 980C 7A               ld a,d
  65+ 980D AE               xor (hl)
  66+ 980E 77           	ld (hl),a
  67+ 980F 23           	inc hl
  68+ 9810 D1           	pop de
  69+ 9811 7B               ld a,e
  70+ 9812 AE               xor (hl)
  71+ 9813 77           	ld (hl),a
  72+ 9814 2B           	dec hl
  73+ 9815 2B           	dec hl
  74+ 9816 24           	inc h
  75+ 9817 7C               ld a,h
  76+ 9818 E6 07            and 7
  77+ 981A 20 0A            jr nz,2F
  78+ 981C 7D               ld a,l
  79+ 981D C6 20            add a,$20
  80+ 981F 6F               ld l,a
  81+ 9820 38 04            jr c,2F
  82+ 9822 7C               ld a,h
  83+ 9823 D6 08            sub 8
  84+ 9825 67               ld h,a
  85+ 9826 7C           2 ld a,h
  86+ 9827 FE 58            cp $58
  87+ 9829 28 25            jr z,4F
  88+ 982B 7A               ld a,d
  89+ 982C AE               xor (hl)
  90+ 982D 77               ld (hl),a
  91+ 982E D1           	pop de
  92+ 982F 23           	inc hl
  93+ 9830 7B               ld a,e
  94+ 9831 AE               xor (hl)
  95+ 9832 77           	ld (hl),a
  96+ 9833 23           	inc hl
  97+ 9834 7A               ld a,d
  98+ 9835 AE               xor (hl)
  99+ 9836 77           	ld (hl),a
 100+ 9837 2B           	dec hl
 101+ 9838 2B           	dec hl
 102+ 9839 24           	inc h
 103+ 983A 7C               ld a,h
 104+ 983B E6 07            and 7
 105+ 983D 20 0A            jr nz,3F
 106+ 983F 7D               ld a,l
 107+ 9840 C6 20            add a,$20
 108+ 9842 6F               ld l,a
 109+ 9843 38 04            jr c,3F
 110+ 9845 7C               ld a,h
 111+ 9846 D6 08            sub 8
 112+ 9848 67               ld h,a
 113+ 9849 7C           3 ld a,h
 114+ 984A FE 58            cp $58
 115+ 984C 28 02            jr z,4F
 116+ 984E 10 B7            djnz 1B
 117+ 9850 ED 7B 0A 8A  4 ld sp,(Stack)
 118+ 9854 C9           	ret
 119+ 9855
 120+ 9855              ; ---------------------------------------------------
 121+ 9855
 122+ 9855 ED 73 0A 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9859 FD F9        	ld sp,iy
 124+ 985B
 125+ 985B              ; >>>
 126+ 985B
 127+ 985B 06 10            ld b,16
 128+ 985D D1           1 pop de
 129+ 985E 7A           	ld a,d
 130+ 985F AE           	xor (hl)
 131+ 9860 77           	ld (hl),a
 132+ 9861 24           	inc h
 133+ 9862 7C               ld a,h
 134+ 9863 E6 07            and 7
 135+ 9865 20 0C            jr nz,2F
 136+ 9867 7D               ld a,l
 137+ 9868 C6 20            add a,$20
 138+ 986A 6F               ld l,a
 139+ 986B 38 06            jr c,2F
 140+ 986D 7C               ld a,h
 141+ 986E D6 08            sub 8
 142+ 9870 67               ld h,a
 143+ 9871 18 00            jr 2F
 144+ 9873 7C           2 ld a,h
 145+ 9874 FE 58            cp $58
 146+ 9876 28 02            jr z,3F
 147+ 9878 10 E3            djnz 1B
 148+ 987A ED 7B 0A 8A  3 ld sp,(Stack)
 149+ 987E C9           	ret
 150+ 987F
 151+ 987F ED 73 0A 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9883 FD F9        	ld sp,iy
 153+ 9885
 154+ 9885              ; >>>
 155+ 9885
 156+ 9885 06 10            ld b,16
 157+ 9887 D1           1 pop de
 158+ 9888 7B           	ld a,e
 159+ 9889 AE           	xor (hl)
 160+ 988A 77           	ld (hl),a
 161+ 988B 24           	inc h
 162+ 988C 7C               ld a,h
 163+ 988D E6 07            and 7
 164+ 988F 20 0C            jr nz,2F
 165+ 9891 7D               ld a,l
 166+ 9892 C6 20            add a,$20
 167+ 9894 6F               ld l,a
 168+ 9895 38 06            jr c,2F
 169+ 9897 7C               ld a,h
 170+ 9898 D6 08            sub 8
 171+ 989A 67               ld h,a
 172+ 989B 18 00            jr 2F
 173+ 989D 7C           2 ld a,h
 174+ 989E FE 58            cp $58
 175+ 98A0 28 02            jr z,3F
 176+ 98A2 10 E3            djnz 1B
 177+ 98A4 ED 7B 0A 8A  3 ld sp,(Stack)
 178+ 98A8 C9           	ret
 179+ 98A9
 180+ 98A9              ; ---------------------------------------------------
 181+ 98A9
 182+ 98A9 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 98AD FD F9        	ld sp,iy
 184+ 98AF 06 08            ld b,8
 185+ 98B1 D1           1 pop de
 186+ 98B2 7A           	ld a,d
 187+ 98B3 AE           	xor (hl)
 188+ 98B4 77           	ld (hl),a
 189+ 98B5 23           	inc hl
 190+ 98B6 D1           	pop de
 191+ 98B7 7B           	ld a,e
 192+ 98B8 AE           	xor (hl)
 193+ 98B9 77           	ld (hl),a
 194+ 98BA 2B           	dec hl
 195+ 98BB 24            	inc h
 196+ 98BC 7C               ld a,h
 197+ 98BD E6 07            and 7
 198+ 98BF 20 0A            jr nz,2F
 199+ 98C1 7D               ld a,l
 200+ 98C2 C6 20            add a,$20
 201+ 98C4 6F               ld l,a
 202+ 98C5 38 04            jr c,2F
 203+ 98C7 7C               ld a,h
 204+ 98C8 D6 08            sub 8
 205+ 98CA 67               ld h,a
 206+ 98CB 7C           2 ld a,h
 207+ 98CC FE 58            cp $58
 208+ 98CE 28 20            jr z,4F
 209+ 98D0 D1               pop de
 210+ 98D1 7B           	ld a,e
 211+ 98D2 AE           	xor (hl)
 212+ 98D3 77           	ld (hl),a
 213+ 98D4 23           	inc hl
 214+ 98D5 7A           	ld a,d
 215+ 98D6 AE           	xor (hl)
 216+ 98D7 77           	ld (hl),a
 217+ 98D8 2B           	dec hl
 218+ 98D9 24           	inc h
 219+ 98DA 7C               ld a,h
 220+ 98DB E6 07            and 7
 221+ 98DD 20 0A            jr nz,3F
 222+ 98DF 7D               ld a,l
 223+ 98E0 C6 20            add a,$20
 224+ 98E2 6F               ld l,a
 225+ 98E3 38 04            jr c,3F
 226+ 98E5 7C               ld a,h
 227+ 98E6 D6 08            sub 8
 228+ 98E8 67               ld h,a
 229+ 98E9 7C           3 ld a,h
 230+ 98EA FE 58            cp $58
 231+ 98EC 28 02            jr z,4F
 232+ 98EE 10 C1            djnz 1B
 233+ 98F0 ED 7B 0A 8A  4 ld sp,(Stack)
 234+ 98F4 C9           	ret
 235+ 98F5
 236+ 98F5 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98F9 FD F9        	ld sp,iy
 238+ 98FB 06 08            ld b,8
 239+ 98FD D1           1 pop de
 240+ 98FE D1           	pop de
 241+ 98FF 7B           	ld a,e
 242+ 9900 AE           	xor (hl)
 243+ 9901 77           	ld (hl),a
 244+ 9902 24            	inc h
 245+ 9903 7C               ld a,h
 246+ 9904 E6 07            and 7
 247+ 9906 20 0A            jr nz,2F
 248+ 9908 7D               ld a,l
 249+ 9909 C6 20            add a,$20
 250+ 990B 6F               ld l,a
 251+ 990C 38 04            jr c,2F
 252+ 990E 7C               ld a,h
 253+ 990F D6 08            sub 8
 254+ 9911 67               ld h,a
 255+ 9912 7C           2 ld a,h
 256+ 9913 FE 58            cp $58
 257+ 9915 28 1B            jr z,4F
 258+ 9917 D1               pop de
 259+ 9918 7A           	ld a,d
 260+ 9919 AE           	xor (hl)
 261+ 991A 77           	ld (hl),a
 262+ 991B 24           	inc h
 263+ 991C 7C               ld a,h
 264+ 991D E6 07            and 7
 265+ 991F 20 0A            jr nz,3F
 266+ 9921 7D               ld a,l
 267+ 9922 C6 20            add a,$20
 268+ 9924 6F               ld l,a
 269+ 9925 38 04            jr c,3F
 270+ 9927 7C               ld a,h
 271+ 9928 D6 08            sub 8
 272+ 992A 67               ld h,a
 273+ 992B 7C           3 ld a,h
 274+ 992C FE 58            cp $58
 275+ 992E 28 02            jr z,4F
 276+ 9930 10 CB            djnz 1B
 277+ 9932 ED 7B 0A 8A  4 ld sp,(Stack)
 278+ 9936 C9           	ret
 279+ 9937
 280+ 9937 ED 73 0A 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 993B FD F9        	ld sp,iy
 282+ 993D 06 08            ld b,8
 283+ 993F D1           1 pop de
 284+ 9940 7B           	ld a,e
 285+ 9941 AE           	xor (hl)
 286+ 9942 77           	ld (hl),a
 287+ 9943 23           	inc hl
 288+ 9944 7A           	ld a,d
 289+ 9945 AE           	xor (hl)
 290+ 9946 77           	ld (hl),a
 291+ 9947 2B           	dec hl
 292+ 9948 24             	inc h
 293+ 9949 7C               ld a,h
 294+ 994A E6 07            and 7
 295+ 994C 20 0A            jr nz,2F
 296+ 994E 7D               ld a,l
 297+ 994F C6 20            add a,$20
 298+ 9951 6F               ld l,a
 299+ 9952 38 04            jr c,2F
 300+ 9954 7C               ld a,h
 301+ 9955 D6 08            sub 8
 302+ 9957 67               ld h,a
 303+ 9958 7C           2 ld a,h
 304+ 9959 FE 58            cp $58
 305+ 995B 28 21            jr z,4F
 306+ 995D D1               pop de
 307+ 995E 7A           	ld a,d
 308+ 995F AE           	xor (hl)
 309+ 9960 77           	ld (hl),a
 310+ 9961 23           	inc hl
 311+ 9962 D1               pop de
 312+ 9963 7B           	ld a,e
 313+ 9964 AE           	xor (hl)
 314+ 9965 77           	ld (hl),a
 315+ 9966 2B           	dec hl
 316+ 9967 24           	inc h
 317+ 9968 7C               ld a,h
 318+ 9969 E6 07            and 7
 319+ 996B 20 0A            jr nz,3F
 320+ 996D 7D               ld a,l
 321+ 996E C6 20            add a,$20
 322+ 9970 6F               ld l,a
 323+ 9971 38 04            jr c,3F
 324+ 9973 7C               ld a,h
 325+ 9974 D6 08            sub 8
 326+ 9976 67               ld h,a
 327+ 9977 7C           3 ld a,h
 328+ 9978 FE 58            cp $58
 329+ 997A 28 02            jr z,4F
 330+ 997C 10 C1            djnz 1B
 331+ 997E ED 7B 0A 8A  4 ld sp,(Stack)
 332+ 9982 C9           	ret
 333+ 9983
 334+ 9983 ED 73 0A 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9987 FD F9        	ld sp,iy
 336+ 9989 06 08            ld b,8
 337+ 998B D1           1 pop de
 338+ 998C 7B           	ld a,e
 339+ 998D AE           	xor (hl)
 340+ 998E 77           	ld (hl),a
 341+ 998F 24            	inc h
 342+ 9990 7C               ld a,h
 343+ 9991 E6 07            and 7
 344+ 9993 20 0A            jr nz,2F
 345+ 9995 7D               ld a,l
 346+ 9996 C6 20            add a,$20
 347+ 9998 6F               ld l,a
 348+ 9999 38 04            jr c,2F
 349+ 999B 7C               ld a,h
 350+ 999C D6 08            sub 8
 351+ 999E 67               ld h,a
 352+ 999F 7C           2 ld a,h
 353+ 99A0 FE 58            cp $58
 354+ 99A2 28 1C            jr z,4F
 355+ 99A4 D1               pop de
 356+ 99A5 7A           	ld a,d
 357+ 99A6 AE           	xor (hl)
 358+ 99A7 77           	ld (hl),a
 359+ 99A8 24           	inc h
 360+ 99A9 7C               ld a,h
 361+ 99AA E6 07            and 7
 362+ 99AC 20 0A            jr nz,3F
 363+ 99AE 7D               ld a,l
 364+ 99AF C6 20            add a,$20
 365+ 99B1 6F               ld l,a
 366+ 99B2 38 04            jr c,3F
 367+ 99B4 7C               ld a,h
 368+ 99B5 D6 08            sub 8
 369+ 99B7 67               ld h,a
 370+ 99B8 7C           3 ld a,h
 371+ 99B9 FE 58            cp $58
 372+ 99BB 28 03            jr z,4F
 373+ 99BD D1               pop de
 374+ 99BE 10 CB            djnz 1B
 375+ 99C0 ED 7B 0A 8A  4 ld sp,(Stack)
 376+ 99C4 C9           	ret
 377+ 99C5
 378+ 99C5              ; ---------------------------------------------------
 379+ 99C5              ;
 380+ 99C5              ;   27/02/23
 381+ 99C5              ;
 382+ 99C5              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99C5              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99C5              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99C5
 386+ 99C5 ED 73 0A 8A  Pinta_Disparo ld (Stack),sp
 387+ 99C9 FD F9            ld sp,iy
 388+ 99CB 06 03            ld b,3
 389+ 99CD D1           1 pop de
 390+ 99CE 7B               ld a,e
 391+ 99CF AE               xor (hl)
 392+ 99D0 77               ld (hl),a
 393+ 99D1 23               inc hl
 394+ 99D2 7A               ld a,d
 395+ 99D3 AE               xor (hl)
 396+ 99D4 77               ld (hl),a
 397+ 99D5 2B               dec hl
 398+ 99D6
 399+ 99D6 24               inc h
 400+ 99D7 7C               ld a,h
 401+ 99D8 E6 07            and 7
 402+ 99DA 20 0A            jr nz,2F
 403+ 99DC 7D               ld a,l
 404+ 99DD C6 20            add a,$20
 405+ 99DF 6F               ld l,a
 406+ 99E0 38 04            jr c,2F
 407+ 99E2 7C               ld a,h
 408+ 99E3 D6 08            sub 8
 409+ 99E5 67               ld h,a
 410+ 99E6 7C           2 ld a,h
 411+ 99E7 FE 58            cp $58
 412+ 99E9 28 02            jr z,3F
 413+ 99EB
 414+ 99EB 10 E0            djnz 1B
 415+ 99ED ED 7B 0A 8A  3 ld sp,(Stack)
 416+ 99F1 C9               ret
 417+ 99F2
# file closed: Rutinas_de_impresion_sprites.asm
1507  99F2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99F2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99F2              ;
   3+ 99F2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99F2              ;
   5+ 99F2              ; *****************************************************************************************************************************************************************************************
   6+ 99F2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99F2
   8+ 99F2 7C           calcula_tercio ld a,h
   9+ 99F3 E6 18        	and $18
  10+ 99F5 CB 2F        	sra a
  11+ 99F7 CB 2F        	sra a
  12+ 99F9 CB 2F        	sra a
  13+ 99FB C9           	ret
  14+ 99FC
# file closed: calcula_tercio.asm
1508  99FC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99FC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99FC              ;
   3+ 99FC              ;
   4+ 99FC              ;	CLS.
   5+ 99FC              ;
   6+ 99FC              ;	Limpia la pantalla y define sus atributos.
   7+ 99FC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99FC              ;
   9+ 99FC              ;	COLORES: 0 ..... NEGRO
  10+ 99FC              ;    		 1 ..... AZUL
  11+ 99FC              ; 			 2 ..... ROJO
  12+ 99FC              ;			 3 ..... MAGENTA
  13+ 99FC              ; 			 4 ..... VERDE
  14+ 99FC              ; 			 5 ..... CIAN
  15+ 99FC              ;			 6 ..... AMARILLO
  16+ 99FC              ; 			 7 ..... BLANCO
  17+ 99FC              ;
  18+ 99FC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99FC              ;
  20+ 99FC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99FC
  22+ 99FC
  23+ 99FC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99FF 11 01 40     	LD DE,$4001
  25+ 9A02 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9A05 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9A07 ED B0        	LDIR
  28+ 9A09 01 FF 02     	LD BC,767
  29+ 9A0C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9A0D ED B0        	LDIR
  31+ 9A0F C9           	ret
  32+ 9A10
# file closed: Cls.asm
1509  9A10              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A10              ; ******************************************************************************************************************************************************************************************
   2+ 9A10              ;
   3+ 9A10              ;   20/05/23
   4+ 9A10              ;
   5+ 9A10              ;	Recompone_posicion_inicio
   6+ 9A10              ;
   7+ 9A10              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9A10              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9A10              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9A10              ;	_ a una u otra rutina.
  11+ 9A10
  12+ 9A10              Recompone_posicion_inicio
  13+ 9A10
  14+ 9A10 2A C8 89     	ld hl,(Posicion_inicio)
  15+ 9A13 7D           	ld a,l
  16+ 9A14 E6 1F        	and $1f
  17+ 9A16 28 16        	jr z,1F
  18+ 9A18
  19+ 9A18 FE 1F        	cp $1f
  20+ 9A1A 28 0D        	jr z,3F
  21+ 9A1C
  22+ 9A1C 21 F7 89     	ld hl,Ctrl_2
  23+ 9A1F CB C6        	set 0,(hl)
  24+ 9A21 2A BA 89     	ld hl,(Puntero_objeto)
  25+ 9A24 22 FA 89     	ld (Repone_puntero_objeto),hl
  26+ 9A27 18 08        	jr 2F
  27+ 9A29
  28+ 9A29 CD CA 9B     3 call Mov_left
  29+ 9A2C 18 03        	jr 2F
  30+ 9A2E
  31+ 9A2E CD AC 9A     1 call Mov_right
  32+ 9A31 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A34 22 BA 89     	ld (Puntero_objeto),hl
  34+ 9A37 C9           	ret
  35+ 9A38
  36+ 9A38              ; ******************************************************************************************************************************************************************************************
  37+ 9A38              ;
  38+ 9A38              ;   27/05/23
  39+ 9A38              ;
  40+ 9A38              ;	Mov_down
  41+ 9A38              ;
  42+ 9A38              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A38              ;
  44+ 9A38              ;
  45+ 9A38              Mov_down
  46+ 9A38
  47+ 9A38 CD 9A 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A3B              ;																	; _ repone (Puntero_objeto).
  49+ 9A3B 21 E4 89     	ld hl,Ctrl_0
  50+ 9A3E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A40              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A40              ; 																	; _ en el caso de que no lo haya.
  53+ 9A40 3A CE 89     	ld a,(Vel_down)
  54+ 9A43 47           	ld b,a
  55+ 9A44 2A B8 89         ld hl,(Posicion_actual)
  56+ 9A47 CD F2 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A4A E6 02        	and 2
  58+ 9A4C 28 0F        	jr z,1F
  59+ 9A4E
  60+ 9A4E              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A4E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A4E
  63+ 9A4E 7C           	ld a,h
  64+ 9A4F FE 57        	cp $57
  65+ 9A51 20 0A        	jr nz,1F
  66+ 9A53
  67+ 9A53 7D           	ld a,l
  68+ 9A54 C6 20        	add $20
  69+ 9A56 30 05        	jr nc,1F
  70+ 9A58
  71+ 9A58              ; ------------------------------
  72+ 9A58              ;	call Reaparece_arriba
  73+ 9A58 CD 57 9D     	call Reinicio
  74+ 9A5B              ; ------------------------------
  75+ 9A5B
  76+ 9A5B 18 08        	jr 3F
  77+ 9A5D CD 22 97     1 call NextScan
  78+ 9A60 22 B8 89     	ld (Posicion_actual),hl
  79+ 9A63 10 E2            djnz 2B
  80+ 9A65 CD 7D 9D     3 call Genera_coordenadas
  81+ 9A68 C9           	ret
  82+ 9A69
  83+ 9A69              ; ******************************************************************************************************************************************************************************************
  84+ 9A69              ;
  85+ 9A69              ;   27/05/23
  86+ 9A69              ;
  87+ 9A69              ;	Mov_up
  88+ 9A69              ;
  89+ 9A69              ; 	Mueve el Sprite hacia arriba.
  90+ 9A69              ;
  91+ 9A69              ;
  92+ 9A69              Mov_up
  93+ 9A69
  94+ 9A69 CD 9A 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A6C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A6C 21 E4 89     	ld hl,Ctrl_0
  97+ 9A6F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A71              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A71              ; 																		; _ en el caso de que no lo haya.
 100+ 9A71 3A CD 89     	ld a,(Vel_up)
 101+ 9A74 47           	ld b,a
 102+ 9A75 2A B8 89     	ld hl,(Posicion_actual)
 103+ 9A78 CD F2 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A7B A7           	and a
 105+ 9A7C 20 10        	jr nz,1F
 106+ 9A7E
 107+ 9A7E              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A7E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A7E
 110+ 9A7E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A7F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A81 20 0B            jr nz,1F
 113+ 9A83 7D               ld a,l
 114+ 9A84 D6 20            sub $20
 115+ 9A86 30 06            jr nc,1F
 116+ 9A88 25               dec h
 117+ 9A89
 118+ 9A89              ; -----------------------------
 119+ 9A89 CD 38 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A8C              ;	call Reinicio
 121+ 9A8C              ; -----------------------------
 122+ 9A8C
 123+ 9A8C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A8E CD 31 97     1 call PreviousScan
 125+ 9A91 22 B8 89     	ld (Posicion_actual),hl
 126+ 9A94 10 E2            djnz 3B
 127+ 9A96 CD 7D 9D     2 call Genera_coordenadas
 128+ 9A99 C9           	ret
 129+ 9A9A
 130+ 9A9A              ; -----------------------------
 131+ 9A9A              ;
 132+ 9A9A              ;	27/5/23
 133+ 9A9A              ;
 134+ 9A9A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A9A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A9A              ;
 137+ 9A9A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A9A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A9A              ;
 140+ 9A9A              ;	Modifica: A y (Puntero_objeto).
 141+ 9A9A
 142+ 9A9A 3A F7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A9D CB 47        	bit 0,a
 144+ 9A9F C8           	ret z
 145+ 9AA0 CB 87        	res 0,a
 146+ 9AA2 32 F7 89     	ld (Ctrl_2),a
 147+ 9AA5 2A FA 89     	ld hl,(Repone_puntero_objeto)
 148+ 9AA8 22 BA 89     	ld (Puntero_objeto),hl
 149+ 9AAB C9           	ret
 150+ 9AAC
 151+ 9AAC              ; ******************************************************************************************************************************************************************************************
 152+ 9AAC              ;
 153+ 9AAC              ;	19/10/22
 154+ 9AAC              ;
 155+ 9AAC              ;	Mov_right.
 156+ 9AAC              ;
 157+ 9AAC              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9AAC              ;
 159+ 9AAC
 160+ 9AAC 21 E4 89     Mov_right ld hl,Ctrl_0
 161+ 9AAF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9AB1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9AB1              ; 																	; _ en el caso de que no lo haya.
 164+ 9AB1 3A E4 89     	ld a,(Ctrl_0)
 165+ 9AB4 CB 77        	bit 6,a
 166+ 9AB6 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9AB8
 168+ 9AB8 CD E6 9C     	call Stop_Amadeus_right
 169+ 9ABB C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9ABC 18 4D        	jr 8F
 171+ 9ABE
 172+ 9ABE 3A BC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AC1 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9AC3 20 46        	jr nz,8F
 175+ 9AC5
 176+ 9AC5 3A BE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9AC8 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AC9 28 40        	jr z,8F
 179+ 9ACB
 180+ 9ACB              ; ---------- ---------- ----------
 181+ 9ACB              ;
 182+ 9ACB              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9ACB
 184+ 9ACB 3A CC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9ACE FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AD0 28 11        	jr z,1F
 187+ 9AD2 38 06        	jr c,6F
 188+ 9AD4 FE 04        	cp 4
 189+ 9AD6 28 14        	jr z,7F
 190+ 9AD8 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9ADA
 192+ 9ADA              ; ---------- ---------- ----------
 193+ 9ADA              ;
 194+ 9ADA              ; Perfiles de velocidad
 195+ 9ADA              ;
 196+ 9ADA
 197+ 9ADA 3A BE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9ADD FE FE        	cp $fe
 199+ 9ADF 20 2A        	jr nz,8F
 200+ 9AE1 18 10        	jr 3F
 201+ 9AE3 3A BE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AE6 FE FD        	cp $fd
 203+ 9AE8 20 21        	jr nz,8F
 204+ 9AEA 18 07        	jr 3F
 205+ 9AEC 3A BE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AEF FE FB        	cp $fb
 207+ 9AF1 20 18        	jr nz,8F
 208+ 9AF3
 209+ 9AF3              ; ---------- ---------- ----------
 210+ 9AF3
 211+ 9AF3              3
 212+ 9AF3 CD 26 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AF6              ;	call Reinicio
 214+ 9AF6
 215+ 9AF6              ; ---------- ---------- ----------
 216+ 9AF6              ;
 217+ 9AF6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AF6
 219+ 9AF6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AF8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AF9 CD 12 9B     	call DESPLZ_DER
 222+ 9AFC C1           	pop bc
 223+ 9AFD 10 F9        	djnz 5B
 224+ 9AFF 2A B8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9B02 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9B03 22 B8 89     	ld (Posicion_actual),hl
 227+ 9B06 CD 7D 9D     	call Genera_coordenadas
 228+ 9B09 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9B0B
 230+ 9B0B              ; ---------- ---------- ----------
 231+ 9B0B
 232+ 9B0B 2A B8 89     8 ld hl,(Posicion_actual)
 233+ 9B0E CD 12 9B     	call DESPLZ_DER
 234+ 9B11 C9           2 ret
 235+ 9B12
 236+ 9B12              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9B12              ;
 238+ 9B12              ;	22/9/22
 239+ 9B12              ;
 240+ 9B12
 241+ 9B12 CD 21 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9B15 CD 6D 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9B18 CD 96 9B         call Ciclo_completo
 244+ 9B1B 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B1E CB FE        	set 7,(hl)
 246+ 9B20 C9           	ret
 247+ 9B21
 248+ 9B21              ; ******************************************************************************************************************************************************************************************
 249+ 9B21              ;	15/02/23
 250+ 9B21              ;
 251+ 9B21
 252+ 9B21 3A CC 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B24 47           	ld b,a
 254+ 9B25 2A C4 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B28 23           1 inc hl
 256+ 9B29 23           	inc hl
 257+ 9B2A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B2C 22 C4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B2F CD 87 8D     	call Extrae_address
 260+ 9B32 22 BA 89     	ld (Puntero_objeto),hl
 261+ 9B35
 262+ 9B35              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B35
 264+ 9B35              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B35              ; Cuántos movimientos hemos hecho ??
 266+ 9B35              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B35
 268+ 9B35 2A C0 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B38 EB           	ex de,hl
 270+ 9B39 A7           	and a
 271+ 9B3A ED 52        	sbc hl,de
 272+ 9B3C CB 3D        	srl l
 273+ 9B3E 3E 08        6 ld a,8
 274+ 9B40 95           	sub l
 275+ 9B41 30 1E        	jr nc,3F
 276+ 9B43
 277+ 9B43              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B43              ; B="0".
 279+ 9B43
 280+ 9B43 04           4 inc b
 281+ 9B44 3C           	inc a
 282+ 9B45 20 FC        	jr nz,4B
 283+ 9B47 78           	ld a,b
 284+ 9B48 08           	ex af,af
 285+ 9B49 2A C0 89     	ld hl,(Indice_Sprite_der)
 286+ 9B4C 23           5 inc hl
 287+ 9B4D 23           	inc hl
 288+ 9B4E 10 FC        	djnz 5B
 289+ 9B50 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B53 CD 87 8D     	call Extrae_address
 291+ 9B56 22 BA 89     	ld (Puntero_objeto),hl
 292+ 9B59
 293+ 9B59              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B59              ; _(Posicion_actual).
 295+ 9B59
 296+ 9B59 21 B8 89     	ld hl,Posicion_actual
 297+ 9B5C 34           	inc (hl)
 298+ 9B5D 08               ex af,af
 299+ 9B5E 6F           	ld l,a
 300+ 9B5F 18 DD        	jr 6B
 301+ 9B61
 302+ 9B61              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B61
 304+ 9B61 47           3 ld b,a
 305+ 9B62 2A C2 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B65 23           2 inc hl
 307+ 9B66 23           	inc hl
 308+ 9B67 10 FC        	djnz 2B
 309+ 9B69 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B6C C9           8 ret
 311+ 9B6D
 312+ 9B6D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B6D              ;
 314+ 9B6D              ;	24/7/22
 315+ 9B6D              ;
 316+ 9B6D              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B6D              ;
 318+ 9B6D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B6D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B6D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B6D
 322+ 9B6D 3A BE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B70 A7           	and a
 324+ 9B71 20 1F        	jr nz,1F
 325+ 9B73 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B75 32 BE 89         ld (CTRL_DESPLZ),a
 327+ 9B78
 328+ 9B78 21 B7 89     	ld hl,Columns
 329+ 9B7B 34           	inc (hl)
 330+ 9B7C 3A CA 89     	ld a,(Cuad_objeto)
 331+ 9B7F E6 01        	and 1
 332+ 9B81 28 0F        	jr z,1F
 333+ 9B83 2A B8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B86 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B87 22 B8 89     	ld (Posicion_actual),hl
 336+ 9B8A CD 7D 9D     	call Genera_coordenadas
 337+ 9B8D CD F2 9C     	call Inc_CTRL_DESPLZ
 338+ 9B90 18 03        	jr 2F
 339+ 9B92 CD F2 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B95 C9           2 ret
 341+ 9B96
 342+ 9B96              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B96              ;
 344+ 9B96              ;	24/7/22
 345+ 9B96              ;
 346+ 9B96              ;	Ciclo_completo.
 347+ 9B96              ;
 348+ 9B96              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B96              ;
 350+ 9B96              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B96              ; 	Decrementamos (Columns).
 352+ 9B96              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B96              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B96
 355+ 9B96
 356+ 9B96 3A BE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B99 FE FF        	cp $ff
 358+ 9B9B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B9D E6 F0        	and $f0
 360+ 9B9F 20 28        	jr nz,3F
 361+ 9BA1
 362+ 9BA1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9BA1
 364+ 9BA1 3A BE 89     	ld a,(CTRL_DESPLZ)
 365+ 9BA4 47           	ld b,a
 366+ 9BA5 3E F8        	ld a,$f8
 367+ 9BA7 80           	add b
 368+ 9BA8 32 BE 89     	ld (CTRL_DESPLZ),a
 369+ 9BAB 18 1C        	jr 3F
 370+ 9BAD 21 B7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9BB0 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9BB1 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9BB2 32 BE 89     	ld (CTRL_DESPLZ),a
 374+ 9BB5 3A CA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9BB8 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BBA 20 0A        	jr nz,2F
 377+ 9BBC 2A B8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BBF 23           	inc hl
 379+ 9BC0 22 B8 89     	ld (Posicion_actual),hl
 380+ 9BC3 CD 7D 9D     	call Genera_coordenadas
 381+ 9BC6
 382+ 9BC6              ; Inicia el puntero de Sprite.
 383+ 9BC6
 384+ 9BC6 CD 9E 8D     2 call Inicia_puntero_objeto_der
 385+ 9BC9 C9           3 ret
 386+ 9BCA
 387+ 9BCA              ; ******************************************************************************************************************************************************************************************
 388+ 9BCA              ;
 389+ 9BCA              ;	15/02/23
 390+ 9BCA              ;
 391+ 9BCA              ;	Mov_left.
 392+ 9BCA              ;
 393+ 9BCA              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BCA              ;
 395+ 9BCA 21 E4 89     Mov_left ld hl,Ctrl_0
 396+ 9BCD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BCF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BCF              ; 																	; _ en el caso de que no lo haya.
 399+ 9BCF 3A E4 89     	ld a,(Ctrl_0)
 400+ 9BD2 CB 77        	bit 6,a
 401+ 9BD4 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BD6
 403+ 9BD6 CD EC 9C     	call Stop_Amadeus_left
 404+ 9BD9 C8           	ret z
 405+ 9BDA 20 4A        	jr nz,8F
 406+ 9BDC
 407+ 9BDC 3A BC 89     11 ld a,(Coordenada_X)
 408+ 9BDF A7           	and a
 409+ 9BE0 20 44        	jr nz,8F
 410+ 9BE2
 411+ 9BE2 3A BE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BE5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BE6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BE8
 415+ 9BE8              ; ---------- ---------- ----------
 416+ 9BE8
 417+ 9BE8 3A CB 89     	ld a,(Vel_left)
 418+ 9BEB FE 02        	cp 2
 419+ 9BED 28 0F        	jr z,1F
 420+ 9BEF 38 04        	jr c,6F
 421+ 9BF1 FE 04        	cp 4
 422+ 9BF3 28 12        	jr z,7F
 423+ 9BF5
 424+ 9BF5              ; ---------- ---------- ----------
 425+ 9BF5
 426+ 9BF5 3A BE 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BF8 FE F8        	cp $f8
 428+ 9BFA 20 2A        	jr nz,8F
 429+ 9BFC 18 10        	jr 4F
 430+ 9BFE 3A BE 89     1 ld a,(CTRL_DESPLZ)
 431+ 9C01 FE F9        	cp $f9
 432+ 9C03 20 21        	jr nz,8F
 433+ 9C05 18 07        	jr 4F
 434+ 9C07 3A BE 89     7 ld a,(CTRL_DESPLZ)
 435+ 9C0A FE FB        	cp $fb
 436+ 9C0C 20 18        	jr nz,8F
 437+ 9C0E
 438+ 9C0E              ; ---------- ---------- ----------
 439+ 9C0E
 440+ 9C0E              4
 441+ 9C0E CD 14 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9C11              ;	call Reinicio
 443+ 9C11
 444+ 9C11              ; ---------- ---------- ----------
 445+ 9C11
 446+ 9C11 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9C13 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9C14
 449+ 9C14              ;	ld hl,(Indice_Sprite_izq)
 450+ 9C14              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9C14
 452+ 9C14 CD 2D 9C     	call DESPLZ_IZQ
 453+ 9C17 C1           	pop bc
 454+ 9C18 10 F9        	djnz 5B
 455+ 9C1A 2A B8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C1D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C1E 22 B8 89     	ld (Posicion_actual),hl
 458+ 9C21 CD 7D 9D     	call Genera_coordenadas
 459+ 9C24 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C26
 461+ 9C26              ; ---------- ---------- ----------
 462+ 9C26
 463+ 9C26              ; Movemos, no hay recolocación.
 464+ 9C26
 465+ 9C26 2A B8 89     8 ld hl,(Posicion_actual)
 466+ 9C29 CD 2D 9C     	call DESPLZ_IZQ
 467+ 9C2C C9           2 ret
 468+ 9C2D
 469+ 9C2D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C2D              ;
 471+ 9C2D              ;	22/9/22
 472+ 9C2D
 473+ 9C2D              DESPLZ_IZQ
 474+ 9C2D
 475+ 9C2D CD 3C 9C     	call Desplaza_izquierda
 476+ 9C30 CD 88 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C33 CD B0 9C     	call Ciclo_completo_2
 478+ 9C36 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C39 CB BE        	res 7,(hl)
 480+ 9C3B C9           	ret
 481+ 9C3C
 482+ 9C3C              Desplaza_izquierda
 483+ 9C3C
 484+ 9C3C 3A CB 89     	ld a,(Vel_left)
 485+ 9C3F 47           	ld b,a
 486+ 9C40 2A C6 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C43 23           1 inc hl
 488+ 9C44 23           	inc hl
 489+ 9C45 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C47 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C4A CD 87 8D     	call Extrae_address
 492+ 9C4D 22 BA 89     	ld (Puntero_objeto),hl
 493+ 9C50
 494+ 9C50              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C50
 496+ 9C50              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C50              ; Cuántos movimientos hemos hecho ??
 498+ 9C50              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C50
 500+ 9C50 2A C2 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C53 EB           	ex de,hl
 502+ 9C54 A7           	and a
 503+ 9C55 ED 52        	sbc hl,de
 504+ 9C57 CB 3D        	srl l
 505+ 9C59 3E 08        6 ld a,8
 506+ 9C5B 95           	sub l
 507+ 9C5C 30 1E        	jr nc,3F
 508+ 9C5E
 509+ 9C5E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C5E              ; B="0".
 511+ 9C5E
 512+ 9C5E 04           4 inc b
 513+ 9C5F 3C           	inc a
 514+ 9C60 20 FC        	jr nz,4B
 515+ 9C62 78           	ld a,b
 516+ 9C63 08           	ex af,af
 517+ 9C64 2A C2 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C67 23           5 inc hl
 519+ 9C68 23           	inc hl
 520+ 9C69 10 FC        	djnz 5B
 521+ 9C6B 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C6E CD 87 8D     	call Extrae_address
 523+ 9C71 22 BA 89     	ld (Puntero_objeto),hl
 524+ 9C74
 525+ 9C74              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C74              ; _(Posicion_actual).
 527+ 9C74
 528+ 9C74 21 B8 89     	ld hl,Posicion_actual
 529+ 9C77 35           	dec (hl)
 530+ 9C78 08           	ex af,af
 531+ 9C79 6F           	ld l,a
 532+ 9C7A 18 DD        	jr 6B
 533+ 9C7C
 534+ 9C7C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C7C
 536+ 9C7C 47           3 ld b,a
 537+ 9C7D 2A C0 89     	ld hl,(Indice_Sprite_der)
 538+ 9C80 23           2 inc hl
 539+ 9C81 23           	inc hl
 540+ 9C82 10 FC        	djnz 2B
 541+ 9C84 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C87 C9           8 ret
 543+ 9C88
 544+ 9C88              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C88              ;
 546+ 9C88              ;	modifica_parametros_1er_DESPLZ
 547+ 9C88              ;
 548+ 9C88              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C88              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C88              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C88
 552+ 9C88 3A BE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C8B A7           	and a
 554+ 9C8C 20 1E        	jr nz,1F
 555+ 9C8E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C8F 32 BE 89         ld (CTRL_DESPLZ),a
 557+ 9C92 21 B7 89     	ld hl,Columns
 558+ 9C95 34           	inc (hl)
 559+ 9C96 3A CA 89     	ld a,(Cuad_objeto)
 560+ 9C99 E6 01        	and 1
 561+ 9C9B 20 0F        	jr nz,1F
 562+ 9C9D 2A B8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9CA0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9CA1 22 B8 89     	ld (Posicion_actual),hl
 565+ 9CA4 CD 7D 9D     	call Genera_coordenadas
 566+ 9CA7 CD 03 9D     	call Dec_CTRL_DESPLZ
 567+ 9CAA 18 03        	jr 2F
 568+ 9CAC CD 03 9D     1 call Dec_CTRL_DESPLZ
 569+ 9CAF C9           2 ret
 570+ 9CB0
 571+ 9CB0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9CB0
 573+ 9CB0 3A BE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9CB3 FE F7        	cp $f7
 575+ 9CB5 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9CB7 30 2C        	jr nc,3F
 577+ 9CB9
 578+ 9CB9              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9CB9
 580+ 9CB9 06 00        	ld b,0
 581+ 9CBB 04           4 inc b
 582+ 9CBC 3C           	inc a
 583+ 9CBD FE F7        	cp $f7
 584+ 9CBF 20 FA        	jr nz,4B
 585+ 9CC1 3E FF        	ld a,$ff
 586+ 9CC3 90           	sub b
 587+ 9CC4 32 BE 89     	ld (CTRL_DESPLZ),a
 588+ 9CC7 18 1C        	jr 3F
 589+ 9CC9
 590+ 9CC9              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CC9
 592+ 9CC9 21 B7 89     1 ld hl,Columns
 593+ 9CCC 35           	dec (hl)
 594+ 9CCD AF           	xor a
 595+ 9CCE 32 BE 89     	ld (CTRL_DESPLZ),a
 596+ 9CD1 3A CA 89     	ld a,(Cuad_objeto)
 597+ 9CD4 E6 01        	and 1
 598+ 9CD6 28 0A        	jr z,2F
 599+ 9CD8 2A B8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CDB 2B           	dec hl
 601+ 9CDC 22 B8 89     	ld (Posicion_actual),hl
 602+ 9CDF CD 7D 9D     	call Genera_coordenadas
 603+ 9CE2
 604+ 9CE2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CE2
 606+ 9CE2 CD B1 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CE5 C9           3 ret
 608+ 9CE6
 609+ 9CE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CE6              ;
 611+ 9CE6              ;	19/10/22
 612+ 9CE6              ;
 613+ 9CE6              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CE6              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CE6
 616+ 9CE6 3A BC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CE9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CEB C9           	ret
 619+ 9CEC
 620+ 9CEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CEC              ;
 622+ 9CEC              ;	19/10/22
 623+ 9CEC              ;
 624+ 9CEC              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CEC              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CEC
 627+ 9CEC 3A BC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CEF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CF1 C9           	ret
 630+ 9CF2
 631+ 9CF2              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CF2              ;
 633+ 9CF2              ;	24/7/22
 634+ 9CF2              ;
 635+ 9CF2              ;	Inc_CTRL_DESPLZ
 636+ 9CF2              ;
 637+ 9CF2              ;
 638+ 9CF2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CF2
 640+ 9CF2 21 BE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CF5 3A CC 89     	ld a,(Vel_right)
 642+ 9CF8 A7           	and a
 643+ 9CF9 28 06        	jr z,1F
 644+ 9CFB 47           	ld b,a
 645+ 9CFC 34           3 inc (hl)
 646+ 9CFD 10 FD        	djnz 3B
 647+ 9CFF 18 01        	jr 2F
 648+ 9D01 34           1 inc (hl)
 649+ 9D02 C9           2 ret
 650+ 9D03
 651+ 9D03              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9D03              ;
 653+ 9D03              ;	5/2/23
 654+ 9D03              ;
 655+ 9D03              ;	Dec_CTRL_DESPLZ
 656+ 9D03              ;
 657+ 9D03              ;
 658+ 9D03              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9D03
 660+ 9D03 21 BE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9D06 3A CB 89     	ld a,(Vel_left)
 662+ 9D09 A7           	and a
 663+ 9D0A 28 06        	jr z,1F
 664+ 9D0C 47           	ld b,a
 665+ 9D0D 35           3 dec (hl)
 666+ 9D0E 10 FD        	djnz 3B
 667+ 9D10 18 01        	jr 2F
 668+ 9D12 35           1 dec (hl)
 669+ 9D13 C9           2 ret
 670+ 9D14
 671+ 9D14              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9D14
 673+ 9D14 2A B8 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9D17 01 1F 00     	ld bc,31
 675+ 9D1A A7           	and a
 676+ 9D1B ED 4A        	adc hl,bc
 677+ 9D1D 22 B8 89     	ld (Posicion_actual),hl
 678+ 9D20 21 E4 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D23 CB C6        	set 0,(hl)
 680+ 9D25 C9           	ret
 681+ 9D26
 682+ 9D26              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D26
 684+ 9D26 2A B8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D29 01 1F 00     	ld bc,31
 686+ 9D2C A7           	and a
 687+ 9D2D ED 42        	sbc hl,bc
 688+ 9D2F 22 B8 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D32 21 E4 89     	ld hl,Ctrl_0
 690+ 9D35 CB CE        	set 1,(hl)
 691+ 9D37 C9           	ret
 692+ 9D38
 693+ 9D38              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D38
 695+ 9D38 24           Reaparece_abajo inc h
 696+ 9D39 01 E0 17     	ld bc,$17e0
 697+ 9D3C A7           	and a
 698+ 9D3D ED 4A        	adc hl,bc
 699+ 9D3F 22 B8 89     	ld (Posicion_actual),hl
 700+ 9D42 21 E4 89     	ld hl,Ctrl_0
 701+ 9D45 CB D6        	set 2,(hl)
 702+ 9D47 C9           	ret
 703+ 9D48
 704+ 9D48              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D48
 706+ 9D48 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D4B A7           	and a
 708+ 9D4C ED 42        	sbc hl,bc
 709+ 9D4E 22 B8 89     	ld (Posicion_actual),hl
 710+ 9D51 21 E4 89     	ld hl,Ctrl_0
 711+ 9D54 CB DE        	set 3,(hl)
 712+ 9D56 C9           	ret
 713+ 9D57
 714+ 9D57              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D57              ;
 716+ 9D57              ;	15/07/23
 717+ 9D57
 718+ 9D57              Reinicio
 719+ 9D57
 720+ 9D57              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D57
 722+ 9D57 AF           	xor a
 723+ 9D58 21 EB 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D5B CD 79 9D     	call Limpia_contenido_hl
 725+ 9D5E
 726+ 9D5E 21 B8 89     	ld hl,Posicion_actual
 727+ 9D61 CD 79 9D     	call Limpia_contenido_hl
 728+ 9D64
 729+ 9D64 CD 9A A0     	call Inicializa_Puntero_indice_mov
 730+ 9D67 CD 24 A0     	call Inicia_Puntero_mov
 731+ 9D6A
 732+ 9D6A 21 ED 89     	ld hl,Incrementa_puntero
 733+ 9D6D 06 05        	ld b,5
 734+ 9D6F 77           1 ld (hl),a
 735+ 9D70 23           	inc hl
 736+ 9D71 10 FC        	djnz 1B
 737+ 9D73
 738+ 9D73 21 F7 89     	ld hl,Ctrl_2
 739+ 9D76 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D78
 741+ 9D78 C9           	ret
 742+ 9D79
 743+ 9D79 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D7A 23           	inc hl
 745+ 9D7B 77           	ld (hl),a
 746+ 9D7C C9           	ret
 747+ 9D7D
 748+ 9D7D
# file closed: Direcciones.asm
1510  9D7D              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D7D              ; ------------------------------------------------------------------------
   2+ 9D7D              ;
   3+ 9D7D              ;	02/04/23
   4+ 9D7D              ;
   5+ 9D7D              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D7D              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D7D              ;
   8+ 9D7D              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D7D              ;
  10+ 9D7D              ;	Modifica: A,BC y DE.
  11+ 9D7D
  12+ 9D7D C5           Genera_coordenadas push bc
  13+ 9D7E E5           	push hl
  14+ 9D7F D5           	push de
  15+ 9D80
  16+ 9D80 2A B8 89     	ld hl,(Posicion_actual)
  17+ 9D83
  18+ 9D83 7D           	ld a,l
  19+ 9D84 E6 1F        	and $1f
  20+ 9D86 32 BC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D89
  22+ 9D89 CD F2 99     	call calcula_tercio
  23+ 9D8C 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D8D
  25+ 9D8D 1E 00        	ld e,0
  26+ 9D8F 7D           	ld a,l
  27+ 9D90 E6 E0        	and $e0
  28+ 9D92 28 01        	jr z,1F
  29+ 9D94 04           	inc b
  30+ 9D95
  31+ 9D95 04           1 inc b
  32+ 9D96 05           	dec b
  33+ 9D97 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D99              ;														; _ , salimos.
  35+ 9D99 1C           3 inc e
  36+ 9D9A D6 20        	sub 32
  37+ 9D9C 20 FB        	jr nz,3B
  38+ 9D9E 10 F5        	djnz 1B
  39+ 9DA0
  40+ 9DA0 7B           2 ld a,e
  41+ 9DA1 32 BD 89     	ld (Coordenada_y),a
  42+ 9DA4
  43+ 9DA4 D1           	pop de
  44+ 9DA5 E1           	pop hl
  45+ 9DA6 C1           	pop bc
  46+ 9DA7
  47+ 9DA7 C9           	ret
  48+ 9DA8
  49+ 9DA8              ; ------------------------------------------------------------------------
  50+ 9DA8              ;	28/05/23
  51+ 9DA8              ;
  52+ 9DA8              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9DA8              ;	Fila superior "0", Columna izquierda "0".
  54+ 9DA8              ;
  55+ 9DA8              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9DA8              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9DA8              ;
  58+ 9DA8              ;		DE="$120d"
  59+ 9DA8              ;
  60+ 9DA8              ;		D, (Coordenada_X), Columnas, $12
  61+ 9DA8              ;		E, (Coordenada_y), Filas, $0d
  62+ 9DA8              ;
  63+ 9DA8              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9DA8
  65+ 9DA8              ;	Modifica: A,BC y DE.
  66+ 9DA8
  67+ 9DA8
  68+ 9DA8              Genera_coordenadas_disparo
  69+ 9DA8
  70+ 9DA8              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9DA8
  72+ 9DA8 7D           	ld a,l
  73+ 9DA9 E6 1F        	and $1f
  74+ 9DAB 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9DAC CD F2 99     	call calcula_tercio
  76+ 9DAF 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9DB0 1E 00        	ld e,0
  78+ 9DB2 7D           	ld a,l
  79+ 9DB3 E6 E0        	and $e0
  80+ 9DB5 28 01        	jr z,1F
  81+ 9DB7 04           	inc b
  82+ 9DB8 1C           1 inc e
  83+ 9DB9 D6 20        	sub 32
  84+ 9DBB 20 FB        	jr nz,1B
  85+ 9DBD 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DBF C9           	ret
  87+ 9DC0
# file closed: Genera_coordenadas.asm
1511  9DC0              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DC0
   2+ 9DC0
   3+ 9DC0              ;   07/07/23
   4+ 9DC0              ;
   5+ 9DC0              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DC0              ;
   7+ 9DC0              ;   Codificación:
   8+ 9DC0              ;
   9+ 9DC0              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DC0              ;
  11+ 9DC0              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DC0              ;
  13+ 9DC0              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DC0              ;
  15+ 9DC0              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DC0              ;
  17+ 9DC0              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DC0              ;                               ..... %01000010 Vel_up 4
  19+ 9DC0              ;                                               Vel_down 2
  20+ 9DC0              ;                               ..... $42
  21+ 9DC0              ;
  22+ 9DC0              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DC0              ;
  24+ 9DC0              ;                               ..... %01000010 Vel_left 4
  25+ 9DC0              ;                                               Vel_right 2
  26+ 9DC0              ;                               ..... $42
  27+ 9DC0              ;
  28+ 9DC0              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DC0              ;
  30+ 9DC0              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DC0              ;
  32+ 9DC0              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DC0              ;
  34+ 9DC0              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DC0              ;                                     $53
  36+ 9DC0              ;
  37+ 9DC0              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DC0              ;
  39+ 9DC0              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DC0              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DC0              ;
  42+ 9DC0              ;                       Arriba ..... $81
  43+ 9DC0              ;                       Arriba - izquierda ..... $a1
  44+ 9DC0              ;                       Arriba - derecha ..... $91
  45+ 9DC0              ;
  46+ 9DC0              ;                       Abajo ..... $41
  47+ 9DC0              ;                       Abajo - izquierda ..... $61
  48+ 9DC0              ;                       Abajo - derecha ..... $51
  49+ 9DC0              ;
  50+ 9DC0              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DC0              ;
  52+ 9DC0              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DC0              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DC0              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DC0              ;
  56+ 9DC0              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DC0              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DC0              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DC0              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DC0              ;
  61+ 9DC0              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DC0              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DC0              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DC0              ;
  65+ 9DC0              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DC0              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DC0              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DC0              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DC0
  70+ 9DC0              ; ----- ----- ----- ----- -----
  71+ 9DC0
  72+ 9DC0 EC 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DC2 F4 9D            defw F_1
  74+ 9DC4 FE 9D            defw F_2
  75+ 9DC6 08 9E            defw Codo_abajo_derecha
  76+ 9DC8 3C 9E            defw Derecha_y_subiendo
  77+ 9DCA 46 9E            defw Derecha_y_subiendo_1
  78+ 9DCC 50 9E            defw F_3
  79+ 9DCE 5A 9E            defw F_4
  80+ 9DD0 64 9E            defw Derecha_y_bajando
  81+ 9DD2 6E 9E            defw Derecha_y_bajando_1
  82+ 9DD4 78 9E            defw Derecha_y_bajando_2
  83+ 9DD6 82 9E            defw Codo_derecha_abajo
  84+ 9DD8 B2 9E            defw Codo_abajo_izq.
  85+ 9DDA E6 9E            defw Izquierda_y_subiendo
  86+ 9DDC F0 9E            defw Izquierda_y_subiendo_1
  87+ 9DDE FA 9E            defw F_5
  88+ 9DE0 04 9F            defw F_6
  89+ 9DE2 0E 9F            defw Izquierda_y_bajando
  90+ 9DE4 18 9F            defw Izquierda_y_bajando_1
  91+ 9DE6 22 9F            defw Izquierda_y_bajando_2
  92+ 9DE8 2C 9F            defw Codo_izquierda_abajo
  93+ 9DEA 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DEC
  95+ 9DEC 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DF0 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DF4
  98+ 9DF4 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DF8 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DFC 08 00
 100+ 9DFE 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9E02 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9E06 0F FE
 102+ 9E08
 103+ 9E08 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9E0C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E1C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E20 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E24 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E28 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E2C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E30 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E34 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E38 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E3C
 117+ 9E3C 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E40 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E44 06 00
 119+ 9E46
 120+ 9E46 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E4A 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E4E 02 00
 122+ 9E50
 123+ 9E50 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E54 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E58 04 00
 125+ 9E5A 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E5E 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E62 08 00
 127+ 9E64
 128+ 9E64 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E68 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E6C 02 00
 130+ 9E6E
 131+ 9E6E 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E72 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E76 06 00
 133+ 9E78
 134+ 9E78 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E7C 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E80 06 00
 136+ 9E82
 137+ 9E82              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E82
 139+ 9E82 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E86 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E8A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E8E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E92 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E96 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E9A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E9E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9EA2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9EA6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9EAA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9EAE 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EB2
 152+ 9EB2 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EB6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EBA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EBE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EC2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EC6 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9ECA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9ECE 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9ED2 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9ED6 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EDA 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EDE 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EE2 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EE6
 166+ 9EE6 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EEA 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EEE 06 00
 168+ 9EF0
 169+ 9EF0 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EF4 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EF8 02 00
 171+ 9EFA
 172+ 9EFA 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EFE 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9F02 04 00
 174+ 9F04 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9F08 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9F0C 08 00
 176+ 9F0E
 177+ 9F0E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F12 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F16 02 00
 179+ 9F18
 180+ 9F18 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F1C 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F20 06 00
 182+ 9F22
 183+ 9F22 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F26 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F2A 06 00
 185+ 9F2C
 186+ 9F2C 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F30 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F34 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F38 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F3C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F40 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F44 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F48 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F4C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F50 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F54 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F58 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F5C
 199+ 9F5C              ; ----- ----- ----- ----- -----
 200+ 9F5C              ;
 201+ 9F5C              ;   27/06/23
 202+ 9F5C
 203+ 9F5C              Movimiento
 204+ 9F5C
 205+ 9F5C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F5C
 207+ 9F5C              ;    ld hl,(Posicion_actual)
 208+ 9F5C
 209+ 9F5C 3A F7 89         ld a,(Ctrl_2)
 210+ 9F5F CB 57            bit 2,a
 211+ 9F61 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F63
 213+ 9F63 2A E9 89         ld hl,(Puntero_mov)
 214+ 9F66 7E               ld a,(hl)
 215+ 9F67
 216+ 9F67              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F67
 218+ 9F67              Inicia_desplazamiento.
 219+ 9F67
 220+ 9F67              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F67
 222+ 9F67 CD 5B A0         call Ajusta_velocidad_desplazamiento
 223+ 9F6A
 224+ 9F6A              ; Iniciamos (Repetimos_mov).
 225+ 9F6A
 226+ 9F6A 7E               ld a,(hl)
 227+ 9F6B E6 0F            and $0f
 228+ 9F6D 32 EF 89         ld (Repetimos_desplazamiento),a
 229+ 9F70 32 F0 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F73
 231+ 9F73              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F73
 233+ 9F73 23               inc hl
 234+ 9F74 7E               ld a,(hl)
 235+ 9F75 32 F2 89         ld (Cola_de_desplazamiento),a
 236+ 9F78 2B               dec hl
 237+ 9F79
 238+ 9F79 21 F7 89         ld hl,Ctrl_2
 239+ 9F7C CB D6            set 2,(hl)
 240+ 9F7E
 241+ 9F7E              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F7E              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F7E
 244+ 9F7E              Desplazamiento_iniciado
 245+ 9F7E
 246+ 9F7E CD 2F A0         call Aplica_desplazamiento
 247+ 9F81
 248+ 9F81 3A F7 89         ld a,(Ctrl_2)
 249+ 9F84 CB 67            bit 4,a
 250+ 9F86 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F87
 252+ 9F87 21 EF 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F8A 35               dec (hl)
 254+ 9F8B C0               ret nz
 255+ 9F8C
 256+ 9F8C              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F8C              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F8C              ; Analiza (Cola_de_desplazamiento).
 259+ 9F8C
 260+ 9F8C 3A F2 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F8F A7               and a
 262+ 9F90 CC 84 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F93 28 30            jr z,Reinicia_el_movimiento
 264+ 9F95
 265+ 9F95 FE FF            cp $ff
 266+ 9F97 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F99
 268+ 9F99 FE FE            cp $fe
 269+ 9F9B CC 08 A0         call z,Fijamos_bucle
 270+ 9F9E 28 25            jr z,Reinicia_el_movimiento
 271+ 9FA0
 272+ 9FA0 FE FD            cp $fd
 273+ 9FA2 20 11            jr nz,1F
 274+ 9FA4
 275+ 9FA4              ; ---
 276+ 9FA4              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9FA4
 278+ 9FA4 3A F7 89         ld a,(Ctrl_2)
 279+ 9FA7 CB 5F            bit 3,a
 280+ 9FA9 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9FAB
 282+ 9FAB              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9FAB
 284+ 9FAB 21 F7 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9FAE CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9FB0
 287+ 9FB0 CD 19 A0         call Inicia_Repetimos_movimiento
 288+ 9FB3 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9FB5              ; ---
 290+ 9FB5
 291+ 9FB5 FE 01        1 cp 1
 292+ 9FB7 CA F2 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FBA
 294+ 9FBA 3D               dec a
 295+ 9FBB 32 F2 89         ld (Cola_de_desplazamiento),a
 296+ 9FBE
 297+ 9FBE 3A F0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FC1 32 EF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FC4              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FC4 C9               ret
 301+ 9FC5
 302+ 9FC5              Reinicia_el_movimiento
 303+ 9FC5
 304+ 9FC5 3A F7 89         ld a,(Ctrl_2)
 305+ 9FC8 CB 5F            bit 3,a
 306+ 9FCA 28 1B            jr z,2F
 307+ 9FCC
 308+ 9FCC              ; (Cola_de_desplazamiento)="254".
 309+ 9FCC
 310+ 9FCC 21 F1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FCF 35               dec (hl)
 312+ 9FD0 20 15            jr nz,2F
 313+ 9FD2
 314+ 9FD2              ; Fin de las repeticiones del último movimiento.
 315+ 9FD2
 316+ 9FD2 21 F7 89         ld hl,Ctrl_2
 317+ 9FD5 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FD7
 319+ 9FD7 2A E9 89         ld hl,(Puntero_mov)
 320+ 9FDA 23               inc hl
 321+ 9FDB 23               inc hl
 322+ 9FDC 23               inc hl
 323+ 9FDD 22 E9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FE0              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FE0 7E               ld a,(hl)
 326+ 9FE1 32 F2 89         ld (Cola_de_desplazamiento),a
 327+ 9FE4
 328+ 9FE4 C3 8C 9F         jp Cola
 329+ 9FE7
 330+ 9FE7
 331+ 9FE7 CD 24 A0     2 call Inicia_Puntero_mov
 332+ 9FEA
 333+ 9FEA 21 F7 89         ld hl,Ctrl_2
 334+ 9FED CB 96            res 2,(hl)
 335+ 9FEF
 336+ 9FEF C3 5C 9F         jp Movimiento
 337+ 9FF2
 338+ 9FF2              Siguiente_desplazamiento
 339+ 9FF2
 340+ 9FF2              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FF2              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FF2
 343+ 9FF2 21 F7 89         ld hl,Ctrl_2
 344+ 9FF5 CB 96            res 2,(hl)
 345+ 9FF7
 346+ 9FF7 2A E9 89         ld hl,(Puntero_mov)
 347+ 9FFA 23               inc hl
 348+ 9FFB 23               inc hl
 349+ 9FFC 22 E9 89         ld (Puntero_mov),hl
 350+ 9FFF
 351+ 9FFF 7E               ld a,(hl)
 352+ A000 A7               and a
 353+ A001 CC 84 A0         call z,Incrementa_Puntero_indice_mov
 354+ A004 CA C5 9F         jp z,Reinicia_el_movimiento
 355+ A007
 356+ A007 C9               ret
 357+ A008              ; Subrutinas -----------------------------------------
 358+ A008              ; ---------- --------- --------- ---------- ----------
 359+ A008              ;
 360+ A008              ;   24/07/23
 361+ A008              ;
 362+ A008              ;   Fijamos_bucle
 363+ A008              ;
 364+ A008              ;
 365+ A008
 366+ A008              Fijamos_bucle
 367+ A008
 368+ A008 3A ED 89         ld a,(Incrementa_puntero)
 369+ A00B 3C               inc a
 370+ A00C 32 EE 89         ld (Incrementa_puntero_backup),a
 371+ A00F
 372+ A00F CD 84 A0         call Incrementa_Puntero_indice_mov
 373+ A012 2A E7 89         ld hl,(Puntero_indice_mov)
 374+ A015 22 EB 89         ld (Puntero_indice_mov_bucle),hl
 375+ A018 C9               ret
 376+ A019
 377+ A019              ; ---------- --------- --------- ---------- ----------
 378+ A019              ;
 379+ A019              ;   07/7/23
 380+ A019              ;
 381+ A019              ;   Inicia_Repetimos_movimiento
 382+ A019              ;
 383+ A019              ;
 384+ A019
 385+ A019              Inicia_Repetimos_movimiento
 386+ A019
 387+ A019              ; Iniciamos (Repetimos_movimiento).
 388+ A019
 389+ A019 DD 2A E9 89      ld ix,(Puntero_mov)
 390+ A01D DD 7E 02         ld a,(ix+2)
 391+ A020 32 F1 89         ld (Repetimos_movimiento),a
 392+ A023
 393+ A023 C9               ret
 394+ A024
 395+ A024              ; ---------- --------- --------- ---------- ----------
 396+ A024              ;
 397+ A024              ;   26/6/23
 398+ A024              ;
 399+ A024              ;   Inicia_Puntero_mov
 400+ A024              ;
 401+ A024              ;
 402+ A024
 403+ A024 2A E7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A027 5E               ld e,(hl)
 405+ A028 23               inc hl
 406+ A029 56               ld d,(hl)
 407+ A02A EB               ex de,hl
 408+ A02B 22 E9 89         ld (Puntero_mov),hl
 409+ A02E C9               ret
 410+ A02F
 411+ A02F              ; ---------- --------- --------- ---------- ----------
 412+ A02F              ;
 413+ A02F              ;   27/06/23
 414+ A02F              ;
 415+ A02F              ;   Aplica_movimiento.
 416+ A02F
 417+ A02F              Aplica_desplazamiento
 418+ A02F
 419+ A02F              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A02F
 421+ A02F 2A E9 89         ld hl, (Puntero_mov)
 422+ A032
 423+ A032 7E               ld a,(hl)
 424+ A033 E6 F0            and $f0
 425+ A035 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A036
 427+ A036 CB 7E            bit 7,(hl)
 428+ A038 28 03            jr z,1F
 429+ A03A CD 69 9A         call Mov_up
 430+ A03D 2A E9 89     1 ld hl, (Puntero_mov)
 431+ A040 CB 76            bit 6,(hl)
 432+ A042 28 03            jr z,2F
 433+ A044 CD 38 9A         call Mov_down
 434+ A047 2A E9 89     2 ld hl, (Puntero_mov)
 435+ A04A CB 6E            bit 5,(hl)
 436+ A04C 28 03            jr z,3F
 437+ A04E CD CA 9B         call Mov_left
 438+ A051 2A E9 89     3 ld hl, (Puntero_mov)
 439+ A054 CB 66            bit 4,(hl)
 440+ A056 C8               ret z
 441+ A057 CD AC 9A         call Mov_right
 442+ A05A C9               ret
 443+ A05B
 444+ A05B              ; ---------- --------- --------- ---------- ----------
 445+ A05B              ;
 446+ A05B              ;   26/06/23
 447+ A05B              ;
 448+ A05B              ;   Ajusta_velocidad_desplazamiento.
 449+ A05B
 450+ A05B              Ajusta_velocidad_desplazamiento
 451+ A05B
 452+ A05B              ; 1er byte de la cadena de movimiento.
 453+ A05B              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A05B
 455+ A05B CD 79 A0         call Extrae_nibble_alto
 456+ A05E
 457+ A05E 32 CD 89         ld (Vel_up),a
 458+ A061 79               ld a,c
 459+ A062 E6 0F            and $0f
 460+ A064 32 CE 89         ld (Vel_down),a
 461+ A067
 462+ A067              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A067              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A067
 465+ A067 23               inc hl
 466+ A068 CD 79 A0         call Extrae_nibble_alto
 467+ A06B
 468+ A06B 32 CB 89         ld (Vel_left),a
 469+ A06E 79               ld a,c
 470+ A06F E6 0F            and $0f
 471+ A071 32 CC 89         ld (Vel_right),a
 472+ A074
 473+ A074              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A074
 475+ A074 23               inc hl
 476+ A075 22 E9 89         ld (Puntero_mov),hl
 477+ A078 C9               ret
 478+ A079
 479+ A079 06 04        Extrae_nibble_alto ld b,4
 480+ A07B 7E               ld a,(hl)
 481+ A07C 4F               ld c,a
 482+ A07D E6 F0            and $f0
 483+ A07F CB 3F        1 srl a
 484+ A081 10 FC            djnz 1B
 485+ A083 C9               ret
 486+ A084
 487+ A084              ; ---------- --------- --------- ---------- ----------
 488+ A084              ;
 489+ A084              ;   5/7/23
 490+ A084              ;
 491+ A084              ;   Incrementa_Puntero_indice_mov
 492+ A084
 493+ A084              Incrementa_Puntero_indice_mov
 494+ A084
 495+ A084 21 ED 89         ld hl,Incrementa_puntero
 496+ A087 34               inc (hl)
 497+ A088
 498+ A088 2A E7 89         ld hl,(Puntero_indice_mov)
 499+ A08B 01 02 00         ld bc,2
 500+ A08E A7               and a
 501+ A08F 09               add hl,bc
 502+ A090 22 E7 89         ld (Puntero_indice_mov),hl
 503+ A093
 504+ A093 7E               ld a,(hl)
 505+ A094 A7               and a
 506+ A095
 507+ A095              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A095
 509+ A095              ;    jr z,$
 510+ A095
 511+ A095              ;! Reinicia el Patrón de movimiento.
 512+ A095
 513+ A095 CC 9A A0         call z,Inicializa_Puntero_indice_mov
 514+ A098
 515+ A098 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A099
 517+ A099 C9               ret
 518+ A09A
 519+ A09A
 520+ A09A              ; ---------- --------- --------- ---------- ----------
 521+ A09A              ;
 522+ A09A              ;   24/07/23
 523+ A09A              ;
 524+ A09A              ;   Inicializa_Puntero_indice_mov
 525+ A09A
 526+ A09A              Inicializa_Puntero_indice_mov
 527+ A09A
 528+ A09A              ; Existe etiqueta de bucle principal???
 529+ A09A
 530+ A09A 2A EB 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A09D 24               inc h
 532+ A09E 25               dec h
 533+ A09F 28 05            jr z,2F
 534+ A0A1
 535+ A0A1 22 E7 89         ld (Puntero_indice_mov),hl
 536+ A0A4 18 14            jr 3F
 537+ A0A6
 538+ A0A6              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A0A6
 540+ A0A6 3A ED 89     2 ld a,(Incrementa_puntero)
 541+ A0A9 47               ld b,a
 542+ A0AA
 543+ A0AA 2A E7 89         ld hl,(Puntero_indice_mov)
 544+ A0AD 2B           1 dec hl
 545+ A0AE 2B               dec hl
 546+ A0AF 10 FC            djnz 1B
 547+ A0B1 22 E7 89         ld (Puntero_indice_mov),hl
 548+ A0B4
 549+ A0B4 AF               xor a
 550+ A0B5 32 ED 89         ld (Incrementa_puntero),a
 551+ A0B8 18 06            jr 4F
 552+ A0BA
 553+ A0BA 3A EE 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0BD 32 ED 89         ld (Incrementa_puntero),a
 555+ A0C0 C9           4 ret
 556+ A0C1
 557+ A0C1
 558+ A0C1
# file closed: Patrones_de_mov.asm
1512  A0C1              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A0C1              ; Relojes y temporizaciones.
   2+ A0C1
   3+ A0C1              ; ------------------------------------------------------
   4+ A0C1              ;
   5+ A0C1              ;	16/7/23
   6+ A0C1              ;
   7+ A0C1              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A0C1              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A0C1              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A0C1              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A0C1              ;
  12+ A0C1              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A0C1              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A0C1
  15+ A0C1              ; Disparo_entidad db 1
  16+ A0C1              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A0C1              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A0C1
  19+ A0C1              Habilita_disparos
  20+ A0C1
  21+ A0C1 7E           	ld a,(hl)
  22+ A0C2 A7           	and a
  23+ A0C3 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A0C4
  25+ A0C4 EB           	ex de,hl
  26+ A0C5
  27+ A0C5 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A0C6 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A0C7
  30+ A0C7              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A0C7
  32+ A0C7 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0C8 7E           	ld a,(hl)
  34+ A0C9 23           	inc hl
  35+ A0CA 77           	ld (hl),a
  36+ A0CB
  37+ A0CB EB           	ex de,hl						; Habilitamos disparo.
  38+ A0CC 3E 01        	ld a,1
  39+ A0CE 77           	ld (hl),a
  40+ A0CF C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1513  A0D0              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0D0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0D0              ;
   3+ A0D0              ;	9/8/23
   4+ A0D0              ;
   5+ A0D0              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0D0
   7+ A0D0              ;	ADC HL,SP	LD (addr),SP
   8+ A0D0              ;	ADD HL,SP	LD SP,(addr)
   9+ A0D0              ;	ADD IX,SP	LD SP,nn
  10+ A0D0              ; 	ADD IY,SP	LD SP,HL
  11+ A0D0              ;				LD SP,IX
  12+ A0D0              ;	DEC SP		LD SP,IY
  13+ A0D0
  14+ A0D0              ;	EX (SP),HL
  15+ A0D0              ;	EX (SP),IX
  16+ A0D0              ;	EX (SP),IY
  17+ A0D0
  18+ A0D0              ;	INC SP
  19+ A0D0
  20+ A0D0                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 0A 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A F9 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 12 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 10 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 12 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 10 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 0A 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 2C 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 14 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 14 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 18 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 14 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 18 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 18 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 1C 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 18 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 1C 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 1C 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 20 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 1C 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 20 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 20 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1514  74C8
1515  74C8              	SAVESNA "Pruebas.sna", START
1516  74C8
1517  74C8
1518  74C8
1519  74C8
# file closed: Banco_de_pruebas.asm
