# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B2 8E     	call Frame
  15  A104 FB           	ei
  16  A105 ED 4D        	reti
  17  A107
  18  A107              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  A107
  20  A107              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A107              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A107              ;
   3+ A107              ;	17/02/23
   4+ A107              ;
   5+ A107              ;	Sprites e índices.
   6+ A107
   7+ A107              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 12 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 16 8A        	defw End_Snapshot_1
 267+ 8500 1A 8A        	defw End_Snapshot_2
 268+ 8502 1E 8A        	defw End_Snapshot_3
 269+ 8504 14 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 18 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1C 8A        	defw End_Snapshot_disparos_2
 272+ 850A 20 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 AC 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 AC 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  22  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BC 88        	defw Nivel_2
   7+ 88AD C9 88        	defw Nivel_3
   8+ 88AF D9 88        	defw Nivel_4
   9+ 88B1 EB 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 04           Nivel_1 db 4	                                ; Nº de entidades.
  19+ 88B8 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C1 01 02
  22+ 88C3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C7 01 02
  23+ 88C9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CE 01
  25+ 88CF 03 01 01 01  	db 3,1,1,1,1
  25+ 88D3 01
  26+ 88D4 03 01 01 01  	db 3,1,1,1,1
  26+ 88D8 01
  27+ 88D9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DE 01
  29+ 88DF 04 01 01 01  	db 4,1,1,1,1
  29+ 88E3 01
  30+ 88E4 04 01 01 01  	db 4,1,1,1,1
  30+ 88E8 01
  31+ 88E9 02 03        	db 2,3
  32+ 88EB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88F0 01
  34+ 88F1 05 01 01 01  	db 5,1,1,1,1
  34+ 88F5 01
  35+ 88F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88FA 01
  36+ 88FB 05 01 01 01  	db 5,1,1,1,1
  36+ 88FF 01
  37+ 8900
  38+ 8900              ;---------------------------------------------------------------------------------------------------------------
  39+ 8900              ;
  40+ 8900              ;   21/5/23
  41+ 8900              ;
  42+ 8900              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8900              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8900              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8900              ;	_en la caja DRAW correspondiente.
  46+ 8900              ;
  47+ 8900              ;	MODIFICA: HL,DE y A.
  48+ 8900              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8900
  50+ 8900              Inicializa_Punteros_de_nivel
  51+ 8900
  52+ 8900 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8903 22 4D 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8906 CD 88 8D     	call Extrae_address
  55+ 8909 7E           	ld a,(hl)
  56+ 890A 32 02 8A     	ld (Numero_de_entidades),a
  57+ 890D 23           	inc hl
  58+ 890E 22 4F 8A     	ld (Datos_de_nivel),hl
  59+ 8911 C9           	ret
  60+ 8912
  61+ 8912              ;---------------------------------------------------------------------------------------------------------------
  62+ 8912              ;
  63+ 8912              ;   13/5/23
  64+ 8912              ;
  65+ 8912              ;	Destruye A,BC,HL,DE
  66+ 8912
  67+ 8912              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8912              ;	_del juego.
  69+ 8912
  70+ 8912              Prepara_cajas
  71+ 8912
  72+ 8912              ; Preparamos los punteros de las cajas.
  73+ 8912
  74+ 8912 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8915 CD 88 8D     	call Extrae_address
  76+ 8918 CD 55 89     	call Avanza_caja
  77+ 891B
  78+ 891B CD 99 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891E
  80+ 891E 2A 4F 8A     	ld hl,(Datos_de_nivel)
  81+ 8921
  82+ 8921              ; HL está en los datos del nivel correspondiente.
  83+ 8921              ; B actuará como contador de cajas.
  84+ 8921
  85+ 8921 C5           1 push bc
  86+ 8922
  87+ 8922 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8923 CD 46 89     	call PreparaBC
  89+ 8926
  90+ 8926 21 85 88     	ld hl,Indice_de_entidades
  91+ 8929 CD 4E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892C 22 08 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892F
  94+ 892F CD 5F 89     	call Datos_de_entidad_a_caja
  95+ 8932
  96+ 8932 2A 00 8A     	ld hl,(Indice_restore_caja)
  97+ 8935 CD 88 8D     	call Extrae_address
  98+ 8938 CD 55 89     	call Avanza_caja
  99+ 893B
 100+ 893B 2A 4F 8A     	ld hl,(Datos_de_nivel)
 101+ 893E 23           	inc hl
 102+ 893F 22 4F 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8942
 104+ 8942 C1           	pop bc
 105+ 8943 10 DC        	djnz 1B
 106+ 8945 C9           	ret
 107+ 8946
 108+ 8946 CB 27        PreparaBC sla a
 109+ 8948 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 894A 4F           	ld c,a
 111+ 894B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894D C9           	ret
 113+ 894E
 114+ 894E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894F ED 4A        	adc hl,bc
 116+ 8951 CD 88 8D     	call Extrae_address
 117+ 8954 C9           	ret
 118+ 8955
 119+ 8955 22 FC 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8958 13           	inc de
 121+ 8959 13           	inc de
 122+ 895A EB           	ex de,hl
 123+ 895B 22 00 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895E C9           	ret
 125+ 895F
 126+ 895F              Datos_de_entidad_a_caja
 127+ 895F
 128+ 895F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895F
 130+ 895F
 131+ 895F ED 5B FC 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8963
 133+ 8963 01 02 00     	ld bc,2
 134+ 8966 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8968
 136+ 8968 01 07 00     	ld bc,7
 137+ 896B CD 93 89     	call Situa_DE
 138+ 896E
 139+ 896E 01 05 00     	ld bc,5
 140+ 8971 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8973
 142+ 8973 01 04 00     	ld bc,4
 143+ 8976 CD 93 89     	call Situa_DE
 144+ 8979
 145+ 8979 01 07 00     	ld bc,7
 146+ 897C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897E
 148+ 897E 01 18 00     	ld bc,24
 149+ 8981 CD 93 89     	call Situa_DE
 150+ 8984
 151+ 8984 01 02 00     	ld bc,2
 152+ 8987 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8989
 154+ 8989              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8989              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8989
 157+ 8989 01 0F 00     	ld bc,15									; *****
 158+ 898C CD 93 89     	call Situa_DE
 159+ 898F
 160+ 898F 3E 03        	ld a,3
 161+ 8991 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8992
 163+ 8992 C9           	ret
 164+ 8993
 165+ 8993 EB           Situa_DE ex de,hl
 166+ 8994 A7           	and a
 167+ 8995 ED 4A        	adc hl,bc
 168+ 8997 EB           	ex de,hl
 169+ 8998 C9           	ret
 170+ 8999
 171+ 8999              ;---------------------------------------------------------------------------------------------------------------
 172+ 8999              ;
 173+ 8999              ;	21/5/23
 174+ 8999              ;
 175+ 8999              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8999              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8999              ;
 178+ 8999              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8999              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8999              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8999              ;
 182+ 8999              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8999              ;	MODIFICA: A y B.
 184+ 8999              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8999
 186+ 8999              Admin_num_entidades
 187+ 8999
 188+ 8999              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8999
 190+ 8999 3A 02 8A     	ld a,(Numero_de_entidades)
 191+ 899C A7           	and a
 192+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899D              ;	jr z,$
 194+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899D
 196+ 899D 20 03        	jr nz,3F
 197+ 899F
 198+ 899F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899F
 200+ 899F CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A2
 202+ 89A2 3A 02 8A     3 ld a,(Numero_de_entidades)
 203+ 89A5 FE 0A        	cp 10
 204+ 89A7 38 08        	jr c,1F
 205+ 89A9
 206+ 89A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 89A9              ; Actualizamos variables.
 208+ 89A9
 209+ 89A9 3E 0A        	ld a,10
 210+ 89AB 32 03 8A     	ld (Numero_parcial_de_entidades),a
 211+ 89AE 47           	ld b,a
 212+ 89AF 18 04        	jr 2F
 213+ 89B1
 214+ 89B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 89B1              ; (Numero_de_entidades)="0".
 216+ 89B1
 217+ 89B1 32 03 8A     1 ld (Numero_parcial_de_entidades),a
 218+ 89B4 47           	ld b,a
 219+ 89B5 C9           2 ret
# file closed: Niveles.asm
  23  89B6
  24  89B6              ; ******************************************************************************************************************************************************************************************
  25  89B6              ; Constantes.
  26  89B6              ; ******************************************************************************************************************************************************************************************
  27  89B6              ;
  28  89B6              ; 25/05/23
  29  89B6              ;
  30  89B6              ; Constantes generales.
  31  89B6              ;
  32  89B6
  33  89B6              Sprite_vacio equ $f000
  34  89B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  89B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  89B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  89B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  89B6
  39  89B6              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  89B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  89B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  89B6              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  89B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  89B6              ;                               				        ; De momento situamos este almacén en $7060.
  45  89B6              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  89B6              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  89B6              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  89B6              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  89B6              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  89B6              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  51  89B6
  52  89B6              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  89B6
  54  89B6              ; ******************************************************************************************************************************************************************************************
  55  89B6              ; Variables.
  56  89B6              ; ******************************************************************************************************************************************************************************************
  57  89B6              ;
  58  89B6              ; 28/07/23
  59  89B6              ;
  60  89B6              ; Variables de DRAW. (Motor principal).
  61  89B6              ;
  62  89B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  89B6
  64  89B6 00           Filas db 0												; Filas. [DRAW]
  65  89B7 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  89B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  89BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  89BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  89BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  89BE
  71  89BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  89BE
  73  89BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  89BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  89BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  89BF 00           Attr db 0												; Atributos de la entidad:
  77  89C0
  78  89C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  89C0              ;
  80  89C0              ;	COLORES: 0 ..... NEGRO
  81  89C0              ;    		 1 ..... AZUL
  82  89C0              ; 			 2 ..... ROJO
  83  89C0              ;			 3 ..... MAGENTA
  84  89C0              ; 			 4 ..... VERDE
  85  89C0              ; 			 5 ..... CIAN
  86  89C0              ;			 6 ..... AMARILLO
  87  89C0              ; 			 7 ..... BLANCO
  88  89C0
  89  89C0 00 00        Indice_Sprite_der defw 0
  90  89C2 00 00        Indice_Sprite_izq defw 0
  91  89C4 00 00        Puntero_DESPLZ_der defw 0
  92  89C6 00 00        Puntero_DESPLZ_izq defw 0
  93  89C8
  94  89C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  89CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  89CB
  97  89CB              ; Variables de objeto. (Características).
  98  89CB
  99  89CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  89CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  89CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  89CF
 104  89CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  89D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  89D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  89D0
 108  89D0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 109  89D2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89D4 00 00        	defw 0
 111  89D6 00 00 00 00  	db 0,0,0,0
 112  89DA
 113  89DA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 114  89DC 00 00        	defw 0
 115  89DE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 116  89E0 00 00 00 00  	db 0,0,0,0
 117  89E4
 118  89E4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 119  89E4
 120  89E4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 121  89E5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 122  89E5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 123  89E5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 124  89E5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 125  89E5              ;
 126  89E5              ; 														DESCRIPCIÖN:
 127  89E5              ;
 128  89E5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 129  89E5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 130  89E5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 131  89E5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 132  89E5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 133  89E5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 134  89E5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 135  89E5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 136  89E5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 137  89E5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 138  89E5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 139  89E5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 140  89E5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 141  89E5              ;
 142  89E5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 143  89E5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 144  89E5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 145  89E5
 146  89E5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 147  89E6
 148  89E6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 149  89E6
 150  89E6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 151  89E7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 152  89E9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 153  89EB 00 00        Puntero_indice_mov_bucle defw 0							;
 154  89ED              ;
 155  89ED              ;
 156  89ED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 157  89EE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 158  89EE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 159  89EE 00           Incrementa_puntero_backup db 0
 160  89EF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 161  89F0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 162  89F0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 163  89F1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 164  89F2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 165  89F3              ;
 166  89F3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 167  89F3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 168  89F3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 169  89F3              ;
 170  89F3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 171  89F3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 172  89F3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 173  89F3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 174  89F3              ;
 175  89F3              ;														;	"$ff" ..... Bucle infinito de repetición.
 176  89F3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 177  89F3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 178  89F3
 179  89F3
 180  89F3              ; Variables de funcionamiento. [DRAW].
 181  89F3
 182  89F3 00           Columnas db 0
 183  89F4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 184  89F6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  89F7
 187  89F7              ; variables de control general.
 188  89F7
 189  89F7 00           Ctrl_2 db 0
 190  89F8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 191  89F8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 192  89F8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 193  89F8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 194  89F8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 195  89F8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 196  89F8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 197  89F8              ;
 198  89F8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 199  89F8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 200  89F8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 201  89F8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 202  89F8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 203  89F8
 204  89F8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 205  89F9
 206  89F9              ;! 67 Bytes por entidad.
 207  89F9
 208  89F9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 209  89F9              ;					         		---------;      ;---------
 210  89F9
 211  89F9
 212  89F9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 213  89F9
 214  89F9 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 215  89FA
 216  89FA              ;														DESCRIPCIÓN:
 217  89FA              ;
 218  89FA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 219  89FA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 220  89FA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 221  89FA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 222  89FA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 223  89FA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 224  89FA
 225  89FA              ;														BIT 3, Recarga de nueva oleada.
 226  89FA              ;														BIT 4, Recarga de nueva oleada.
 227  89FA              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 228  89FA
 229  89FA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 230  89FC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 231  89FC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 232  89FC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 233  89FC
 234  89FC
 235  89FC
 236  89FC              ; Gestión de ENTIDADES y CAJAS.
 237  89FC
 238  89FC 00 00        Puntero_store_caja defw 0
 239  89FE 00 00        Puntero_restore_caja defw 0
 240  8A00 00 00        Indice_restore_caja defw 0
 241  8A02 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 242  8A03 00           Numero_parcial_de_entidades db 0
 243  8A04 00           Entidades_en_curso db 0									; ..... ..... .....
 244  8A05 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 245  8A06              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 246  8A06              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 247  8A06              ;														; _ (Numero_de_malotes)="0".
 248  8A06 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 249  8A08 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 250  8A0A              ;														; _ puntero (Indice_entidades).
 251  8A0A
 252  8A0A
 253  8A0A              ;---------------------------------------------------------------------------------------------------------------
 254  8A0A              ;
 255  8A0A              ;	9/8/23
 256  8A0A              ;
 257  8A0A              ;	Álbumes.
 258  8A0A
 259  8A0A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 260  8A0C              ;														; _variable para almacenar lo posición del puntero_
 261  8A0C              ; 														; _de pila, SP.
 262  8A0C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 263  8A0E              ;														; La utiliza la rutina [Extrae_foto_registros].
 264  8A0E 00 00        Stack_snapshot defw 0
 265  8A10 00 00        Stack_snapshot_disparos defw 0
 266  8A12
 267  8A12 00 00        End_Snapshot defw 0
 268  8A14              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 269  8A14 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 270  8A16              ;														; _el snapshot de los registros del siguiente disparo.
 271  8A16              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 272  8A16 00 00        End_Snapshot_1 defw 0
 273  8A18 00 00        End_Snapshot_disparos_1 defw 0
 274  8A1A 00 00        End_Snapshot_2 defw 0
 275  8A1C 00 00        End_Snapshot_disparos_2 defw 0
 276  8A1E 00 00        End_Snapshot_3 defw 0
 277  8A20 00 00        End_Snapshot_disparos_3 defw 0
 278  8A22
 279  8A22 00 00        Puntero_indice_album_de_fotos defw 0
 280  8A24 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 281  8A26
 282  8A26 00 00        Puntero_indice_End_Snapshot defw 0
 283  8A28 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 284  8A2A 00 00        Puntero_de_End_Snapshot defw 0
 285  8A2C 00 00        Puntero_de_End_Snapshot_disparos defw 0
 286  8A2E
 287  8A2E              ;---------------------------------------------------------------------------------------------------------------
 288  8A2E
 289  8A2E              ; Gestión de Disparos.
 290  8A2E
 291  8A2E 00           Numero_de_disparotes db 0
 292  8A2F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 293  8A31 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 294  8A33 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 295  8A34              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 296  8A34              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 297  8A34 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 298  8A36              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 299  8A36              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 300  8A36              ;														; _produzca colisión.
 301  8A36 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 302  8A38              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 303  8A38 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 304  8A3B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 305  8A3B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 306  8A3E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 307  8A3E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 308  8A40 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 309  8A41
 310  8A41              ;---------------------------------------------------------------------------------------------------------------
 311  8A41
 312  8A41              ; Relojes y temporizaciones.
 313  8A41
 314  8A41 00           Contador_de_frames db 0
 315  8A42 00           Contador_de_frames_2 db 0
 316  8A43
 317  8A43 04           Clock_explosion db 4
 318  8A44 1E           Clock_Entidades_en_curso db 30
 319  8A45 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 320  8A46              ;														; Repite la oleada de entidades.
 321  8A46 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 322  8A47 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 323  8A48 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 324  8A49
 325  8A49 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 326  8A4A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 327  8A4B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 328  8A4C
 329  8A4C              ;---------------------------------------------------------------------------------------------------------------
 330  8A4C
 331  8A4C              ; Gestión de NIVELES.
 332  8A4C
 333  8A4C 00           Nivel db 0												; Nivel actual del juego.
 334  8A4D 00 00        Puntero_indice_NIVELES defw 0
 335  8A4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 336  8A51              ; 														; _ que definen el NIVEL.
 337  8A51              ; Y todo comienza aquí .....
 338  8A51              ;
 339  8A51              ; Rutina principal *************************************************************************************************************************************************************************
 340  8A51              ;
 341  8A51              ;	14/11/22
 342  8A51
 343  8A51              START
 344  8A51
 345  8A51 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 346  8A54 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 347  8A56 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 348  8A58 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 349  8A5A F3           	DI
 350  8A5B
 351  8A5B 3E 07        	ld a,%00000111
 352  8A5D CD E8 99     	call Cls
 353  8A60
 354  8A60 CD 61 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 355  8A63
 356  8A63              ; INICIALIZACIÓN.
 357  8A63
 358  8A63 CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 359  8A66
 360  8A66 CD 12 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 361  8A69
 362  8A69 CD D4 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 363  8A6C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 364  8A6C CD EA 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 365  8A6F              ;													     ; _ malotes antes de guardar ninguna foto.
 366  8A6F              ; ----------
 367  8A6F
 368  8A6F CD 11 8E     	call Restore_entidad
 369  8A72
 370  8A72 21 03 8A     	ld hl,Numero_parcial_de_entidades
 371  8A75 46           	ld b,(hl)
 372  8A76 04           	inc b
 373  8A77 05           	dec b
 374  8A78 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 375  8A7A
 376  8A7A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 377  8A7A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 378  8A7A              ;	Pintamos el resto de entidades:
 379  8A7A
 380  8A7A              ;	INICIA ENTIDADES !!!!!
 381  8A7A
 382  8A7A C5           1 push bc  												; Guardo el contador de entidades.
 383  8A7B
 384  8A7B CD 7B 8C     	call Inicia_entidad
 385  8A7E
 386  8A7E C1           	pop bc
 387  8A7F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 388  8A81
 389  8A81              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 390  8A81              ; (Esto se dá cuando se inicia una nueva oleada).
 391  8A81
 392  8A81 3A F9 89     	ld a,(Ctrl_1)
 393  8A84 CB 5F        	bit 3,a
 394  8A86 20 18        	jr nz,5F											; Loop
 395  8A88
 396  8A88              ; 	INICIA AMADEUS !!!!!
 397  8A88
 398  8A88 CD 38 8E     3 call Restore_Amadeus
 399  8A8B CD 8E 8D     	call Inicia_Puntero_objeto
 400  8A8E CD 1E 94     	call Draw
 401  8A91 CD A0 7F     	call Guarda_foto_registros
 402  8A94 11 A4 85     	ld de,Amadeus_db
 403  8A97 CD 4A 8E     	call Store_Amadeus
 404  8A9A
 405  8A9A              ; 	INICIA DISPAROS !!!!!
 406  8A9A
 407  8A9A CD 4A 8D     	call Inicia_Puntero_Disparo_Entidades
 408  8A9D CD 51 8D     	call Inicia_Puntero_Disparo_Amadeus
 409  8AA0
 410  8AA0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 411  8AA0
 412  8AA0 CD D4 8C     5 call Inicia_punteros_de_cajas
 413  8AA3 CD 11 8E     	call Restore_entidad
 414  8AA6
 415  8AA6 3A F9 89     	ld a,(Ctrl_1)
 416  8AA9 CB 5F        	bit 3,a
 417  8AAB 28 0A        	jr z,6F
 418  8AAD
 419  8AAD              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 420  8AAD
 421  8AAD 21 F9 89     	ld hl,Ctrl_1
 422  8AB0 CB 9E        	res 3,(hl)
 423  8AB2 CD 58 8D     	call Calcula_numero_de_malotes
 424  8AB5 18 0A        	jr Main
 425  8AB7
 426  8AB7              ; ----------
 427  8AB7
 428  8AB7 3A 03 8A     6 ld a,(Numero_parcial_de_entidades)
 429  8ABA 3C           	inc a
 430  8ABB 32 05 8A     	ld (Numero_de_malotes),a
 431  8ABE
 432  8ABE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 433  8ABE              ; _ tenemos calculado (Numero_de_malotes).
 434  8ABE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 435  8ABE              ; _ para situarnos en el siguiente album.
 436  8ABE
 437  8ABE CD 1B 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 438  8AC1
 439  8AC1              ; ------------------------------------
 440  8AC1
 441  8AC1              Main
 442  8AC1
 443  8AC1              ;	ei ; Interrupciones habilitadas.
 444  8AC1
 445  8AC1              ; -----------------------------------------------------------------------
 446  8AC1              ;
 447  8AC1              ;	3/8/23
 448  8AC1
 449  8AC1 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 450  8AC4 47           	ld b,a
 451  8AC5 3A 41 8A     	ld a,(Contador_de_frames)
 452  8AC8 B8           	cp b
 453  8AC9 20 18        	jr nz,13F
 454  8ACB
 455  8ACB 3A 03 8A     	ld a,(Numero_parcial_de_entidades)
 456  8ACE 47           	ld b,a
 457  8ACF 3A 04 8A     	ld a,(Entidades_en_curso)
 458  8AD2 B8           	cp b
 459  8AD3 28 0E        	jr z,13F
 460  8AD5 30 0C        	jr nc,13F
 461  8AD7
 462  8AD7 3C           	inc a
 463  8AD8 32 04 8A     	ld (Entidades_en_curso),a
 464  8ADB
 465  8ADB 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 466  8ADE
 467  8ADE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 468  8ADE              ;! _ IMPREDECIBLE !!!!
 469  8ADE
 470  8ADE C6 64        	add 100
 471  8AE0 32 44 8A     	ld (Clock_Entidades_en_curso),a
 472  8AE3
 473  8AE3              ; Habilita disparos.
 474  8AE3
 475  8AE3 21 46 8A     13 ld hl,Disparo_Amadeus
 476  8AE6 11 48 8A     	ld de,CLOCK_repone_disparo_Amadeus
 477  8AE9 CD AD A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 478  8AEC
 479  8AEC 21 49 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 480  8AEF 11 4B 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 481  8AF2 CD AD A0     	call Habilita_disparos
 482  8AF5
 483  8AF5              ; COLISIONES.
 484  8AF5
 485  8AF5 CD 00 93     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 486  8AF8
 487  8AF8              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 488  8AF8              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 489  8AF8              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 490  8AF8
 491  8AF8 AF           	xor a
 492  8AF9 32 33 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 493  8AFC
 494  8AFC CD D4 8C     	call Inicia_punteros_de_cajas
 495  8AFF CD 11 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 496  8B02              ; 														; _ en DRAW.
 497  8B02 3A B6 89     	ld a,(Filas)
 498  8B05 A7           	and a
 499  8B06 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 500  8B08 CD 23 8E     	call Incrementa_punteros_de_cajas
 501  8B0B 18 F2        	jr 12B
 502  8B0D
 503  8B0D              ; ---------------------------------------------------------------------------------------
 504  8B0D
 505  8B0D 3A 03 8A     10 ld a,(Numero_parcial_de_entidades)
 506  8B10 47               ld b,a
 507  8B11 A7           	and a
 508  8B12 20 14        	jr nz,11F
 509  8B14
 510  8B14 21 F9 89     	ld hl,Ctrl_1
 511  8B17 CB 66        	bit 4,(hl)
 512  8B19 C2 A5 8B     	jp nz,16F
 513  8B1C
 514  8B1C 21 F9 89     	ld hl,Ctrl_1
 515  8B1F CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 516  8B21
 517  8B21 3A 41 8A     	ld a,(Contador_de_frames)
 518  8B24 3C           	inc a
 519  8B25 32 45 8A     	ld (Activa_recarga_cajas),a
 520  8B28
 521  8B28              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 522  8B28
 523  8B28 3A 04 8A     11 ld a,(Entidades_en_curso)
 524  8B2B A7           	and a
 525  8B2C CA A5 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 526  8B2F 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 527  8B30
 528  8B30              ; Código que ejecutamos con cada entidad:
 529  8B30              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 530  8B30
 531  8B30 C5           15 push bc 												; Nº de entidades en curso.
 532  8B31
 533  8B31              ; Impacto ???
 534  8B31
 535  8B31 3A CF 89     	ld a,(Impacto)
 536  8B34 A7           	and a
 537  8B35 28 2D        	jr z,8F
 538  8B37
 539  8B37              ; Hay Impacto en esta entidad.
 540  8B37
 541  8B37 21 43 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 542  8B3A 35           	dec (hl)
 543  8B3B 20 62        	jr nz,17F
 544  8B3D
 545  8B3D              ;! Velocidad de la animación de la explosión.
 546  8B3D
 547  8B3D 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 548  8B3F              ;														; _,(velocidad de la explosión).
 549  8B3F CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 550  8B42
 551  8B42              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 552  8B42
 553  8B42 3A F7 89     	ld a,(Ctrl_2)
 554  8B45 CB 4F        	bit 1,a
 555  8B47 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 556  8B49
 557  8B49              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 558  8B49
 559  8B49 3A BE 89     	ld a,(CTRL_DESPLZ)
 560  8B4C A7           	and a
 561  8B4D 20 08        	jr nz,18F
 562  8B4F
 563  8B4F 21 84 84     	ld hl,Indice_Explosion_2x2-2
 564  8B52 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 565  8B55 18 06        	jr 19F
 566  8B57
 567  8B57 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 568  8B5A 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 569  8B5D
 570  8B5D 21 F7 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 571  8B60 CB CE        	set 1,(hl)
 572  8B62 18 22        	jr 7F
 573  8B64
 574  8B64              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 575  8B64              ; _con las coordenadas de la entidad almacenada en DRAW.
 576  8B64
 577  8B64 3A F9 89     8 ld a,(Ctrl_1)
 578  8B67 CB 57        	bit 2,a
 579  8B69 28 1B        	jr z,7F
 580  8B6B
 581  8B6B 2A 36 8A     	ld hl,(Coordenadas_disparo_certero)
 582  8B6E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 583  8B6F              ;														; E contiene la coordenada_X del disparo.
 584  8B6F 2A BC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 585  8B72              ;														; H FILA, (Coordenada_y de la entidad).
 586  8B72 A7           	and a
 587  8B73 ED 52        	sbc hl,de
 588  8B75
 589  8B75 CD 37 93     	call Determina_resultado_comparativa
 590  8B78
 591  8B78 78           	ld a,b
 592  8B79 A7           	and a
 593  8B7A 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 594  8B7C
 595  8B7C              ; ----- ----- -----
 596  8B7C
 597  8B7C 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 598  8B7E 32 CF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 599  8B81
 600  8B81 21 F9 89     	ld hl,Ctrl_1
 601  8B84 CB 96        	res 2,(hl)
 602  8B86
 603  8B86 CD FD 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 604  8B89
 605  8B89 3A E4 89     	ld a,(Ctrl_0)
 606  8B8C CB 67        	bit 4,a
 607  8B8E 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 608  8B90
 609  8B90              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 610  8B90              ; [[[
 611  8B90 CD AC 8E     	call Detecta_disparo_entidad
 612  8B93              ; ]]]
 613  8B93 CD 9B 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 614  8B96
 615  8B96 21 E4 89     	ld hl,Ctrl_0
 616  8B99 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 617  8B9B AF           	xor a
 618  8B9C 32 E5 89     	ld (Obj_dibujado),a
 619  8B9F
 620  8B9F CD D6 8D     17 call Store_Restore_cajas
 621  8BA2
 622  8BA2 C1           	pop bc
 623  8BA3 10 8B        	djnz 15B
 624  8BA5
 625  8BA5              ; ------------------------------------
 626  8BA5
 627  8BA5              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 628  8BA5              ; Hemos gestionado todas las unidades.
 629  8BA5              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 630  8BA5
 631  8BA5              ;	ld hl,Ctrl_1
 632  8BA5              ;	res 2,(hl)
 633  8BA5
 634  8BA5              ; ------------------------------------
 635  8BA5
 636  8BA5              ; Tras la gestión de las entidades, ... AMADEUS.
 637  8BA5
 638  8BA5 CD 38 8E     16 call Restore_Amadeus
 639  8BA8
 640  8BA8 3A CF 89     	ld a,(Impacto)
 641  8BAB A7           	and a
 642  8BAC 20 FE        	jr nz,$
 643  8BAE
 644  8BAE CD 5C 8C     	call Mov_Amadeus
 645  8BB1
 646  8BB1 3A E4 89     	ld a,(Ctrl_0)
 647  8BB4 CB 67        	bit 4,a
 648  8BB6 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 649  8BB8
 650  8BB8 CD 9B 8C     	call Guarda_foto_entidad_a_pintar
 651  8BBB
 652  8BBB
 653  8BBB
 654  8BBB 21 E4 89     14 ld hl,Ctrl_0
 655  8BBE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 656  8BC0 AF           	xor a
 657  8BC1 32 E5 89     	ld (Obj_dibujado),a
 658  8BC4
 659  8BC4 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 660  8BC7 CD 4A 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 661  8BCA
 662  8BCA              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 663  8BCA
 664  8BCA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 665  8BCA
 666  8BCA              ;	call Calcula_numero_de_disparotes
 667  8BCA
 668  8BCA
 669  8BCA CD 1B 8D     9 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 670  8BCD              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 671  8BCD              ;														; _ interrupción.
 672  8BCD 3E 04        	ld a,4
 673  8BCF D3 FE        	out ($fe),a
 674  8BD1
 675  8BD1              ; ----------------------------------------
 676  8BD1
 677  8BD1 3A F9 89     	ld a,(Ctrl_1) 										; Existe Loop?
 678  8BD4 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 679  8BD6 CA C1 8A     	jp z,Main
 680  8BD9
 681  8BD9              ; -----
 682  8BD9              ;	(((
 683  8BD9
 684  8BD9 3A 41 8A     	ld a,(Contador_de_frames)
 685  8BDC 47           	ld b,a
 686  8BDD 3A 45 8A     	ld a,(Activa_recarga_cajas)
 687  8BE0 B8           	cp b
 688  8BE1 28 08        	jr z,20F
 689  8BE3
 690  8BE3 21 F9 89     	ld hl,Ctrl_1
 691  8BE6 CB E6        	set 4,(hl)
 692  8BE8 C3 C1 8A     	jp Main
 693  8BEB
 694  8BEB 21 F9 89     20 ld hl,Ctrl_1
 695  8BEE CB A6        	res 4,(hl)
 696  8BF0 F3           	di
 697  8BF1
 698  8BF1 3A 41 8A     	ld a,(Contador_de_frames)
 699  8BF4
 700  8BF4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 701  8BF4              ;! _ IMPREDECIBLE !!!!
 702  8BF4
 703  8BF4 C6 0A        	add 10
 704  8BF6 32 44 8A     	ld (Clock_Entidades_en_curso),a
 705  8BF9
 706  8BF9 C3 66 8A     	jp 4B
 707  8BFC
 708  8BFC C9           	ret
 709  8BFD
 710  8BFD              ; --------------------------------------------------------------------------------------------------------------
 711  8BFD              ;
 712  8BFD              ;	27/05/23
 713  8BFD
 714  8BFD              Mov_obj
 715  8BFD
 716  8BFD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 717  8BFD
 718  8BFD 3A F7 89     	ld a,(Ctrl_2)
 719  8C00 CB 4F        	bit 1,a
 720  8C02 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 721  8C04
 722  8C04              ; Explosión:
 723  8C04
 724  8C04 3A F8 89     	ld a,(Frames_explosion)
 725  8C07 A7           	and a
 726  8C08 20 11        	jr nz,4F
 727  8C0A
 728  8C0A              ; Una alimaña menos!!!!!!!!!1
 729  8C0A
 730  8C0A CD 53 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 731  8C0D 21 03 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 732  8C10 35           	dec (hl)
 733  8C11 21 04 8A     	ld hl,Entidades_en_curso
 734  8C14 35           	dec (hl)
 735  8C15 21 02 8A     	ld hl,Numero_de_entidades
 736  8C18 35           	dec (hl)
 737  8C19 18 40        	jr 3F
 738  8C1B
 739  8C1B              ; -----
 740  8C1B
 741  8C1B              ;	`Movemos´ la explosión.
 742  8C1B
 743  8C1B 2A C4 89     4 ld hl,(Puntero_DESPLZ_der)
 744  8C1E 23           	inc hl
 745  8C1F 23           	inc hl
 746  8C20 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 747  8C23 CD 88 8D     	call Extrae_address
 748  8C26 22 BA 89     	ld (Puntero_objeto),hl
 749  8C29
 750  8C29 21 F8 89     	ld hl,Frames_explosion
 751  8C2C 35           	dec (hl)
 752  8C2D
 753  8C2D CD 8B 8C     	call Guarda_foto_entidad_a_borrar
 754  8C30 18 29        	jr 3F
 755  8C32
 756  8C32 AF           2 xor a
 757  8C33 32 E5 89     	ld (Obj_dibujado),a
 758  8C36 32 E4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 759  8C39              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 760  8C39              ; 														; _de la entidad.
 761  8C39 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 762  8C3C              ;														; Obj_dibujado="0".
 763  8C3C              ; Movemos Entidades malignas.
 764  8C3C
 765  8C3C              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 766  8C3C              ;	and a 												; _a movernos. (Limitador_de_entidades).
 767  8C3C              ;	ret z
 768  8C3C
 769  8C3C CD 48 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 770  8C3F
 771  8C3F 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 772  8C42 CB 67        	bit 4,a
 773  8C44 C8           	ret z
 774  8C45
 775  8C45              ; Ha habido desplazamiento de la entidad maligna.
 776  8C45              ; Ha llegado a zona de AMADEUS ???
 777  8C45
 778  8C45 3A BD 89     	ld a,(Coordenada_y)
 779  8C48 FE 14        	cp $14
 780  8C4A D4 C5 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 781  8C4D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 782  8C4D              ; ---------
 783  8C4D
 784  8C4D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 785  8C4F 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 786  8C52 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 787  8C55 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 788  8C58 CD 8B 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 789  8C5B C9           3 ret													; _de la misma.
 790  8C5C
 791  8C5C              ; --------------------------------------------------------------------------------------------------------------
 792  8C5C              ;
 793  8C5C              ;	29/1/23
 794  8C5C
 795  8C5C              Mov_Amadeus
 796  8C5C
 797  8C5C AF           	xor a
 798  8C5D 32 E5 89     	ld (Obj_dibujado),a
 799  8C60 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 800  8C63              ;														; Obj_dibujado="0".
 801  8C63              ; Movemos Amadeus.
 802  8C63
 803  8C63 CD 75 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 804  8C66 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 805  8C69 CB 67        	bit 4,a
 806  8C6B C8           	ret z
 807  8C6C
 808  8C6C              ; ---------
 809  8C6C
 810  8C6C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 811  8C6E 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 812  8C71 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 813  8C74 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 814  8C77 CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 815  8C7A C9           	ret													; _de la nave.
 816  8C7B
 817  8C7B              ; -----------------------------------------------------------------------------------
 818  8C7B
 819  8C7B CD 8E 8D     Inicia_entidad	call Inicia_Puntero_objeto
 820  8C7E CD FC 99     	call Recompone_posicion_inicio
 821  8C81 CD 1E 94     	call Draw
 822  8C84 CD A0 7F     	call Guarda_foto_registros
 823  8C87 CD D6 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 824  8C8A C9           	ret
 825  8C8B
 826  8C8B              ; --------------------------------------------------------------------------------------------------------------
 827  8C8B              ;
 828  8C8B              ;	31/01/23
 829  8C8B              ;
 830  8C8B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 831  8C8B
 832  8C8B              Guarda_foto_entidad_a_borrar
 833  8C8B
 834  8C8B CD 02 97     	call Prepara_draw
 835  8C8E CD 32 96     	call calcula_CColumnass
 836  8C91 CD 69 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 837  8C94 CD C8 96     	call Define_rutina_de_impresion
 838  8C97 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 839  8C9A C9           	ret
 840  8C9B
 841  8C9B              ; --------------------------------------------------------------------------------------------------------------
 842  8C9B              ;
 843  8C9B              ;	31/01/23
 844  8C9B              ;
 845  8C9B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 846  8C9B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 847  8C9B
 848  8C9B              Guarda_foto_entidad_a_pintar
 849  8C9B
 850  8C9B CD C8 8C     	call Repone_pintar
 851  8C9E CD 1E 94     	call Draw
 852  8CA1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 853  8CA4 C9           	ret
 854  8CA5
 855  8CA5              ; --------------------------------------------------------------------------------------------------------------
 856  8CA5              ;
 857  8CA5              ;
 858  8CA5
 859  8CA5 21 B6 89     Prepara_var_pintado_borrado	ld hl,Filas
 860  8CA8 3A E5 89     	ld a,(Obj_dibujado)
 861  8CAB A7           	and a
 862  8CAC 28 05        	jr z,1F
 863  8CAE 11 DA 89     	ld de,Variables_de_pintado
 864  8CB1 18 03        	jr 2F
 865  8CB3 11 D0 89     1 ld de,Variables_de_borrado
 866  8CB6 01 08 00     2 ld bc,8
 867  8CB9 ED B0        	ldir
 868  8CBB C9           	ret
 869  8CBC
 870  8CBC              ; --------------------------------------------------------------------------------------------------------------
 871  8CBC
 872  8CBC 21 D0 89     Repone_borrar ld hl,Variables_de_borrado
 873  8CBF 11 B6 89     	ld de,Filas
 874  8CC2 01 08 00     	ld bc,8
 875  8CC5 ED B0        	ldir
 876  8CC7 C9           	ret
 877  8CC8
 878  8CC8 21 DA 89     Repone_pintar ld hl,Variables_de_pintado
 879  8CCB 11 B6 89     	ld de,Filas
 880  8CCE 01 08 00     	ld bc,8
 881  8CD1 ED B0        	ldir
 882  8CD3 C9           	ret
 883  8CD4
 884  8CD4              ; *************************************************************************************************************************************************************
 885  8CD4              ;
 886  8CD4              ; 8/1/23
 887  8CD4              ;
 888  8CD4              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 889  8CD4              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 890  8CD4              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 891  8CD4
 892  8CD4              ; Destruye HL y DE !!!!!
 893  8CD4
 894  8CD4              Inicia_punteros_de_cajas
 895  8CD4
 896  8CD4 21 8C 85     	ld hl,Indice_de_cajas
 897  8CD7 CD 88 8D         call Extrae_address
 898  8CDA 22 FC 89         ld (Puntero_store_caja),hl
 899  8CDD 21 8E 85     	ld hl,Indice_de_cajas+2
 900  8CE0 22 00 8A     	ld (Indice_restore_caja),hl
 901  8CE3 CD 88 8D     	call Extrae_address
 902  8CE6 22 FE 89     	ld (Puntero_restore_caja),hl
 903  8CE9 C9               ret
 904  8CEA
 905  8CEA              ; ---------------------------------------------------------------
 906  8CEA              ;
 907  8CEA              ;	9/8/23
 908  8CEA              ;
 909  8CEA              ;	Inicialización y gestión de álbumes de fotos y cajas.
 910  8CEA
 911  8CEA              Inicia_punteros_de_albumes_y_malotes
 912  8CEA
 913  8CEA 21 EC 84     	ld hl,Indice_album_de_fotos
 914  8CED 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 915  8CF0 CD 88 8D     	call Extrae_address
 916  8CF3 22 0E 8A     	ld (Stack_snapshot),hl
 917  8CF6
 918  8CF6 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 919  8CF9 22 24 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 920  8CFC CD 88 8D     	call Extrae_address
 921  8CFF 22 10 8A     	ld (Stack_snapshot_disparos),hl
 922  8D02
 923  8D02 21 FC 84     	ld hl,Indice_End_Snapshot
 924  8D05 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 925  8D08 CD 88 8D     	call Extrae_address
 926  8D0B 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 927  8D0E
 928  8D0E 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 929  8D11 22 28 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 930  8D14 CD 88 8D     	call Extrae_address
 931  8D17 22 2C 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 932  8D1A
 933  8D1A C9           	ret
 934  8D1B
 935  8D1B              ;	12/8/23
 936  8D1B
 937  8D1B              Avanza_puntero_de_album_de_fotos_y_malotes
 938  8D1B
 939  8D1B              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 940  8D1B
 941  8D1B              ; Estamos en el último álbum del índice???.
 942  8D1B
 943  8D1B 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
 944  8D1E 01 F2 84     	ld bc,Indice_album_de_fotos+6
 945  8D21 A7           	and a
 946  8D22 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 947  8D24 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 948  8D26
 949  8D26 21 F9 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 950  8D29 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 951  8D2B 76           	halt
 952  8D2C C9           	ret
 953  8D2D
 954  8D2D 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 955  8D30 23           	inc hl
 956  8D31 23           	inc hl
 957  8D32 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 958  8D35 CD 88 8D     	call Extrae_address
 959  8D38 22 0E 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 960  8D3B
 961  8D3B 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
 962  8D3E 23           	inc hl
 963  8D3F 23           	inc hl
 964  8D40 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 965  8D43 CD 88 8D     	call Extrae_address
 966  8D46 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 967  8D49
 968  8D49 C9           	ret
 969  8D4A
 970  8D4A              ; *************************************************************************************************************************************************************
 971  8D4A              ;
 972  8D4A              ; 8/1/23
 973  8D4A              ;
 974  8D4A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 975  8D4A
 976  8D4A 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 977  8D4D 22 2F 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 978  8D50 C9           	ret
 979  8D51 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 980  8D54 22 31 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 981  8D57 C9           	ret
 982  8D58
 983  8D58              ; -------------------------------------------------------------------------------------------------------------
 984  8D58              ;
 985  8D58              ; 3/8/23
 986  8D58              ;
 987  8D58
 988  8D58              Calcula_numero_de_malotes
 989  8D58
 990  8D58 21 00 70     	ld hl,Album_de_fotos
 991  8D5B EB           	ex de,hl
 992  8D5C 2A 12 8A     	ld hl,(End_Snapshot)
 993  8D5F
 994  8D5F 06 00        	ld b,0
 995  8D61 7D           	ld a,l
 996  8D62 93           	sub e
 997  8D63 28 07        	jr z,1F
 998  8D65
 999  8D65              ; Nº de malotes no es "0".
1000  8D65
1001  8D65 D6 06        2 sub 6
1002  8D67 04           	inc b
1003  8D68 A7           	and a
1004  8D69 20 FA        	jr nz,2B
1005  8D6B 78           	ld a,b
1006  8D6C
1007  8D6C 32 05 8A     1 ld (Numero_de_malotes),a
1008  8D6F C9           	ret
1009  8D70
1010  8D70              ; -------------------------------------------------------------------------------------------------------------
1011  8D70              ;
1012  8D70              ; 28/2/23
1013  8D70              ;
1014  8D70
1015  8D70              Calcula_numero_de_disparotes
1016  8D70
1017  8D70 21 0D 72     	ld hl,Album_de_fotos_disparos
1018  8D73 EB           	ex de,hl
1019  8D74 2A 2C 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1020  8D77
1021  8D77 06 00        	ld b,0
1022  8D79 7D           	ld a,l
1023  8D7A 93           	sub e
1024  8D7B 28 07        	jr z,1F
1025  8D7D
1026  8D7D              ; Nº de malotes no es "0".
1027  8D7D
1028  8D7D D6 06        2 sub 6
1029  8D7F 04           	inc b
1030  8D80 A7           	and a
1031  8D81 20 FA        	jr nz,2B
1032  8D83 78           	ld a,b
1033  8D84
1034  8D84 32 2E 8A     1 ld (Numero_de_disparotes),a
1035  8D87 C9           	ret
1036  8D88
1037  8D88              ; *************************************************************************************************************************************************************
1038  8D88              ;
1039  8D88              ; 20/10/22
1040  8D88              ;
1041  8D88              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1042  8D88              ;
1043  8D88              ; Destruye el puntero y DE !!!!!
1044  8D88
1045  8D88 5E           Extrae_address ld e,(hl)
1046  8D89 23           	inc hl
1047  8D8A 56           	ld d,(hl)
1048  8D8B 2B           	dec hl
1049  8D8C EB           	ex de,hl
1050  8D8D C9           	ret
1051  8D8E
1052  8D8E              ; *************************************************************************************************************************************************************
1053  8D8E              ;
1054  8D8E              ;	7/2/23
1055  8D8E              ;
1056  8D8E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1057  8D8E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1058  8D8E              ;
1059  8D8E              ;   Destruye HL y BC !!!!!,
1060  8D8E              ;
1061  8D8E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1062  8D8E              ;					"0" ..... Izquierda.
1063  8D8E
1064  8D8E              Inicia_Puntero_objeto
1065  8D8E
1066  8D8E 3A CA 89     	ld a,(Cuad_objeto)
1067  8D91 E6 01        	and 1
1068  8D93 F5           	push af
1069  8D94 CC B2 8D     	call z,Inicia_puntero_objeto_izq
1070  8D97 F1           	pop af
1071  8D98 28 2B        	jr z,1F
1072  8D9A CD 9F 8D     	call Inicia_puntero_objeto_der
1073  8D9D 18 26        	jr 1F
1074  8D9F
1075  8D9F              ; Arrancamos desde la parte izquierda de la pantalla.
1076  8D9F              ; Iniciamos (Indice_Sprite_der).
1077  8D9F
1078  8D9F 2A C0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1079  8DA2 22 C4 89     	ld (Puntero_DESPLZ_der),hl
1080  8DA5 CD 88 8D     	call Extrae_address
1081  8DA8 22 BA 89     	ld (Puntero_objeto),hl
1082  8DAB
1083  8DAB 2A C2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1084  8DAE 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1085  8DB1 C9           	ret
1086  8DB2
1087  8DB2              ; Arrancamos desde la parte derecha de la pantalla.
1088  8DB2              ; Iniciamos (Indice_Sprite_izq).
1089  8DB2
1090  8DB2 2A C2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1091  8DB5 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1092  8DB8 CD 88 8D     	call Extrae_address
1093  8DBB 22 BA 89     	ld (Puntero_objeto),hl
1094  8DBE
1095  8DBE 2A C0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1096  8DC1 22 C4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1097  8DC4 C9           	ret
1098  8DC5
1099  8DC5              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1100  8DC5
1101  8DC5 21 40 83     1 ld hl,Amadeus
1102  8DC8 ED 4B BA 89  	ld bc,(Puntero_objeto)
1103  8DCC B7 ED 42     	sub hl,bc
1104  8DCF C0           	ret nz
1105  8DD0 21 E4 89     	ld hl,Ctrl_0
1106  8DD3 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1107  8DD5 C9           	ret 												; _de nuestra nave en los extremos.
1108  8DD6
1109  8DD6              ; *************************************************************************************************************************************************************
1110  8DD6              ;
1111  8DD6              ;	14/5/23
1112  8DD6              ;
1113  8DD6              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1114  8DD6              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1115  8DD6
1116  8DD6              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1117  8DD6              ;	_de la 2ª y 3ª entidad respectivamente.
1118  8DD6
1119  8DD6              Store_Restore_cajas
1120  8DD6
1121  8DD6 E5           	push hl
1122  8DD7 D5           	push de
1123  8DD8 C5            	push bc
1124  8DD9
1125  8DD9              ;	STORE !!!!!
1126  8DD9              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1127  8DD9
1128  8DD9 21 B6 89     	ld hl,Filas
1129  8DDC ED 5B FC 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1130  8DE0 01 43 00     	ld bc,67
1131  8DE3 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1132  8DE5
1133  8DE5              ; 	Entidad_sospechosa. 20/4/23
1134  8DE5
1135  8DE5 3A CF 89     	ld a,(Impacto)
1136  8DE8 A7           	and a
1137  8DE9 28 0C        	jr z,1F
1138  8DEB
1139  8DEB 2A FC 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1140  8DEE 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1141  8DF1 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1142  8DF2 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1143  8DF4 22 34 8A     	ld (Entidad_sospechosa_de_colision),hl
1144  8DF7
1145  8DF7              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1146  8DF7
1147  8DF7 2A FE 89     1 ld hl,(Puntero_restore_caja)
1148  8DFA 7E           	ld a,(hl)
1149  8DFB A7           	and a
1150  8DFC F5           	push af
1151  8DFD 28 08        	jr z,2F
1152  8DFF
1153  8DFF 11 B6 89     	ld de,Filas
1154  8E02 01 43 00     	ld bc,67
1155  8E05 ED B0        	ldir
1156  8E07
1157  8E07 CD 23 8E     2 call Incrementa_punteros_de_cajas
1158  8E0A F1           	pop af
1159  8E0B 28 EA        	jr z,1B
1160  8E0D
1161  8E0D C1           	pop bc
1162  8E0E D1           	pop de
1163  8E0F E1           	pop hl
1164  8E10
1165  8E10 C9           	ret
1166  8E11
1167  8E11              ; **************************************************************************************************
1168  8E11              ;
1169  8E11              ;	12/05/23
1170  8E11              ;
1171  8E11              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1172  8E11
1173  8E11 E5           Restore_entidad push hl
1174  8E12 D5           	push de
1175  8E13 C5            	push bc
1176  8E14
1177  8E14 2A FC 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1178  8E17 11 B6 89     	ld de,Filas
1179  8E1A 01 43 00     	ld bc,67
1180  8E1D ED B0        	ldir
1181  8E1F
1182  8E1F C1           	pop bc
1183  8E20 D1           	pop de
1184  8E21 E1           	pop hl
1185  8E22 C9           	ret
1186  8E23
1187  8E23
1188  8E23              ; **************************************************************************************************
1189  8E23              ;
1190  8E23              ;	08/05/23
1191  8E23              ;
1192  8E23              ;	Incrementamos los dos punteros de entidades. (+1).
1193  8E23
1194  8E23 2A FE 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1195  8E26 22 FC 89     	ld (Puntero_store_caja),hl
1196  8E29 2A 00 8A     	ld hl,(Indice_restore_caja)
1197  8E2C 23           	inc hl
1198  8E2D 23           	inc hl
1199  8E2E 22 00 8A     	ld (Indice_restore_caja),hl
1200  8E31 CD 88 8D         call Extrae_address
1201  8E34 22 FE 89         ld (Puntero_restore_caja),hl
1202  8E37 C9               ret
1203  8E38
1204  8E38              ; **************************************************************************************************
1205  8E38              ;
1206  8E38              ;	25/01/23
1207  8E38              ;
1208  8E38              ;	Restore_Amadeus
1209  8E38              ;
1210  8E38              ;	Cargamos en DRAW los parámetros de Amadeus.
1211  8E38              ;
1212  8E38
1213  8E38 E5           Restore_Amadeus	push hl
1214  8E39 D5           	push de
1215  8E3A C5            	push bc
1216  8E3B 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1217  8E3E 11 B6 89     	ld de,Filas
1218  8E41 01 43 00     	ld bc,67
1219  8E44 ED B0        	ldir
1220  8E46 C1           	pop bc
1221  8E47 D1           	pop de
1222  8E48 E1           	pop hl
1223  8E49 C9           	ret
1224  8E4A
1225  8E4A              ; *************************************************************************************************************************************************************
1226  8E4A              ;
1227  8E4A              ;	29/04/23
1228  8E4A              ;
1229  8E4A              ;	Store_Amadeus
1230  8E4A              ;
1231  8E4A              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1232  8E4A              ;
1233  8E4A              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1234  8E4A              ;
1235  8E4A              ;	DESTRUYE: HL y BC y DE.
1236  8E4A
1237  8E4A 21 B6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1238  8E4D 01 43 00     	ld bc,67
1239  8E50 ED B0        	ldir
1240  8E52 C9           	ret
1241  8E53
1242  8E53              ; -----------------------------------------------------------
1243  8E53              ;
1244  8E53              ;	27/04/23
1245  8E53              ;
1246  8E53              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1247  8E53              ;
1248  8E53              ;	Destruye: HL,BC,DE,A
1249  8E53
1250  8E53 21 B6 89     Borra_datos_entidad ld hl,Filas
1251  8E56 01 42 00     	ld bc,66
1252  8E59 AF           	xor a
1253  8E5A 77           	ld (hl),a
1254  8E5B 11 B7 89     	ld de,Filas+1
1255  8E5E ED B0        	ldir
1256  8E60 C9           	ret
1257  8E61
1258  8E61              ; -----------------------------------------------------------
1259  8E61
1260  8E61              ; Teclado.
1261  8E61
1262  8E61 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1263  8E63 DB FE        	in a,($fe)
1264  8E65 E6 01        	and $01
1265  8E67 28 02        	jr z,1f
1266  8E69 18 F6        	jr Pulsa_ENTER
1267  8E6B C9           1 ret
1268  8E6C
1269  8E6C              ; **************************************************************************************************
1270  8E6C              ;
1271  8E6C              ; Temporización.
1272  8E6C
1273  8E6C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1274  8E6C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1275  8E6C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1276  8E6C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1277  8E6C
1278  8E6C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1279  8E6C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1280  8E6C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1281  8E6C
1282  8E6C              ; A partir de $4f61 no hace falta DELAY.
1283  8E6C
1284  8E6C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1285  8E6C
1286  8E6C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1287  8E6F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1288  8E70 78           	LD A,B
1289  8E71 A7           	AND A
1290  8E72 20 FB        	JR NZ,wait
1291  8E74 C9           	RET
1292  8E75
1293  8E75              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1294  8E75              ;
1295  8E75              ;	5/3/23
1296  8E75              ;
1297  8E75              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1298  8E75
1299  8E75              Movimiento_Amadeus
1300  8E75
1301  8E75              ; Disparo.
1302  8E75
1303  8E75 3A 46 8A     	ld a,(Disparo_Amadeus)
1304  8E78 A7           	and a
1305  8E79 20 02        	jr nz,1F
1306  8E7B 18 15        	jr 2F
1307  8E7D
1308  8E7D 3E F7        1 ld a,$f7													; "5" para disparar.
1309  8E7F DB FE        	in a,($fe)
1310  8E81 E6 10        	and $10
1311  8E83
1312  8E83 F5           	push af
1313  8E84 CC 28 8F     	call z,Genera_disparo
1314  8E87 F1           	pop af
1315  8E88 20 08        	jr nz,2F
1316  8E8A
1317  8E8A 3A 46 8A     	ld a,(Disparo_Amadeus)
1318  8E8D EE 01        	xor 1
1319  8E8F 32 46 8A     	ld (Disparo_Amadeus),a
1320  8E92
1321  8E92 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1322  8E94 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1323  8E96 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1324  8E98 CC B6 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1325  8E9B 3E F7        	ld a,$f7
1326  8E9D DB FE        	in a,($fe)
1327  8E9F E6 01        	and $01
1328  8EA1 C8           	ret z
1329  8EA2
1330  8EA2 3E F7        	ld a,$f7
1331  8EA4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1332  8EA6 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1333  8EA8 CC 98 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1334  8EAB C9           	ret
1335  8EAC
1336  8EAC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1337  8EAC              ;
1338  8EAC              ;	Rutina provisional para que los malotes cagen balas.
1339  8EAC
1340  8EAC              Detecta_disparo_entidad
1341  8EAC
1342  8EAC 3A 49 8A     	ld a,(Disparo_entidad)
1343  8EAF A7           	and a
1344  8EB0 C8           	ret z
1345  8EB1
1346  8EB1              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1347  8EB1
1348  8EB1              ;	ld a,$7f				; Detecta SPACE.
1349  8EB1              ;	in a,($fe)
1350  8EB1              ;	and 1
1351  8EB1              ;	ret nz
1352  8EB1
1353  8EB1              ;	call Genera_disparo
1354  8EB1 C9           	ret
1355  8EB2
1356  8EB2              ; ----------------------------------------------------------------------
1357  8EB2              ;
1358  8EB2              ;	11/8/23
1359  8EB2
1360  8EB2              Frame
1361  8EB2
1362  8EB2              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1363  8EB2              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1364  8EB2
1365  8EB2              ; PINTAMOS.
1366  8EB2
1367  8EB2 F5           	push af
1368  8EB3 C5           	push bc
1369  8EB4 D5           	push de
1370  8EB5 E5           	push hl
1371  8EB6
1372  8EB6 3E 02            ld a,2
1373  8EB8 D3 FE            out ($fe),a											; Rojo.
1374  8EBA
1375  8EBA CD 58 8D     	call Calcula_numero_de_malotes
1376  8EBD
1377  8EBD              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1378  8EBD              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1379  8EBD
1380  8EBD              ;;! debuggg !!!
1381  8EBD 3A 42 8A     	ld a,(Contador_de_frames_2)
1382  8EC0 FE 01        	cp 1
1383  8EC2 20 0C        	jr nz,4F
1384  8EC4 3A 41 8A     	ld a,(Contador_de_frames)
1385  8EC7 FE 71        	cp $71 		; Último FRAME estable, a partir de aquí hay que hacer seguimiento.	$70.
1386  8EC9 28 FE        	jr z,$
1387  8ECB 30 FE        	jr nc,$
1388  8ECD
1389  8ECD 2A 0E 8A     	ld hl,(Stack_snapshot)
1390  8ED0
1391  8ED0              ;;! debuggg !!!;
1392  8ED0
1393  8ED0 CD 2C 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1394  8ED3              ;	call Extrae_foto_disparos
1395  8ED3 3E 01            ld a,1
1396  8ED5 D3 FE            out ($fe),a											; Azul.
1397  8ED7
1398  8ED7              ; 	Gestiona los álbumes de fotos.
1399  8ED7
1400  8ED7 CD 76 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1401  8EDA CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1402  8EDD
1403  8EDD              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1404  8EDD
1405  8EDD 3A F9 89     	ld a,(Ctrl_1)
1406  8EE0 CB 6F        	bit 5,a
1407  8EE2 20 24        	jr nz,1F
1408  8EE4
1409  8EE4              ; No hemos terminado de guardar el último FRAME.
1410  8EE4
1411  8EE4 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1412  8EE7              ;	ld bc,Indice_album_de_fotos
1413  8EE7 2B           	dec hl
1414  8EE8 2B           	dec hl
1415  8EE9
1416  8EE9              ;	ld a,l
1417  8EE9              ;	sub c
1418  8EE9
1419  8EE9              ;	jr z,$
1420  8EE9
1421  8EE9 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
1422  8EEC
1423  8EEC
1424  8EEC 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
1425  8EEF 2B           	dec hl
1426  8EF0 2B           	dec hl
1427  8EF1 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
1428  8EF4 CD 88 8D     	call Extrae_address
1429  8EF7 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
1430  8EFA
1431  8EFA CD 88 8D     	call Extrae_address
1432  8EFD
1433  8EFD              ; Esta vacío este album???
1434  8EFD
1435  8EFD 24           	inc h
1436  8EFE 25           	dec h
1437  8EFF 20 02        	jr nz,5F
1438  8F01
1439  8F01              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1440  8F01
1441  8F01 18 05        	jr 1F
1442  8F03
1443  8F03 22 0E 8A     5 ld (Stack_snapshot),hl
1444  8F06 18 09        	jr 2F
1445  8F08
1446  8F08              ; FRAME completo.
1447  8F08
1448  8F08 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1449  8F0B CD 88 8D     	call Extrae_address
1450  8F0E 22 0E 8A     	ld (Stack_snapshot),hl
1451  8F11
1452  8F11              ;	En este punto:
1453  8F11
1454  8F11              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1455  8F11              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1456  8F11
1457  8F11              ; RELOJES.
1458  8F11
1459  8F11 21 41 8A     2 ld hl,Contador_de_frames
1460  8F14 7E           	ld a,(hl)
1461  8F15 FE FF        	cp $ff
1462  8F17 20 04        	jr nz,3F
1463  8F19 34           	inc (hl)
1464  8F1A
1465  8F1A 21 42 8A     	ld hl,Contador_de_frames_2
1466  8F1D 34           3 inc (hl)											; 0 - 255
1467  8F1E
1468  8F1E 21 F9 89     	ld hl,Ctrl_1
1469  8F21 CB AE        	res 5,(hl)
1470  8F23
1471  8F23              ;	call Calcula_numero_de_malotes
1472  8F23
1473  8F23 E1           	pop hl
1474  8F24 D1           	pop de
1475  8F25 C1           	pop bc
1476  8F26 F1           	pop af
1477  8F27
1478  8F27 C9           	ret
1479  8F28
1480  8F28              ; ---------------------------------------------------------------
1481  8F28
1482  8F28              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F28              ; ******************************************************************************************************************************************************************************************
   2+ 8F28              ;
   3+ 8F28              ;   21/07/23
   4+ 8F28              ;
   5+ 8F28              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F28              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F28              ;
   8+ 8F28              ;
   9+ 8F28              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F28              ;
  11+ 8F28              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F28              ;               _ hacen las entidades hacia abajo.
  13+ 8F28              ;
  14+ 8F28              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F28              ;
  16+ 8F28              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F28              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F28              ;
  19+ 8F28              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F28              ;           _ la bala.
  21+ 8F28              ;
  22+ 8F28              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F28              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F28              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F28              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F28              ;           _ en el momento de generarse la bala)).
  27+ 8F28
  28+ 8F28              Genera_disparo
  29+ 8F28
  30+ 8F28              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F28              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F28              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F28              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F28              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F28              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F28              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F28
  38+ 8F28              ; Exclusiones:
  39+ 8F28
  40+ 8F28 3A CE 89         ld a,(Vel_down)
  41+ 8F2B 47               ld b,a
  42+ 8F2C 3A 40 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F2F B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F30 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F31 3A F3 89         ld a,(Columnas)
  46+ 8F34 47               ld b,a
  47+ 8F35 3A B7 89         ld a,(Columns)
  48+ 8F38 B8               cp b
  49+ 8F39 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F3A
  51+ 8F3A              ; ----- ----- -----
  52+ 8F3A
  53+ 8F3A 3A E4 89         ld a,(Ctrl_0)
  54+ 8F3D CB 77            bit 6,a
  55+ 8F3F 20 06            jr nz,14F
  56+ 8F41
  57+ 8F41 3A BD 89         ld a,(Coordenada_y)
  58+ 8F44 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F46 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F47
  61+ 8F47 21 00 80     14 ld hl,Indice_disparo
  62+ 8F4A 3A BE 89         ld a,(CTRL_DESPLZ)
  63+ 8F4D 4F               ld c,a
  64+ 8F4E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F50              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F50              ;                                            ""        ""       "f9", B="1"
  67+ 8F50              ;                                            ""        ""       "fb", B="2"
  68+ 8F50              ;                                            ""        ""       "fb", B="3"
  69+ 8F50 A7               and a
  70+ 8F51 28 10            jr z,1F
  71+ 8F53 E6 01            and 1
  72+ 8F55 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F56
  74+ 8F56 79               ld a,c
  75+ 8F57 16 F9            ld d,$f9
  76+ 8F59 23           2 inc hl
  77+ 8F5A 23               inc hl
  78+ 8F5B 04               inc b
  79+ 8F5C BA               cp d
  80+ 8F5D 28 04            jr z,1F
  81+ 8F5F 14               inc d
  82+ 8F60 14               inc d
  83+ 8F61 18 F6            jr 2B
  84+ 8F63
  85+ 8F63 CD 88 8D     1 call Extrae_address
  86+ 8F66 E5               push hl
  87+ 8F67 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F69 DD 21 B1 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F6D
  90+ 8F6D              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F6D              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F6D
  93+ 8F6D 3A E4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F70 CB 77            bit 6,a
  95+ 8F72 20 04            jr nz,19F
  96+ 8F74
  97+ 8F74 AF               xor a
  98+ 8F75 32 49 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F78
 100+ 8F78 3A CA 89     19 ld a,(Cuad_objeto)
 101+ 8F7B FE 02            cp 2
 102+ 8F7D 38 66            jr c,3F
 103+ 8F7F 28 64            jr z,3F
 104+ 8F81
 105+ 8F81              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F81
 107+ 8F81 E6 01            and 1
 108+ 8F83 28 30            jr z,4F
 109+ 8F85
 110+ 8F85              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F85              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F85              ;
 113+ 8F85              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F85              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F85              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F85
 117+ 8F85 2A B8 89     	ld hl,(Posicion_actual)
 118+ 8F88
 119+ 8F88              ;   Amadeus o entidad ???.
 120+ 8F88
 121+ 8F88 3A E4 89         ld a,(Ctrl_0)
 122+ 8F8B CB 77            bit 6,a
 123+ 8F8D 28 0A            jr z,8F
 124+ 8F8F
 125+ 8F8F              ; 	Dispara Amadeus.
 126+ 8F8F
 127+ 8F8F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F91 CD 1D 97         call PreviousScan
 129+ 8F94 CD 1D 97         call PreviousScan
 130+ 8F97
 131+ 8F97              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F97              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F97              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F97              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F97
 136+ 8F97 18 11            jr 10F
 137+ 8F99
 138+ 8F99              ; 	Dispara Entidad.
 139+ 8F99
 140+ 8F99 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F9C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F9C
 143+ 8F9C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F9C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F9C
 146+ 8F9C C5               push bc
 147+ 8F9D 06 10            ld b,16
 148+ 8F9F CD 0E 97     9 call NextScan
 149+ 8FA2 10 FB            djnz 9B
 150+ 8FA4 C1               pop bc
 151+ 8FA5 CD 0F 90         call Ajusta_disparo_parte_izquierda
 152+ 8FA8 18 06            jr 17F
 153+ 8FAA
 154+ 8FAA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FAA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FAA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FAA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FAA
 159+ 8FAA CD 0F 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FAD CD 84 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FB0              ;                                                      ; _al generar el disparo.
 162+ 8FB0
 163+ 8FB0              ; 	LLegados a este punto tendremos:
 164+ 8FB0              ;
 165+ 8FB0              ;       Puntero_objeto_disparo en IY.
 166+ 8FB0              ;       Rutinas_de_impresion en IX.
 167+ 8FB0              ;       Puntero_de_impresion en HL.
 168+ 8FB0              ;       Impacto/Dirección en BC.
 169+ 8FB0
 170+ 8FB0 CD 17 90     17 call Almacena_disparo
 171+ 8FB3 18 52            jr 6F                                             ; RET.
 172+ 8FB5
 173+ 8FB5              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FB5              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FB5              ;
 176+ 8FB5              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FB5              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FB5              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FB5
 180+ 8FB5 2A B8 89     4 ld hl,(Posicion_actual)
 181+ 8FB8
 182+ 8FB8              ;   Amadeus o entidad ???.
 183+ 8FB8
 184+ 8FB8 3A E4 89         ld a,(Ctrl_0)
 185+ 8FBB CB 77            bit 6,a
 186+ 8FBD 28 0A            jr z,11F
 187+ 8FBF
 188+ 8FBF              ; 	Dispara Amadeus.
 189+ 8FBF
 190+ 8FBF 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FC1 CD 1D 97         call PreviousScan
 192+ 8FC4 CD 1D 97         call PreviousScan
 193+ 8FC7
 194+ 8FC7              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FC7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FC7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FC7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FC7
 199+ 8FC7 18 11            jr 13F
 200+ 8FC9
 201+ 8FC9              ; 	Dispara Entidad.
 202+ 8FC9
 203+ 8FC9 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FCC              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FCC
 206+ 8FCC              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FCC              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FCC
 209+ 8FCC C5               push bc
 210+ 8FCD 06 10            ld b,16
 211+ 8FCF CD 0E 97     12 call NextScan
 212+ 8FD2 10 FB            djnz 12B
 213+ 8FD4 C1               pop bc
 214+ 8FD5
 215+ 8FD5 CD 08 90         call Ajusta_disparo_parte_derecha
 216+ 8FD8 18 06            jr 18F
 217+ 8FDA
 218+ 8FDA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FDA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FDA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FDA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FDA
 223+ 8FDA CD 08 90     13 call Ajusta_disparo_parte_derecha
 224+ 8FDD CD 84 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FE0              ;                                                       ; _al generar el disparo.
 226+ 8FE0
 227+ 8FE0              ; LLegados a este punto tendremos:
 228+ 8FE0              ;
 229+ 8FE0              ;       Puntero_objeto_disparo en IY.
 230+ 8FE0              ;       Rutinas_de_impresion en IX.
 231+ 8FE0              ;       Puntero_de_impresion en HL.
 232+ 8FE0              ;       Impacto/Dirección en BC.
 233+ 8FE0
 234+ 8FE0 CD 17 90     18 call Almacena_disparo
 235+ 8FE3 18 22            jr 6F                                               ; RET.
 236+ 8FE5
 237+ 8FE5              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FE5
 239+ 8FE5 28 11        3 jr z,5F
 240+ 8FE7
 241+ 8FE7              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FE7              ;
 243+ 8FE7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FE7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FE7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FE7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FE7
 248+ 8FE7              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FE7              ;	   ""        ""       "f9", B="1"
 250+ 8FE7              ;	   ""        ""       "fb", B="2"
 251+ 8FE7              ; 	   ""        ""       "fb", B="3"
 252+ 8FE7
 253+ 8FE7 2A B8 89     	ld hl,(Posicion_actual)
 254+ 8FEA CD 0E 97     	call NextScan
 255+ 8FED
 256+ 8FED              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FED              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FED              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FED              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FED
 261+ 8FED CD 0F 90         call Ajusta_disparo_parte_izquierda
 262+ 8FF0
 263+ 8FF0              ; 	No se produce impacto. B="$80"
 264+ 8FF0              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FF0
 266+ 8FF0 01 80 80         ld bc,$8080
 267+ 8FF3
 268+ 8FF3              ; 	LLegados a este punto tendremos:
 269+ 8FF3              ;
 270+ 8FF3              ;       Puntero_objeto_disparo en IY.
 271+ 8FF3              ;       Rutinas_de_impresion en IX.
 272+ 8FF3              ;       Puntero_de_impresion en HL.
 273+ 8FF3              ;       Impacto/Dirección en BC.
 274+ 8FF3
 275+ 8FF3 CD 17 90         call Almacena_disparo
 276+ 8FF6 18 0F            jr 6F                                           ; RET.
 277+ 8FF8
 278+ 8FF8              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FF8              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FF8              ;
 281+ 8FF8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FF8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FF8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FF8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FF8
 286+ 8FF8 2A B8 89     5 ld hl,(Posicion_actual)
 287+ 8FFB CD 0E 97     	call NextScan
 288+ 8FFE
 289+ 8FFE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FFE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FFE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FFE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FFE
 294+ 8FFE CD 08 90         call Ajusta_disparo_parte_derecha
 295+ 9001
 296+ 9001              ; 	No se produce impacto. B="$80"
 297+ 9001              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9001
 299+ 9001 01 80 80     15 ld bc,$8080
 300+ 9004
 301+ 9004              ; 	LLegados a este punto tendremos:
 302+ 9004              ;
 303+ 9004              ;       Puntero_objeto_disparo en IY.
 304+ 9004              ;       Rutinas_de_impresion en IX.
 305+ 9004              ;       Puntero_de_impresion en HL.
 306+ 9004              ;       Impacto/Dirección en BC.
 307+ 9004
 308+ 9004 CD 17 90         call Almacena_disparo
 309+ 9007
 310+ 9007 C9           6 ret
 311+ 9008
 312+ 9008              ; ----------------------------------------------------------------
 313+ 9008              ;
 314+ 9008              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9008              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9008              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9008
 318+ 9008 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9009 FE 02            cp 2
 320+ 900B 38 01            jr c,1F
 321+ 900D 23               inc hl
 322+ 900E C9           1 ret
 323+ 900F
 324+ 900F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9010 FE 01        	cp 1
 326+ 9012 20 01        	jr nz,1F
 327+ 9014 2B           	dec hl
 328+ 9015 2B           1 dec hl
 329+ 9016 C9               ret
 330+ 9017
 331+ 9017              ; ----------------------------------------------------------------
 332+ 9017              ;
 333+ 9017              ;   25/02/23
 334+ 9017              ;
 335+ 9017              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9017              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9017              ;
 338+ 9017              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9017              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9017
 341+ 9017              Almacena_disparo
 342+ 9017
 343+ 9017 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9018 F1               pop af
 345+ 9019 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 901A
 347+ 901A 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 901B E6 01            and 1
 349+ 901D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 901F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 901F              ; 	Dispara AMADEUS.
 352+ 901F
 353+ 901F              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 901F              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 901F              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 901F              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 901F
 358+ 901F C5               push bc
 359+ 9020 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9023 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9026 A7               and a
 362+ 9027 ED 42            sbc hl,bc
 363+ 9029 CC 51 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 902C C1               pop bc
 365+ 902D 28 54            jr z,4F
 366+ 902F
 367+ 902F 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9032 23               inc hl
 369+ 9033 23               inc hl
 370+ 9034 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9037              ;                                                   ; _ Disparo_(+1).
 372+ 9037 18 18            jr 2F
 373+ 9039
 374+ 9039              ; Dispara una entidad.
 375+ 9039
 376+ 9039 C5           1 push bc
 377+ 903A 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 903D 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9040 A7               and a
 380+ 9041 ED 42            sbc hl,bc
 381+ 9043 CC 4A 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9046 C1               pop bc
 383+ 9047 28 3A            jr z,4F
 384+ 9049
 385+ 9049 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 904C 23               inc hl
 387+ 904D 23               inc hl
 388+ 904E 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9051              ;                                                   ; _ Disparo_(+1).
 390+ 9051 CD 88 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9054              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9054              ;
 393+ 9054              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9054              ;                                                     Rutinas_de_impresion en IX.
 395+ 9054              ;                                                     Puntero_de_impresion en HL.
 396+ 9054              ;                                                     Impacto/Dirección en BC.
 397+ 9054
 398+ 9054 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9055 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9056 23               inc hl                                          ; _ al siguiente.
 401+ 9057 A7               and a
 402+ 9058 20 C0            jr nz,3B
 403+ 905A
 404+ 905A 08               ex af,af
 405+ 905B ED 73 0A 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 905F F9               ld sp,hl
 407+ 9060
 408+ 9060 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9062 F5               push af                                         ; Puntero de impresión.
 410+ 9063 FD E5            push iy                                         ; Puntero objeto.
 411+ 9065 C5               push bc                                         ; Control.
 412+ 9066
 413+ 9066 ED 7B 0A 8A      ld sp,(Stack)
 414+ 906A
 415+ 906A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 906A
 417+ 906A 21 F9 89     	ld hl,Ctrl_1
 418+ 906D CB C6        	set 0,(hl)
 419+ 906F
 420+ 906F DD E5        	push ix
 421+ 9071 E1               pop hl
 422+ 9072 F5               push af
 423+ 9073 DD E1            pop ix
 424+ 9075
 425+ 9075 CD A0 7F     	call Guarda_foto_registros
 426+ 9078
 427+ 9078 21 F9 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 907B CB 86        	res 0,(hl)
 429+ 907D
 430+ 907D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 907D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 907D
 433+ 907D CD 51 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9080 CD 4A 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 9083
 436+ 9083 C9           4 ret
 437+ 9084
 438+ 9084              ; ----------------------------------------------------------------
 439+ 9084              ;
 440+ 9084              ;   4/3/23
 441+ 9084              ;
 442+ 9084              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9084              ;   _ al generarse el disparo.
 444+ 9084              ;
 445+ 9084              ;       "$80" ..... No se produce colisión.
 446+ 9084              ;       "$81" ..... Se produce colisión.
 447+ 9084              ;
 448+ 9084              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9084              ;         _ que forman el disparo.
 450+ 9084
 451+ 9084
 452+ 9084              Comprueba_Colision
 453+ 9084
 454+ 9084              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9084
 456+ 9084 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9086 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9087
 459+ 9087 CD BD 90         call Modifica_H_Velocidad_disparo
 460+ 908A
 461+ 908A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 908B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 908D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 908F
 465+ 908F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9091 CD AD 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9094
 468+ 9094 7B               ld a,e
 469+ 9095 E6 01            and 1
 470+ 9097 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9099              ;                                                  ; _ para activar IMPACTO.
 472+ 9099 E1               pop hl
 473+ 909A E5               push hl
 474+ 909B CD 0E 97         call NextScan
 475+ 909E
 476+ 909E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 909F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 90A1 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 90A3              ;                                                  ; _ 2º scanline si esto es así.
 480+ 90A3 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 90A5 CD AD 90         call Bucle_2
 482+ 90A8
 483+ 90A8 43           1 ld b,e
 484+ 90A9 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90AA FD E1            pop iy
 486+ 90AC C9               ret
 487+ 90AD
 488+ 90AD              ; ---------- ----------
 489+ 90AD
 490+ 90AD 06 02        Bucle_2 ld b,2
 491+ 90AF FD 7E 00     2 ld a,(iy)
 492+ 90B2 A6               and (hl)
 493+ 90B3 28 02            jr z,1F
 494+ 90B5 1E 81            ld e,$81
 495+ 90B7 23           1 inc hl
 496+ 90B8 FD 23            inc iy
 497+ 90BA 10 F3            djnz 2B
 498+ 90BC C9               ret
 499+ 90BD
 500+ 90BD              ; ---------- ----------
 501+ 90BD              ;
 502+ 90BD              ;   21/7/23
 503+ 90BD
 504+ 90BD              Modifica_H_Velocidad_disparo
 505+ 90BD
 506+ 90BD 3A 40 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90C0 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90C2 D0               ret nc                                         ; _ incrementamos H.
 509+ 90C3 24               inc h
 510+ 90C4
 511+ 90C4 C9               ret
 512+ 90C5
 513+ 90C5              ; -------------------------------------------------------------------------------------------------------------
 514+ 90C5              ;
 515+ 90C5              ;   11/04/23
 516+ 90C5              ;
 517+ 90C5              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90C5              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90C5              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90C5              ;
 521+ 90C5              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90C5
 523+ 90C5              Compara_coordenadas_X
 524+ 90C5
 525+ 90C5              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90C5              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90C5
 528+ 90C5              ; Preparamos registros:
 529+ 90C5
 530+ 90C5 21 BC 89         ld hl,Filas+6
 531+ 90C8 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90C9 23               inc hl
 533+ 90CA 23               inc hl
 534+ 90CB 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90CC 43               ld b,e
 536+ 90CD
 537+ 90CD 21 CA 89         ld hl,Filas+20
 538+ 90D0 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90D1 21 3B 8A         ld hl,Coordenadas_X_Entidad
 540+ 90D4 CD F0 92         call Guarda_coordenadas_X
 541+ 90D7
 542+ 90D7              ; Preparamos registros:
 543+ 90D7
 544+ 90D7 21 AA 85         ld hl,Amadeus_db+6
 545+ 90DA 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90DB 23               inc hl
 547+ 90DC 23               inc hl
 548+ 90DD 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90DE 7B               ld a,e
 550+ 90DF 08               ex af,af'
 551+ 90E0 21 B8 85         ld hl,Amadeus_db+20
 552+ 90E3 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90E4 21 38 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90E7 CD F0 92         call Guarda_coordenadas_X
 555+ 90EA
 556+ 90EA              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90EA              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90EA
 559+ 90EA 04               inc b
 560+ 90EB 05               dec b
 561+ 90EC 28 04            jr z,1F
 562+ 90EE 06 03            ld b,3
 563+ 90F0 18 02            jr 2F
 564+ 90F2 06 02        1 ld b,2
 565+ 90F4 08           2 ex af,af'
 566+ 90F5 3C               inc a
 567+ 90F6 3D               dec a
 568+ 90F7 28 04            jr z,5F
 569+ 90F9 0E 03            ld c,3
 570+ 90FB 18 02            jr 6F
 571+ 90FD 0E 02        5 ld c,2
 572+ 90FF 79           6 ld a,c
 573+ 9100 08               ex af,af'
 574+ 9101 11 3B 8A         ld de,Coordenadas_X_Entidad
 575+ 9104 1A           4 ld a,(de)
 576+ 9105 21 38 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9108 BE           3 cp (hl)
 578+ 9109 28 0E            jr z,7F
 579+ 910B 23               inc hl
 580+ 910C 0D               dec c
 581+ 910D 20 F9            jr nz,3B
 582+ 910F 13               inc de
 583+ 9110 08               ex af,af'
 584+ 9111 4F               ld c,a
 585+ 9112 08               ex af,af'
 586+ 9113 10 EF            djnz 4B
 587+ 9115
 588+ 9115              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9115
 590+ 9115 CD 2C 93     8 call Limpia_Coordenadas_X
 591+ 9118 C9               ret
 592+ 9119
 593+ 9119 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 911B 32 CF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 911E 21 33 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9121 CB D6            set 2,(hl)
 597+ 9123 18 F0            jr 8B
 598+ 9125
 599+ 9125              ; -----------------------------------------------------------------------
 600+ 9125              ;
 601+ 9125              ;   17/04/23
 602+ 9125              ;
 603+ 9125
 604+ 9125              Detecta_colision_nave_entidad
 605+ 9125
 606+ 9125              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9125
 608+ 9125 2A B8 89         ld hl,(Posicion_actual)
 609+ 9128 CD 69 96         call Calcula_puntero_de_impresion
 610+ 912B
 611+ 912B              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 912B              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 912B
 614+ 912B DD E5            push ix
 615+ 912D E1               pop hl
 616+ 912E E5               push hl
 617+ 912F
 618+ 912F              ; ----- ----- -----
 619+ 912F 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9131 06 0A            ld b,10
 621+ 9133 CD 63 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9136 7B               ld a,e
 623+ 9137 FE 05            cp 5
 624+ 9139 38 0E            jr c,3F
 625+ 913B
 626+ 913B              ; LLegados a este punto:
 627+ 913B              ;
 628+ 913B              ;   HAY COLISIÓN !!!!!.
 629+ 913B              ;
 630+ 913B              ;   .db (Impacto) de Amadeus a "1".
 631+ 913B              ;   SET el bit3 de (Impacto2).
 632+ 913B              ;
 633+ 913B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 913B
 635+ 913B 21 BD 85         ld hl,Amadeus_db+25
 636+ 913E 36 01            ld (hl),1
 637+ 9140 21 33 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9143 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9145 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9147 18 18            jr 1F
 641+ 9149
 642+ 9149              ; -----
 643+ 9149
 644+ 9149 E1           3 pop hl
 645+ 914A CD 0E 97         call NextScan
 646+ 914D E5               push hl
 647+ 914E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 914F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9151 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9153 30 0C            jr nc,1F
 651+ 9155              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9155 10 DC            djnz 2B
 653+ 9157
 654+ 9157              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9157
 656+ 9157              ; LLegados a este punto:
 657+ 9157              ;
 658+ 9157              ;   NO HAY COLISIÓN !!!!!.
 659+ 9157              ;
 660+ 9157              ;   .db (Impacto) de Amadeus a "0".
 661+ 9157              ;   RES el bit2 de (Impacto2).
 662+ 9157              ;
 663+ 9157              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9157              ;   Lo colocamos a "0".
 665+ 9157
 666+ 9157 21 33 8A         ld hl,Impacto2
 667+ 915A CB 96            res 2,(hl)
 668+ 915C 2A 34 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 915F 36 00            ld (hl),0
 670+ 9161
 671+ 9161 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9162 C9               ret
 673+ 9163
 674+ 9163               ; ---------- ----------
 675+ 9163
 676+ 9163 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9164 3A B7 89         ld a,(Columns)
 678+ 9167 47               ld b,a
 679+ 9168 FD 7E 00     2 ld a,(iy)
 680+ 916B BE               cp (hl)
 681+ 916C 28 01            jr z,1F
 682+ 916E
 683+ 916E 1C               inc e
 684+ 916F
 685+ 916F 23           1 inc hl
 686+ 9170 FD 23            inc iy
 687+ 9172 10 F4            djnz 2B
 688+ 9174 C1               pop bc
 689+ 9175 C9               ret
 690+ 9176
 691+ 9176              ; -------------------------------------------------------------------------------------------------------------
 692+ 9176              ;
 693+ 9176              ;   13/03/23
 694+ 9176              ;
 695+ 9176              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9176              ;
 697+ 9176              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9176
 699+ 9176 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9179 7E               ld a,(hl)
 701+ 917A A7               and a
 702+ 917B C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 917C
 704+ 917C 44               ld b,h
 705+ 917D 4D               ld c,l
 706+ 917E 2A 10 8A         ld hl,(Stack_snapshot_disparos)
 707+ 9181 E5               push hl
 708+ 9182 A7               and a
 709+ 9183 ED 42            sbc hl,bc
 710+ 9185 E5               push hl
 711+ 9186 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9187
 713+ 9187 E1               pop hl
 714+ 9188 54               ld d,h
 715+ 9189 5D               ld e,l
 716+ 918A 1B               dec de
 717+ 918B ED B8            lddr                                                ; Limpiamos.
 718+ 918D
 719+ 918D 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 9190 22 10 8A         ld (Stack_snapshot_disparos),hl
 721+ 9193
 722+ 9193 C9               ret
 723+ 9194
 724+ 9194              ; -------------------------------------------------------------------------------------------------------------
 725+ 9194              ;
 726+ 9194              ;   18/07/23
 727+ 9194              ;
 728+ 9194
 729+ 9194              Motor_de_disparos
 730+ 9194
 731+ 9194              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9194
 733+ 9194 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9197 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 919A
 736+ 919A CD 88 8D     2 call Extrae_address
 737+ 919D 7E               ld a,(hl)
 738+ 919E A7               and a
 739+ 919F 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 91A1
 741+ 91A1              ; ----- ----- ----- ----- ----- -----
 742+ 91A1
 743+ 91A1 C5               push bc
 744+ 91A2 CD 66 92         call foto_disparo_a_borrar
 745+ 91A5
 746+ 91A5              ; Existe colisión con este disparo???
 747+ 91A5
 748+ 91A5 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 91A6 7E               ld a,(hl)
 750+ 91A7 2B               dec hl
 751+ 91A8 E6 01            and 1
 752+ 91AA 28 1D            jr z,9F
 753+ 91AC
 754+ 91AC              ;   En este punto:
 755+ 91AC              ;
 756+ 91AC              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91AC              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91AC              ;   _con la entidad).
 759+ 91AC              ;
 760+ 91AC              ;   Disparo_2A defw 0                                ; Control.
 761+ 91AC              ;    defw 0                                          ; Puntero objeto.
 762+ 91AC              ;    defw 0                                          ; Puntero de impresión.
 763+ 91AC              ;    defw 0                                          ; Rutina de impresión.
 764+ 91AC
 765+ 91AC E5               push hl
 766+ 91AD
 767+ 91AD 06 04            ld b,4
 768+ 91AF 23           19 inc hl
 769+ 91B0 10 FD            djnz 19B
 770+ 91B2
 771+ 91B2 CD 88 8D         call Extrae_address
 772+ 91B5 CD 94 9D         call Genera_coordenadas_disparo
 773+ 91B8
 774+ 91B8              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91B8
 776+ 91B8 21 36 8A         ld hl,Coordenadas_disparo_certero
 777+ 91BB 72               ld (hl),d
 778+ 91BC 23               inc hl
 779+ 91BD 73               ld (hl),e
 780+ 91BE
 781+ 91BE              ; Elimino el disparo de la base de datos.
 782+ 91BE
 783+ 91BE E1               pop hl
 784+ 91BF CD E5 92         call Elimina_disparo_de_base_de_datos
 785+ 91C2 21 33 8A         ld hl,Impacto2
 786+ 91C5 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91C7
 788+ 91C7 18 06            jr 11F
 789+ 91C9
 790+ 91C9 CD 8F 92     9 call Mueve_disparo
 791+ 91CC CD 66 92         call foto_disparo_a_borrar
 792+ 91CF
 793+ 91CF C1           11 pop bc
 794+ 91D0 18 04            jr 7F
 795+ 91D2
 796+ 91D2              ; ----- ----- ----- ----- ----- -----
 797+ 91D2
 798+ 91D2 ED 42        1 sbc hl,bc
 799+ 91D4 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91D6
 801+ 91D6 2A 31 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91D9 23               inc hl
 803+ 91DA 23               inc hl
 804+ 91DB 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91DE 18 BA            jr 2B
 806+ 91E0
 807+ 91E0 CD 51 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91E3              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91E3
 810+ 91E3              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91E3
 812+ 91E3 01 8A 85         ld bc,Disparo_11
 813+ 91E6 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91E9
 815+ 91E9 CD 88 8D     5 call Extrae_address
 816+ 91EC 7E               ld a,(hl)
 817+ 91ED A7               and a
 818+ 91EE 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91F0
 820+ 91F0              ; ----- ----- ----- ----- ----- -----
 821+ 91F0
 822+ 91F0 C5               push bc
 823+ 91F1 CD 66 92         call foto_disparo_a_borrar
 824+ 91F4
 825+ 91F4              ; Existe colisión con este disparo???
 826+ 91F4
 827+ 91F4 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91F5 7E               ld a,(hl)
 829+ 91F6 2B               dec hl
 830+ 91F7 E6 01            and 1
 831+ 91F9 28 4D            jr z,10F
 832+ 91FB
 833+ 91FB              ;! La colisión se produce con Amadeus???
 834+ 91FB              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91FB
 836+ 91FB E5               push hl
 837+ 91FC
 838+ 91FC 06 04            ld b,4
 839+ 91FE 23           16 inc hl
 840+ 91FF 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9201
 842+ 9201 CD 88 8D         call Extrae_address
 843+ 9204 CD 94 9D         call Genera_coordenadas_disparo
 844+ 9207
 845+ 9207 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9208 FE 16            cp $16
 847+ 920A 38 2A            jr c,15F
 848+ 920C
 849+ 920C
 850+ 920C              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 920C
 852+ 920C D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 920D
 854+ 920D              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 920D
 856+ 920D
 857+ 920D 2A 3E 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9210
 859+ 9210              ; Coordenada X de Amadeus en D.
 860+ 9210
 861+ 9210 7D               ld a,l
 862+ 9211 E6 1F            and $1F
 863+ 9213 57               ld d,a
 864+ 9214
 865+ 9214 21 AC 85         ld hl,Amadeus_db+8
 866+ 9217 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9218
 868+ 9218 21 38 8A         ld hl,Coordenadas_X_Amadeus
 869+ 921B CD F0 92         call Guarda_coordenadas_X
 870+ 921E
 871+ 921E D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 921F
 873+ 921F              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 921F
 875+ 921F 06 02            ld b,2
 876+ 9221 C5           20 push bc
 877+ 9222
 878+ 9222 06 03            ld b,3
 879+ 9224 21 38 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9227 7E           18 ld a,(hl)
 881+ 9228 BA               cp d
 882+ 9229 20 04            jr nz,17F
 883+ 922B
 884+ 922B              ;! Colisión Amadeus !!!!!!!!!!
 885+ 922B
 886+ 922B C1               pop bc
 887+ 922C E1               pop hl
 888+ 922D 18 0D            jr 14F
 889+ 922F
 890+ 922F 23           17 inc hl
 891+ 9230 10 F5            djnz 18B
 892+ 9232
 893+ 9232 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9233
 895+ 9233 C1               pop bc
 896+ 9234 10 EB            djnz 20B
 897+ 9236
 898+ 9236
 899+ 9236              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9236              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9236
 902+ 9236 E1           15 pop hl
 903+ 9237 23               inc hl
 904+ 9238 35               dec (hl)
 905+ 9239 2B               dec hl
 906+ 923A 18 0C            jr 10F
 907+ 923C
 908+ 923C              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 923C              ; _ almacén de coordenadas_X de Amadeus.
 910+ 923C
 911+ 923C E5           14 push hl
 912+ 923D CD E5 92         call Elimina_disparo_de_base_de_datos
 913+ 9240 21 33 8A         ld hl,Impacto2
 914+ 9243 CB CE            set 1,(hl)
 915+ 9245 E1               pop hl
 916+ 9246 18 06            jr 12F
 917+ 9248
 918+ 9248              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9248
 920+ 9248 CD 8F 92     10 call Mueve_disparo
 921+ 924B CD 66 92         call foto_disparo_a_borrar
 922+ 924E C1           12 pop bc
 923+ 924F
 924+ 924F 18 04            jr 8F
 925+ 9251
 926+ 9251              ; ----- ----- ----- ----- ----- -----
 927+ 9251
 928+ 9251 ED 42        4 sbc hl,bc
 929+ 9253 28 0A            jr z,6F
 930+ 9255
 931+ 9255 2A 2F 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9258 23               inc hl
 933+ 9259 23               inc hl
 934+ 925A 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 925D 18 8A            jr 5B
 936+ 925F
 937+ 925F CD 4A 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9262 CD 2C 93         call Limpia_Coordenadas_X
 939+ 9265 C9               ret
 940+ 9266
 941+ 9266              ; ------------------------------------------------------------------
 942+ 9266
 943+ 9266              foto_disparo_a_borrar
 944+ 9266
 945+ 9266 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9267 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9268 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9269
 949+ 9269 E5               push hl
 950+ 926A 23               inc hl
 951+ 926B 23               inc hl
 952+ 926C ED 73 0A 8A      ld (Stack),sp
 953+ 9270 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9271 FD E1            pop iy
 955+ 9273 DD E1            pop ix
 956+ 9275 E1               pop hl
 957+ 9276 ED 7B 0A 8A      ld sp,(Stack)
 958+ 927A 3A F9 89         ld a,(Ctrl_1)
 959+ 927D CB C7            set 0,a
 960+ 927F 32 F9 89         ld (Ctrl_1),a
 961+ 9282 CD A0 7F         call Guarda_foto_registros
 962+ 9285 3A F9 89         ld a,(Ctrl_1)
 963+ 9288 CB 87            res 0,a
 964+ 928A 32 F9 89         ld (Ctrl_1),a
 965+ 928D E1               pop hl
 966+ 928E C9               ret
 967+ 928F
 968+ 928F              ;---------------------------------------------------
 969+ 928F              ;
 970+ 928F              ;   18/07/23
 971+ 928F              ;
 972+ 928F
 973+ 928F              Mueve_disparo
 974+ 928F
 975+ 928F              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 928F              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 928F              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 928F
 979+ 928F E5               push hl
 980+ 9290
 981+ 9290 7E               ld a,(hl)
 982+ 9291
 983+ 9291 06 04            ld b,4
 984+ 9293 23           1 inc hl
 985+ 9294 10 FD            djnz 1B
 986+ 9296
 987+ 9296              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9296
 989+ 9296 CD 88 8D         call Extrae_address
 990+ 9299
 991+ 9299 E6 01            and 1
 992+ 929B 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 929D
 994+ 929D              ; Disparo hacia arriba, (Amadeus).
 995+ 929D
 996+ 929D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 929D              ; _ de la dificultad.
 998+ 929D
 999+ 929D CD 1D 97         call PreviousScan
1000+ 92A0 CD 1D 97         call PreviousScan
1001+ 92A3 CD 1D 97         call PreviousScan
1002+ 92A6 CD 1D 97         call PreviousScan
1003+ 92A9
1004+ 92A9              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92A9
1006+ 92A9 7C               ld a,h
1007+ 92AA FE 40            cp $40
1008+ 92AC 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92AE
1010+ 92AE              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92AE
1012+ 92AE EB               ex de,hl
1013+ 92AF 06 04            ld b,4
1014+ 92B1 2B           6 dec hl
1015+ 92B2 10 FD            djnz 6B
1016+ 92B4
1017+ 92B4 CD E5 92         call Elimina_disparo_de_base_de_datos
1018+ 92B7 E1               pop hl
1019+ 92B8 18 10            jr 7F
1020+ 92BA
1021+ 92BA              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92BA              ; HL contiene el puntero de impresión del disparo.
1023+ 92BA              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92BA
1025+ 92BA D5           3 push de
1026+ 92BB C5               push bc
1027+ 92BC
1028+ 92BC CD 84 90         call Comprueba_Colision
1029+ 92BF
1030+ 92BF              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92BF
1032+ 92BF 78               ld a,b
1033+ 92C0
1034+ 92C0 C1               pop bc
1035+ 92C1 D1               pop de
1036+ 92C2
1037+ 92C2 EB               ex de,hl
1038+ 92C3
1039+ 92C3 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92C4 23               inc hl                                      ; _ movimiento.
1041+ 92C5 72               ld (hl),d
1042+ 92C6
1043+ 92C6 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92C7
1045+ 92C7 23               inc hl                                      ; _ en curso.
1046+ 92C8 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92C9 2B               dec hl
1048+ 92CA
1049+ 92CA C9           7 ret
1050+ 92CB
1051+ 92CB              ; Disparo hacia abajo, (Entidad).
1052+ 92CB
1053+ 92CB 3A 40 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92CE 47               ld b,a
1055+ 92CF
1056+ 92CF CD 0E 97     4 call NextScan
1057+ 92D2 10 FB            djnz 4B
1058+ 92D4
1059+ 92D4              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92D4
1061+ 92D4 7C               ld a,h
1062+ 92D5 FE 58            cp $58
1063+ 92D7 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92D9
1065+ 92D9 EB               ex de,hl
1066+ 92DA 06 04            ld b,4
1067+ 92DC 2B           5 dec hl
1068+ 92DD 10 FD            djnz 5B
1069+ 92DF
1070+ 92DF CD E5 92         call Elimina_disparo_de_base_de_datos
1071+ 92E2 E1               pop hl
1072+ 92E3 18 E5            jr 7B
1073+ 92E5
1074+ 92E5              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92E5
1076+ 92E5 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92E8 AF               xor a
1078+ 92E9 77               ld (hl),a
1079+ 92EA 54               ld d,h
1080+ 92EB 5D               ld e,l
1081+ 92EC 13               inc de
1082+ 92ED ED B0            ldir
1083+ 92EF C9               ret
1084+ 92F0
1085+ 92F0              ; -----------------------------------------------------------------
1086+ 92F0              ;
1087+ 92F0              ;   19/7/23
1088+ 92F0              ;
1089+ 92F0              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92F0              ;
1091+ 92F0              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92F0              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92F0              ;
1094+ 92F0              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92F0              ;
1096+ 92F0              ;   INPUTS:
1097+ 92F0              ;
1098+ 92F0              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92F0              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92F0
1101+ 92F0              ;   MODIFICA: A, HL, BC y DE.
1102+ 92F0
1103+ 92F0              Guarda_coordenadas_X
1104+ 92F0
1105+ 92F0 7B               ld a,e
1106+ 92F1 A7               and a
1107+ 92F2 20 04            jr nz,1F
1108+ 92F4
1109+ 92F4 06 02            ld b,2
1110+ 92F6 18 02            jr 2F
1111+ 92F8
1112+ 92F8 06 03        1 ld b,3
1113+ 92FA 72           2 ld (hl),d
1114+ 92FB 23               inc hl
1115+ 92FC 14               inc d
1116+ 92FD 10 FB            djnz 2B
1117+ 92FF
1118+ 92FF C9               ret
1119+ 9300
1120+ 9300              ; -----------------------------------------------------------------
1121+ 9300              ;
1122+ 9300              ;   12/04/23
1123+ 9300              ;
1124+ 9300
1125+ 9300 3A 33 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9303 A7               and a
1127+ 9304 C8               ret z
1128+ 9305
1129+ 9305 FE 04            cp 4
1130+ 9307 20 09            jr nz,1F
1131+ 9309
1132+ 9309
1133+ 9309              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9309
1135+ 9309 CD 25 91         call Detecta_colision_nave_entidad
1136+ 930C
1137+ 930C 21 33 8A         ld hl,Impacto2
1138+ 930F CB 5E            bit 3,(hl)
1139+ 9311 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9312
1141+ 9312              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9312              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9312
1144+ 9312 21 33 8A     1 ld hl,Impacto2
1145+ 9315 CB 4E            bit 1,(hl)
1146+ 9317 28 07            jr z,2F
1147+ 9319
1148+ 9319 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 931C 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 931E 18 0B            jr 3F
1151+ 9320
1152+ 9320 21 33 8A     2 ld hl,Impacto2
1153+ 9323 CB 46            bit 0,(hl)
1154+ 9325 C8               ret z
1155+ 9326
1156+ 9326              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9326
1158+ 9326 21 F9 89         ld hl,Ctrl_1
1159+ 9329 CB D6            set 2,(hl)
1160+ 932B
1161+ 932B C9           3 ret
1162+ 932C
1163+ 932C              ; -----------------------------------------------------------------
1164+ 932C              ;
1165+ 932C              ;   19/7/23
1166+ 932C              ;
1167+ 932C              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 932C
1169+ 932C AF           Limpia_Coordenadas_X xor a
1170+ 932D 06 06            ld b,6
1171+ 932F 21 38 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9332 77           1 ld (hl),a
1173+ 9333 23               inc hl
1174+ 9334 10 FC            djnz 1B
1175+ 9336 C9               ret
1176+ 9337
1177+ 9337              ; -----------------------------------------------------------------
1178+ 9337              ;
1179+ 9337              ;   25/04/23
1180+ 9337              ;
1181+ 9337
1182+ 9337              Determina_resultado_comparativa
1183+ 9337
1184+ 9337              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9337              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9337              ;
1187+ 9337              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9337              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9337              ;
1190+ 9337              ;   SBC HL,DE
1191+ 9337
1192+ 9337              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9337              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9337
1195+ 9337              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9337              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9337
1198+ 9337
1199+ 9337 3A CA 89         ld a,(Cuad_objeto)
1200+ 933A FE 02            cp 2
1201+ 933C 28 26            jr z,2F
1202+ 933E 38 24            jr c,2F
1203+ 9340
1204+ 9340              ; Cuadrantes 3º y 4º
1205+ 9340
1206+ 9340 E6 01            and 1
1207+ 9342 28 10            jr z,4F
1208+ 9344
1209+ 9344              ; Cuadrante 3º
1210+ 9344
1211+ 9344 7C               ld a,h
1212+ 9345 06 00            ld b,0
1213+ 9347
1214+ 9347 CD D2 93         call Compara_cositas_H3
1215+ 934A
1216+ 934A 04               inc b
1217+ 934B 05               dec b
1218+ 934C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 934D
1220+ 934D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 934E 06 00            ld b,0
1222+ 9350
1223+ 9350 CD E4 93         call Compara_cositas_L3
1224+ 9353 C9               ret
1225+ 9354
1226+ 9354              ; Cuadrante 4º
1227+ 9354
1228+ 9354 7C           4 ld a,h
1229+ 9355 06 00            ld b,0
1230+ 9357
1231+ 9357 CD F6 93         call Compara_cositas_H4
1232+ 935A
1233+ 935A 04               inc b
1234+ 935B 05               dec b
1235+ 935C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 935D
1237+ 935D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 935E 06 00            ld b,0
1239+ 9360
1240+ 9360 CD 0C 94         call Compara_cositas_L4
1241+ 9363 C9               ret
1242+ 9364
1243+ 9364              ; Cuadrantes 1º y 2º.
1244+ 9364
1245+ 9364 28 10        2 jr z,3F
1246+ 9366
1247+ 9366              ; 1er Cuadrante
1248+ 9366
1249+ 9366 7C               ld a,h
1250+ 9367 06 00            ld b,0
1251+ 9369
1252+ 9369 CD AA 93         call Compara_cositas_H1
1253+ 936C
1254+ 936C 04               inc b
1255+ 936D 05               dec b
1256+ 936E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 936F
1258+ 936F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9370 06 00            ld b,0
1260+ 9372
1261+ 9372 CD C0 93         call Compara_cositas_L1
1262+ 9375 C9               ret
1263+ 9376
1264+ 9376
1265+ 9376              ; 2º Cuadrante
1266+ 9376
1267+ 9376 7C           3 ld a,h
1268+ 9377 06 00            ld b,0
1269+ 9379
1270+ 9379 CD 86 93         call Compara_cositas_H2
1271+ 937C
1272+ 937C 04               inc b
1273+ 937D 05               dec b
1274+ 937E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 937F
1276+ 937F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9380 06 00            ld b,0
1278+ 9382
1279+ 9382 CD 98 93         call Compara_cositas_L2
1280+ 9385 C9               ret
1281+ 9386
1282+ 9386 A7           Compara_cositas_H2 and a
1283+ 9387 28 0D            jr z,1F
1284+ 9389              ;    cp $fd
1285+ 9389              ;    jr z,1F
1286+ 9389              ;    cp $fe
1287+ 9389              ;    jr z,1F
1288+ 9389 FE FF            cp $ff
1289+ 938B 28 09            jr z,1F
1290+ 938D FE 01            cp $01
1291+ 938F 28 05            jr z,1F
1292+ 9391 FE 02            cp $02
1293+ 9393 28 01            jr z,1F
1294+ 9395 C0               ret nz
1295+ 9396 04           1 inc b
1296+ 9397 C9               ret
1297+ 9398
1298+ 9398 A7           Compara_cositas_L2 and a
1299+ 9399 28 0D            jr z,1F
1300+ 939B              ;    cp $fd
1301+ 939B              ;    jr z,1F
1302+ 939B FE FE            cp $fe
1303+ 939D 28 09            jr z,1F
1304+ 939F FE FF            cp $ff
1305+ 93A1 28 05            jr z,1F
1306+ 93A3 FE 01            cp $01
1307+ 93A5 28 01            jr z,1F
1308+ 93A7              ;    cp $02
1309+ 93A7              ;    jr z,1F
1310+ 93A7 C0               ret nz
1311+ 93A8 04           1 inc b
1312+ 93A9 C9               ret
1313+ 93AA
1314+ 93AA A7           Compara_cositas_H1 and a
1315+ 93AB 28 11            jr z,1F
1316+ 93AD              ;    cp $fd
1317+ 93AD              ;    jr z,1F
1318+ 93AD              ;    cp $fe
1319+ 93AD              ;    jr z,1F
1320+ 93AD FE FF            cp $ff
1321+ 93AF 28 0D            jr z,1F
1322+ 93B1 FE 01            cp $01
1323+ 93B3 28 09            jr z,1F
1324+ 93B5 FE 02            cp $02
1325+ 93B7 28 05            jr z,1F
1326+ 93B9 FE 03            cp $03
1327+ 93BB 28 01            jr z,1F
1328+ 93BD C0               ret nz
1329+ 93BE 04           1 inc b
1330+ 93BF C9               ret
1331+ 93C0
1332+ 93C0 A7           Compara_cositas_L1 and a
1333+ 93C1 28 0D            jr z,1F
1334+ 93C3              ;    cp $fd
1335+ 93C3              ;    jr z,1F
1336+ 93C3              ;    cp $fe
1337+ 93C3              ;    jr z,1F
1338+ 93C3              ;    cp $ff
1339+ 93C3              ;    jr z,1F
1340+ 93C3 FE 01            cp $01
1341+ 93C5 28 09            jr z,1F
1342+ 93C7 FE 02            cp $02
1343+ 93C9 28 05            jr z,1F
1344+ 93CB FE 03            cp $03
1345+ 93CD 28 01            jr z,1F
1346+ 93CF C0               ret nz
1347+ 93D0 04           1 inc b
1348+ 93D1 C9               ret
1349+ 93D2
1350+ 93D2 A7           Compara_cositas_H3 and a
1351+ 93D3 28 0D            jr z,1F
1352+ 93D5              ;    cp $fd
1353+ 93D5              ;    jr z,1F
1354+ 93D5 FE FE            cp $fe
1355+ 93D7 28 09            jr z,1F
1356+ 93D9 FE FF            cp $ff
1357+ 93DB 28 05            jr z,1F
1358+ 93DD FE 01            cp $01
1359+ 93DF 28 01            jr z,1F
1360+ 93E1              ;    cp $02
1361+ 93E1              ;    jr z,1F
1362+ 93E1              ;    cp $03
1363+ 93E1              ;    jr z,1F
1364+ 93E1 C0               ret nz
1365+ 93E2 04           1 inc b
1366+ 93E3 C9               ret
1367+ 93E4
1368+ 93E4 A7           Compara_cositas_L3 and a
1369+ 93E5 28 0D            jr z,1F
1370+ 93E7              ;    cp $fd
1371+ 93E7              ;    jr z,1F
1372+ 93E7              ;    cp $fe
1373+ 93E7              ;    jr z,1F
1374+ 93E7              ;    cp $ff
1375+ 93E7              ;    jr z,1F
1376+ 93E7 FE 01            cp $01
1377+ 93E9 28 09            jr z,1F
1378+ 93EB FE 02            cp $02
1379+ 93ED 28 05            jr z,1F
1380+ 93EF FE 03            cp $03
1381+ 93F1 28 01            jr z,1F
1382+ 93F3 C0               ret nz
1383+ 93F4 04           1 inc b
1384+ 93F5 C9               ret
1385+ 93F6
1386+ 93F6 A7           Compara_cositas_H4 and a
1387+ 93F7 28 11            jr z,1F
1388+ 93F9 FE FD            cp $fd
1389+ 93FB 28 0D            jr z,1F
1390+ 93FD FE FE            cp $fe
1391+ 93FF 28 09            jr z,1F
1392+ 9401 FE FF            cp $ff
1393+ 9403 28 05            jr z,1F
1394+ 9405 FE 01            cp $01
1395+ 9407 28 01            jr z,1F
1396+ 9409              ;    cp $02
1397+ 9409              ;    jr z,1F
1398+ 9409              ;    cp $03
1399+ 9409              ;    jr z,1F
1400+ 9409 C0               ret nz
1401+ 940A 04           1 inc b
1402+ 940B C9               ret
1403+ 940C
1404+ 940C A7           Compara_cositas_L4 and a
1405+ 940D 28 0D            jr z,1F
1406+ 940F              ;    cp $fd
1407+ 940F              ;    jr z,1F
1408+ 940F FE FE            cp $fe
1409+ 9411 28 09            jr z,1F
1410+ 9413 FE FF            cp $ff
1411+ 9415 28 05            jr z,1F
1412+ 9417 FE 01            cp $01
1413+ 9419 28 01            jr z,1F
1414+ 941B              ;    cp $02
1415+ 941B              ;    jr z,1F
1416+ 941B              ;    cp $03
1417+ 941B              ;    jr z,1F
1418+ 941B C0               ret nz
1419+ 941C 04           1 inc b
1420+ 941D C9               ret
# file closed: Disparo.asm
1483  941E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 941E              ; ******************************************************************************************************************************************************************************************
   2+ 941E              ;
   3+ 941E              ; 26/06/23
   4+ 941E              ;
   5+ 941E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 941E
   7+ 941E CD 02 97     Draw call Prepara_draw
   8+ 9421 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9422 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9423 28 05        	jr z,2F
  11+ 9425
  12+ 9425 3A CA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9428 18 0C        	jr 1F
  14+ 942A
  15+ 942A 2A C8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 942D 22 B8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9430 CD BF 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9433              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9433 CD 10 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9436
  21+ 9436 3A E4 89     1 ld a,(Ctrl_0)
  22+ 9439 CB 6F        	bit 5,a
  23+ 943B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 943D
  25+ 943D CD 55 94     	call Comprueba_limite_horizontal
  26+ 9440 CD E5 94     	call Comprueba_limite_vertical
  27+ 9443
  28+ 9443              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9443              ; -----------------------
  30+ 9443              ; -----------------------
  31+ 9443              ; -----------------------
  32+ 9443
  33+ 9443 CD 32 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9446 CD 69 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9449 CD C8 96     	call Define_rutina_de_impresion
  36+ 944C
  37+ 944C 3A E4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 944F CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9451 32 E4 89     	ld (Ctrl_0),a
  40+ 9454
  41+ 9454 C9           	ret
  42+ 9455
  43+ 9455              ; *******************************************************************************************************************************************************************************************
  44+ 9455              ;	21/01/23
  45+ 9455              ;
  46+ 9455              ; 	Comprueba_limite_horizontal.
  47+ 9455              ;
  48+ 9455              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9455              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9455              ;
  51+ 9455              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9455              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9455              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9455              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9455
  56+ 9455
  57+ 9455
  58+ 9455 3A E4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9458 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 945A 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 945C E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 945E 32 E4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9461 18 09            jr 6F
  64+ 9463 CB 5F        1 bit 3,a
  65+ 9465 28 0A            jr z,2F
  66+ 9467 E6 F7            and $f7
  67+ 9469 32 E4 89         ld (Ctrl_0),a
  68+ 946C CD BF 95     6 call Inicializacion
  69+ 946F 18 5B            jr 5F
  70+ 9471 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9472
  72+ 9472              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9472              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9472
  75+ 9472 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9473 2A F4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9476 CD DE 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9479 67           	ld h,a
  79+ 947A EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 947B CD DE 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 947E 67           	ld h,a
  82+ 947F A7           	and a
  83+ 9480 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9482 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9483 3A CA 89     	ld a,(Cuad_objeto)
  86+ 9486 FE 02        	cp 2
  87+ 9488 38 1E        	jr c,3F
  88+ 948A 28 1C        	jr z,3F
  89+ 948C 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 948D 28 23            jr z,7F
  91+ 948F 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9491 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9493 E1           	pop hl
  94+ 9494
  95+ 9494              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9494              ; _para indicar con E="2" en caso necesario.
  97+ 9494
  98+ 9494 E5               push hl
  99+ 9495 C5               push bc
 100+ 9496 CD DE 99     	call calcula_tercio
 101+ 9499 FE 01        	cp 1
 102+ 949B 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 949D CD CD 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 94A0 28 26            jr z,9F
 105+ 94A2 38 24            jr c,9F
 106+ 94A4 1E 00        11 ld e,0
 107+ 94A6 18 22            jr 8F
 108+ 94A8 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94A9 28 07        	jr z, 7F
 110+ 94AB 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94AD 1E 00         	ld e,0
 112+ 94AF E1           	pop hl
 113+ 94B0 18 04        	jr 4F
 114+ 94B2 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94B4 18 15            jr 10F
 116+ 94B6
 117+ 94B6              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94B6              ; _para indicar con E="2" en caso necesario.
 119+ 94B6
 120+ 94B6 E5           4 push hl
 121+ 94B7 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94B8 CD DE 99     	call calcula_tercio
 123+ 94BB FE 01        	cp 1
 124+ 94BD 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94BF CD CD 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94C2 28 04            jr z,9F
 127+ 94C4 30 02            jr nc,9F
 128+ 94C6 18 02        	jr 8F
 129+ 94C8 1E 02        9 ld e,2
 130+ 94CA C1           8 pop bc
 131+ 94CB E1           10 pop hl
 132+ 94CC C9           5 ret
 133+ 94CD
 134+ 94CD              ; --------------------
 135+ 94CD              ;
 136+ 94CD              ; 25/08/22
 137+ 94CD
 138+ 94CD CD DE 99     Comprueba_centro call calcula_tercio
 139+ 94D0 67               ld h,a
 140+ 94D1 08           	ex af,af
 141+ 94D2 FE 02        	cp 2
 142+ 94D4 38 07        	jr c,1F
 143+ 94D6 28 05        	jr z,1F
 144+ 94D8 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94DB 18 03        	jr 2F
 146+ 94DD 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94E0 08           2 ex af,af
 148+ 94E1 A7               and a
 149+ 94E2 ED 42            sbc hl,bc
 150+ 94E4 C9               ret
 151+ 94E5
 152+ 94E5              ; *********************************************************************************************************************************************************************************************
 153+ 94E5              ;
 154+ 94E5              ;   16/8/22
 155+ 94E5              ;
 156+ 94E5              ;	Comprueba_limite_vertical
 157+ 94E5              ;
 158+ 94E5              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94E5              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94E5              ;
 161+ 94E5
 162+ 94E5 2A B8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94E8 7D           	ld a,l
 164+ 94E9 E6 1F        	and $1F
 165+ 94EB 57           	ld d,a
 166+ 94EC 3A F6 89     	ld a,(Limite_vertical)
 167+ 94EF BA           	cp d 											; Límite - Posición.
 168+ 94F0 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94F1 3A CA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94F4 CB 47        	bit 0,a
 171+ 94F6 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94F8
 173+ 94F8              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94F8
 175+ 94F8 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94F9 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94FB
 178+ 94FB              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94FB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94FB
 181+ 94FB 3A BC 89         ld a,(Coordenada_X)
 182+ 94FE 16 0F            ld d,Centro_izquierda
 183+ 9500 A7               and a
 184+ 9501 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9502 28 1E            jr z,3F
 186+ 9504 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9506              ;                                                    ; _salimos sin modificar nada.
 188+ 9506 18 0E            jr 2F
 189+ 9508 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9509 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 950B
 192+ 950B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 950B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 950B
 195+ 950B 3A BC 89         ld a,(Coordenada_X)
 196+ 950E 16 10            ld d,Centro_derecha
 197+ 9510 A7               and a
 198+ 9511 92               sub d
 199+ 9512 28 0E            jr z,3F
 200+ 9514 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9516              ;                                                    ; _salimos sin modificar nada.
 202+ 9516 CB 43        2 bit 0,e
 203+ 9518 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 951A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 951B CD AF 95         call Modificaccionne
 206+ 951E C1           	pop bc
 207+ 951F CD BF 95         call Inicializacion
 208+ 9522 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9523
 210+ 9523              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9523
 212+ 9523 C5           4 push bc
 213+ 9524 01 B7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9527 0A           	ld a,(bc)
 215+ 9528 3D           	dec a
 216+ 9529 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 952A 7D           	ld a,l
 218+ 952B 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 952C CB 47        	bit 0,a
 220+ 952E 28 03        	jr z,5F
 221+ 9530 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9531 18 2E        	jr 7F
 223+ 9533
 224+ 9533              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9533
 226+ 9533 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9534 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9535 3A E4 89     	ld a,(Ctrl_0)
 229+ 9538 CB 4F        	bit 1,a
 230+ 953A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 953C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 953D
 233+ 953D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 953D
 235+ 953D 1C               inc e
 236+ 953E 1D               dec e
 237+ 953F 20 07            jr nz,12F
 238+ 9541 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9542 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9543 22 B8 89     	ld (Posicion_actual),hl
 241+ 9546 18 44        13 jr 9F
 242+ 9548 CB 43        12 bit 0,e
 243+ 954A 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 954C              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 954C C1           	pop bc
 246+ 954D 18 D3        	jr 3B
 247+ 954F 80           14 add b
 248+ 9550 6F               ld l,a
 249+ 9551 22 B8 89     	ld (Posicion_actual),hl
 250+ 9554 CD AF 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9557 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9559 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 955B 32 E4 89         ld (Ctrl_0),a
 254+ 955E F1           	pop af
 255+ 955F 18 2B        	jr 9F
 256+ 9561
 257+ 9561              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9561
 259+ 9561 F5           7 push af
 260+ 9562 3A E4 89     	ld a,(Ctrl_0)
 261+ 9565 CB 47        	bit 0,a
 262+ 9567 20 1D        	jr nz,8F
 263+ 9569 F1           	pop af
 264+ 956A
 265+ 956A              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 956A
 267+ 956A 1C           	inc e
 268+ 956B 1D               dec e
 269+ 956C 20 07            jr nz,10F
 270+ 956E 90           	sub b
 271+ 956F 6F               ld l,a
 272+ 9570 22 B8 89     	ld (Posicion_actual),hl
 273+ 9573 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9575              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9575 CB 43        10 bit 0,e
 276+ 9577 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9579              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9579 C1           	pop bc
 279+ 957A 18 A6        	jr 3B
 280+ 957C 90           16 sub b
 281+ 957D 6F               ld l,a
 282+ 957E 22 B8 89     	ld (Posicion_actual),hl
 283+ 9581 CD AF 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9584 18 06            jr 9F
 285+ 9586 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9588 32 E4 89         ld (Ctrl_0),a
 287+ 958B F1           	pop af
 288+ 958C C1           9 pop bc
 289+ 958D 1E 00        	ld e,0
 290+ 958F CD BF 95         call Inicializacion
 291+ 9592 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9593 08           	ex af,af
 293+ 9594 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9595 18 8B            jr 3B
 295+ 9597
 296+ 9597              ; --------------------
 297+ 9597
 298+ 9597 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9599 CD 1D 97     1 call PreviousScan
 300+ 959C 10 FB            djnz 1B
 301+ 959E 22 B8 89     	ld (Posicion_actual),hl
 302+ 95A1 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 95A2 C9           	ret
 304+ 95A3
 305+ 95A3              ; --------------------
 306+ 95A3
 307+ 95A3 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 95A5 CD 0E 97     1 call NextScan
 309+ 95A8 10 FB            djnz 1B
 310+ 95AA 22 B8 89     	ld (Posicion_actual),hl
 311+ 95AD AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95AE C9           	ret
 313+ 95AF
 314+ 95AF              ; --------------------
 315+ 95AF              ;
 316+ 95AF              ;	22/01/23
 317+ 95AF              ;
 318+ 95AF              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95AF              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95AF              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95AF
 322+ 95AF
 323+ 95AF              Modificaccionne
 324+ 95AF
 325+ 95AF 3A CA 89     	ld a,(Cuad_objeto)
 326+ 95B2 FE 02        	cp 2
 327+ 95B4 CC 97 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95B7 DC 97 95         call c,Modifica_Pos_actual
 329+ 95BA C8           	ret z
 330+ 95BB CD A3 95         call Modifica_Pos_actual2
 331+ 95BE C9               ret
 332+ 95BF
 333+ 95BF              ; *************************************************************************************************************************************************************************************************
 334+ 95BF              ;
 335+ 95BF              ;	13/8/22
 336+ 95BF              ;
 337+ 95BF              ;	Inicializacion
 338+ 95BF              ;
 339+ 95BF              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95BF              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95BF              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95BF              ;
 343+ 95BF              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95BF              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95BF              ;	_ desaparece/aparece.
 346+ 95BF
 347+ 95BF              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95BF              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95BF              ;
 350+ 95BF              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95BF              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95BF              ; 		   [E] ="0"
 353+ 95BF
 354+ 95BF              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95BF
 356+ 95BF CD DE 99     Inicializacion call calcula_tercio
 357+ 95C2 28 36        	jr z,primit
 358+ 95C4 E6 02        	and 2
 359+ 95C6 20 07        	jr nz,segmit
 360+ 95C8 7D           	ld a,l
 361+ 95C9 FE 7F        	cp $7f
 362+ 95CB 38 2D        	jr c,primit
 363+ 95CD 28 2B        	jr z,primit
 364+ 95CF CD 2C 96     segmit call column
 365+ 95D2 38 13        	jr c,tercuad
 366+ 95D4 3E 04        cuarcuad ld a,4
 367+ 95D6 32 CA 89     	ld (Cuad_objeto),a
 368+ 95D9 21 20 48     	ld hl,$4820
 369+ 95DC 22 F4 89     	ld (Limite_horizontal),hl
 370+ 95DF 21 F6 89     	ld hl,Limite_vertical
 371+ 95E2 36 0D        	ld (hl),$0d
 372+ 95E4 08           	ex af,af
 373+ 95E5 18 3C        	jr 1F
 374+ 95E7              tercuad
 375+ 95E7 3E 03        	ld a,3
 376+ 95E9 32 CA 89     	ld (Cuad_objeto),a
 377+ 95EC 21 20 48     	ld hl,$4820
 378+ 95EF 22 F4 89     	ld (Limite_horizontal),hl
 379+ 95F2 21 F6 89     	ld hl,Limite_vertical
 380+ 95F5 36 12        	ld (hl),$12
 381+ 95F7 08           	ex af,af
 382+ 95F8 18 29        	jr 1F
 383+ 95FA CD 2C 96     primit call column
 384+ 95FD 38 13        	jr c, primcuad
 385+ 95FF              segcuad
 386+ 95FF 3E 02        	ld a,2
 387+ 9601 32 CA 89     	ld (Cuad_objeto),a
 388+ 9604 21 C0 4F     	ld hl,$4fc0
 389+ 9607 22 F4 89     	ld (Limite_horizontal),hl
 390+ 960A 21 F6 89     	ld hl,Limite_vertical
 391+ 960D 36 0D        	ld (hl),$0d
 392+ 960F 08           	ex af,af
 393+ 9610 18 11        	jr 1F
 394+ 9612              primcuad
 395+ 9612 3E 01        	ld a,1
 396+ 9614 32 CA 89     	ld (Cuad_objeto),a
 397+ 9617 21 C0 4F     	ld hl,$4fc0
 398+ 961A 22 F4 89     	ld (Limite_horizontal),hl
 399+ 961D 21 F6 89     	ld hl,Limite_vertical
 400+ 9620 36 12        	ld (hl),$12
 401+ 9622 08           	ex af,af
 402+ 9623 CD 69 9D     1 call Genera_coordenadas
 403+ 9626 21 E4 89     	ld hl,Ctrl_0
 404+ 9629 CB EE        	set 5,(hl)
 405+ 962B C9           	ret
 406+ 962C
 407+ 962C              ; ------------------------------------------------------------------------------------------------------------------
 408+ 962C
 409+ 962C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 962C              ;
 411+ 962C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 962C
 413+ 962C 7D           column ld a,l
 414+ 962D E6 1F        	and $1f
 415+ 962F FE 10         	cp $10
 416+ 9631 C9            	ret
 417+ 9632
 418+ 9632              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9632              ;
 420+ 9632              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9632              ;
 422+ 9632              ; 14/12/22
 423+ 9632              ;
 424+ 9632              ;	Modifica: A y BC.
 425+ 9632
 426+ 9632 3A CA 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9635 E6 01        	and 1
 428+ 9637 28 17        	jr z,1F
 429+ 9639
 430+ 9639              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9639
 432+ 9639 3A BC 89     	ld a,(Coordenada_X)
 433+ 963C 47           	ld b,a
 434+ 963D 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 963E 79           	ld a,c
 436+ 963F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9640 38 08        	jr c,2F
 438+ 9642 47           	ld b,a
 439+ 9643 79           	ld a,c
 440+ 9644 90           	sub b
 441+ 9645 32 F3 89     	ld (Columnas),a
 442+ 9648 18 1B        	jr 4F
 443+ 964A 79           2 ld a,c
 444+ 964B 32 F3 89     	ld (Columnas),a
 445+ 964E 18 15        	jr 4F
 446+ 9650
 447+ 9650              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9650
 449+ 9650 3A BC 89     1 ld a,(Coordenada_X)
 450+ 9653 81           	add c
 451+ 9654 3D           	dec a
 452+ 9655 D6 1F        	sub $1f
 453+ 9657 38 08        	jr c,3F
 454+ 9659 47           	ld b,a
 455+ 965A 79           	ld a,c
 456+ 965B 90           	sub b
 457+ 965C 32 F3 89     	ld (Columnas),a
 458+ 965F 18 04        	jr 4F
 459+ 9661 79           3 ld a,c
 460+ 9662 32 F3 89     	ld (Columnas),a
 461+ 9665 D9           4 exx
 462+ 9666 4F           	ld c,a
 463+ 9667 D9           	exx
 464+ 9668 C9            ret
 465+ 9669
 466+ 9669              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9669              ;
 468+ 9669              ;   19/7/23
 469+ 9669              ;
 470+ 9669              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9669              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9669              ;
 473+ 9669              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9669              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9669              ;
 476+ 9669              ;	DESTRUYE: HL,B Y A.
 477+ 9669
 478+ 9669 3A CA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 966C FE 02        	cp 2
 480+ 966E 38 18        	jr c,1F
 481+ 9670 28 16        	jr z,1F
 482+ 9672 E6 01        	and 1
 483+ 9674 28 0D        	jr z,3F
 484+ 9676
 485+ 9676              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9676
 487+ 9676 CD BC 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9679
 489+ 9679 7D           9 ld a,l
 490+ 967A E6 1F        	and $1f
 491+ 967C 28 2A        	jr z,7F
 492+ 967E 2B           	dec hl
 493+ 967F 10 F8        	djnz 9B
 494+ 9681 18 25        	jr 7F
 495+ 9683
 496+ 9683              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9683
 498+ 9683 2A B8 89     3 ld hl,(Posicion_actual)
 499+ 9686 18 20        	jr 7F
 500+ 9688
 501+ 9688 28 14        1 jr z,2F
 502+ 968A
 503+ 968A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 968A
 505+ 968A CD BC 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 968D
 507+ 968D 7D           4 ld a,l
 508+ 968E E6 1F        	and $1f
 509+ 9690 28 03        	jr z,6F
 510+ 9692 2B           	dec hl
 511+ 9693 10 F8        	djnz 4B
 512+ 9695 06 0F        6 ld b,15
 513+ 9697 CD 1D 97     5 call PreviousScan
 514+ 969A 10 FB        	djnz 5B
 515+ 969C 18 0A        	jr 7F
 516+ 969E
 517+ 969E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 969E
 519+ 969E CD BC 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 96A1 06 0F        	ld b,15
 521+ 96A3 CD 1D 97     8 call PreviousScan
 522+ 96A6 10 FB        	djnz 8B
 523+ 96A8
 524+ 96A8 E5           7 push hl
 525+ 96A9 DD E1        	pop ix
 526+ 96AB
 527+ 96AB 2A BA 89     	ld hl,(Puntero_objeto)
 528+ 96AE E5           	push hl
 529+ 96AF FD E1        	pop iy
 530+ 96B1
 531+ 96B1              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96B1
 533+ 96B1 3A E4 89     	ld a,(Ctrl_0)
 534+ 96B4 CB 77        	bit 6,a
 535+ 96B6 C8           	ret z
 536+ 96B7
 537+ 96B7              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96B7              ; _ entidad / Amadeus´.
 539+ 96B7
 540+ 96B7 DD 22 3E 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96BB
 542+ 96BB C9           	ret
 543+ 96BC
 544+ 96BC              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96BC              ;
 546+ 96BC              ;	2/1/23
 547+ 96BC              ;
 548+ 96BC              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96BC              ;
 550+ 96BC              ;	Tras esta rutina tenemos:
 551+ 96BC              ;
 552+ 96BC              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96BC              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96BC              ;
 555+ 96BC              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96BC
 557+ 96BC 2A B8 89     Operandos ld hl,(Posicion_actual)
 558+ 96BF 3A F3 89     	ld a,(Columnas)
 559+ 96C2 3D           	dec a
 560+ 96C3 20 01        	jr nz,1F
 561+ 96C5 3C           	inc a
 562+ 96C6 47           1 ld b,a
 563+ 96C7 C9           	ret
 564+ 96C8
 565+ 96C8              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96C8              ;
 567+ 96C8              ;	3/1/23
 568+ 96C8              ;
 569+ 96C8              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96C8              ;
 571+ 96C8              ;	Destruye: A,B,HL y DE.
 572+ 96C8
 573+ 96C8              Define_rutina_de_impresion
 574+ 96C8
 575+ 96C8 3A B7 89     	ld a,(Columns)
 576+ 96CB 47           	ld b,a
 577+ 96CC 3A F3 89     	ld a,(Columnas)
 578+ 96CF B8           	cp b
 579+ 96D0 20 0D        	jr nz,2f
 580+ 96D2
 581+ 96D2              ;	La entidad se imprime entera.
 582+ 96D2
 583+ 96D2 21 AE 97     	ld hl, Indice_entidades_completas
 584+ 96D5 E6 01        	and 1
 585+ 96D7 28 02        	jr z,1F
 586+ 96D9
 587+ 96D9 23           	inc hl
 588+ 96DA 23           	inc hl
 589+ 96DB
 590+ 96DB CD 88 8D     1 call Extrae_address
 591+ 96DE C9           	ret		;	ret
 592+ 96DF
 593+ 96DF              ;	La entidad no se imprime entera en pantalla.
 594+ 96DF
 595+ 96DF 3A CA 89     2 ld a,(Cuad_objeto)
 596+ 96E2 E6 01        	and 1
 597+ 96E4 28 17        	jr z,3F
 598+ 96E6
 599+ 96E6              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96E6
 601+ 96E6 21 B2 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96E9 3A B7 89     4 ld a,(Columns)
 603+ 96EC E6 01        	and 1
 604+ 96EE 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96F0
 606+ 96F0 23           	inc hl
 607+ 96F1 23           	inc hl
 608+ 96F2
 609+ 96F2 3A F3 89     	ld a,(Columnas)
 610+ 96F5 E6 01        	and 1
 611+ 96F7 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96F9
 613+ 96F9 23           	inc hl
 614+ 96FA 23           	inc hl
 615+ 96FB
 616+ 96FB 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96FD
 618+ 96FD 21 B8 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9700 18 E7        	jr 4B
 620+ 9702
 621+ 9702              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9702              ;
 623+ 9702              ;	Prepara_draw
 624+ 9702              ;
 625+ 9702              ;	Es una rutina de carga.
 626+ 9702              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9702              ;
 628+ 9702              ;	FUNCIONAMIENTO:
 629+ 9702              ;
 630+ 9702              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9702              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9702              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9702              ;
 634+ 9702              ;	DESTRUYE:
 635+ 9702              ;
 636+ 9702              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9702
 638+ 9702 21 B6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9705 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9706 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9707 4E           	ld c,(hl)
 642+ 9708 2A B8 89     	ld hl,(Posicion_actual)
 643+ 970B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 970D C9           	ret
 645+ 970E
 646+ 970E              ;----------------------------------------------------------------------------------------------------------------
 647+ 970E              ;
 648+ 970E              ;	5/08/22
 649+ 970E              ;
 650+ 970E              ;   NextScan.
 651+ 970E              ;
 652+ 970E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 970E              ;
 654+ 970E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 970E              ;
 656+ 970E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 970E              ;
 658+ 970E              ;       DESTRUIDOS: AF y HL !!!
 659+ 970E              ;
 660+ 970E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 970E              ;
 662+ 970E
 663+ 970E 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 970F 7C               ld a,h
 665+ 9710 E6 07            and 7
 666+ 9712 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9713
 668+ 9713 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9714 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9716 6F               ld l,a
 671+ 9717 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9718
 673+ 9718 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9719 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 971B 67               ld h,a
 676+ 971C C9               ret
 677+ 971D
 678+ 971D              ;----------------------------------------------------------------------------------------------------------------
 679+ 971D              ;
 680+ 971D              ;	5/08/22
 681+ 971D              ;
 682+ 971D              ;   PreviousScan.
 683+ 971D              ;
 684+ 971D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 971D              ;
 686+ 971D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 971D              ;
 688+ 971D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 971D              ;
 690+ 971D              ;       DESTRUIDOS: AF y HL !!!
 691+ 971D              ;
 692+ 971D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 971D              ;
 694+ 971D
 695+ 971D 7C           PreviousScan ld a,h
 696+ 971E 25               dec h               ; Dec H.
 697+ 971F E6 07            and 7
 698+ 9721 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9722
 700+ 9722 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9723 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9725 6F               ld l,a
 703+ 9726 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9727
 705+ 9727 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9728 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 972A 67               ld h,a
 708+ 972B C9               ret
 709+ 972C
 710+ 972C              ; -----------------------------------------------------------------------------------
 711+ 972C              ;
 712+ 972C              ;	31/7/23
 713+ 972C              ;
 714+ 972C              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 972C              ;	Extrae fotos de Album_de_fotos.
 716+ 972C
 717+ 972C              Extrae_foto_entidades
 718+ 972C
 719+ 972C              ;	ld a,(Contador_de_frames)
 720+ 972C              ;	cp $1e
 721+ 972C              ;	jr z,$
 722+ 972C
 723+ 972C 21 01 70     	ld hl,Album_de_fotos+1
 724+ 972F 7E           	ld a,(hl)
 725+ 9730 A7           	and a
 726+ 9731 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 9732
 728+ 9732 3A 05 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 9735 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 730+ 9736 C8           	ret z
 731+ 9737
 732+ 9737              ; -----------------------------------
 733+ 9737
 734+ 9737 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 973B 31 00 70     	ld sp,Album_de_fotos
 736+ 973E
 737+ 973E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 9740 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 9741 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 9742
 741+ 9742 ED 73 0C 8A  	ld (Stack_2),sp
 742+ 9746 ED 7B 0A 8A  	ld sp,(Stack)
 743+ 974A
 744+ 974A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 974A
 746+ 974A 3E CD        	ld a,$cd
 747+ 974C 32 54 97     	ld (Imprime),a
 748+ 974F EB           	ex de,hl
 749+ 9750 22 55 97     	ld (Imprime+1),hl
 750+ 9753 EB           	ex de,hl
 751+ 9754
 752+ 9754              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 9754
 754+ 9754 00 00 00     Imprime db 0,0,0
 755+ 9757
 756+ 9757 ED 73 0A 8A  	ld (Stack),sp
 757+ 975B
 758+ 975B 3A 05 8A     	ld a,(Numero_de_malotes)
 759+ 975E 3D           	dec a
 760+ 975F 28 09        	jr z,1F
 761+ 9761 32 05 8A      	ld (Numero_de_malotes),a
 762+ 9764
 763+ 9764 ED 7B 0C 8A  	ld sp,(Stack_2)
 764+ 9768 18 D4        	jr 2B
 765+ 976A
 766+ 976A AF           1 xor a
 767+ 976B 32 0C 8A     	ld (Stack_2),a
 768+ 976E
 769+ 976E C9           	ret
 770+ 976F
 771+ 976F              ; -----------------------------------------------------------------------------------
 772+ 976F              ;
 773+ 976F              ;	28/2/23
 774+ 976F              ;
 775+ 976F              ;	Pinta los disparos generados.
 776+ 976F
 777+ 976F              Extrae_foto_disparos
 778+ 976F
 779+ 976F 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 780+ 9772 7E               ld a,(hl)
 781+ 9773 A7               and a
 782+ 9774 C8               ret z
 783+ 9775
 784+ 9775 3A 2E 8A     	ld a,(Numero_de_disparotes)
 785+ 9778 A7           	and a
 786+ 9779 C8           	ret z
 787+ 977A ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 977E 31 0D 72     	ld sp,Album_de_fotos_disparos
 789+ 9781
 790+ 9781 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 9783 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 9784 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9785
 794+ 9785 ED 73 0C 8A  	ld (Stack_2),sp
 795+ 9789 ED 7B 0A 8A  	ld sp,(Stack)
 796+ 978D
 797+ 978D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 978D
 799+ 978D 3E CD        	ld a,$cd
 800+ 978F 32 97 97     	ld (Imprime2),a
 801+ 9792 EB           	ex de,hl
 802+ 9793 22 98 97     	ld (Imprime2+1),hl
 803+ 9796 EB           	ex de,hl
 804+ 9797
 805+ 9797              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9797
 807+ 9797 00 00 00     Imprime2 db 0,0,0
 808+ 979A
 809+ 979A 3A 2E 8A     	ld a,(Numero_de_disparotes)
 810+ 979D 3D           	dec a
 811+ 979E 28 09        	jr z,1F
 812+ 97A0 32 2E 8A      	ld (Numero_de_disparotes),a
 813+ 97A3
 814+ 97A3 ED 7B 0C 8A  	ld sp,(Stack_2)
 815+ 97A7 18 D8        	jr 2B
 816+ 97A9
 817+ 97A9 AF           1 xor a
 818+ 97AA 32 0C 8A     	ld (Stack_2),a
 819+ 97AD C9           	ret
 820+ 97AE
# file closed: Draw_XOR.asm
1484  97AE              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97AE              ;   índices de Rutinas de impresión.
   2+ 97AE
   3+ 97AE BE 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97B0 EB 97            defw Pinta_Amadeus_3x2
   5+ 97B2
   6+ 97B2 41 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97B4 E1 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97B6 95 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97B8
  10+ 97B8 6B 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97BA 6F 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97BC 23 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97BE
  14+ 97BE
  15+ 97BE              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97BE              ;
  17+ 97BE              ;   12/12/22
  18+ 97BE              ;
  19+ 97BE              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97BE              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97BE              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97BE              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97BE              ;
  24+ 97BE              ;   Modifica: DE y HL.
  25+ 97BE
  26+ 97BE ED 73 0A 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97C2 FD F9        	ld sp,iy
  28+ 97C4 06 10            ld b,16
  29+ 97C6 D1           1 pop de
  30+ 97C7 7B               ld a,e
  31+ 97C8 AE               xor (hl)
  32+ 97C9 77           	ld (hl),a
  33+ 97CA 23           	inc hl
  34+ 97CB 7A               ld a,d
  35+ 97CC AE               xor (hl)
  36+ 97CD 77           	ld (hl),a
  37+ 97CE 2B           	dec hl
  38+ 97CF 24           	inc h
  39+ 97D0 7C               ld a,h
  40+ 97D1 E6 07            and 7
  41+ 97D3 20 0A            jr nz,2F
  42+ 97D5 7D               ld a,l
  43+ 97D6 C6 20            add a,$20
  44+ 97D8 6F               ld l,a
  45+ 97D9 38 04            jr c,2F
  46+ 97DB 7C               ld a,h
  47+ 97DC D6 08            sub 8
  48+ 97DE 67               ld h,a
  49+ 97DF 7C           2 ld a,h
  50+ 97E0 FE 58            cp $58
  51+ 97E2 28 02            jr z,3F
  52+ 97E4 10 E0            djnz 1B
  53+ 97E6 ED 7B 0A 8A  3 ld sp,(Stack)
  54+ 97EA C9           	ret
  55+ 97EB
  56+ 97EB ED 73 0A 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97EF FD F9        	ld sp,iy
  58+ 97F1 06 08            ld b,8
  59+ 97F3 D1           1 pop de
  60+ 97F4 7B               ld a,e
  61+ 97F5 AE               xor (hl)
  62+ 97F6 77           	ld (hl),a
  63+ 97F7 23           	inc hl
  64+ 97F8 7A               ld a,d
  65+ 97F9 AE               xor (hl)
  66+ 97FA 77           	ld (hl),a
  67+ 97FB 23           	inc hl
  68+ 97FC D1           	pop de
  69+ 97FD 7B               ld a,e
  70+ 97FE AE               xor (hl)
  71+ 97FF 77           	ld (hl),a
  72+ 9800 2B           	dec hl
  73+ 9801 2B           	dec hl
  74+ 9802 24           	inc h
  75+ 9803 7C               ld a,h
  76+ 9804 E6 07            and 7
  77+ 9806 20 0A            jr nz,2F
  78+ 9808 7D               ld a,l
  79+ 9809 C6 20            add a,$20
  80+ 980B 6F               ld l,a
  81+ 980C 38 04            jr c,2F
  82+ 980E 7C               ld a,h
  83+ 980F D6 08            sub 8
  84+ 9811 67               ld h,a
  85+ 9812 7C           2 ld a,h
  86+ 9813 FE 58            cp $58
  87+ 9815 28 25            jr z,4F
  88+ 9817 7A               ld a,d
  89+ 9818 AE               xor (hl)
  90+ 9819 77               ld (hl),a
  91+ 981A D1           	pop de
  92+ 981B 23           	inc hl
  93+ 981C 7B               ld a,e
  94+ 981D AE               xor (hl)
  95+ 981E 77           	ld (hl),a
  96+ 981F 23           	inc hl
  97+ 9820 7A               ld a,d
  98+ 9821 AE               xor (hl)
  99+ 9822 77           	ld (hl),a
 100+ 9823 2B           	dec hl
 101+ 9824 2B           	dec hl
 102+ 9825 24           	inc h
 103+ 9826 7C               ld a,h
 104+ 9827 E6 07            and 7
 105+ 9829 20 0A            jr nz,3F
 106+ 982B 7D               ld a,l
 107+ 982C C6 20            add a,$20
 108+ 982E 6F               ld l,a
 109+ 982F 38 04            jr c,3F
 110+ 9831 7C               ld a,h
 111+ 9832 D6 08            sub 8
 112+ 9834 67               ld h,a
 113+ 9835 7C           3 ld a,h
 114+ 9836 FE 58            cp $58
 115+ 9838 28 02            jr z,4F
 116+ 983A 10 B7            djnz 1B
 117+ 983C ED 7B 0A 8A  4 ld sp,(Stack)
 118+ 9840 C9           	ret
 119+ 9841
 120+ 9841              ; ---------------------------------------------------
 121+ 9841
 122+ 9841 ED 73 0A 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9845 FD F9        	ld sp,iy
 124+ 9847
 125+ 9847              ; >>>
 126+ 9847
 127+ 9847 06 10            ld b,16
 128+ 9849 D1           1 pop de
 129+ 984A 7A           	ld a,d
 130+ 984B AE           	xor (hl)
 131+ 984C 77           	ld (hl),a
 132+ 984D 24           	inc h
 133+ 984E 7C               ld a,h
 134+ 984F E6 07            and 7
 135+ 9851 20 0C            jr nz,2F
 136+ 9853 7D               ld a,l
 137+ 9854 C6 20            add a,$20
 138+ 9856 6F               ld l,a
 139+ 9857 38 06            jr c,2F
 140+ 9859 7C               ld a,h
 141+ 985A D6 08            sub 8
 142+ 985C 67               ld h,a
 143+ 985D 18 00            jr 2F
 144+ 985F 7C           2 ld a,h
 145+ 9860 FE 58            cp $58
 146+ 9862 28 02            jr z,3F
 147+ 9864 10 E3            djnz 1B
 148+ 9866 ED 7B 0A 8A  3 ld sp,(Stack)
 149+ 986A C9           	ret
 150+ 986B
 151+ 986B ED 73 0A 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 986F FD F9        	ld sp,iy
 153+ 9871
 154+ 9871              ; >>>
 155+ 9871
 156+ 9871 06 10            ld b,16
 157+ 9873 D1           1 pop de
 158+ 9874 7B           	ld a,e
 159+ 9875 AE           	xor (hl)
 160+ 9876 77           	ld (hl),a
 161+ 9877 24           	inc h
 162+ 9878 7C               ld a,h
 163+ 9879 E6 07            and 7
 164+ 987B 20 0C            jr nz,2F
 165+ 987D 7D               ld a,l
 166+ 987E C6 20            add a,$20
 167+ 9880 6F               ld l,a
 168+ 9881 38 06            jr c,2F
 169+ 9883 7C               ld a,h
 170+ 9884 D6 08            sub 8
 171+ 9886 67               ld h,a
 172+ 9887 18 00            jr 2F
 173+ 9889 7C           2 ld a,h
 174+ 988A FE 58            cp $58
 175+ 988C 28 02            jr z,3F
 176+ 988E 10 E3            djnz 1B
 177+ 9890 ED 7B 0A 8A  3 ld sp,(Stack)
 178+ 9894 C9           	ret
 179+ 9895
 180+ 9895              ; ---------------------------------------------------
 181+ 9895
 182+ 9895 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9899 FD F9        	ld sp,iy
 184+ 989B 06 08            ld b,8
 185+ 989D D1           1 pop de
 186+ 989E 7A           	ld a,d
 187+ 989F AE           	xor (hl)
 188+ 98A0 77           	ld (hl),a
 189+ 98A1 23           	inc hl
 190+ 98A2 D1           	pop de
 191+ 98A3 7B           	ld a,e
 192+ 98A4 AE           	xor (hl)
 193+ 98A5 77           	ld (hl),a
 194+ 98A6 2B           	dec hl
 195+ 98A7 24            	inc h
 196+ 98A8 7C               ld a,h
 197+ 98A9 E6 07            and 7
 198+ 98AB 20 0A            jr nz,2F
 199+ 98AD 7D               ld a,l
 200+ 98AE C6 20            add a,$20
 201+ 98B0 6F               ld l,a
 202+ 98B1 38 04            jr c,2F
 203+ 98B3 7C               ld a,h
 204+ 98B4 D6 08            sub 8
 205+ 98B6 67               ld h,a
 206+ 98B7 7C           2 ld a,h
 207+ 98B8 FE 58            cp $58
 208+ 98BA 28 20            jr z,4F
 209+ 98BC D1               pop de
 210+ 98BD 7B           	ld a,e
 211+ 98BE AE           	xor (hl)
 212+ 98BF 77           	ld (hl),a
 213+ 98C0 23           	inc hl
 214+ 98C1 7A           	ld a,d
 215+ 98C2 AE           	xor (hl)
 216+ 98C3 77           	ld (hl),a
 217+ 98C4 2B           	dec hl
 218+ 98C5 24           	inc h
 219+ 98C6 7C               ld a,h
 220+ 98C7 E6 07            and 7
 221+ 98C9 20 0A            jr nz,3F
 222+ 98CB 7D               ld a,l
 223+ 98CC C6 20            add a,$20
 224+ 98CE 6F               ld l,a
 225+ 98CF 38 04            jr c,3F
 226+ 98D1 7C               ld a,h
 227+ 98D2 D6 08            sub 8
 228+ 98D4 67               ld h,a
 229+ 98D5 7C           3 ld a,h
 230+ 98D6 FE 58            cp $58
 231+ 98D8 28 02            jr z,4F
 232+ 98DA 10 C1            djnz 1B
 233+ 98DC ED 7B 0A 8A  4 ld sp,(Stack)
 234+ 98E0 C9           	ret
 235+ 98E1
 236+ 98E1 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98E5 FD F9        	ld sp,iy
 238+ 98E7 06 08            ld b,8
 239+ 98E9 D1           1 pop de
 240+ 98EA D1           	pop de
 241+ 98EB 7B           	ld a,e
 242+ 98EC AE           	xor (hl)
 243+ 98ED 77           	ld (hl),a
 244+ 98EE 24            	inc h
 245+ 98EF 7C               ld a,h
 246+ 98F0 E6 07            and 7
 247+ 98F2 20 0A            jr nz,2F
 248+ 98F4 7D               ld a,l
 249+ 98F5 C6 20            add a,$20
 250+ 98F7 6F               ld l,a
 251+ 98F8 38 04            jr c,2F
 252+ 98FA 7C               ld a,h
 253+ 98FB D6 08            sub 8
 254+ 98FD 67               ld h,a
 255+ 98FE 7C           2 ld a,h
 256+ 98FF FE 58            cp $58
 257+ 9901 28 1B            jr z,4F
 258+ 9903 D1               pop de
 259+ 9904 7A           	ld a,d
 260+ 9905 AE           	xor (hl)
 261+ 9906 77           	ld (hl),a
 262+ 9907 24           	inc h
 263+ 9908 7C               ld a,h
 264+ 9909 E6 07            and 7
 265+ 990B 20 0A            jr nz,3F
 266+ 990D 7D               ld a,l
 267+ 990E C6 20            add a,$20
 268+ 9910 6F               ld l,a
 269+ 9911 38 04            jr c,3F
 270+ 9913 7C               ld a,h
 271+ 9914 D6 08            sub 8
 272+ 9916 67               ld h,a
 273+ 9917 7C           3 ld a,h
 274+ 9918 FE 58            cp $58
 275+ 991A 28 02            jr z,4F
 276+ 991C 10 CB            djnz 1B
 277+ 991E ED 7B 0A 8A  4 ld sp,(Stack)
 278+ 9922 C9           	ret
 279+ 9923
 280+ 9923 ED 73 0A 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9927 FD F9        	ld sp,iy
 282+ 9929 06 08            ld b,8
 283+ 992B D1           1 pop de
 284+ 992C 7B           	ld a,e
 285+ 992D AE           	xor (hl)
 286+ 992E 77           	ld (hl),a
 287+ 992F 23           	inc hl
 288+ 9930 7A           	ld a,d
 289+ 9931 AE           	xor (hl)
 290+ 9932 77           	ld (hl),a
 291+ 9933 2B           	dec hl
 292+ 9934 24             	inc h
 293+ 9935 7C               ld a,h
 294+ 9936 E6 07            and 7
 295+ 9938 20 0A            jr nz,2F
 296+ 993A 7D               ld a,l
 297+ 993B C6 20            add a,$20
 298+ 993D 6F               ld l,a
 299+ 993E 38 04            jr c,2F
 300+ 9940 7C               ld a,h
 301+ 9941 D6 08            sub 8
 302+ 9943 67               ld h,a
 303+ 9944 7C           2 ld a,h
 304+ 9945 FE 58            cp $58
 305+ 9947 28 21            jr z,4F
 306+ 9949 D1               pop de
 307+ 994A 7A           	ld a,d
 308+ 994B AE           	xor (hl)
 309+ 994C 77           	ld (hl),a
 310+ 994D 23           	inc hl
 311+ 994E D1               pop de
 312+ 994F 7B           	ld a,e
 313+ 9950 AE           	xor (hl)
 314+ 9951 77           	ld (hl),a
 315+ 9952 2B           	dec hl
 316+ 9953 24           	inc h
 317+ 9954 7C               ld a,h
 318+ 9955 E6 07            and 7
 319+ 9957 20 0A            jr nz,3F
 320+ 9959 7D               ld a,l
 321+ 995A C6 20            add a,$20
 322+ 995C 6F               ld l,a
 323+ 995D 38 04            jr c,3F
 324+ 995F 7C               ld a,h
 325+ 9960 D6 08            sub 8
 326+ 9962 67               ld h,a
 327+ 9963 7C           3 ld a,h
 328+ 9964 FE 58            cp $58
 329+ 9966 28 02            jr z,4F
 330+ 9968 10 C1            djnz 1B
 331+ 996A ED 7B 0A 8A  4 ld sp,(Stack)
 332+ 996E C9           	ret
 333+ 996F
 334+ 996F ED 73 0A 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9973 FD F9        	ld sp,iy
 336+ 9975 06 08            ld b,8
 337+ 9977 D1           1 pop de
 338+ 9978 7B           	ld a,e
 339+ 9979 AE           	xor (hl)
 340+ 997A 77           	ld (hl),a
 341+ 997B 24            	inc h
 342+ 997C 7C               ld a,h
 343+ 997D E6 07            and 7
 344+ 997F 20 0A            jr nz,2F
 345+ 9981 7D               ld a,l
 346+ 9982 C6 20            add a,$20
 347+ 9984 6F               ld l,a
 348+ 9985 38 04            jr c,2F
 349+ 9987 7C               ld a,h
 350+ 9988 D6 08            sub 8
 351+ 998A 67               ld h,a
 352+ 998B 7C           2 ld a,h
 353+ 998C FE 58            cp $58
 354+ 998E 28 1C            jr z,4F
 355+ 9990 D1               pop de
 356+ 9991 7A           	ld a,d
 357+ 9992 AE           	xor (hl)
 358+ 9993 77           	ld (hl),a
 359+ 9994 24           	inc h
 360+ 9995 7C               ld a,h
 361+ 9996 E6 07            and 7
 362+ 9998 20 0A            jr nz,3F
 363+ 999A 7D               ld a,l
 364+ 999B C6 20            add a,$20
 365+ 999D 6F               ld l,a
 366+ 999E 38 04            jr c,3F
 367+ 99A0 7C               ld a,h
 368+ 99A1 D6 08            sub 8
 369+ 99A3 67               ld h,a
 370+ 99A4 7C           3 ld a,h
 371+ 99A5 FE 58            cp $58
 372+ 99A7 28 03            jr z,4F
 373+ 99A9 D1               pop de
 374+ 99AA 10 CB            djnz 1B
 375+ 99AC ED 7B 0A 8A  4 ld sp,(Stack)
 376+ 99B0 C9           	ret
 377+ 99B1
 378+ 99B1              ; ---------------------------------------------------
 379+ 99B1              ;
 380+ 99B1              ;   27/02/23
 381+ 99B1              ;
 382+ 99B1              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99B1              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99B1              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99B1
 386+ 99B1 ED 73 0A 8A  Pinta_Disparo ld (Stack),sp
 387+ 99B5 FD F9            ld sp,iy
 388+ 99B7 06 03            ld b,3
 389+ 99B9 D1           1 pop de
 390+ 99BA 7B               ld a,e
 391+ 99BB AE               xor (hl)
 392+ 99BC 77               ld (hl),a
 393+ 99BD 23               inc hl
 394+ 99BE 7A               ld a,d
 395+ 99BF AE               xor (hl)
 396+ 99C0 77               ld (hl),a
 397+ 99C1 2B               dec hl
 398+ 99C2
 399+ 99C2 24               inc h
 400+ 99C3 7C               ld a,h
 401+ 99C4 E6 07            and 7
 402+ 99C6 20 0A            jr nz,2F
 403+ 99C8 7D               ld a,l
 404+ 99C9 C6 20            add a,$20
 405+ 99CB 6F               ld l,a
 406+ 99CC 38 04            jr c,2F
 407+ 99CE 7C               ld a,h
 408+ 99CF D6 08            sub 8
 409+ 99D1 67               ld h,a
 410+ 99D2 7C           2 ld a,h
 411+ 99D3 FE 58            cp $58
 412+ 99D5 28 02            jr z,3F
 413+ 99D7
 414+ 99D7 10 E0            djnz 1B
 415+ 99D9 ED 7B 0A 8A  3 ld sp,(Stack)
 416+ 99DD C9               ret
 417+ 99DE
# file closed: Rutinas_de_impresion_sprites.asm
1485  99DE              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99DE              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99DE              ;
   3+ 99DE              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99DE              ;
   5+ 99DE              ; *****************************************************************************************************************************************************************************************
   6+ 99DE              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99DE
   8+ 99DE 7C           calcula_tercio ld a,h
   9+ 99DF E6 18        	and $18
  10+ 99E1 CB 2F        	sra a
  11+ 99E3 CB 2F        	sra a
  12+ 99E5 CB 2F        	sra a
  13+ 99E7 C9           	ret
  14+ 99E8
# file closed: calcula_tercio.asm
1486  99E8              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99E8              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99E8              ;
   3+ 99E8              ;
   4+ 99E8              ;	CLS.
   5+ 99E8              ;
   6+ 99E8              ;	Limpia la pantalla y define sus atributos.
   7+ 99E8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99E8              ;
   9+ 99E8              ;	COLORES: 0 ..... NEGRO
  10+ 99E8              ;    		 1 ..... AZUL
  11+ 99E8              ; 			 2 ..... ROJO
  12+ 99E8              ;			 3 ..... MAGENTA
  13+ 99E8              ; 			 4 ..... VERDE
  14+ 99E8              ; 			 5 ..... CIAN
  15+ 99E8              ;			 6 ..... AMARILLO
  16+ 99E8              ; 			 7 ..... BLANCO
  17+ 99E8              ;
  18+ 99E8              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99E8              ;
  20+ 99E8              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99E8
  22+ 99E8
  23+ 99E8 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99EB 11 01 40     	LD DE,$4001
  25+ 99EE 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99F1 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99F3 ED B0        	LDIR
  28+ 99F5 01 FF 02     	LD BC,767
  29+ 99F8 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99F9 ED B0        	LDIR
  31+ 99FB C9           	ret
  32+ 99FC
# file closed: Cls.asm
1487  99FC              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99FC              ; ******************************************************************************************************************************************************************************************
   2+ 99FC              ;
   3+ 99FC              ;   20/05/23
   4+ 99FC              ;
   5+ 99FC              ;	Recompone_posicion_inicio
   6+ 99FC              ;
   7+ 99FC              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99FC              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99FC              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99FC              ;	_ a una u otra rutina.
  11+ 99FC
  12+ 99FC              Recompone_posicion_inicio
  13+ 99FC
  14+ 99FC 2A C8 89     	ld hl,(Posicion_inicio)
  15+ 99FF 7D           	ld a,l
  16+ 9A00 E6 1F        	and $1f
  17+ 9A02 28 16        	jr z,1F
  18+ 9A04
  19+ 9A04 FE 1F        	cp $1f
  20+ 9A06 28 0D        	jr z,3F
  21+ 9A08
  22+ 9A08 21 F7 89     	ld hl,Ctrl_2
  23+ 9A0B CB C6        	set 0,(hl)
  24+ 9A0D 2A BA 89     	ld hl,(Puntero_objeto)
  25+ 9A10 22 FA 89     	ld (Repone_puntero_objeto),hl
  26+ 9A13 18 08        	jr 2F
  27+ 9A15
  28+ 9A15 CD B6 9B     3 call Mov_left
  29+ 9A18 18 03        	jr 2F
  30+ 9A1A
  31+ 9A1A CD 98 9A     1 call Mov_right
  32+ 9A1D 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A20 22 BA 89     	ld (Puntero_objeto),hl
  34+ 9A23 C9           	ret
  35+ 9A24
  36+ 9A24              ; ******************************************************************************************************************************************************************************************
  37+ 9A24              ;
  38+ 9A24              ;   27/05/23
  39+ 9A24              ;
  40+ 9A24              ;	Mov_down
  41+ 9A24              ;
  42+ 9A24              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A24              ;
  44+ 9A24              ;
  45+ 9A24              Mov_down
  46+ 9A24
  47+ 9A24 CD 86 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A27              ;																	; _ repone (Puntero_objeto).
  49+ 9A27 21 E4 89     	ld hl,Ctrl_0
  50+ 9A2A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A2C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A2C              ; 																	; _ en el caso de que no lo haya.
  53+ 9A2C 3A CE 89     	ld a,(Vel_down)
  54+ 9A2F 47           	ld b,a
  55+ 9A30 2A B8 89         ld hl,(Posicion_actual)
  56+ 9A33 CD DE 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A36 E6 02        	and 2
  58+ 9A38 28 0F        	jr z,1F
  59+ 9A3A
  60+ 9A3A              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A3A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A3A
  63+ 9A3A 7C           	ld a,h
  64+ 9A3B FE 57        	cp $57
  65+ 9A3D 20 0A        	jr nz,1F
  66+ 9A3F
  67+ 9A3F 7D           	ld a,l
  68+ 9A40 C6 20        	add $20
  69+ 9A42 30 05        	jr nc,1F
  70+ 9A44
  71+ 9A44              ; ------------------------------
  72+ 9A44              ;	call Reaparece_arriba
  73+ 9A44 CD 43 9D     	call Reinicio
  74+ 9A47              ; ------------------------------
  75+ 9A47
  76+ 9A47 18 08        	jr 3F
  77+ 9A49 CD 0E 97     1 call NextScan
  78+ 9A4C 22 B8 89     	ld (Posicion_actual),hl
  79+ 9A4F 10 E2            djnz 2B
  80+ 9A51 CD 69 9D     3 call Genera_coordenadas
  81+ 9A54 C9           	ret
  82+ 9A55
  83+ 9A55              ; ******************************************************************************************************************************************************************************************
  84+ 9A55              ;
  85+ 9A55              ;   27/05/23
  86+ 9A55              ;
  87+ 9A55              ;	Mov_up
  88+ 9A55              ;
  89+ 9A55              ; 	Mueve el Sprite hacia arriba.
  90+ 9A55              ;
  91+ 9A55              ;
  92+ 9A55              Mov_up
  93+ 9A55
  94+ 9A55 CD 86 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A58              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A58 21 E4 89     	ld hl,Ctrl_0
  97+ 9A5B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A5D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A5D              ; 																		; _ en el caso de que no lo haya.
 100+ 9A5D 3A CD 89     	ld a,(Vel_up)
 101+ 9A60 47           	ld b,a
 102+ 9A61 2A B8 89     	ld hl,(Posicion_actual)
 103+ 9A64 CD DE 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A67 A7           	and a
 105+ 9A68 20 10        	jr nz,1F
 106+ 9A6A
 107+ 9A6A              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A6A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A6A
 110+ 9A6A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A6B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A6D 20 0B            jr nz,1F
 113+ 9A6F 7D               ld a,l
 114+ 9A70 D6 20            sub $20
 115+ 9A72 30 06            jr nc,1F
 116+ 9A74 25               dec h
 117+ 9A75
 118+ 9A75              ; -----------------------------
 119+ 9A75 CD 24 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A78              ;	call Reinicio
 121+ 9A78              ; -----------------------------
 122+ 9A78
 123+ 9A78 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A7A CD 1D 97     1 call PreviousScan
 125+ 9A7D 22 B8 89     	ld (Posicion_actual),hl
 126+ 9A80 10 E2            djnz 3B
 127+ 9A82 CD 69 9D     2 call Genera_coordenadas
 128+ 9A85 C9           	ret
 129+ 9A86
 130+ 9A86              ; -----------------------------
 131+ 9A86              ;
 132+ 9A86              ;	27/5/23
 133+ 9A86              ;
 134+ 9A86              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A86              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A86              ;
 137+ 9A86              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A86              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A86              ;
 140+ 9A86              ;	Modifica: A y (Puntero_objeto).
 141+ 9A86
 142+ 9A86 3A F7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A89 CB 47        	bit 0,a
 144+ 9A8B C8           	ret z
 145+ 9A8C CB 87        	res 0,a
 146+ 9A8E 32 F7 89     	ld (Ctrl_2),a
 147+ 9A91 2A FA 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A94 22 BA 89     	ld (Puntero_objeto),hl
 149+ 9A97 C9           	ret
 150+ 9A98
 151+ 9A98              ; ******************************************************************************************************************************************************************************************
 152+ 9A98              ;
 153+ 9A98              ;	19/10/22
 154+ 9A98              ;
 155+ 9A98              ;	Mov_right.
 156+ 9A98              ;
 157+ 9A98              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A98              ;
 159+ 9A98
 160+ 9A98 21 E4 89     Mov_right ld hl,Ctrl_0
 161+ 9A9B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A9D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A9D              ; 																	; _ en el caso de que no lo haya.
 164+ 9A9D 3A E4 89     	ld a,(Ctrl_0)
 165+ 9AA0 CB 77        	bit 6,a
 166+ 9AA2 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9AA4
 168+ 9AA4 CD D2 9C     	call Stop_Amadeus_right
 169+ 9AA7 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9AA8 18 4D        	jr 8F
 171+ 9AAA
 172+ 9AAA 3A BC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AAD FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9AAF 20 46        	jr nz,8F
 175+ 9AB1
 176+ 9AB1 3A BE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9AB4 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AB5 28 40        	jr z,8F
 179+ 9AB7
 180+ 9AB7              ; ---------- ---------- ----------
 181+ 9AB7              ;
 182+ 9AB7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9AB7
 184+ 9AB7 3A CC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9ABA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9ABC 28 11        	jr z,1F
 187+ 9ABE 38 06        	jr c,6F
 188+ 9AC0 FE 04        	cp 4
 189+ 9AC2 28 14        	jr z,7F
 190+ 9AC4 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AC6
 192+ 9AC6              ; ---------- ---------- ----------
 193+ 9AC6              ;
 194+ 9AC6              ; Perfiles de velocidad
 195+ 9AC6              ;
 196+ 9AC6
 197+ 9AC6 3A BE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AC9 FE FE        	cp $fe
 199+ 9ACB 20 2A        	jr nz,8F
 200+ 9ACD 18 10        	jr 3F
 201+ 9ACF 3A BE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AD2 FE FD        	cp $fd
 203+ 9AD4 20 21        	jr nz,8F
 204+ 9AD6 18 07        	jr 3F
 205+ 9AD8 3A BE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9ADB FE FB        	cp $fb
 207+ 9ADD 20 18        	jr nz,8F
 208+ 9ADF
 209+ 9ADF              ; ---------- ---------- ----------
 210+ 9ADF
 211+ 9ADF              3
 212+ 9ADF CD 12 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AE2              ;	call Reinicio
 214+ 9AE2
 215+ 9AE2              ; ---------- ---------- ----------
 216+ 9AE2              ;
 217+ 9AE2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AE2
 219+ 9AE2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AE4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AE5 CD FE 9A     	call DESPLZ_DER
 222+ 9AE8 C1           	pop bc
 223+ 9AE9 10 F9        	djnz 5B
 224+ 9AEB 2A B8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AEE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AEF 22 B8 89     	ld (Posicion_actual),hl
 227+ 9AF2 CD 69 9D     	call Genera_coordenadas
 228+ 9AF5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AF7
 230+ 9AF7              ; ---------- ---------- ----------
 231+ 9AF7
 232+ 9AF7 2A B8 89     8 ld hl,(Posicion_actual)
 233+ 9AFA CD FE 9A     	call DESPLZ_DER
 234+ 9AFD C9           2 ret
 235+ 9AFE
 236+ 9AFE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AFE              ;
 238+ 9AFE              ;	22/9/22
 239+ 9AFE              ;
 240+ 9AFE
 241+ 9AFE CD 0D 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9B01 CD 59 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9B04 CD 82 9B         call Ciclo_completo
 244+ 9B07 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B0A CB FE        	set 7,(hl)
 246+ 9B0C C9           	ret
 247+ 9B0D
 248+ 9B0D              ; ******************************************************************************************************************************************************************************************
 249+ 9B0D              ;	15/02/23
 250+ 9B0D              ;
 251+ 9B0D
 252+ 9B0D 3A CC 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B10 47           	ld b,a
 254+ 9B11 2A C4 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B14 23           1 inc hl
 256+ 9B15 23           	inc hl
 257+ 9B16 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B18 22 C4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B1B CD 88 8D     	call Extrae_address
 260+ 9B1E 22 BA 89     	ld (Puntero_objeto),hl
 261+ 9B21
 262+ 9B21              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B21
 264+ 9B21              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B21              ; Cuántos movimientos hemos hecho ??
 266+ 9B21              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B21
 268+ 9B21 2A C0 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B24 EB           	ex de,hl
 270+ 9B25 A7           	and a
 271+ 9B26 ED 52        	sbc hl,de
 272+ 9B28 CB 3D        	srl l
 273+ 9B2A 3E 08        6 ld a,8
 274+ 9B2C 95           	sub l
 275+ 9B2D 30 1E        	jr nc,3F
 276+ 9B2F
 277+ 9B2F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B2F              ; B="0".
 279+ 9B2F
 280+ 9B2F 04           4 inc b
 281+ 9B30 3C           	inc a
 282+ 9B31 20 FC        	jr nz,4B
 283+ 9B33 78           	ld a,b
 284+ 9B34 08           	ex af,af
 285+ 9B35 2A C0 89     	ld hl,(Indice_Sprite_der)
 286+ 9B38 23           5 inc hl
 287+ 9B39 23           	inc hl
 288+ 9B3A 10 FC        	djnz 5B
 289+ 9B3C 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B3F CD 88 8D     	call Extrae_address
 291+ 9B42 22 BA 89     	ld (Puntero_objeto),hl
 292+ 9B45
 293+ 9B45              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B45              ; _(Posicion_actual).
 295+ 9B45
 296+ 9B45 21 B8 89     	ld hl,Posicion_actual
 297+ 9B48 34           	inc (hl)
 298+ 9B49 08               ex af,af
 299+ 9B4A 6F           	ld l,a
 300+ 9B4B 18 DD        	jr 6B
 301+ 9B4D
 302+ 9B4D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B4D
 304+ 9B4D 47           3 ld b,a
 305+ 9B4E 2A C2 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B51 23           2 inc hl
 307+ 9B52 23           	inc hl
 308+ 9B53 10 FC        	djnz 2B
 309+ 9B55 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B58 C9           8 ret
 311+ 9B59
 312+ 9B59              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B59              ;
 314+ 9B59              ;	24/7/22
 315+ 9B59              ;
 316+ 9B59              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B59              ;
 318+ 9B59              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B59              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B59              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B59
 322+ 9B59 3A BE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B5C A7           	and a
 324+ 9B5D 20 1F        	jr nz,1F
 325+ 9B5F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B61 32 BE 89         ld (CTRL_DESPLZ),a
 327+ 9B64
 328+ 9B64 21 B7 89     	ld hl,Columns
 329+ 9B67 34           	inc (hl)
 330+ 9B68 3A CA 89     	ld a,(Cuad_objeto)
 331+ 9B6B E6 01        	and 1
 332+ 9B6D 28 0F        	jr z,1F
 333+ 9B6F 2A B8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B72 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B73 22 B8 89     	ld (Posicion_actual),hl
 336+ 9B76 CD 69 9D     	call Genera_coordenadas
 337+ 9B79 CD DE 9C     	call Inc_CTRL_DESPLZ
 338+ 9B7C 18 03        	jr 2F
 339+ 9B7E CD DE 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B81 C9           2 ret
 341+ 9B82
 342+ 9B82              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B82              ;
 344+ 9B82              ;	24/7/22
 345+ 9B82              ;
 346+ 9B82              ;	Ciclo_completo.
 347+ 9B82              ;
 348+ 9B82              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B82              ;
 350+ 9B82              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B82              ; 	Decrementamos (Columns).
 352+ 9B82              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B82              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B82
 355+ 9B82
 356+ 9B82 3A BE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B85 FE FF        	cp $ff
 358+ 9B87 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B89 E6 F0        	and $f0
 360+ 9B8B 20 28        	jr nz,3F
 361+ 9B8D
 362+ 9B8D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B8D
 364+ 9B8D 3A BE 89     	ld a,(CTRL_DESPLZ)
 365+ 9B90 47           	ld b,a
 366+ 9B91 3E F8        	ld a,$f8
 367+ 9B93 80           	add b
 368+ 9B94 32 BE 89     	ld (CTRL_DESPLZ),a
 369+ 9B97 18 1C        	jr 3F
 370+ 9B99 21 B7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B9C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B9D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B9E 32 BE 89     	ld (CTRL_DESPLZ),a
 374+ 9BA1 3A CA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9BA4 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BA6 20 0A        	jr nz,2F
 377+ 9BA8 2A B8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BAB 23           	inc hl
 379+ 9BAC 22 B8 89     	ld (Posicion_actual),hl
 380+ 9BAF CD 69 9D     	call Genera_coordenadas
 381+ 9BB2
 382+ 9BB2              ; Inicia el puntero de Sprite.
 383+ 9BB2
 384+ 9BB2 CD 9F 8D     2 call Inicia_puntero_objeto_der
 385+ 9BB5 C9           3 ret
 386+ 9BB6
 387+ 9BB6              ; ******************************************************************************************************************************************************************************************
 388+ 9BB6              ;
 389+ 9BB6              ;	15/02/23
 390+ 9BB6              ;
 391+ 9BB6              ;	Mov_left.
 392+ 9BB6              ;
 393+ 9BB6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BB6              ;
 395+ 9BB6 21 E4 89     Mov_left ld hl,Ctrl_0
 396+ 9BB9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BBB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BBB              ; 																	; _ en el caso de que no lo haya.
 399+ 9BBB 3A E4 89     	ld a,(Ctrl_0)
 400+ 9BBE CB 77        	bit 6,a
 401+ 9BC0 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BC2
 403+ 9BC2 CD D8 9C     	call Stop_Amadeus_left
 404+ 9BC5 C8           	ret z
 405+ 9BC6 20 4A        	jr nz,8F
 406+ 9BC8
 407+ 9BC8 3A BC 89     11 ld a,(Coordenada_X)
 408+ 9BCB A7           	and a
 409+ 9BCC 20 44        	jr nz,8F
 410+ 9BCE
 411+ 9BCE 3A BE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BD1 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BD2 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BD4
 415+ 9BD4              ; ---------- ---------- ----------
 416+ 9BD4
 417+ 9BD4 3A CB 89     	ld a,(Vel_left)
 418+ 9BD7 FE 02        	cp 2
 419+ 9BD9 28 0F        	jr z,1F
 420+ 9BDB 38 04        	jr c,6F
 421+ 9BDD FE 04        	cp 4
 422+ 9BDF 28 12        	jr z,7F
 423+ 9BE1
 424+ 9BE1              ; ---------- ---------- ----------
 425+ 9BE1
 426+ 9BE1 3A BE 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BE4 FE F8        	cp $f8
 428+ 9BE6 20 2A        	jr nz,8F
 429+ 9BE8 18 10        	jr 4F
 430+ 9BEA 3A BE 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BED FE F9        	cp $f9
 432+ 9BEF 20 21        	jr nz,8F
 433+ 9BF1 18 07        	jr 4F
 434+ 9BF3 3A BE 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BF6 FE FB        	cp $fb
 436+ 9BF8 20 18        	jr nz,8F
 437+ 9BFA
 438+ 9BFA              ; ---------- ---------- ----------
 439+ 9BFA
 440+ 9BFA              4
 441+ 9BFA CD 00 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BFD              ;	call Reinicio
 443+ 9BFD
 444+ 9BFD              ; ---------- ---------- ----------
 445+ 9BFD
 446+ 9BFD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BFF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9C00
 449+ 9C00              ;	ld hl,(Indice_Sprite_izq)
 450+ 9C00              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9C00
 452+ 9C00 CD 19 9C     	call DESPLZ_IZQ
 453+ 9C03 C1           	pop bc
 454+ 9C04 10 F9        	djnz 5B
 455+ 9C06 2A B8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C09 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C0A 22 B8 89     	ld (Posicion_actual),hl
 458+ 9C0D CD 69 9D     	call Genera_coordenadas
 459+ 9C10 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C12
 461+ 9C12              ; ---------- ---------- ----------
 462+ 9C12
 463+ 9C12              ; Movemos, no hay recolocación.
 464+ 9C12
 465+ 9C12 2A B8 89     8 ld hl,(Posicion_actual)
 466+ 9C15 CD 19 9C     	call DESPLZ_IZQ
 467+ 9C18 C9           2 ret
 468+ 9C19
 469+ 9C19              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C19              ;
 471+ 9C19              ;	22/9/22
 472+ 9C19
 473+ 9C19              DESPLZ_IZQ
 474+ 9C19
 475+ 9C19 CD 28 9C     	call Desplaza_izquierda
 476+ 9C1C CD 74 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C1F CD 9C 9C     	call Ciclo_completo_2
 478+ 9C22 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C25 CB BE        	res 7,(hl)
 480+ 9C27 C9           	ret
 481+ 9C28
 482+ 9C28              Desplaza_izquierda
 483+ 9C28
 484+ 9C28 3A CB 89     	ld a,(Vel_left)
 485+ 9C2B 47           	ld b,a
 486+ 9C2C 2A C6 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C2F 23           1 inc hl
 488+ 9C30 23           	inc hl
 489+ 9C31 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C33 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C36 CD 88 8D     	call Extrae_address
 492+ 9C39 22 BA 89     	ld (Puntero_objeto),hl
 493+ 9C3C
 494+ 9C3C              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C3C
 496+ 9C3C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C3C              ; Cuántos movimientos hemos hecho ??
 498+ 9C3C              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C3C
 500+ 9C3C 2A C2 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C3F EB           	ex de,hl
 502+ 9C40 A7           	and a
 503+ 9C41 ED 52        	sbc hl,de
 504+ 9C43 CB 3D        	srl l
 505+ 9C45 3E 08        6 ld a,8
 506+ 9C47 95           	sub l
 507+ 9C48 30 1E        	jr nc,3F
 508+ 9C4A
 509+ 9C4A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C4A              ; B="0".
 511+ 9C4A
 512+ 9C4A 04           4 inc b
 513+ 9C4B 3C           	inc a
 514+ 9C4C 20 FC        	jr nz,4B
 515+ 9C4E 78           	ld a,b
 516+ 9C4F 08           	ex af,af
 517+ 9C50 2A C2 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C53 23           5 inc hl
 519+ 9C54 23           	inc hl
 520+ 9C55 10 FC        	djnz 5B
 521+ 9C57 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C5A CD 88 8D     	call Extrae_address
 523+ 9C5D 22 BA 89     	ld (Puntero_objeto),hl
 524+ 9C60
 525+ 9C60              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C60              ; _(Posicion_actual).
 527+ 9C60
 528+ 9C60 21 B8 89     	ld hl,Posicion_actual
 529+ 9C63 35           	dec (hl)
 530+ 9C64 08           	ex af,af
 531+ 9C65 6F           	ld l,a
 532+ 9C66 18 DD        	jr 6B
 533+ 9C68
 534+ 9C68              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C68
 536+ 9C68 47           3 ld b,a
 537+ 9C69 2A C0 89     	ld hl,(Indice_Sprite_der)
 538+ 9C6C 23           2 inc hl
 539+ 9C6D 23           	inc hl
 540+ 9C6E 10 FC        	djnz 2B
 541+ 9C70 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C73 C9           8 ret
 543+ 9C74
 544+ 9C74              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C74              ;
 546+ 9C74              ;	modifica_parametros_1er_DESPLZ
 547+ 9C74              ;
 548+ 9C74              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C74              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C74              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C74
 552+ 9C74 3A BE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C77 A7           	and a
 554+ 9C78 20 1E        	jr nz,1F
 555+ 9C7A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C7B 32 BE 89         ld (CTRL_DESPLZ),a
 557+ 9C7E 21 B7 89     	ld hl,Columns
 558+ 9C81 34           	inc (hl)
 559+ 9C82 3A CA 89     	ld a,(Cuad_objeto)
 560+ 9C85 E6 01        	and 1
 561+ 9C87 20 0F        	jr nz,1F
 562+ 9C89 2A B8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C8C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C8D 22 B8 89     	ld (Posicion_actual),hl
 565+ 9C90 CD 69 9D     	call Genera_coordenadas
 566+ 9C93 CD EF 9C     	call Dec_CTRL_DESPLZ
 567+ 9C96 18 03        	jr 2F
 568+ 9C98 CD EF 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C9B C9           2 ret
 570+ 9C9C
 571+ 9C9C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C9C
 573+ 9C9C 3A BE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C9F FE F7        	cp $f7
 575+ 9CA1 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9CA3 30 2C        	jr nc,3F
 577+ 9CA5
 578+ 9CA5              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9CA5
 580+ 9CA5 06 00        	ld b,0
 581+ 9CA7 04           4 inc b
 582+ 9CA8 3C           	inc a
 583+ 9CA9 FE F7        	cp $f7
 584+ 9CAB 20 FA        	jr nz,4B
 585+ 9CAD 3E FF        	ld a,$ff
 586+ 9CAF 90           	sub b
 587+ 9CB0 32 BE 89     	ld (CTRL_DESPLZ),a
 588+ 9CB3 18 1C        	jr 3F
 589+ 9CB5
 590+ 9CB5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CB5
 592+ 9CB5 21 B7 89     1 ld hl,Columns
 593+ 9CB8 35           	dec (hl)
 594+ 9CB9 AF           	xor a
 595+ 9CBA 32 BE 89     	ld (CTRL_DESPLZ),a
 596+ 9CBD 3A CA 89     	ld a,(Cuad_objeto)
 597+ 9CC0 E6 01        	and 1
 598+ 9CC2 28 0A        	jr z,2F
 599+ 9CC4 2A B8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CC7 2B           	dec hl
 601+ 9CC8 22 B8 89     	ld (Posicion_actual),hl
 602+ 9CCB CD 69 9D     	call Genera_coordenadas
 603+ 9CCE
 604+ 9CCE              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CCE
 606+ 9CCE CD B2 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CD1 C9           3 ret
 608+ 9CD2
 609+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CD2              ;
 611+ 9CD2              ;	19/10/22
 612+ 9CD2              ;
 613+ 9CD2              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CD2              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CD2
 616+ 9CD2 3A BC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CD5 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CD7 C9           	ret
 619+ 9CD8
 620+ 9CD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CD8              ;
 622+ 9CD8              ;	19/10/22
 623+ 9CD8              ;
 624+ 9CD8              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CD8              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CD8
 627+ 9CD8 3A BC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CDB FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CDD C9           	ret
 630+ 9CDE
 631+ 9CDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CDE              ;
 633+ 9CDE              ;	24/7/22
 634+ 9CDE              ;
 635+ 9CDE              ;	Inc_CTRL_DESPLZ
 636+ 9CDE              ;
 637+ 9CDE              ;
 638+ 9CDE              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CDE
 640+ 9CDE 21 BE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CE1 3A CC 89     	ld a,(Vel_right)
 642+ 9CE4 A7           	and a
 643+ 9CE5 28 06        	jr z,1F
 644+ 9CE7 47           	ld b,a
 645+ 9CE8 34           3 inc (hl)
 646+ 9CE9 10 FD        	djnz 3B
 647+ 9CEB 18 01        	jr 2F
 648+ 9CED 34           1 inc (hl)
 649+ 9CEE C9           2 ret
 650+ 9CEF
 651+ 9CEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CEF              ;
 653+ 9CEF              ;	5/2/23
 654+ 9CEF              ;
 655+ 9CEF              ;	Dec_CTRL_DESPLZ
 656+ 9CEF              ;
 657+ 9CEF              ;
 658+ 9CEF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CEF
 660+ 9CEF 21 BE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CF2 3A CB 89     	ld a,(Vel_left)
 662+ 9CF5 A7           	and a
 663+ 9CF6 28 06        	jr z,1F
 664+ 9CF8 47           	ld b,a
 665+ 9CF9 35           3 dec (hl)
 666+ 9CFA 10 FD        	djnz 3B
 667+ 9CFC 18 01        	jr 2F
 668+ 9CFE 35           1 dec (hl)
 669+ 9CFF C9           2 ret
 670+ 9D00
 671+ 9D00              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9D00
 673+ 9D00 2A B8 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9D03 01 1F 00     	ld bc,31
 675+ 9D06 A7           	and a
 676+ 9D07 ED 4A        	adc hl,bc
 677+ 9D09 22 B8 89     	ld (Posicion_actual),hl
 678+ 9D0C 21 E4 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D0F CB C6        	set 0,(hl)
 680+ 9D11 C9           	ret
 681+ 9D12
 682+ 9D12              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D12
 684+ 9D12 2A B8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D15 01 1F 00     	ld bc,31
 686+ 9D18 A7           	and a
 687+ 9D19 ED 42        	sbc hl,bc
 688+ 9D1B 22 B8 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D1E 21 E4 89     	ld hl,Ctrl_0
 690+ 9D21 CB CE        	set 1,(hl)
 691+ 9D23 C9           	ret
 692+ 9D24
 693+ 9D24              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D24
 695+ 9D24 24           Reaparece_abajo inc h
 696+ 9D25 01 E0 17     	ld bc,$17e0
 697+ 9D28 A7           	and a
 698+ 9D29 ED 4A        	adc hl,bc
 699+ 9D2B 22 B8 89     	ld (Posicion_actual),hl
 700+ 9D2E 21 E4 89     	ld hl,Ctrl_0
 701+ 9D31 CB D6        	set 2,(hl)
 702+ 9D33 C9           	ret
 703+ 9D34
 704+ 9D34              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D34
 706+ 9D34 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D37 A7           	and a
 708+ 9D38 ED 42        	sbc hl,bc
 709+ 9D3A 22 B8 89     	ld (Posicion_actual),hl
 710+ 9D3D 21 E4 89     	ld hl,Ctrl_0
 711+ 9D40 CB DE        	set 3,(hl)
 712+ 9D42 C9           	ret
 713+ 9D43
 714+ 9D43              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D43              ;
 716+ 9D43              ;	15/07/23
 717+ 9D43
 718+ 9D43              Reinicio
 719+ 9D43
 720+ 9D43              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D43
 722+ 9D43 AF           	xor a
 723+ 9D44 21 EB 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D47 CD 65 9D     	call Limpia_contenido_hl
 725+ 9D4A
 726+ 9D4A 21 B8 89     	ld hl,Posicion_actual
 727+ 9D4D CD 65 9D     	call Limpia_contenido_hl
 728+ 9D50
 729+ 9D50 CD 86 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D53 CD 10 A0     	call Inicia_Puntero_mov
 731+ 9D56
 732+ 9D56 21 ED 89     	ld hl,Incrementa_puntero
 733+ 9D59 06 05        	ld b,5
 734+ 9D5B 77           1 ld (hl),a
 735+ 9D5C 23           	inc hl
 736+ 9D5D 10 FC        	djnz 1B
 737+ 9D5F
 738+ 9D5F 21 F7 89     	ld hl,Ctrl_2
 739+ 9D62 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D64
 741+ 9D64 C9           	ret
 742+ 9D65
 743+ 9D65 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D66 23           	inc hl
 745+ 9D67 77           	ld (hl),a
 746+ 9D68 C9           	ret
 747+ 9D69
 748+ 9D69
# file closed: Direcciones.asm
1488  9D69              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D69              ; ------------------------------------------------------------------------
   2+ 9D69              ;
   3+ 9D69              ;	02/04/23
   4+ 9D69              ;
   5+ 9D69              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D69              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D69              ;
   8+ 9D69              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D69              ;
  10+ 9D69              ;	Modifica: A,BC y DE.
  11+ 9D69
  12+ 9D69 C5           Genera_coordenadas push bc
  13+ 9D6A E5           	push hl
  14+ 9D6B D5           	push de
  15+ 9D6C
  16+ 9D6C 2A B8 89     	ld hl,(Posicion_actual)
  17+ 9D6F
  18+ 9D6F 7D           	ld a,l
  19+ 9D70 E6 1F        	and $1f
  20+ 9D72 32 BC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D75
  22+ 9D75 CD DE 99     	call calcula_tercio
  23+ 9D78 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D79
  25+ 9D79 1E 00        	ld e,0
  26+ 9D7B 7D           	ld a,l
  27+ 9D7C E6 E0        	and $e0
  28+ 9D7E 28 01        	jr z,1F
  29+ 9D80 04           	inc b
  30+ 9D81
  31+ 9D81 04           1 inc b
  32+ 9D82 05           	dec b
  33+ 9D83 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D85              ;														; _ , salimos.
  35+ 9D85 1C           3 inc e
  36+ 9D86 D6 20        	sub 32
  37+ 9D88 20 FB        	jr nz,3B
  38+ 9D8A 10 F5        	djnz 1B
  39+ 9D8C
  40+ 9D8C 7B           2 ld a,e
  41+ 9D8D 32 BD 89     	ld (Coordenada_y),a
  42+ 9D90
  43+ 9D90 D1           	pop de
  44+ 9D91 E1           	pop hl
  45+ 9D92 C1           	pop bc
  46+ 9D93
  47+ 9D93 C9           	ret
  48+ 9D94
  49+ 9D94              ; ------------------------------------------------------------------------
  50+ 9D94              ;	28/05/23
  51+ 9D94              ;
  52+ 9D94              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D94              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D94              ;
  55+ 9D94              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D94              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D94              ;
  58+ 9D94              ;		DE="$120d"
  59+ 9D94              ;
  60+ 9D94              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D94              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D94              ;
  63+ 9D94              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D94
  65+ 9D94              ;	Modifica: A,BC y DE.
  66+ 9D94
  67+ 9D94
  68+ 9D94              Genera_coordenadas_disparo
  69+ 9D94
  70+ 9D94              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D94
  72+ 9D94 7D           	ld a,l
  73+ 9D95 E6 1F        	and $1f
  74+ 9D97 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D98 CD DE 99     	call calcula_tercio
  76+ 9D9B 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D9C 1E 00        	ld e,0
  78+ 9D9E 7D           	ld a,l
  79+ 9D9F E6 E0        	and $e0
  80+ 9DA1 28 01        	jr z,1F
  81+ 9DA3 04           	inc b
  82+ 9DA4 1C           1 inc e
  83+ 9DA5 D6 20        	sub 32
  84+ 9DA7 20 FB        	jr nz,1B
  85+ 9DA9 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DAB C9           	ret
  87+ 9DAC
# file closed: Genera_coordenadas.asm
1489  9DAC              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DAC
   2+ 9DAC
   3+ 9DAC              ;   07/07/23
   4+ 9DAC              ;
   5+ 9DAC              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DAC              ;
   7+ 9DAC              ;   Codificación:
   8+ 9DAC              ;
   9+ 9DAC              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DAC              ;
  11+ 9DAC              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DAC              ;
  13+ 9DAC              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DAC              ;
  15+ 9DAC              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DAC              ;
  17+ 9DAC              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DAC              ;                               ..... %01000010 Vel_up 4
  19+ 9DAC              ;                                               Vel_down 2
  20+ 9DAC              ;                               ..... $42
  21+ 9DAC              ;
  22+ 9DAC              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DAC              ;
  24+ 9DAC              ;                               ..... %01000010 Vel_left 4
  25+ 9DAC              ;                                               Vel_right 2
  26+ 9DAC              ;                               ..... $42
  27+ 9DAC              ;
  28+ 9DAC              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DAC              ;
  30+ 9DAC              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DAC              ;
  32+ 9DAC              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DAC              ;
  34+ 9DAC              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DAC              ;                                     $53
  36+ 9DAC              ;
  37+ 9DAC              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DAC              ;
  39+ 9DAC              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DAC              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DAC              ;
  42+ 9DAC              ;                       Arriba ..... $81
  43+ 9DAC              ;                       Arriba - izquierda ..... $a1
  44+ 9DAC              ;                       Arriba - derecha ..... $91
  45+ 9DAC              ;
  46+ 9DAC              ;                       Abajo ..... $41
  47+ 9DAC              ;                       Abajo - izquierda ..... $61
  48+ 9DAC              ;                       Abajo - derecha ..... $51
  49+ 9DAC              ;
  50+ 9DAC              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DAC              ;
  52+ 9DAC              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DAC              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DAC              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DAC              ;
  56+ 9DAC              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DAC              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DAC              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DAC              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DAC              ;
  61+ 9DAC              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DAC              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DAC              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DAC              ;
  65+ 9DAC              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DAC              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DAC              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DAC              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DAC
  70+ 9DAC              ; ----- ----- ----- ----- -----
  71+ 9DAC
  72+ 9DAC D8 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DAE E0 9D            defw F_1
  74+ 9DB0 EA 9D            defw F_2
  75+ 9DB2 F4 9D            defw Codo_abajo_derecha
  76+ 9DB4 28 9E            defw Derecha_y_subiendo
  77+ 9DB6 32 9E            defw Derecha_y_subiendo_1
  78+ 9DB8 3C 9E            defw F_3
  79+ 9DBA 46 9E            defw F_4
  80+ 9DBC 50 9E            defw Derecha_y_bajando
  81+ 9DBE 5A 9E            defw Derecha_y_bajando_1
  82+ 9DC0 64 9E            defw Derecha_y_bajando_2
  83+ 9DC2 6E 9E            defw Codo_derecha_abajo
  84+ 9DC4 9E 9E            defw Codo_abajo_izq.
  85+ 9DC6 D2 9E            defw Izquierda_y_subiendo
  86+ 9DC8 DC 9E            defw Izquierda_y_subiendo_1
  87+ 9DCA E6 9E            defw F_5
  88+ 9DCC F0 9E            defw F_6
  89+ 9DCE FA 9E            defw Izquierda_y_bajando
  90+ 9DD0 04 9F            defw Izquierda_y_bajando_1
  91+ 9DD2 0E 9F            defw Izquierda_y_bajando_2
  92+ 9DD4 18 9F            defw Codo_izquierda_abajo
  93+ 9DD6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DD8
  95+ 9DD8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DDC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DE0
  98+ 9DE0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DE4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DE8 08 00
 100+ 9DEA 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DEE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DF2 0F FE
 102+ 9DF4
 103+ 9DF4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DF8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DFC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E00 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E04 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E08 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E0C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E10 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E14 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E18 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E1C 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E20 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E24 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E28
 117+ 9E28 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E2C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E30 06 00
 119+ 9E32
 120+ 9E32 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E36 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E3A 02 00
 122+ 9E3C
 123+ 9E3C 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E40 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E44 04 00
 125+ 9E46 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E4A 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E4E 08 00
 127+ 9E50
 128+ 9E50 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E54 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E58 02 00
 130+ 9E5A
 131+ 9E5A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E5E 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E62 06 00
 133+ 9E64
 134+ 9E64 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E68 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E6C 06 00
 136+ 9E6E
 137+ 9E6E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E6E
 139+ 9E6E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E72 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E76 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E7A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E7E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E82 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E92 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E96 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E9A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E9E
 152+ 9E9E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EA2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EA6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EAA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EAE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EB2 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EB6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EBA 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EBE 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EC2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EC6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9ECA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9ECE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9ED2
 166+ 9ED2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9ED6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EDA 06 00
 168+ 9EDC
 169+ 9EDC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EE0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EE4 02 00
 171+ 9EE6
 172+ 9EE6 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EEA 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EEE 04 00
 174+ 9EF0 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EF4 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EF8 08 00
 176+ 9EFA
 177+ 9EFA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EFE 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F02 02 00
 179+ 9F04
 180+ 9F04 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F08 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F0C 06 00
 182+ 9F0E
 183+ 9F0E 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F12 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F16 06 00
 185+ 9F18
 186+ 9F18 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F1C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F20 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F24 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F28 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F2C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F30 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F34 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F38 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F3C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F40 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F44 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F48
 199+ 9F48              ; ----- ----- ----- ----- -----
 200+ 9F48              ;
 201+ 9F48              ;   27/06/23
 202+ 9F48
 203+ 9F48              Movimiento
 204+ 9F48
 205+ 9F48              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F48
 207+ 9F48              ;    ld hl,(Posicion_actual)
 208+ 9F48
 209+ 9F48 3A F7 89         ld a,(Ctrl_2)
 210+ 9F4B CB 57            bit 2,a
 211+ 9F4D 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F4F
 213+ 9F4F 2A E9 89         ld hl,(Puntero_mov)
 214+ 9F52 7E               ld a,(hl)
 215+ 9F53
 216+ 9F53              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F53
 218+ 9F53              Inicia_desplazamiento.
 219+ 9F53
 220+ 9F53              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F53
 222+ 9F53 CD 47 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F56
 224+ 9F56              ; Iniciamos (Repetimos_mov).
 225+ 9F56
 226+ 9F56 7E               ld a,(hl)
 227+ 9F57 E6 0F            and $0f
 228+ 9F59 32 EF 89         ld (Repetimos_desplazamiento),a
 229+ 9F5C 32 F0 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F5F
 231+ 9F5F              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F5F
 233+ 9F5F 23               inc hl
 234+ 9F60 7E               ld a,(hl)
 235+ 9F61 32 F2 89         ld (Cola_de_desplazamiento),a
 236+ 9F64 2B               dec hl
 237+ 9F65
 238+ 9F65 21 F7 89         ld hl,Ctrl_2
 239+ 9F68 CB D6            set 2,(hl)
 240+ 9F6A
 241+ 9F6A              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F6A              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F6A
 244+ 9F6A              Desplazamiento_iniciado
 245+ 9F6A
 246+ 9F6A CD 1B A0         call Aplica_desplazamiento
 247+ 9F6D
 248+ 9F6D 3A F7 89         ld a,(Ctrl_2)
 249+ 9F70 CB 67            bit 4,a
 250+ 9F72 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F73
 252+ 9F73 21 EF 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F76 35               dec (hl)
 254+ 9F77 C0               ret nz
 255+ 9F78
 256+ 9F78              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F78              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F78              ; Analiza (Cola_de_desplazamiento).
 259+ 9F78
 260+ 9F78 3A F2 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F7B A7               and a
 262+ 9F7C CC 70 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F7F 28 30            jr z,Reinicia_el_movimiento
 264+ 9F81
 265+ 9F81 FE FF            cp $ff
 266+ 9F83 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F85
 268+ 9F85 FE FE            cp $fe
 269+ 9F87 CC F4 9F         call z,Fijamos_bucle
 270+ 9F8A 28 25            jr z,Reinicia_el_movimiento
 271+ 9F8C
 272+ 9F8C FE FD            cp $fd
 273+ 9F8E 20 11            jr nz,1F
 274+ 9F90
 275+ 9F90              ; ---
 276+ 9F90              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F90
 278+ 9F90 3A F7 89         ld a,(Ctrl_2)
 279+ 9F93 CB 5F            bit 3,a
 280+ 9F95 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F97
 282+ 9F97              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F97
 284+ 9F97 21 F7 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F9A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F9C
 287+ 9F9C CD 05 A0         call Inicia_Repetimos_movimiento
 288+ 9F9F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9FA1              ; ---
 290+ 9FA1
 291+ 9FA1 FE 01        1 cp 1
 292+ 9FA3 CA DE 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FA6
 294+ 9FA6 3D               dec a
 295+ 9FA7 32 F2 89         ld (Cola_de_desplazamiento),a
 296+ 9FAA
 297+ 9FAA 3A F0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FAD 32 EF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FB0              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FB0 C9               ret
 301+ 9FB1
 302+ 9FB1              Reinicia_el_movimiento
 303+ 9FB1
 304+ 9FB1 3A F7 89         ld a,(Ctrl_2)
 305+ 9FB4 CB 5F            bit 3,a
 306+ 9FB6 28 1B            jr z,2F
 307+ 9FB8
 308+ 9FB8              ; (Cola_de_desplazamiento)="254".
 309+ 9FB8
 310+ 9FB8 21 F1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FBB 35               dec (hl)
 312+ 9FBC 20 15            jr nz,2F
 313+ 9FBE
 314+ 9FBE              ; Fin de las repeticiones del último movimiento.
 315+ 9FBE
 316+ 9FBE 21 F7 89         ld hl,Ctrl_2
 317+ 9FC1 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FC3
 319+ 9FC3 2A E9 89         ld hl,(Puntero_mov)
 320+ 9FC6 23               inc hl
 321+ 9FC7 23               inc hl
 322+ 9FC8 23               inc hl
 323+ 9FC9 22 E9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FCC              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FCC 7E               ld a,(hl)
 326+ 9FCD 32 F2 89         ld (Cola_de_desplazamiento),a
 327+ 9FD0
 328+ 9FD0 C3 78 9F         jp Cola
 329+ 9FD3
 330+ 9FD3
 331+ 9FD3 CD 10 A0     2 call Inicia_Puntero_mov
 332+ 9FD6
 333+ 9FD6 21 F7 89         ld hl,Ctrl_2
 334+ 9FD9 CB 96            res 2,(hl)
 335+ 9FDB
 336+ 9FDB C3 48 9F         jp Movimiento
 337+ 9FDE
 338+ 9FDE              Siguiente_desplazamiento
 339+ 9FDE
 340+ 9FDE              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FDE              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FDE
 343+ 9FDE 21 F7 89         ld hl,Ctrl_2
 344+ 9FE1 CB 96            res 2,(hl)
 345+ 9FE3
 346+ 9FE3 2A E9 89         ld hl,(Puntero_mov)
 347+ 9FE6 23               inc hl
 348+ 9FE7 23               inc hl
 349+ 9FE8 22 E9 89         ld (Puntero_mov),hl
 350+ 9FEB
 351+ 9FEB 7E               ld a,(hl)
 352+ 9FEC A7               and a
 353+ 9FED CC 70 A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FF0 CA B1 9F         jp z,Reinicia_el_movimiento
 355+ 9FF3
 356+ 9FF3 C9               ret
 357+ 9FF4              ; Subrutinas -----------------------------------------
 358+ 9FF4              ; ---------- --------- --------- ---------- ----------
 359+ 9FF4              ;
 360+ 9FF4              ;   24/07/23
 361+ 9FF4              ;
 362+ 9FF4              ;   Fijamos_bucle
 363+ 9FF4              ;
 364+ 9FF4              ;
 365+ 9FF4
 366+ 9FF4              Fijamos_bucle
 367+ 9FF4
 368+ 9FF4 3A ED 89         ld a,(Incrementa_puntero)
 369+ 9FF7 3C               inc a
 370+ 9FF8 32 EE 89         ld (Incrementa_puntero_backup),a
 371+ 9FFB
 372+ 9FFB CD 70 A0         call Incrementa_Puntero_indice_mov
 373+ 9FFE 2A E7 89         ld hl,(Puntero_indice_mov)
 374+ A001 22 EB 89         ld (Puntero_indice_mov_bucle),hl
 375+ A004 C9               ret
 376+ A005
 377+ A005              ; ---------- --------- --------- ---------- ----------
 378+ A005              ;
 379+ A005              ;   07/7/23
 380+ A005              ;
 381+ A005              ;   Inicia_Repetimos_movimiento
 382+ A005              ;
 383+ A005              ;
 384+ A005
 385+ A005              Inicia_Repetimos_movimiento
 386+ A005
 387+ A005              ; Iniciamos (Repetimos_movimiento).
 388+ A005
 389+ A005 DD 2A E9 89      ld ix,(Puntero_mov)
 390+ A009 DD 7E 02         ld a,(ix+2)
 391+ A00C 32 F1 89         ld (Repetimos_movimiento),a
 392+ A00F
 393+ A00F C9               ret
 394+ A010
 395+ A010              ; ---------- --------- --------- ---------- ----------
 396+ A010              ;
 397+ A010              ;   26/6/23
 398+ A010              ;
 399+ A010              ;   Inicia_Puntero_mov
 400+ A010              ;
 401+ A010              ;
 402+ A010
 403+ A010 2A E7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A013 5E               ld e,(hl)
 405+ A014 23               inc hl
 406+ A015 56               ld d,(hl)
 407+ A016 EB               ex de,hl
 408+ A017 22 E9 89         ld (Puntero_mov),hl
 409+ A01A C9               ret
 410+ A01B
 411+ A01B              ; ---------- --------- --------- ---------- ----------
 412+ A01B              ;
 413+ A01B              ;   27/06/23
 414+ A01B              ;
 415+ A01B              ;   Aplica_movimiento.
 416+ A01B
 417+ A01B              Aplica_desplazamiento
 418+ A01B
 419+ A01B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A01B
 421+ A01B 2A E9 89         ld hl, (Puntero_mov)
 422+ A01E
 423+ A01E 7E               ld a,(hl)
 424+ A01F E6 F0            and $f0
 425+ A021 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A022
 427+ A022 CB 7E            bit 7,(hl)
 428+ A024 28 03            jr z,1F
 429+ A026 CD 55 9A         call Mov_up
 430+ A029 2A E9 89     1 ld hl, (Puntero_mov)
 431+ A02C CB 76            bit 6,(hl)
 432+ A02E 28 03            jr z,2F
 433+ A030 CD 24 9A         call Mov_down
 434+ A033 2A E9 89     2 ld hl, (Puntero_mov)
 435+ A036 CB 6E            bit 5,(hl)
 436+ A038 28 03            jr z,3F
 437+ A03A CD B6 9B         call Mov_left
 438+ A03D 2A E9 89     3 ld hl, (Puntero_mov)
 439+ A040 CB 66            bit 4,(hl)
 440+ A042 C8               ret z
 441+ A043 CD 98 9A         call Mov_right
 442+ A046 C9               ret
 443+ A047
 444+ A047              ; ---------- --------- --------- ---------- ----------
 445+ A047              ;
 446+ A047              ;   26/06/23
 447+ A047              ;
 448+ A047              ;   Ajusta_velocidad_desplazamiento.
 449+ A047
 450+ A047              Ajusta_velocidad_desplazamiento
 451+ A047
 452+ A047              ; 1er byte de la cadena de movimiento.
 453+ A047              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A047
 455+ A047 CD 65 A0         call Extrae_nibble_alto
 456+ A04A
 457+ A04A 32 CD 89         ld (Vel_up),a
 458+ A04D 79               ld a,c
 459+ A04E E6 0F            and $0f
 460+ A050 32 CE 89         ld (Vel_down),a
 461+ A053
 462+ A053              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A053              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A053
 465+ A053 23               inc hl
 466+ A054 CD 65 A0         call Extrae_nibble_alto
 467+ A057
 468+ A057 32 CB 89         ld (Vel_left),a
 469+ A05A 79               ld a,c
 470+ A05B E6 0F            and $0f
 471+ A05D 32 CC 89         ld (Vel_right),a
 472+ A060
 473+ A060              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A060
 475+ A060 23               inc hl
 476+ A061 22 E9 89         ld (Puntero_mov),hl
 477+ A064 C9               ret
 478+ A065
 479+ A065 06 04        Extrae_nibble_alto ld b,4
 480+ A067 7E               ld a,(hl)
 481+ A068 4F               ld c,a
 482+ A069 E6 F0            and $f0
 483+ A06B CB 3F        1 srl a
 484+ A06D 10 FC            djnz 1B
 485+ A06F C9               ret
 486+ A070
 487+ A070              ; ---------- --------- --------- ---------- ----------
 488+ A070              ;
 489+ A070              ;   5/7/23
 490+ A070              ;
 491+ A070              ;   Incrementa_Puntero_indice_mov
 492+ A070
 493+ A070              Incrementa_Puntero_indice_mov
 494+ A070
 495+ A070 21 ED 89         ld hl,Incrementa_puntero
 496+ A073 34               inc (hl)
 497+ A074
 498+ A074 2A E7 89         ld hl,(Puntero_indice_mov)
 499+ A077 01 02 00         ld bc,2
 500+ A07A A7               and a
 501+ A07B 09               add hl,bc
 502+ A07C 22 E7 89         ld (Puntero_indice_mov),hl
 503+ A07F
 504+ A07F 7E               ld a,(hl)
 505+ A080 A7               and a
 506+ A081
 507+ A081              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A081
 509+ A081              ;    jr z,$
 510+ A081
 511+ A081              ;! Reinicia el Patrón de movimiento.
 512+ A081
 513+ A081 CC 86 A0         call z,Inicializa_Puntero_indice_mov
 514+ A084
 515+ A084 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A085
 517+ A085 C9               ret
 518+ A086
 519+ A086
 520+ A086              ; ---------- --------- --------- ---------- ----------
 521+ A086              ;
 522+ A086              ;   24/07/23
 523+ A086              ;
 524+ A086              ;   Inicializa_Puntero_indice_mov
 525+ A086
 526+ A086              Inicializa_Puntero_indice_mov
 527+ A086
 528+ A086              ; Existe etiqueta de bucle principal???
 529+ A086
 530+ A086 2A EB 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A089 24               inc h
 532+ A08A 25               dec h
 533+ A08B 28 05            jr z,2F
 534+ A08D
 535+ A08D 22 E7 89         ld (Puntero_indice_mov),hl
 536+ A090 18 14            jr 3F
 537+ A092
 538+ A092              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A092
 540+ A092 3A ED 89     2 ld a,(Incrementa_puntero)
 541+ A095 47               ld b,a
 542+ A096
 543+ A096 2A E7 89         ld hl,(Puntero_indice_mov)
 544+ A099 2B           1 dec hl
 545+ A09A 2B               dec hl
 546+ A09B 10 FC            djnz 1B
 547+ A09D 22 E7 89         ld (Puntero_indice_mov),hl
 548+ A0A0
 549+ A0A0 AF               xor a
 550+ A0A1 32 ED 89         ld (Incrementa_puntero),a
 551+ A0A4 18 06            jr 4F
 552+ A0A6
 553+ A0A6 3A EE 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0A9 32 ED 89         ld (Incrementa_puntero),a
 555+ A0AC C9           4 ret
 556+ A0AD
 557+ A0AD
 558+ A0AD
# file closed: Patrones_de_mov.asm
1490  A0AD              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A0AD              ; Relojes y temporizaciones.
   2+ A0AD
   3+ A0AD              ; ------------------------------------------------------
   4+ A0AD              ;
   5+ A0AD              ;	16/7/23
   6+ A0AD              ;
   7+ A0AD              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A0AD              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A0AD              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A0AD              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A0AD              ;
  12+ A0AD              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A0AD              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A0AD
  15+ A0AD              ; Disparo_entidad db 1
  16+ A0AD              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A0AD              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A0AD
  19+ A0AD              Habilita_disparos
  20+ A0AD
  21+ A0AD 7E           	ld a,(hl)
  22+ A0AE A7           	and a
  23+ A0AF C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A0B0
  25+ A0B0 EB           	ex de,hl
  26+ A0B1
  27+ A0B1 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A0B2 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A0B3
  30+ A0B3              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A0B3
  32+ A0B3 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0B4 7E           	ld a,(hl)
  34+ A0B5 23           	inc hl
  35+ A0B6 77           	ld (hl),a
  36+ A0B7
  37+ A0B7 EB           	ex de,hl						; Habilitamos disparo.
  38+ A0B8 3E 01        	ld a,1
  39+ A0BA 77           	ld (hl),a
  40+ A0BB C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1491  A0BC              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0BC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0BC              ;
   3+ A0BC              ;	9/8/23
   4+ A0BC              ;
   5+ A0BC              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0BC
   7+ A0BC              ;	ADC HL,SP	LD (addr),SP
   8+ A0BC              ;	ADD HL,SP	LD SP,(addr)
   9+ A0BC              ;	ADD IX,SP	LD SP,nn
  10+ A0BC              ; 	ADD IY,SP	LD SP,HL
  11+ A0BC              ;				LD SP,IX
  12+ A0BC              ;	DEC SP		LD SP,IY
  13+ A0BC
  14+ A0BC              ;	EX (SP),HL
  15+ A0BC              ;	EX (SP),IX
  16+ A0BC              ;	EX (SP),IY
  17+ A0BC
  18+ A0BC              ;	INC SP
  19+ A0BC
  20+ A0BC                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 0A 8A  7 ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A F9 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 10 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 0E 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 10 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 0E 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 0A 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 2A 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 12 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 12 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 16 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 12 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 16 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 16 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 1A 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 16 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 1A 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 1A 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 1E 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 1A 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 1E 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 1E 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1492  74C8
1493  74C8              	SAVESNA "Pruebas.sna", START
1494  74C8
1495  74C8
1496  74C8
1497  74C8
# file closed: Banco_de_pruebas.asm
