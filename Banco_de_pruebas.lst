# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A4 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD DB 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD FE 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 AE 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B A4 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 107  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 3C 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8939 01 01 01
  18+ 893C
  19+ 893C 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893D 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8941 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8945 01 02
  22+ 8947 02 01 01 01  	db 2,1,1,1,1,2
  22+ 894B 01 02
  23+ 894D
# file closed: Niveles.asm
 108  894D
 109  894D              ; ******************************************************************************************************************************************************************************************
 110  894D              ; Constantes.
 111  894D              ; ******************************************************************************************************************************************************************************************
 112  894D              ;
 113  894D              ; 25/12/23
 114  894D
 115  894D              ;
 116  894D              ; Constantes.
 117  894D              ;
 118  894D
 119  894D              Sprite_vacio equ $eae0
 120  894D              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  894D              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  894D              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  894D              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  894D
 125  894D              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 126  894D              ;														;
 127  894D              Almacen_de_movimientos_masticados_Amadeus equ $e700
 128  894D
 129  894D              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 130  894D              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 131  894D              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 132  894D              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 133  894D              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 134  894D              ;														; 55 Bytes.
 135  894D
 136  894D              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 137  894D              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 138  894D
 139  894D              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 140  894D
 141  894D              ; ******************************************************************************************************************************************************************************************
 142  894D              ; Variables.
 143  894D              ; ******************************************************************************************************************************************************************************************
 144  894D              ;
 145  894D              ; 18/01/24
 146  894D              ;
 147  894D              ; Variables de DRAW. (Motor principal).	42 Bytes.
 148  894D              ;
 149  894D
 150  894D              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 151  894D
 152  894D 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 153  894E              ;															- Patrón de movimiento.
 154  894E              ;															- Aspecto
 155  894E 00           Filas db 0												; Filas. [DRAW]
 156  894F 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 157  8950 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 158  8952 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 159  8954 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 160  8955 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 161  8956
 162  8956              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 163  8956
 164  8956 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 165  8957              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 166  8957              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 167  8957 00           Attr db 0												; Atributos de la entidad:
 168  8958
 169  8958              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 170  8958              ;
 171  8958              ;	COLORES: 0 ..... NEGRO
 172  8958              ;    		 1 ..... AZUL
 173  8958              ; 			 2 ..... ROJO
 174  8958              ;			 3 ..... MAGENTA
 175  8958              ; 			 4 ..... VERDE
 176  8958              ; 			 5 ..... CIAN
 177  8958              ;			 6 ..... AMARILLO
 178  8958              ; 			 7 ..... BLANCO
 179  8958
 180  8958 00 00        Indice_Sprite_der defw 0
 181  895A 00 00        Indice_Sprite_izq defw 0
 182  895C 00 00        Puntero_DESPLZ_der defw 0
 183  895E 00 00        Puntero_DESPLZ_izq defw 0
 184  8960
 185  8960 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 186  8962 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 187  8963
 188  8963              ; Variables de objeto. (Características).
 189  8963
 190  8963 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 191  8964              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 192  8964              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 193  8964 00 00 00...  Variables_de_borrado ds 6
 194  896A
 195  896A 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 196  896C              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 197  896C
 198  896C 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 199  896E
 200  896E              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 201  896E              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 202  896E
 203  896E 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 204  8970              ;														; _palabras que componen el "movimiento_masticado".
 205  8970
 206  8970              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 207  8970
 208  8970 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 209  8971              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 210  8971              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 211  8971              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 212  8971              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 213  8971              ;
 214  8971              ; 														DESCRIPCIÖN:
 215  8971              ;
 216  8971              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 217  8971              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 218  8971              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 219  8971              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 220  8971              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 221  8971              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 222  8971              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 223  8971              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 224  8971              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 225  8971              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 226  8971              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 227  8971              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 228  8971              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 229  8971              ;
 230  8971              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 231  8971              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 232  8971              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 233  8971
 234  8971              ; Variables de funcionamiento. [DRAW].
 235  8971
 236  8971 00           Columnas db 0
 237  8972 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 238  8974              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8974 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 240  8975
 241  8975              ; variables de control general.
 242  8975
 243  8975 00           Ctrl_2 db 0
 244  8976              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 245  8976              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 246  8976              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 247  8976              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 248  8976              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 249  8976              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 250  8976              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 251  8976              ;
 252  8976              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 253  8976              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 254  8976              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 255  8976              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 256  8976              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 257  8976              ;														BIT 4, ???
 258  8976              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 259  8976
 260  8976 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 261  8977
 262  8977              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 263  8977
 264  8977              ;					         		---------;      ;---------
 265  8977
 266  8977              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 267  8977
 268  8977              Perfiles_de_velocidad
 269  8977
 270  8977 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 271  8978 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 272  8979 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 273  897A 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 274  897B
 275  897B              ; Contadores de 16 bits.
 276  897B
 277  897B 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 278  897D 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 279  897F 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 280  8981 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 281  8983
 282  8983              ; Movimiento. ------------------------------------------------------------------------------------------------------
 283  8983
 284  8983 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 285  8985 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 286  8987 00 00        Puntero_indice_mov_bucle defw 0							;
 287  8989              ;
 288  8989              ;
 289  8989 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 290  898A              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 291  898A              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 292  898A 00           Incrementa_puntero_backup db 0
 293  898B 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 294  898C              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 295  898C 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 296  898D 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 297  898E 00           Cola_de_desplazamiento db 0								; Este byte indica:
 298  898F              ;
 299  898F              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 300  898F              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 301  898F              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 302  898F              ;
 303  898F              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 304  898F              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 305  898F              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 306  898F              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 307  898F              ;
 308  898F              ;														;	"$ff" ..... Bucle infinito de repetición.
 309  898F              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 310  898F              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 311  898F              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 312  898F
 313  898F 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 314  8990
 315  8990              ;														DESCRIPCIÓN:
 316  8990              ;
 317  8990              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 318  8990              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 319  8990              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 320  8990              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 321  8990              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 322  8990              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 323  8990
 324  8990              ;														BIT 3, Recarga de nueva oleada.
 325  8990              ;														BIT 4, Recarga de nueva oleada.
 326  8990              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 327  8990              ;														BIT 6, **** Frame completo.
 328  8990              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 329  8990
 330  8990 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 331  8992              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 332  8992              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 333  8992              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 334  8992
 335  8992              ; Gestión de ENTIDADES y CAJAS.
 336  8992
 337  8992 00 00        Puntero_store_caja defw 0
 338  8994 00 00        Puntero_restore_caja defw 0
 339  8996 00 00        Indice_restore_caja defw 0
 340  8998 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 341  8999 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 342  899A 00           Entidades_en_curso db 0									; ..... ..... .....
 343  899B 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 344  899C              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 345  899C              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 346  899C              ;														; _ (Numero_de_malotes)="0".
 347  899C 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 348  899E 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 349  89A0              ;														; _ puntero (Indice_entidades).
 350  89A0
 351  89A0              ;---------------------------------------------------------------------------------------------------------------
 352  89A0              ;
 353  89A0              ;	11/01/24
 354  89A0              ;
 355  89A0              ;	Álbumes.
 356  89A0
 357  89A0 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 358  89A2              ;														; _variable para almacenar lo posición del puntero_
 359  89A2              ; 														; _de pila, SP.
 360  89A2 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 361  89A4              ;														; La utiliza la rutina [Extrae_foto_registros].
 362  89A4 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 363  89A6 00 80        Stack_snapshot defw Album_de_fotos
 364  89A8 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 365  89AA
 366  89AA              ;End_Snapshot defw Album_de_fotos
 367  89AA              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 368  89AA 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 369  89AC              ;														; _el snapshot de los registros del siguiente disparo.
 370  89AC              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 371  89AC AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 372  89AE
 373  89AE 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 374  89AF              ;
 375  89AF              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 376  89AF              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 377  89AF              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 378  89AF
 379  89AF 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 380  89B0              ;
 381  89B0              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 382  89B0              ;
 383  89B0              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 384  89B0              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 385  89B0              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 386  89B0              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 387  89B0              ;
 388  89B0              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 389  89B0              ;															_ masticados ya generados.
 390  89B0              ;
 391  89B0              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 392  89B0              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 393  89B0              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 394  89B0              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 395  89B0
 396  89B0
 397  89B0              ; Gestión de Disparos.
 398  89B0
 399  89B0 00           Numero_de_disparotes db 0
 400  89B1 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 401  89B3 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 402  89B5 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 403  89B6              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 404  89B6              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 405  89B6 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 406  89B8              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 407  89B8              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 408  89B8              ;														; _produzca colisión.
 409  89B8 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 410  89BA              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 411  89BA 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 412  89BD              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 413  89BD 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 414  89C0              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 415  89C0 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 416  89C1
 417  89C1              ;---------------------------------------------------------------------------------------------------------------
 418  89C1
 419  89C1              ; Relojes y temporizaciones.
 420  89C1
 421  89C1 00           Contador_de_frames db 0
 422  89C2 00           Contador_de_frames_2 db 0
 423  89C3
 424  89C3 04           Clock_explosion db 4
 425  89C4 14           Clock_Entidades_en_curso db 20
 426  89C5 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 427  89C6              ;														; Repite la oleada de entidades.
 428  89C6 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 429  89C7 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 430  89C8 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 431  89C9
 432  89C9 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 433  89CA 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 434  89CB 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 435  89CC
 436  89CC              ;---------------------------------------------------------------------------------------------------------------
 437  89CC
 438  89CC              ; Gestión de NIVELES.
 439  89CC
 440  89CC 00           Nivel db 0												; Nivel actual del juego.
 441  89CD 00 00        Puntero_indice_NIVELES defw 0
 442  89CF 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 443  89D1              ; 														; _ que definen el NIVEL.
 444  89D1              ; Y todo comienza aquí .....
 445  89D1              ;
 446  89D1              ; 	INICIO  *************************************************************************************************************************************************************************
 447  89D1              ;
 448  89D1              ;	5/1/24
 449  89D1
 450  89D1              START
 451  89D1
 452  89D1 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 453  89D4 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 454  89D6 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 455  89D8 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 456  89DA F3           	DI
 457  89DB
 458  89DB 3E 07        	ld a,%00000111
 459  89DD CD E0 9E     	call Cls
 460  89E0 CD 4C 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 461  89E3
 462  89E3              ; INICIALIZACIÓN.
 463  89E3
 464  89E3              ;	Inicializa 1er Nivel.
 465  89E3
 466  89E3 21 28 89     	ld hl,Indice_de_niveles
 467  89E6 22 CD 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 468  89E9 CD 10 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 469  89EC
 470  89EC              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 471  89EC              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 472  89EC              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 473  89EC
 474  89EC              ;	Provisional, (para desarrollo).
 475  89EC
 476  89EC              	;-
 477  89EC              ;	ld hl,Numero_parcial_de_entidades
 478  89EC              ;	ld b,(hl)
 479  89EC              ;	inc b
 480  89EC              ;	dec b
 481  89EC              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 482  89EC
 483  89EC CD 3F 8D     4 call Inicia_Entidades
 484  89EF
 485  89EF CD 0F 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 486  89F2
 487  89F2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 488  89F2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 489  89F2              ; (Esto se dá cuando se inicia una nueva oleada).
 490  89F2
 491  89F2              ;	ld a,(Ctrl_1)
 492  89F2              ;	bit 3,a
 493  89F2              ;	jr nz,5F											; Loop
 494  89F2
 495  89F2              ; 	INICIA AMADEUS !!!!!
 496  89F2
 497  89F2              ;3 call Restore_Amadeus
 498  89F2              ;	call Inicia_Puntero_objeto
 499  89F2              ;	call Draw
 500  89F2
 501  89F2              ;	call Guarda_movimiento_masticado	;! Provisional
 502  89F2
 503  89F2              ;	call Guarda_foto_registros
 504  89F2              ;	call Guarda_datos_de_borrado_Amadeus
 505  89F2
 506  89F2              ;	ld de,Amadeus_db
 507  89F2              ;	call Store_Amadeus
 508  89F2
 509  89F2              ; 	INICIA DISPAROS !!!!!
 510  89F2
 511  89F2              ;	call Inicia_Puntero_Disparo_Entidades
 512  89F2              ;	call Inicia_Puntero_Disparo_Amadeus
 513  89F2
 514  89F2              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 515  89F2
 516  89F2              ;5 call Inicia_punteros_de_cajas
 517  89F2              ;	call Restore_entidad
 518  89F2
 519  89F2              ;	ld a,(Ctrl_1)
 520  89F2              ;	bit 3,a
 521  89F2              ;	jr z,6F
 522  89F2
 523  89F2              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 524  89F2
 525  89F2              ;	ld hl,Ctrl_1
 526  89F2              ;	res 3,(hl)
 527  89F2              ;	jr Main
 528  89F2
 529  89F2              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 530  89F2
 531  89F2 21 AE 89     6 ld hl,Ctrl_3
 532  89F5 CB C6        	set 0,(hl)											; Frame completo.
 533  89F7 FB           	ei
 534  89F8 76           	halt
 535  89F9
 536  89F9              ; ------------------------------------
 537  89F9
 538  89F9              Main
 539  89F9              ;
 540  89F9              ;	11/12/23
 541  89F9
 542  89F9              ; Aparece nueva entidad ???
 543  89F9
 544  89F9              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 545  89F9              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 546  89F9              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 547  89F9              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 548  89F9              ;														; _un 2º bloque.
 549  89F9
 550  89F9              ;	ld a,1
 551  89F9              ;	out ($fe),a
 552  89F9
 553  89F9 3A C4 89     	ld a,(Clock_Entidades_en_curso)
 554  89FC 47           	ld b,a
 555  89FD 3A C1 89     	ld a,(Contador_de_frames)
 556  8A00 B8           	cp b
 557  8A01 20 18        	jr nz,13F
 558  8A03
 559  8A03              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 560  8A03              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 561  8A03
 562  8A03 3A 99 89     21 ld a,(Numero_parcial_de_entidades)
 563  8A06 47           	ld b,a
 564  8A07 3A 9A 89     	ld a,(Entidades_en_curso)
 565  8A0A B8           	cp b
 566  8A0B 28 0E        	jr z,13F
 567  8A0D 30 0C        	jr nc,13F
 568  8A0F
 569  8A0F 3C           	inc a
 570  8A10 32 9A 89     	ld (Entidades_en_curso),a
 571  8A13
 572  8A13              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 573  8A13
 574  8A13 3A C4 89     	ld a,(Clock_Entidades_en_curso)
 575  8A16              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 576  8A16              ;! _ IMPREDECIBLE !!!!
 577  8A16 C6 64        	add 100
 578  8A18 32 C4 89     	ld (Clock_Entidades_en_curso),a
 579  8A1B
 580  8A1B              ; -------------------------------------------------------------------------------------------------------------
 581  8A1B
 582  8A1B              ; Habilita disparos.
 583  8A1B
 584  8A1B              13
 585  8A1B
 586  8A1B              ;	ld hl,Disparo_Amadeus
 587  8A1B              ;	ld de,CLOCK_repone_disparo_Amadeus
 588  8A1B              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 589  8A1B
 590  8A1B              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 591  8A1B              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 592  8A1B              ;	call Habilita_disparos
 593  8A1B
 594  8A1B              ; COLISIONES.
 595  8A1B
 596  8A1B              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 597  8A1B
 598  8A1B              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 599  8A1B              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 600  8A1B              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 601  8A1B
 602  8A1B              ;	xor a
 603  8A1B              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 604  8A1B
 605  8A1B              ;	call Inicia_punteros_de_cajas
 606  8A1B              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 607  8A1B              ; 														; _ en DRAW.
 608  8A1B
 609  8A1B              ;	ld a,(Filas)
 610  8A1B              ;	and a
 611  8A1B              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 612  8A1B              ;	call Incrementa_punteros_de_cajas
 613  8A1B              ;	jr 12B
 614  8A1B
 615  8A1B              ; ---------------------------------------------------------------------------------------
 616  8A1B
 617  8A1B 3A 99 89     10 ld a,(Numero_parcial_de_entidades)
 618  8A1E 47               ld b,a
 619  8A1F A7           	and a
 620  8A20 20 00        	jr nz,11F
 621  8A22
 622  8A22              ;	ld hl,Ctrl_1;
 623  8A22              ;	bit 4,(hl)
 624  8A22              ;	jp nz,16F
 625  8A22
 626  8A22              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 627  8A22
 628  8A22              ;	ld hl,Ctrl_1
 629  8A22              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 630  8A22
 631  8A22              ;	ld a,(Contador_de_frames)
 632  8A22              ;	inc a
 633  8A22              ;	ld (Activa_recarga_cajas),a
 634  8A22
 635  8A22              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 636  8A22
 637  8A22 3A 9A 89     11 ld a,(Entidades_en_curso)
 638  8A25 A7           	and a
 639  8A26 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 640  8A28 47           	ld b,a												; No hay entidades que gestionar.
 641  8A29
 642  8A29              ; ( Código que ejecutamos con cada entidad: ).
 643  8A29
 644  8A29              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 645  8A29
 646  8A29 C5           15 push bc 												; Nº de entidades en curso.
 647  8A2A
 648  8A2A CD E2 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 649  8A2D
 650  8A2D
 651  8A2D 3A AE 89     	ld a,(Ctrl_3)
 652  8A30 CB 57        	bit 2,a
 653  8A32 F3           	di
 654  8A33 20 FE        	jr nz,$
 655  8A35 FB           	ei
 656  8A36
 657  8A36
 658  8A36
 659  8A36
 660  8A36              ; Existe "Entidad_guía" ???.
 661  8A36              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 662  8A36
 663  8A36              ;	ld a,(Ctrl_3)
 664  8A36              ;	bit 1,a
 665  8A36              ;	jr nz,22F
 666  8A36
 667  8A36              ; Almacén de "Movimientos_masticados" lleno ???
 668  8A36              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 669  8A36              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 670  8A36
 671  8A36              ;;	ld a,(Ctrl_3)
 672  8A36              ;;	bit 3,a
 673  8A36              ;;	jr nz,22F
 674  8A36
 675  8A36              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 676  8A36
 677  8A36              ;	ld hl,Ctrl_2
 678  8A36              ;	set 5,(hl)
 679  8A36              ;	ld hl,Ctrl_3
 680  8A36              ;	set 1,(hl)
 681  8A36
 682  8A36              ; Impacto ???
 683  8A36
 684  8A36              ;22 ld a,(Impacto)
 685  8A36              ;	and a
 686  8A36              ;	jr z,8F
 687  8A36
 688  8A36              ; Hay Impacto en esta entidad.
 689  8A36
 690  8A36              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 691  8A36              ;	dec (hl)
 692  8A36              ;	jp nz,17F
 693  8A36
 694  8A36              ;! Velocidad de la animación de la explosión.
 695  8A36
 696  8A36              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 697  8A36              ;														; _,(velocidad de la explosión).
 698  8A36              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 699  8A36
 700  8A36              ;	call Repone_datos_de_borrado
 701  8A36              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 702  8A36
 703  8A36              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 704  8A36
 705  8A36              ;	ld a,(Ctrl_2)
 706  8A36              ;	bit 1,a
 707  8A36              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 708  8A36
 709  8A36              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 710  8A36
 711  8A36              ;	ld a,(CTRL_DESPLZ)
 712  8A36              ;	and a
 713  8A36              ;	jr nz,18F
 714  8A36
 715  8A36              ;	ld hl,Indice_Explosion_2x2-2
 716  8A36              ;	ld (Puntero_DESPLZ_der),hl
 717  8A36              ;	jr 19F
 718  8A36
 719  8A36              ;18 ld hl,Indice_Explosion_2x3-2
 720  8A36              ;	ld (Puntero_DESPLZ_der),hl
 721  8A36
 722  8A36              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 723  8A36              ;	set 1,(hl)
 724  8A36              ;	jr 7F
 725  8A36
 726  8A36              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 727  8A36              ; _con las coordenadas de la entidad almacenada en DRAW.
 728  8A36
 729  8A36              ;8 ld a,(Ctrl_1)
 730  8A36              ;	bit 2,a
 731  8A36              ;	jr z,7F
 732  8A36
 733  8A36              ;	ld hl,(Coordenadas_disparo_certero)
 734  8A36              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 735  8A36              ;														; E contiene la coordenada_X del disparo.
 736  8A36              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 737  8A36              ;														; H FILA, (Coordenada_y de la entidad).
 738  8A36              ;	and a
 739  8A36              ;	sbc hl,de
 740  8A36
 741  8A36              ;	call Determina_resultado_comparativa
 742  8A36
 743  8A36              ;	ld a,b
 744  8A36              ;	and a
 745  8A36              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 746  8A36
 747  8A36              ; ----- ----- -----
 748  8A36
 749  8A36              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 750  8A36              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 751  8A36
 752  8A36              ;	ld hl,Ctrl_1
 753  8A36              ;	res 2,(hl)
 754  8A36
 755  8A36 CD 52 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 756  8A39
 757  8A39              ;	ld a,(Ctrl_0)
 758  8A39              ;	bit 4,a
 759  8A39              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 760  8A39
 761  8A39              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 762  8A39              ; [[[
 763  8A39              ;	call Detecta_disparo_entidad
 764  8A39              ; ]]]
 765  8A39
 766  8A39 CD A9 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 767  8A3C
 768  8A3C              ;	ld hl,Ctrl_0
 769  8A3C              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 770  8A3C
 771  8A3C CD 99 8D     17 call Store_Restore_cajas
 772  8A3F
 773  8A3F C1           	pop bc
 774  8A40
 775  8A40 10 E7        	djnz 15B
 776  8A42
 777  8A42 CD 0F 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 778  8A45
 779  8A45              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 780  8A45              ; Hemos gestionado todas las unidades.
 781  8A45              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 782  8A45
 783  8A45              ;	ld hl,Ctrl_1
 784  8A45              ;	res 2,(hl)
 785  8A45
 786  8A45 21 AE 89     16 ld hl,Ctrl_3
 787  8A48 CB C6        	set 0,(hl)											; Frame completo.
 788  8A4A
 789  8A4A AF           	xor a
 790  8A4B D3 FE        	out ($fe),a
 791  8A4D
 792  8A4D 76           	halt
 793  8A4E
 794  8A4E              ; ----------------------------------------
 795  8A4E
 796  8A4E              ;	ld a,(Ctrl_1) 										; Existe Loop?
 797  8A4E              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 798  8A4E CA F9 89     	jp z,Main
 799  8A51
 800  8A51              ; RECARGA DE NUEVA OLEADA.
 801  8A51
 802  8A51              ;	ld a,(Contador_de_frames)
 803  8A51              ;	ld b,a
 804  8A51              ;	ld a,(Activa_recarga_cajas)
 805  8A51              ;	cp b
 806  8A51              ;	jr z,20F
 807  8A51
 808  8A51              ;	ld hl,Ctrl_1
 809  8A51              ;	set 4,(hl)
 810  8A51              ;	jp Main
 811  8A51
 812  8A51              ;20 ld hl,Ctrl_1
 813  8A51              ;	res 4,(hl)
 814  8A51
 815  8A51              ;	ld a,(Contador_de_frames)
 816  8A51
 817  8A51              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 818  8A51              ;! _ IMPREDECIBLE !!!!
 819  8A51
 820  8A51              ;	add 10
 821  8A51              ;	ld (Clock_Entidades_en_curso),a
 822  8A51
 823  8A51              ;	jp 4B
 824  8A51
 825  8A51 C9           	ret
 826  8A52
 827  8A52              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 828  8A52              ;
 829  8A52              ;	16/11/23
 830  8A52
 831  8A52              ;;Gestiona_Amadeus
 832  8A52
 833  8A52              ;! Activa/desactiva impacto con Amadeus.
 834  8A52
 835  8A52              ;	ld a,(Impacto)
 836  8A52              ;	and a
 837  8A52              ;	jr nz,2F
 838  8A52
 839  8A52              ;;	call Mov_Amadeus
 840  8A52
 841  8A52              ;;2 ld a,(Ctrl_0)
 842  8A52              ;;	bit 4,a
 843  8A52              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 844  8A52
 845  8A52              ;;	call Guarda_foto_entidad_a_pintar
 846  8A52              ;;	call Guarda_datos_de_borrado_Amadeus
 847  8A52
 848  8A52              ;;1 ld hl,Ctrl_0
 849  8A52              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 850  8A52
 851  8A52              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 852  8A52
 853  8A52              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 854  8A52
 855  8A52              ;	call Calcula_numero_de_disparotes
 856  8A52
 857  8A52              ;;	ret
 858  8A52
 859  8A52              ; --------------------------------------------------------------------------------------------------------------
 860  8A52              ;
 861  8A52              ;	15/12/23
 862  8A52
 863  8A52              Mov_obj
 864  8A52
 865  8A52              ;	ld a,(Ctrl_2)
 866  8A52              ;	bit 1,a
 867  8A52              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 868  8A52
 869  8A52              ; Explosión:
 870  8A52
 871  8A52              ;	ld a,(Frames_explosion)
 872  8A52              ;	and a
 873  8A52              ;	jr nz,4F
 874  8A52
 875  8A52              ;!  Una alimaña menos!!!!!!!!!1
 876  8A52
 877  8A52              ; Se trataba de una Entidad_guía ???
 878  8A52
 879  8A52              ;	ld a,(Ctrl_2)
 880  8A52              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 881  8A52              ;	jr z,5F
 882  8A52
 883  8A52              ;	ld hl,Ctrl_3
 884  8A52              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 885  8A52
 886  8A52              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 887  8A52              ;!! _generado puede ser distinto, (aletoriedad).
 888  8A52
 889  8A52              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 890  8A52              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 891  8A52              ;	dec (hl)
 892  8A52              ;	ld hl,Entidades_en_curso
 893  8A52              ;	dec (hl)
 894  8A52              ;	ld hl,Numero_de_entidades
 895  8A52              ;	dec (hl)
 896  8A52              ;	jr 3F
 897  8A52
 898  8A52              ; -----
 899  8A52
 900  8A52              ;	`Movemos´ la explosión.
 901  8A52
 902  8A52              ;4 ld hl,(Puntero_DESPLZ_der)
 903  8A52              ;	inc hl
 904  8A52              ;	inc hl
 905  8A52              ;	call Extrae_address
 906  8A52              ;;	ld (Puntero_objeto),hl
 907  8A52
 908  8A52              ;;	ld hl,Frames_explosion
 909  8A52              ;;	dec (hl)
 910  8A52
 911  8A52              ;;	ld hl,Ctrl_0
 912  8A52              ;;	set 4,(hl);;
 913  8A52
 914  8A52              ;;	jr 3F
 915  8A52
 916  8A52              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 917  8A52
 918  8A52              ;2 xor a
 919  8A52              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 920  8A52
 921  8A52              ; Movemos Entidades malignas.
 922  8A52              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 923  8A52
 924  8A52              ;	ld a,(Ctrl_2)
 925  8A52              ;	bit 5,a
 926  8A52              ;	jr nz,8F
 927  8A52
 928  8A52              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 929  8A52              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 930  8A52              ;	jr 7F
 931  8A52
 932  8A52              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 933  8A52
 934  8A52              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 935  8A52              ;	bit 4,a
 936  8A52              ;	ret z
 937  8A52
 938  8A52              ; Ha habido desplazamiento de la entidad maligna.
 939  8A52              ; Ha llegado a zona de AMADEUS ???
 940  8A52
 941  8A52              ;7 ld a,(Coordenada_y)
 942  8A52              ;	cp $14
 943  8A52              ;	jr c,1F
 944  8A52
 945  8A52              ; ---------
 946  8A52
 947  8A52              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 948  8A52              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 949  8A52
 950  8A52              ;	di
 951  8A52              ;	call Genera_coordenadas_X
 952  8A52              ;	call Compara_coordenadas_X
 953  8A52              ;	ei
 954  8A52
 955  8A52              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 956  8A52
 957  8A52              ; ---------
 958  8A52
 959  8A52              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 960  8A52 CD C0 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 961  8A55 CD 4D 8B     	call Limpia_Variables_de_borrado
 962  8A58
 963  8A58 C9           3 ret
 964  8A59
 965  8A59              ; --------------------------------------------------------------------------------------------------------------
 966  8A59              ;
 967  8A59              ;	29/1/23
 968  8A59
 969  8A59              Mov_Amadeus
 970  8A59
 971  8A59              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 972  8A59
 973  8A59 CD A3 95     	call Mov_right
 974  8A5C
 975  8A5C 3A 70 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 976  8A5F CB 67        	bit 4,a
 977  8A61 C8           	ret z
 978  8A62
 979  8A62              ; ---------
 980  8A62
 981  8A62              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 982  8A62 CD B0 8C     	call Repone_datos_de_borrado_Amadeus
 983  8A65 CD 4D 8B     	call Limpia_Variables_de_borrado
 984  8A68
 985  8A68 C9           	ret
 986  8A69
 987  8A69              ; -----------------------------------------------------------------------------------
 988  8A69              ;
 989  8A69              ;	20/01/24
 990  8A69              ;
 991  8A69              ;
 992  8A69
 993  8A69              Construye_movimientos_masticados_entidad
 994  8A69
 995  8A69 2A 6C 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 996  8A6C E5           	push hl
 997  8A6D CD B1 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 998  8A70              ;															; _ el (Contador_de_mov_masticados).
 999  8A70 CD AD 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1000  8A73              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1001  8A73 CD FF 94     	call Recompone_posicion_inicio
1002  8A76
1003  8A76 CD F3 8E     1 call Draw
1004  8A79 CD 95 8A     	call Guarda_movimiento_masticado
1005  8A7C
1006  8A7C CD 79 98     	call Movimiento
1007  8A7F
1008  8A7F 3A AE 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1009  8A82 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1010  8A84 28 F0        	jr z,1B
1011  8A86
1012  8A86              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1013  8A86              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1014  8A86
1015  8A86 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1016  8A87 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1017  8A8A
1018  8A8A              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1019  8A8A
1020  8A8A CD DD 99     	call Situa_en_contador_general_de_mov_masticados
1021  8A8D
1022  8A8D              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1023  8A8D              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1024  8A8D
1025  8A8D ED 4B 6E 89  	ld bc,(Contador_de_mov_masticados)
1026  8A91 71           	ld (hl),c
1027  8A92 23           	inc hl
1028  8A93 70           	ld (hl),b
1029  8A94
1030  8A94 C9           	ret
1031  8A95
1032  8A95              ; -----------------------------------------------------------------------------------
1033  8A95              ;
1034  8A95              ;	28/12/23
1035  8A95              ;
1036  8A95              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1037  8A95              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1038  8A95
1039  8A95              Guarda_movimiento_masticado
1040  8A95
1041  8A95 ED 73 A0 89  	ld (Stack),sp
1042  8A99 ED 7B 6C 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1043  8A9D
1044  8A9D E5           	push hl
1045  8A9E DD E5            push ix
1046  8AA0 FD E5            push iy
1047  8AA2
1048  8AA2 ED 7B A0 89      ld sp,(Stack)
1049  8AA6
1050  8AA6 2A 6E 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1051  8AA9 23           	inc hl
1052  8AAA 22 6E 89     	ld (Contador_de_mov_masticados),hl
1053  8AAD
1054  8AAD CD B1 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1055  8AB0              ;															; _ el (Contador_de_mov_masticados).
1056  8AB0 C9               ret
1057  8AB1
1058  8AB1              ; --------------------------------------------------------------------------------------------------------------
1059  8AB1              ;
1060  8AB1              ;	12/1/24
1061  8AB1              ;
1062  8AB1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1063  8AB1
1064  8AB1              Actualiza_Puntero_de_almacen_de_mov_masticados
1065  8AB1
1066  8AB1 2A 6C 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1067  8AB4 01 06 00     	ld bc,6
1068  8AB7 A7           	and a
1069  8AB8 ED 4A        	adc hl,bc
1070  8ABA 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1071  8ABD C9           	ret
1072  8ABE
1073  8ABE              ; --------------------------------------------------------------------------------------------------------------
1074  8ABE              ;
1075  8ABE              ;	15/01/24
1076  8ABE              ;
1077  8ABE              ;	Cargamos los registros_
1078  8ABE              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1079  8ABE              ;
1080  8ABE              ;	HL contiene la dirección de la rutina de impresión.
1081  8ABE              ;	IX contiene el puntero de impresión.
1082  8ABE              ;	IY contiene (Puntero_objeto).
1083  8ABE
1084  8ABE
1085  8ABE ED 73 A0 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1086  8AC2 ED 7B 6C 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1087  8AC6
1088  8AC6 FD E1        	pop iy
1089  8AC8 DD E1        	pop ix
1090  8ACA E1           	pop hl
1091  8ACB
1092  8ACB ED 73 6C 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1093  8ACF
1094  8ACF ED 7B A0 89  	ld sp,(Stack)
1095  8AD3
1096  8AD3 C9           	ret
1097  8AD4
1098  8AD4              ; --------------------------------------------------------------------------------------------------------------
1099  8AD4              ;
1100  8AD4              ;	28/12/23
1101  8AD4              ;
1102  8AD4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1103  8AD4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1104  8AD4
1105  8AD4              Guarda_foto_entidad_a_pintar
1106  8AD4
1107  8AD4 3A 70 89     	ld a,(Ctrl_0)
1108  8AD7 CB 77        	bit 6,a
1109  8AD9 28 04        	jr z,5F
1110  8ADB
1111  8ADB              ;	Guarda la foto de Amadeus.
1112  8ADB
1113  8ADB              ;	call Draw
1114  8ADB              ;	call Guarda_movimiento_masticado	;! Provisional
1115  8ADB CD BF 80     	call Guarda_foto_registros
1116  8ADE C9           	ret
1117  8ADF
1118  8ADF              ; ENTIDADES!
1119  8ADF              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1120  8ADF
1121  8ADF 3A AE 89     5 ld a,(Ctrl_3)
1122  8AE2 CB 5F        	bit 3,a
1123  8AE4 28 01        	jr z,1F
1124  8AE6
1125  8AE6              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1126  8AE6
1127  8AE6              4
1128  8AE6              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1129  8AE6 C9           	ret
1130  8AE7
1131  8AE7              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1132  8AE7
1133  8AE7 3A AE 89     1 ld a,(Ctrl_3)
1134  8AEA CB 57        	bit 2,a
1135  8AEC 20 10        	jr nz,6F
1136  8AEE
1137  8AEE              ; Entidad guía o fantasma ???
1138  8AEE
1139  8AEE 3A 75 89     	ld a,(Ctrl_2)
1140  8AF1 CB 6F        	bit 5,a
1141  8AF3 20 10        	jr nz,3F
1142  8AF5
1143  8AF5              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1144  8AF5
1145  8AF5 18 EF        	jr 4B
1146  8AF7
1147  8AF7              ; ENTIDAD_GUÍA:
1148  8AF7              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1149  8AF7              ; _guardando "movimientos_masticados".
1150  8AF7
1151  8AF7 3A AE 89     2 ld a,(Ctrl_3)
1152  8AFA CB 57        	bit 2,a
1153  8AFC 28 07        	jr z,3F
1154  8AFE
1155  8AFE              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1156  8AFE              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1157  8AFE
1158  8AFE CB 97        6 res 2,a
1159  8B00 CB DF        	set 3,a
1160  8B02 32 AE 89     	ld (Ctrl_3),a
1161  8B05
1162  8B05
1163  8B05              ;	Esto sólo lo ejecuta una entidad guía.
1164  8B05
1165  8B05 CD F3 8E     3 	call Draw
1166  8B08 CD 95 8A     	call Guarda_movimiento_masticado
1167  8B0B CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1168  8B0E
1169  8B0E              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1170  8B0E              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1171  8B0E
1172  8B0E              ;	call Convierte_guia_en_fantasma
1173  8B0E C9           	ret
1174  8B0F
1175  8B0F              ; *************************************************************************************************************************************************************
1176  8B0F              ;
1177  8B0F              ; 8/1/23
1178  8B0F              ;
1179  8B0F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1180  8B0F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1181  8B0F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1182  8B0F
1183  8B0F              ; Destruye HL y DE !!!!!
1184  8B0F
1185  8B0F              Inicia_punteros_de_cajas
1186  8B0F
1187  8B0F 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1188  8B12 CD A7 8B         call Extrae_address
1189  8B15 22 92 89         ld (Puntero_store_caja),hl
1190  8B18 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1191  8B1B 22 96 89     	ld (Indice_restore_caja),hl
1192  8B1E CD A7 8B     	call Extrae_address
1193  8B21 22 94 89     	ld (Puntero_restore_caja),hl
1194  8B24 C9               ret
1195  8B25
1196  8B25              ; *************************************************************************************************************************************************************
1197  8B25              ;
1198  8B25              ; 8/1/23
1199  8B25              ;
1200  8B25              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1201  8B25
1202  8B25 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1203  8B28 22 B1 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1204  8B2B C9           	ret
1205  8B2C 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1206  8B2F 22 B3 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1207  8B32 C9           	ret
1208  8B33
1209  8B33              ; -------------------------------------------------------------------------------------------------------------
1210  8B33              ;
1211  8B33              ; 21/9/23
1212  8B33              ;
1213  8B33
1214  8B33              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1215  8B33
1216  8B33              Limpia_album_Amadeus
1217  8B33
1218  8B33 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1219  8B36 7E           	ld a,(hl)
1220  8B37 A7           	and a
1221  8B38 C8           	ret z
1222  8B39
1223  8B39 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1224  8B3C 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1225  8B3F 01 0B 00     	ld bc,11
1226  8B42 AF           	xor a
1227  8B43 77           	ld (hl),a
1228  8B44 ED B0        	ldir
1229  8B46
1230  8B46 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1231  8B49 22 AC 89     	ld (End_Snapshot_Amadeus),hl
1232  8B4C
1233  8B4C C9           	ret
1234  8B4D
1235  8B4D 21 64 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1236  8B50 11 65 89     	ld de,Variables_de_borrado+1
1237  8B53 01 05 00     	ld bc,5
1238  8B56 AF           	xor a
1239  8B57 77           	ld (hl),a
1240  8B58 ED B0        	ldir
1241  8B5A C9           	ret
1242  8B5B
1243  8B5B              ; -------------------------------------------------------------------------------------------------------------
1244  8B5B              ;
1245  8B5B              ; 8/9/23
1246  8B5B              ;
1247  8B5B
1248  8B5B              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1249  8B5B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1250  8B5B
1251  8B5B              Calcula_numero_de_malotes
1252  8B5B
1253  8B5B 21 00 80     	ld hl,Album_de_fotos
1254  8B5E EB           	ex de,hl
1255  8B5F 2A A6 89     	ld hl,(Stack_snapshot)
1256  8B62
1257  8B62 06 00        	ld b,0
1258  8B64 7D           	ld a,l
1259  8B65 93           	sub e
1260  8B66 28 07        	jr z,1F
1261  8B68
1262  8B68              ; Nº de malotes no es "0".
1263  8B68
1264  8B68 D6 06        2 sub 6
1265  8B6A 04           	inc b
1266  8B6B A7           	and a
1267  8B6C 20 FA        	jr nz,2B
1268  8B6E 78           	ld a,b
1269  8B6F
1270  8B6F 32 9B 89     1 ld (Numero_de_malotes),a
1271  8B72 C9           	ret
1272  8B73
1273  8B73              ; -------------------------------------------------------------------------------------------------------------
1274  8B73              ;
1275  8B73              ; 8/9/23
1276  8B73              ;
1277  8B73
1278  8B73              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1279  8B73              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1280  8B73
1281  8B73              Calcula_malotes_Amadeus
1282  8B73
1283  8B73 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1284  8B76 EB           	ex de,hl
1285  8B77 2A AC 89     	ld hl,(End_Snapshot_Amadeus)
1286  8B7A
1287  8B7A 7C           	ld a,h
1288  8B7B A7           	and a
1289  8B7C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1290  8B7E
1291  8B7E 06 00        	ld b,0
1292  8B80 7D           	ld a,l
1293  8B81 93           	sub e
1294  8B82 28 07        	jr z,1F
1295  8B84
1296  8B84              ; Nº de malotes no es "0".
1297  8B84
1298  8B84 D6 06        2 sub 6
1299  8B86 04           	inc b
1300  8B87 A7           	and a
1301  8B88 20 FA        	jr nz,2B
1302  8B8A 78           	ld a,b
1303  8B8B
1304  8B8B 32 9B 89     1 ld (Numero_de_malotes),a
1305  8B8E C9           	ret
1306  8B8F
1307  8B8F              ; -------------------------------------------------------------------------------------------------------------
1308  8B8F              ;
1309  8B8F              ; 28/2/23
1310  8B8F              ;
1311  8B8F
1312  8B8F              Calcula_numero_de_disparotes
1313  8B8F
1314  8B8F 21 56 80     	ld hl,Album_de_fotos_disparos
1315  8B92 EB           	ex de,hl
1316  8B93 2A AA 89     	ld hl,(End_Snapshot_disparos)
1317  8B96
1318  8B96 06 00        	ld b,0
1319  8B98 7D           	ld a,l
1320  8B99 93           	sub e
1321  8B9A 28 07        	jr z,1F
1322  8B9C
1323  8B9C              ; Nº de malotes no es "0".
1324  8B9C
1325  8B9C D6 06        2 sub 6
1326  8B9E 04           	inc b
1327  8B9F A7           	and a
1328  8BA0 20 FA        	jr nz,2B
1329  8BA2 78           	ld a,b
1330  8BA3
1331  8BA3 32 B0 89     1 ld (Numero_de_disparotes),a
1332  8BA6 C9           	ret
1333  8BA7
1334  8BA7              ; *************************************************************************************************************************************************************
1335  8BA7              ;
1336  8BA7              ; 20/10/22
1337  8BA7              ;
1338  8BA7              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1339  8BA7              ;
1340  8BA7              ; Destruye el puntero y DE !!!!!
1341  8BA7
1342  8BA7 5E           Extrae_address ld e,(hl)
1343  8BA8 23           	inc hl
1344  8BA9 56           	ld d,(hl)
1345  8BAA 2B           	dec hl
1346  8BAB EB           	ex de,hl
1347  8BAC C9           	ret
1348  8BAD
1349  8BAD              ; *************************************************************************************************************************************************************
1350  8BAD              ;
1351  8BAD              ;	20/1/24
1352  8BAD              ;
1353  8BAD              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1354  8BAD              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1355  8BAD              ;
1356  8BAD              ;   Destruye HL y BC !!!!!,
1357  8BAD              ;
1358  8BAD              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1359  8BAD              ;					"0" ..... Izquierda.
1360  8BAD
1361  8BAD              Inicia_Puntero_objeto
1362  8BAD
1363  8BAD 3A 62 89     	ld a,(Cuad_objeto)
1364  8BB0 E6 01        	and 1
1365  8BB2 F5           	push af
1366  8BB3 CC CF 8B     	call z,Inicia_puntero_objeto_izq
1367  8BB6 F1           	pop af
1368  8BB7 C8           	ret z
1369  8BB8 CD BC 8B     	call Inicia_puntero_objeto_der
1370  8BBB C9           	ret
1371  8BBC
1372  8BBC              ; Arrancamos desde la parte izquierda de la pantalla.
1373  8BBC              ; Iniciamos (Indice_Sprite_der).
1374  8BBC
1375  8BBC 2A 58 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1376  8BBF 22 5C 89     	ld (Puntero_DESPLZ_der),hl
1377  8BC2 CD A7 8B     	call Extrae_address
1378  8BC5 22 52 89     	ld (Puntero_objeto),hl
1379  8BC8
1380  8BC8 2A 5A 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1381  8BCB 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
1382  8BCE C9           	ret
1383  8BCF
1384  8BCF              ; Arrancamos desde la parte derecha de la pantalla.
1385  8BCF              ; Iniciamos (Indice_Sprite_izq).
1386  8BCF
1387  8BCF 2A 5A 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1388  8BD2 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
1389  8BD5 CD A7 8B     	call Extrae_address
1390  8BD8 22 52 89     	ld (Puntero_objeto),hl
1391  8BDB
1392  8BDB 2A 58 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1393  8BDE 22 5C 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1394  8BE1 C9           	ret
1395  8BE2
1396  8BE2              ; **************************************************************************************************
1397  8BE2              ;
1398  8BE2              ;	31/01/24
1399  8BE2              ;
1400  8BE2              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1401  8BE2
1402  8BE2              Restore_entidad
1403  8BE2
1404  8BE2 2A 92 89     	ld hl,(Puntero_store_caja)
1405  8BE5 11 4D 89     	ld de,Bandeja_DRAW
1406  8BE8 7E           	ld a,(hl)
1407  8BE9 12           	ld (de),a
1408  8BEA 23           	inc hl 											; (Tipo).
1409  8BEB
1410  8BEB 11 54 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1411  8BEE 01 02 00     	ld bc,2
1412  8BF1 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1413  8BF3
1414  8BF3 13           	inc de
1415  8BF4 7E           	ld a,(hl)
1416  8BF5 12           	ld (de),a 										; Transferimos (Attr).
1417  8BF6 23           	inc hl
1418  8BF7
1419  8BF7 11 63 89     	ld de,Impacto
1420  8BFA
1421  8BFA 7E           	ld a,(hl)
1422  8BFB 12           	ld (de),a 										; Transferimos (Impacto).
1423  8BFC 23           	inc hl
1424  8BFD
1425  8BFD 13           	inc de
1426  8BFE
1427  8BFE 01 06 00     	ld bc,6
1428  8C01 ED B0        	ldir
1429  8C03
1430  8C03 01 07 00     	ld bc,7
1431  8C06 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1432  8C08              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1433  8C08 11 75 89     	ld de,Ctrl_2
1434  8C0B
1435  8C0B 7E           	ld a,(hl)
1436  8C0C 12           	ld (de),a 										; Transferimos (Ctrl_2).
1437  8C0D
1438  8C0D C9           	ret
1439  8C0E
1440  8C0E              ; **************************************************************************************************
1441  8C0E              ;
1442  8C0E              ;	08/05/23
1443  8C0E              ;
1444  8C0E              ;	Incrementamos los dos punteros de entidades. (+1).
1445  8C0E
1446  8C0E              Incrementa_punteros_de_cajas
1447  8C0E
1448  8C0E 2A 94 89     	ld hl,(Puntero_restore_caja)
1449  8C11 22 92 89     	ld (Puntero_store_caja),hl
1450  8C14 2A 96 89     	ld hl,(Indice_restore_caja)
1451  8C17 23           	inc hl
1452  8C18 23           	inc hl
1453  8C19 22 96 89     	ld (Indice_restore_caja),hl
1454  8C1C CD A7 8B         call Extrae_address
1455  8C1F 22 94 89         ld (Puntero_restore_caja),hl
1456  8C22 C9               ret
1457  8C23
1458  8C23              ; **************************************************************************************************
1459  8C23              ;
1460  8C23              ;	21/12/23
1461  8C23              ;
1462  8C23              ;	Restore_Amadeus
1463  8C23              ;
1464  8C23              ;	Cargamos en DRAW los parámetros de Amadeus.
1465  8C23              ;
1466  8C23
1467  8C23 E5           Restore_Amadeus	push hl
1468  8C24 D5           	push de
1469  8C25 C5            	push bc
1470  8C26 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1471  8C29 11 4D 89     	ld de,Bandeja_DRAW
1472  8C2C 01 2A 00     	ld bc,42
1473  8C2F ED B0        	ldir
1474  8C31 C1           	pop bc
1475  8C32 D1           	pop de
1476  8C33 E1           	pop hl
1477  8C34 C9           	ret
1478  8C35
1479  8C35              ; *************************************************************************************************************************************************************
1480  8C35              ;
1481  8C35              ;	21/12/23
1482  8C35              ;
1483  8C35              ;	Store_Amadeus
1484  8C35              ;
1485  8C35              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1486  8C35              ;
1487  8C35              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1488  8C35              ;
1489  8C35              ;	DESTRUYE: HL y BC y DE.
1490  8C35
1491  8C35 21 4D 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1492  8C38 01 2A 00     	ld bc,42
1493  8C3B ED B0        	ldir
1494  8C3D C9           	ret
1495  8C3E
1496  8C3E              ; -----------------------------------------------------------
1497  8C3E              ;
1498  8C3E              ;	21/12/23
1499  8C3E              ;
1500  8C3E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1501  8C3E              ;
1502  8C3E              ;	Destruye: HL,BC,DE,A
1503  8C3E
1504  8C3E 21 4D 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1505  8C41 01 29 00     	ld bc,41
1506  8C44 AF           	xor a
1507  8C45 77           	ld (hl),a
1508  8C46 11 4E 89     	ld de,Bandeja_DRAW+1
1509  8C49 ED B0        	ldir
1510  8C4B C9           	ret
1511  8C4C
1512  8C4C              ; -----------------------------------------------------------
1513  8C4C
1514  8C4C              ; Teclado.
1515  8C4C
1516  8C4C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1517  8C4E DB FE        	in a,($fe)
1518  8C50 E6 01        	and $01
1519  8C52 28 02        	jr z,1f
1520  8C54 18 F6        	jr Pulsa_ENTER
1521  8C56 C9           1 ret
1522  8C57
1523  8C57              ; **************************************************************************************************
1524  8C57              ;
1525  8C57              ; Temporización.
1526  8C57
1527  8C57              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1528  8C57              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1529  8C57              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1530  8C57              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1531  8C57
1532  8C57              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1533  8C57              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1534  8C57              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1535  8C57
1536  8C57              ; A partir de $4f61 no hace falta DELAY.
1537  8C57
1538  8C57              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1539  8C57
1540  8C57 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1541  8C5A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1542  8C5B 78           	LD A,B
1543  8C5C A7           	AND A
1544  8C5D 20 FB        	JR NZ,wait
1545  8C5F C9           	RET
1546  8C60
1547  8C60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1548  8C60              ;
1549  8C60              ;	5/3/23
1550  8C60              ;
1551  8C60              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1552  8C60
1553  8C60              Movimiento_Amadeus
1554  8C60
1555  8C60              ; Disparo.
1556  8C60
1557  8C60 3A C6 89     	ld a,(Disparo_Amadeus)
1558  8C63 A7           	and a
1559  8C64 20 02        	jr nz,1F
1560  8C66 18 15        	jr 2F
1561  8C68
1562  8C68 3E F7        1 ld a,$f7													; "5" para disparar.
1563  8C6A DB FE        	in a,($fe)
1564  8C6C E6 10        	and $10
1565  8C6E
1566  8C6E F5           	push af
1567  8C6F CC F3 99     	call z,Genera_disparo
1568  8C72 F1           	pop af
1569  8C73 20 08        	jr nz,2F
1570  8C75
1571  8C75 3A C6 89     	ld a,(Disparo_Amadeus)
1572  8C78 EE 01        	xor 1
1573  8C7A 32 C6 89     	ld (Disparo_Amadeus),a
1574  8C7D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1575  8C7F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1576  8C81 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1577  8C83 CC C6 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1578  8C86
1579  8C86 3E F7        	ld a,$f7
1580  8C88 DB FE        	in a,($fe)
1581  8C8A E6 01        	and $01
1582  8C8C C8           	ret z
1583  8C8D
1584  8C8D 3E F7        	ld a,$f7
1585  8C8F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1586  8C91 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1587  8C93 CC A3 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1588  8C96 C9           	ret
1589  8C97
1590  8C97              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1591  8C97              ;
1592  8C97              ;	Rutina provisional para que los malotes cagen balas.
1593  8C97
1594  8C97              Detecta_disparo_entidad
1595  8C97
1596  8C97 3A C9 89     	ld a,(Disparo_entidad)
1597  8C9A A7           	and a
1598  8C9B C8           	ret z
1599  8C9C
1600  8C9C              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1601  8C9C
1602  8C9C              ;	ld a,$7f				; Detecta SPACE.
1603  8C9C              ;	in a,($fe)
1604  8C9C              ;	and 1
1605  8C9C              ;	ret nz
1606  8C9C
1607  8C9C CD F3 99     	call Genera_disparo
1608  8C9F C9           	ret
1609  8CA0
1610  8CA0              ; ----------------------------------------------------------------------
1611  8CA0              ;
1612  8CA0              ;	8/9/23
1613  8CA0
1614  8CA0 2A AC 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1615  8CA3 2B            	dec hl
1616  8CA4 7E           	ld a,(hl)
1617  8CA5 A7           	and a
1618  8CA6 C8           	ret z										; Salimos si es álbum está vacío.
1619  8CA7
1620  8CA7 11 69 89     	ld de,Variables_de_borrado+5
1621  8CAA 01 06 00     	ld bc,6
1622  8CAD ED B8        	lddr
1623  8CAF C9           	ret
1624  8CB0
1625  8CB0              ; ----------------------------------------------------------------------
1626  8CB0              ;
1627  8CB0              ;	9/9/23
1628  8CB0
1629  8CB0              Repone_datos_de_borrado_Amadeus
1630  8CB0
1631  8CB0 21 64 89     	ld hl,Variables_de_borrado
1632  8CB3 11 AC 80     	ld de,Album_de_fotos_Amadeus
1633  8CB6 01 06 00     	ld bc,6
1634  8CB9 ED B0        	ldir
1635  8CBB
1636  8CBB EB           	ex de,hl
1637  8CBC 22 AC 89     	ld (End_Snapshot_Amadeus),hl
1638  8CBF
1639  8CBF C9           	ret
1640  8CC0
1641  8CC0              ; ----------------------------------------------------------------------
1642  8CC0              ;
1643  8CC0              ;	27/10/23
1644  8CC0              ;
1645  8CC0
1646  8CC0              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1647  8CC0              ;	_ Album_de_fotos correspondiente.
1648  8CC0
1649  8CC0              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1650  8CC0              ;	_ durante el proceso de escritura.
1651  8CC0
1652  8CC0              Repone_datos_de_borrado
1653  8CC0
1654  8CC0 ED 5B A6 89  	ld de,(Stack_snapshot)
1655  8CC4 21 64 89     	ld hl,Variables_de_borrado
1656  8CC7 01 06 00     	ld bc,6
1657  8CCA ED B0        	ldir
1658  8CCC
1659  8CCC EB           	ex de,hl
1660  8CCD 22 A6 89     	ld (Stack_snapshot),hl
1661  8CD0
1662  8CD0 C9           	ret
1663  8CD1
1664  8CD1              ; --------------------------------------------------------------------------------------
1665  8CD1
1666  8CD1              Pinta_Amadeus
1667  8CD1
1668  8CD1 CD 73 8B        	call Calcula_malotes_Amadeus
1669  8CD4 CD 8C 92     	call Extrae_foto_Amadeus
1670  8CD7 CD 33 8B     	call Limpia_album_Amadeus
1671  8CDA
1672  8CDA C9           	ret
1673  8CDB
1674  8CDB              Pinta_entidades
1675  8CDB
1676  8CDB              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1677  8CDB
1678  8CDB 3A AE 89     	ld a,(Ctrl_3)
1679  8CDE CB 47        	bit 0,a
1680  8CE0 C8           	ret z
1681  8CE1
1682  8CE1 3A AE 89     	ld a,(Ctrl_3)
1683  8CE4 CB 57        	bit 2,a
1684  8CE6 28 0C        	jr z,1F
1685  8CE8
1686  8CE8              ;	Sólo queremos borrar. Estamos reiniciando la entidad. Hemos de modificar (Stack_snapshot) para que la rutina [Extrae_foto_entidades] calcule el nº de malotes correctamente.
1687  8CE8
1688  8CE8 2A A6 89     	ld hl,(Stack_snapshot)
1689  8CEB 01 06 00     	ld bc,6
1690  8CEE A7           	and a
1691  8CEF ED 42        	sbc hl,bc
1692  8CF1 22 A6 89     	ld (Stack_snapshot),hl
1693  8CF4
1694  8CF4 CD 5B 8B     1 call Calcula_numero_de_malotes
1695  8CF7 CD 0A 92     	call Extrae_foto_entidades
1696  8CFA CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1697  8CFD
1698  8CFD C9           	ret
1699  8CFE
1700  8CFE              ; -----------------------------------------------------------------------------------
1701  8CFE              ;
1702  8CFE              ;	10/12/23
1703  8CFE              ;
1704  8CFE              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1705  8CFE
1706  8CFE              Actualiza_relojes
1707  8CFE
1708  8CFE 3A AE 89     	ld a,(Ctrl_3)
1709  8D01 CB 47        	bit 0,a
1710  8D03 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1711  8D04
1712  8D04 21 C1 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1713  8D07 34           	inc (hl)
1714  8D08
1715  8D08 34           	inc (hl)
1716  8D09 35           	dec (hl)
1717  8D0A C0           	ret nz
1718  8D0B
1719  8D0B 21 C2 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1720  8D0E 34           	inc (hl)
1721  8D0F C9           	ret
1722  8D10
1723  8D10              ; ---------------------------------------------------------------
1724  8D10
1725  8D10              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8D10              ;---------------------------------------------------------------------------------------------------------------
   2+ 8D10              ;
   3+ 8D10              ;   19/1/24
   4+ 8D10              ;
   5+ 8D10              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8D10              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8D10              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8D10              ;	_ de la 1ª entidad del Nivel.
   9+ 8D10              ;
  10+ 8D10              ;	MODIFICA: HL,DE y A.
  11+ 8D10              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8D10
  13+ 8D10              Inicializa_Nivel
  14+ 8D10
  15+ 8D10 2A CD 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8D13 CD A7 8B     	call Extrae_address
  17+ 8D16 7E           	ld a,(hl)
  18+ 8D17 32 98 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8D1A 23           	inc hl
  20+ 8D1B CD 25 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8D1E 22 CF 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8D21 CD 2E 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D24 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D25
  25+ 8D25              ; ----------------------
  26+ 8D25
  27+ 8D25 11 77 89     Fija_velocidades ld de,Perfiles_de_velocidad
  28+ 8D28 01 04 00     	ld bc,4
  29+ 8D2B ED B0        	ldir
  30+ 8D2D C9           	ret
  31+ 8D2E
  32+ 8D2E 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  33+ 8D2F CD 6F 8E         call Calcula_salto_en_BC
  34+ 8D32 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  35+ 8D35 A7               and a
  36+ 8D36 ED 4A            adc hl,bc
  37+ 8D38 CD A7 8B         call Extrae_address
  38+ 8D3B 22 83 89         ld (Puntero_indice_mov),hl
  39+ 8D3E C9               ret
  40+ 8D3F
  41+ 8D3F              ;---------------------------------------------------------------------------------------------------------------
  42+ 8D3F              ;
  43+ 8D3F              ;   5/1/24
  44+ 8D3F              ;
  45+ 8D3F              ;	Destruye A,BC,HL,DE
  46+ 8D3F
  47+ 8D3F              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  48+ 8D3F              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  49+ 8D3F
  50+ 8D3F              Inicia_Entidades
  51+ 8D3F
  52+ 8D3F              ; Preparamos los punteros de las cajas de entidades:
  53+ 8D3F
  54+ 8D3F CD 0F 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  55+ 8D42              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  56+ 8D42 CD D6 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  57+ 8D45
  58+ 8D45 2A CF 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  59+ 8D48
  60+ 8D48 22 CF 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  61+ 8D4B
  62+ 8D4B CD 1D 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  63+ 8D4E
  64+ 8D4E 2A CF 89     	ld hl,(Datos_de_nivel)
  65+ 8D51
  66+ 8D51              ; En este punto:
  67+ 8D51              ;
  68+ 8D51              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  69+ 8D51              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  70+ 8D51
  71+ 8D51 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  72+ 8D52
  73+ 8D52 7E           	ld a,(hl)
  74+ 8D53 CD 8F 8D     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  75+ 8D56
  76+ 8D56 CD 81 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  77+ 8D59
  78+ 8D59              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  79+ 8D59
  80+ 8D59 CD 3F 8E     	call Busca_mov_masticados_segun_tipo
  81+ 8D5C
  82+ 8D5C A7           	and a
  83+ 8D5D 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  84+ 8D5F
  85+ 8D5F              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  86+ 8D5F
  87+ 8D5F              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  88+ 8D5F              ;	_ de este tipo de entidad.
  89+ 8D5F
  90+ 8D5F CD DD 99     	call Situa_en_contador_general_de_mov_masticados
  91+ 8D62 CD EA 99     	call Transfiere_datos_de_contadores
  92+ 8D65
  93+ 8D65 18 06        	jr 4F
  94+ 8D67
  95+ 8D67 CD 69 8A     3 call Construye_movimientos_masticados_entidad
  96+ 8D6A
  97+ 8D6A              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
  98+ 8D6A              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
  99+ 8D6A              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 100+ 8D6A              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 101+ 8D6A              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 102+ 8D6A
 103+ 8D6A CD FD 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 104+ 8D6D              ;																; _ Mov_masticados ya generados.
 105+ 8D6D CD A9 8D     4 call Guarda_foto_de_mov_masticado
 106+ 8D70
 107+ 8D70              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 108+ 8D70
 109+ 8D70 2A 6A 89     	ld hl,(Puntero_de_impresion)
 110+ 8D73 CD F4 9E     	call Genera_coordenadas
 111+ 8D76 CD A8 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 112+ 8D79 CD B3 8D     	call Limpiamos_bandeja_DRAW
 113+ 8D7C CD 0E 8C     	call Incrementa_punteros_de_cajas
 114+ 8D7F
 115+ 8D7F              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 116+ 8D7F              ; _ entidad del Nivel.
 117+ 8D7F
 118+ 8D7F 3A AF 89     	ld a,(Ctrl_4)
 119+ 8D82 E6 F0        	and $f0
 120+ 8D84 32 AF 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 121+ 8D87
 122+ 8D87              ; Siguiente entidad del Nivel.
 123+ 8D87
 124+ 8D87 2A CF 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 125+ 8D8A 23           	inc hl 														; _ entidad del Nivel.
 126+ 8D8B
 127+ 8D8B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 128+ 8D8C
 129+ 8D8C 10 BA        	djnz 2B
 130+ 8D8E
 131+ 8D8E C9           	ret
 132+ 8D8F
 133+ 8D8F              ; ---------------------------------------------------------------------
 134+ 8D8F              ;
 135+ 8D8F              ;	10/02/24
 136+ 8D8F              ;
 137+ 8D8F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 138+ 8D8F              ;
 139+ 8D8F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 140+ 8D8F
 141+ 8D8F              Definicion_segun_tipo
 142+ 8D8F
 143+ 8D8F CD 6F 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 144+ 8D92 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 145+ 8D95 CD 77 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 146+ 8D98 C9           	ret
 147+ 8D99
 148+ 8D99              ; ---------------------------------------------------------------------
 149+ 8D99              ;
 150+ 8D99              ;	30/01/24
 151+ 8D99
 152+ 8D99
 153+ 8D99              Store_Restore_cajas
 154+ 8D99
 155+ 8D99              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 156+ 8D99
 157+ 8D99 2A 6A 89     	ld hl,(Puntero_de_impresion)
 158+ 8D9C CD F4 9E     	call Genera_coordenadas
 159+ 8D9F
 160+ 8D9F CD A8 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 161+ 8DA2 CD B3 8D     	call Limpiamos_bandeja_DRAW
 162+ 8DA5
 163+ 8DA5              ; 	Entidad_sospechosa. 20/4/23
 164+ 8DA5
 165+ 8DA5              ;	ld a,(Impacto)
 166+ 8DA5              ;	and a
 167+ 8DA5              ;	jr z,1F
 168+ 8DA5
 169+ 8DA5              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 170+ 8DA5              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 171+ 8DA5              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 172+ 8DA5              ;	adc hl,bc 											; _ "0" más adelante.
 173+ 8DA5              ;	ld (Entidad_sospechosa_de_colision),hl
 174+ 8DA5
 175+ 8DA5
 176+ 8DA5              ;1 ld hl,(Puntero_restore_caja)
 177+ 8DA5              ;	ld a,(hl)
 178+ 8DA5              ;	and a
 179+ 8DA5              ;	push af
 180+ 8DA5              ;	jr z,2F
 181+ 8DA5
 182+ 8DA5              ;	di
 183+ 8DA5              ;	ld de,Bandeja_DRAW
 184+ 8DA5              ;	ld bc,42
 185+ 8DA5              ;	ldir
 186+ 8DA5              ;	ei
 187+ 8DA5
 188+ 8DA5 CD 0E 8C     2 call Incrementa_punteros_de_cajas
 189+ 8DA8 C9           	ret
 190+ 8DA9
 191+ 8DA9
 192+ 8DA9              ; ---------------------------------------------------------------------
 193+ 8DA9              ;
 194+ 8DA9              ;	29/01/24
 195+ 8DA9
 196+ 8DA9 CD BE 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 197+ 8DAC CD BF 80     	call Guarda_foto_registros
 198+ 8DAF              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 199+ 8DAF              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 200+ 8DAF              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 201+ 8DAF              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 202+ 8DAF
 203+ 8DAF CD BE 8D     	call Decrementa_Contador_de_mov_masticados
 204+ 8DB2 C9           	ret
 205+ 8DB3
 206+ 8DB3              ; ---------------------------------------------------------------------
 207+ 8DB3              ;
 208+ 8DB3              ;	25/01/24
 209+ 8DB3
 210+ 8DB3 21 4D 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 211+ 8DB6 06 2A        	ld b,42
 212+ 8DB8 AF           	xor a
 213+ 8DB9
 214+ 8DB9 77           1 ld (hl),a
 215+ 8DBA 23           	inc hl
 216+ 8DBB 10 FC        	djnz 1B
 217+ 8DBD
 218+ 8DBD C9           	ret
 219+ 8DBE
 220+ 8DBE              ; ---------------------------------------------------------------------
 221+ 8DBE              ;
 222+ 8DBE              ;	22/01/24
 223+ 8DBE
 224+ 8DBE 2A 6E 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 225+ 8DC1 2B           	dec hl
 226+ 8DC2
 227+ 8DC2 24           	inc h
 228+ 8DC3 25           	dec h
 229+ 8DC4
 230+ 8DC4 FC CB 8D     	call m,Reinicia_entidad_maliciosa
 231+ 8DC7
 232+ 8DC7              ;	jr nz,1F
 233+ 8DC7
 234+ 8DC7              ;	inc l
 235+ 8DC7              ;	dec l
 236+ 8DC7
 237+ 8DC7              ;	di
 238+ 8DC7              ;	jr z,$
 239+ 8DC7              ;	ei
 240+ 8DC7
 241+ 8DC7 22 6E 89     1 ld (Contador_de_mov_masticados),hl
 242+ 8DCA C9           	ret
 243+ 8DCB
 244+ 8DCB              ; ---------------------------------------------------------------------
 245+ 8DCB              ;
 246+ 8DCB              ;	10/2/24
 247+ 8DCB
 248+ 8DCB              Reinicia_entidad_maliciosa
 249+ 8DCB
 250+ 8DCB              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 251+ 8DCB
 252+ 8DCB CD DD 99     	call Situa_en_contador_general_de_mov_masticados
 253+ 8DCE CD EA 99     	call Transfiere_datos_de_contadores
 254+ 8DD1
 255+ 8DD1              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 256+ 8DD1
 257+ 8DD1 3A 4D 89     	ld a,(Tipo)
 258+ 8DD4 CD 8F 8D     	call Definicion_segun_tipo
 259+ 8DD7
 260+ 8DD7 E5           	push hl
 261+ 8DD8 DD E1        	pop ix
 262+ 8DDA
 263+ 8DDA DD 6E 0B     	ld l,(ix+11)
 264+ 8DDD DD 66 0C     	ld h,(ix+12)
 265+ 8DE0
 266+ 8DE0 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 267+ 8DE3 2A 6E 89     	ld hl,(Contador_de_mov_masticados)
 268+ 8DE6
 269+ 8DE6              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 270+ 8DE6              ;	Queremos pintar la entidad en su posición de inicio.
 271+ 8DE6
 272+ 8DE6 2A A6 89     	ld hl,(Stack_snapshot)
 273+ 8DE9 01 06 00     	ld bc,6
 274+ 8DEC A7           	and a
 275+ 8DED ED 42        	sbc hl,bc
 276+ 8DEF 22 A6 89     	ld (Stack_snapshot),hl
 277+ 8DF2
 278+ 8DF2 CD BE 8A     	call Cargamos_registros_con_mov_masticado
 279+ 8DF5 CD BF 80     	call Guarda_foto_registros
 280+ 8DF8
 281+ 8DF8 2A 6E 89     	ld hl,(Contador_de_mov_masticados)
 282+ 8DFB 2B           	dec hl
 283+ 8DFC
 284+ 8DFC              ;	di
 285+ 8DFC              ;	jr $
 286+ 8DFC              ;	ei
 287+ 8DFC
 288+ 8DFC C9           	ret
 289+ 8DFD
 290+ 8DFD              ; ---------------------------------------------------------------------
 291+ 8DFD              ;
 292+ 8DFD              ;	22/01/24
 293+ 8DFD
 294+ 8DFD 21 AF 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 295+ 8E00 CB 46        	bit 0,(hl)
 296+ 8E02 20 0D        	jr nz,1F
 297+ 8E04 CB 4E        	bit 1,(hl)
 298+ 8E06 20 0C        	jr nz,2F
 299+ 8E08 CB 56        	bit 2,(hl)
 300+ 8E0A 20 0B        	jr nz,3F
 301+ 8E0C CB 5E        	bit 3,(hl)
 302+ 8E0E 20 0A        	jr nz,4F
 303+ 8E10 C9           	ret
 304+ 8E11
 305+ 8E11 CB E6        1 set 4,(hl)
 306+ 8E13 C9           	ret
 307+ 8E14 CB EE        2 set 5,(hl)
 308+ 8E16 C9           	ret
 309+ 8E17 CB F6        3 set 6,(hl)
 310+ 8E19 C9           	ret
 311+ 8E1A CB FE        4 set 7,(hl)
 312+ 8E1C C9           	ret
 313+ 8E1D
 314+ 8E1D              ; ---------------------------------------------------------------------
 315+ 8E1D              ;
 316+ 8E1D              ;	23/01/24
 317+ 8E1D              ;
 318+ 8E1D              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 319+ 8E1D              ;
 320+ 8E1D              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 321+ 8E1D              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 322+ 8E1D              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 323+ 8E1D              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 324+ 8E1D
 325+ 8E1D              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 326+ 8E1D
 327+ 8E1D 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 328+ 8E1E 3D           	dec a
 329+ 8E1F 20 06        	jr nz,1F
 330+ 8E21
 331+ 8E21              ; --- Tipo_1
 332+ 8E21
 333+ 8E21 21 AF 89     	ld hl,Ctrl_4
 334+ 8E24 CB C6        	set 0,(hl)
 335+ 8E26 C9           	ret
 336+ 8E27
 337+ 8E27 3D           1 dec a
 338+ 8E28 20 06        	jr nz,2F
 339+ 8E2A
 340+ 8E2A              ; --- Tipo_2
 341+ 8E2A
 342+ 8E2A 21 AF 89     	ld hl,Ctrl_4
 343+ 8E2D CB CE        	set 1,(hl)
 344+ 8E2F C9           	ret
 345+ 8E30
 346+ 8E30 3D           2 dec a
 347+ 8E31 20 06        	jr nz,3F
 348+ 8E33
 349+ 8E33              ; --- Tipo_3
 350+ 8E33
 351+ 8E33 21 AF 89     	ld hl,Ctrl_4
 352+ 8E36 CB D6        	set 2,(hl)
 353+ 8E38 C9           	ret
 354+ 8E39
 355+ 8E39              ; --- Tipo_3
 356+ 8E39
 357+ 8E39 21 AF 89     3 ld hl,Ctrl_4
 358+ 8E3C CB D6        	set 2,(hl)
 359+ 8E3E C9           	ret
 360+ 8E3F
 361+ 8E3F              ; ---------------------------------------------------------------------
 362+ 8E3F              ;
 363+ 8E3F              ;	22/01/24
 364+ 8E3F
 365+ 8E3F 21 AF 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 366+ 8E42 CB 46        	bit 0,(hl)
 367+ 8E44 20 0E        	jr nz,1F
 368+ 8E46
 369+ 8E46 CB 4E        	bit 1,(hl)
 370+ 8E48 20 10        	jr nz,2F
 371+ 8E4A
 372+ 8E4A CB 56        	bit 2,(hl)
 373+ 8E4C 20 12        	jr nz,3F
 374+ 8E4E
 375+ 8E4E CB 5E        	bit 3,(hl)
 376+ 8E50 20 14        	jr nz,4F
 377+ 8E52 18 19        	jr 6F
 378+ 8E54
 379+ 8E54              ; Entidad_de_Tipo_1.
 380+ 8E54
 381+ 8E54 CB 66        1 bit 4,(hl)
 382+ 8E56 28 15        	jr z,6F
 383+ 8E58 18 10        	jr 5F
 384+ 8E5A
 385+ 8E5A              ; Entidad_de_Tipo_2.
 386+ 8E5A
 387+ 8E5A CB 6E        2 bit 5,(hl)
 388+ 8E5C 28 0F        	jr z,6F
 389+ 8E5E 18 0A        	jr 5F
 390+ 8E60
 391+ 8E60              ; Entidad_de_Tipo_3.
 392+ 8E60
 393+ 8E60 CB 76        3 bit 6,(hl)
 394+ 8E62 28 09        	jr z,6F
 395+ 8E64 18 04        	jr 5F
 396+ 8E66
 397+ 8E66              ; Entidad_de_Tipo_4.
 398+ 8E66
 399+ 8E66 CB 7E        4 bit 7,(hl)
 400+ 8E68 28 03        	jr z,6F
 401+ 8E6A
 402+ 8E6A              ; Esta entidad TIENE MOV_MASTICADOS.
 403+ 8E6A
 404+ 8E6A AF           5 xor a
 405+ 8E6B 3C           	inc a
 406+ 8E6C C9           	ret
 407+ 8E6D
 408+ 8E6D              ; Esta entidad NO TIENE MOV_MASTICADOS.
 409+ 8E6D
 410+ 8E6D AF           6 xor a
 411+ 8E6E C9           	ret
 412+ 8E6F
 413+ 8E6F              ;	------------------------------------------------------------------------------------
 414+ 8E6F              ;
 415+ 8E6F              ;	12/01/24
 416+ 8E6F              ;
 417+ 8E6F              ;	INPUTS:	A contiene el (Tipo) de entidad.
 418+ 8E6F              ;
 419+ 8E6F              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 420+ 8E6F              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 421+ 8E6F
 422+ 8E6F CB 27        Calcula_salto_en_BC sla a
 423+ 8E71 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 424+ 8E73 4F           	ld c,a
 425+ 8E74 06 00        	ld b,0
 426+ 8E76 C9           	ret
 427+ 8E77
 428+ 8E77              ; ------------------------------------------------------------------
 429+ 8E77              ;
 430+ 8E77              ;	19/1/24
 431+ 8E77              ;
 432+ 8E77              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 433+ 8E77              ;	Actualiza (Datos_de_entidad) con esa dirección.
 434+ 8E77
 435+ 8E77 A7           Situa_en_datos_de_definicion and a
 436+ 8E78 ED 4A        	adc hl,bc
 437+ 8E7A CD A7 8B     	call Extrae_address
 438+ 8E7D 22 9E 89         ld (Datos_de_entidad),hl
 439+ 8E80 C9           	ret
 440+ 8E81
 441+ 8E81              ; ------------------------------------------------------------------
 442+ 8E81
 443+ 8E81              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 444+ 8E81              ; 	inc de
 445+ 8E81              ; 	inc de
 446+ 8E81              ; 	ex de,hl
 447+ 8E81              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 448+ 8E81              ; 	ret
 449+ 8E81
 450+ 8E81              ; ----------------------------------------------------------------------------------------------------------
 451+ 8E81              ;
 452+ 8E81              ;	31/1/24
 453+ 8E81              ;
 454+ 8E81              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 455+ 8E81              ;	_ de entidad.
 456+ 8E81              ;
 457+ 8E81              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 458+ 8E81              ;
 459+ 8E81              ;
 460+ 8E81              ;	MODIFICA: HL,DE y BC
 461+ 8E81
 462+ 8E81
 463+ 8E81              Definicion_de_entidad_a_bandeja_DRAW
 464+ 8E81
 465+ 8E81 11 4D 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 466+ 8E84 01 03 00     	ld bc,3
 467+ 8E87 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 468+ 8E89              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 469+ 8E89 11 57 89     	ld de,Attr									; DE en (Attr).
 470+ 8E8C 01 05 00     	ld bc,5
 471+ 8E8F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 472+ 8E91              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 473+ 8E91 11 60 89     	ld de,Posicion_inicio
 474+ 8E94 01 03 00     	ld bc,3
 475+ 8E97 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 476+ 8E99              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 477+ 8E99 11 6C 89     	ld de,Puntero_de_almacen_de_mov_masticados
 478+ 8E9C 01 02 00     	ld bc,2
 479+ 8E9F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 480+ 8EA1
 481+ 8EA1 11 76 89     	ld de,Frames_explosion
 482+ 8EA4 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 483+ 8EA6 12           	ld (de),a 									; Vuelco (Frames_explosion).
 484+ 8EA7
 485+ 8EA7 C9           	ret
 486+ 8EA8
 487+ 8EA8              ; ----------------------------------------------------------------------------------------------------------
 488+ 8EA8              ;
 489+ 8EA8              ;	22/01/24
 490+ 8EA8              ;
 491+ 8EA8              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 492+ 8EA8              ;
 493+ 8EA8              ;	Las cajas contienen entidades iniciadas:
 494+ 8EA8              ;
 495+ 8EA8              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 496+ 8EA8              ;
 497+ 8EA8              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 498+ 8EA8              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 499+ 8EA8              ;
 500+ 8EA8              ;	MODIFICA: HL,DE y BC
 501+ 8EA8
 502+ 8EA8 21 4D 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 503+ 8EAB ED 5B 92 89  	ld de,(Puntero_store_caja)
 504+ 8EAF 7E           	ld a,(hl)
 505+ 8EB0 12           	ld (de),a
 506+ 8EB1 13           	inc de 													; (Tipo).
 507+ 8EB2
 508+ 8EB2 21 54 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 509+ 8EB5 01 02 00     	ld bc,2
 510+ 8EB8 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 511+ 8EBA              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 512+ 8EBA 23           	inc hl
 513+ 8EBB 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 514+ 8EBC 12           	ld (de),a
 515+ 8EBD 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 516+ 8EBE
 517+ 8EBE 21 63 89     	ld hl,Impacto
 518+ 8EC1 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 519+ 8EC2 12           	ld (de),a
 520+ 8EC3 13           	inc de 													; (Impacto), volcado a la caja.
 521+ 8EC4              ;															; DE situado ahora en (Variables_de_borrado).
 522+ 8EC4 23           	inc hl
 523+ 8EC5 01 06 00     	ld bc,6
 524+ 8EC8 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 525+ 8ECA              ; 															; DE situado ahora en (Puntero_de_impresión).
 526+ 8ECA 01 07 00     	ld bc,7
 527+ 8ECD ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 528+ 8ECF              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 529+ 8ECF              ;															; HL apunta ahora a (Columnas).
 530+ 8ECF 21 75 89     	ld hl,Ctrl_2
 531+ 8ED2 7E           	ld a,(hl)
 532+ 8ED3 12           	ld (de),a 												; Volcamos (Ctrl_2).
 533+ 8ED4 13           	inc de
 534+ 8ED5
 535+ 8ED5 C9           	ret
 536+ 8ED6
 537+ 8ED6              ;---------------------------------------------------------------------------------------------------------------
 538+ 8ED6              ;
 539+ 8ED6              ;	5/1/24
 540+ 8ED6              ;
 541+ 8ED6              ;	INICIALIZA (Numero_parcial_de_entidades).
 542+ 8ED6              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 543+ 8ED6              ;
 544+ 8ED6              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 545+ 8ED6              ;
 546+ 8ED6              ;	(Numero_parcial_de_entidades)="7".
 547+ 8ED6              ;
 548+ 8ED6              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 549+ 8ED6              ;
 550+ 8ED6              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 551+ 8ED6              ;
 552+ 8ED6              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 553+ 8ED6              ;	MODIFICA: A y B.
 554+ 8ED6              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 555+ 8ED6
 556+ 8ED6              Inicializa_Numero_parcial_de_entidades
 557+ 8ED6
 558+ 8ED6              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 559+ 8ED6
 560+ 8ED6 3A 98 89     	ld a,(Numero_de_entidades)
 561+ 8ED9 A7           	and a
 562+ 8EDA
 563+ 8EDA              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 564+ 8EDA              ;	jr z,$
 565+ 8EDA              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 566+ 8EDA
 567+ 8EDA 20 03        	jr nz,3F
 568+ 8EDC
 569+ 8EDC              ; ---------- ---------- ----------
 570+ 8EDC
 571+ 8EDC              ;! RESET para pruebas. Omitir esta línea en modo normal.
 572+ 8EDC              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 573+ 8EDC
 574+ 8EDC CD 10 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 575+ 8EDF
 576+ 8EDF              ; ---------- ---------- ----------
 577+ 8EDF
 578+ 8EDF 3A 98 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 579+ 8EE2 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 580+ 8EE4 38 08        	jr c,1F
 581+ 8EE6
 582+ 8EE6              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 583+ 8EE6              ; Actualizamos variables.
 584+ 8EE6
 585+ 8EE6 3E 07        	ld a,7
 586+ 8EE8 32 99 89     	ld (Numero_parcial_de_entidades),a
 587+ 8EEB 47           	ld b,a
 588+ 8EEC 18 04        	jr 2F
 589+ 8EEE
 590+ 8EEE              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 591+ 8EEE              ; (Numero_de_entidades)="0".
 592+ 8EEE
 593+ 8EEE 32 99 89     1 ld (Numero_parcial_de_entidades),a
 594+ 8EF1 47           	ld b,a
 595+ 8EF2 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1726  8EF3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8EF3              ; ******************************************************************************************************************************************************************************************
   2+ 8EF3              ;
   3+ 8EF3              ; 26/06/23
   4+ 8EF3              ;
   5+ 8EF3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8EF3
   7+ 8EF3              Draw
   8+ 8EF3
   9+ 8EF3 CD E0 91     	call Prepara_draw
  10+ 8EF6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8EF7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8EF8 28 05        	jr z,2F
  13+ 8EFA
  14+ 8EFA 3A 62 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8EFD 18 0C        	jr 1F
  16+ 8EFF
  17+ 8EFF 2A 60 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8F02 22 50 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8F05 CD 94 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8F08              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8F08
  22+ 8F08 CD 41 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8F0B
  24+ 8F0B 3A 70 89     1 ld a,(Ctrl_0)
  25+ 8F0E CB 6F        	bit 5,a
  26+ 8F10 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8F12
  28+ 8F12 CD 2A 8F     	call Comprueba_limite_horizontal
  29+ 8F15 CD BA 8F     	call Comprueba_limite_vertical
  30+ 8F18
  31+ 8F18              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8F18              ; -----------------------
  33+ 8F18              ; -----------------------
  34+ 8F18              ; -----------------------
  35+ 8F18
  36+ 8F18 CD 10 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8F1B CD 47 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8F1E CD A6 91     	call Define_rutina_de_impresion
  39+ 8F21
  40+ 8F21 3A 70 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8F24 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8F26 32 70 89     	ld (Ctrl_0),a
  43+ 8F29
  44+ 8F29 C9           	ret
  45+ 8F2A
  46+ 8F2A              ; *******************************************************************************************************************************************************************************************
  47+ 8F2A              ;	21/01/23
  48+ 8F2A              ;
  49+ 8F2A              ; 	Comprueba_limite_horizontal.
  50+ 8F2A              ;
  51+ 8F2A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8F2A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8F2A              ;
  54+ 8F2A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8F2A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8F2A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8F2A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8F2A
  59+ 8F2A
  60+ 8F2A
  61+ 8F2A 3A 70 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8F2D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8F2F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8F31 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8F33 32 70 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8F36 18 09            jr 6F
  67+ 8F38 CB 5F        1 bit 3,a
  68+ 8F3A 28 0A            jr z,2F
  69+ 8F3C E6 F7            and $f7
  70+ 8F3E 32 70 89         ld (Ctrl_0),a
  71+ 8F41 CD 94 90     6 call Inicializacion
  72+ 8F44 18 5B            jr 5F
  73+ 8F46 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8F47
  75+ 8F47              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8F47              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8F47
  78+ 8F47 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8F48 2A 72 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8F4B CD D6 9E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8F4E 67           	ld h,a
  82+ 8F4F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F50 CD D6 9E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F53 67           	ld h,a
  85+ 8F54 A7           	and a
  86+ 8F55 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F57 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F58 3A 62 89     	ld a,(Cuad_objeto)
  89+ 8F5B FE 02        	cp 2
  90+ 8F5D 38 1E        	jr c,3F
  91+ 8F5F 28 1C        	jr z,3F
  92+ 8F61 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8F62 28 23            jr z,7F
  94+ 8F64 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8F66 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8F68 E1           	pop hl
  97+ 8F69
  98+ 8F69              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8F69              ; _para indicar con E="2" en caso necesario.
 100+ 8F69
 101+ 8F69 E5               push hl
 102+ 8F6A C5               push bc
 103+ 8F6B CD D6 9E     	call calcula_tercio
 104+ 8F6E FE 01        	cp 1
 105+ 8F70 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8F72 CD A2 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8F75 28 26            jr z,9F
 108+ 8F77 38 24            jr c,9F
 109+ 8F79 1E 00        11 ld e,0
 110+ 8F7B 18 22            jr 8F
 111+ 8F7D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8F7E 28 07        	jr z, 7F
 113+ 8F80 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8F82 1E 00         	ld e,0
 115+ 8F84 E1           	pop hl
 116+ 8F85 18 04        	jr 4F
 117+ 8F87 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8F89 18 15            jr 10F
 119+ 8F8B
 120+ 8F8B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8F8B              ; _para indicar con E="2" en caso necesario.
 122+ 8F8B
 123+ 8F8B E5           4 push hl
 124+ 8F8C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8F8D CD D6 9E     	call calcula_tercio
 126+ 8F90 FE 01        	cp 1
 127+ 8F92 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8F94 CD A2 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8F97 28 04            jr z,9F
 130+ 8F99 30 02            jr nc,9F
 131+ 8F9B 18 02        	jr 8F
 132+ 8F9D 1E 02        9 ld e,2
 133+ 8F9F C1           8 pop bc
 134+ 8FA0 E1           10 pop hl
 135+ 8FA1 C9           5 ret
 136+ 8FA2
 137+ 8FA2              ; --------------------
 138+ 8FA2              ;
 139+ 8FA2              ; 25/08/22
 140+ 8FA2
 141+ 8FA2 CD D6 9E     Comprueba_centro call calcula_tercio
 142+ 8FA5 67               ld h,a
 143+ 8FA6 08           	ex af,af
 144+ 8FA7 FE 02        	cp 2
 145+ 8FA9 38 07        	jr c,1F
 146+ 8FAB 28 05        	jr z,1F
 147+ 8FAD 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8FB0 18 03        	jr 2F
 149+ 8FB2 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8FB5 08           2 ex af,af
 151+ 8FB6 A7               and a
 152+ 8FB7 ED 42            sbc hl,bc
 153+ 8FB9 C9               ret
 154+ 8FBA
 155+ 8FBA              ; *********************************************************************************************************************************************************************************************
 156+ 8FBA              ;
 157+ 8FBA              ;   16/8/22
 158+ 8FBA              ;
 159+ 8FBA              ;	Comprueba_limite_vertical
 160+ 8FBA              ;
 161+ 8FBA              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8FBA              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8FBA              ;
 164+ 8FBA
 165+ 8FBA 2A 50 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8FBD 7D           	ld a,l
 167+ 8FBE E6 1F        	and $1F
 168+ 8FC0 57           	ld d,a
 169+ 8FC1 3A 74 89     	ld a,(Limite_vertical)
 170+ 8FC4 BA           	cp d 											; Límite - Posición.
 171+ 8FC5 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8FC6 3A 62 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8FC9 CB 47        	bit 0,a
 174+ 8FCB 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8FCD
 176+ 8FCD              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8FCD
 178+ 8FCD 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8FCE 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8FD0
 181+ 8FD0              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8FD0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8FD0
 184+ 8FD0 3A 54 89         ld a,(Coordenada_X)
 185+ 8FD3 16 0F            ld d,Centro_izquierda
 186+ 8FD5 A7               and a
 187+ 8FD6 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8FD7 28 1E            jr z,3F
 189+ 8FD9 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8FDB              ;                                                    ; _salimos sin modificar nada.
 191+ 8FDB 18 0E            jr 2F
 192+ 8FDD 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8FDE 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8FE0
 195+ 8FE0              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8FE0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8FE0
 198+ 8FE0 3A 54 89         ld a,(Coordenada_X)
 199+ 8FE3 16 10            ld d,Centro_derecha
 200+ 8FE5 A7               and a
 201+ 8FE6 92               sub d
 202+ 8FE7 28 0E            jr z,3F
 203+ 8FE9 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8FEB              ;                                                    ; _salimos sin modificar nada.
 205+ 8FEB CB 43        2 bit 0,e
 206+ 8FED 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8FEF C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8FF0 CD 84 90         call Modificaccionne
 209+ 8FF3 C1           	pop bc
 210+ 8FF4 CD 94 90         call Inicializacion
 211+ 8FF7 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8FF8
 213+ 8FF8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8FF8
 215+ 8FF8 C5           4 push bc
 216+ 8FF9 01 4F 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8FFC 0A           	ld a,(bc)
 218+ 8FFD 3D           	dec a
 219+ 8FFE 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8FFF 7D           	ld a,l
 221+ 9000 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9001 CB 47        	bit 0,a
 223+ 9003 28 03        	jr z,5F
 224+ 9005 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9006 18 2E        	jr 7F
 226+ 9008
 227+ 9008              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9008
 229+ 9008 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9009 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 900A 3A 70 89     	ld a,(Ctrl_0)
 232+ 900D CB 4F        	bit 1,a
 233+ 900F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9011 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9012
 236+ 9012              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9012
 238+ 9012 1C               inc e
 239+ 9013 1D               dec e
 240+ 9014 20 07            jr nz,12F
 241+ 9016 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9017 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9018 22 50 89     	ld (Posicion_actual),hl
 244+ 901B 18 44        13 jr 9F
 245+ 901D CB 43        12 bit 0,e
 246+ 901F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9021              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9021 C1           	pop bc
 249+ 9022 18 D3        	jr 3B
 250+ 9024 80           14 add b
 251+ 9025 6F               ld l,a
 252+ 9026 22 50 89     	ld (Posicion_actual),hl
 253+ 9029 CD 84 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 902C 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 902E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9030 32 70 89         ld (Ctrl_0),a
 257+ 9033 F1           	pop af
 258+ 9034 18 2B        	jr 9F
 259+ 9036
 260+ 9036              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9036
 262+ 9036 F5           7 push af
 263+ 9037 3A 70 89     	ld a,(Ctrl_0)
 264+ 903A CB 47        	bit 0,a
 265+ 903C 20 1D        	jr nz,8F
 266+ 903E F1           	pop af
 267+ 903F
 268+ 903F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 903F
 270+ 903F 1C           	inc e
 271+ 9040 1D               dec e
 272+ 9041 20 07            jr nz,10F
 273+ 9043 90           	sub b
 274+ 9044 6F               ld l,a
 275+ 9045 22 50 89     	ld (Posicion_actual),hl
 276+ 9048 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 904A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 904A CB 43        10 bit 0,e
 279+ 904C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 904E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 904E C1           	pop bc
 282+ 904F 18 A6        	jr 3B
 283+ 9051 90           16 sub b
 284+ 9052 6F               ld l,a
 285+ 9053 22 50 89     	ld (Posicion_actual),hl
 286+ 9056 CD 84 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9059 18 06            jr 9F
 288+ 905B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 905D 32 70 89         ld (Ctrl_0),a
 290+ 9060 F1           	pop af
 291+ 9061 C1           9 pop bc
 292+ 9062 1E 00        	ld e,0
 293+ 9064 CD 94 90         call Inicializacion
 294+ 9067 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9068 08           	ex af,af
 296+ 9069 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 906A 18 8B            jr 3B
 298+ 906C
 299+ 906C              ; --------------------
 300+ 906C
 301+ 906C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 906E CD FB 91     1 call PreviousScan
 303+ 9071 10 FB            djnz 1B
 304+ 9073 22 50 89     	ld (Posicion_actual),hl
 305+ 9076 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9077 C9           	ret
 307+ 9078
 308+ 9078              ; --------------------
 309+ 9078
 310+ 9078 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 907A CD EC 91     1 call NextScan
 312+ 907D 10 FB            djnz 1B
 313+ 907F 22 50 89     	ld (Posicion_actual),hl
 314+ 9082 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9083 C9           	ret
 316+ 9084
 317+ 9084              ; --------------------
 318+ 9084              ;
 319+ 9084              ;	22/01/23
 320+ 9084              ;
 321+ 9084              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9084              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9084              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9084
 325+ 9084
 326+ 9084              Modificaccionne
 327+ 9084
 328+ 9084 3A 62 89     	ld a,(Cuad_objeto)
 329+ 9087 FE 02        	cp 2
 330+ 9089 CC 6C 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 908C DC 6C 90         call c,Modifica_Pos_actual
 332+ 908F C8           	ret z
 333+ 9090 CD 78 90         call Modifica_Pos_actual2
 334+ 9093 C9               ret
 335+ 9094
 336+ 9094              ; *************************************************************************************************************************************************************************************************
 337+ 9094              ;
 338+ 9094              ;	13/8/22
 339+ 9094              ;
 340+ 9094              ;	Inicializacion
 341+ 9094              ;
 342+ 9094              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9094              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9094              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9094              ;
 346+ 9094              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9094              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9094              ;	_ desaparece/aparece.
 349+ 9094
 350+ 9094              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9094              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9094              ;
 353+ 9094              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9094              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9094              ; 		   [E] ="0"
 356+ 9094
 357+ 9094              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9094
 359+ 9094 CD D6 9E     Inicializacion call calcula_tercio
 360+ 9097 28 36        	jr z,primit
 361+ 9099 E6 02        	and 2
 362+ 909B 20 07        	jr nz,segmit
 363+ 909D 7D           	ld a,l
 364+ 909E FE 7F        	cp $7f
 365+ 90A0 38 2D        	jr c,primit
 366+ 90A2 28 2B        	jr z,primit
 367+ 90A4 CD 0A 91     segmit call column
 368+ 90A7 38 13        	jr c,tercuad
 369+ 90A9 3E 04        cuarcuad ld a,4
 370+ 90AB 32 62 89     	ld (Cuad_objeto),a
 371+ 90AE 21 20 48     	ld hl,$4820
 372+ 90B1 22 72 89     	ld (Limite_horizontal),hl
 373+ 90B4 21 74 89     	ld hl,Limite_vertical
 374+ 90B7 36 0D        	ld (hl),$0d
 375+ 90B9 08           	ex af,af
 376+ 90BA 18 3C        	jr 1F
 377+ 90BC              tercuad
 378+ 90BC 3E 03        	ld a,3
 379+ 90BE 32 62 89     	ld (Cuad_objeto),a
 380+ 90C1 21 20 48     	ld hl,$4820
 381+ 90C4 22 72 89     	ld (Limite_horizontal),hl
 382+ 90C7 21 74 89     	ld hl,Limite_vertical
 383+ 90CA 36 12        	ld (hl),$12
 384+ 90CC 08           	ex af,af
 385+ 90CD 18 29        	jr 1F
 386+ 90CF CD 0A 91     primit call column
 387+ 90D2 38 13        	jr c, primcuad
 388+ 90D4              segcuad
 389+ 90D4 3E 02        	ld a,2
 390+ 90D6 32 62 89     	ld (Cuad_objeto),a
 391+ 90D9 21 C0 4F     	ld hl,$4fc0
 392+ 90DC 22 72 89     	ld (Limite_horizontal),hl
 393+ 90DF 21 74 89     	ld hl,Limite_vertical
 394+ 90E2 36 0D        	ld (hl),$0d
 395+ 90E4 08           	ex af,af
 396+ 90E5 18 11        	jr 1F
 397+ 90E7              primcuad
 398+ 90E7 3E 01        	ld a,1
 399+ 90E9 32 62 89     	ld (Cuad_objeto),a
 400+ 90EC 21 C0 4F     	ld hl,$4fc0
 401+ 90EF 22 72 89     	ld (Limite_horizontal),hl
 402+ 90F2 21 74 89     	ld hl,Limite_vertical
 403+ 90F5 36 12        	ld (hl),$12
 404+ 90F7 08           	ex af,af
 405+ 90F8
 406+ 90F8 C5           1 push bc
 407+ 90F9 E5           	push hl
 408+ 90FA D5           	push de
 409+ 90FB
 410+ 90FB 2A 50 89     	ld hl,(Posicion_actual)
 411+ 90FE CD F4 9E     	call Genera_coordenadas
 412+ 9101
 413+ 9101 D1           	pop de
 414+ 9102 E1           	pop hl
 415+ 9103 C1           	pop bc
 416+ 9104
 417+ 9104 21 70 89     	ld hl,Ctrl_0
 418+ 9107 CB EE        	set 5,(hl)
 419+ 9109 C9           	ret
 420+ 910A
 421+ 910A              ; ------------------------------------------------------------------------------------------------------------------
 422+ 910A
 423+ 910A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 910A              ;
 425+ 910A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 910A
 427+ 910A 7D           column ld a,l
 428+ 910B E6 1F        	and $1f
 429+ 910D FE 10         	cp $10
 430+ 910F C9            	ret
 431+ 9110
 432+ 9110              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9110              ;
 434+ 9110              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9110              ;
 436+ 9110              ; 14/12/22
 437+ 9110              ;
 438+ 9110              ;	Modifica: A y BC.
 439+ 9110
 440+ 9110 3A 62 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9113 E6 01        	and 1
 442+ 9115 28 17        	jr z,1F
 443+ 9117
 444+ 9117              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9117
 446+ 9117 3A 54 89     	ld a,(Coordenada_X)
 447+ 911A 47           	ld b,a
 448+ 911B 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 911C 79           	ld a,c
 450+ 911D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 911E 38 08        	jr c,2F
 452+ 9120 47           	ld b,a
 453+ 9121 79           	ld a,c
 454+ 9122 90           	sub b
 455+ 9123 32 71 89     	ld (Columnas),a
 456+ 9126 18 1B        	jr 4F
 457+ 9128 79           2 ld a,c
 458+ 9129 32 71 89     	ld (Columnas),a
 459+ 912C 18 15        	jr 4F
 460+ 912E
 461+ 912E              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 912E
 463+ 912E 3A 54 89     1 ld a,(Coordenada_X)
 464+ 9131 81           	add c
 465+ 9132 3D           	dec a
 466+ 9133 D6 1F        	sub $1f
 467+ 9135 38 08        	jr c,3F
 468+ 9137 47           	ld b,a
 469+ 9138 79           	ld a,c
 470+ 9139 90           	sub b
 471+ 913A 32 71 89     	ld (Columnas),a
 472+ 913D 18 04        	jr 4F
 473+ 913F 79           3 ld a,c
 474+ 9140 32 71 89     	ld (Columnas),a
 475+ 9143 D9           4 exx
 476+ 9144 4F           	ld c,a
 477+ 9145 D9           	exx
 478+ 9146 C9            ret
 479+ 9147
 480+ 9147              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9147              ;
 482+ 9147              ;   19/7/23
 483+ 9147              ;
 484+ 9147              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9147              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9147              ;
 487+ 9147              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9147              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9147              ;
 490+ 9147              ;	DESTRUYE: HL,B Y A.
 491+ 9147
 492+ 9147 3A 62 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 914A FE 02        	cp 2
 494+ 914C 38 18        	jr c,1F
 495+ 914E 28 16        	jr z,1F
 496+ 9150 E6 01        	and 1
 497+ 9152 28 0D        	jr z,3F
 498+ 9154
 499+ 9154              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9154
 501+ 9154 CD 9A 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9157
 503+ 9157 7D           9 ld a,l
 504+ 9158 E6 1F        	and $1f
 505+ 915A 28 2A        	jr z,7F
 506+ 915C 2B           	dec hl
 507+ 915D 10 F8        	djnz 9B
 508+ 915F 18 25        	jr 7F
 509+ 9161
 510+ 9161              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9161
 512+ 9161 2A 50 89     3 ld hl,(Posicion_actual)
 513+ 9164 18 20        	jr 7F
 514+ 9166
 515+ 9166 28 14        1 jr z,2F
 516+ 9168
 517+ 9168              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9168
 519+ 9168 CD 9A 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 916B
 521+ 916B 7D           4 ld a,l
 522+ 916C E6 1F        	and $1f
 523+ 916E 28 03        	jr z,6F
 524+ 9170 2B           	dec hl
 525+ 9171 10 F8        	djnz 4B
 526+ 9173 06 0F        6 ld b,15
 527+ 9175 CD FB 91     5 call PreviousScan
 528+ 9178 10 FB        	djnz 5B
 529+ 917A 18 0A        	jr 7F
 530+ 917C
 531+ 917C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 917C
 533+ 917C CD 9A 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 917F 06 0F        	ld b,15
 535+ 9181 CD FB 91     8 call PreviousScan
 536+ 9184 10 FB        	djnz 8B
 537+ 9186
 538+ 9186 E5           7 push hl
 539+ 9187 DD E1        	pop ix
 540+ 9189
 541+ 9189 2A 52 89     	ld hl,(Puntero_objeto)
 542+ 918C E5           	push hl
 543+ 918D FD E1        	pop iy
 544+ 918F
 545+ 918F              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 918F
 547+ 918F 3A 70 89     	ld a,(Ctrl_0)
 548+ 9192 CB 77        	bit 6,a
 549+ 9194 C8           	ret z
 550+ 9195
 551+ 9195              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9195              ; _ entidad / Amadeus´.
 553+ 9195
 554+ 9195 DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 9199
 556+ 9199 C9           	ret
 557+ 919A
 558+ 919A              ; --------------------------------------------------------------------------------------------------------------------
 559+ 919A              ;
 560+ 919A              ;	2/1/23
 561+ 919A              ;
 562+ 919A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 919A              ;
 564+ 919A              ;	Tras esta rutina tenemos:
 565+ 919A              ;
 566+ 919A              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 919A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 919A              ;
 569+ 919A              ;	DESTRUYE!!!!! HL,B y A.
 570+ 919A
 571+ 919A 2A 50 89     Operandos ld hl,(Posicion_actual)
 572+ 919D 3A 71 89     	ld a,(Columnas)
 573+ 91A0 3D           	dec a
 574+ 91A1 20 01        	jr nz,1F
 575+ 91A3 3C           	inc a
 576+ 91A4 47           1 ld b,a
 577+ 91A5 C9           	ret
 578+ 91A6
 579+ 91A6              ; --------------------------------------------------------------------------------------------------------------------
 580+ 91A6              ;
 581+ 91A6              ;	3/1/23
 582+ 91A6              ;
 583+ 91A6              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 91A6              ;
 585+ 91A6              ;	Destruye: A,B,HL y DE.
 586+ 91A6
 587+ 91A6              Define_rutina_de_impresion
 588+ 91A6
 589+ 91A6 3A 4F 89     	ld a,(Columns)
 590+ 91A9 47           	ld b,a
 591+ 91AA 3A 71 89     	ld a,(Columnas)
 592+ 91AD B8           	cp b
 593+ 91AE 20 0D        	jr nz,2f
 594+ 91B0
 595+ 91B0              ;	La entidad se imprime entera.
 596+ 91B0
 597+ 91B0 21 CF 92     	ld hl, Indice_entidades_completas
 598+ 91B3 E6 01        	and 1
 599+ 91B5 28 02        	jr z,1F
 600+ 91B7
 601+ 91B7 23           	inc hl
 602+ 91B8 23           	inc hl
 603+ 91B9
 604+ 91B9 CD A7 8B     1 call Extrae_address
 605+ 91BC C9           	ret		;	ret
 606+ 91BD
 607+ 91BD              ;	La entidad no se imprime entera en pantalla.
 608+ 91BD
 609+ 91BD 3A 62 89     2 ld a,(Cuad_objeto)
 610+ 91C0 E6 01        	and 1
 611+ 91C2 28 17        	jr z,3F
 612+ 91C4
 613+ 91C4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 91C4
 615+ 91C4 21 D3 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 91C7 3A 4F 89     4 ld a,(Columns)
 617+ 91CA E6 01        	and 1
 618+ 91CC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 91CE
 620+ 91CE 23           	inc hl
 621+ 91CF 23           	inc hl
 622+ 91D0
 623+ 91D0 3A 71 89     	ld a,(Columnas)
 624+ 91D3 E6 01        	and 1
 625+ 91D5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 91D7
 627+ 91D7 23           	inc hl
 628+ 91D8 23           	inc hl
 629+ 91D9
 630+ 91D9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 91DB
 632+ 91DB 21 D9 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 91DE 18 E7        	jr 4B
 634+ 91E0
 635+ 91E0              ; --------------------------------------------------------------------------------------------------------------------
 636+ 91E0              ;
 637+ 91E0              ;	Prepara_draw
 638+ 91E0              ;
 639+ 91E0              ;	Es una rutina de carga.
 640+ 91E0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 91E0              ;
 642+ 91E0              ;	FUNCIONAMIENTO:
 643+ 91E0              ;
 644+ 91E0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 91E0              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 91E0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 91E0              ;
 648+ 91E0              ;	DESTRUYE:
 649+ 91E0              ;
 650+ 91E0              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 91E0
 652+ 91E0 21 4E 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 91E3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 91E4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 91E5 4E           	ld c,(hl)
 656+ 91E6 2A 50 89     	ld hl,(Posicion_actual)
 657+ 91E9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 91EB C9           	ret
 659+ 91EC
 660+ 91EC              ;----------------------------------------------------------------------------------------------------------------
 661+ 91EC              ;
 662+ 91EC              ;	5/08/22
 663+ 91EC              ;
 664+ 91EC              ;   NextScan.
 665+ 91EC              ;
 666+ 91EC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 91EC              ;
 668+ 91EC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 91EC              ;
 670+ 91EC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 91EC              ;
 672+ 91EC              ;       DESTRUIDOS: AF y HL !!!
 673+ 91EC              ;
 674+ 91EC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 91EC              ;
 676+ 91EC
 677+ 91EC 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 91ED 7C               ld a,h
 679+ 91EE E6 07            and 7
 680+ 91F0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 91F1
 682+ 91F1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 91F2 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 91F4 6F               ld l,a
 685+ 91F5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 91F6
 687+ 91F6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 91F7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 91F9 67               ld h,a
 690+ 91FA C9               ret
 691+ 91FB
 692+ 91FB              ;----------------------------------------------------------------------------------------------------------------
 693+ 91FB              ;
 694+ 91FB              ;	5/08/22
 695+ 91FB              ;
 696+ 91FB              ;   PreviousScan.
 697+ 91FB              ;
 698+ 91FB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 91FB              ;
 700+ 91FB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 91FB              ;
 702+ 91FB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 91FB              ;
 704+ 91FB              ;       DESTRUIDOS: AF y HL !!!
 705+ 91FB              ;
 706+ 91FB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 91FB              ;
 708+ 91FB
 709+ 91FB 7C           PreviousScan ld a,h
 710+ 91FC 25               dec h               ; Dec H.
 711+ 91FD E6 07            and 7
 712+ 91FF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9200
 714+ 9200 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9201 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9203 6F               ld l,a
 717+ 9204 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9205
 719+ 9205 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9206 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9208 67               ld h,a
 722+ 9209 C9               ret
 723+ 920A
 724+ 920A              ; -----------------------------------------------------------------------------------
 725+ 920A              ;
 726+ 920A              ;	31/7/23
 727+ 920A              ;
 728+ 920A              ;	Rutina principal de pintado de entidades.
 729+ 920A              ;	Extrae la foto del frame, (entidades).
 730+ 920A
 731+ 920A              Extrae_foto_entidades
 732+ 920A
 733+ 920A 21 01 80     	ld hl,Album_de_fotos+1
 734+ 920D 7E           	ld a,(hl)
 735+ 920E A7           	and a
 736+ 920F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9210
 738+ 9210              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9210
 740+ 9210 3A 9B 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9213 A7           	and a
 742+ 9214 C8           	ret z
 743+ 9215
 744+ 9215              ; -----------------------------------
 745+ 9215
 746+ 9215 ED 73 A0 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9219 31 00 80     	ld sp,Album_de_fotos
 748+ 921C
 749+ 921C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 921E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 921F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9220
 753+ 9220 ED 73 A2 89  	ld (Stack_2),sp
 754+ 9224 ED 7B A0 89  	ld sp,(Stack)
 755+ 9228
 756+ 9228              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9228
 758+ 9228 3E CD        	ld a,$cd
 759+ 922A 32 32 92     	ld (Imprime),a
 760+ 922D EB           	ex de,hl
 761+ 922E 22 33 92     	ld (Imprime+1),hl
 762+ 9231 EB           	ex de,hl
 763+ 9232
 764+ 9232              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9232
 766+ 9232 00 00 00     Imprime db 0,0,0
 767+ 9235
 768+ 9235 ED 73 A0 89  	ld (Stack),sp
 769+ 9239
 770+ 9239 3A 9B 89     	ld a,(Numero_de_malotes)
 771+ 923C 3D           	dec a
 772+ 923D 28 09        	jr z,1F
 773+ 923F 32 9B 89      	ld (Numero_de_malotes),a
 774+ 9242
 775+ 9242 ED 7B A2 89  	ld sp,(Stack_2)
 776+ 9246 18 D4        	jr 2B
 777+ 9248
 778+ 9248 AF           1 xor a
 779+ 9249 32 A2 89     	ld (Stack_2),a
 780+ 924C
 781+ 924C C9           	ret
 782+ 924D
 783+ 924D              ; -----------------------------------------------------------------------------------
 784+ 924D              ;
 785+ 924D              ;	28/2/23
 786+ 924D              ;
 787+ 924D              ;	Pinta los disparos generados.
 788+ 924D
 789+ 924D              Extrae_foto_disparos
 790+ 924D
 791+ 924D 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9250 7E               ld a,(hl)
 793+ 9251 A7               and a
 794+ 9252 C8               ret z
 795+ 9253
 796+ 9253 3A B0 89     	ld a,(Numero_de_disparotes)
 797+ 9256 A7           	and a
 798+ 9257 C8           	ret z
 799+ 9258 ED 73 A0 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 925C 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 925F
 802+ 925F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9261 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9262 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9263
 806+ 9263 ED 73 A2 89  	ld (Stack_2),sp
 807+ 9267 ED 7B A0 89  	ld sp,(Stack)
 808+ 926B
 809+ 926B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 926B
 811+ 926B 3E CD        	ld a,$cd
 812+ 926D 32 75 92     	ld (Imprime2),a
 813+ 9270 EB           	ex de,hl
 814+ 9271 22 76 92     	ld (Imprime2+1),hl
 815+ 9274 EB           	ex de,hl
 816+ 9275
 817+ 9275              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9275
 819+ 9275 00 00 00     Imprime2 db 0,0,0
 820+ 9278
 821+ 9278 3A B0 89     	ld a,(Numero_de_disparotes)
 822+ 927B 3D           	dec a
 823+ 927C 28 09        	jr z,1F
 824+ 927E 32 B0 89      	ld (Numero_de_disparotes),a
 825+ 9281
 826+ 9281 ED 7B A2 89  	ld sp,(Stack_2)
 827+ 9285 18 D8        	jr 2B
 828+ 9287
 829+ 9287 AF           1 xor a
 830+ 9288 32 A2 89     	ld (Stack_2),a
 831+ 928B C9           	ret
 832+ 928C
 833+ 928C              ; -----------------------------------------------------------------------------------
 834+ 928C              ;
 835+ 928C              ;	4/9/23
 836+ 928C              ;
 837+ 928C              ;	Rutina principal de pintado de Amadeus.
 838+ 928C              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 928C
 840+ 928C 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 928F 7E           	ld a,(hl)
 842+ 9290 A7           	and a
 843+ 9291 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9292
 845+ 9292 3A 9B 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9295 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9296 C8           	ret z
 848+ 9297
 849+ 9297              ; -----------------------------------
 850+ 9297
 851+ 9297 ED 73 A0 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 929B 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 929E
 854+ 929E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 92A0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 92A1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 92A2
 858+ 92A2 ED 73 A2 89  	ld (Stack_2),sp
 859+ 92A6 ED 7B A0 89  	ld sp,(Stack)
 860+ 92AA
 861+ 92AA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 92AA
 863+ 92AA 3E CD        	ld a,$cd
 864+ 92AC 32 B4 92     	ld (Imprime_Amadeus),a
 865+ 92AF EB           	ex de,hl
 866+ 92B0 22 B5 92     	ld (Imprime_Amadeus+1),hl
 867+ 92B3 EB           	ex de,hl
 868+ 92B4
 869+ 92B4              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92B4
 871+ 92B4 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 92B7
 873+ 92B7 ED 73 A0 89  	ld (Stack),sp
 874+ 92BB
 875+ 92BB 3A 9B 89     	ld a,(Numero_de_malotes)
 876+ 92BE 3D           	dec a
 877+ 92BF 28 09        	jr z,1F
 878+ 92C1 32 9B 89      	ld (Numero_de_malotes),a
 879+ 92C4
 880+ 92C4 ED 7B A2 89  	ld sp,(Stack_2)
 881+ 92C8 18 D4        	jr 2B
 882+ 92CA
 883+ 92CA AF           1 xor a
 884+ 92CB 32 A2 89     	ld (Stack_2),a
 885+ 92CE
 886+ 92CE C9           	ret
# file closed: Draw_XOR.asm
1727  92CF              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92CF              ;   índices de Rutinas de impresión.
   2+ 92CF
   3+ 92CF DF 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92D1 0C 93            defw Pinta_Amadeus_3x2
   5+ 92D3
   6+ 92D3 62 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92D5 02 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92D7 B6 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92D9
  10+ 92D9 8C 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92DB 90 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92DD 44 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92DF
  14+ 92DF
  15+ 92DF              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92DF              ;
  17+ 92DF              ;   12/12/22
  18+ 92DF              ;
  19+ 92DF              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92DF              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92DF              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92DF              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92DF              ;
  24+ 92DF              ;   Modifica: DE y HL.
  25+ 92DF
  26+ 92DF ED 73 A0 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92E3 FD F9        	ld sp,iy
  28+ 92E5 06 10            ld b,16
  29+ 92E7 D1           1 pop de
  30+ 92E8 7B               ld a,e
  31+ 92E9 AE               xor (hl)
  32+ 92EA 77           	ld (hl),a
  33+ 92EB 23           	inc hl
  34+ 92EC 7A               ld a,d
  35+ 92ED AE               xor (hl)
  36+ 92EE 77           	ld (hl),a
  37+ 92EF 2B           	dec hl
  38+ 92F0 24           	inc h
  39+ 92F1 7C               ld a,h
  40+ 92F2 E6 07            and 7
  41+ 92F4 20 0A            jr nz,2F
  42+ 92F6 7D               ld a,l
  43+ 92F7 C6 20            add a,$20
  44+ 92F9 6F               ld l,a
  45+ 92FA 38 04            jr c,2F
  46+ 92FC 7C               ld a,h
  47+ 92FD D6 08            sub 8
  48+ 92FF 67               ld h,a
  49+ 9300 7C           2 ld a,h
  50+ 9301 FE 58            cp $58
  51+ 9303 28 02            jr z,3F
  52+ 9305 10 E0            djnz 1B
  53+ 9307 ED 7B A0 89  3 ld sp,(Stack)
  54+ 930B C9           	ret
  55+ 930C
  56+ 930C ED 73 A0 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9310 FD F9        	ld sp,iy
  58+ 9312 06 08            ld b,8
  59+ 9314 D1           1 pop de
  60+ 9315 7B               ld a,e
  61+ 9316 AE               xor (hl)
  62+ 9317 77           	ld (hl),a
  63+ 9318 23           	inc hl
  64+ 9319 7A               ld a,d
  65+ 931A AE               xor (hl)
  66+ 931B 77           	ld (hl),a
  67+ 931C 23           	inc hl
  68+ 931D D1           	pop de
  69+ 931E 7B               ld a,e
  70+ 931F AE               xor (hl)
  71+ 9320 77           	ld (hl),a
  72+ 9321 2B           	dec hl
  73+ 9322 2B           	dec hl
  74+ 9323 24           	inc h
  75+ 9324 7C               ld a,h
  76+ 9325 E6 07            and 7
  77+ 9327 20 0A            jr nz,2F
  78+ 9329 7D               ld a,l
  79+ 932A C6 20            add a,$20
  80+ 932C 6F               ld l,a
  81+ 932D 38 04            jr c,2F
  82+ 932F 7C               ld a,h
  83+ 9330 D6 08            sub 8
  84+ 9332 67               ld h,a
  85+ 9333 7C           2 ld a,h
  86+ 9334 FE 58            cp $58
  87+ 9336 28 25            jr z,4F
  88+ 9338 7A               ld a,d
  89+ 9339 AE               xor (hl)
  90+ 933A 77               ld (hl),a
  91+ 933B D1           	pop de
  92+ 933C 23           	inc hl
  93+ 933D 7B               ld a,e
  94+ 933E AE               xor (hl)
  95+ 933F 77           	ld (hl),a
  96+ 9340 23           	inc hl
  97+ 9341 7A               ld a,d
  98+ 9342 AE               xor (hl)
  99+ 9343 77           	ld (hl),a
 100+ 9344 2B           	dec hl
 101+ 9345 2B           	dec hl
 102+ 9346 24           	inc h
 103+ 9347 7C               ld a,h
 104+ 9348 E6 07            and 7
 105+ 934A 20 0A            jr nz,3F
 106+ 934C 7D               ld a,l
 107+ 934D C6 20            add a,$20
 108+ 934F 6F               ld l,a
 109+ 9350 38 04            jr c,3F
 110+ 9352 7C               ld a,h
 111+ 9353 D6 08            sub 8
 112+ 9355 67               ld h,a
 113+ 9356 7C           3 ld a,h
 114+ 9357 FE 58            cp $58
 115+ 9359 28 02            jr z,4F
 116+ 935B 10 B7            djnz 1B
 117+ 935D ED 7B A0 89  4 ld sp,(Stack)
 118+ 9361 C9           	ret
 119+ 9362
 120+ 9362              ; ---------------------------------------------------
 121+ 9362
 122+ 9362 ED 73 A0 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9366 FD F9        	ld sp,iy
 124+ 9368
 125+ 9368              ; >>>
 126+ 9368
 127+ 9368 06 10            ld b,16
 128+ 936A D1           1 pop de
 129+ 936B 7A           	ld a,d
 130+ 936C AE           	xor (hl)
 131+ 936D 77           	ld (hl),a
 132+ 936E 24           	inc h
 133+ 936F 7C               ld a,h
 134+ 9370 E6 07            and 7
 135+ 9372 20 0C            jr nz,2F
 136+ 9374 7D               ld a,l
 137+ 9375 C6 20            add a,$20
 138+ 9377 6F               ld l,a
 139+ 9378 38 06            jr c,2F
 140+ 937A 7C               ld a,h
 141+ 937B D6 08            sub 8
 142+ 937D 67               ld h,a
 143+ 937E 18 00            jr 2F
 144+ 9380 7C           2 ld a,h
 145+ 9381 FE 58            cp $58
 146+ 9383 28 02            jr z,3F
 147+ 9385 10 E3            djnz 1B
 148+ 9387 ED 7B A0 89  3 ld sp,(Stack)
 149+ 938B C9           	ret
 150+ 938C
 151+ 938C ED 73 A0 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9390 FD F9        	ld sp,iy
 153+ 9392
 154+ 9392              ; >>>
 155+ 9392
 156+ 9392 06 10            ld b,16
 157+ 9394 D1           1 pop de
 158+ 9395 7B           	ld a,e
 159+ 9396 AE           	xor (hl)
 160+ 9397 77           	ld (hl),a
 161+ 9398 24           	inc h
 162+ 9399 7C               ld a,h
 163+ 939A E6 07            and 7
 164+ 939C 20 0C            jr nz,2F
 165+ 939E 7D               ld a,l
 166+ 939F C6 20            add a,$20
 167+ 93A1 6F               ld l,a
 168+ 93A2 38 06            jr c,2F
 169+ 93A4 7C               ld a,h
 170+ 93A5 D6 08            sub 8
 171+ 93A7 67               ld h,a
 172+ 93A8 18 00            jr 2F
 173+ 93AA 7C           2 ld a,h
 174+ 93AB FE 58            cp $58
 175+ 93AD 28 02            jr z,3F
 176+ 93AF 10 E3            djnz 1B
 177+ 93B1 ED 7B A0 89  3 ld sp,(Stack)
 178+ 93B5 C9           	ret
 179+ 93B6
 180+ 93B6              ; ---------------------------------------------------
 181+ 93B6
 182+ 93B6 ED 73 A0 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 93BA FD F9        	ld sp,iy
 184+ 93BC 06 08            ld b,8
 185+ 93BE D1           1 pop de
 186+ 93BF 7A           	ld a,d
 187+ 93C0 AE           	xor (hl)
 188+ 93C1 77           	ld (hl),a
 189+ 93C2 23           	inc hl
 190+ 93C3 D1           	pop de
 191+ 93C4 7B           	ld a,e
 192+ 93C5 AE           	xor (hl)
 193+ 93C6 77           	ld (hl),a
 194+ 93C7 2B           	dec hl
 195+ 93C8 24            	inc h
 196+ 93C9 7C               ld a,h
 197+ 93CA E6 07            and 7
 198+ 93CC 20 0A            jr nz,2F
 199+ 93CE 7D               ld a,l
 200+ 93CF C6 20            add a,$20
 201+ 93D1 6F               ld l,a
 202+ 93D2 38 04            jr c,2F
 203+ 93D4 7C               ld a,h
 204+ 93D5 D6 08            sub 8
 205+ 93D7 67               ld h,a
 206+ 93D8 7C           2 ld a,h
 207+ 93D9 FE 58            cp $58
 208+ 93DB 28 20            jr z,4F
 209+ 93DD D1               pop de
 210+ 93DE 7B           	ld a,e
 211+ 93DF AE           	xor (hl)
 212+ 93E0 77           	ld (hl),a
 213+ 93E1 23           	inc hl
 214+ 93E2 7A           	ld a,d
 215+ 93E3 AE           	xor (hl)
 216+ 93E4 77           	ld (hl),a
 217+ 93E5 2B           	dec hl
 218+ 93E6 24           	inc h
 219+ 93E7 7C               ld a,h
 220+ 93E8 E6 07            and 7
 221+ 93EA 20 0A            jr nz,3F
 222+ 93EC 7D               ld a,l
 223+ 93ED C6 20            add a,$20
 224+ 93EF 6F               ld l,a
 225+ 93F0 38 04            jr c,3F
 226+ 93F2 7C               ld a,h
 227+ 93F3 D6 08            sub 8
 228+ 93F5 67               ld h,a
 229+ 93F6 7C           3 ld a,h
 230+ 93F7 FE 58            cp $58
 231+ 93F9 28 02            jr z,4F
 232+ 93FB 10 C1            djnz 1B
 233+ 93FD ED 7B A0 89  4 ld sp,(Stack)
 234+ 9401 C9           	ret
 235+ 9402
 236+ 9402 ED 73 A0 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9406 FD F9        	ld sp,iy
 238+ 9408 06 08            ld b,8
 239+ 940A D1           1 pop de
 240+ 940B D1           	pop de
 241+ 940C 7B           	ld a,e
 242+ 940D AE           	xor (hl)
 243+ 940E 77           	ld (hl),a
 244+ 940F 24            	inc h
 245+ 9410 7C               ld a,h
 246+ 9411 E6 07            and 7
 247+ 9413 20 0A            jr nz,2F
 248+ 9415 7D               ld a,l
 249+ 9416 C6 20            add a,$20
 250+ 9418 6F               ld l,a
 251+ 9419 38 04            jr c,2F
 252+ 941B 7C               ld a,h
 253+ 941C D6 08            sub 8
 254+ 941E 67               ld h,a
 255+ 941F 7C           2 ld a,h
 256+ 9420 FE 58            cp $58
 257+ 9422 28 1B            jr z,4F
 258+ 9424 D1               pop de
 259+ 9425 7A           	ld a,d
 260+ 9426 AE           	xor (hl)
 261+ 9427 77           	ld (hl),a
 262+ 9428 24           	inc h
 263+ 9429 7C               ld a,h
 264+ 942A E6 07            and 7
 265+ 942C 20 0A            jr nz,3F
 266+ 942E 7D               ld a,l
 267+ 942F C6 20            add a,$20
 268+ 9431 6F               ld l,a
 269+ 9432 38 04            jr c,3F
 270+ 9434 7C               ld a,h
 271+ 9435 D6 08            sub 8
 272+ 9437 67               ld h,a
 273+ 9438 7C           3 ld a,h
 274+ 9439 FE 58            cp $58
 275+ 943B 28 02            jr z,4F
 276+ 943D 10 CB            djnz 1B
 277+ 943F ED 7B A0 89  4 ld sp,(Stack)
 278+ 9443 C9           	ret
 279+ 9444
 280+ 9444 ED 73 A0 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9448 FD F9        	ld sp,iy
 282+ 944A 06 08            ld b,8
 283+ 944C D1           1 pop de
 284+ 944D 7B           	ld a,e
 285+ 944E AE           	xor (hl)
 286+ 944F 77           	ld (hl),a
 287+ 9450 23           	inc hl
 288+ 9451 7A           	ld a,d
 289+ 9452 AE           	xor (hl)
 290+ 9453 77           	ld (hl),a
 291+ 9454 2B           	dec hl
 292+ 9455 24             	inc h
 293+ 9456 7C               ld a,h
 294+ 9457 E6 07            and 7
 295+ 9459 20 0A            jr nz,2F
 296+ 945B 7D               ld a,l
 297+ 945C C6 20            add a,$20
 298+ 945E 6F               ld l,a
 299+ 945F 38 04            jr c,2F
 300+ 9461 7C               ld a,h
 301+ 9462 D6 08            sub 8
 302+ 9464 67               ld h,a
 303+ 9465 7C           2 ld a,h
 304+ 9466 FE 58            cp $58
 305+ 9468 28 21            jr z,4F
 306+ 946A D1               pop de
 307+ 946B 7A           	ld a,d
 308+ 946C AE           	xor (hl)
 309+ 946D 77           	ld (hl),a
 310+ 946E 23           	inc hl
 311+ 946F D1               pop de
 312+ 9470 7B           	ld a,e
 313+ 9471 AE           	xor (hl)
 314+ 9472 77           	ld (hl),a
 315+ 9473 2B           	dec hl
 316+ 9474 24           	inc h
 317+ 9475 7C               ld a,h
 318+ 9476 E6 07            and 7
 319+ 9478 20 0A            jr nz,3F
 320+ 947A 7D               ld a,l
 321+ 947B C6 20            add a,$20
 322+ 947D 6F               ld l,a
 323+ 947E 38 04            jr c,3F
 324+ 9480 7C               ld a,h
 325+ 9481 D6 08            sub 8
 326+ 9483 67               ld h,a
 327+ 9484 7C           3 ld a,h
 328+ 9485 FE 58            cp $58
 329+ 9487 28 02            jr z,4F
 330+ 9489 10 C1            djnz 1B
 331+ 948B ED 7B A0 89  4 ld sp,(Stack)
 332+ 948F C9           	ret
 333+ 9490
 334+ 9490 ED 73 A0 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9494 FD F9        	ld sp,iy
 336+ 9496 06 08            ld b,8
 337+ 9498 D1           1 pop de
 338+ 9499 7B           	ld a,e
 339+ 949A AE           	xor (hl)
 340+ 949B 77           	ld (hl),a
 341+ 949C 24            	inc h
 342+ 949D 7C               ld a,h
 343+ 949E E6 07            and 7
 344+ 94A0 20 0A            jr nz,2F
 345+ 94A2 7D               ld a,l
 346+ 94A3 C6 20            add a,$20
 347+ 94A5 6F               ld l,a
 348+ 94A6 38 04            jr c,2F
 349+ 94A8 7C               ld a,h
 350+ 94A9 D6 08            sub 8
 351+ 94AB 67               ld h,a
 352+ 94AC 7C           2 ld a,h
 353+ 94AD FE 58            cp $58
 354+ 94AF 28 1C            jr z,4F
 355+ 94B1 D1               pop de
 356+ 94B2 7A           	ld a,d
 357+ 94B3 AE           	xor (hl)
 358+ 94B4 77           	ld (hl),a
 359+ 94B5 24           	inc h
 360+ 94B6 7C               ld a,h
 361+ 94B7 E6 07            and 7
 362+ 94B9 20 0A            jr nz,3F
 363+ 94BB 7D               ld a,l
 364+ 94BC C6 20            add a,$20
 365+ 94BE 6F               ld l,a
 366+ 94BF 38 04            jr c,3F
 367+ 94C1 7C               ld a,h
 368+ 94C2 D6 08            sub 8
 369+ 94C4 67               ld h,a
 370+ 94C5 7C           3 ld a,h
 371+ 94C6 FE 58            cp $58
 372+ 94C8 28 03            jr z,4F
 373+ 94CA D1               pop de
 374+ 94CB 10 CB            djnz 1B
 375+ 94CD ED 7B A0 89  4 ld sp,(Stack)
 376+ 94D1 C9           	ret
 377+ 94D2
 378+ 94D2              ; ---------------------------------------------------
 379+ 94D2              ;
 380+ 94D2              ;   27/02/23
 381+ 94D2              ;
 382+ 94D2              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 94D2              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 94D2              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 94D2
 386+ 94D2 ED 73 A0 89  Pinta_Disparo ld (Stack),sp
 387+ 94D6 FD F9            ld sp,iy
 388+ 94D8 06 03            ld b,3
 389+ 94DA D1           1 pop de
 390+ 94DB 7B               ld a,e
 391+ 94DC AE               xor (hl)
 392+ 94DD 77               ld (hl),a
 393+ 94DE 23               inc hl
 394+ 94DF 7A               ld a,d
 395+ 94E0 AE               xor (hl)
 396+ 94E1 77               ld (hl),a
 397+ 94E2 2B               dec hl
 398+ 94E3
 399+ 94E3 24               inc h
 400+ 94E4 7C               ld a,h
 401+ 94E5 E6 07            and 7
 402+ 94E7 20 0A            jr nz,2F
 403+ 94E9 7D               ld a,l
 404+ 94EA C6 20            add a,$20
 405+ 94EC 6F               ld l,a
 406+ 94ED 38 04            jr c,2F
 407+ 94EF 7C               ld a,h
 408+ 94F0 D6 08            sub 8
 409+ 94F2 67               ld h,a
 410+ 94F3 7C           2 ld a,h
 411+ 94F4 FE 58            cp $58
 412+ 94F6 28 02            jr z,3F
 413+ 94F8
 414+ 94F8 10 E0            djnz 1B
 415+ 94FA ED 7B A0 89  3 ld sp,(Stack)
 416+ 94FE C9               ret
 417+ 94FF
# file closed: Rutinas_de_impresion_sprites.asm
1728  94FF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94FF
   2+ 94FF              ; ******************************************************************************************************************************************************************************************
   3+ 94FF              ;
   4+ 94FF              ;   20/05/23
   5+ 94FF              ;
   6+ 94FF              ;	Recompone_posicion_inicio
   7+ 94FF              ;
   8+ 94FF              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 94FF              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 94FF              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 94FF              ;	_ a una u otra rutina.
  12+ 94FF
  13+ 94FF              Recompone_posicion_inicio
  14+ 94FF
  15+ 94FF 2A 60 89     	ld hl,(Posicion_inicio)
  16+ 9502 7D           	ld a,l
  17+ 9503 E6 1F        	and $1f
  18+ 9505 28 16        	jr z,1F
  19+ 9507
  20+ 9507 FE 1F        	cp $1f
  21+ 9509 28 0D        	jr z,3F
  22+ 950B
  23+ 950B 21 75 89     	ld hl,Ctrl_2
  24+ 950E CB C6        	set 0,(hl)
  25+ 9510 2A 52 89     	ld hl,(Puntero_objeto)
  26+ 9513 22 90 89     	ld (Repone_puntero_objeto),hl
  27+ 9516 18 08        	jr 2F
  28+ 9518
  29+ 9518 CD C6 96     3 call Mov_left
  30+ 951B 18 03        	jr 2F
  31+ 951D
  32+ 951D CD A3 95     1 call Mov_right
  33+ 9520 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9523 22 52 89     	ld (Puntero_objeto),hl
  35+ 9526 C9           	ret
  36+ 9527
  37+ 9527              ; ******************************************************************************************************************************************************************************************
  38+ 9527              ;
  39+ 9527              ;   27/05/23
  40+ 9527              ;
  41+ 9527              ;	Mov_down
  42+ 9527              ;
  43+ 9527              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9527              ;
  45+ 9527              ;
  46+ 9527              Mov_down
  47+ 9527
  48+ 9527 CD 91 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 952A              ;																	; _ repone (Puntero_objeto).
  50+ 952A 21 70 89     	ld hl,Ctrl_0
  51+ 952D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 952F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 952F              ; 																	; _ en el caso de que no lo haya.
  54+ 952F 3A 7A 89     	ld a,(Vel_down)
  55+ 9532 47           	ld b,a
  56+ 9533 2A 50 89         ld hl,(Posicion_actual)
  57+ 9536 CD D6 9E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9539 E6 02        	and 2
  59+ 953B 28 17        	jr z,1F
  60+ 953D
  61+ 953D              ; Nos encontramos en el último tercio de pantalla.
  62+ 953D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 953D
  64+ 953D 7C           	ld a,h
  65+ 953E FE 57        	cp $57
  66+ 9540 20 12        	jr nz,1F
  67+ 9542
  68+ 9542 7D           	ld a,l
  69+ 9543 C6 20        	add $20
  70+ 9545 30 0D        	jr nc,1F
  71+ 9547
  72+ 9547              ; ------------------------------
  73+ 9547              ;
  74+ 9547              ;	12/01/24
  75+ 9547
  76+ 9547              ;	call Reaparece_arriba
  77+ 9547 CD 53 98     	call Reinicio
  78+ 954A
  79+ 954A              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 954A
  81+ 954A 3A AE 89     	ld a,(Ctrl_3)
  82+ 954D CB CF        	set 1,a
  83+ 954F 32 AE 89     	ld (Ctrl_3),a
  84+ 9552
  85+ 9552 18 08        	jr 3F
  86+ 9554              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9554              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9554              ; ------------------------------
  89+ 9554
  90+ 9554 CD EC 91     1 call NextScan
  91+ 9557 22 50 89     	ld (Posicion_actual),hl
  92+ 955A 10 DA            djnz 2B
  93+ 955C CD F4 9E     3 call Genera_coordenadas
  94+ 955F C9           	ret
  95+ 9560
  96+ 9560              ; ******************************************************************************************************************************************************************************************
  97+ 9560              ;
  98+ 9560              ;   27/05/23
  99+ 9560              ;
 100+ 9560              ;	Mov_up
 101+ 9560              ;
 102+ 9560              ; 	Mueve el Sprite hacia arriba.
 103+ 9560              ;
 104+ 9560              ;
 105+ 9560              Mov_up
 106+ 9560
 107+ 9560 CD 91 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9563              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9563 21 70 89     	ld hl,Ctrl_0
 110+ 9566 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9568              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9568              ; 																		; _ en el caso de que no lo haya.
 113+ 9568 3A 79 89     	ld a,(Vel_up)
 114+ 956B 47           	ld b,a
 115+ 956C 2A 50 89     	ld hl,(Posicion_actual)
 116+ 956F CD D6 9E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9572 A7           	and a
 118+ 9573 20 10        	jr nz,1F
 119+ 9575
 120+ 9575              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9575              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9575
 123+ 9575 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9576 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9578 20 0B            jr nz,1F
 126+ 957A 7D               ld a,l
 127+ 957B D6 20            sub $20
 128+ 957D 30 06            jr nc,1F
 129+ 957F 25               dec h
 130+ 9580
 131+ 9580              ; -----------------------------
 132+ 9580 CD 34 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9583              ;	call Reinicio
 134+ 9583              ; -----------------------------
 135+ 9583
 136+ 9583 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9585 CD FB 91     1 call PreviousScan
 138+ 9588 22 50 89     	ld (Posicion_actual),hl
 139+ 958B 10 E2            djnz 3B
 140+ 958D CD F4 9E     2 call Genera_coordenadas
 141+ 9590 C9           	ret
 142+ 9591
 143+ 9591              ; -----------------------------
 144+ 9591              ;
 145+ 9591              ;	27/5/23
 146+ 9591              ;
 147+ 9591              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9591              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9591              ;
 150+ 9591              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9591              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9591              ;
 153+ 9591              ;	Modifica: A y (Puntero_objeto).
 154+ 9591
 155+ 9591 3A 75 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9594 CB 47        	bit 0,a
 157+ 9596 C8           	ret z
 158+ 9597 CB 87        	res 0,a
 159+ 9599 32 75 89     	ld (Ctrl_2),a
 160+ 959C 2A 90 89     	ld hl,(Repone_puntero_objeto)
 161+ 959F 22 52 89     	ld (Puntero_objeto),hl
 162+ 95A2 C9           	ret
 163+ 95A3
 164+ 95A3              ; ******************************************************************************************************************************************************************************************
 165+ 95A3              ;
 166+ 95A3              ;	19/10/22
 167+ 95A3              ;
 168+ 95A3              ;	Mov_right.
 169+ 95A3              ;
 170+ 95A3              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95A3              ;
 172+ 95A3
 173+ 95A3 3A 70 89     Mov_right ld a,(Ctrl_0)
 174+ 95A6 CB 77        	bit 6,a
 175+ 95A8 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95AA
 177+ 95AA CD E2 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95AD C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95AE
 180+ 95AE 21 70 89     	ld hl,Ctrl_0
 181+ 95B1 CB E6        	set 4,(hl)
 182+ 95B3 18 52        	jr 8F
 183+ 95B5
 184+ 95B5 21 70 89     10 ld hl,Ctrl_0
 185+ 95B8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95BA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95BA              ; 																	; _ en el caso de que no lo haya.
 188+ 95BA 3A 54 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95BD FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95BF 20 46        	jr nz,8F
 191+ 95C1
 192+ 95C1 3A 56 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95C4 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95C5 28 40        	jr z,8F
 195+ 95C7
 196+ 95C7              ; ---------- ---------- ----------
 197+ 95C7              ;
 198+ 95C7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95C7
 200+ 95C7 3A 78 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95CA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95CC 28 11        	jr z,1F
 203+ 95CE 38 06        	jr c,6F
 204+ 95D0 FE 04        	cp 4
 205+ 95D2 28 14        	jr z,7F
 206+ 95D4 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95D6
 208+ 95D6              ; ---------- ---------- ----------
 209+ 95D6              ;
 210+ 95D6              ; Perfiles de velocidad
 211+ 95D6              ;
 212+ 95D6
 213+ 95D6 3A 56 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95D9 FE FE        	cp $fe
 215+ 95DB 20 2A        	jr nz,8F
 216+ 95DD 18 10        	jr 3F
 217+ 95DF 3A 56 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95E2 FE FD        	cp $fd
 219+ 95E4 20 21        	jr nz,8F
 220+ 95E6 18 07        	jr 3F
 221+ 95E8 3A 56 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95EB FE FB        	cp $fb
 223+ 95ED 20 18        	jr nz,8F
 224+ 95EF
 225+ 95EF              ; ---------- ---------- ----------
 226+ 95EF
 227+ 95EF              3
 228+ 95EF CD 22 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95F2              ;	call Reinicio
 230+ 95F2
 231+ 95F2              ; ---------- ---------- ----------
 232+ 95F2              ;
 233+ 95F2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95F2
 235+ 95F2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 95F4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 95F5 CD 0E 96     	call DESPLZ_DER
 238+ 95F8 C1           	pop bc
 239+ 95F9 10 F9        	djnz 5B
 240+ 95FB 2A 50 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 95FE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 95FF 22 50 89     	ld (Posicion_actual),hl
 243+ 9602 CD F4 9E     	call Genera_coordenadas
 244+ 9605 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9607
 246+ 9607              ; ---------- ---------- ----------
 247+ 9607
 248+ 9607 2A 50 89     8 ld hl,(Posicion_actual)
 249+ 960A CD 0E 96     	call DESPLZ_DER
 250+ 960D C9           2 ret
 251+ 960E
 252+ 960E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 960E              ;
 254+ 960E              ;	22/9/22
 255+ 960E              ;
 256+ 960E
 257+ 960E CD 1D 96     DESPLZ_DER call Desplaza_derecha
 258+ 9611 CD 69 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9614 CD 92 96         call Ciclo_completo
 260+ 9617 21 70 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 961A CB FE        	set 7,(hl)
 262+ 961C C9           	ret
 263+ 961D
 264+ 961D              ; ******************************************************************************************************************************************************************************************
 265+ 961D              ;	15/02/23
 266+ 961D              ;
 267+ 961D
 268+ 961D 3A 78 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9620 47           	ld b,a
 270+ 9621 2A 5C 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9624 23           1 inc hl
 272+ 9625 23           	inc hl
 273+ 9626 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9628 22 5C 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 962B CD A7 8B     	call Extrae_address
 276+ 962E 22 52 89     	ld (Puntero_objeto),hl
 277+ 9631
 278+ 9631              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9631
 280+ 9631              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9631              ; Cuántos movimientos hemos hecho ??
 282+ 9631              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9631
 284+ 9631 2A 58 89     7 ld hl,(Indice_Sprite_der)
 285+ 9634 EB           	ex de,hl
 286+ 9635 A7           	and a
 287+ 9636 ED 52        	sbc hl,de
 288+ 9638 CB 3D        	srl l
 289+ 963A 3E 08        6 ld a,8
 290+ 963C 95           	sub l
 291+ 963D 30 1E        	jr nc,3F
 292+ 963F
 293+ 963F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 963F              ; B="0".
 295+ 963F
 296+ 963F 04           4 inc b
 297+ 9640 3C           	inc a
 298+ 9641 20 FC        	jr nz,4B
 299+ 9643 78           	ld a,b
 300+ 9644 08           	ex af,af
 301+ 9645 2A 58 89     	ld hl,(Indice_Sprite_der)
 302+ 9648 23           5 inc hl
 303+ 9649 23           	inc hl
 304+ 964A 10 FC        	djnz 5B
 305+ 964C 22 5C 89     	ld (Puntero_DESPLZ_der),hl
 306+ 964F CD A7 8B     	call Extrae_address
 307+ 9652 22 52 89     	ld (Puntero_objeto),hl
 308+ 9655
 309+ 9655              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9655              ; _(Posicion_actual).
 311+ 9655
 312+ 9655 21 50 89     	ld hl,Posicion_actual
 313+ 9658 34           	inc (hl)
 314+ 9659 08               ex af,af
 315+ 965A 6F           	ld l,a
 316+ 965B 18 DD        	jr 6B
 317+ 965D
 318+ 965D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 965D
 320+ 965D 47           3 ld b,a
 321+ 965E 2A 5A 89     	ld hl,(Indice_Sprite_izq)
 322+ 9661 23           2 inc hl
 323+ 9662 23           	inc hl
 324+ 9663 10 FC        	djnz 2B
 325+ 9665 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9668 C9           8 ret
 327+ 9669
 328+ 9669              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9669              ;
 330+ 9669              ;	24/7/22
 331+ 9669              ;
 332+ 9669              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9669              ;
 334+ 9669              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9669              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9669              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9669
 338+ 9669 3A 56 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 966C A7           	and a
 340+ 966D 20 1F        	jr nz,1F
 341+ 966F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9671 32 56 89         ld (CTRL_DESPLZ),a
 343+ 9674
 344+ 9674 21 4F 89     	ld hl,Columns
 345+ 9677 34           	inc (hl)
 346+ 9678 3A 62 89     	ld a,(Cuad_objeto)
 347+ 967B E6 01        	and 1
 348+ 967D 28 0F        	jr z,1F
 349+ 967F 2A 50 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9682 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9683 22 50 89     	ld (Posicion_actual),hl
 352+ 9686 CD F4 9E     	call Genera_coordenadas
 353+ 9689 CD EE 97     	call Inc_CTRL_DESPLZ
 354+ 968C 18 03        	jr 2F
 355+ 968E CD EE 97     1 call Inc_CTRL_DESPLZ
 356+ 9691 C9           2 ret
 357+ 9692
 358+ 9692              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9692              ;
 360+ 9692              ;	24/7/22
 361+ 9692              ;
 362+ 9692              ;	Ciclo_completo.
 363+ 9692              ;
 364+ 9692              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9692              ;
 366+ 9692              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9692              ; 	Decrementamos (Columns).
 368+ 9692              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9692              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9692
 371+ 9692
 372+ 9692 3A 56 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9695 FE FF        	cp $ff
 374+ 9697 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9699 E6 F0        	and $f0
 376+ 969B 20 28        	jr nz,3F
 377+ 969D
 378+ 969D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 969D
 380+ 969D 3A 56 89     	ld a,(CTRL_DESPLZ)
 381+ 96A0 47           	ld b,a
 382+ 96A1 3E F8        	ld a,$f8
 383+ 96A3 80           	add b
 384+ 96A4 32 56 89     	ld (CTRL_DESPLZ),a
 385+ 96A7 18 1C        	jr 3F
 386+ 96A9 21 4F 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96AC 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96AD AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96AE 32 56 89     	ld (CTRL_DESPLZ),a
 390+ 96B1 3A 62 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96B4 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96B6 20 0A        	jr nz,2F
 393+ 96B8 2A 50 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96BB 23           	inc hl
 395+ 96BC 22 50 89     	ld (Posicion_actual),hl
 396+ 96BF CD F4 9E     	call Genera_coordenadas
 397+ 96C2
 398+ 96C2              ; Inicia el puntero de Sprite.
 399+ 96C2
 400+ 96C2 CD BC 8B     2 call Inicia_puntero_objeto_der
 401+ 96C5 C9           3 ret
 402+ 96C6
 403+ 96C6              ; ******************************************************************************************************************************************************************************************
 404+ 96C6              ;
 405+ 96C6              ;	15/02/23
 406+ 96C6              ;
 407+ 96C6              ;	Mov_left.
 408+ 96C6              ;
 409+ 96C6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96C6              ;
 411+ 96C6              Mov_left
 412+ 96C6
 413+ 96C6 21 70 89     	ld hl,Ctrl_0
 414+ 96C9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96CB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96CB              ; 																	; _ en el caso de que no lo haya.
 417+ 96CB 3A 70 89     	ld a,(Ctrl_0)
 418+ 96CE CB 77        	bit 6,a
 419+ 96D0 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96D2
 421+ 96D2 CD E8 97     	call Stop_Amadeus_left
 422+ 96D5 C8           	ret z
 423+ 96D6 20 4A        	jr nz,8F
 424+ 96D8
 425+ 96D8 3A 54 89     11 ld a,(Coordenada_X)
 426+ 96DB A7           	and a
 427+ 96DC 20 44        	jr nz,8F
 428+ 96DE
 429+ 96DE 3A 56 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96E1 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96E2 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96E4
 433+ 96E4              ; ---------- ---------- ----------
 434+ 96E4
 435+ 96E4 3A 77 89     	ld a,(Vel_left)
 436+ 96E7 FE 02        	cp 2
 437+ 96E9 28 0F        	jr z,1F
 438+ 96EB 38 04        	jr c,6F
 439+ 96ED FE 04        	cp 4
 440+ 96EF 28 12        	jr z,7F
 441+ 96F1
 442+ 96F1              ; ---------- ---------- ----------
 443+ 96F1
 444+ 96F1 3A 56 89     6 ld a,(CTRL_DESPLZ)
 445+ 96F4 FE F8        	cp $f8
 446+ 96F6 20 2A        	jr nz,8F
 447+ 96F8 18 10        	jr 4F
 448+ 96FA 3A 56 89     1 ld a,(CTRL_DESPLZ)
 449+ 96FD FE F9        	cp $f9
 450+ 96FF 20 21        	jr nz,8F
 451+ 9701 18 07        	jr 4F
 452+ 9703 3A 56 89     7 ld a,(CTRL_DESPLZ)
 453+ 9706 FE FB        	cp $fb
 454+ 9708 20 18        	jr nz,8F
 455+ 970A
 456+ 970A              ; ---------- ---------- ----------
 457+ 970A
 458+ 970A              4
 459+ 970A CD 10 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 970D              ;	call Reinicio
 461+ 970D
 462+ 970D              ; ---------- ---------- ----------
 463+ 970D
 464+ 970D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 970F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9710
 467+ 9710              ;	ld hl,(Indice_Sprite_izq)
 468+ 9710              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9710
 470+ 9710 CD 29 97     	call DESPLZ_IZQ
 471+ 9713 C1           	pop bc
 472+ 9714 10 F9        	djnz 5B
 473+ 9716 2A 50 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9719 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 971A 22 50 89     	ld (Posicion_actual),hl
 476+ 971D CD F4 9E     	call Genera_coordenadas
 477+ 9720 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9722
 479+ 9722              ; ---------- ---------- ----------
 480+ 9722
 481+ 9722              ; Movemos, no hay recolocación.
 482+ 9722
 483+ 9722 2A 50 89     8 ld hl,(Posicion_actual)
 484+ 9725 CD 29 97     	call DESPLZ_IZQ
 485+ 9728 C9           2 ret
 486+ 9729
 487+ 9729              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9729              ;
 489+ 9729              ;	22/9/22
 490+ 9729
 491+ 9729              DESPLZ_IZQ
 492+ 9729
 493+ 9729 CD 38 97     	call Desplaza_izquierda
 494+ 972C CD 84 97         call modifica_parametros_1er_DESPLZ
 495+ 972F CD AC 97     	call Ciclo_completo_2
 496+ 9732 21 70 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9735 CB BE        	res 7,(hl)
 498+ 9737 C9           	ret
 499+ 9738
 500+ 9738              Desplaza_izquierda
 501+ 9738
 502+ 9738 3A 77 89     	ld a,(Vel_left)
 503+ 973B 47           	ld b,a
 504+ 973C 2A 5E 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 973F 23           1 inc hl
 506+ 9740 23           	inc hl
 507+ 9741 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9743 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9746 CD A7 8B     	call Extrae_address
 510+ 9749 22 52 89     	ld (Puntero_objeto),hl
 511+ 974C
 512+ 974C              ; Modifica (Puntero_DESPLZ_der).
 513+ 974C
 514+ 974C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 974C              ; Cuántos movimientos hemos hecho ??
 516+ 974C              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 974C
 518+ 974C 2A 5A 89     7 ld hl,(Indice_Sprite_izq)
 519+ 974F EB           	ex de,hl
 520+ 9750 A7           	and a
 521+ 9751 ED 52        	sbc hl,de
 522+ 9753 CB 3D        	srl l
 523+ 9755 3E 08        6 ld a,8
 524+ 9757 95           	sub l
 525+ 9758 30 1E        	jr nc,3F
 526+ 975A
 527+ 975A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 975A              ; B="0".
 529+ 975A
 530+ 975A 04           4 inc b
 531+ 975B 3C           	inc a
 532+ 975C 20 FC        	jr nz,4B
 533+ 975E 78           	ld a,b
 534+ 975F 08           	ex af,af
 535+ 9760 2A 5A 89     	ld hl,(Indice_Sprite_izq)
 536+ 9763 23           5 inc hl
 537+ 9764 23           	inc hl
 538+ 9765 10 FC        	djnz 5B
 539+ 9767 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 976A CD A7 8B     	call Extrae_address
 541+ 976D 22 52 89     	ld (Puntero_objeto),hl
 542+ 9770
 543+ 9770              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9770              ; _(Posicion_actual).
 545+ 9770
 546+ 9770 21 50 89     	ld hl,Posicion_actual
 547+ 9773 35           	dec (hl)
 548+ 9774 08           	ex af,af
 549+ 9775 6F           	ld l,a
 550+ 9776 18 DD        	jr 6B
 551+ 9778
 552+ 9778              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9778
 554+ 9778 47           3 ld b,a
 555+ 9779 2A 58 89     	ld hl,(Indice_Sprite_der)
 556+ 977C 23           2 inc hl
 557+ 977D 23           	inc hl
 558+ 977E 10 FC        	djnz 2B
 559+ 9780 22 5C 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9783 C9           8 ret
 561+ 9784
 562+ 9784              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9784              ;
 564+ 9784              ;	modifica_parametros_1er_DESPLZ
 565+ 9784              ;
 566+ 9784              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9784              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9784              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9784
 570+ 9784 3A 56 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9787 A7           	and a
 572+ 9788 20 1E        	jr nz,1F
 573+ 978A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 978B 32 56 89         ld (CTRL_DESPLZ),a
 575+ 978E 21 4F 89     	ld hl,Columns
 576+ 9791 34           	inc (hl)
 577+ 9792 3A 62 89     	ld a,(Cuad_objeto)
 578+ 9795 E6 01        	and 1
 579+ 9797 20 0F        	jr nz,1F
 580+ 9799 2A 50 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 979C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 979D 22 50 89     	ld (Posicion_actual),hl
 583+ 97A0 CD F4 9E     	call Genera_coordenadas
 584+ 97A3 CD FF 97     	call Dec_CTRL_DESPLZ
 585+ 97A6 18 03        	jr 2F
 586+ 97A8 CD FF 97     1 call Dec_CTRL_DESPLZ
 587+ 97AB C9           2 ret
 588+ 97AC
 589+ 97AC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97AC
 591+ 97AC 3A 56 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97AF FE F7        	cp $f7
 593+ 97B1 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97B3 30 2C        	jr nc,3F
 595+ 97B5
 596+ 97B5              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97B5
 598+ 97B5 06 00        	ld b,0
 599+ 97B7 04           4 inc b
 600+ 97B8 3C           	inc a
 601+ 97B9 FE F7        	cp $f7
 602+ 97BB 20 FA        	jr nz,4B
 603+ 97BD 3E FF        	ld a,$ff
 604+ 97BF 90           	sub b
 605+ 97C0 32 56 89     	ld (CTRL_DESPLZ),a
 606+ 97C3 18 1C        	jr 3F
 607+ 97C5
 608+ 97C5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97C5
 610+ 97C5 21 4F 89     1 ld hl,Columns
 611+ 97C8 35           	dec (hl)
 612+ 97C9 AF           	xor a
 613+ 97CA 32 56 89     	ld (CTRL_DESPLZ),a
 614+ 97CD 3A 62 89     	ld a,(Cuad_objeto)
 615+ 97D0 E6 01        	and 1
 616+ 97D2 28 0A        	jr z,2F
 617+ 97D4 2A 50 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97D7 2B           	dec hl
 619+ 97D8 22 50 89     	ld (Posicion_actual),hl
 620+ 97DB CD F4 9E     	call Genera_coordenadas
 621+ 97DE
 622+ 97DE              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97DE
 624+ 97DE CD CF 8B     2 call Inicia_puntero_objeto_izq
 625+ 97E1 C9           3 ret
 626+ 97E2
 627+ 97E2              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97E2              ;
 629+ 97E2              ;	19/10/22
 630+ 97E2              ;
 631+ 97E2              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97E2              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97E2
 634+ 97E2 3A 54 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97E5 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97E7 C9           	ret
 637+ 97E8
 638+ 97E8              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97E8              ;
 640+ 97E8              ;	19/10/22
 641+ 97E8              ;
 642+ 97E8              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97E8              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97E8
 645+ 97E8 3A 54 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97EB FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97ED C9           	ret
 648+ 97EE
 649+ 97EE              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 97EE              ;
 651+ 97EE              ;	24/7/22
 652+ 97EE              ;
 653+ 97EE              ;	Inc_CTRL_DESPLZ
 654+ 97EE              ;
 655+ 97EE              ;
 656+ 97EE              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 97EE
 658+ 97EE 21 56 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 97F1 3A 78 89     	ld a,(Vel_right)
 660+ 97F4 A7           	and a
 661+ 97F5 28 06        	jr z,1F
 662+ 97F7 47           	ld b,a
 663+ 97F8 34           3 inc (hl)
 664+ 97F9 10 FD        	djnz 3B
 665+ 97FB 18 01        	jr 2F
 666+ 97FD 34           1 inc (hl)
 667+ 97FE C9           2 ret
 668+ 97FF
 669+ 97FF              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 97FF              ;
 671+ 97FF              ;	5/2/23
 672+ 97FF              ;
 673+ 97FF              ;	Dec_CTRL_DESPLZ
 674+ 97FF              ;
 675+ 97FF              ;
 676+ 97FF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 97FF
 678+ 97FF 21 56 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9802 3A 77 89     	ld a,(Vel_left)
 680+ 9805 A7           	and a
 681+ 9806 28 06        	jr z,1F
 682+ 9808 47           	ld b,a
 683+ 9809 35           3 dec (hl)
 684+ 980A 10 FD        	djnz 3B
 685+ 980C 18 01        	jr 2F
 686+ 980E 35           1 dec (hl)
 687+ 980F C9           2 ret
 688+ 9810
 689+ 9810              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9810
 691+ 9810 2A 50 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9813 01 1F 00     	ld bc,31
 693+ 9816 A7           	and a
 694+ 9817 ED 4A        	adc hl,bc
 695+ 9819 22 50 89     	ld (Posicion_actual),hl
 696+ 981C 21 70 89     	ld hl,Ctrl_0														; $xxx1
 697+ 981F CB C6        	set 0,(hl)
 698+ 9821 C9           	ret
 699+ 9822
 700+ 9822              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9822
 702+ 9822 2A 50 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9825 01 1F 00     	ld bc,31
 704+ 9828 A7           	and a
 705+ 9829 ED 42        	sbc hl,bc
 706+ 982B 22 50 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 982E 21 70 89     	ld hl,Ctrl_0
 708+ 9831 CB CE        	set 1,(hl)
 709+ 9833 C9           	ret
 710+ 9834
 711+ 9834              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9834
 713+ 9834 24           Reaparece_abajo inc h
 714+ 9835 01 E0 17     	ld bc,$17e0
 715+ 9838 A7           	and a
 716+ 9839 ED 4A        	adc hl,bc
 717+ 983B 22 50 89     	ld (Posicion_actual),hl
 718+ 983E 21 70 89     	ld hl,Ctrl_0
 719+ 9841 CB D6        	set 2,(hl)
 720+ 9843 C9           	ret
 721+ 9844
 722+ 9844              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9844
 724+ 9844 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9847 A7           	and a
 726+ 9848 ED 42        	sbc hl,bc
 727+ 984A 22 50 89     	ld (Posicion_actual),hl
 728+ 984D 21 70 89     	ld hl,Ctrl_0
 729+ 9850 CB DE        	set 3,(hl)
 730+ 9852 C9           	ret
 731+ 9853
 732+ 9853              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9853              ;
 734+ 9853              ;	15/07/23
 735+ 9853
 736+ 9853              Reinicio
 737+ 9853
 738+ 9853              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9853
 740+ 9853 AF           	xor a
 741+ 9854 21 87 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9857 CD 75 98     	call Limpia_contenido_hl
 743+ 985A
 744+ 985A 21 50 89     	ld hl,Posicion_actual
 745+ 985D CD 75 98     	call Limpia_contenido_hl
 746+ 9860
 747+ 9860 CD 2E 8D     	call Inicializa_Puntero_indice_mov
 748+ 9863 CD 41 99     	call Inicia_Puntero_mov
 749+ 9866
 750+ 9866 21 89 89     	ld hl,Incrementa_puntero
 751+ 9869 06 05        	ld b,5
 752+ 986B 77           1 ld (hl),a
 753+ 986C 23           	inc hl
 754+ 986D 10 FC        	djnz 1B
 755+ 986F
 756+ 986F 21 75 89     	ld hl,Ctrl_2
 757+ 9872 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9874
 759+ 9874 C9           	ret
 760+ 9875
 761+ 9875 77           Limpia_contenido_hl	ld (hl),a
 762+ 9876 23           	inc hl
 763+ 9877 77           	ld (hl),a
 764+ 9878 C9           	ret
 765+ 9879
 766+ 9879
# file closed: Direcciones.asm
1729  9879              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9879              ; ----- ----- ----- ----- -----
   2+ 9879              ;
   3+ 9879              ;   28/12/23
   4+ 9879
   5+ 9879              Movimiento
   6+ 9879
   7+ 9879              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9879
   9+ 9879 3A 75 89         ld a,(Ctrl_2)
  10+ 987C CB 57            bit 2,a
  11+ 987E 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9880
  13+ 9880 2A 85 89         ld hl,(Puntero_mov)
  14+ 9883 7E               ld a,(hl)
  15+ 9884
  16+ 9884              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9884
  18+ 9884              Inicia_desplazamiento.
  19+ 9884
  20+ 9884              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9884
  22+ 9884 CD 77 99         call Ajusta_velocidad_desplazamiento
  23+ 9887
  24+ 9887              ; Iniciamos (Repetimos_mov).
  25+ 9887
  26+ 9887 7E               ld a,(hl)
  27+ 9888 E6 0F            and $0f
  28+ 988A 32 8B 89         ld (Repetimos_desplazamiento),a
  29+ 988D 32 8C 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9890
  31+ 9890              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9890
  33+ 9890 23               inc hl
  34+ 9891 7E               ld a,(hl)
  35+ 9892 32 8E 89         ld (Cola_de_desplazamiento),a
  36+ 9895 2B               dec hl
  37+ 9896
  38+ 9896 21 75 89         ld hl,Ctrl_2
  39+ 9899 CB D6            set 2,(hl)
  40+ 989B
  41+ 989B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 989B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 989B
  44+ 989B              Desplazamiento_iniciado
  45+ 989B
  46+ 989B CD 4B 99         call Aplica_desplazamiento
  47+ 989E
  48+ 989E              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 989E
  50+ 989E 3A AE 89         ld a,(Ctrl_3)
  51+ 98A1 CB 4F            bit 1,a
  52+ 98A3 C0               ret nz
  53+ 98A4
  54+ 98A4 21 8B 89     3 ld hl,Repetimos_desplazamiento
  55+ 98A7 35               dec (hl)
  56+ 98A8 C0               ret nz
  57+ 98A9
  58+ 98A9              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98A9              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98A9              ; Analiza (Cola_de_desplazamiento).
  61+ 98A9
  62+ 98A9 3A 8E 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98AC A7               and a
  64+ 98AD CC A0 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98B0 28 30            jr z,Reinicia_el_movimiento
  66+ 98B2
  67+ 98B2 FE FF            cp $ff
  68+ 98B4 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98B6
  70+ 98B6 FE FE            cp $fe
  71+ 98B8 CC 25 99         call z,Fijamos_bucle
  72+ 98BB 28 25            jr z,Reinicia_el_movimiento
  73+ 98BD
  74+ 98BD FE FD            cp $fd
  75+ 98BF 20 11            jr nz,1F
  76+ 98C1
  77+ 98C1              ; ---
  78+ 98C1              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98C1
  80+ 98C1 3A 75 89         ld a,(Ctrl_2)
  81+ 98C4 CB 5F            bit 3,a
  82+ 98C6 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98C8
  84+ 98C8              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98C8
  86+ 98C8 21 75 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98CB CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98CD
  89+ 98CD CD 36 99         call Inicia_Repetimos_movimiento
  90+ 98D0 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98D2              ; ---
  92+ 98D2
  93+ 98D2 FE 01        1 cp 1
  94+ 98D4 CA 0F 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98D7
  96+ 98D7 3D               dec a
  97+ 98D8 32 8E 89         ld (Cola_de_desplazamiento),a
  98+ 98DB
  99+ 98DB 3A 8C 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98DE 32 8B 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98E1              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98E1 C9               ret
 103+ 98E2
 104+ 98E2              Reinicia_el_movimiento
 105+ 98E2
 106+ 98E2 3A 75 89         ld a,(Ctrl_2)
 107+ 98E5 CB 5F            bit 3,a
 108+ 98E7 28 1B            jr z,2F
 109+ 98E9
 110+ 98E9              ; (Cola_de_desplazamiento)="254".
 111+ 98E9
 112+ 98E9 21 8D 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 98EC 35               dec (hl)
 114+ 98ED 20 15            jr nz,2F
 115+ 98EF
 116+ 98EF              ; Fin de las repeticiones del último movimiento.
 117+ 98EF
 118+ 98EF 21 75 89         ld hl,Ctrl_2
 119+ 98F2 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 98F4
 121+ 98F4 2A 85 89         ld hl,(Puntero_mov)
 122+ 98F7 23               inc hl
 123+ 98F8 23               inc hl
 124+ 98F9 23               inc hl
 125+ 98FA 22 85 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 98FD              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 98FD 7E               ld a,(hl)
 128+ 98FE 32 8E 89         ld (Cola_de_desplazamiento),a
 129+ 9901
 130+ 9901 C3 A9 98         jp Cola
 131+ 9904
 132+ 9904 CD 41 99     2 call Inicia_Puntero_mov
 133+ 9907
 134+ 9907 21 75 89         ld hl,Ctrl_2
 135+ 990A CB 96            res 2,(hl)
 136+ 990C
 137+ 990C C3 79 98         jp Movimiento
 138+ 990F
 139+ 990F              Siguiente_desplazamiento
 140+ 990F
 141+ 990F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 990F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 990F
 144+ 990F 21 75 89         ld hl,Ctrl_2
 145+ 9912 CB 96            res 2,(hl)
 146+ 9914
 147+ 9914 2A 85 89         ld hl,(Puntero_mov)
 148+ 9917 23               inc hl
 149+ 9918 23               inc hl
 150+ 9919 22 85 89         ld (Puntero_mov),hl
 151+ 991C
 152+ 991C 7E               ld a,(hl)
 153+ 991D A7               and a
 154+ 991E CC A0 99         call z,Incrementa_Puntero_indice_mov
 155+ 9921 CA E2 98         jp z,Reinicia_el_movimiento
 156+ 9924
 157+ 9924 C9               ret
 158+ 9925
 159+ 9925              ; Subrutinas -----------------------------------------
 160+ 9925              ; ---------- --------- --------- ---------- ----------
 161+ 9925              ;
 162+ 9925              ;   24/07/23
 163+ 9925              ;
 164+ 9925              ;   Fijamos_bucle
 165+ 9925              ;
 166+ 9925              ;
 167+ 9925
 168+ 9925              Fijamos_bucle
 169+ 9925
 170+ 9925 3A 89 89         ld a,(Incrementa_puntero)
 171+ 9928 3C               inc a
 172+ 9929 32 8A 89         ld (Incrementa_puntero_backup),a
 173+ 992C
 174+ 992C CD A0 99         call Incrementa_Puntero_indice_mov
 175+ 992F 2A 83 89         ld hl,(Puntero_indice_mov)
 176+ 9932 22 87 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9935 C9               ret
 178+ 9936
 179+ 9936              ; ---------- --------- --------- ---------- ----------
 180+ 9936              ;
 181+ 9936              ;   07/7/23
 182+ 9936              ;
 183+ 9936              ;   Inicia_Repetimos_movimiento
 184+ 9936              ;
 185+ 9936              ;
 186+ 9936
 187+ 9936              Inicia_Repetimos_movimiento
 188+ 9936
 189+ 9936              ; Iniciamos (Repetimos_movimiento).
 190+ 9936
 191+ 9936 DD 2A 85 89      ld ix,(Puntero_mov)
 192+ 993A DD 7E 02         ld a,(ix+2)
 193+ 993D 32 8D 89         ld (Repetimos_movimiento),a
 194+ 9940
 195+ 9940 C9               ret
 196+ 9941
 197+ 9941              ; ---------- --------- --------- ---------- ----------
 198+ 9941              ;
 199+ 9941              ;   26/6/23
 200+ 9941              ;
 201+ 9941              ;   Inicia_Puntero_mov
 202+ 9941              ;
 203+ 9941              ;
 204+ 9941
 205+ 9941 2A 83 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9944 CD A7 8B         call Extrae_address
 207+ 9947 22 85 89         ld (Puntero_mov),hl
 208+ 994A C9               ret
 209+ 994B
 210+ 994B              ; ---------- --------- --------- ---------- ----------
 211+ 994B              ;
 212+ 994B              ;   27/06/23
 213+ 994B              ;
 214+ 994B              ;   Aplica_movimiento.
 215+ 994B
 216+ 994B              Aplica_desplazamiento
 217+ 994B
 218+ 994B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 994B
 220+ 994B 2A 85 89         ld hl, (Puntero_mov)
 221+ 994E
 222+ 994E 7E               ld a,(hl)
 223+ 994F E6 F0            and $f0
 224+ 9951 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9952
 226+ 9952 CB 7E            bit 7,(hl)
 227+ 9954 28 03            jr z,1F
 228+ 9956 CD 60 95         call Mov_up
 229+ 9959 2A 85 89     1 ld hl, (Puntero_mov)
 230+ 995C CB 76            bit 6,(hl)
 231+ 995E 28 03            jr z,2F
 232+ 9960 CD 27 95         call Mov_down
 233+ 9963
 234+ 9963              ; Se ha aplicado reinicio ???
 235+ 9963              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9963
 237+ 9963              ;    ld a,(Ctrl_3)
 238+ 9963              ;    bit 1,a
 239+ 9963              ;    ret nz
 240+ 9963
 241+ 9963 2A 85 89     2 ld hl, (Puntero_mov)
 242+ 9966 CB 6E            bit 5,(hl)
 243+ 9968 28 03            jr z,3F
 244+ 996A CD C6 96         call Mov_left
 245+ 996D 2A 85 89     3 ld hl, (Puntero_mov)
 246+ 9970 CB 66            bit 4,(hl)
 247+ 9972 C8               ret z
 248+ 9973 CD A3 95         call Mov_right
 249+ 9976 C9               ret
 250+ 9977
 251+ 9977              ; ---------- --------- --------- ---------- ----------
 252+ 9977              ;
 253+ 9977              ;   26/06/23
 254+ 9977              ;
 255+ 9977              ;   Ajusta_velocidad_desplazamiento.
 256+ 9977
 257+ 9977              Ajusta_velocidad_desplazamiento
 258+ 9977
 259+ 9977              ; 1er byte de la cadena de movimiento.
 260+ 9977              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9977
 262+ 9977 CD 95 99         call Extrae_nibble_alto
 263+ 997A
 264+ 997A 32 79 89         ld (Vel_up),a
 265+ 997D 79               ld a,c
 266+ 997E E6 0F            and $0f
 267+ 9980 32 7A 89         ld (Vel_down),a
 268+ 9983
 269+ 9983              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9983              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9983
 272+ 9983 23               inc hl
 273+ 9984 CD 95 99         call Extrae_nibble_alto
 274+ 9987
 275+ 9987 32 77 89         ld (Vel_left),a
 276+ 998A 79               ld a,c
 277+ 998B E6 0F            and $0f
 278+ 998D 32 78 89         ld (Vel_right),a
 279+ 9990
 280+ 9990              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9990
 282+ 9990 23               inc hl
 283+ 9991 22 85 89         ld (Puntero_mov),hl
 284+ 9994 C9               ret
 285+ 9995
 286+ 9995 06 04        Extrae_nibble_alto ld b,4
 287+ 9997 7E               ld a,(hl)
 288+ 9998 4F               ld c,a
 289+ 9999 E6 F0            and $f0
 290+ 999B CB 3F        1 srl a
 291+ 999D 10 FC            djnz 1B
 292+ 999F C9               ret
 293+ 99A0
 294+ 99A0              ; ---------- --------- --------- ---------- ----------
 295+ 99A0              ;
 296+ 99A0              ;   5/7/23
 297+ 99A0              ;
 298+ 99A0              ;   Incrementa_Puntero_indice_mov
 299+ 99A0
 300+ 99A0              Incrementa_Puntero_indice_mov
 301+ 99A0
 302+ 99A0 21 89 89         ld hl,Incrementa_puntero
 303+ 99A3 34               inc (hl)
 304+ 99A4
 305+ 99A4 2A 83 89         ld hl,(Puntero_indice_mov)
 306+ 99A7 01 02 00         ld bc,2
 307+ 99AA A7               and a
 308+ 99AB 09               add hl,bc
 309+ 99AC 22 83 89         ld (Puntero_indice_mov),hl
 310+ 99AF
 311+ 99AF 7E               ld a,(hl)
 312+ 99B0 A7               and a
 313+ 99B1
 314+ 99B1              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99B1
 316+ 99B1              ;    jr z,$
 317+ 99B1
 318+ 99B1              ;! Reinicia el Patrón de movimiento.
 319+ 99B1
 320+ 99B1 CC B6 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99B4
 322+ 99B4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99B5
 324+ 99B5 C9               ret
 325+ 99B6
 326+ 99B6              ; ---------- --------- --------- ---------- ----------
 327+ 99B6              ;
 328+ 99B6              ;   15/01/24
 329+ 99B6              ;
 330+ 99B6              ;   Inicializa_Puntero_indice_mov
 331+ 99B6
 332+ 99B6              Inicializa_Puntero_indice_mov_2
 333+ 99B6
 334+ 99B6              ; Existe etiqueta de bucle principal???
 335+ 99B6
 336+ 99B6 2A 87 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99B9 24               inc h
 338+ 99BA 25               dec h
 339+ 99BB 28 05            jr z,2F
 340+ 99BD
 341+ 99BD 22 83 89         ld (Puntero_indice_mov),hl
 342+ 99C0 18 14            jr 3F
 343+ 99C2
 344+ 99C2              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99C2
 346+ 99C2 3A 89 89     2 ld a,(Incrementa_puntero)
 347+ 99C5 47               ld b,a
 348+ 99C6
 349+ 99C6 2A 83 89         ld hl,(Puntero_indice_mov)
 350+ 99C9 2B           1 dec hl
 351+ 99CA 2B               dec hl
 352+ 99CB 10 FC            djnz 1B
 353+ 99CD 22 83 89         ld (Puntero_indice_mov),hl
 354+ 99D0
 355+ 99D0 AF               xor a
 356+ 99D1 32 89 89         ld (Incrementa_puntero),a
 357+ 99D4 18 06            jr 4F
 358+ 99D6
 359+ 99D6 3A 8A 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99D9 32 89 89         ld (Incrementa_puntero),a
 361+ 99DC C9           4 ret
 362+ 99DD
 363+ 99DD              ; ----------------------------------------------------------------------
 364+ 99DD              ;
 365+ 99DD              ;   30/01/24
 366+ 99DD              ;
 367+ 99DD              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99DD
 369+ 99DD 3A 4D 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99E0 CD 6F 8E         call Calcula_salto_en_BC
 371+ 99E3 21 7B 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99E6 A7               and a
 373+ 99E7 ED 4A            adc hl,bc
 374+ 99E9 C9               ret
 375+ 99EA
 376+ 99EA              ; ----------------------------------------------------------------------
 377+ 99EA              ;
 378+ 99EA              ;   30/01/24
 379+ 99EA              ;
 380+ 99EA              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 99EA              ;
 382+ 99EA              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 99EA
 384+ 99EA 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 99EB 23               inc hl
 386+ 99EC 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 99ED 69               ld l,c
 388+ 99EE 60               ld h,b
 389+ 99EF 22 6E 89         ld (Contador_de_mov_masticados),hl
 390+ 99F2 C9               ret
 391+ 99F3
# file closed: Movimiento.asm
1730  99F3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 99F3              ; ******************************************************************************************************************************************************************************************
   2+ 99F3              ;
   3+ 99F3              ;   21/07/23
   4+ 99F3              ;
   5+ 99F3              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 99F3              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 99F3              ;
   8+ 99F3              ;
   9+ 99F3              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 99F3              ;
  11+ 99F3              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 99F3              ;               _ hacen las entidades hacia abajo.
  13+ 99F3              ;
  14+ 99F3              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 99F3              ;
  16+ 99F3              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 99F3              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 99F3              ;
  19+ 99F3              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 99F3              ;           _ la bala.
  21+ 99F3              ;
  22+ 99F3              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 99F3              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 99F3              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 99F3              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 99F3              ;           _ en el momento de generarse la bala)).
  27+ 99F3
  28+ 99F3              Genera_disparo
  29+ 99F3
  30+ 99F3              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 99F3              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 99F3              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 99F3              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 99F3              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 99F3              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 99F3              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 99F3
  38+ 99F3              ; Exclusiones:
  39+ 99F3
  40+ 99F3 3A 7A 89         ld a,(Vel_down)
  41+ 99F6 47               ld b,a
  42+ 99F7 3A C0 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 99FA B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 99FB D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 99FC 3A 71 89         ld a,(Columnas)
  46+ 99FF 47               ld b,a
  47+ 9A00 3A 4F 89         ld a,(Columns)
  48+ 9A03 B8               cp b
  49+ 9A04 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9A05
  51+ 9A05              ; ----- ----- -----
  52+ 9A05
  53+ 9A05 3A 70 89         ld a,(Ctrl_0)
  54+ 9A08 CB 77            bit 6,a
  55+ 9A0A 20 06            jr nz,14F
  56+ 9A0C
  57+ 9A0C 3A 55 89         ld a,(Coordenada_y)
  58+ 9A0F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9A11 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9A12
  61+ 9A12 21 31 81     14 ld hl,Indice_disparo
  62+ 9A15 3A 56 89         ld a,(CTRL_DESPLZ)
  63+ 9A18 4F               ld c,a
  64+ 9A19 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9A1B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9A1B              ;                                            ""        ""       "f9", B="1"
  67+ 9A1B              ;                                            ""        ""       "fb", B="2"
  68+ 9A1B              ;                                            ""        ""       "fb", B="3"
  69+ 9A1B A7               and a
  70+ 9A1C 28 10            jr z,1F
  71+ 9A1E E6 01            and 1
  72+ 9A20 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9A21
  74+ 9A21 79               ld a,c
  75+ 9A22 16 F9            ld d,$f9
  76+ 9A24 23           2 inc hl
  77+ 9A25 23               inc hl
  78+ 9A26 04               inc b
  79+ 9A27 BA               cp d
  80+ 9A28 28 04            jr z,1F
  81+ 9A2A 14               inc d
  82+ 9A2B 14               inc d
  83+ 9A2C 18 F6            jr 2B
  84+ 9A2E
  85+ 9A2E CD A7 8B     1 call Extrae_address
  86+ 9A31 E5               push hl
  87+ 9A32 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9A34 DD 21 D2 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9A38
  90+ 9A38              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9A38              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9A38
  93+ 9A38 3A 70 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9A3B CB 77            bit 6,a
  95+ 9A3D 20 04            jr nz,19F
  96+ 9A3F
  97+ 9A3F AF               xor a
  98+ 9A40 32 C9 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9A43
 100+ 9A43 3A 62 89     19 ld a,(Cuad_objeto)
 101+ 9A46 FE 02            cp 2
 102+ 9A48 38 66            jr c,3F
 103+ 9A4A 28 64            jr z,3F
 104+ 9A4C
 105+ 9A4C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9A4C
 107+ 9A4C E6 01            and 1
 108+ 9A4E 28 30            jr z,4F
 109+ 9A50
 110+ 9A50              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A50              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A50              ;
 113+ 9A50              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A50              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A50              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A50
 117+ 9A50 2A 50 89     	ld hl,(Posicion_actual)
 118+ 9A53
 119+ 9A53              ;   Amadeus o entidad ???.
 120+ 9A53
 121+ 9A53 3A 70 89         ld a,(Ctrl_0)
 122+ 9A56 CB 77            bit 6,a
 123+ 9A58 28 0A            jr z,8F
 124+ 9A5A
 125+ 9A5A              ; 	Dispara Amadeus.
 126+ 9A5A
 127+ 9A5A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A5C CD FB 91         call PreviousScan
 129+ 9A5F CD FB 91         call PreviousScan
 130+ 9A62
 131+ 9A62              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9A62              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9A62              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9A62              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9A62
 136+ 9A62 18 11            jr 10F
 137+ 9A64
 138+ 9A64              ; 	Dispara Entidad.
 139+ 9A64
 140+ 9A64 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9A67              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9A67
 143+ 9A67              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9A67              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9A67
 146+ 9A67 C5               push bc
 147+ 9A68 06 10            ld b,16
 148+ 9A6A CD EC 91     9 call NextScan
 149+ 9A6D 10 FB            djnz 9B
 150+ 9A6F C1               pop bc
 151+ 9A70 CD DA 9A         call Ajusta_disparo_parte_izquierda
 152+ 9A73 18 06            jr 17F
 153+ 9A75
 154+ 9A75              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9A75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9A75              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9A75              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9A75
 159+ 9A75 CD DA 9A     10 call Ajusta_disparo_parte_izquierda
 160+ 9A78 CD 4F 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9A7B              ;                                                      ; _al generar el disparo.
 162+ 9A7B
 163+ 9A7B              ; 	LLegados a este punto tendremos:
 164+ 9A7B              ;
 165+ 9A7B              ;       Puntero_objeto_disparo en IY.
 166+ 9A7B              ;       Rutinas_de_impresion en IX.
 167+ 9A7B              ;       Puntero_de_impresion en HL.
 168+ 9A7B              ;       Impacto/Dirección en BC.
 169+ 9A7B
 170+ 9A7B CD E2 9A     17 call Almacena_disparo
 171+ 9A7E 18 52            jr 6F                                             ; RET.
 172+ 9A80
 173+ 9A80              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9A80              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9A80              ;
 176+ 9A80              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9A80              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9A80              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9A80
 180+ 9A80 2A 50 89     4 ld hl,(Posicion_actual)
 181+ 9A83
 182+ 9A83              ;   Amadeus o entidad ???.
 183+ 9A83
 184+ 9A83 3A 70 89         ld a,(Ctrl_0)
 185+ 9A86 CB 77            bit 6,a
 186+ 9A88 28 0A            jr z,11F
 187+ 9A8A
 188+ 9A8A              ; 	Dispara Amadeus.
 189+ 9A8A
 190+ 9A8A 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9A8C CD FB 91         call PreviousScan
 192+ 9A8F CD FB 91         call PreviousScan
 193+ 9A92
 194+ 9A92              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9A92              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9A92              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9A92              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9A92
 199+ 9A92 18 11            jr 13F
 200+ 9A94
 201+ 9A94              ; 	Dispara Entidad.
 202+ 9A94
 203+ 9A94 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9A97              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9A97
 206+ 9A97              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9A97              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9A97
 209+ 9A97 C5               push bc
 210+ 9A98 06 10            ld b,16
 211+ 9A9A CD EC 91     12 call NextScan
 212+ 9A9D 10 FB            djnz 12B
 213+ 9A9F C1               pop bc
 214+ 9AA0
 215+ 9AA0 CD D3 9A         call Ajusta_disparo_parte_derecha
 216+ 9AA3 18 06            jr 18F
 217+ 9AA5
 218+ 9AA5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9AA5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9AA5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9AA5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9AA5
 223+ 9AA5 CD D3 9A     13 call Ajusta_disparo_parte_derecha
 224+ 9AA8 CD 4F 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9AAB              ;                                                       ; _al generar el disparo.
 226+ 9AAB
 227+ 9AAB              ; LLegados a este punto tendremos:
 228+ 9AAB              ;
 229+ 9AAB              ;       Puntero_objeto_disparo en IY.
 230+ 9AAB              ;       Rutinas_de_impresion en IX.
 231+ 9AAB              ;       Puntero_de_impresion en HL.
 232+ 9AAB              ;       Impacto/Dirección en BC.
 233+ 9AAB
 234+ 9AAB CD E2 9A     18 call Almacena_disparo
 235+ 9AAE 18 22            jr 6F                                               ; RET.
 236+ 9AB0
 237+ 9AB0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9AB0
 239+ 9AB0 28 11        3 jr z,5F
 240+ 9AB2
 241+ 9AB2              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9AB2              ;
 243+ 9AB2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9AB2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9AB2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9AB2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9AB2
 248+ 9AB2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9AB2              ;	   ""        ""       "f9", B="1"
 250+ 9AB2              ;	   ""        ""       "fb", B="2"
 251+ 9AB2              ; 	   ""        ""       "fb", B="3"
 252+ 9AB2
 253+ 9AB2 2A 50 89     	ld hl,(Posicion_actual)
 254+ 9AB5 CD EC 91     	call NextScan
 255+ 9AB8
 256+ 9AB8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9AB8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9AB8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9AB8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9AB8
 261+ 9AB8 CD DA 9A         call Ajusta_disparo_parte_izquierda
 262+ 9ABB
 263+ 9ABB              ; 	No se produce impacto. B="$80"
 264+ 9ABB              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9ABB
 266+ 9ABB 01 80 80         ld bc,$8080
 267+ 9ABE
 268+ 9ABE              ; 	LLegados a este punto tendremos:
 269+ 9ABE              ;
 270+ 9ABE              ;       Puntero_objeto_disparo en IY.
 271+ 9ABE              ;       Rutinas_de_impresion en IX.
 272+ 9ABE              ;       Puntero_de_impresion en HL.
 273+ 9ABE              ;       Impacto/Dirección en BC.
 274+ 9ABE
 275+ 9ABE CD E2 9A         call Almacena_disparo
 276+ 9AC1 18 0F            jr 6F                                           ; RET.
 277+ 9AC3
 278+ 9AC3              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9AC3              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9AC3              ;
 281+ 9AC3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9AC3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9AC3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9AC3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9AC3
 286+ 9AC3 2A 50 89     5 ld hl,(Posicion_actual)
 287+ 9AC6 CD EC 91     	call NextScan
 288+ 9AC9
 289+ 9AC9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9AC9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9AC9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9AC9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9AC9
 294+ 9AC9 CD D3 9A         call Ajusta_disparo_parte_derecha
 295+ 9ACC
 296+ 9ACC              ; 	No se produce impacto. B="$80"
 297+ 9ACC              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9ACC
 299+ 9ACC 01 80 80     15 ld bc,$8080
 300+ 9ACF
 301+ 9ACF              ; 	LLegados a este punto tendremos:
 302+ 9ACF              ;
 303+ 9ACF              ;       Puntero_objeto_disparo en IY.
 304+ 9ACF              ;       Rutinas_de_impresion en IX.
 305+ 9ACF              ;       Puntero_de_impresion en HL.
 306+ 9ACF              ;       Impacto/Dirección en BC.
 307+ 9ACF
 308+ 9ACF CD E2 9A         call Almacena_disparo
 309+ 9AD2
 310+ 9AD2 C9           6 ret
 311+ 9AD3
 312+ 9AD3              ; ----------------------------------------------------------------
 313+ 9AD3              ;
 314+ 9AD3              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9AD3              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9AD3              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9AD3
 318+ 9AD3 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9AD4 FE 02            cp 2
 320+ 9AD6 38 01            jr c,1F
 321+ 9AD8 23               inc hl
 322+ 9AD9 C9           1 ret
 323+ 9ADA
 324+ 9ADA 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9ADB FE 01        	cp 1
 326+ 9ADD 20 01        	jr nz,1F
 327+ 9ADF 2B           	dec hl
 328+ 9AE0 2B           1 dec hl
 329+ 9AE1 C9               ret
 330+ 9AE2
 331+ 9AE2              ; ----------------------------------------------------------------
 332+ 9AE2              ;
 333+ 9AE2              ;   25/02/23
 334+ 9AE2              ;
 335+ 9AE2              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9AE2              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9AE2              ;
 338+ 9AE2              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9AE2              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9AE2
 341+ 9AE2              Almacena_disparo
 342+ 9AE2
 343+ 9AE2 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9AE3 F1               pop af
 345+ 9AE4 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9AE5
 347+ 9AE5 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9AE6 E6 01            and 1
 349+ 9AE8 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9AEA              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9AEA              ; 	Dispara AMADEUS.
 352+ 9AEA
 353+ 9AEA              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9AEA              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9AEA              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9AEA              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9AEA
 358+ 9AEA C5               push bc
 359+ 9AEB 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9AEE 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9AF1 A7               and a
 362+ 9AF2 ED 42            sbc hl,bc
 363+ 9AF4 CC 2C 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9AF7 C1               pop bc
 365+ 9AF8 28 54            jr z,4F
 366+ 9AFA
 367+ 9AFA 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9AFD 23               inc hl
 369+ 9AFE 23               inc hl
 370+ 9AFF 22 B3 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9B02              ;                                                   ; _ Disparo_(+1).
 372+ 9B02 18 18            jr 2F
 373+ 9B04
 374+ 9B04              ; Dispara una entidad.
 375+ 9B04
 376+ 9B04 C5           1 push bc
 377+ 9B05 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9B08 2A B1 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9B0B A7               and a
 380+ 9B0C ED 42            sbc hl,bc
 381+ 9B0E CC 25 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9B11 C1               pop bc
 383+ 9B12 28 3A            jr z,4F
 384+ 9B14
 385+ 9B14 2A B1 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9B17 23               inc hl
 387+ 9B18 23               inc hl
 388+ 9B19 22 B1 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9B1C              ;                                                   ; _ Disparo_(+1).
 390+ 9B1C CD A7 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9B1F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9B1F              ;
 393+ 9B1F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9B1F              ;                                                     Rutinas_de_impresion en IX.
 395+ 9B1F              ;                                                     Puntero_de_impresion en HL.
 396+ 9B1F              ;                                                     Impacto/Dirección en BC.
 397+ 9B1F
 398+ 9B1F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9B20 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9B21 23               inc hl                                          ; _ al siguiente.
 401+ 9B22 A7               and a
 402+ 9B23 20 C0            jr nz,3B
 403+ 9B25
 404+ 9B25 08               ex af,af
 405+ 9B26 ED 73 A0 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9B2A F9               ld sp,hl
 407+ 9B2B
 408+ 9B2B DD E5            push ix                                         ; Rutina de impresión.
 409+ 9B2D F5               push af                                         ; Puntero de impresión.
 410+ 9B2E FD E5            push iy                                         ; Puntero objeto.
 411+ 9B30 C5               push bc                                         ; Control.
 412+ 9B31
 413+ 9B31 ED 7B A0 89      ld sp,(Stack)
 414+ 9B35
 415+ 9B35              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9B35
 417+ 9B35 21 8F 89     	ld hl,Ctrl_1
 418+ 9B38 CB C6        	set 0,(hl)
 419+ 9B3A
 420+ 9B3A DD E5        	push ix
 421+ 9B3C E1               pop hl
 422+ 9B3D F5               push af
 423+ 9B3E DD E1            pop ix
 424+ 9B40
 425+ 9B40 CD BF 80     	call Guarda_foto_registros
 426+ 9B43
 427+ 9B43 21 8F 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9B46 CB 86        	res 0,(hl)
 429+ 9B48
 430+ 9B48              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9B48              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9B48
 433+ 9B48 CD 2C 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9B4B CD 25 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9B4E
 436+ 9B4E C9           4 ret
 437+ 9B4F
 438+ 9B4F              ; ----------------------------------------------------------------
 439+ 9B4F              ;
 440+ 9B4F              ;   4/3/23
 441+ 9B4F              ;
 442+ 9B4F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B4F              ;   _ al generarse el disparo.
 444+ 9B4F              ;
 445+ 9B4F              ;       "$80" ..... No se produce colisión.
 446+ 9B4F              ;       "$81" ..... Se produce colisión.
 447+ 9B4F              ;
 448+ 9B4F              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B4F              ;         _ que forman el disparo.
 450+ 9B4F
 451+ 9B4F
 452+ 9B4F              Comprueba_Colision
 453+ 9B4F
 454+ 9B4F              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B4F
 456+ 9B4F FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B51 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B52
 459+ 9B52 CD 88 9B         call Modifica_H_Velocidad_disparo
 460+ 9B55
 461+ 9B55 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B56 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B58 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B5A
 465+ 9B5A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B5C CD 78 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9B5F
 468+ 9B5F 7B               ld a,e
 469+ 9B60 E6 01            and 1
 470+ 9B62 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9B64              ;                                                  ; _ para activar IMPACTO.
 472+ 9B64 E1               pop hl
 473+ 9B65 E5               push hl
 474+ 9B66 CD EC 91         call NextScan
 475+ 9B69
 476+ 9B69 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9B6A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9B6C 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9B6E              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9B6E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9B70 CD 78 9B         call Bucle_2
 482+ 9B73
 483+ 9B73 43           1 ld b,e
 484+ 9B74 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9B75 FD E1            pop iy
 486+ 9B77 C9               ret
 487+ 9B78
 488+ 9B78              ; ---------- ----------
 489+ 9B78
 490+ 9B78 06 02        Bucle_2 ld b,2
 491+ 9B7A FD 7E 00     2 ld a,(iy)
 492+ 9B7D A6               and (hl)
 493+ 9B7E 28 02            jr z,1F
 494+ 9B80 1E 81            ld e,$81
 495+ 9B82 23           1 inc hl
 496+ 9B83 FD 23            inc iy
 497+ 9B85 10 F3            djnz 2B
 498+ 9B87 C9               ret
 499+ 9B88
 500+ 9B88              ; ---------- ----------
 501+ 9B88              ;
 502+ 9B88              ;   21/7/23
 503+ 9B88
 504+ 9B88              Modifica_H_Velocidad_disparo
 505+ 9B88
 506+ 9B88 3A C0 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9B8B FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9B8D D0               ret nc                                         ; _ incrementamos H.
 509+ 9B8E 24               inc h
 510+ 9B8F
 511+ 9B8F C9               ret
 512+ 9B90
 513+ 9B90              ; -------------------------------------------------------------------------------------------------------------
 514+ 9B90              ;
 515+ 9B90              ;   04/12/23
 516+ 9B90              ;
 517+ 9B90              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9B90              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9B90              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9B90              ;
 521+ 9B90              ;   MODIFICA: HL,DE,B y A.
 522+ 9B90
 523+ 9B90              Genera_coordenadas_X
 524+ 9B90
 525+ 9B90              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9B90              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9B90
 528+ 9B90              ;   Limpiamos almacenes.
 529+ 9B90
 530+ 9B90 CD C1 9B         call Limpia_Coordenadas_X
 531+ 9B93
 532+ 9B93              ;   Almacenamos coordenadas X.
 533+ 9B93
 534+ 9B93              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9B93
 536+ 9B93 2A 6A 89         ld hl,(Puntero_de_impresion)
 537+ 9B96 11 BD 89         ld de,Coordenadas_X_Entidad
 538+ 9B99 06 02            ld b,2
 539+ 9B9B
 540+ 9B9B 3A 56 89         ld a,(CTRL_DESPLZ)
 541+ 9B9E A7               and a
 542+ 9B9F 28 01            jr z,1F
 543+ 9BA1 04               inc b
 544+ 9BA2
 545+ 9BA2 CD B8 9B     1 call Guarda_coordenadas_X
 546+ 9BA5
 547+ 9BA5              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9BA5
 549+ 9BA5 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9BA8 11 BA 89         ld de,Coordenadas_X_Amadeus
 551+ 9BAB 06 02            ld b,2
 552+ 9BAD
 553+ 9BAD 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9BB0 A7               and a
 555+ 9BB1 28 01            jr z,2F
 556+ 9BB3 04               inc b
 557+ 9BB4
 558+ 9BB4 CD B8 9B     2 call Guarda_coordenadas_X
 559+ 9BB7
 560+ 9BB7              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9BB7
 562+ 9BB7 C9               ret
 563+ 9BB8
 564+ 9BB8              ; ----- ----- ----- ----- -----
 565+ 9BB8
 566+ 9BB8 7D           Guarda_coordenadas_X  ld a,l
 567+ 9BB9 E6 1F            and $1f
 568+ 9BBB 12           1 ld (de),a
 569+ 9BBC 3C               inc a
 570+ 9BBD 13               inc de
 571+ 9BBE 10 FB            djnz 1B
 572+ 9BC0 C9               ret
 573+ 9BC1
 574+ 9BC1 AF           Limpia_Coordenadas_X xor a
 575+ 9BC2 06 06            ld b,6
 576+ 9BC4 21 BA 89         ld hl,Coordenadas_X_Amadeus
 577+ 9BC7 77           1 ld (hl),a
 578+ 9BC8 23               inc hl
 579+ 9BC9 10 FC            djnz 1B
 580+ 9BCB C9               ret
 581+ 9BCC
 582+ 9BCC              ; ----- ----- ----- ----- -----
 583+ 9BCC
 584+ 9BCC              Compara_coordenadas_X
 585+ 9BCC
 586+ 9BCC 06 03            ld b,3
 587+ 9BCE 11 BF 89         ld de,Coordenadas_X_Entidad+2
 588+ 9BD1
 589+ 9BD1 1A               ld a,(de)
 590+ 9BD2 A7               and a
 591+ 9BD3 20 01            jr nz,2F
 592+ 9BD5 05               dec b
 593+ 9BD6
 594+ 9BD6 1B           2 dec de
 595+ 9BD7 1B               dec de
 596+ 9BD8 21 BA 89         ld hl,Coordenadas_X_Amadeus
 597+ 9BDB
 598+ 9BDB D5           1 push de
 599+ 9BDC E5               push hl
 600+ 9BDD C5               push bc
 601+ 9BDE
 602+ 9BDE CD E8 9B         call Comparando
 603+ 9BE1
 604+ 9BE1 C1               pop bc
 605+ 9BE2 E1               pop hl
 606+ 9BE3 D1               pop de
 607+ 9BE4
 608+ 9BE4 13               inc de
 609+ 9BE5 10 F4            djnz 1B
 610+ 9BE7
 611+ 9BE7 C9               ret
 612+ 9BE8
 613+ 9BE8              ; ----- ----- ----- ----- -----
 614+ 9BE8              ;
 615+ 9BE8              ;   4/12/23
 616+ 9BE8              ;
 617+ 9BE8              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9BE8
 619+ 9BE8 06 03        Comparando ld b,3
 620+ 9BEA 1A               ld a,(de)
 621+ 9BEB 4E           2 ld c,(hl)
 622+ 9BEC B9               cp c
 623+ 9BED 28 04            jr z,1F
 624+ 9BEF 23               inc hl
 625+ 9BF0 10 F9            djnz 2B
 626+ 9BF2 C9               ret
 627+ 9BF3
 628+ 9BF3 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9BF5 32 63 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9BF8 21 B5 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9BFB CB D6            set 2,(hl)
 632+ 9BFD C9               ret
 633+ 9BFE
 634+ 9BFE              ; -----------------------------------------------------------------------
 635+ 9BFE              ;
 636+ 9BFE              ;   7/12/23
 637+ 9BFE              ;
 638+ 9BFE
 639+ 9BFE              Detecta_colision_nave_entidad
 640+ 9BFE
 641+ 9BFE              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9BFE
 643+ 9BFE FD 2A 52 89      ld iy,(Puntero_objeto)
 644+ 9C02 2A 6A 89         ld hl,(Puntero_de_impresion)
 645+ 9C05
 646+ 9C05 E5               push hl
 647+ 9C06
 648+ 9C06              ; ----- ----- -----
 649+ 9C06 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9C08 06 0A            ld b,10
 651+ 9C0A CD 3A 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9C0D 7B               ld a,e
 653+ 9C0E FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9C10 38 0E            jr c,3F
 655+ 9C12
 656+ 9C12              ; LLegados a este punto:
 657+ 9C12              ;
 658+ 9C12              ;   HAY COLISIÓN !!!!!.
 659+ 9C12              ;
 660+ 9C12              ;   .db (Impacto) de Amadeus a "1".
 661+ 9C12              ;   SET el bit3 de (Impacto2).
 662+ 9C12              ;
 663+ 9C12              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9C12
 665+ 9C12 21 63 89         ld hl,Impacto
 666+ 9C15 36 01            ld (hl),1
 667+ 9C17 21 B5 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9C1A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9C1C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9C1E
 671+ 9C1E 18 18            jr 1F
 672+ 9C20
 673+ 9C20              ; -----
 674+ 9C20
 675+ 9C20 E1           3 pop hl
 676+ 9C21 CD EC 91         call NextScan
 677+ 9C24 E5               push hl
 678+ 9C25 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9C26 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9C28 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9C2A 30 0C            jr nc,1F
 682+ 9C2C              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9C2C 10 DC            djnz 2B
 684+ 9C2E
 685+ 9C2E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9C2E
 687+ 9C2E              ; LLegados a este punto:
 688+ 9C2E              ;
 689+ 9C2E              ;   NO HAY COLISIÓN !!!!!.
 690+ 9C2E              ;
 691+ 9C2E              ;   .db (Impacto) de Amadeus a "0".
 692+ 9C2E              ;   RES el bit2 de (Impacto2).
 693+ 9C2E              ;
 694+ 9C2E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9C2E              ;   Lo colocamos a "0".
 696+ 9C2E
 697+ 9C2E 21 B5 89         ld hl,Impacto2
 698+ 9C31 CB 96            res 2,(hl)
 699+ 9C33 2A B6 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9C36 36 00            ld (hl),0
 701+ 9C38
 702+ 9C38 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9C39 C9               ret
 704+ 9C3A
 705+ 9C3A               ; ---------- ----------
 706+ 9C3A
 707+ 9C3A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9C3B 3A 4F 89         ld a,(Columns)
 709+ 9C3E 47               ld b,a
 710+ 9C3F FD 7E 00     2 ld a,(iy)
 711+ 9C42 BE               cp (hl)
 712+ 9C43 28 01            jr z,1F
 713+ 9C45
 714+ 9C45 1C               inc e
 715+ 9C46
 716+ 9C46 23           1 inc hl
 717+ 9C47 FD 23            inc iy
 718+ 9C49 10 F4            djnz 2B
 719+ 9C4B C1               pop bc
 720+ 9C4C C9               ret
 721+ 9C4D
 722+ 9C4D              ; -------------------------------------------------------------------------------------------------------------
 723+ 9C4D              ;
 724+ 9C4D              ;   13/03/23
 725+ 9C4D              ;
 726+ 9C4D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9C4D              ;
 728+ 9C4D              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9C4D
 730+ 9C4D 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C50 7E               ld a,(hl)
 732+ 9C51 A7               and a
 733+ 9C52 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C53
 735+ 9C53 44               ld b,h
 736+ 9C54 4D               ld c,l
 737+ 9C55 2A A8 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C58 E5               push hl
 739+ 9C59 A7               and a
 740+ 9C5A ED 42            sbc hl,bc
 741+ 9C5C E5               push hl
 742+ 9C5D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C5E
 744+ 9C5E E1               pop hl
 745+ 9C5F 54               ld d,h
 746+ 9C60 5D               ld e,l
 747+ 9C61 1B               dec de
 748+ 9C62 ED B8            lddr                                                ; Limpiamos.
 749+ 9C64
 750+ 9C64 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9C67 22 A8 89         ld (Stack_snapshot_disparos),hl
 752+ 9C6A
 753+ 9C6A C9               ret
 754+ 9C6B
 755+ 9C6B              ; -------------------------------------------------------------------------------------------------------------
 756+ 9C6B              ;
 757+ 9C6B              ;   18/07/23
 758+ 9C6B              ;
 759+ 9C6B
 760+ 9C6B              Motor_de_disparos
 761+ 9C6B
 762+ 9C6B              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9C6B
 764+ 9C6B 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9C6E 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9C71
 767+ 9C71 CD A7 8B     2 call Extrae_address
 768+ 9C74 7E               ld a,(hl)
 769+ 9C75 A7               and a
 770+ 9C76 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9C78
 772+ 9C78              ; ----- ----- ----- ----- ----- -----
 773+ 9C78
 774+ 9C78 C5               push bc
 775+ 9C79 CD 3D 9D         call foto_disparo_a_borrar
 776+ 9C7C
 777+ 9C7C              ; Existe colisión con este disparo???
 778+ 9C7C
 779+ 9C7C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9C7D 7E               ld a,(hl)
 781+ 9C7E 2B               dec hl
 782+ 9C7F E6 01            and 1
 783+ 9C81 28 1D            jr z,9F
 784+ 9C83
 785+ 9C83              ;   En este punto:
 786+ 9C83              ;
 787+ 9C83              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9C83              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9C83              ;   _con la entidad).
 790+ 9C83              ;
 791+ 9C83              ;   Disparo_2A defw 0                                ; Control.
 792+ 9C83              ;    defw 0                                          ; Puntero objeto.
 793+ 9C83              ;    defw 0                                          ; Puntero de impresión.
 794+ 9C83              ;    defw 0                                          ; Rutina de impresión.
 795+ 9C83
 796+ 9C83 E5               push hl
 797+ 9C84
 798+ 9C84 06 04            ld b,4
 799+ 9C86 23           19 inc hl
 800+ 9C87 10 FD            djnz 19B
 801+ 9C89
 802+ 9C89 CD A7 8B         call Extrae_address
 803+ 9C8C CD 20 9F         call Genera_coordenadas_disparo
 804+ 9C8F
 805+ 9C8F              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9C8F
 807+ 9C8F 21 B8 89         ld hl,Coordenadas_disparo_certero
 808+ 9C92 72               ld (hl),d
 809+ 9C93 23               inc hl
 810+ 9C94 73               ld (hl),e
 811+ 9C95
 812+ 9C95              ; Elimino el disparo de la base de datos.
 813+ 9C95
 814+ 9C95 E1               pop hl
 815+ 9C96 CD BC 9D         call Elimina_disparo_de_base_de_datos
 816+ 9C99 21 B5 89         ld hl,Impacto2
 817+ 9C9C CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9C9E
 819+ 9C9E 18 06            jr 11F
 820+ 9CA0
 821+ 9CA0 CD 66 9D     9 call Mueve_disparo
 822+ 9CA3 CD 3D 9D         call foto_disparo_a_borrar
 823+ 9CA6
 824+ 9CA6 C1           11 pop bc
 825+ 9CA7 18 04            jr 7F
 826+ 9CA9
 827+ 9CA9              ; ----- ----- ----- ----- ----- -----
 828+ 9CA9
 829+ 9CA9 ED 42        1 sbc hl,bc
 830+ 9CAB 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9CAD
 832+ 9CAD 2A B3 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9CB0 23               inc hl
 834+ 9CB1 23               inc hl
 835+ 9CB2 22 B3 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9CB5 18 BA            jr 2B
 837+ 9CB7
 838+ 9CB7 CD 2C 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9CBA              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9CBA
 841+ 9CBA              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9CBA
 843+ 9CBA 01 9F 86         ld bc,Disparo_11
 844+ 9CBD 2A B1 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9CC0
 846+ 9CC0 CD A7 8B     5 call Extrae_address
 847+ 9CC3 7E               ld a,(hl)
 848+ 9CC4 A7               and a
 849+ 9CC5 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9CC7
 851+ 9CC7              ; ----- ----- ----- ----- ----- -----
 852+ 9CC7
 853+ 9CC7 C5               push bc
 854+ 9CC8 CD 3D 9D         call foto_disparo_a_borrar
 855+ 9CCB
 856+ 9CCB              ; Existe colisión con este disparo???
 857+ 9CCB
 858+ 9CCB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9CCC 7E               ld a,(hl)
 860+ 9CCD 2B               dec hl
 861+ 9CCE E6 01            and 1
 862+ 9CD0 28 4D            jr z,10F
 863+ 9CD2
 864+ 9CD2              ;! La colisión se produce con Amadeus???
 865+ 9CD2              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9CD2
 867+ 9CD2 E5               push hl
 868+ 9CD3
 869+ 9CD3 06 04            ld b,4
 870+ 9CD5 23           16 inc hl
 871+ 9CD6 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9CD8
 873+ 9CD8 CD A7 8B         call Extrae_address
 874+ 9CDB CD 20 9F         call Genera_coordenadas_disparo
 875+ 9CDE
 876+ 9CDE 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9CDF FE 16            cp $16
 878+ 9CE1 38 2A            jr c,15F
 879+ 9CE3
 880+ 9CE3
 881+ 9CE3              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9CE3
 883+ 9CE3 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9CE4
 885+ 9CE4              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9CE4
 887+ 9CE4 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9CE7
 889+ 9CE7              ; Coordenada X de Amadeus en D.
 890+ 9CE7
 891+ 9CE7 7D               ld a,l
 892+ 9CE8 E6 1F            and $1F
 893+ 9CEA 57               ld d,a
 894+ 9CEB
 895+ 9CEB 21 BB 86         ld hl,Amadeus_db+8
 896+ 9CEE 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9CEF
 898+ 9CEF 21 BA 89         ld hl,Coordenadas_X_Amadeus
 899+ 9CF2 CD B8 9B         call Guarda_coordenadas_X
 900+ 9CF5
 901+ 9CF5 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9CF6
 903+ 9CF6              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9CF6
 905+ 9CF6 06 02            ld b,2
 906+ 9CF8 C5           20 push bc
 907+ 9CF9
 908+ 9CF9 06 03            ld b,3
 909+ 9CFB 21 BA 89         ld hl,Coordenadas_X_Amadeus
 910+ 9CFE 7E           18 ld a,(hl)
 911+ 9CFF BA               cp d
 912+ 9D00 20 04            jr nz,17F
 913+ 9D02
 914+ 9D02              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9D02
 916+ 9D02 C1               pop bc
 917+ 9D03 E1               pop hl
 918+ 9D04 18 0D            jr 14F
 919+ 9D06
 920+ 9D06 23           17 inc hl
 921+ 9D07 10 F5            djnz 18B
 922+ 9D09
 923+ 9D09 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9D0A
 925+ 9D0A C1               pop bc
 926+ 9D0B 10 EB            djnz 20B
 927+ 9D0D
 928+ 9D0D
 929+ 9D0D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9D0D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9D0D
 932+ 9D0D E1           15 pop hl
 933+ 9D0E 23               inc hl
 934+ 9D0F 35               dec (hl)
 935+ 9D10 2B               dec hl
 936+ 9D11 18 0C            jr 10F
 937+ 9D13
 938+ 9D13              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9D13              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9D13
 941+ 9D13 E5           14 push hl
 942+ 9D14 CD BC 9D         call Elimina_disparo_de_base_de_datos
 943+ 9D17 21 B5 89         ld hl,Impacto2
 944+ 9D1A CB CE            set 1,(hl)
 945+ 9D1C E1               pop hl
 946+ 9D1D 18 06            jr 12F
 947+ 9D1F
 948+ 9D1F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9D1F
 950+ 9D1F CD 66 9D     10 call Mueve_disparo
 951+ 9D22 CD 3D 9D         call foto_disparo_a_borrar
 952+ 9D25 C1           12 pop bc
 953+ 9D26
 954+ 9D26 18 04            jr 8F
 955+ 9D28
 956+ 9D28              ; ----- ----- ----- ----- ----- -----
 957+ 9D28
 958+ 9D28 ED 42        4 sbc hl,bc
 959+ 9D2A 28 0A            jr z,6F
 960+ 9D2C
 961+ 9D2C 2A B1 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9D2F 23               inc hl
 963+ 9D30 23               inc hl
 964+ 9D31 22 B1 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9D34 18 8A            jr 5B
 966+ 9D36
 967+ 9D36 CD 25 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9D39 CD C1 9B         call Limpia_Coordenadas_X
 969+ 9D3C C9               ret
 970+ 9D3D
 971+ 9D3D              ; ------------------------------------------------------------------
 972+ 9D3D
 973+ 9D3D              foto_disparo_a_borrar
 974+ 9D3D
 975+ 9D3D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9D3E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9D3F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9D40
 979+ 9D40 E5               push hl
 980+ 9D41 23               inc hl
 981+ 9D42 23               inc hl
 982+ 9D43 ED 73 A0 89      ld (Stack),sp
 983+ 9D47 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9D48 FD E1            pop iy
 985+ 9D4A DD E1            pop ix
 986+ 9D4C E1               pop hl
 987+ 9D4D ED 7B A0 89      ld sp,(Stack)
 988+ 9D51 3A 8F 89         ld a,(Ctrl_1)
 989+ 9D54 CB C7            set 0,a
 990+ 9D56 32 8F 89         ld (Ctrl_1),a
 991+ 9D59 CD BF 80         call Guarda_foto_registros
 992+ 9D5C 3A 8F 89         ld a,(Ctrl_1)
 993+ 9D5F CB 87            res 0,a
 994+ 9D61 32 8F 89         ld (Ctrl_1),a
 995+ 9D64 E1               pop hl
 996+ 9D65 C9               ret
 997+ 9D66
 998+ 9D66              ;---------------------------------------------------
 999+ 9D66              ;
1000+ 9D66              ;   18/07/23
1001+ 9D66              ;
1002+ 9D66
1003+ 9D66              Mueve_disparo
1004+ 9D66
1005+ 9D66              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9D66              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9D66              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9D66
1009+ 9D66 E5               push hl
1010+ 9D67
1011+ 9D67 7E               ld a,(hl)
1012+ 9D68
1013+ 9D68 06 04            ld b,4
1014+ 9D6A 23           1 inc hl
1015+ 9D6B 10 FD            djnz 1B
1016+ 9D6D
1017+ 9D6D              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9D6D
1019+ 9D6D CD A7 8B         call Extrae_address
1020+ 9D70
1021+ 9D70 E6 01            and 1
1022+ 9D72 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9D74
1024+ 9D74              ; Disparo hacia arriba, (Amadeus).
1025+ 9D74
1026+ 9D74              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9D74              ; _ de la dificultad.
1028+ 9D74
1029+ 9D74 CD FB 91         call PreviousScan
1030+ 9D77 CD FB 91         call PreviousScan
1031+ 9D7A CD FB 91         call PreviousScan
1032+ 9D7D CD FB 91         call PreviousScan
1033+ 9D80
1034+ 9D80              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9D80
1036+ 9D80 7C               ld a,h
1037+ 9D81 FE 40            cp $40
1038+ 9D83 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9D85
1040+ 9D85              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9D85
1042+ 9D85 EB               ex de,hl
1043+ 9D86 06 04            ld b,4
1044+ 9D88 2B           6 dec hl
1045+ 9D89 10 FD            djnz 6B
1046+ 9D8B
1047+ 9D8B CD BC 9D         call Elimina_disparo_de_base_de_datos
1048+ 9D8E E1               pop hl
1049+ 9D8F 18 10            jr 7F
1050+ 9D91
1051+ 9D91              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9D91              ; HL contiene el puntero de impresión del disparo.
1053+ 9D91              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9D91
1055+ 9D91 D5           3 push de
1056+ 9D92 C5               push bc
1057+ 9D93
1058+ 9D93 CD 4F 9B         call Comprueba_Colision
1059+ 9D96
1060+ 9D96              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9D96
1062+ 9D96 78               ld a,b
1063+ 9D97
1064+ 9D97 C1               pop bc
1065+ 9D98 D1               pop de
1066+ 9D99
1067+ 9D99 EB               ex de,hl
1068+ 9D9A
1069+ 9D9A 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9D9B 23               inc hl                                      ; _ movimiento.
1071+ 9D9C 72               ld (hl),d
1072+ 9D9D
1073+ 9D9D E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9D9E
1075+ 9D9E 23               inc hl                                      ; _ en curso.
1076+ 9D9F 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9DA0 2B               dec hl
1078+ 9DA1
1079+ 9DA1 C9           7 ret
1080+ 9DA2
1081+ 9DA2              ; Disparo hacia abajo, (Entidad).
1082+ 9DA2
1083+ 9DA2 3A C0 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9DA5 47               ld b,a
1085+ 9DA6
1086+ 9DA6 CD EC 91     4 call NextScan
1087+ 9DA9 10 FB            djnz 4B
1088+ 9DAB
1089+ 9DAB              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9DAB
1091+ 9DAB 7C               ld a,h
1092+ 9DAC FE 58            cp $58
1093+ 9DAE 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9DB0
1095+ 9DB0 EB               ex de,hl
1096+ 9DB1 06 04            ld b,4
1097+ 9DB3 2B           5 dec hl
1098+ 9DB4 10 FD            djnz 5B
1099+ 9DB6
1100+ 9DB6 CD BC 9D         call Elimina_disparo_de_base_de_datos
1101+ 9DB9 E1               pop hl
1102+ 9DBA 18 E5            jr 7B
1103+ 9DBC
1104+ 9DBC              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9DBC
1106+ 9DBC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9DBF AF               xor a
1108+ 9DC0 77               ld (hl),a
1109+ 9DC1 54               ld d,h
1110+ 9DC2 5D               ld e,l
1111+ 9DC3 13               inc de
1112+ 9DC4 ED B0            ldir
1113+ 9DC6 C9               ret
1114+ 9DC7
1115+ 9DC7              ; -----------------------------------------------------------------
1116+ 9DC7              ;
1117+ 9DC7              ;   7/12/23
1118+ 9DC7              ;
1119+ 9DC7
1120+ 9DC7 3A B5 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9DCA A7               and a
1122+ 9DCB C8               ret z
1123+ 9DCC
1124+ 9DCC              ; Analizamos si hay impacto por disparos.
1125+ 9DCC
1126+ 9DCC              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9DCC
1128+ 9DCC CB 4F            bit 1,a
1129+ 9DCE 28 07            jr z,1F
1130+ 9DD0
1131+ 9DD0 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9DD3 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9DD5 18 08            jr 2F
1134+ 9DD7
1135+ 9DD7 CB 47        1 bit 0,a
1136+ 9DD9 C8               ret z
1137+ 9DDA
1138+ 9DDA              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9DDA
1140+ 9DDA 21 8F 89         ld hl,Ctrl_1
1141+ 9DDD CB D6            set 2,(hl)
1142+ 9DDF
1143+ 9DDF C9           2 ret
1144+ 9DE0
1145+ 9DE0              ; -----------------------------------------------------------------
1146+ 9DE0              ;
1147+ 9DE0              ;   25/04/23
1148+ 9DE0              ;
1149+ 9DE0
1150+ 9DE0              Determina_resultado_comparativa
1151+ 9DE0
1152+ 9DE0              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9DE0              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9DE0              ;
1155+ 9DE0              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9DE0              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9DE0              ;
1158+ 9DE0              ;   SBC HL,DE
1159+ 9DE0
1160+ 9DE0              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9DE0              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9DE0
1163+ 9DE0              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9DE0              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9DE0
1166+ 9DE0
1167+ 9DE0 3A 62 89         ld a,(Cuad_objeto)
1168+ 9DE3 FE 02            cp 2
1169+ 9DE5 28 26            jr z,2F
1170+ 9DE7 38 24            jr c,2F
1171+ 9DE9
1172+ 9DE9              ; Cuadrantes 3º y 4º
1173+ 9DE9
1174+ 9DE9 E6 01            and 1
1175+ 9DEB 28 10            jr z,4F
1176+ 9DED
1177+ 9DED              ; Cuadrante 3º
1178+ 9DED
1179+ 9DED 7C               ld a,h
1180+ 9DEE 06 00            ld b,0
1181+ 9DF0
1182+ 9DF0 CD 7B 9E         call Compara_cositas_H3
1183+ 9DF3
1184+ 9DF3 04               inc b
1185+ 9DF4 05               dec b
1186+ 9DF5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9DF6
1188+ 9DF6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9DF7 06 00            ld b,0
1190+ 9DF9
1191+ 9DF9 CD 8D 9E         call Compara_cositas_L3
1192+ 9DFC C9               ret
1193+ 9DFD
1194+ 9DFD              ; Cuadrante 4º
1195+ 9DFD
1196+ 9DFD 7C           4 ld a,h
1197+ 9DFE 06 00            ld b,0
1198+ 9E00
1199+ 9E00 CD 9F 9E         call Compara_cositas_H4
1200+ 9E03
1201+ 9E03 04               inc b
1202+ 9E04 05               dec b
1203+ 9E05 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9E06
1205+ 9E06 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9E07 06 00            ld b,0
1207+ 9E09
1208+ 9E09 CD B5 9E         call Compara_cositas_L4
1209+ 9E0C C9               ret
1210+ 9E0D
1211+ 9E0D              ; Cuadrantes 1º y 2º.
1212+ 9E0D
1213+ 9E0D 28 10        2 jr z,3F
1214+ 9E0F
1215+ 9E0F              ; 1er Cuadrante
1216+ 9E0F
1217+ 9E0F 7C               ld a,h
1218+ 9E10 06 00            ld b,0
1219+ 9E12
1220+ 9E12 CD 53 9E         call Compara_cositas_H1
1221+ 9E15
1222+ 9E15 04               inc b
1223+ 9E16 05               dec b
1224+ 9E17 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9E18
1226+ 9E18 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9E19 06 00            ld b,0
1228+ 9E1B
1229+ 9E1B CD 69 9E         call Compara_cositas_L1
1230+ 9E1E C9               ret
1231+ 9E1F
1232+ 9E1F
1233+ 9E1F              ; 2º Cuadrante
1234+ 9E1F
1235+ 9E1F 7C           3 ld a,h
1236+ 9E20 06 00            ld b,0
1237+ 9E22
1238+ 9E22 CD 2F 9E         call Compara_cositas_H2
1239+ 9E25
1240+ 9E25 04               inc b
1241+ 9E26 05               dec b
1242+ 9E27 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9E28
1244+ 9E28 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9E29 06 00            ld b,0
1246+ 9E2B
1247+ 9E2B CD 41 9E         call Compara_cositas_L2
1248+ 9E2E C9               ret
1249+ 9E2F
1250+ 9E2F A7           Compara_cositas_H2 and a
1251+ 9E30 28 0D            jr z,1F
1252+ 9E32              ;    cp $fd
1253+ 9E32              ;    jr z,1F
1254+ 9E32              ;    cp $fe
1255+ 9E32              ;    jr z,1F
1256+ 9E32 FE FF            cp $ff
1257+ 9E34 28 09            jr z,1F
1258+ 9E36 FE 01            cp $01
1259+ 9E38 28 05            jr z,1F
1260+ 9E3A FE 02            cp $02
1261+ 9E3C 28 01            jr z,1F
1262+ 9E3E C0               ret nz
1263+ 9E3F 04           1 inc b
1264+ 9E40 C9               ret
1265+ 9E41
1266+ 9E41 A7           Compara_cositas_L2 and a
1267+ 9E42 28 0D            jr z,1F
1268+ 9E44              ;    cp $fd
1269+ 9E44              ;    jr z,1F
1270+ 9E44 FE FE            cp $fe
1271+ 9E46 28 09            jr z,1F
1272+ 9E48 FE FF            cp $ff
1273+ 9E4A 28 05            jr z,1F
1274+ 9E4C FE 01            cp $01
1275+ 9E4E 28 01            jr z,1F
1276+ 9E50              ;    cp $02
1277+ 9E50              ;    jr z,1F
1278+ 9E50 C0               ret nz
1279+ 9E51 04           1 inc b
1280+ 9E52 C9               ret
1281+ 9E53
1282+ 9E53 A7           Compara_cositas_H1 and a
1283+ 9E54 28 11            jr z,1F
1284+ 9E56              ;    cp $fd
1285+ 9E56              ;    jr z,1F
1286+ 9E56              ;    cp $fe
1287+ 9E56              ;    jr z,1F
1288+ 9E56 FE FF            cp $ff
1289+ 9E58 28 0D            jr z,1F
1290+ 9E5A FE 01            cp $01
1291+ 9E5C 28 09            jr z,1F
1292+ 9E5E FE 02            cp $02
1293+ 9E60 28 05            jr z,1F
1294+ 9E62 FE 03            cp $03
1295+ 9E64 28 01            jr z,1F
1296+ 9E66 C0               ret nz
1297+ 9E67 04           1 inc b
1298+ 9E68 C9               ret
1299+ 9E69
1300+ 9E69 A7           Compara_cositas_L1 and a
1301+ 9E6A 28 0D            jr z,1F
1302+ 9E6C              ;    cp $fd
1303+ 9E6C              ;    jr z,1F
1304+ 9E6C              ;    cp $fe
1305+ 9E6C              ;    jr z,1F
1306+ 9E6C              ;    cp $ff
1307+ 9E6C              ;    jr z,1F
1308+ 9E6C FE 01            cp $01
1309+ 9E6E 28 09            jr z,1F
1310+ 9E70 FE 02            cp $02
1311+ 9E72 28 05            jr z,1F
1312+ 9E74 FE 03            cp $03
1313+ 9E76 28 01            jr z,1F
1314+ 9E78 C0               ret nz
1315+ 9E79 04           1 inc b
1316+ 9E7A C9               ret
1317+ 9E7B
1318+ 9E7B A7           Compara_cositas_H3 and a
1319+ 9E7C 28 0D            jr z,1F
1320+ 9E7E              ;    cp $fd
1321+ 9E7E              ;    jr z,1F
1322+ 9E7E FE FE            cp $fe
1323+ 9E80 28 09            jr z,1F
1324+ 9E82 FE FF            cp $ff
1325+ 9E84 28 05            jr z,1F
1326+ 9E86 FE 01            cp $01
1327+ 9E88 28 01            jr z,1F
1328+ 9E8A              ;    cp $02
1329+ 9E8A              ;    jr z,1F
1330+ 9E8A              ;    cp $03
1331+ 9E8A              ;    jr z,1F
1332+ 9E8A C0               ret nz
1333+ 9E8B 04           1 inc b
1334+ 9E8C C9               ret
1335+ 9E8D
1336+ 9E8D A7           Compara_cositas_L3 and a
1337+ 9E8E 28 0D            jr z,1F
1338+ 9E90              ;    cp $fd
1339+ 9E90              ;    jr z,1F
1340+ 9E90              ;    cp $fe
1341+ 9E90              ;    jr z,1F
1342+ 9E90              ;    cp $ff
1343+ 9E90              ;    jr z,1F
1344+ 9E90 FE 01            cp $01
1345+ 9E92 28 09            jr z,1F
1346+ 9E94 FE 02            cp $02
1347+ 9E96 28 05            jr z,1F
1348+ 9E98 FE 03            cp $03
1349+ 9E9A 28 01            jr z,1F
1350+ 9E9C C0               ret nz
1351+ 9E9D 04           1 inc b
1352+ 9E9E C9               ret
1353+ 9E9F
1354+ 9E9F A7           Compara_cositas_H4 and a
1355+ 9EA0 28 11            jr z,1F
1356+ 9EA2 FE FD            cp $fd
1357+ 9EA4 28 0D            jr z,1F
1358+ 9EA6 FE FE            cp $fe
1359+ 9EA8 28 09            jr z,1F
1360+ 9EAA FE FF            cp $ff
1361+ 9EAC 28 05            jr z,1F
1362+ 9EAE FE 01            cp $01
1363+ 9EB0 28 01            jr z,1F
1364+ 9EB2              ;    cp $02
1365+ 9EB2              ;    jr z,1F
1366+ 9EB2              ;    cp $03
1367+ 9EB2              ;    jr z,1F
1368+ 9EB2 C0               ret nz
1369+ 9EB3 04           1 inc b
1370+ 9EB4 C9               ret
1371+ 9EB5
1372+ 9EB5 A7           Compara_cositas_L4 and a
1373+ 9EB6 28 0D            jr z,1F
1374+ 9EB8              ;    cp $fd
1375+ 9EB8              ;    jr z,1F
1376+ 9EB8 FE FE            cp $fe
1377+ 9EBA 28 09            jr z,1F
1378+ 9EBC FE FF            cp $ff
1379+ 9EBE 28 05            jr z,1F
1380+ 9EC0 FE 01            cp $01
1381+ 9EC2 28 01            jr z,1F
1382+ 9EC4              ;    cp $02
1383+ 9EC4              ;    jr z,1F
1384+ 9EC4              ;    cp $03
1385+ 9EC4              ;    jr z,1F
1386+ 9EC4 C0               ret nz
1387+ 9EC5 04           1 inc b
1388+ 9EC6 C9               ret
# file closed: Disparo.asm
1731  9EC7              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9EC7              ; Relojes y temporizaciones.
   2+ 9EC7
   3+ 9EC7              ; ------------------------------------------------------
   4+ 9EC7              ;
   5+ 9EC7              ;	16/7/23
   6+ 9EC7              ;
   7+ 9EC7              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9EC7              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9EC7              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9EC7              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9EC7              ;
  12+ 9EC7              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9EC7              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9EC7
  15+ 9EC7              ; Disparo_entidad db 1
  16+ 9EC7              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9EC7              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9EC7
  19+ 9EC7              Habilita_disparos
  20+ 9EC7
  21+ 9EC7 7E           	ld a,(hl)
  22+ 9EC8 A7           	and a
  23+ 9EC9 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9ECA
  25+ 9ECA EB           	ex de,hl
  26+ 9ECB
  27+ 9ECB 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9ECC C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9ECD
  30+ 9ECD              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9ECD
  32+ 9ECD 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9ECE 7E           	ld a,(hl)
  34+ 9ECF 23           	inc hl
  35+ 9ED0 77           	ld (hl),a
  36+ 9ED1
  37+ 9ED1 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9ED2 3E 01        	ld a,1
  39+ 9ED4 77           	ld (hl),a
  40+ 9ED5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1732  9ED6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9ED6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9ED6              ;
   3+ 9ED6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9ED6              ;
   5+ 9ED6              ; *****************************************************************************************************************************************************************************************
   6+ 9ED6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9ED6
   8+ 9ED6 7C           calcula_tercio ld a,h
   9+ 9ED7 E6 18        	and $18
  10+ 9ED9 CB 2F        	sra a
  11+ 9EDB CB 2F        	sra a
  12+ 9EDD CB 2F        	sra a
  13+ 9EDF C9           	ret
  14+ 9EE0
# file closed: calcula_tercio.asm
1733  9EE0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9EE0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9EE0              ;
   3+ 9EE0              ;
   4+ 9EE0              ;	CLS.
   5+ 9EE0              ;
   6+ 9EE0              ;	Limpia la pantalla y define sus atributos.
   7+ 9EE0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9EE0              ;
   9+ 9EE0              ;	COLORES: 0 ..... NEGRO
  10+ 9EE0              ;    		 1 ..... AZUL
  11+ 9EE0              ; 			 2 ..... ROJO
  12+ 9EE0              ;			 3 ..... MAGENTA
  13+ 9EE0              ; 			 4 ..... VERDE
  14+ 9EE0              ; 			 5 ..... CIAN
  15+ 9EE0              ;			 6 ..... AMARILLO
  16+ 9EE0              ; 			 7 ..... BLANCO
  17+ 9EE0              ;
  18+ 9EE0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9EE0              ;
  20+ 9EE0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9EE0
  22+ 9EE0
  23+ 9EE0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9EE3 11 01 40     	LD DE,$4001
  25+ 9EE6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9EE9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9EEB ED B0        	LDIR
  28+ 9EED 01 FF 02     	LD BC,767
  29+ 9EF0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9EF1 ED B0        	LDIR
  31+ 9EF3 C9           	ret
  32+ 9EF4
# file closed: Cls.asm
1734  9EF4              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9EF4              ; ------------------------------------------------------------------------
   2+ 9EF4              ;
   3+ 9EF4              ;	30/1/24
   4+ 9EF4              ;
   5+ 9EF4              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9EF4              ;	Fila superior "0", Columna izquierda "0".
   7+ 9EF4              ;
   8+ 9EF4              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9EF4              ;
  10+ 9EF4              ;	Modifica: A,BC y DE.
  11+ 9EF4
  12+ 9EF4 7D           Genera_coordenadas ld a,l
  13+ 9EF5 E6 1F        	and $1f
  14+ 9EF7 32 54 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9EFA
  16+ 9EFA 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9EFB FE 40        	cp $40
  18+ 9EFD 38 1C        	jr c,4F
  19+ 9EFF
  20+ 9EFF CD D6 9E     	call calcula_tercio
  21+ 9F02 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9F03
  23+ 9F03 1E 00        	ld e,0
  24+ 9F05 7D           	ld a,l
  25+ 9F06 E6 E0        	and $e0
  26+ 9F08 28 01        	jr z,1F
  27+ 9F0A 04           	inc b
  28+ 9F0B
  29+ 9F0B 04           1 inc b
  30+ 9F0C 05           	dec b
  31+ 9F0D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9F0F              ;														; _ , salimos.
  33+ 9F0F 1C           3 inc e
  34+ 9F10 D6 20        	sub 32
  35+ 9F12 20 FB        	jr nz,3B
  36+ 9F14 10 F5        	djnz 1B
  37+ 9F16
  38+ 9F16 7B           2 ld a,e
  39+ 9F17 32 55 89     	ld (Coordenada_y),a
  40+ 9F1A C9           	ret
  41+ 9F1B
  42+ 9F1B AF           4 xor a
  43+ 9F1C 32 55 89     	ld (Coordenada_y),a
  44+ 9F1F C9           	ret
  45+ 9F20
  46+ 9F20              ; ------------------------------------------------------------------------
  47+ 9F20              ;	28/05/23
  48+ 9F20              ;
  49+ 9F20              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9F20              ;	Fila superior "0", Columna izquierda "0".
  51+ 9F20              ;
  52+ 9F20              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9F20              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9F20              ;
  55+ 9F20              ;		DE="$120d"
  56+ 9F20              ;
  57+ 9F20              ;		D, (Coordenada_X), Columnas, $12
  58+ 9F20              ;		E, (Coordenada_y), Filas, $0d
  59+ 9F20              ;
  60+ 9F20              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9F20
  62+ 9F20              ;	Modifica: A,BC y DE.
  63+ 9F20
  64+ 9F20
  65+ 9F20              Genera_coordenadas_disparo
  66+ 9F20
  67+ 9F20              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9F20
  69+ 9F20 7D           	ld a,l
  70+ 9F21 E6 1F        	and $1f
  71+ 9F23 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9F24 CD D6 9E     	call calcula_tercio
  73+ 9F27 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9F28 1E 00        	ld e,0
  75+ 9F2A 7D           	ld a,l
  76+ 9F2B E6 E0        	and $e0
  77+ 9F2D 28 01        	jr z,1F
  78+ 9F2F 04           	inc b
  79+ 9F30 1C           1 inc e
  80+ 9F31 D6 20        	sub 32
  81+ 9F33 20 FB        	jr nz,1B
  82+ 9F35 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9F37 C9           	ret
  84+ 9F38
# file closed: Genera_coordenadas.asm
1735  9F38              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F38              ;
   3+ 9F38              ;	12/12/23
   4+ 9F38              ;
   5+ 9F38              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F38
   7+ 9F38              ;	ADC HL,SP	LD (addr),SP
   8+ 9F38              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F38              ;	ADD IX,SP	LD SP,nn
  10+ 9F38              ; 	ADD IY,SP	LD SP,HL
  11+ 9F38              ;				LD SP,IX
  12+ 9F38              ;	DEC SP		LD SP,IY
  13+ 9F38
  14+ 9F38              ;	EX (SP),HL
  15+ 9F38              ;	EX (SP),IX
  16+ 9F38              ;	EX (SP),IY
  17+ 9F38
  18+ 9F38              ;	INC SP
  19+ 9F38
  20+ 9F38                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 A0 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 6A 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 6C 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 8F 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A A8 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 70 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A AC 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A6 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 8F 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 A8 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 70 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 AC 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B A0 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A6 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B A0 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A6 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A6 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1736  8131
1737  8131              	SAVESNA "Pruebas.sna", START
1738  8131
1739  8131
1740  8131
1741  8131
# file closed: Banco_de_pruebas.asm
