# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 18 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 1B 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD DE 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 28 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 18 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 ED 4D        	reti
  86  AA35
  87  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA35
  89  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 24 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 24 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5D 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 83 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5F 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 83 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5F 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 83 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5F 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5F 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 83 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  92  88C6
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ; Constantes.
  95  88C6              ; ******************************************************************************************************************************************************************************************
  96  88C6              ;
  97  88C6              ; 4/9/23
  98  88C6              ;
  99  88C6              ; Constantes generales.
 100  88C6              ;
 101  88C6
 102  88C6              Sprite_vacio equ $f000
 103  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C6
 108  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C6              ;
 114  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C6
 121  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C6
 124  88C6
 125  88C6
 126  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C6
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ; Variables.
 130  88C6              ; ******************************************************************************************************************************************************************************************
 131  88C6              ;
 132  88C6              ; 28/07/23
 133  88C6              ;
 134  88C6              ; Variables de DRAW. (Motor principal).
 135  88C6              ;
 136  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C6
 138  88C6 00           Filas db 0												; Filas. [DRAW]
 139  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CE
 145  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CE
 147  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CF 00           Attr db 0												; Atributos de la entidad:
 151  88D0
 152  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D0              ;
 154  88D0              ;	COLORES: 0 ..... NEGRO
 155  88D0              ;    		 1 ..... AZUL
 156  88D0              ; 			 2 ..... ROJO
 157  88D0              ;			 3 ..... MAGENTA
 158  88D0              ; 			 4 ..... VERDE
 159  88D0              ; 			 5 ..... CIAN
 160  88D0              ;			 6 ..... AMARILLO
 161  88D0              ; 			 7 ..... BLANCO
 162  88D0
 163  88D0 00 00        Indice_Sprite_der defw 0
 164  88D2 00 00        Indice_Sprite_izq defw 0
 165  88D4 00 00        Puntero_DESPLZ_der defw 0
 166  88D6 00 00        Puntero_DESPLZ_izq defw 0
 167  88D8
 168  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DB
 171  88DB              ; Variables de objeto. (Características).
 172  88DB
 173  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DF
 178  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E0 00 00 00...  Variables_de_borrado ds 6
 182  88E6
 183  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E8 00 00        	defw 0
 185  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EC 00 00 00 00  	db 0,0,0,0
 187  88F0
 188  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F0
 190  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F1              ;
 196  88F1              ; 														DESCRIPCIÖN:
 197  88F1              ;
 198  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F1              ;
 212  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F1
 216  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F1
 218  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F7              ;
 222  88F7              ;
 223  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F8 00           Incrementa_puntero_backup db 0
 227  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FD              ;
 233  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FD              ;
 237  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FD              ;
 242  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FD
 246  88FD
 247  88FD              ; Variables de funcionamiento. [DRAW].
 248  88FD
 249  88FD 00           Columnas db 0
 250  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8901
 254  8901              ; variables de control general.
 255  8901
 256  8901 00           Ctrl_2 db 0
 257  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8902              ;
 265  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8902
 271  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8903
 273  8903              ;! 61 Bytes por entidad.
 274  8903
 275  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8903              ;					         		---------;      ;---------
 277  8903
 278  8903
 279  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8903
 281  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8904
 283  8904              ;														DESCRIPCIÓN:
 284  8904              ;
 285  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8904
 292  8904              ;														BIT 3, Recarga de nueva oleada.
 293  8904              ;														BIT 4, Recarga de nueva oleada.
 294  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 295  8904              ;														BIT 6, **** Frame completo.
 296  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8904
 298  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8906
 303  8906              ; Ctrl_3 db 0											; Byte de control de propósito general.
 304  8906
 305  8906              ;														DESCRIPCIÓN:
 306  8906              ;
 307  8906              ;														BIT 0,
 308  8906
 309  8906              ; Gestión de ENTIDADES y CAJAS.
 310  8906
 311  8906 00 00        Puntero_store_caja defw 0
 312  8908 00 00        Puntero_restore_caja defw 0
 313  890A 00 00        Indice_restore_caja defw 0
 314  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890D 00           Numero_parcial_de_entidades db 0
 316  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 317  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8910              ;														; _ (Numero_de_malotes)="0".
 321  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8914              ;														; _ puntero (Indice_entidades).
 324  8914
 325  8914
 326  8914              ;---------------------------------------------------------------------------------------------------------------
 327  8914              ;
 328  8914              ;	2/9/23
 329  8914              ;
 330  8914              ;	Álbumes.
 331  8914
 332  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8916              ;														; _variable para almacenar lo posición del puntero_
 334  8916              ; 														; _de pila, SP.
 335  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891A 00 00        Stack_snapshot defw 0
 339  891C 00 00        Stack_snapshot_disparos defw 0
 340  891E
 341  891E 00 00        End_Snapshot defw 0
 342  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8922              ;														; _el snapshot de los registros del siguiente disparo.
 345  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8924 00 00        End_Snapshot_1 defw 0
 348  8926 00 00        End_Snapshot_disparos_1 defw 0
 349  8928 00 00        End_Snapshot_2 defw 0
 350  892A 00 00        End_Snapshot_disparos_2 defw 0
 351  892C 00 00        End_Snapshot_3 defw 0
 352  892E 00 00        End_Snapshot_disparos_3 defw 0
 353  8930
 354  8930 00 00        Puntero_indice_album_de_fotos defw 0
 355  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8934
 357  8934 00 00        Puntero_indice_End_Snapshot defw 0
 358  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8938 00 00        Puntero_de_End_Snapshot defw 0
 360  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893C
 362  893C 00           Semaforo db 0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 363  893D              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 364  893D 00           Reordena_albumes db 0
 365  893E
 366  893E              ;---------------------------------------------------------------------------------------------------------------
 367  893E
 368  893E              ; Gestión de Disparos.
 369  893E
 370  893E 00           Numero_de_disparotes db 0
 371  893F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 372  8941 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 373  8943 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 374  8944              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 375  8944              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 376  8944 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 377  8946              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 378  8946              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 379  8946              ;														; _produzca colisión.
 380  8946 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 381  8948              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 382  8948 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 383  894B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 384  894B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 385  894E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 386  894E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 387  8950 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 388  8951
 389  8951              ;---------------------------------------------------------------------------------------------------------------
 390  8951
 391  8951              ; Relojes y temporizaciones.
 392  8951
 393  8951 00           Contador_de_frames db 0
 394  8952 00           Contador_de_frames_2 db 0
 395  8953
 396  8953 04           Clock_explosion db 4
 397  8954 1E           Clock_Entidades_en_curso db 30
 398  8955 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 399  8956              ;														; Repite la oleada de entidades.
 400  8956 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 401  8957 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 402  8958 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 403  8959
 404  8959 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 405  895A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 406  895B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 407  895C
 408  895C              ;---------------------------------------------------------------------------------------------------------------
 409  895C
 410  895C              ; Gestión de NIVELES.
 411  895C
 412  895C 00           Nivel db 0												; Nivel actual del juego.
 413  895D 00 00        Puntero_indice_NIVELES defw 0
 414  895F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 415  8961              ; 														; _ que definen el NIVEL.
 416  8961              ; Y todo comienza aquí .....
 417  8961              ;
 418  8961              ; Rutina principal *************************************************************************************************************************************************************************
 419  8961              ;
 420  8961              ;	14/11/22
 421  8961
 422  8961              START
 423  8961
 424  8961 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 425  8964 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 426  8966 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 427  8968 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 428  896A F3           	DI
 429  896B
 430  896B 3E 07        	ld a,%00000111
 431  896D CD 51 99     	call Cls
 432  8970
 433  8970 CD 5C 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 434  8973
 435  8973              ; INICIALIZACIÓN.
 436  8973
 437  8973 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 438  8976
 439  8976 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 440  8979
 441  8979 CD 7F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 442  897C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 443  897C CD 95 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 444  897F              ;													     ; _ malotes antes de guardar ninguna foto.
 445  897F              ; ----------
 446  897F
 447  897F CD 0C 8D     	call Restore_entidad
 448  8982
 449  8982 21 0D 89     	ld hl,Numero_parcial_de_entidades
 450  8985 46           	ld b,(hl)
 451  8986 04           	inc b
 452  8987 05           	dec b
 453  8988 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 454  898A
 455  898A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 456  898A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 457  898A              ;	Pintamos el resto de entidades:
 458  898A
 459  898A              ;	INICIA ENTIDADES !!!!!
 460  898A
 461  898A C5           1 push bc  												; Guardo el contador de entidades.
 462  898B CD 50 8B     	call Inicia_entidad
 463  898E C1           	pop bc
 464  898F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 465  8991
 466  8991              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 467  8991              ; (Esto se dá cuando se inicia una nueva oleada).
 468  8991
 469  8991 3A 03 89     	ld a,(Ctrl_1)
 470  8994 CB 5F        	bit 3,a
 471  8996 20 00        	jr nz,5F											; Loop
 472  8998
 473  8998              ; 	INICIA AMADEUS !!!!!
 474  8998
 475  8998              3
 476  8998
 477  8998              ;	call Restore_Amadeus
 478  8998              ;	call Inicia_Puntero_objeto
 479  8998              ;	call Draw
 480  8998              ;	call Guarda_foto_registros
 481  8998              ;	call Guarda_datos_de_borrado_Amadeus
 482  8998
 483  8998              ;	ld de,Amadeus_db
 484  8998              ;	call Store_Amadeus
 485  8998
 486  8998              ; 	INICIA DISPAROS !!!!!
 487  8998
 488  8998              ;	call Inicia_Puntero_Disparo_Entidades
 489  8998              ;	call Inicia_Puntero_Disparo_Amadeus
 490  8998
 491  8998              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 492  8998
 493  8998 CD 7F 8B     5 call Inicia_punteros_de_cajas
 494  899B CD 0C 8D     	call Restore_entidad
 495  899E
 496  899E 3A 03 89     	ld a,(Ctrl_1)
 497  89A1 CB 5F        	bit 3,a
 498  89A3 28 07        	jr z,6F
 499  89A5
 500  89A5              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 501  89A5
 502  89A5 21 03 89     	ld hl,Ctrl_1
 503  89A8 CB 9E        	res 3,(hl)
 504  89AA 18 03        	jr Main
 505  89AC
 506  89AC
 507  89AC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 508  89AC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 509  89AC              ; _ para situarnos en el siguiente album.
 510  89AC
 511  89AC CD C6 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 512  89AF
 513  89AF
 514  89AF              ; ------------------------------------
 515  89AF
 516  89AF              Main
 517  89AF              ;
 518  89AF              ;	3/8/23
 519  89AF
 520  89AF FB            	ei
 521  89B0
 522  89B0 3A 54 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 523  89B3 47           	ld b,a
 524  89B4 3A 51 89     	ld a,(Contador_de_frames)
 525  89B7 B8           	cp b
 526  89B8 20 18        	jr nz,13F
 527  89BA
 528  89BA 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 529  89BD 47           	ld b,a
 530  89BE 3A 0E 89     	ld a,(Entidades_en_curso)
 531  89C1 B8           	cp b
 532  89C2 28 0E        	jr z,13F
 533  89C4 30 0C        	jr nc,13F
 534  89C6
 535  89C6 3C           	inc a
 536  89C7 32 0E 89     	ld (Entidades_en_curso),a
 537  89CA
 538  89CA 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 539  89CD
 540  89CD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 541  89CD              ;! _ IMPREDECIBLE !!!!
 542  89CD
 543  89CD C6 64        	add 100
 544  89CF 32 54 89     	ld (Clock_Entidades_en_curso),a
 545  89D2
 546  89D2              ; Habilita disparos.
 547  89D2
 548  89D2 21 56 89     13 ld hl,Disparo_Amadeus
 549  89D5 11 58 89     	ld de,CLOCK_repone_disparo_Amadeus
 550  89D8 CD 15 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 551  89DB
 552  89DB 21 59 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 553  89DE 11 5B 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 554  89E1 CD 15 9D     	call Habilita_disparos
 555  89E4
 556  89E4              ; COLISIONES.
 557  89E4
 558  89E4 CD 26 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 559  89E7
 560  89E7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 561  89E7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 562  89E7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 563  89E7
 564  89E7 AF           	xor a
 565  89E8 32 43 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 566  89EB
 567  89EB CD 7F 8B     	call Inicia_punteros_de_cajas
 568  89EE CD 0C 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 569  89F1              ; 														; _ en DRAW.
 570  89F1 3A C6 88     	ld a,(Filas)
 571  89F4 A7           	and a
 572  89F5 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 573  89F7 CD 1E 8D     	call Incrementa_punteros_de_cajas
 574  89FA 18 F2        	jr 12B
 575  89FC
 576  89FC              ; ---------------------------------------------------------------------------------------
 577  89FC
 578  89FC 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 579  89FF 47               ld b,a
 580  8A00 A7           	and a
 581  8A01 20 14        	jr nz,11F
 582  8A03
 583  8A03 21 03 89     	ld hl,Ctrl_1
 584  8A06 CB 66        	bit 4,(hl)
 585  8A08 C2 95 8A     	jp nz,16F
 586  8A0B
 587  8A0B 21 03 89     	ld hl,Ctrl_1
 588  8A0E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 589  8A10
 590  8A10 3A 51 89     	ld a,(Contador_de_frames)
 591  8A13 3C           	inc a
 592  8A14 32 55 89     	ld (Activa_recarga_cajas),a
 593  8A17
 594  8A17              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 595  8A17
 596  8A17 3A 0E 89     11 ld a,(Entidades_en_curso)
 597  8A1A A7           	and a
 598  8A1B CA 95 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 599  8A1E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 600  8A1F
 601  8A1F              ; Código que ejecutamos con cada entidad:
 602  8A1F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 603  8A1F
 604  8A1F C5           15 push bc 												; Nº de entidades en curso.
 605  8A20
 606  8A20              ; Impacto ???
 607  8A20
 608  8A20 3A DF 88     	ld a,(Impacto)
 609  8A23 A7           	and a
 610  8A24 28 32        	jr z,8F
 611  8A26
 612  8A26              ; Hay Impacto en esta entidad.
 613  8A26
 614  8A26 21 53 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 615  8A29 35           	dec (hl)
 616  8A2A 20 63        	jr nz,17F
 617  8A2C
 618  8A2C              ;! Velocidad de la animación de la explosión.
 619  8A2C
 620  8A2C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 621  8A2E              ;														; _,(velocidad de la explosión).
 622  8A2E
 623  8A2E              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 624  8A2E 18 FE        	jr $
 625  8A30
 626  8A30 CD CD 8D     	call Repone_datos_de_borrado
 627  8A33 CD 25 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 628  8A36
 629  8A36
 630  8A36              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 631  8A36
 632  8A36 3A 01 89     	ld a,(Ctrl_2)
 633  8A39 CB 4F        	bit 1,a
 634  8A3B 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 635  8A3D
 636  8A3D              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 637  8A3D
 638  8A3D 3A CE 88     	ld a,(CTRL_DESPLZ)
 639  8A40 A7           	and a
 640  8A41 20 08        	jr nz,18F
 641  8A43
 642  8A43 21 84 84     	ld hl,Indice_Explosion_2x2-2
 643  8A46 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 644  8A49 18 06        	jr 19F
 645  8A4B
 646  8A4B 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 647  8A4E 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 648  8A51
 649  8A51 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 650  8A54 CB CE        	set 1,(hl)
 651  8A56 18 22        	jr 7F
 652  8A58
 653  8A58              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 654  8A58              ; _con las coordenadas de la entidad almacenada en DRAW.
 655  8A58
 656  8A58 3A 03 89     8 ld a,(Ctrl_1)
 657  8A5B CB 57        	bit 2,a
 658  8A5D 28 1B        	jr z,7F
 659  8A5F
 660  8A5F 2A 46 89     	ld hl,(Coordenadas_disparo_certero)
 661  8A62 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 662  8A63              ;														; E contiene la coordenada_X del disparo.
 663  8A63 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 664  8A66              ;														; H FILA, (Coordenada_y de la entidad).
 665  8A66 A7           	and a
 666  8A67 ED 52        	sbc hl,de
 667  8A69
 668  8A69 CD 5D 92     	call Determina_resultado_comparativa
 669  8A6C
 670  8A6C 78           	ld a,b
 671  8A6D A7           	and a
 672  8A6E 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 673  8A70
 674  8A70              ; ----- ----- -----
 675  8A70
 676  8A70 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 677  8A72 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 678  8A75
 679  8A75 21 03 89     	ld hl,Ctrl_1
 680  8A78 CB 96        	res 2,(hl)
 681  8A7A
 682  8A7A CD EC 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 683  8A7D
 684  8A7D 3A F0 88     	ld a,(Ctrl_0)
 685  8A80 CB 67        	bit 4,a
 686  8A82 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 687  8A84
 688  8A84              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 689  8A84              ; [[[
 690  8A84 CD A7 8D     	call Detecta_disparo_entidad
 691  8A87              ; ]]]
 692  8A87
 693  8A87 CD 60 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 694  8A8A              ;	call Guarda_datos_de_borrado
 695  8A8A
 696  8A8A 21 F0 88     	ld hl,Ctrl_0
 697  8A8D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 698  8A8F
 699  8A8F CD D1 8C     17 call Store_Restore_cajas
 700  8A92
 701  8A92 C1           	pop bc
 702  8A93 10 8A        	djnz 15B
 703  8A95
 704  8A95              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 705  8A95              ; Hemos gestionado todas las unidades.
 706  8A95              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 707  8A95
 708  8A95              ;	ld hl,Ctrl_1
 709  8A95              ;	res 2,(hl)
 710  8A95
 711  8A95 CD C6 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 712  8A98              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 713  8A98              ; ----------------------------------------
 714  8A98
 715  8A98 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 716  8A9B CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 717  8A9D CA AF 89     	jp z,Main
 718  8AA0
 719  8AA0 3A 51 89     	ld a,(Contador_de_frames)
 720  8AA3 47           	ld b,a
 721  8AA4 3A 55 89     	ld a,(Activa_recarga_cajas)
 722  8AA7 B8           	cp b
 723  8AA8 28 08        	jr z,20F
 724  8AAA
 725  8AAA 21 03 89     	ld hl,Ctrl_1
 726  8AAD CB E6        	set 4,(hl)
 727  8AAF C3 AF 89     	jp Main
 728  8AB2
 729  8AB2 21 03 89     20 ld hl,Ctrl_1
 730  8AB5 CB A6        	res 4,(hl)
 731  8AB7
 732  8AB7 3A 51 89     	ld a,(Contador_de_frames)
 733  8ABA
 734  8ABA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 735  8ABA              ;! _ IMPREDECIBLE !!!!
 736  8ABA
 737  8ABA C6 0A        	add 10
 738  8ABC 32 54 89     	ld (Clock_Entidades_en_curso),a
 739  8ABF
 740  8ABF C3 76 89     	jp 4B
 741  8AC2
 742  8AC2 C9           	ret
 743  8AC3
 744  8AC3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 745  8AC3
 746  8AC3              Gestiona_Amadeus
 747  8AC3
 748  8AC3 3E 04            ld a,4
 749  8AC5 D3 FE        	out ($fe),a											; Azul.
 750  8AC7
 751  8AC7 CD 33 8D     	call Restore_Amadeus
 752  8ACA
 753  8ACA              ;! Activa/desactiva impacto con Amadeus.
 754  8ACA
 755  8ACA 3A DF 88     	ld a,(Impacto)
 756  8ACD A7           	and a
 757  8ACE 20 FE        	jr nz,$
 758  8AD0
 759  8AD0 CD 3D 8B     	call Mov_Amadeus
 760  8AD3
 761  8AD3 3A F0 88     	ld a,(Ctrl_0)
 762  8AD6 CB 67        	bit 4,a
 763  8AD8 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 764  8ADA
 765  8ADA CD 60 8B     	call Guarda_foto_entidad_a_pintar
 766  8ADD CD AD 8D     	call Guarda_datos_de_borrado_Amadeus
 767  8AE0
 768  8AE0 21 F0 88     14 ld hl,Ctrl_0
 769  8AE3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 770  8AE5
 771  8AE5 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 772  8AE8 CD 45 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 773  8AEB
 774  8AEB              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 775  8AEB
 776  8AEB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 777  8AEB
 778  8AEB              ;	call Calcula_numero_de_disparotes
 779  8AEB
 780  8AEB C9           	ret
 781  8AEC
 782  8AEC              ; --------------------------------------------------------------------------------------------------------------
 783  8AEC              ;
 784  8AEC              ;	27/05/23
 785  8AEC
 786  8AEC              Mov_obj
 787  8AEC
 788  8AEC 3A 01 89     	ld a,(Ctrl_2)
 789  8AEF CB 4F        	bit 1,a
 790  8AF1 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 791  8AF3
 792  8AF3              ; Explosión:
 793  8AF3
 794  8AF3 3A 02 89     	ld a,(Frames_explosion)
 795  8AF6 A7           	and a
 796  8AF7 20 11        	jr nz,4F
 797  8AF9
 798  8AF9              ; Una alimaña menos!!!!!!!!!1
 799  8AF9
 800  8AF9 CD 4E 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 801  8AFC 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 802  8AFF 35           	dec (hl)
 803  8B00 21 0E 89     	ld hl,Entidades_en_curso
 804  8B03 35           	dec (hl)
 805  8B04 21 0C 89     	ld hl,Numero_de_entidades
 806  8B07 35           	dec (hl)
 807  8B08 18 32        	jr 3F
 808  8B0A
 809  8B0A              ; -----
 810  8B0A
 811  8B0A              ;	`Movemos´ la explosión.
 812  8B0A
 813  8B0A 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 814  8B0D 23           	inc hl
 815  8B0E 23           	inc hl
 816  8B0F 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 817  8B12 CD 83 8C     	call Extrae_address
 818  8B15 22 CA 88     	ld (Puntero_objeto),hl
 819  8B18
 820  8B18 21 02 89     	ld hl,Frames_explosion
 821  8B1B 35           	dec (hl)
 822  8B1C
 823  8B1C              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 824  8B1C 18 1E        	jr 3F
 825  8B1E
 826  8B1E AF           2 xor a
 827  8B1F 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 828  8B22
 829  8B22              ; Movemos Entidades malignas.
 830  8B22
 831  8B22 CD C0 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 832  8B25
 833  8B25 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 834  8B28 CB 67        	bit 4,a
 835  8B2A C8           	ret z
 836  8B2B
 837  8B2B              ; Ha habido desplazamiento de la entidad maligna.
 838  8B2B              ; Ha llegado a zona de AMADEUS ???
 839  8B2B
 840  8B2B 3A CD 88     	ld a,(Coordenada_y)
 841  8B2E FE 14        	cp $14
 842  8B30 D4 EB 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 843  8B33              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 844  8B33              ; ---------
 845  8B33
 846  8B33 CD 67 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 847  8B36 CD CD 8D     	call Repone_datos_de_borrado
 848  8B39 CD 25 8C     	call Limpia_Variables_de_borrado
 849  8B3C
 850  8B3C C9           3 ret													; _de la misma.
 851  8B3D
 852  8B3D              ; --------------------------------------------------------------------------------------------------------------
 853  8B3D              ;
 854  8B3D              ;	29/1/23
 855  8B3D
 856  8B3D              Mov_Amadeus
 857  8B3D
 858  8B3D CD 70 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 859  8B40
 860  8B40 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 861  8B43 CB 67        	bit 4,a
 862  8B45 C8           	ret z
 863  8B46
 864  8B46              ; ---------
 865  8B46
 866  8B46 CD 67 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 867  8B49 CD BD 8D     	call Repone_datos_de_borrado_Amadeus
 868  8B4C CD 25 8C     	call Limpia_Variables_de_borrado
 869  8B4F
 870  8B4F C9           	ret
 871  8B50
 872  8B50              ; -----------------------------------------------------------------------------------
 873  8B50
 874  8B50 CD 89 8C     Inicia_entidad	call Inicia_Puntero_objeto
 875  8B53 CD 65 99     	call Recompone_posicion_inicio
 876  8B56 CD 44 93     	call Draw
 877  8B59 CD A0 7F     	call Guarda_foto_registros
 878  8B5C              ;	call Guarda_datos_de_borrado
 879  8B5C CD D1 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 880  8B5F C9           	ret
 881  8B60
 882  8B60              ; --------------------------------------------------------------------------------------------------------------
 883  8B60              ;
 884  8B60              ;	31/08/23
 885  8B60              ;
 886  8B60              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 887  8B60              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 888  8B60
 889  8B60              Guarda_foto_entidad_a_pintar
 890  8B60
 891  8B60              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 892  8B60
 893  8B60 CD 44 93     	call Draw
 894  8B63 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 895  8B66 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 896  8B67
 897  8B67              ; --------------------------------------------------------------------------------------------------------------
 898  8B67              ;
 899  8B67              ;	19/9/23
 900  8B67
 901  8B67 21 C6 88     Prepara_var_pintado ld hl,Filas
 902  8B6A 11 E6 88     	ld de,Variables_de_pintado
 903  8B6D 01 08 00     	ld bc,8
 904  8B70 ED B0        	ldir
 905  8B72 C9           	ret
 906  8B73
 907  8B73              ; --------------------------------------------------------------------------------------------------------------
 908  8B73
 909  8B73 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 910  8B76 11 C6 88     	ld de,Filas
 911  8B79 01 08 00     	ld bc,8
 912  8B7C ED B0        	ldir
 913  8B7E C9           	ret
 914  8B7F
 915  8B7F              ; *************************************************************************************************************************************************************
 916  8B7F              ;
 917  8B7F              ; 8/1/23
 918  8B7F              ;
 919  8B7F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 920  8B7F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 921  8B7F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 922  8B7F
 923  8B7F              ; Destruye HL y DE !!!!!
 924  8B7F
 925  8B7F              Inicia_punteros_de_cajas
 926  8B7F
 927  8B7F 21 8C 85     	ld hl,Indice_de_cajas
 928  8B82 CD 83 8C         call Extrae_address
 929  8B85 22 06 89         ld (Puntero_store_caja),hl
 930  8B88 21 8E 85     	ld hl,Indice_de_cajas+2
 931  8B8B 22 0A 89     	ld (Indice_restore_caja),hl
 932  8B8E CD 83 8C     	call Extrae_address
 933  8B91 22 08 89     	ld (Puntero_restore_caja),hl
 934  8B94 C9               ret
 935  8B95
 936  8B95              ; ---------------------------------------------------------------
 937  8B95              ;
 938  8B95              ;	9/8/23
 939  8B95              ;
 940  8B95              ;	Inicialización y gestión de álbumes de fotos y cajas.
 941  8B95
 942  8B95              Inicia_punteros_de_albumes_y_malotes
 943  8B95
 944  8B95 21 EC 84     	ld hl,Indice_album_de_fotos
 945  8B98 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 946  8B9B CD 83 8C     	call Extrae_address
 947  8B9E 22 1A 89     	ld (Stack_snapshot),hl
 948  8BA1
 949  8BA1 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 950  8BA4 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 951  8BA7 CD 83 8C     	call Extrae_address
 952  8BAA 22 1C 89     	ld (Stack_snapshot_disparos),hl
 953  8BAD
 954  8BAD 21 FC 84     	ld hl,Indice_End_Snapshot
 955  8BB0 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 956  8BB3 CD 83 8C     	call Extrae_address
 957  8BB6 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 958  8BB9
 959  8BB9 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 960  8BBC 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 961  8BBF CD 83 8C     	call Extrae_address
 962  8BC2 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 963  8BC5
 964  8BC5 C9           	ret
 965  8BC6
 966  8BC6              ;	23/9/23
 967  8BC6
 968  8BC6              Avanza_puntero_de_album_de_fotos_y_malotes
 969  8BC6
 970  8BC6              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 971  8BC6
 972  8BC6              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 973  8BC6              ; Estamos en el último álbum del índice???.
 974  8BC6              ;
 975  8BC6
 976  8BC6 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 977  8BC9 01 F2 84     	ld bc,Indice_album_de_fotos+6
 978  8BCC A7           	and a
 979  8BCD ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 980  8BCF 20 0C        	jr nz,1F								 		; El buffer está lleno. HALT.
 981  8BD1
 982  8BD1              ; Estamos en Album_de_fotos_3.
 983  8BD1              ; Configuramos el semáforo de álbumes para indicar que todos están completos.
 984  8BD1
 985  8BD1 21 3C 89     	ld hl,Semaforo
 986  8BD4 CB DE        	set 3,(hl)
 987  8BD6
 988  8BD6 21 03 89     	ld hl,Ctrl_1
 989  8BD9 CB EE        	set 5,(hl)
 990  8BDB 76           	halt
 991  8BDC C9           	ret
 992  8BDD
 993  8BDD 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
 994  8BE0 23           	inc hl
 995  8BE1 23           	inc hl
 996  8BE2 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 997  8BE5 CD 83 8C     	call Extrae_address
 998  8BE8 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 999  8BEB
1000  8BEB 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1001  8BEE 23           	inc hl
1002  8BEF 23           	inc hl
1003  8BF0 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1004  8BF3 CD 83 8C     	call Extrae_address
1005  8BF6 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1006  8BF9
1007  8BF9 CD C9 73     	call Actualiza_semaforo
1008  8BFC
1009  8BFC C9           	ret
1010  8BFD
1011  8BFD              ; *************************************************************************************************************************************************************
1012  8BFD              ;
1013  8BFD              ; 8/1/23
1014  8BFD              ;
1015  8BFD              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1016  8BFD
1017  8BFD 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1018  8C00 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1019  8C03 C9           	ret
1020  8C04 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1021  8C07 22 41 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1022  8C0A C9           	ret
1023  8C0B
1024  8C0B              ; -------------------------------------------------------------------------------------------------------------
1025  8C0B              ;
1026  8C0B              ; 21/9/23
1027  8C0B              ;
1028  8C0B
1029  8C0B              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1030  8C0B
1031  8C0B              Limpia_album_Amadeus
1032  8C0B
1033  8C0B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1034  8C0E 7E           	ld a,(hl)
1035  8C0F A7           	and a
1036  8C10 C8           	ret z
1037  8C11
1038  8C11 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1039  8C14 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1040  8C17 01 0B 00     	ld bc,11
1041  8C1A AF           	xor a
1042  8C1B 77           	ld (hl),a
1043  8C1C ED B0        	ldir
1044  8C1E
1045  8C1E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1046  8C21 22 22 89     	ld (End_Snapshot_Amadeus),hl
1047  8C24
1048  8C24 C9           	ret
1049  8C25
1050  8C25 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1051  8C28 11 E1 88     	ld de,Variables_de_borrado+1
1052  8C2B 01 05 00     	ld bc,5
1053  8C2E AF           	xor a
1054  8C2F 77           	ld (hl),a
1055  8C30 ED B0        	ldir
1056  8C32 C9           	ret
1057  8C33
1058  8C33              ; -------------------------------------------------------------------------------------------------------------
1059  8C33              ;
1060  8C33              ; 8/9/23
1061  8C33              ;
1062  8C33
1063  8C33              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1064  8C33              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1065  8C33
1066  8C33              Calcula_numero_de_malotes
1067  8C33
1068  8C33 21 00 70     	ld hl,Album_de_fotos
1069  8C36 EB           	ex de,hl
1070  8C37 2A 1E 89     	ld hl,(End_Snapshot)
1071  8C3A
1072  8C3A 7C           	ld a,h
1073  8C3B A7           	and a
1074  8C3C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1075  8C3E
1076  8C3E 06 00        4 ld b,0
1077  8C40 7D           	ld a,l
1078  8C41 93           	sub e
1079  8C42 28 07        	jr z,1F
1080  8C44
1081  8C44              ; Nº de malotes no es "0".
1082  8C44
1083  8C44 D6 06        2 sub 6
1084  8C46 04           	inc b
1085  8C47 A7           	and a
1086  8C48 20 FA        	jr nz,2B
1087  8C4A 78           	ld a,b
1088  8C4B
1089  8C4B 32 0F 89     1 ld (Numero_de_malotes),a
1090  8C4E C9           	ret
1091  8C4F
1092  8C4F              ; -------------------------------------------------------------------------------------------------------------
1093  8C4F              ;
1094  8C4F              ; 8/9/23
1095  8C4F              ;
1096  8C4F
1097  8C4F              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1098  8C4F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1099  8C4F
1100  8C4F              Calcula_malotes_Amadeus
1101  8C4F
1102  8C4F 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1103  8C52 EB           	ex de,hl
1104  8C53 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1105  8C56
1106  8C56 7C           	ld a,h
1107  8C57 A7           	and a
1108  8C58 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1109  8C5A
1110  8C5A 06 00        	ld b,0
1111  8C5C 7D           	ld a,l
1112  8C5D 93           	sub e
1113  8C5E 28 07        	jr z,1F
1114  8C60
1115  8C60              ; Nº de malotes no es "0".
1116  8C60
1117  8C60 D6 06        2 sub 6
1118  8C62 04           	inc b
1119  8C63 A7           	and a
1120  8C64 20 FA        	jr nz,2B
1121  8C66 78           	ld a,b
1122  8C67
1123  8C67 32 0F 89     1 ld (Numero_de_malotes),a
1124  8C6A C9           	ret
1125  8C6B
1126  8C6B              ; -------------------------------------------------------------------------------------------------------------
1127  8C6B              ;
1128  8C6B              ; 28/2/23
1129  8C6B              ;
1130  8C6B
1131  8C6B              Calcula_numero_de_disparotes
1132  8C6B
1133  8C6B 21 50 71     	ld hl,Album_de_fotos_disparos
1134  8C6E EB           	ex de,hl
1135  8C6F 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1136  8C72
1137  8C72 06 00        	ld b,0
1138  8C74 7D           	ld a,l
1139  8C75 93           	sub e
1140  8C76 28 07        	jr z,1F
1141  8C78
1142  8C78              ; Nº de malotes no es "0".
1143  8C78
1144  8C78 D6 06        2 sub 6
1145  8C7A 04           	inc b
1146  8C7B A7           	and a
1147  8C7C 20 FA        	jr nz,2B
1148  8C7E 78           	ld a,b
1149  8C7F
1150  8C7F 32 3E 89     1 ld (Numero_de_disparotes),a
1151  8C82 C9           	ret
1152  8C83
1153  8C83              ; *************************************************************************************************************************************************************
1154  8C83              ;
1155  8C83              ; 20/10/22
1156  8C83              ;
1157  8C83              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1158  8C83              ;
1159  8C83              ; Destruye el puntero y DE !!!!!
1160  8C83
1161  8C83 5E           Extrae_address ld e,(hl)
1162  8C84 23           	inc hl
1163  8C85 56           	ld d,(hl)
1164  8C86 2B           	dec hl
1165  8C87 EB           	ex de,hl
1166  8C88 C9           	ret
1167  8C89
1168  8C89              ; *************************************************************************************************************************************************************
1169  8C89              ;
1170  8C89              ;	7/2/23
1171  8C89              ;
1172  8C89              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1173  8C89              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1174  8C89              ;
1175  8C89              ;   Destruye HL y BC !!!!!,
1176  8C89              ;
1177  8C89              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1178  8C89              ;					"0" ..... Izquierda.
1179  8C89
1180  8C89              Inicia_Puntero_objeto
1181  8C89
1182  8C89 3A DA 88     	ld a,(Cuad_objeto)
1183  8C8C E6 01        	and 1
1184  8C8E F5           	push af
1185  8C8F CC AD 8C     	call z,Inicia_puntero_objeto_izq
1186  8C92 F1           	pop af
1187  8C93 28 2B        	jr z,1F
1188  8C95 CD 9A 8C     	call Inicia_puntero_objeto_der
1189  8C98 18 26        	jr 1F
1190  8C9A
1191  8C9A              ; Arrancamos desde la parte izquierda de la pantalla.
1192  8C9A              ; Iniciamos (Indice_Sprite_der).
1193  8C9A
1194  8C9A 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1195  8C9D 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1196  8CA0 CD 83 8C     	call Extrae_address
1197  8CA3 22 CA 88     	ld (Puntero_objeto),hl
1198  8CA6
1199  8CA6 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1200  8CA9 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1201  8CAC C9           	ret
1202  8CAD
1203  8CAD              ; Arrancamos desde la parte derecha de la pantalla.
1204  8CAD              ; Iniciamos (Indice_Sprite_izq).
1205  8CAD
1206  8CAD 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1207  8CB0 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1208  8CB3 CD 83 8C     	call Extrae_address
1209  8CB6 22 CA 88     	ld (Puntero_objeto),hl
1210  8CB9
1211  8CB9 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1212  8CBC 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1213  8CBF C9           	ret
1214  8CC0
1215  8CC0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1216  8CC0
1217  8CC0 21 40 83     1 ld hl,Amadeus
1218  8CC3 ED 4B CA 88  	ld bc,(Puntero_objeto)
1219  8CC7 B7 ED 42     	sub hl,bc
1220  8CCA C0           	ret nz
1221  8CCB 21 F0 88     	ld hl,Ctrl_0
1222  8CCE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1223  8CD0 C9           	ret 												; _de nuestra nave en los extremos.
1224  8CD1
1225  8CD1              ; *************************************************************************************************************************************************************
1226  8CD1              ;
1227  8CD1              ;	14/5/23
1228  8CD1              ;
1229  8CD1              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1230  8CD1              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1231  8CD1
1232  8CD1              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1233  8CD1              ;	_de la 2ª y 3ª entidad respectivamente.
1234  8CD1
1235  8CD1              Store_Restore_cajas
1236  8CD1
1237  8CD1 E5           	push hl
1238  8CD2 D5           	push de
1239  8CD3 C5            	push bc
1240  8CD4
1241  8CD4              ;	STORE !!!!!
1242  8CD4              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1243  8CD4
1244  8CD4 21 C6 88     	ld hl,Filas
1245  8CD7 ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1246  8CDB 01 3D 00     	ld bc,61
1247  8CDE ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1248  8CE0
1249  8CE0              ; 	Entidad_sospechosa. 20/4/23
1250  8CE0
1251  8CE0 3A DF 88     	ld a,(Impacto)
1252  8CE3 A7           	and a
1253  8CE4 28 0C        	jr z,1F
1254  8CE6
1255  8CE6 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1256  8CE9 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1257  8CEC A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1258  8CED ED 4A        	adc hl,bc 											; _ "0" más adelante.
1259  8CEF 22 44 89     	ld (Entidad_sospechosa_de_colision),hl
1260  8CF2
1261  8CF2              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1262  8CF2
1263  8CF2 2A 08 89     1 ld hl,(Puntero_restore_caja)
1264  8CF5 7E           	ld a,(hl)
1265  8CF6 A7           	and a
1266  8CF7 F5           	push af
1267  8CF8 28 08        	jr z,2F
1268  8CFA
1269  8CFA 11 C6 88     	ld de,Filas
1270  8CFD 01 3D 00     	ld bc,61
1271  8D00 ED B0        	ldir
1272  8D02
1273  8D02 CD 1E 8D     2 call Incrementa_punteros_de_cajas
1274  8D05
1275  8D05 F1           	pop af
1276  8D06 28 EA        	jr z,1B
1277  8D08
1278  8D08 C1           	pop bc
1279  8D09 D1           	pop de
1280  8D0A E1           	pop hl
1281  8D0B
1282  8D0B C9           	ret
1283  8D0C
1284  8D0C              ; **************************************************************************************************
1285  8D0C              ;
1286  8D0C              ;	12/05/23
1287  8D0C              ;
1288  8D0C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1289  8D0C
1290  8D0C E5           Restore_entidad push hl
1291  8D0D D5           	push de
1292  8D0E C5            	push bc
1293  8D0F
1294  8D0F 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1295  8D12 11 C6 88     	ld de,Filas
1296  8D15 01 3D 00     	ld bc,61
1297  8D18 ED B0        	ldir
1298  8D1A
1299  8D1A C1           	pop bc
1300  8D1B D1           	pop de
1301  8D1C E1           	pop hl
1302  8D1D C9           	ret
1303  8D1E
1304  8D1E              ; **************************************************************************************************
1305  8D1E              ;
1306  8D1E              ;	08/05/23
1307  8D1E              ;
1308  8D1E              ;	Incrementamos los dos punteros de entidades. (+1).
1309  8D1E
1310  8D1E              Incrementa_punteros_de_cajas
1311  8D1E
1312  8D1E 2A 08 89     	ld hl,(Puntero_restore_caja)
1313  8D21 22 06 89     	ld (Puntero_store_caja),hl
1314  8D24 2A 0A 89     	ld hl,(Indice_restore_caja)
1315  8D27 23           	inc hl
1316  8D28 23           	inc hl
1317  8D29 22 0A 89     	ld (Indice_restore_caja),hl
1318  8D2C CD 83 8C         call Extrae_address
1319  8D2F 22 08 89         ld (Puntero_restore_caja),hl
1320  8D32 C9               ret
1321  8D33
1322  8D33              ; **************************************************************************************************
1323  8D33              ;
1324  8D33              ;	25/01/23
1325  8D33              ;
1326  8D33              ;	Restore_Amadeus
1327  8D33              ;
1328  8D33              ;	Cargamos en DRAW los parámetros de Amadeus.
1329  8D33              ;
1330  8D33
1331  8D33 E5           Restore_Amadeus	push hl
1332  8D34 D5           	push de
1333  8D35 C5            	push bc
1334  8D36 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1335  8D39 11 C6 88     	ld de,Filas
1336  8D3C 01 3D 00     	ld bc,61
1337  8D3F ED B0        	ldir
1338  8D41 C1           	pop bc
1339  8D42 D1           	pop de
1340  8D43 E1           	pop hl
1341  8D44 C9           	ret
1342  8D45
1343  8D45              ; *************************************************************************************************************************************************************
1344  8D45              ;
1345  8D45              ;	29/04/23
1346  8D45              ;
1347  8D45              ;	Store_Amadeus
1348  8D45              ;
1349  8D45              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1350  8D45              ;
1351  8D45              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1352  8D45              ;
1353  8D45              ;	DESTRUYE: HL y BC y DE.
1354  8D45
1355  8D45 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1356  8D48 01 3D 00     	ld bc,61
1357  8D4B ED B0        	ldir
1358  8D4D C9           	ret
1359  8D4E
1360  8D4E              ; -----------------------------------------------------------
1361  8D4E              ;
1362  8D4E              ;	27/04/23
1363  8D4E              ;
1364  8D4E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1365  8D4E              ;
1366  8D4E              ;	Destruye: HL,BC,DE,A
1367  8D4E
1368  8D4E 21 C6 88     Borra_datos_entidad ld hl,Filas
1369  8D51 01 3C 00     	ld bc,60
1370  8D54 AF           	xor a
1371  8D55 77           	ld (hl),a
1372  8D56 11 C7 88     	ld de,Filas+1
1373  8D59 ED B0        	ldir
1374  8D5B C9           	ret
1375  8D5C
1376  8D5C              ; -----------------------------------------------------------
1377  8D5C
1378  8D5C              ; Teclado.
1379  8D5C
1380  8D5C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1381  8D5E DB FE        	in a,($fe)
1382  8D60 E6 01        	and $01
1383  8D62 28 02        	jr z,1f
1384  8D64 18 F6        	jr Pulsa_ENTER
1385  8D66 C9           1 ret
1386  8D67
1387  8D67              ; **************************************************************************************************
1388  8D67              ;
1389  8D67              ; Temporización.
1390  8D67
1391  8D67              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1392  8D67              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1393  8D67              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1394  8D67              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1395  8D67
1396  8D67              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1397  8D67              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1398  8D67              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1399  8D67
1400  8D67              ; A partir de $4f61 no hace falta DELAY.
1401  8D67
1402  8D67              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1403  8D67
1404  8D67 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1405  8D6A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1406  8D6B 78           	LD A,B
1407  8D6C A7           	AND A
1408  8D6D 20 FB        	JR NZ,wait
1409  8D6F C9           	RET
1410  8D70
1411  8D70              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1412  8D70              ;
1413  8D70              ;	5/3/23
1414  8D70              ;
1415  8D70              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1416  8D70
1417  8D70              Movimiento_Amadeus
1418  8D70
1419  8D70              ; Disparo.
1420  8D70
1421  8D70 3A 56 89     	ld a,(Disparo_Amadeus)
1422  8D73 A7           	and a
1423  8D74 20 02        	jr nz,1F
1424  8D76 18 15        	jr 2F
1425  8D78
1426  8D78 3E F7        1 ld a,$f7													; "5" para disparar.
1427  8D7A DB FE        	in a,($fe)
1428  8D7C E6 10        	and $10
1429  8D7E
1430  8D7E F5           	push af
1431  8D7F CC 4E 8E     	call z,Genera_disparo
1432  8D82 F1           	pop af
1433  8D83 20 08        	jr nz,2F
1434  8D85
1435  8D85 3A 56 89     	ld a,(Disparo_Amadeus)
1436  8D88 EE 01        	xor 1
1437  8D8A 32 56 89     	ld (Disparo_Amadeus),a
1438  8D8D
1439  8D8D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1440  8D8F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1441  8D91 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1442  8D93 CC 1F 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1443  8D96
1444  8D96 3E F7        	ld a,$f7
1445  8D98 DB FE        	in a,($fe)
1446  8D9A E6 01        	and $01
1447  8D9C C8           	ret z
1448  8D9D
1449  8D9D 3E F7        	ld a,$f7
1450  8D9F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1451  8DA1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1452  8DA3 CC 01 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1453  8DA6 C9           	ret
1454  8DA7
1455  8DA7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1456  8DA7              ;
1457  8DA7              ;	Rutina provisional para que los malotes cagen balas.
1458  8DA7
1459  8DA7              Detecta_disparo_entidad
1460  8DA7
1461  8DA7 3A 59 89     	ld a,(Disparo_entidad)
1462  8DAA A7           	and a
1463  8DAB C8           	ret z
1464  8DAC
1465  8DAC              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1466  8DAC
1467  8DAC              ;	ld a,$7f				; Detecta SPACE.
1468  8DAC              ;	in a,($fe)
1469  8DAC              ;	and 1
1470  8DAC              ;	ret nz
1471  8DAC
1472  8DAC              ;	call Genera_disparo
1473  8DAC C9           	ret
1474  8DAD
1475  8DAD              ; ----------------------------------------------------------------------
1476  8DAD              ;
1477  8DAD              ;	8/9/23
1478  8DAD
1479  8DAD 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1480  8DB0 2B            	dec hl
1481  8DB1 7E           	ld a,(hl)
1482  8DB2 A7           	and a
1483  8DB3 C8           	ret z										; Salimos si es álbum está vacío.
1484  8DB4
1485  8DB4 11 E5 88     	ld de,Variables_de_borrado+5
1486  8DB7 01 06 00     	ld bc,6
1487  8DBA ED B8        	lddr
1488  8DBC C9           	ret
1489  8DBD
1490  8DBD              ; ----------------------------------------------------------------------
1491  8DBD              ;
1492  8DBD              ;	9/9/23
1493  8DBD
1494  8DBD              Repone_datos_de_borrado_Amadeus
1495  8DBD
1496  8DBD 21 E0 88     	ld hl,Variables_de_borrado
1497  8DC0 11 A0 72     	ld de,Album_de_fotos_Amadeus
1498  8DC3 01 06 00     	ld bc,6
1499  8DC6 ED B0        	ldir
1500  8DC8
1501  8DC8 EB           	ex de,hl
1502  8DC9 22 22 89     	ld (End_Snapshot_Amadeus),hl
1503  8DCC
1504  8DCC C9           	ret
1505  8DCD
1506  8DCD              ; ----------------------------------------------------------------------
1507  8DCD              ;
1508  8DCD              ;	18/9/23
1509  8DCD              ;
1510  8DCD
1511  8DCD              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1512  8DCD              ;	_ Album_de_fotos correspondiente.
1513  8DCD
1514  8DCD              ;	DI.
1515  8DCD
1516  8DCD              Repone_datos_de_borrado
1517  8DCD
1518  8DCD ED 5B 1A 89  	ld de,(Stack_snapshot)
1519  8DD1 21 E0 88     	ld hl,Variables_de_borrado
1520  8DD4 01 06 00     	ld bc,6
1521  8DD7 ED B0        	ldir
1522  8DD9
1523  8DD9 EB           	ex de,hl
1524  8DDA 22 1A 89     	ld (Stack_snapshot),hl
1525  8DDD
1526  8DDD C9           	ret
1527  8DDE
1528  8DDE              ; ----------------------------------------------------------------------
1529  8DDE              ;
1530  8DDE              ;	11/8/23
1531  8DDE
1532  8DDE              Gestiona_entidades
1533  8DDE
1534  8DDE              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1535  8DDE
1536  8DDE 3A 3C 89     	ld a,(Semaforo)
1537  8DE1 CB 47        	bit 0,a
1538  8DE3 28 FE        	jr z,$	;! STOP el buffer está vacío. Album_de_fotos no está completo.
1539  8DE5 C8           	ret z
1540  8DE6
1541  8DE6              ;	call Extrae_foto_disparos
1542  8DE6              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1543  8DE6
1544  8DE6 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1545  8DE9
1546  8DE9              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1547  8DE9
1548  8DE9              ;	Album incompleto ?????
1549  8DE9              ;	Si es así, inicializamos el bit 4 de (Semaforo) y salimos de la rutina.
1550  8DE9
1551  8DE9 3A 3C 89     	ld a,(Semaforo)
1552  8DEC CB 7F        	bit 7,a
1553  8DEE 20 1A        	jr nz,3F
1554  8DF0
1555  8DF0 3A 03 89     	ld a,(Ctrl_1)
1556  8DF3 CB 6F        	bit 5,a
1557  8DF5 20 00        	jr nz,1F
1558  8DF7
1559  8DF7              ; No hemos terminado de guardar el último FRAME.
1560  8DF7
1561  8DF7              ;	ld hl,(Puntero_indice_album_de_fotos)
1562  8DF7              ;	dec hl
1563  8DF7              ;	dec hl
1564  8DF7              ;	ld (Puntero_indice_album_de_fotos),hl
1565  8DF7
1566  8DF7              ;	ld hl,(Puntero_indice_End_Snapshot)
1567  8DF7              ;	dec hl
1568  8DF7              ;	dec hl
1569  8DF7              ;	ld (Puntero_indice_End_Snapshot),hl
1570  8DF7              ;	call Extrae_address
1571  8DF7              ;	ld (Puntero_de_End_Snapshot),hl
1572  8DF7
1573  8DF7              ;	call Extrae_address
1574  8DF7
1575  8DF7              ; Esta vacío este album???
1576  8DF7
1577  8DF7              ;	inc h
1578  8DF7              ;	dec h
1579  8DF7              ;	jr z,1F
1580  8DF7
1581  8DF7              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1582  8DF7
1583  8DF7              ;	ld (Stack_snapshot),hl
1584  8DF7              ;	jr 2F
1585  8DF7
1586  8DF7              ; FRAME completo.
1587  8DF7
1588  8DF7 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1589  8DFA CD 83 8C     	call Extrae_address
1590  8DFD 22 1A 89     	ld (Stack_snapshot),hl
1591  8E00
1592  8E00              ;	En este punto:
1593  8E00
1594  8E00              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1595  8E00              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1596  8E00
1597  8E00 21 03 89     2 ld hl,Ctrl_1
1598  8E03 CB AE        	res 5,(hl)
1599  8E05
1600  8E05              ;	Album_de_fotos_3 vuelve a estar vacío.
1601  8E05
1602  8E05 21 3C 89     	ld hl,Semaforo
1603  8E08 CB 9E        	res 3,(hl)
1604  8E0A
1605  8E0A CB BE        3 res 7,(hl)
1606  8E0C
1607  8E0C C9           	ret
1608  8E0D
1609  8E0D              ; -----------------------------------------------------------------------------------
1610  8E0D
1611  8E0D              Pinta_Amadeus
1612  8E0D
1613  8E0D 3E 06        	ld a,6
1614  8E0F D3 FE            out ($fe),a										; Amarillo
1615  8E11
1616  8E11 CD 4F 8C        	call Calcula_malotes_Amadeus
1617  8E14 CD D4 96     	call Extrae_foto_Amadeus
1618  8E17 CD 0B 8C     	call Limpia_album_Amadeus
1619  8E1A
1620  8E1A C9           	ret
1621  8E1B
1622  8E1B              Pinta_entidades
1623  8E1B
1624  8E1B 3A 3C 89     	ld a,(Semaforo)
1625  8E1E CB 47        	bit 0,a
1626  8E20 C8           	ret z
1627  8E21
1628  8E21              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1629  8E21
1630  8E21 CD 33 8C     	call Calcula_numero_de_malotes
1631  8E24 CD 52 96     	call Extrae_foto_entidades
1632  8E27
1633  8E27 C9           	ret
1634  8E28
1635  8E28              ; -----------------------------------------------------------------------------------
1636  8E28
1637  8E28              Actualiza_relojes
1638  8E28
1639  8E28 21 51 89     	ld hl,Contador_de_frames
1640  8E2B 7E           	ld a,(hl)
1641  8E2C FE FF        	cp $ff
1642  8E2E 20 04        	jr nz,1F
1643  8E30 34           	inc (hl)
1644  8E31 21 52 89     	ld hl,Contador_de_frames_2
1645  8E34 34           1 inc (hl)											; 0 - 255
1646  8E35 C9           	ret
1647  8E36
1648  8E36              ; ---------------------------------------------------------------
1649  8E36              ;
1650  8E36              ;	27/9/23
1651  8E36
1652  8E36              Guarda_parametros_DRAW
1653  8E36
1654  8E36 21 C6 88     	ld hl,Filas
1655  8E39 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1656  8E3C 01 3D 00     	ld bc,61
1657  8E3F ED B0        	ldir
1658  8E41 C9           	ret
1659  8E42
1660  8E42              Recupera_parametros_DRAW
1661  8E42
1662  8E42 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1663  8E45 11 C6 88     	ld de,Filas
1664  8E48 01 3D 00     	ld bc,61
1665  8E4B ED B0        	ldir
1666  8E4D C9           	ret
1667  8E4E
1668  8E4E              ; ---------------------------------------------------------------
1669  8E4E
1670  8E4E
1671  8E4E              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E4E              ; ******************************************************************************************************************************************************************************************
   2+ 8E4E              ;
   3+ 8E4E              ;   21/07/23
   4+ 8E4E              ;
   5+ 8E4E              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E4E              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E4E              ;
   8+ 8E4E              ;
   9+ 8E4E              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E4E              ;
  11+ 8E4E              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E4E              ;               _ hacen las entidades hacia abajo.
  13+ 8E4E              ;
  14+ 8E4E              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E4E              ;
  16+ 8E4E              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E4E              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E4E              ;
  19+ 8E4E              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E4E              ;           _ la bala.
  21+ 8E4E              ;
  22+ 8E4E              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E4E              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E4E              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E4E              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E4E              ;           _ en el momento de generarse la bala)).
  27+ 8E4E
  28+ 8E4E              Genera_disparo
  29+ 8E4E
  30+ 8E4E              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E4E              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E4E              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E4E              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E4E              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E4E              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E4E              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E4E
  38+ 8E4E              ; Exclusiones:
  39+ 8E4E
  40+ 8E4E 3A DE 88         ld a,(Vel_down)
  41+ 8E51 47               ld b,a
  42+ 8E52 3A 50 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E55 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E56 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E57 3A FD 88         ld a,(Columnas)
  46+ 8E5A 47               ld b,a
  47+ 8E5B 3A C7 88         ld a,(Columns)
  48+ 8E5E B8               cp b
  49+ 8E5F C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E60
  51+ 8E60              ; ----- ----- -----
  52+ 8E60
  53+ 8E60 3A F0 88         ld a,(Ctrl_0)
  54+ 8E63 CB 77            bit 6,a
  55+ 8E65 20 06            jr nz,14F
  56+ 8E67
  57+ 8E67 3A CD 88         ld a,(Coordenada_y)
  58+ 8E6A FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E6C D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E6D
  61+ 8E6D 21 00 80     14 ld hl,Indice_disparo
  62+ 8E70 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8E73 4F               ld c,a
  64+ 8E74 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E76              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E76              ;                                            ""        ""       "f9", B="1"
  67+ 8E76              ;                                            ""        ""       "fb", B="2"
  68+ 8E76              ;                                            ""        ""       "fb", B="3"
  69+ 8E76 A7               and a
  70+ 8E77 28 10            jr z,1F
  71+ 8E79 E6 01            and 1
  72+ 8E7B C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E7C
  74+ 8E7C 79               ld a,c
  75+ 8E7D 16 F9            ld d,$f9
  76+ 8E7F 23           2 inc hl
  77+ 8E80 23               inc hl
  78+ 8E81 04               inc b
  79+ 8E82 BA               cp d
  80+ 8E83 28 04            jr z,1F
  81+ 8E85 14               inc d
  82+ 8E86 14               inc d
  83+ 8E87 18 F6            jr 2B
  84+ 8E89
  85+ 8E89 CD 83 8C     1 call Extrae_address
  86+ 8E8C E5               push hl
  87+ 8E8D FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E8F DD 21 1A 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E93
  90+ 8E93              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E93              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E93
  93+ 8E93 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E96 CB 77            bit 6,a
  95+ 8E98 20 04            jr nz,19F
  96+ 8E9A
  97+ 8E9A AF               xor a
  98+ 8E9B 32 59 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E9E
 100+ 8E9E 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8EA1 FE 02            cp 2
 102+ 8EA3 38 66            jr c,3F
 103+ 8EA5 28 64            jr z,3F
 104+ 8EA7
 105+ 8EA7              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EA7
 107+ 8EA7 E6 01            and 1
 108+ 8EA9 28 30            jr z,4F
 109+ 8EAB
 110+ 8EAB              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EAB              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EAB              ;
 113+ 8EAB              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EAB              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EAB              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EAB
 117+ 8EAB 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8EAE
 119+ 8EAE              ;   Amadeus o entidad ???.
 120+ 8EAE
 121+ 8EAE 3A F0 88         ld a,(Ctrl_0)
 122+ 8EB1 CB 77            bit 6,a
 123+ 8EB3 28 0A            jr z,8F
 124+ 8EB5
 125+ 8EB5              ; 	Dispara Amadeus.
 126+ 8EB5
 127+ 8EB5 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EB7 CD 43 96         call PreviousScan
 129+ 8EBA CD 43 96         call PreviousScan
 130+ 8EBD
 131+ 8EBD              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EBD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EBD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EBD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EBD
 136+ 8EBD 18 11            jr 10F
 137+ 8EBF
 138+ 8EBF              ; 	Dispara Entidad.
 139+ 8EBF
 140+ 8EBF 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EC2              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EC2
 143+ 8EC2              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EC2              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EC2
 146+ 8EC2 C5               push bc
 147+ 8EC3 06 10            ld b,16
 148+ 8EC5 CD 34 96     9 call NextScan
 149+ 8EC8 10 FB            djnz 9B
 150+ 8ECA C1               pop bc
 151+ 8ECB CD 35 8F         call Ajusta_disparo_parte_izquierda
 152+ 8ECE 18 06            jr 17F
 153+ 8ED0
 154+ 8ED0              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8ED0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8ED0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8ED0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8ED0
 159+ 8ED0 CD 35 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8ED3 CD AA 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8ED6              ;                                                      ; _al generar el disparo.
 162+ 8ED6
 163+ 8ED6              ; 	LLegados a este punto tendremos:
 164+ 8ED6              ;
 165+ 8ED6              ;       Puntero_objeto_disparo en IY.
 166+ 8ED6              ;       Rutinas_de_impresion en IX.
 167+ 8ED6              ;       Puntero_de_impresion en HL.
 168+ 8ED6              ;       Impacto/Dirección en BC.
 169+ 8ED6
 170+ 8ED6 CD 3D 8F     17 call Almacena_disparo
 171+ 8ED9 18 52            jr 6F                                             ; RET.
 172+ 8EDB
 173+ 8EDB              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EDB              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EDB              ;
 176+ 8EDB              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EDB              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EDB              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EDB
 180+ 8EDB 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8EDE
 182+ 8EDE              ;   Amadeus o entidad ???.
 183+ 8EDE
 184+ 8EDE 3A F0 88         ld a,(Ctrl_0)
 185+ 8EE1 CB 77            bit 6,a
 186+ 8EE3 28 0A            jr z,11F
 187+ 8EE5
 188+ 8EE5              ; 	Dispara Amadeus.
 189+ 8EE5
 190+ 8EE5 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EE7 CD 43 96         call PreviousScan
 192+ 8EEA CD 43 96         call PreviousScan
 193+ 8EED
 194+ 8EED              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EED              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EED              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EED              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EED
 199+ 8EED 18 11            jr 13F
 200+ 8EEF
 201+ 8EEF              ; 	Dispara Entidad.
 202+ 8EEF
 203+ 8EEF 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EF2              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EF2
 206+ 8EF2              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EF2              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EF2
 209+ 8EF2 C5               push bc
 210+ 8EF3 06 10            ld b,16
 211+ 8EF5 CD 34 96     12 call NextScan
 212+ 8EF8 10 FB            djnz 12B
 213+ 8EFA C1               pop bc
 214+ 8EFB
 215+ 8EFB CD 2E 8F         call Ajusta_disparo_parte_derecha
 216+ 8EFE 18 06            jr 18F
 217+ 8F00
 218+ 8F00              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F00              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F00              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F00              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F00
 223+ 8F00 CD 2E 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F03 CD AA 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F06              ;                                                       ; _al generar el disparo.
 226+ 8F06
 227+ 8F06              ; LLegados a este punto tendremos:
 228+ 8F06              ;
 229+ 8F06              ;       Puntero_objeto_disparo en IY.
 230+ 8F06              ;       Rutinas_de_impresion en IX.
 231+ 8F06              ;       Puntero_de_impresion en HL.
 232+ 8F06              ;       Impacto/Dirección en BC.
 233+ 8F06
 234+ 8F06 CD 3D 8F     18 call Almacena_disparo
 235+ 8F09 18 22            jr 6F                                               ; RET.
 236+ 8F0B
 237+ 8F0B              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F0B
 239+ 8F0B 28 11        3 jr z,5F
 240+ 8F0D
 241+ 8F0D              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F0D              ;
 243+ 8F0D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F0D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F0D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F0D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F0D
 248+ 8F0D              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F0D              ;	   ""        ""       "f9", B="1"
 250+ 8F0D              ;	   ""        ""       "fb", B="2"
 251+ 8F0D              ; 	   ""        ""       "fb", B="3"
 252+ 8F0D
 253+ 8F0D 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8F10 CD 34 96     	call NextScan
 255+ 8F13
 256+ 8F13              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F13              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F13              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F13              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F13
 261+ 8F13 CD 35 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F16
 263+ 8F16              ; 	No se produce impacto. B="$80"
 264+ 8F16              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F16
 266+ 8F16 01 80 80         ld bc,$8080
 267+ 8F19
 268+ 8F19              ; 	LLegados a este punto tendremos:
 269+ 8F19              ;
 270+ 8F19              ;       Puntero_objeto_disparo en IY.
 271+ 8F19              ;       Rutinas_de_impresion en IX.
 272+ 8F19              ;       Puntero_de_impresion en HL.
 273+ 8F19              ;       Impacto/Dirección en BC.
 274+ 8F19
 275+ 8F19 CD 3D 8F         call Almacena_disparo
 276+ 8F1C 18 0F            jr 6F                                           ; RET.
 277+ 8F1E
 278+ 8F1E              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F1E              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F1E              ;
 281+ 8F1E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F1E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F1E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F1E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F1E
 286+ 8F1E 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F21 CD 34 96     	call NextScan
 288+ 8F24
 289+ 8F24              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F24              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F24              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F24              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F24
 294+ 8F24 CD 2E 8F         call Ajusta_disparo_parte_derecha
 295+ 8F27
 296+ 8F27              ; 	No se produce impacto. B="$80"
 297+ 8F27              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F27
 299+ 8F27 01 80 80     15 ld bc,$8080
 300+ 8F2A
 301+ 8F2A              ; 	LLegados a este punto tendremos:
 302+ 8F2A              ;
 303+ 8F2A              ;       Puntero_objeto_disparo en IY.
 304+ 8F2A              ;       Rutinas_de_impresion en IX.
 305+ 8F2A              ;       Puntero_de_impresion en HL.
 306+ 8F2A              ;       Impacto/Dirección en BC.
 307+ 8F2A
 308+ 8F2A CD 3D 8F         call Almacena_disparo
 309+ 8F2D
 310+ 8F2D C9           6 ret
 311+ 8F2E
 312+ 8F2E              ; ----------------------------------------------------------------
 313+ 8F2E              ;
 314+ 8F2E              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F2E              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F2E              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F2E
 318+ 8F2E 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F2F FE 02            cp 2
 320+ 8F31 38 01            jr c,1F
 321+ 8F33 23               inc hl
 322+ 8F34 C9           1 ret
 323+ 8F35
 324+ 8F35 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F36 FE 01        	cp 1
 326+ 8F38 20 01        	jr nz,1F
 327+ 8F3A 2B           	dec hl
 328+ 8F3B 2B           1 dec hl
 329+ 8F3C C9               ret
 330+ 8F3D
 331+ 8F3D              ; ----------------------------------------------------------------
 332+ 8F3D              ;
 333+ 8F3D              ;   25/02/23
 334+ 8F3D              ;
 335+ 8F3D              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F3D              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F3D              ;
 338+ 8F3D              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F3D              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F3D
 341+ 8F3D              Almacena_disparo
 342+ 8F3D
 343+ 8F3D E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F3E F1               pop af
 345+ 8F3F 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F40
 347+ 8F40 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F41 E6 01            and 1
 349+ 8F43 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F45              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F45              ; 	Dispara AMADEUS.
 352+ 8F45
 353+ 8F45              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F45              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F45              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F45              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F45
 358+ 8F45 C5               push bc
 359+ 8F46 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F49 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F4C A7               and a
 362+ 8F4D ED 42            sbc hl,bc
 363+ 8F4F CC 04 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F52 C1               pop bc
 365+ 8F53 28 54            jr z,4F
 366+ 8F55
 367+ 8F55 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F58 23               inc hl
 369+ 8F59 23               inc hl
 370+ 8F5A 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F5D              ;                                                   ; _ Disparo_(+1).
 372+ 8F5D 18 18            jr 2F
 373+ 8F5F
 374+ 8F5F              ; Dispara una entidad.
 375+ 8F5F
 376+ 8F5F C5           1 push bc
 377+ 8F60 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F63 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F66 A7               and a
 380+ 8F67 ED 42            sbc hl,bc
 381+ 8F69 CC FD 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F6C C1               pop bc
 383+ 8F6D 28 3A            jr z,4F
 384+ 8F6F
 385+ 8F6F 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F72 23               inc hl
 387+ 8F73 23               inc hl
 388+ 8F74 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F77              ;                                                   ; _ Disparo_(+1).
 390+ 8F77 CD 83 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F7A              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F7A              ;
 393+ 8F7A              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F7A              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F7A              ;                                                     Puntero_de_impresion en HL.
 396+ 8F7A              ;                                                     Impacto/Dirección en BC.
 397+ 8F7A
 398+ 8F7A 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F7B 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F7C 23               inc hl                                          ; _ al siguiente.
 401+ 8F7D A7               and a
 402+ 8F7E 20 C0            jr nz,3B
 403+ 8F80
 404+ 8F80 08               ex af,af
 405+ 8F81 ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F85 F9               ld sp,hl
 407+ 8F86
 408+ 8F86 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F88 F5               push af                                         ; Puntero de impresión.
 410+ 8F89 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F8B C5               push bc                                         ; Control.
 412+ 8F8C
 413+ 8F8C ED 7B 14 89      ld sp,(Stack)
 414+ 8F90
 415+ 8F90              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F90
 417+ 8F90 21 03 89     	ld hl,Ctrl_1
 418+ 8F93 CB C6        	set 0,(hl)
 419+ 8F95
 420+ 8F95 DD E5        	push ix
 421+ 8F97 E1               pop hl
 422+ 8F98 F5               push af
 423+ 8F99 DD E1            pop ix
 424+ 8F9B
 425+ 8F9B CD A0 7F     	call Guarda_foto_registros
 426+ 8F9E
 427+ 8F9E 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FA1 CB 86        	res 0,(hl)
 429+ 8FA3
 430+ 8FA3              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FA3              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FA3
 433+ 8FA3 CD 04 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FA6 CD FD 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8FA9
 436+ 8FA9 C9           4 ret
 437+ 8FAA
 438+ 8FAA              ; ----------------------------------------------------------------
 439+ 8FAA              ;
 440+ 8FAA              ;   4/3/23
 441+ 8FAA              ;
 442+ 8FAA              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FAA              ;   _ al generarse el disparo.
 444+ 8FAA              ;
 445+ 8FAA              ;       "$80" ..... No se produce colisión.
 446+ 8FAA              ;       "$81" ..... Se produce colisión.
 447+ 8FAA              ;
 448+ 8FAA              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FAA              ;         _ que forman el disparo.
 450+ 8FAA
 451+ 8FAA
 452+ 8FAA              Comprueba_Colision
 453+ 8FAA
 454+ 8FAA              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FAA
 456+ 8FAA FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FAC E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FAD
 459+ 8FAD CD E3 8F         call Modifica_H_Velocidad_disparo
 460+ 8FB0
 461+ 8FB0 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FB1 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FB3 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FB5
 465+ 8FB5 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FB7 CD D3 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FBA
 468+ 8FBA 7B               ld a,e
 469+ 8FBB E6 01            and 1
 470+ 8FBD 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FBF              ;                                                  ; _ para activar IMPACTO.
 472+ 8FBF E1               pop hl
 473+ 8FC0 E5               push hl
 474+ 8FC1 CD 34 96         call NextScan
 475+ 8FC4
 476+ 8FC4 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FC5 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FC7 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FC9              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FC9 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FCB CD D3 8F         call Bucle_2
 482+ 8FCE
 483+ 8FCE 43           1 ld b,e
 484+ 8FCF E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FD0 FD E1            pop iy
 486+ 8FD2 C9               ret
 487+ 8FD3
 488+ 8FD3              ; ---------- ----------
 489+ 8FD3
 490+ 8FD3 06 02        Bucle_2 ld b,2
 491+ 8FD5 FD 7E 00     2 ld a,(iy)
 492+ 8FD8 A6               and (hl)
 493+ 8FD9 28 02            jr z,1F
 494+ 8FDB 1E 81            ld e,$81
 495+ 8FDD 23           1 inc hl
 496+ 8FDE FD 23            inc iy
 497+ 8FE0 10 F3            djnz 2B
 498+ 8FE2 C9               ret
 499+ 8FE3
 500+ 8FE3              ; ---------- ----------
 501+ 8FE3              ;
 502+ 8FE3              ;   21/7/23
 503+ 8FE3
 504+ 8FE3              Modifica_H_Velocidad_disparo
 505+ 8FE3
 506+ 8FE3 3A 50 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FE6 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FE8 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FE9 24               inc h
 510+ 8FEA
 511+ 8FEA C9               ret
 512+ 8FEB
 513+ 8FEB              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FEB              ;
 515+ 8FEB              ;   11/04/23
 516+ 8FEB              ;
 517+ 8FEB              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FEB              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FEB              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FEB              ;
 521+ 8FEB              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FEB
 523+ 8FEB              Compara_coordenadas_X
 524+ 8FEB
 525+ 8FEB              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FEB              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FEB
 528+ 8FEB              ; Preparamos registros:
 529+ 8FEB
 530+ 8FEB 21 CC 88         ld hl,Filas+6
 531+ 8FEE 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FEF 23               inc hl
 533+ 8FF0 23               inc hl
 534+ 8FF1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FF2 43               ld b,e
 536+ 8FF3
 537+ 8FF3 21 DA 88         ld hl,Filas+20
 538+ 8FF6 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FF7 21 4B 89         ld hl,Coordenadas_X_Entidad
 540+ 8FFA CD 16 92         call Guarda_coordenadas_X
 541+ 8FFD
 542+ 8FFD              ; Preparamos registros:
 543+ 8FFD
 544+ 8FFD 21 A4 85         ld hl,Amadeus_db+6
 545+ 9000 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9001 23               inc hl
 547+ 9002 23               inc hl
 548+ 9003 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9004 7B               ld a,e
 550+ 9005 08               ex af,af'
 551+ 9006 21 B2 85         ld hl,Amadeus_db+20
 552+ 9009 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 900A 21 48 89         ld hl,Coordenadas_X_Amadeus
 554+ 900D CD 16 92         call Guarda_coordenadas_X
 555+ 9010
 556+ 9010              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9010              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9010
 559+ 9010 04               inc b
 560+ 9011 05               dec b
 561+ 9012 28 04            jr z,1F
 562+ 9014 06 03            ld b,3
 563+ 9016 18 02            jr 2F
 564+ 9018 06 02        1 ld b,2
 565+ 901A 08           2 ex af,af'
 566+ 901B 3C               inc a
 567+ 901C 3D               dec a
 568+ 901D 28 04            jr z,5F
 569+ 901F 0E 03            ld c,3
 570+ 9021 18 02            jr 6F
 571+ 9023 0E 02        5 ld c,2
 572+ 9025 79           6 ld a,c
 573+ 9026 08               ex af,af'
 574+ 9027 11 4B 89         ld de,Coordenadas_X_Entidad
 575+ 902A 1A           4 ld a,(de)
 576+ 902B 21 48 89         ld hl,Coordenadas_X_Amadeus
 577+ 902E BE           3 cp (hl)
 578+ 902F 28 0E            jr z,7F
 579+ 9031 23               inc hl
 580+ 9032 0D               dec c
 581+ 9033 20 F9            jr nz,3B
 582+ 9035 13               inc de
 583+ 9036 08               ex af,af'
 584+ 9037 4F               ld c,a
 585+ 9038 08               ex af,af'
 586+ 9039 10 EF            djnz 4B
 587+ 903B
 588+ 903B              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 903B
 590+ 903B CD 52 92     8 call Limpia_Coordenadas_X
 591+ 903E C9               ret
 592+ 903F
 593+ 903F 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9041 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9044 21 43 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9047 CB D6            set 2,(hl)
 597+ 9049 18 F0            jr 8B
 598+ 904B
 599+ 904B              ; -----------------------------------------------------------------------
 600+ 904B              ;
 601+ 904B              ;   17/04/23
 602+ 904B              ;
 603+ 904B
 604+ 904B              Detecta_colision_nave_entidad
 605+ 904B
 606+ 904B              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 904B
 608+ 904B 2A C8 88         ld hl,(Posicion_actual)
 609+ 904E CD 8F 95         call Calcula_puntero_de_impresion
 610+ 9051
 611+ 9051              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9051              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9051
 614+ 9051 DD E5            push ix
 615+ 9053 E1               pop hl
 616+ 9054 E5               push hl
 617+ 9055
 618+ 9055              ; ----- ----- -----
 619+ 9055 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9057 06 0A            ld b,10
 621+ 9059 CD 89 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 905C 7B               ld a,e
 623+ 905D FE 05            cp 5
 624+ 905F 38 0E            jr c,3F
 625+ 9061
 626+ 9061              ; LLegados a este punto:
 627+ 9061              ;
 628+ 9061              ;   HAY COLISIÓN !!!!!.
 629+ 9061              ;
 630+ 9061              ;   .db (Impacto) de Amadeus a "1".
 631+ 9061              ;   SET el bit3 de (Impacto2).
 632+ 9061              ;
 633+ 9061              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9061
 635+ 9061 21 B7 85         ld hl,Amadeus_db+25
 636+ 9064 36 01            ld (hl),1
 637+ 9066 21 43 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9069 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 906B CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 906D 18 18            jr 1F
 641+ 906F
 642+ 906F              ; -----
 643+ 906F
 644+ 906F E1           3 pop hl
 645+ 9070 CD 34 96         call NextScan
 646+ 9073 E5               push hl
 647+ 9074 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9075 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9077 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9079 30 0C            jr nc,1F
 651+ 907B              ;                                                  ; _ 2º scanline si esto es así.
 652+ 907B 10 DC            djnz 2B
 653+ 907D
 654+ 907D              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 907D
 656+ 907D              ; LLegados a este punto:
 657+ 907D              ;
 658+ 907D              ;   NO HAY COLISIÓN !!!!!.
 659+ 907D              ;
 660+ 907D              ;   .db (Impacto) de Amadeus a "0".
 661+ 907D              ;   RES el bit2 de (Impacto2).
 662+ 907D              ;
 663+ 907D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 907D              ;   Lo colocamos a "0".
 665+ 907D
 666+ 907D 21 43 89         ld hl,Impacto2
 667+ 9080 CB 96            res 2,(hl)
 668+ 9082 2A 44 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9085 36 00            ld (hl),0
 670+ 9087
 671+ 9087 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9088 C9               ret
 673+ 9089
 674+ 9089               ; ---------- ----------
 675+ 9089
 676+ 9089 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 908A 3A C7 88         ld a,(Columns)
 678+ 908D 47               ld b,a
 679+ 908E FD 7E 00     2 ld a,(iy)
 680+ 9091 BE               cp (hl)
 681+ 9092 28 01            jr z,1F
 682+ 9094
 683+ 9094 1C               inc e
 684+ 9095
 685+ 9095 23           1 inc hl
 686+ 9096 FD 23            inc iy
 687+ 9098 10 F4            djnz 2B
 688+ 909A C1               pop bc
 689+ 909B C9               ret
 690+ 909C
 691+ 909C              ; -------------------------------------------------------------------------------------------------------------
 692+ 909C              ;
 693+ 909C              ;   13/03/23
 694+ 909C              ;
 695+ 909C              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 909C              ;
 697+ 909C              ;   DESTRUYE: HL,BC,DE y A.
 698+ 909C
 699+ 909C 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 909F 7E               ld a,(hl)
 701+ 90A0 A7               and a
 702+ 90A1 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90A2
 704+ 90A2 44               ld b,h
 705+ 90A3 4D               ld c,l
 706+ 90A4 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 90A7 E5               push hl
 708+ 90A8 A7               and a
 709+ 90A9 ED 42            sbc hl,bc
 710+ 90AB E5               push hl
 711+ 90AC C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90AD
 713+ 90AD E1               pop hl
 714+ 90AE 54               ld d,h
 715+ 90AF 5D               ld e,l
 716+ 90B0 1B               dec de
 717+ 90B1 ED B8            lddr                                                ; Limpiamos.
 718+ 90B3
 719+ 90B3 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90B6 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 90B9
 722+ 90B9 C9               ret
 723+ 90BA
 724+ 90BA              ; -------------------------------------------------------------------------------------------------------------
 725+ 90BA              ;
 726+ 90BA              ;   18/07/23
 727+ 90BA              ;
 728+ 90BA
 729+ 90BA              Motor_de_disparos
 730+ 90BA
 731+ 90BA              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90BA
 733+ 90BA 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90BD 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90C0
 736+ 90C0 CD 83 8C     2 call Extrae_address
 737+ 90C3 7E               ld a,(hl)
 738+ 90C4 A7               and a
 739+ 90C5 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90C7
 741+ 90C7              ; ----- ----- ----- ----- ----- -----
 742+ 90C7
 743+ 90C7 C5               push bc
 744+ 90C8 CD 8C 91         call foto_disparo_a_borrar
 745+ 90CB
 746+ 90CB              ; Existe colisión con este disparo???
 747+ 90CB
 748+ 90CB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90CC 7E               ld a,(hl)
 750+ 90CD 2B               dec hl
 751+ 90CE E6 01            and 1
 752+ 90D0 28 1D            jr z,9F
 753+ 90D2
 754+ 90D2              ;   En este punto:
 755+ 90D2              ;
 756+ 90D2              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90D2              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90D2              ;   _con la entidad).
 759+ 90D2              ;
 760+ 90D2              ;   Disparo_2A defw 0                                ; Control.
 761+ 90D2              ;    defw 0                                          ; Puntero objeto.
 762+ 90D2              ;    defw 0                                          ; Puntero de impresión.
 763+ 90D2              ;    defw 0                                          ; Rutina de impresión.
 764+ 90D2
 765+ 90D2 E5               push hl
 766+ 90D3
 767+ 90D3 06 04            ld b,4
 768+ 90D5 23           19 inc hl
 769+ 90D6 10 FD            djnz 19B
 770+ 90D8
 771+ 90D8 CD 83 8C         call Extrae_address
 772+ 90DB CD FD 9C         call Genera_coordenadas_disparo
 773+ 90DE
 774+ 90DE              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90DE
 776+ 90DE 21 46 89         ld hl,Coordenadas_disparo_certero
 777+ 90E1 72               ld (hl),d
 778+ 90E2 23               inc hl
 779+ 90E3 73               ld (hl),e
 780+ 90E4
 781+ 90E4              ; Elimino el disparo de la base de datos.
 782+ 90E4
 783+ 90E4 E1               pop hl
 784+ 90E5 CD 0B 92         call Elimina_disparo_de_base_de_datos
 785+ 90E8 21 43 89         ld hl,Impacto2
 786+ 90EB CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90ED
 788+ 90ED 18 06            jr 11F
 789+ 90EF
 790+ 90EF CD B5 91     9 call Mueve_disparo
 791+ 90F2 CD 8C 91         call foto_disparo_a_borrar
 792+ 90F5
 793+ 90F5 C1           11 pop bc
 794+ 90F6 18 04            jr 7F
 795+ 90F8
 796+ 90F8              ; ----- ----- ----- ----- ----- -----
 797+ 90F8
 798+ 90F8 ED 42        1 sbc hl,bc
 799+ 90FA 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90FC
 801+ 90FC 2A 41 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90FF 23               inc hl
 803+ 9100 23               inc hl
 804+ 9101 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9104 18 BA            jr 2B
 806+ 9106
 807+ 9106 CD 04 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9109              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9109
 810+ 9109              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9109
 812+ 9109 01 8A 85         ld bc,Disparo_11
 813+ 910C 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 910F
 815+ 910F CD 83 8C     5 call Extrae_address
 816+ 9112 7E               ld a,(hl)
 817+ 9113 A7               and a
 818+ 9114 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9116
 820+ 9116              ; ----- ----- ----- ----- ----- -----
 821+ 9116
 822+ 9116 C5               push bc
 823+ 9117 CD 8C 91         call foto_disparo_a_borrar
 824+ 911A
 825+ 911A              ; Existe colisión con este disparo???
 826+ 911A
 827+ 911A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 911B 7E               ld a,(hl)
 829+ 911C 2B               dec hl
 830+ 911D E6 01            and 1
 831+ 911F 28 4D            jr z,10F
 832+ 9121
 833+ 9121              ;! La colisión se produce con Amadeus???
 834+ 9121              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9121
 836+ 9121 E5               push hl
 837+ 9122
 838+ 9122 06 04            ld b,4
 839+ 9124 23           16 inc hl
 840+ 9125 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9127
 842+ 9127 CD 83 8C         call Extrae_address
 843+ 912A CD FD 9C         call Genera_coordenadas_disparo
 844+ 912D
 845+ 912D 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 912E FE 16            cp $16
 847+ 9130 38 2A            jr c,15F
 848+ 9132
 849+ 9132
 850+ 9132              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9132
 852+ 9132 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9133
 854+ 9133              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9133
 856+ 9133
 857+ 9133 2A 4E 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9136
 859+ 9136              ; Coordenada X de Amadeus en D.
 860+ 9136
 861+ 9136 7D               ld a,l
 862+ 9137 E6 1F            and $1F
 863+ 9139 57               ld d,a
 864+ 913A
 865+ 913A 21 A6 85         ld hl,Amadeus_db+8
 866+ 913D 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 913E
 868+ 913E 21 48 89         ld hl,Coordenadas_X_Amadeus
 869+ 9141 CD 16 92         call Guarda_coordenadas_X
 870+ 9144
 871+ 9144 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9145
 873+ 9145              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9145
 875+ 9145 06 02            ld b,2
 876+ 9147 C5           20 push bc
 877+ 9148
 878+ 9148 06 03            ld b,3
 879+ 914A 21 48 89         ld hl,Coordenadas_X_Amadeus
 880+ 914D 7E           18 ld a,(hl)
 881+ 914E BA               cp d
 882+ 914F 20 04            jr nz,17F
 883+ 9151
 884+ 9151              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9151
 886+ 9151 C1               pop bc
 887+ 9152 E1               pop hl
 888+ 9153 18 0D            jr 14F
 889+ 9155
 890+ 9155 23           17 inc hl
 891+ 9156 10 F5            djnz 18B
 892+ 9158
 893+ 9158 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9159
 895+ 9159 C1               pop bc
 896+ 915A 10 EB            djnz 20B
 897+ 915C
 898+ 915C
 899+ 915C              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 915C              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 915C
 902+ 915C E1           15 pop hl
 903+ 915D 23               inc hl
 904+ 915E 35               dec (hl)
 905+ 915F 2B               dec hl
 906+ 9160 18 0C            jr 10F
 907+ 9162
 908+ 9162              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9162              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9162
 911+ 9162 E5           14 push hl
 912+ 9163 CD 0B 92         call Elimina_disparo_de_base_de_datos
 913+ 9166 21 43 89         ld hl,Impacto2
 914+ 9169 CB CE            set 1,(hl)
 915+ 916B E1               pop hl
 916+ 916C 18 06            jr 12F
 917+ 916E
 918+ 916E              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 916E
 920+ 916E CD B5 91     10 call Mueve_disparo
 921+ 9171 CD 8C 91         call foto_disparo_a_borrar
 922+ 9174 C1           12 pop bc
 923+ 9175
 924+ 9175 18 04            jr 8F
 925+ 9177
 926+ 9177              ; ----- ----- ----- ----- ----- -----
 927+ 9177
 928+ 9177 ED 42        4 sbc hl,bc
 929+ 9179 28 0A            jr z,6F
 930+ 917B
 931+ 917B 2A 3F 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 917E 23               inc hl
 933+ 917F 23               inc hl
 934+ 9180 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9183 18 8A            jr 5B
 936+ 9185
 937+ 9185 CD FD 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9188 CD 52 92         call Limpia_Coordenadas_X
 939+ 918B C9               ret
 940+ 918C
 941+ 918C              ; ------------------------------------------------------------------
 942+ 918C
 943+ 918C              foto_disparo_a_borrar
 944+ 918C
 945+ 918C 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 918D A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 918E C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 918F
 949+ 918F E5               push hl
 950+ 9190 23               inc hl
 951+ 9191 23               inc hl
 952+ 9192 ED 73 14 89      ld (Stack),sp
 953+ 9196 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9197 FD E1            pop iy
 955+ 9199 DD E1            pop ix
 956+ 919B E1               pop hl
 957+ 919C ED 7B 14 89      ld sp,(Stack)
 958+ 91A0 3A 03 89         ld a,(Ctrl_1)
 959+ 91A3 CB C7            set 0,a
 960+ 91A5 32 03 89         ld (Ctrl_1),a
 961+ 91A8 CD A0 7F         call Guarda_foto_registros
 962+ 91AB 3A 03 89         ld a,(Ctrl_1)
 963+ 91AE CB 87            res 0,a
 964+ 91B0 32 03 89         ld (Ctrl_1),a
 965+ 91B3 E1               pop hl
 966+ 91B4 C9               ret
 967+ 91B5
 968+ 91B5              ;---------------------------------------------------
 969+ 91B5              ;
 970+ 91B5              ;   18/07/23
 971+ 91B5              ;
 972+ 91B5
 973+ 91B5              Mueve_disparo
 974+ 91B5
 975+ 91B5              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91B5              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91B5              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91B5
 979+ 91B5 E5               push hl
 980+ 91B6
 981+ 91B6 7E               ld a,(hl)
 982+ 91B7
 983+ 91B7 06 04            ld b,4
 984+ 91B9 23           1 inc hl
 985+ 91BA 10 FD            djnz 1B
 986+ 91BC
 987+ 91BC              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91BC
 989+ 91BC CD 83 8C         call Extrae_address
 990+ 91BF
 991+ 91BF E6 01            and 1
 992+ 91C1 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91C3
 994+ 91C3              ; Disparo hacia arriba, (Amadeus).
 995+ 91C3
 996+ 91C3              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91C3              ; _ de la dificultad.
 998+ 91C3
 999+ 91C3 CD 43 96         call PreviousScan
1000+ 91C6 CD 43 96         call PreviousScan
1001+ 91C9 CD 43 96         call PreviousScan
1002+ 91CC CD 43 96         call PreviousScan
1003+ 91CF
1004+ 91CF              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91CF
1006+ 91CF 7C               ld a,h
1007+ 91D0 FE 40            cp $40
1008+ 91D2 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91D4
1010+ 91D4              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91D4
1012+ 91D4 EB               ex de,hl
1013+ 91D5 06 04            ld b,4
1014+ 91D7 2B           6 dec hl
1015+ 91D8 10 FD            djnz 6B
1016+ 91DA
1017+ 91DA CD 0B 92         call Elimina_disparo_de_base_de_datos
1018+ 91DD E1               pop hl
1019+ 91DE 18 10            jr 7F
1020+ 91E0
1021+ 91E0              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91E0              ; HL contiene el puntero de impresión del disparo.
1023+ 91E0              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91E0
1025+ 91E0 D5           3 push de
1026+ 91E1 C5               push bc
1027+ 91E2
1028+ 91E2 CD AA 8F         call Comprueba_Colision
1029+ 91E5
1030+ 91E5              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91E5
1032+ 91E5 78               ld a,b
1033+ 91E6
1034+ 91E6 C1               pop bc
1035+ 91E7 D1               pop de
1036+ 91E8
1037+ 91E8 EB               ex de,hl
1038+ 91E9
1039+ 91E9 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91EA 23               inc hl                                      ; _ movimiento.
1041+ 91EB 72               ld (hl),d
1042+ 91EC
1043+ 91EC E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91ED
1045+ 91ED 23               inc hl                                      ; _ en curso.
1046+ 91EE 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91EF 2B               dec hl
1048+ 91F0
1049+ 91F0 C9           7 ret
1050+ 91F1
1051+ 91F1              ; Disparo hacia abajo, (Entidad).
1052+ 91F1
1053+ 91F1 3A 50 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91F4 47               ld b,a
1055+ 91F5
1056+ 91F5 CD 34 96     4 call NextScan
1057+ 91F8 10 FB            djnz 4B
1058+ 91FA
1059+ 91FA              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91FA
1061+ 91FA 7C               ld a,h
1062+ 91FB FE 58            cp $58
1063+ 91FD 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91FF
1065+ 91FF EB               ex de,hl
1066+ 9200 06 04            ld b,4
1067+ 9202 2B           5 dec hl
1068+ 9203 10 FD            djnz 5B
1069+ 9205
1070+ 9205 CD 0B 92         call Elimina_disparo_de_base_de_datos
1071+ 9208 E1               pop hl
1072+ 9209 18 E5            jr 7B
1073+ 920B
1074+ 920B              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 920B
1076+ 920B 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 920E AF               xor a
1078+ 920F 77               ld (hl),a
1079+ 9210 54               ld d,h
1080+ 9211 5D               ld e,l
1081+ 9212 13               inc de
1082+ 9213 ED B0            ldir
1083+ 9215 C9               ret
1084+ 9216
1085+ 9216              ; -----------------------------------------------------------------
1086+ 9216              ;
1087+ 9216              ;   19/7/23
1088+ 9216              ;
1089+ 9216              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9216              ;
1091+ 9216              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9216              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9216              ;
1094+ 9216              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9216              ;
1096+ 9216              ;   INPUTS:
1097+ 9216              ;
1098+ 9216              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9216              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9216
1101+ 9216              ;   MODIFICA: A, HL, BC y DE.
1102+ 9216
1103+ 9216              Guarda_coordenadas_X
1104+ 9216
1105+ 9216 7B               ld a,e
1106+ 9217 A7               and a
1107+ 9218 20 04            jr nz,1F
1108+ 921A
1109+ 921A 06 02            ld b,2
1110+ 921C 18 02            jr 2F
1111+ 921E
1112+ 921E 06 03        1 ld b,3
1113+ 9220 72           2 ld (hl),d
1114+ 9221 23               inc hl
1115+ 9222 14               inc d
1116+ 9223 10 FB            djnz 2B
1117+ 9225
1118+ 9225 C9               ret
1119+ 9226
1120+ 9226              ; -----------------------------------------------------------------
1121+ 9226              ;
1122+ 9226              ;   12/04/23
1123+ 9226              ;
1124+ 9226
1125+ 9226 3A 43 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9229 A7               and a
1127+ 922A C8               ret z
1128+ 922B
1129+ 922B FE 04            cp 4
1130+ 922D 20 09            jr nz,1F
1131+ 922F
1132+ 922F
1133+ 922F              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 922F
1135+ 922F CD 4B 90         call Detecta_colision_nave_entidad
1136+ 9232
1137+ 9232 21 43 89         ld hl,Impacto2
1138+ 9235 CB 5E            bit 3,(hl)
1139+ 9237 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9238
1141+ 9238              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9238              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9238
1144+ 9238 21 43 89     1 ld hl,Impacto2
1145+ 923B CB 4E            bit 1,(hl)
1146+ 923D 28 07            jr z,2F
1147+ 923F
1148+ 923F 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9242 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9244 18 0B            jr 3F
1151+ 9246
1152+ 9246 21 43 89     2 ld hl,Impacto2
1153+ 9249 CB 46            bit 0,(hl)
1154+ 924B C8               ret z
1155+ 924C
1156+ 924C              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 924C
1158+ 924C 21 03 89         ld hl,Ctrl_1
1159+ 924F CB D6            set 2,(hl)
1160+ 9251
1161+ 9251 C9           3 ret
1162+ 9252
1163+ 9252              ; -----------------------------------------------------------------
1164+ 9252              ;
1165+ 9252              ;   19/7/23
1166+ 9252              ;
1167+ 9252              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9252
1169+ 9252 AF           Limpia_Coordenadas_X xor a
1170+ 9253 06 06            ld b,6
1171+ 9255 21 48 89         ld hl,Coordenadas_X_Amadeus
1172+ 9258 77           1 ld (hl),a
1173+ 9259 23               inc hl
1174+ 925A 10 FC            djnz 1B
1175+ 925C C9               ret
1176+ 925D
1177+ 925D              ; -----------------------------------------------------------------
1178+ 925D              ;
1179+ 925D              ;   25/04/23
1180+ 925D              ;
1181+ 925D
1182+ 925D              Determina_resultado_comparativa
1183+ 925D
1184+ 925D              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 925D              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 925D              ;
1187+ 925D              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 925D              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 925D              ;
1190+ 925D              ;   SBC HL,DE
1191+ 925D
1192+ 925D              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 925D              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 925D
1195+ 925D              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 925D              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 925D
1198+ 925D
1199+ 925D 3A DA 88         ld a,(Cuad_objeto)
1200+ 9260 FE 02            cp 2
1201+ 9262 28 26            jr z,2F
1202+ 9264 38 24            jr c,2F
1203+ 9266
1204+ 9266              ; Cuadrantes 3º y 4º
1205+ 9266
1206+ 9266 E6 01            and 1
1207+ 9268 28 10            jr z,4F
1208+ 926A
1209+ 926A              ; Cuadrante 3º
1210+ 926A
1211+ 926A 7C               ld a,h
1212+ 926B 06 00            ld b,0
1213+ 926D
1214+ 926D CD F8 92         call Compara_cositas_H3
1215+ 9270
1216+ 9270 04               inc b
1217+ 9271 05               dec b
1218+ 9272 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9273
1220+ 9273 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9274 06 00            ld b,0
1222+ 9276
1223+ 9276 CD 0A 93         call Compara_cositas_L3
1224+ 9279 C9               ret
1225+ 927A
1226+ 927A              ; Cuadrante 4º
1227+ 927A
1228+ 927A 7C           4 ld a,h
1229+ 927B 06 00            ld b,0
1230+ 927D
1231+ 927D CD 1C 93         call Compara_cositas_H4
1232+ 9280
1233+ 9280 04               inc b
1234+ 9281 05               dec b
1235+ 9282 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9283
1237+ 9283 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9284 06 00            ld b,0
1239+ 9286
1240+ 9286 CD 32 93         call Compara_cositas_L4
1241+ 9289 C9               ret
1242+ 928A
1243+ 928A              ; Cuadrantes 1º y 2º.
1244+ 928A
1245+ 928A 28 10        2 jr z,3F
1246+ 928C
1247+ 928C              ; 1er Cuadrante
1248+ 928C
1249+ 928C 7C               ld a,h
1250+ 928D 06 00            ld b,0
1251+ 928F
1252+ 928F CD D0 92         call Compara_cositas_H1
1253+ 9292
1254+ 9292 04               inc b
1255+ 9293 05               dec b
1256+ 9294 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9295
1258+ 9295 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9296 06 00            ld b,0
1260+ 9298
1261+ 9298 CD E6 92         call Compara_cositas_L1
1262+ 929B C9               ret
1263+ 929C
1264+ 929C
1265+ 929C              ; 2º Cuadrante
1266+ 929C
1267+ 929C 7C           3 ld a,h
1268+ 929D 06 00            ld b,0
1269+ 929F
1270+ 929F CD AC 92         call Compara_cositas_H2
1271+ 92A2
1272+ 92A2 04               inc b
1273+ 92A3 05               dec b
1274+ 92A4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92A5
1276+ 92A5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92A6 06 00            ld b,0
1278+ 92A8
1279+ 92A8 CD BE 92         call Compara_cositas_L2
1280+ 92AB C9               ret
1281+ 92AC
1282+ 92AC A7           Compara_cositas_H2 and a
1283+ 92AD 28 0D            jr z,1F
1284+ 92AF              ;    cp $fd
1285+ 92AF              ;    jr z,1F
1286+ 92AF              ;    cp $fe
1287+ 92AF              ;    jr z,1F
1288+ 92AF FE FF            cp $ff
1289+ 92B1 28 09            jr z,1F
1290+ 92B3 FE 01            cp $01
1291+ 92B5 28 05            jr z,1F
1292+ 92B7 FE 02            cp $02
1293+ 92B9 28 01            jr z,1F
1294+ 92BB C0               ret nz
1295+ 92BC 04           1 inc b
1296+ 92BD C9               ret
1297+ 92BE
1298+ 92BE A7           Compara_cositas_L2 and a
1299+ 92BF 28 0D            jr z,1F
1300+ 92C1              ;    cp $fd
1301+ 92C1              ;    jr z,1F
1302+ 92C1 FE FE            cp $fe
1303+ 92C3 28 09            jr z,1F
1304+ 92C5 FE FF            cp $ff
1305+ 92C7 28 05            jr z,1F
1306+ 92C9 FE 01            cp $01
1307+ 92CB 28 01            jr z,1F
1308+ 92CD              ;    cp $02
1309+ 92CD              ;    jr z,1F
1310+ 92CD C0               ret nz
1311+ 92CE 04           1 inc b
1312+ 92CF C9               ret
1313+ 92D0
1314+ 92D0 A7           Compara_cositas_H1 and a
1315+ 92D1 28 11            jr z,1F
1316+ 92D3              ;    cp $fd
1317+ 92D3              ;    jr z,1F
1318+ 92D3              ;    cp $fe
1319+ 92D3              ;    jr z,1F
1320+ 92D3 FE FF            cp $ff
1321+ 92D5 28 0D            jr z,1F
1322+ 92D7 FE 01            cp $01
1323+ 92D9 28 09            jr z,1F
1324+ 92DB FE 02            cp $02
1325+ 92DD 28 05            jr z,1F
1326+ 92DF FE 03            cp $03
1327+ 92E1 28 01            jr z,1F
1328+ 92E3 C0               ret nz
1329+ 92E4 04           1 inc b
1330+ 92E5 C9               ret
1331+ 92E6
1332+ 92E6 A7           Compara_cositas_L1 and a
1333+ 92E7 28 0D            jr z,1F
1334+ 92E9              ;    cp $fd
1335+ 92E9              ;    jr z,1F
1336+ 92E9              ;    cp $fe
1337+ 92E9              ;    jr z,1F
1338+ 92E9              ;    cp $ff
1339+ 92E9              ;    jr z,1F
1340+ 92E9 FE 01            cp $01
1341+ 92EB 28 09            jr z,1F
1342+ 92ED FE 02            cp $02
1343+ 92EF 28 05            jr z,1F
1344+ 92F1 FE 03            cp $03
1345+ 92F3 28 01            jr z,1F
1346+ 92F5 C0               ret nz
1347+ 92F6 04           1 inc b
1348+ 92F7 C9               ret
1349+ 92F8
1350+ 92F8 A7           Compara_cositas_H3 and a
1351+ 92F9 28 0D            jr z,1F
1352+ 92FB              ;    cp $fd
1353+ 92FB              ;    jr z,1F
1354+ 92FB FE FE            cp $fe
1355+ 92FD 28 09            jr z,1F
1356+ 92FF FE FF            cp $ff
1357+ 9301 28 05            jr z,1F
1358+ 9303 FE 01            cp $01
1359+ 9305 28 01            jr z,1F
1360+ 9307              ;    cp $02
1361+ 9307              ;    jr z,1F
1362+ 9307              ;    cp $03
1363+ 9307              ;    jr z,1F
1364+ 9307 C0               ret nz
1365+ 9308 04           1 inc b
1366+ 9309 C9               ret
1367+ 930A
1368+ 930A A7           Compara_cositas_L3 and a
1369+ 930B 28 0D            jr z,1F
1370+ 930D              ;    cp $fd
1371+ 930D              ;    jr z,1F
1372+ 930D              ;    cp $fe
1373+ 930D              ;    jr z,1F
1374+ 930D              ;    cp $ff
1375+ 930D              ;    jr z,1F
1376+ 930D FE 01            cp $01
1377+ 930F 28 09            jr z,1F
1378+ 9311 FE 02            cp $02
1379+ 9313 28 05            jr z,1F
1380+ 9315 FE 03            cp $03
1381+ 9317 28 01            jr z,1F
1382+ 9319 C0               ret nz
1383+ 931A 04           1 inc b
1384+ 931B C9               ret
1385+ 931C
1386+ 931C A7           Compara_cositas_H4 and a
1387+ 931D 28 11            jr z,1F
1388+ 931F FE FD            cp $fd
1389+ 9321 28 0D            jr z,1F
1390+ 9323 FE FE            cp $fe
1391+ 9325 28 09            jr z,1F
1392+ 9327 FE FF            cp $ff
1393+ 9329 28 05            jr z,1F
1394+ 932B FE 01            cp $01
1395+ 932D 28 01            jr z,1F
1396+ 932F              ;    cp $02
1397+ 932F              ;    jr z,1F
1398+ 932F              ;    cp $03
1399+ 932F              ;    jr z,1F
1400+ 932F C0               ret nz
1401+ 9330 04           1 inc b
1402+ 9331 C9               ret
1403+ 9332
1404+ 9332 A7           Compara_cositas_L4 and a
1405+ 9333 28 0D            jr z,1F
1406+ 9335              ;    cp $fd
1407+ 9335              ;    jr z,1F
1408+ 9335 FE FE            cp $fe
1409+ 9337 28 09            jr z,1F
1410+ 9339 FE FF            cp $ff
1411+ 933B 28 05            jr z,1F
1412+ 933D FE 01            cp $01
1413+ 933F 28 01            jr z,1F
1414+ 9341              ;    cp $02
1415+ 9341              ;    jr z,1F
1416+ 9341              ;    cp $03
1417+ 9341              ;    jr z,1F
1418+ 9341 C0               ret nz
1419+ 9342 04           1 inc b
1420+ 9343 C9               ret
# file closed: Disparo.asm
1672  9344              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9344              ; ******************************************************************************************************************************************************************************************
   2+ 9344              ;
   3+ 9344              ; 26/06/23
   4+ 9344              ;
   5+ 9344              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9344
   7+ 9344 CD 28 96     Draw call Prepara_draw
   8+ 9347 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9348 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9349 28 05        	jr z,2F
  11+ 934B
  12+ 934B 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 934E 18 0C        	jr 1F
  14+ 9350
  15+ 9350 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9353 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9356 CD E5 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9359              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9359 CD 88 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 935C
  21+ 935C 3A F0 88     1 ld a,(Ctrl_0)
  22+ 935F CB 6F        	bit 5,a
  23+ 9361 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9363
  25+ 9363 CD 7B 93     	call Comprueba_limite_horizontal
  26+ 9366 CD 0B 94     	call Comprueba_limite_vertical
  27+ 9369
  28+ 9369              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9369              ; -----------------------
  30+ 9369              ; -----------------------
  31+ 9369              ; -----------------------
  32+ 9369
  33+ 9369 CD 58 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 936C CD 8F 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 936F CD EE 95     	call Define_rutina_de_impresion
  36+ 9372
  37+ 9372 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9375 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9377 32 F0 88     	ld (Ctrl_0),a
  40+ 937A
  41+ 937A C9           	ret
  42+ 937B
  43+ 937B              ; *******************************************************************************************************************************************************************************************
  44+ 937B              ;	21/01/23
  45+ 937B              ;
  46+ 937B              ; 	Comprueba_limite_horizontal.
  47+ 937B              ;
  48+ 937B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 937B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 937B              ;
  51+ 937B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 937B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 937B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 937B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 937B
  56+ 937B
  57+ 937B
  58+ 937B 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 937E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9380 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9382 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9384 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9387 18 09            jr 6F
  64+ 9389 CB 5F        1 bit 3,a
  65+ 938B 28 0A            jr z,2F
  66+ 938D E6 F7            and $f7
  67+ 938F 32 F0 88         ld (Ctrl_0),a
  68+ 9392 CD E5 94     6 call Inicializacion
  69+ 9395 18 5B            jr 5F
  70+ 9397 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9398
  72+ 9398              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9398              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9398
  75+ 9398 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9399 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 939C CD 47 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 939F 67           	ld h,a
  79+ 93A0 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93A1 CD 47 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93A4 67           	ld h,a
  82+ 93A5 A7           	and a
  83+ 93A6 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93A8 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93A9 3A DA 88     	ld a,(Cuad_objeto)
  86+ 93AC FE 02        	cp 2
  87+ 93AE 38 1E        	jr c,3F
  88+ 93B0 28 1C        	jr z,3F
  89+ 93B2 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93B3 28 23            jr z,7F
  91+ 93B5 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93B7 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93B9 E1           	pop hl
  94+ 93BA
  95+ 93BA              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93BA              ; _para indicar con E="2" en caso necesario.
  97+ 93BA
  98+ 93BA E5               push hl
  99+ 93BB C5               push bc
 100+ 93BC CD 47 99     	call calcula_tercio
 101+ 93BF FE 01        	cp 1
 102+ 93C1 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93C3 CD F3 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93C6 28 26            jr z,9F
 105+ 93C8 38 24            jr c,9F
 106+ 93CA 1E 00        11 ld e,0
 107+ 93CC 18 22            jr 8F
 108+ 93CE 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93CF 28 07        	jr z, 7F
 110+ 93D1 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93D3 1E 00         	ld e,0
 112+ 93D5 E1           	pop hl
 113+ 93D6 18 04        	jr 4F
 114+ 93D8 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93DA 18 15            jr 10F
 116+ 93DC
 117+ 93DC              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93DC              ; _para indicar con E="2" en caso necesario.
 119+ 93DC
 120+ 93DC E5           4 push hl
 121+ 93DD C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93DE CD 47 99     	call calcula_tercio
 123+ 93E1 FE 01        	cp 1
 124+ 93E3 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93E5 CD F3 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93E8 28 04            jr z,9F
 127+ 93EA 30 02            jr nc,9F
 128+ 93EC 18 02        	jr 8F
 129+ 93EE 1E 02        9 ld e,2
 130+ 93F0 C1           8 pop bc
 131+ 93F1 E1           10 pop hl
 132+ 93F2 C9           5 ret
 133+ 93F3
 134+ 93F3              ; --------------------
 135+ 93F3              ;
 136+ 93F3              ; 25/08/22
 137+ 93F3
 138+ 93F3 CD 47 99     Comprueba_centro call calcula_tercio
 139+ 93F6 67               ld h,a
 140+ 93F7 08           	ex af,af
 141+ 93F8 FE 02        	cp 2
 142+ 93FA 38 07        	jr c,1F
 143+ 93FC 28 05        	jr z,1F
 144+ 93FE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9401 18 03        	jr 2F
 146+ 9403 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9406 08           2 ex af,af
 148+ 9407 A7               and a
 149+ 9408 ED 42            sbc hl,bc
 150+ 940A C9               ret
 151+ 940B
 152+ 940B              ; *********************************************************************************************************************************************************************************************
 153+ 940B              ;
 154+ 940B              ;   16/8/22
 155+ 940B              ;
 156+ 940B              ;	Comprueba_limite_vertical
 157+ 940B              ;
 158+ 940B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 940B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 940B              ;
 161+ 940B
 162+ 940B 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 940E 7D           	ld a,l
 164+ 940F E6 1F        	and $1F
 165+ 9411 57           	ld d,a
 166+ 9412 3A 00 89     	ld a,(Limite_vertical)
 167+ 9415 BA           	cp d 											; Límite - Posición.
 168+ 9416 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9417 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 941A CB 47        	bit 0,a
 171+ 941C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 941E
 173+ 941E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 941E
 175+ 941E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 941F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9421
 178+ 9421              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9421              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9421
 181+ 9421 3A CC 88         ld a,(Coordenada_X)
 182+ 9424 16 0F            ld d,Centro_izquierda
 183+ 9426 A7               and a
 184+ 9427 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9428 28 1E            jr z,3F
 186+ 942A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 942C              ;                                                    ; _salimos sin modificar nada.
 188+ 942C 18 0E            jr 2F
 189+ 942E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 942F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9431
 192+ 9431              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9431              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9431
 195+ 9431 3A CC 88         ld a,(Coordenada_X)
 196+ 9434 16 10            ld d,Centro_derecha
 197+ 9436 A7               and a
 198+ 9437 92               sub d
 199+ 9438 28 0E            jr z,3F
 200+ 943A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 943C              ;                                                    ; _salimos sin modificar nada.
 202+ 943C CB 43        2 bit 0,e
 203+ 943E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9440 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9441 CD D5 94         call Modificaccionne
 206+ 9444 C1           	pop bc
 207+ 9445 CD E5 94         call Inicializacion
 208+ 9448 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9449
 210+ 9449              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9449
 212+ 9449 C5           4 push bc
 213+ 944A 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 944D 0A           	ld a,(bc)
 215+ 944E 3D           	dec a
 216+ 944F 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9450 7D           	ld a,l
 218+ 9451 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9452 CB 47        	bit 0,a
 220+ 9454 28 03        	jr z,5F
 221+ 9456 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9457 18 2E        	jr 7F
 223+ 9459
 224+ 9459              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9459
 226+ 9459 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 945A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 945B 3A F0 88     	ld a,(Ctrl_0)
 229+ 945E CB 4F        	bit 1,a
 230+ 9460 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9462 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9463
 233+ 9463              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9463
 235+ 9463 1C               inc e
 236+ 9464 1D               dec e
 237+ 9465 20 07            jr nz,12F
 238+ 9467 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9468 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9469 22 C8 88     	ld (Posicion_actual),hl
 241+ 946C 18 44        13 jr 9F
 242+ 946E CB 43        12 bit 0,e
 243+ 9470 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9472              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9472 C1           	pop bc
 246+ 9473 18 D3        	jr 3B
 247+ 9475 80           14 add b
 248+ 9476 6F               ld l,a
 249+ 9477 22 C8 88     	ld (Posicion_actual),hl
 250+ 947A CD D5 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 947D 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 947F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9481 32 F0 88         ld (Ctrl_0),a
 254+ 9484 F1           	pop af
 255+ 9485 18 2B        	jr 9F
 256+ 9487
 257+ 9487              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9487
 259+ 9487 F5           7 push af
 260+ 9488 3A F0 88     	ld a,(Ctrl_0)
 261+ 948B CB 47        	bit 0,a
 262+ 948D 20 1D        	jr nz,8F
 263+ 948F F1           	pop af
 264+ 9490
 265+ 9490              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9490
 267+ 9490 1C           	inc e
 268+ 9491 1D               dec e
 269+ 9492 20 07            jr nz,10F
 270+ 9494 90           	sub b
 271+ 9495 6F               ld l,a
 272+ 9496 22 C8 88     	ld (Posicion_actual),hl
 273+ 9499 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 949B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 949B CB 43        10 bit 0,e
 276+ 949D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 949F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 949F C1           	pop bc
 279+ 94A0 18 A6        	jr 3B
 280+ 94A2 90           16 sub b
 281+ 94A3 6F               ld l,a
 282+ 94A4 22 C8 88     	ld (Posicion_actual),hl
 283+ 94A7 CD D5 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94AA 18 06            jr 9F
 285+ 94AC E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94AE 32 F0 88         ld (Ctrl_0),a
 287+ 94B1 F1           	pop af
 288+ 94B2 C1           9 pop bc
 289+ 94B3 1E 00        	ld e,0
 290+ 94B5 CD E5 94         call Inicializacion
 291+ 94B8 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94B9 08           	ex af,af
 293+ 94BA F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94BB 18 8B            jr 3B
 295+ 94BD
 296+ 94BD              ; --------------------
 297+ 94BD
 298+ 94BD 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94BF CD 43 96     1 call PreviousScan
 300+ 94C2 10 FB            djnz 1B
 301+ 94C4 22 C8 88     	ld (Posicion_actual),hl
 302+ 94C7 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94C8 C9           	ret
 304+ 94C9
 305+ 94C9              ; --------------------
 306+ 94C9
 307+ 94C9 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94CB CD 34 96     1 call NextScan
 309+ 94CE 10 FB            djnz 1B
 310+ 94D0 22 C8 88     	ld (Posicion_actual),hl
 311+ 94D3 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94D4 C9           	ret
 313+ 94D5
 314+ 94D5              ; --------------------
 315+ 94D5              ;
 316+ 94D5              ;	22/01/23
 317+ 94D5              ;
 318+ 94D5              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94D5              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94D5              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94D5
 322+ 94D5
 323+ 94D5              Modificaccionne
 324+ 94D5
 325+ 94D5 3A DA 88     	ld a,(Cuad_objeto)
 326+ 94D8 FE 02        	cp 2
 327+ 94DA CC BD 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94DD DC BD 94         call c,Modifica_Pos_actual
 329+ 94E0 C8           	ret z
 330+ 94E1 CD C9 94         call Modifica_Pos_actual2
 331+ 94E4 C9               ret
 332+ 94E5
 333+ 94E5              ; *************************************************************************************************************************************************************************************************
 334+ 94E5              ;
 335+ 94E5              ;	13/8/22
 336+ 94E5              ;
 337+ 94E5              ;	Inicializacion
 338+ 94E5              ;
 339+ 94E5              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94E5              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94E5              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94E5              ;
 343+ 94E5              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94E5              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94E5              ;	_ desaparece/aparece.
 346+ 94E5
 347+ 94E5              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94E5              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94E5              ;
 350+ 94E5              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94E5              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94E5              ; 		   [E] ="0"
 353+ 94E5
 354+ 94E5              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94E5
 356+ 94E5 CD 47 99     Inicializacion call calcula_tercio
 357+ 94E8 28 36        	jr z,primit
 358+ 94EA E6 02        	and 2
 359+ 94EC 20 07        	jr nz,segmit
 360+ 94EE 7D           	ld a,l
 361+ 94EF FE 7F        	cp $7f
 362+ 94F1 38 2D        	jr c,primit
 363+ 94F3 28 2B        	jr z,primit
 364+ 94F5 CD 52 95     segmit call column
 365+ 94F8 38 13        	jr c,tercuad
 366+ 94FA 3E 04        cuarcuad ld a,4
 367+ 94FC 32 DA 88     	ld (Cuad_objeto),a
 368+ 94FF 21 20 48     	ld hl,$4820
 369+ 9502 22 FE 88     	ld (Limite_horizontal),hl
 370+ 9505 21 00 89     	ld hl,Limite_vertical
 371+ 9508 36 0D        	ld (hl),$0d
 372+ 950A 08           	ex af,af
 373+ 950B 18 3C        	jr 1F
 374+ 950D              tercuad
 375+ 950D 3E 03        	ld a,3
 376+ 950F 32 DA 88     	ld (Cuad_objeto),a
 377+ 9512 21 20 48     	ld hl,$4820
 378+ 9515 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9518 21 00 89     	ld hl,Limite_vertical
 380+ 951B 36 12        	ld (hl),$12
 381+ 951D 08           	ex af,af
 382+ 951E 18 29        	jr 1F
 383+ 9520 CD 52 95     primit call column
 384+ 9523 38 13        	jr c, primcuad
 385+ 9525              segcuad
 386+ 9525 3E 02        	ld a,2
 387+ 9527 32 DA 88     	ld (Cuad_objeto),a
 388+ 952A 21 C0 4F     	ld hl,$4fc0
 389+ 952D 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9530 21 00 89     	ld hl,Limite_vertical
 391+ 9533 36 0D        	ld (hl),$0d
 392+ 9535 08           	ex af,af
 393+ 9536 18 11        	jr 1F
 394+ 9538              primcuad
 395+ 9538 3E 01        	ld a,1
 396+ 953A 32 DA 88     	ld (Cuad_objeto),a
 397+ 953D 21 C0 4F     	ld hl,$4fc0
 398+ 9540 22 FE 88     	ld (Limite_horizontal),hl
 399+ 9543 21 00 89     	ld hl,Limite_vertical
 400+ 9546 36 12        	ld (hl),$12
 401+ 9548 08           	ex af,af
 402+ 9549 CD D2 9C     1 call Genera_coordenadas
 403+ 954C 21 F0 88     	ld hl,Ctrl_0
 404+ 954F CB EE        	set 5,(hl)
 405+ 9551 C9           	ret
 406+ 9552
 407+ 9552              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9552
 409+ 9552              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9552              ;
 411+ 9552              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9552
 413+ 9552 7D           column ld a,l
 414+ 9553 E6 1F        	and $1f
 415+ 9555 FE 10         	cp $10
 416+ 9557 C9            	ret
 417+ 9558
 418+ 9558              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9558              ;
 420+ 9558              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9558              ;
 422+ 9558              ; 14/12/22
 423+ 9558              ;
 424+ 9558              ;	Modifica: A y BC.
 425+ 9558
 426+ 9558 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 955B E6 01        	and 1
 428+ 955D 28 17        	jr z,1F
 429+ 955F
 430+ 955F              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 955F
 432+ 955F 3A CC 88     	ld a,(Coordenada_X)
 433+ 9562 47           	ld b,a
 434+ 9563 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9564 79           	ld a,c
 436+ 9565 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9566 38 08        	jr c,2F
 438+ 9568 47           	ld b,a
 439+ 9569 79           	ld a,c
 440+ 956A 90           	sub b
 441+ 956B 32 FD 88     	ld (Columnas),a
 442+ 956E 18 1B        	jr 4F
 443+ 9570 79           2 ld a,c
 444+ 9571 32 FD 88     	ld (Columnas),a
 445+ 9574 18 15        	jr 4F
 446+ 9576
 447+ 9576              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9576
 449+ 9576 3A CC 88     1 ld a,(Coordenada_X)
 450+ 9579 81           	add c
 451+ 957A 3D           	dec a
 452+ 957B D6 1F        	sub $1f
 453+ 957D 38 08        	jr c,3F
 454+ 957F 47           	ld b,a
 455+ 9580 79           	ld a,c
 456+ 9581 90           	sub b
 457+ 9582 32 FD 88     	ld (Columnas),a
 458+ 9585 18 04        	jr 4F
 459+ 9587 79           3 ld a,c
 460+ 9588 32 FD 88     	ld (Columnas),a
 461+ 958B D9           4 exx
 462+ 958C 4F           	ld c,a
 463+ 958D D9           	exx
 464+ 958E C9            ret
 465+ 958F
 466+ 958F              ; --------------------------------------------------------------------------------------------------------------------
 467+ 958F              ;
 468+ 958F              ;   19/7/23
 469+ 958F              ;
 470+ 958F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 958F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 958F              ;
 473+ 958F              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 958F              ;			HL e IY Contienen (Puntero_objeto).
 475+ 958F              ;
 476+ 958F              ;	DESTRUYE: HL,B Y A.
 477+ 958F
 478+ 958F 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9592 FE 02        	cp 2
 480+ 9594 38 18        	jr c,1F
 481+ 9596 28 16        	jr z,1F
 482+ 9598 E6 01        	and 1
 483+ 959A 28 0D        	jr z,3F
 484+ 959C
 485+ 959C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 959C
 487+ 959C CD E2 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 959F
 489+ 959F 7D           9 ld a,l
 490+ 95A0 E6 1F        	and $1f
 491+ 95A2 28 2A        	jr z,7F
 492+ 95A4 2B           	dec hl
 493+ 95A5 10 F8        	djnz 9B
 494+ 95A7 18 25        	jr 7F
 495+ 95A9
 496+ 95A9              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95A9
 498+ 95A9 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 95AC 18 20        	jr 7F
 500+ 95AE
 501+ 95AE 28 14        1 jr z,2F
 502+ 95B0
 503+ 95B0              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95B0
 505+ 95B0 CD E2 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95B3
 507+ 95B3 7D           4 ld a,l
 508+ 95B4 E6 1F        	and $1f
 509+ 95B6 28 03        	jr z,6F
 510+ 95B8 2B           	dec hl
 511+ 95B9 10 F8        	djnz 4B
 512+ 95BB 06 0F        6 ld b,15
 513+ 95BD CD 43 96     5 call PreviousScan
 514+ 95C0 10 FB        	djnz 5B
 515+ 95C2 18 0A        	jr 7F
 516+ 95C4
 517+ 95C4              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95C4
 519+ 95C4 CD E2 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95C7 06 0F        	ld b,15
 521+ 95C9 CD 43 96     8 call PreviousScan
 522+ 95CC 10 FB        	djnz 8B
 523+ 95CE
 524+ 95CE E5           7 push hl
 525+ 95CF DD E1        	pop ix
 526+ 95D1
 527+ 95D1 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 95D4 E5           	push hl
 529+ 95D5 FD E1        	pop iy
 530+ 95D7
 531+ 95D7              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95D7
 533+ 95D7 3A F0 88     	ld a,(Ctrl_0)
 534+ 95DA CB 77        	bit 6,a
 535+ 95DC C8           	ret z
 536+ 95DD
 537+ 95DD              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95DD              ; _ entidad / Amadeus´.
 539+ 95DD
 540+ 95DD DD 22 4E 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95E1
 542+ 95E1 C9           	ret
 543+ 95E2
 544+ 95E2              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95E2              ;
 546+ 95E2              ;	2/1/23
 547+ 95E2              ;
 548+ 95E2              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95E2              ;
 550+ 95E2              ;	Tras esta rutina tenemos:
 551+ 95E2              ;
 552+ 95E2              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95E2              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95E2              ;
 555+ 95E2              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95E2
 557+ 95E2 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 95E5 3A FD 88     	ld a,(Columnas)
 559+ 95E8 3D           	dec a
 560+ 95E9 20 01        	jr nz,1F
 561+ 95EB 3C           	inc a
 562+ 95EC 47           1 ld b,a
 563+ 95ED C9           	ret
 564+ 95EE
 565+ 95EE              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95EE              ;
 567+ 95EE              ;	3/1/23
 568+ 95EE              ;
 569+ 95EE              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95EE              ;
 571+ 95EE              ;	Destruye: A,B,HL y DE.
 572+ 95EE
 573+ 95EE              Define_rutina_de_impresion
 574+ 95EE
 575+ 95EE 3A C7 88     	ld a,(Columns)
 576+ 95F1 47           	ld b,a
 577+ 95F2 3A FD 88     	ld a,(Columnas)
 578+ 95F5 B8           	cp b
 579+ 95F6 20 0D        	jr nz,2f
 580+ 95F8
 581+ 95F8              ;	La entidad se imprime entera.
 582+ 95F8
 583+ 95F8 21 17 97     	ld hl, Indice_entidades_completas
 584+ 95FB E6 01        	and 1
 585+ 95FD 28 02        	jr z,1F
 586+ 95FF
 587+ 95FF 23           	inc hl
 588+ 9600 23           	inc hl
 589+ 9601
 590+ 9601 CD 83 8C     1 call Extrae_address
 591+ 9604 C9           	ret		;	ret
 592+ 9605
 593+ 9605              ;	La entidad no se imprime entera en pantalla.
 594+ 9605
 595+ 9605 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 9608 E6 01        	and 1
 597+ 960A 28 17        	jr z,3F
 598+ 960C
 599+ 960C              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 960C
 601+ 960C 21 1B 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 960F 3A C7 88     4 ld a,(Columns)
 603+ 9612 E6 01        	and 1
 604+ 9614 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9616
 606+ 9616 23           	inc hl
 607+ 9617 23           	inc hl
 608+ 9618
 609+ 9618 3A FD 88     	ld a,(Columnas)
 610+ 961B E6 01        	and 1
 611+ 961D 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 961F
 613+ 961F 23           	inc hl
 614+ 9620 23           	inc hl
 615+ 9621
 616+ 9621 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9623
 618+ 9623 21 21 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9626 18 E7        	jr 4B
 620+ 9628
 621+ 9628              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9628              ;
 623+ 9628              ;	Prepara_draw
 624+ 9628              ;
 625+ 9628              ;	Es una rutina de carga.
 626+ 9628              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9628              ;
 628+ 9628              ;	FUNCIONAMIENTO:
 629+ 9628              ;
 630+ 9628              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9628              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9628              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9628              ;
 634+ 9628              ;	DESTRUYE:
 635+ 9628              ;
 636+ 9628              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9628
 638+ 9628 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 962B 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 962C 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 962D 4E           	ld c,(hl)
 642+ 962E 2A C8 88     	ld hl,(Posicion_actual)
 643+ 9631 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9633 C9           	ret
 645+ 9634
 646+ 9634              ;----------------------------------------------------------------------------------------------------------------
 647+ 9634              ;
 648+ 9634              ;	5/08/22
 649+ 9634              ;
 650+ 9634              ;   NextScan.
 651+ 9634              ;
 652+ 9634              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9634              ;
 654+ 9634              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9634              ;
 656+ 9634              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9634              ;
 658+ 9634              ;       DESTRUIDOS: AF y HL !!!
 659+ 9634              ;
 660+ 9634              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9634              ;
 662+ 9634
 663+ 9634 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9635 7C               ld a,h
 665+ 9636 E6 07            and 7
 666+ 9638 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9639
 668+ 9639 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 963A C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 963C 6F               ld l,a
 671+ 963D D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 963E
 673+ 963E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 963F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9641 67               ld h,a
 676+ 9642 C9               ret
 677+ 9643
 678+ 9643              ;----------------------------------------------------------------------------------------------------------------
 679+ 9643              ;
 680+ 9643              ;	5/08/22
 681+ 9643              ;
 682+ 9643              ;   PreviousScan.
 683+ 9643              ;
 684+ 9643              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9643              ;
 686+ 9643              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9643              ;
 688+ 9643              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9643              ;
 690+ 9643              ;       DESTRUIDOS: AF y HL !!!
 691+ 9643              ;
 692+ 9643              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9643              ;
 694+ 9643
 695+ 9643 7C           PreviousScan ld a,h
 696+ 9644 25               dec h               ; Dec H.
 697+ 9645 E6 07            and 7
 698+ 9647 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9648
 700+ 9648 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9649 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 964B 6F               ld l,a
 703+ 964C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 964D
 705+ 964D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 964E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9650 67               ld h,a
 708+ 9651 C9               ret
 709+ 9652
 710+ 9652              ; -----------------------------------------------------------------------------------
 711+ 9652              ;
 712+ 9652              ;	31/7/23
 713+ 9652              ;
 714+ 9652              ;	Rutina principal de pintado de entidades.
 715+ 9652              ;	Extrae la foto del frame, (entidades).
 716+ 9652
 717+ 9652              Extrae_foto_entidades
 718+ 9652
 719+ 9652 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9655 7E           	ld a,(hl)
 721+ 9656 A7           	and a
 722+ 9657 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9658
 724+ 9658              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9658
 726+ 9658 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 965B A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 965C C8           	ret z
 729+ 965D
 730+ 965D              ; -----------------------------------
 731+ 965D
 732+ 965D ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9661 31 00 70     	ld sp,Album_de_fotos
 734+ 9664
 735+ 9664 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 9666 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 9667 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9668
 739+ 9668 ED 73 16 89  	ld (Stack_2),sp
 740+ 966C ED 7B 14 89  	ld sp,(Stack)
 741+ 9670
 742+ 9670              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9670
 744+ 9670 3E CD        	ld a,$cd
 745+ 9672 32 7A 96     	ld (Imprime),a
 746+ 9675 EB           	ex de,hl
 747+ 9676 22 7B 96     	ld (Imprime+1),hl
 748+ 9679 EB           	ex de,hl
 749+ 967A
 750+ 967A              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 967A
 752+ 967A 00 00 00     Imprime db 0,0,0
 753+ 967D
 754+ 967D ED 73 14 89  	ld (Stack),sp
 755+ 9681
 756+ 9681 3A 0F 89     	ld a,(Numero_de_malotes)
 757+ 9684 3D           	dec a
 758+ 9685 28 09        	jr z,1F
 759+ 9687 32 0F 89      	ld (Numero_de_malotes),a
 760+ 968A
 761+ 968A ED 7B 16 89  	ld sp,(Stack_2)
 762+ 968E 18 D4        	jr 2B
 763+ 9690
 764+ 9690 AF           1 xor a
 765+ 9691 32 16 89     	ld (Stack_2),a
 766+ 9694
 767+ 9694 C9           	ret
 768+ 9695
 769+ 9695              ; -----------------------------------------------------------------------------------
 770+ 9695              ;
 771+ 9695              ;	28/2/23
 772+ 9695              ;
 773+ 9695              ;	Pinta los disparos generados.
 774+ 9695
 775+ 9695              Extrae_foto_disparos
 776+ 9695
 777+ 9695 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9698 7E               ld a,(hl)
 779+ 9699 A7               and a
 780+ 969A C8               ret z
 781+ 969B
 782+ 969B 3A 3E 89     	ld a,(Numero_de_disparotes)
 783+ 969E A7           	and a
 784+ 969F C8           	ret z
 785+ 96A0 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 96A4 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 96A7
 788+ 96A7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 96A9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 96AA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 96AB
 792+ 96AB ED 73 16 89  	ld (Stack_2),sp
 793+ 96AF ED 7B 14 89  	ld sp,(Stack)
 794+ 96B3
 795+ 96B3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96B3
 797+ 96B3 3E CD        	ld a,$cd
 798+ 96B5 32 BD 96     	ld (Imprime2),a
 799+ 96B8 EB           	ex de,hl
 800+ 96B9 22 BE 96     	ld (Imprime2+1),hl
 801+ 96BC EB           	ex de,hl
 802+ 96BD
 803+ 96BD              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96BD
 805+ 96BD 00 00 00     Imprime2 db 0,0,0
 806+ 96C0
 807+ 96C0 3A 3E 89     	ld a,(Numero_de_disparotes)
 808+ 96C3 3D           	dec a
 809+ 96C4 28 09        	jr z,1F
 810+ 96C6 32 3E 89      	ld (Numero_de_disparotes),a
 811+ 96C9
 812+ 96C9 ED 7B 16 89  	ld sp,(Stack_2)
 813+ 96CD 18 D8        	jr 2B
 814+ 96CF
 815+ 96CF AF           1 xor a
 816+ 96D0 32 16 89     	ld (Stack_2),a
 817+ 96D3 C9           	ret
 818+ 96D4
 819+ 96D4              ; -----------------------------------------------------------------------------------
 820+ 96D4              ;
 821+ 96D4              ;	4/9/23
 822+ 96D4              ;
 823+ 96D4              ;	Rutina principal de pintado de Amadeus.
 824+ 96D4              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96D4
 826+ 96D4 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96D7 7E           	ld a,(hl)
 828+ 96D8 A7           	and a
 829+ 96D9 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96DA
 831+ 96DA 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96DD A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96DE C8           	ret z
 834+ 96DF
 835+ 96DF              ; -----------------------------------
 836+ 96DF
 837+ 96DF ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96E3 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96E6
 840+ 96E6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96E8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96E9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96EA
 844+ 96EA ED 73 16 89  	ld (Stack_2),sp
 845+ 96EE ED 7B 14 89  	ld sp,(Stack)
 846+ 96F2
 847+ 96F2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96F2
 849+ 96F2 3E CD        	ld a,$cd
 850+ 96F4 32 FC 96     	ld (Imprime_Amadeus),a
 851+ 96F7 EB           	ex de,hl
 852+ 96F8 22 FD 96     	ld (Imprime_Amadeus+1),hl
 853+ 96FB EB           	ex de,hl
 854+ 96FC
 855+ 96FC              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96FC
 857+ 96FC 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96FF
 859+ 96FF ED 73 14 89  	ld (Stack),sp
 860+ 9703
 861+ 9703 3A 0F 89     	ld a,(Numero_de_malotes)
 862+ 9706 3D           	dec a
 863+ 9707 28 09        	jr z,1F
 864+ 9709 32 0F 89      	ld (Numero_de_malotes),a
 865+ 970C
 866+ 970C ED 7B 16 89  	ld sp,(Stack_2)
 867+ 9710 18 D4        	jr 2B
 868+ 9712
 869+ 9712 AF           1 xor a
 870+ 9713 32 16 89     	ld (Stack_2),a
 871+ 9716
 872+ 9716 C9           	ret
# file closed: Draw_XOR.asm
1673  9717              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9717              ;   índices de Rutinas de impresión.
   2+ 9717
   3+ 9717 27 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9719 54 97            defw Pinta_Amadeus_3x2
   5+ 971B
   6+ 971B AA 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 971D 4A 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 971F FE 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9721
  10+ 9721 D4 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9723 D8 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9725 8C 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9727
  14+ 9727
  15+ 9727              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9727              ;
  17+ 9727              ;   12/12/22
  18+ 9727              ;
  19+ 9727              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9727              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9727              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9727              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9727              ;
  24+ 9727              ;   Modifica: DE y HL.
  25+ 9727
  26+ 9727 ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 972B FD F9        	ld sp,iy
  28+ 972D 06 10            ld b,16
  29+ 972F D1           1 pop de
  30+ 9730 7B               ld a,e
  31+ 9731 AE               xor (hl)
  32+ 9732 77           	ld (hl),a
  33+ 9733 23           	inc hl
  34+ 9734 7A               ld a,d
  35+ 9735 AE               xor (hl)
  36+ 9736 77           	ld (hl),a
  37+ 9737 2B           	dec hl
  38+ 9738 24           	inc h
  39+ 9739 7C               ld a,h
  40+ 973A E6 07            and 7
  41+ 973C 20 0A            jr nz,2F
  42+ 973E 7D               ld a,l
  43+ 973F C6 20            add a,$20
  44+ 9741 6F               ld l,a
  45+ 9742 38 04            jr c,2F
  46+ 9744 7C               ld a,h
  47+ 9745 D6 08            sub 8
  48+ 9747 67               ld h,a
  49+ 9748 7C           2 ld a,h
  50+ 9749 FE 58            cp $58
  51+ 974B 28 02            jr z,3F
  52+ 974D 10 E0            djnz 1B
  53+ 974F ED 7B 14 89  3 ld sp,(Stack)
  54+ 9753 C9           	ret
  55+ 9754
  56+ 9754 ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9758 FD F9        	ld sp,iy
  58+ 975A 06 08            ld b,8
  59+ 975C D1           1 pop de
  60+ 975D 7B               ld a,e
  61+ 975E AE               xor (hl)
  62+ 975F 77           	ld (hl),a
  63+ 9760 23           	inc hl
  64+ 9761 7A               ld a,d
  65+ 9762 AE               xor (hl)
  66+ 9763 77           	ld (hl),a
  67+ 9764 23           	inc hl
  68+ 9765 D1           	pop de
  69+ 9766 7B               ld a,e
  70+ 9767 AE               xor (hl)
  71+ 9768 77           	ld (hl),a
  72+ 9769 2B           	dec hl
  73+ 976A 2B           	dec hl
  74+ 976B 24           	inc h
  75+ 976C 7C               ld a,h
  76+ 976D E6 07            and 7
  77+ 976F 20 0A            jr nz,2F
  78+ 9771 7D               ld a,l
  79+ 9772 C6 20            add a,$20
  80+ 9774 6F               ld l,a
  81+ 9775 38 04            jr c,2F
  82+ 9777 7C               ld a,h
  83+ 9778 D6 08            sub 8
  84+ 977A 67               ld h,a
  85+ 977B 7C           2 ld a,h
  86+ 977C FE 58            cp $58
  87+ 977E 28 25            jr z,4F
  88+ 9780 7A               ld a,d
  89+ 9781 AE               xor (hl)
  90+ 9782 77               ld (hl),a
  91+ 9783 D1           	pop de
  92+ 9784 23           	inc hl
  93+ 9785 7B               ld a,e
  94+ 9786 AE               xor (hl)
  95+ 9787 77           	ld (hl),a
  96+ 9788 23           	inc hl
  97+ 9789 7A               ld a,d
  98+ 978A AE               xor (hl)
  99+ 978B 77           	ld (hl),a
 100+ 978C 2B           	dec hl
 101+ 978D 2B           	dec hl
 102+ 978E 24           	inc h
 103+ 978F 7C               ld a,h
 104+ 9790 E6 07            and 7
 105+ 9792 20 0A            jr nz,3F
 106+ 9794 7D               ld a,l
 107+ 9795 C6 20            add a,$20
 108+ 9797 6F               ld l,a
 109+ 9798 38 04            jr c,3F
 110+ 979A 7C               ld a,h
 111+ 979B D6 08            sub 8
 112+ 979D 67               ld h,a
 113+ 979E 7C           3 ld a,h
 114+ 979F FE 58            cp $58
 115+ 97A1 28 02            jr z,4F
 116+ 97A3 10 B7            djnz 1B
 117+ 97A5 ED 7B 14 89  4 ld sp,(Stack)
 118+ 97A9 C9           	ret
 119+ 97AA
 120+ 97AA              ; ---------------------------------------------------
 121+ 97AA
 122+ 97AA ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97AE FD F9        	ld sp,iy
 124+ 97B0
 125+ 97B0              ; >>>
 126+ 97B0
 127+ 97B0 06 10            ld b,16
 128+ 97B2 D1           1 pop de
 129+ 97B3 7A           	ld a,d
 130+ 97B4 AE           	xor (hl)
 131+ 97B5 77           	ld (hl),a
 132+ 97B6 24           	inc h
 133+ 97B7 7C               ld a,h
 134+ 97B8 E6 07            and 7
 135+ 97BA 20 0C            jr nz,2F
 136+ 97BC 7D               ld a,l
 137+ 97BD C6 20            add a,$20
 138+ 97BF 6F               ld l,a
 139+ 97C0 38 06            jr c,2F
 140+ 97C2 7C               ld a,h
 141+ 97C3 D6 08            sub 8
 142+ 97C5 67               ld h,a
 143+ 97C6 18 00            jr 2F
 144+ 97C8 7C           2 ld a,h
 145+ 97C9 FE 58            cp $58
 146+ 97CB 28 02            jr z,3F
 147+ 97CD 10 E3            djnz 1B
 148+ 97CF ED 7B 14 89  3 ld sp,(Stack)
 149+ 97D3 C9           	ret
 150+ 97D4
 151+ 97D4 ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97D8 FD F9        	ld sp,iy
 153+ 97DA
 154+ 97DA              ; >>>
 155+ 97DA
 156+ 97DA 06 10            ld b,16
 157+ 97DC D1           1 pop de
 158+ 97DD 7B           	ld a,e
 159+ 97DE AE           	xor (hl)
 160+ 97DF 77           	ld (hl),a
 161+ 97E0 24           	inc h
 162+ 97E1 7C               ld a,h
 163+ 97E2 E6 07            and 7
 164+ 97E4 20 0C            jr nz,2F
 165+ 97E6 7D               ld a,l
 166+ 97E7 C6 20            add a,$20
 167+ 97E9 6F               ld l,a
 168+ 97EA 38 06            jr c,2F
 169+ 97EC 7C               ld a,h
 170+ 97ED D6 08            sub 8
 171+ 97EF 67               ld h,a
 172+ 97F0 18 00            jr 2F
 173+ 97F2 7C           2 ld a,h
 174+ 97F3 FE 58            cp $58
 175+ 97F5 28 02            jr z,3F
 176+ 97F7 10 E3            djnz 1B
 177+ 97F9 ED 7B 14 89  3 ld sp,(Stack)
 178+ 97FD C9           	ret
 179+ 97FE
 180+ 97FE              ; ---------------------------------------------------
 181+ 97FE
 182+ 97FE ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9802 FD F9        	ld sp,iy
 184+ 9804 06 08            ld b,8
 185+ 9806 D1           1 pop de
 186+ 9807 7A           	ld a,d
 187+ 9808 AE           	xor (hl)
 188+ 9809 77           	ld (hl),a
 189+ 980A 23           	inc hl
 190+ 980B D1           	pop de
 191+ 980C 7B           	ld a,e
 192+ 980D AE           	xor (hl)
 193+ 980E 77           	ld (hl),a
 194+ 980F 2B           	dec hl
 195+ 9810 24            	inc h
 196+ 9811 7C               ld a,h
 197+ 9812 E6 07            and 7
 198+ 9814 20 0A            jr nz,2F
 199+ 9816 7D               ld a,l
 200+ 9817 C6 20            add a,$20
 201+ 9819 6F               ld l,a
 202+ 981A 38 04            jr c,2F
 203+ 981C 7C               ld a,h
 204+ 981D D6 08            sub 8
 205+ 981F 67               ld h,a
 206+ 9820 7C           2 ld a,h
 207+ 9821 FE 58            cp $58
 208+ 9823 28 20            jr z,4F
 209+ 9825 D1               pop de
 210+ 9826 7B           	ld a,e
 211+ 9827 AE           	xor (hl)
 212+ 9828 77           	ld (hl),a
 213+ 9829 23           	inc hl
 214+ 982A 7A           	ld a,d
 215+ 982B AE           	xor (hl)
 216+ 982C 77           	ld (hl),a
 217+ 982D 2B           	dec hl
 218+ 982E 24           	inc h
 219+ 982F 7C               ld a,h
 220+ 9830 E6 07            and 7
 221+ 9832 20 0A            jr nz,3F
 222+ 9834 7D               ld a,l
 223+ 9835 C6 20            add a,$20
 224+ 9837 6F               ld l,a
 225+ 9838 38 04            jr c,3F
 226+ 983A 7C               ld a,h
 227+ 983B D6 08            sub 8
 228+ 983D 67               ld h,a
 229+ 983E 7C           3 ld a,h
 230+ 983F FE 58            cp $58
 231+ 9841 28 02            jr z,4F
 232+ 9843 10 C1            djnz 1B
 233+ 9845 ED 7B 14 89  4 ld sp,(Stack)
 234+ 9849 C9           	ret
 235+ 984A
 236+ 984A ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 984E FD F9        	ld sp,iy
 238+ 9850 06 08            ld b,8
 239+ 9852 D1           1 pop de
 240+ 9853 D1           	pop de
 241+ 9854 7B           	ld a,e
 242+ 9855 AE           	xor (hl)
 243+ 9856 77           	ld (hl),a
 244+ 9857 24            	inc h
 245+ 9858 7C               ld a,h
 246+ 9859 E6 07            and 7
 247+ 985B 20 0A            jr nz,2F
 248+ 985D 7D               ld a,l
 249+ 985E C6 20            add a,$20
 250+ 9860 6F               ld l,a
 251+ 9861 38 04            jr c,2F
 252+ 9863 7C               ld a,h
 253+ 9864 D6 08            sub 8
 254+ 9866 67               ld h,a
 255+ 9867 7C           2 ld a,h
 256+ 9868 FE 58            cp $58
 257+ 986A 28 1B            jr z,4F
 258+ 986C D1               pop de
 259+ 986D 7A           	ld a,d
 260+ 986E AE           	xor (hl)
 261+ 986F 77           	ld (hl),a
 262+ 9870 24           	inc h
 263+ 9871 7C               ld a,h
 264+ 9872 E6 07            and 7
 265+ 9874 20 0A            jr nz,3F
 266+ 9876 7D               ld a,l
 267+ 9877 C6 20            add a,$20
 268+ 9879 6F               ld l,a
 269+ 987A 38 04            jr c,3F
 270+ 987C 7C               ld a,h
 271+ 987D D6 08            sub 8
 272+ 987F 67               ld h,a
 273+ 9880 7C           3 ld a,h
 274+ 9881 FE 58            cp $58
 275+ 9883 28 02            jr z,4F
 276+ 9885 10 CB            djnz 1B
 277+ 9887 ED 7B 14 89  4 ld sp,(Stack)
 278+ 988B C9           	ret
 279+ 988C
 280+ 988C ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9890 FD F9        	ld sp,iy
 282+ 9892 06 08            ld b,8
 283+ 9894 D1           1 pop de
 284+ 9895 7B           	ld a,e
 285+ 9896 AE           	xor (hl)
 286+ 9897 77           	ld (hl),a
 287+ 9898 23           	inc hl
 288+ 9899 7A           	ld a,d
 289+ 989A AE           	xor (hl)
 290+ 989B 77           	ld (hl),a
 291+ 989C 2B           	dec hl
 292+ 989D 24             	inc h
 293+ 989E 7C               ld a,h
 294+ 989F E6 07            and 7
 295+ 98A1 20 0A            jr nz,2F
 296+ 98A3 7D               ld a,l
 297+ 98A4 C6 20            add a,$20
 298+ 98A6 6F               ld l,a
 299+ 98A7 38 04            jr c,2F
 300+ 98A9 7C               ld a,h
 301+ 98AA D6 08            sub 8
 302+ 98AC 67               ld h,a
 303+ 98AD 7C           2 ld a,h
 304+ 98AE FE 58            cp $58
 305+ 98B0 28 21            jr z,4F
 306+ 98B2 D1               pop de
 307+ 98B3 7A           	ld a,d
 308+ 98B4 AE           	xor (hl)
 309+ 98B5 77           	ld (hl),a
 310+ 98B6 23           	inc hl
 311+ 98B7 D1               pop de
 312+ 98B8 7B           	ld a,e
 313+ 98B9 AE           	xor (hl)
 314+ 98BA 77           	ld (hl),a
 315+ 98BB 2B           	dec hl
 316+ 98BC 24           	inc h
 317+ 98BD 7C               ld a,h
 318+ 98BE E6 07            and 7
 319+ 98C0 20 0A            jr nz,3F
 320+ 98C2 7D               ld a,l
 321+ 98C3 C6 20            add a,$20
 322+ 98C5 6F               ld l,a
 323+ 98C6 38 04            jr c,3F
 324+ 98C8 7C               ld a,h
 325+ 98C9 D6 08            sub 8
 326+ 98CB 67               ld h,a
 327+ 98CC 7C           3 ld a,h
 328+ 98CD FE 58            cp $58
 329+ 98CF 28 02            jr z,4F
 330+ 98D1 10 C1            djnz 1B
 331+ 98D3 ED 7B 14 89  4 ld sp,(Stack)
 332+ 98D7 C9           	ret
 333+ 98D8
 334+ 98D8 ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98DC FD F9        	ld sp,iy
 336+ 98DE 06 08            ld b,8
 337+ 98E0 D1           1 pop de
 338+ 98E1 7B           	ld a,e
 339+ 98E2 AE           	xor (hl)
 340+ 98E3 77           	ld (hl),a
 341+ 98E4 24            	inc h
 342+ 98E5 7C               ld a,h
 343+ 98E6 E6 07            and 7
 344+ 98E8 20 0A            jr nz,2F
 345+ 98EA 7D               ld a,l
 346+ 98EB C6 20            add a,$20
 347+ 98ED 6F               ld l,a
 348+ 98EE 38 04            jr c,2F
 349+ 98F0 7C               ld a,h
 350+ 98F1 D6 08            sub 8
 351+ 98F3 67               ld h,a
 352+ 98F4 7C           2 ld a,h
 353+ 98F5 FE 58            cp $58
 354+ 98F7 28 1C            jr z,4F
 355+ 98F9 D1               pop de
 356+ 98FA 7A           	ld a,d
 357+ 98FB AE           	xor (hl)
 358+ 98FC 77           	ld (hl),a
 359+ 98FD 24           	inc h
 360+ 98FE 7C               ld a,h
 361+ 98FF E6 07            and 7
 362+ 9901 20 0A            jr nz,3F
 363+ 9903 7D               ld a,l
 364+ 9904 C6 20            add a,$20
 365+ 9906 6F               ld l,a
 366+ 9907 38 04            jr c,3F
 367+ 9909 7C               ld a,h
 368+ 990A D6 08            sub 8
 369+ 990C 67               ld h,a
 370+ 990D 7C           3 ld a,h
 371+ 990E FE 58            cp $58
 372+ 9910 28 03            jr z,4F
 373+ 9912 D1               pop de
 374+ 9913 10 CB            djnz 1B
 375+ 9915 ED 7B 14 89  4 ld sp,(Stack)
 376+ 9919 C9           	ret
 377+ 991A
 378+ 991A              ; ---------------------------------------------------
 379+ 991A              ;
 380+ 991A              ;   27/02/23
 381+ 991A              ;
 382+ 991A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 991A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 991A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 991A
 386+ 991A ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 991E FD F9            ld sp,iy
 388+ 9920 06 03            ld b,3
 389+ 9922 D1           1 pop de
 390+ 9923 7B               ld a,e
 391+ 9924 AE               xor (hl)
 392+ 9925 77               ld (hl),a
 393+ 9926 23               inc hl
 394+ 9927 7A               ld a,d
 395+ 9928 AE               xor (hl)
 396+ 9929 77               ld (hl),a
 397+ 992A 2B               dec hl
 398+ 992B
 399+ 992B 24               inc h
 400+ 992C 7C               ld a,h
 401+ 992D E6 07            and 7
 402+ 992F 20 0A            jr nz,2F
 403+ 9931 7D               ld a,l
 404+ 9932 C6 20            add a,$20
 405+ 9934 6F               ld l,a
 406+ 9935 38 04            jr c,2F
 407+ 9937 7C               ld a,h
 408+ 9938 D6 08            sub 8
 409+ 993A 67               ld h,a
 410+ 993B 7C           2 ld a,h
 411+ 993C FE 58            cp $58
 412+ 993E 28 02            jr z,3F
 413+ 9940
 414+ 9940 10 E0            djnz 1B
 415+ 9942 ED 7B 14 89  3 ld sp,(Stack)
 416+ 9946 C9               ret
 417+ 9947
# file closed: Rutinas_de_impresion_sprites.asm
1674  9947              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9947              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9947              ;
   3+ 9947              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9947              ;
   5+ 9947              ; *****************************************************************************************************************************************************************************************
   6+ 9947              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9947
   8+ 9947 7C           calcula_tercio ld a,h
   9+ 9948 E6 18        	and $18
  10+ 994A CB 2F        	sra a
  11+ 994C CB 2F        	sra a
  12+ 994E CB 2F        	sra a
  13+ 9950 C9           	ret
  14+ 9951
# file closed: calcula_tercio.asm
1675  9951              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9951              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9951              ;
   3+ 9951              ;
   4+ 9951              ;	CLS.
   5+ 9951              ;
   6+ 9951              ;	Limpia la pantalla y define sus atributos.
   7+ 9951              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9951              ;
   9+ 9951              ;	COLORES: 0 ..... NEGRO
  10+ 9951              ;    		 1 ..... AZUL
  11+ 9951              ; 			 2 ..... ROJO
  12+ 9951              ;			 3 ..... MAGENTA
  13+ 9951              ; 			 4 ..... VERDE
  14+ 9951              ; 			 5 ..... CIAN
  15+ 9951              ;			 6 ..... AMARILLO
  16+ 9951              ; 			 7 ..... BLANCO
  17+ 9951              ;
  18+ 9951              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9951              ;
  20+ 9951              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9951
  22+ 9951
  23+ 9951 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9954 11 01 40     	LD DE,$4001
  25+ 9957 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 995A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 995C ED B0        	LDIR
  28+ 995E 01 FF 02     	LD BC,767
  29+ 9961 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9962 ED B0        	LDIR
  31+ 9964 C9           	ret
  32+ 9965
# file closed: Cls.asm
1676  9965              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9965              ; ******************************************************************************************************************************************************************************************
   2+ 9965              ;
   3+ 9965              ;   20/05/23
   4+ 9965              ;
   5+ 9965              ;	Recompone_posicion_inicio
   6+ 9965              ;
   7+ 9965              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9965              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9965              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9965              ;	_ a una u otra rutina.
  11+ 9965
  12+ 9965              Recompone_posicion_inicio
  13+ 9965
  14+ 9965 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 9968 7D           	ld a,l
  16+ 9969 E6 1F        	and $1f
  17+ 996B 28 16        	jr z,1F
  18+ 996D
  19+ 996D FE 1F        	cp $1f
  20+ 996F 28 0D        	jr z,3F
  21+ 9971
  22+ 9971 21 01 89     	ld hl,Ctrl_2
  23+ 9974 CB C6        	set 0,(hl)
  24+ 9976 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 9979 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 997C 18 08        	jr 2F
  27+ 997E
  28+ 997E CD 1F 9B     3 call Mov_left
  29+ 9981 18 03        	jr 2F
  30+ 9983
  31+ 9983 CD 01 9A     1 call Mov_right
  32+ 9986 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9989 22 CA 88     	ld (Puntero_objeto),hl
  34+ 998C C9           	ret
  35+ 998D
  36+ 998D              ; ******************************************************************************************************************************************************************************************
  37+ 998D              ;
  38+ 998D              ;   27/05/23
  39+ 998D              ;
  40+ 998D              ;	Mov_down
  41+ 998D              ;
  42+ 998D              ; 	Mueve el Sprite X px hacia abajo.
  43+ 998D              ;
  44+ 998D              ;
  45+ 998D              Mov_down
  46+ 998D
  47+ 998D CD EF 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9990              ;																	; _ repone (Puntero_objeto).
  49+ 9990 21 F0 88     	ld hl,Ctrl_0
  50+ 9993 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9995              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9995              ; 																	; _ en el caso de que no lo haya.
  53+ 9995 3A DE 88     	ld a,(Vel_down)
  54+ 9998 47           	ld b,a
  55+ 9999 2A C8 88         ld hl,(Posicion_actual)
  56+ 999C CD 47 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 999F E6 02        	and 2
  58+ 99A1 28 0F        	jr z,1F
  59+ 99A3
  60+ 99A3              ; Nos encontramos en el último tercio de pantalla.
  61+ 99A3              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99A3
  63+ 99A3 7C           	ld a,h
  64+ 99A4 FE 57        	cp $57
  65+ 99A6 20 0A        	jr nz,1F
  66+ 99A8
  67+ 99A8 7D           	ld a,l
  68+ 99A9 C6 20        	add $20
  69+ 99AB 30 05        	jr nc,1F
  70+ 99AD
  71+ 99AD              ; ------------------------------
  72+ 99AD              ;	call Reaparece_arriba
  73+ 99AD CD AC 9C     	call Reinicio
  74+ 99B0              ; ------------------------------
  75+ 99B0
  76+ 99B0 18 08        	jr 3F
  77+ 99B2 CD 34 96     1 call NextScan
  78+ 99B5 22 C8 88     	ld (Posicion_actual),hl
  79+ 99B8 10 E2            djnz 2B
  80+ 99BA CD D2 9C     3 call Genera_coordenadas
  81+ 99BD C9           	ret
  82+ 99BE
  83+ 99BE              ; ******************************************************************************************************************************************************************************************
  84+ 99BE              ;
  85+ 99BE              ;   27/05/23
  86+ 99BE              ;
  87+ 99BE              ;	Mov_up
  88+ 99BE              ;
  89+ 99BE              ; 	Mueve el Sprite hacia arriba.
  90+ 99BE              ;
  91+ 99BE              ;
  92+ 99BE              Mov_up
  93+ 99BE
  94+ 99BE CD EF 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99C1              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99C1 21 F0 88     	ld hl,Ctrl_0
  97+ 99C4 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99C6              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99C6              ; 																		; _ en el caso de que no lo haya.
 100+ 99C6 3A DD 88     	ld a,(Vel_up)
 101+ 99C9 47           	ld b,a
 102+ 99CA 2A C8 88     	ld hl,(Posicion_actual)
 103+ 99CD CD 47 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99D0 A7           	and a
 105+ 99D1 20 10        	jr nz,1F
 106+ 99D3
 107+ 99D3              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99D3              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99D3
 110+ 99D3 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99D4 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99D6 20 0B            jr nz,1F
 113+ 99D8 7D               ld a,l
 114+ 99D9 D6 20            sub $20
 115+ 99DB 30 06            jr nc,1F
 116+ 99DD 25               dec h
 117+ 99DE
 118+ 99DE              ; -----------------------------
 119+ 99DE CD 8D 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99E1              ;	call Reinicio
 121+ 99E1              ; -----------------------------
 122+ 99E1
 123+ 99E1 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99E3 CD 43 96     1 call PreviousScan
 125+ 99E6 22 C8 88     	ld (Posicion_actual),hl
 126+ 99E9 10 E2            djnz 3B
 127+ 99EB CD D2 9C     2 call Genera_coordenadas
 128+ 99EE C9           	ret
 129+ 99EF
 130+ 99EF              ; -----------------------------
 131+ 99EF              ;
 132+ 99EF              ;	27/5/23
 133+ 99EF              ;
 134+ 99EF              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99EF              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99EF              ;
 137+ 99EF              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99EF              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99EF              ;
 140+ 99EF              ;	Modifica: A y (Puntero_objeto).
 141+ 99EF
 142+ 99EF 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99F2 CB 47        	bit 0,a
 144+ 99F4 C8           	ret z
 145+ 99F5 CB 87        	res 0,a
 146+ 99F7 32 01 89     	ld (Ctrl_2),a
 147+ 99FA 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 99FD 22 CA 88     	ld (Puntero_objeto),hl
 149+ 9A00 C9           	ret
 150+ 9A01
 151+ 9A01              ; ******************************************************************************************************************************************************************************************
 152+ 9A01              ;
 153+ 9A01              ;	19/10/22
 154+ 9A01              ;
 155+ 9A01              ;	Mov_right.
 156+ 9A01              ;
 157+ 9A01              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A01              ;
 159+ 9A01
 160+ 9A01 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 9A04 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A06              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A06              ; 																	; _ en el caso de que no lo haya.
 164+ 9A06 3A F0 88     	ld a,(Ctrl_0)
 165+ 9A09 CB 77        	bit 6,a
 166+ 9A0B 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A0D
 168+ 9A0D CD 3B 9C     	call Stop_Amadeus_right
 169+ 9A10 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A11 18 4D        	jr 8F
 171+ 9A13
 172+ 9A13 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A16 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A18 20 46        	jr nz,8F
 175+ 9A1A
 176+ 9A1A 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A1D A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A1E 28 40        	jr z,8F
 179+ 9A20
 180+ 9A20              ; ---------- ---------- ----------
 181+ 9A20              ;
 182+ 9A20              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A20
 184+ 9A20 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A23 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A25 28 11        	jr z,1F
 187+ 9A27 38 06        	jr c,6F
 188+ 9A29 FE 04        	cp 4
 189+ 9A2B 28 14        	jr z,7F
 190+ 9A2D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A2F
 192+ 9A2F              ; ---------- ---------- ----------
 193+ 9A2F              ;
 194+ 9A2F              ; Perfiles de velocidad
 195+ 9A2F              ;
 196+ 9A2F
 197+ 9A2F 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A32 FE FE        	cp $fe
 199+ 9A34 20 2A        	jr nz,8F
 200+ 9A36 18 10        	jr 3F
 201+ 9A38 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A3B FE FD        	cp $fd
 203+ 9A3D 20 21        	jr nz,8F
 204+ 9A3F 18 07        	jr 3F
 205+ 9A41 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A44 FE FB        	cp $fb
 207+ 9A46 20 18        	jr nz,8F
 208+ 9A48
 209+ 9A48              ; ---------- ---------- ----------
 210+ 9A48
 211+ 9A48              3
 212+ 9A48 CD 7B 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A4B              ;	call Reinicio
 214+ 9A4B
 215+ 9A4B              ; ---------- ---------- ----------
 216+ 9A4B              ;
 217+ 9A4B              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A4B
 219+ 9A4B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A4D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A4E CD 67 9A     	call DESPLZ_DER
 222+ 9A51 C1           	pop bc
 223+ 9A52 10 F9        	djnz 5B
 224+ 9A54 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A57 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A58 22 C8 88     	ld (Posicion_actual),hl
 227+ 9A5B CD D2 9C     	call Genera_coordenadas
 228+ 9A5E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A60
 230+ 9A60              ; ---------- ---------- ----------
 231+ 9A60
 232+ 9A60 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9A63 CD 67 9A     	call DESPLZ_DER
 234+ 9A66 C9           2 ret
 235+ 9A67
 236+ 9A67              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A67              ;
 238+ 9A67              ;	22/9/22
 239+ 9A67              ;
 240+ 9A67
 241+ 9A67 CD 76 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A6A CD C2 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A6D CD EB 9A         call Ciclo_completo
 244+ 9A70 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A73 CB FE        	set 7,(hl)
 246+ 9A75 C9           	ret
 247+ 9A76
 248+ 9A76              ; ******************************************************************************************************************************************************************************************
 249+ 9A76              ;	15/02/23
 250+ 9A76              ;
 251+ 9A76
 252+ 9A76 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A79 47           	ld b,a
 254+ 9A7A 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A7D 23           1 inc hl
 256+ 9A7E 23           	inc hl
 257+ 9A7F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A81 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A84 CD 83 8C     	call Extrae_address
 260+ 9A87 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9A8A
 262+ 9A8A              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A8A
 264+ 9A8A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A8A              ; Cuántos movimientos hemos hecho ??
 266+ 9A8A              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A8A
 268+ 9A8A 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A8D EB           	ex de,hl
 270+ 9A8E A7           	and a
 271+ 9A8F ED 52        	sbc hl,de
 272+ 9A91 CB 3D        	srl l
 273+ 9A93 3E 08        6 ld a,8
 274+ 9A95 95           	sub l
 275+ 9A96 30 1E        	jr nc,3F
 276+ 9A98
 277+ 9A98              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A98              ; B="0".
 279+ 9A98
 280+ 9A98 04           4 inc b
 281+ 9A99 3C           	inc a
 282+ 9A9A 20 FC        	jr nz,4B
 283+ 9A9C 78           	ld a,b
 284+ 9A9D 08           	ex af,af
 285+ 9A9E 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9AA1 23           5 inc hl
 287+ 9AA2 23           	inc hl
 288+ 9AA3 10 FC        	djnz 5B
 289+ 9AA5 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AA8 CD 83 8C     	call Extrae_address
 291+ 9AAB 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9AAE
 293+ 9AAE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AAE              ; _(Posicion_actual).
 295+ 9AAE
 296+ 9AAE 21 C8 88     	ld hl,Posicion_actual
 297+ 9AB1 34           	inc (hl)
 298+ 9AB2 08               ex af,af
 299+ 9AB3 6F           	ld l,a
 300+ 9AB4 18 DD        	jr 6B
 301+ 9AB6
 302+ 9AB6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AB6
 304+ 9AB6 47           3 ld b,a
 305+ 9AB7 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9ABA 23           2 inc hl
 307+ 9ABB 23           	inc hl
 308+ 9ABC 10 FC        	djnz 2B
 309+ 9ABE 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AC1 C9           8 ret
 311+ 9AC2
 312+ 9AC2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AC2              ;
 314+ 9AC2              ;	24/7/22
 315+ 9AC2              ;
 316+ 9AC2              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AC2              ;
 318+ 9AC2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AC2              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AC2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AC2
 322+ 9AC2 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AC5 A7           	and a
 324+ 9AC6 20 1F        	jr nz,1F
 325+ 9AC8 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9ACA 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9ACD
 328+ 9ACD 21 C7 88     	ld hl,Columns
 329+ 9AD0 34           	inc (hl)
 330+ 9AD1 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9AD4 E6 01        	and 1
 332+ 9AD6 28 0F        	jr z,1F
 333+ 9AD8 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9ADB 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9ADC 22 C8 88     	ld (Posicion_actual),hl
 336+ 9ADF CD D2 9C     	call Genera_coordenadas
 337+ 9AE2 CD 47 9C     	call Inc_CTRL_DESPLZ
 338+ 9AE5 18 03        	jr 2F
 339+ 9AE7 CD 47 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AEA C9           2 ret
 341+ 9AEB
 342+ 9AEB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AEB              ;
 344+ 9AEB              ;	24/7/22
 345+ 9AEB              ;
 346+ 9AEB              ;	Ciclo_completo.
 347+ 9AEB              ;
 348+ 9AEB              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AEB              ;
 350+ 9AEB              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AEB              ; 	Decrementamos (Columns).
 352+ 9AEB              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AEB              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AEB
 355+ 9AEB
 356+ 9AEB 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AEE FE FF        	cp $ff
 358+ 9AF0 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AF2 E6 F0        	and $f0
 360+ 9AF4 20 28        	jr nz,3F
 361+ 9AF6
 362+ 9AF6              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AF6
 364+ 9AF6 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9AF9 47           	ld b,a
 366+ 9AFA 3E F8        	ld a,$f8
 367+ 9AFC 80           	add b
 368+ 9AFD 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9B00 18 1C        	jr 3F
 370+ 9B02 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B05 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B06 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B07 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9B0A 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B0D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B0F 20 0A        	jr nz,2F
 377+ 9B11 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B14 23           	inc hl
 379+ 9B15 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B18 CD D2 9C     	call Genera_coordenadas
 381+ 9B1B
 382+ 9B1B              ; Inicia el puntero de Sprite.
 383+ 9B1B
 384+ 9B1B CD 9A 8C     2 call Inicia_puntero_objeto_der
 385+ 9B1E C9           3 ret
 386+ 9B1F
 387+ 9B1F              ; ******************************************************************************************************************************************************************************************
 388+ 9B1F              ;
 389+ 9B1F              ;	15/02/23
 390+ 9B1F              ;
 391+ 9B1F              ;	Mov_left.
 392+ 9B1F              ;
 393+ 9B1F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B1F              ;
 395+ 9B1F              Mov_left
 396+ 9B1F
 397+ 9B1F 21 F0 88     	ld hl,Ctrl_0
 398+ 9B22 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B24              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B24              ; 																	; _ en el caso de que no lo haya.
 401+ 9B24 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B27 CB 77        	bit 6,a
 403+ 9B29 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B2B
 405+ 9B2B CD 41 9C     	call Stop_Amadeus_left
 406+ 9B2E C8           	ret z
 407+ 9B2F 20 4A        	jr nz,8F
 408+ 9B31
 409+ 9B31 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B34 A7           	and a
 411+ 9B35 20 44        	jr nz,8F
 412+ 9B37
 413+ 9B37 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B3A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B3B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B3D
 417+ 9B3D              ; ---------- ---------- ----------
 418+ 9B3D
 419+ 9B3D 3A DB 88     	ld a,(Vel_left)
 420+ 9B40 FE 02        	cp 2
 421+ 9B42 28 0F        	jr z,1F
 422+ 9B44 38 04        	jr c,6F
 423+ 9B46 FE 04        	cp 4
 424+ 9B48 28 12        	jr z,7F
 425+ 9B4A
 426+ 9B4A              ; ---------- ---------- ----------
 427+ 9B4A
 428+ 9B4A 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B4D FE F8        	cp $f8
 430+ 9B4F 20 2A        	jr nz,8F
 431+ 9B51 18 10        	jr 4F
 432+ 9B53 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B56 FE F9        	cp $f9
 434+ 9B58 20 21        	jr nz,8F
 435+ 9B5A 18 07        	jr 4F
 436+ 9B5C 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B5F FE FB        	cp $fb
 438+ 9B61 20 18        	jr nz,8F
 439+ 9B63
 440+ 9B63              ; ---------- ---------- ----------
 441+ 9B63
 442+ 9B63              4
 443+ 9B63 CD 69 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B66              ;	call Reinicio
 445+ 9B66
 446+ 9B66              ; ---------- ---------- ----------
 447+ 9B66
 448+ 9B66 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B68 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B69
 451+ 9B69              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B69              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B69
 454+ 9B69 CD 82 9B     	call DESPLZ_IZQ
 455+ 9B6C C1           	pop bc
 456+ 9B6D 10 F9        	djnz 5B
 457+ 9B6F 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B72 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B73 22 C8 88     	ld (Posicion_actual),hl
 460+ 9B76 CD D2 9C     	call Genera_coordenadas
 461+ 9B79 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B7B
 463+ 9B7B              ; ---------- ---------- ----------
 464+ 9B7B
 465+ 9B7B              ; Movemos, no hay recolocación.
 466+ 9B7B
 467+ 9B7B 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9B7E CD 82 9B     	call DESPLZ_IZQ
 469+ 9B81 C9           2 ret
 470+ 9B82
 471+ 9B82              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B82              ;
 473+ 9B82              ;	22/9/22
 474+ 9B82
 475+ 9B82              DESPLZ_IZQ
 476+ 9B82
 477+ 9B82 CD 91 9B     	call Desplaza_izquierda
 478+ 9B85 CD DD 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B88 CD 05 9C     	call Ciclo_completo_2
 480+ 9B8B 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B8E CB BE        	res 7,(hl)
 482+ 9B90 C9           	ret
 483+ 9B91
 484+ 9B91              Desplaza_izquierda
 485+ 9B91
 486+ 9B91 3A DB 88     	ld a,(Vel_left)
 487+ 9B94 47           	ld b,a
 488+ 9B95 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B98 23           1 inc hl
 490+ 9B99 23           	inc hl
 491+ 9B9A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B9C 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B9F CD 83 8C     	call Extrae_address
 494+ 9BA2 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9BA5
 496+ 9BA5              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BA5
 498+ 9BA5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BA5              ; Cuántos movimientos hemos hecho ??
 500+ 9BA5              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BA5
 502+ 9BA5 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BA8 EB           	ex de,hl
 504+ 9BA9 A7           	and a
 505+ 9BAA ED 52        	sbc hl,de
 506+ 9BAC CB 3D        	srl l
 507+ 9BAE 3E 08        6 ld a,8
 508+ 9BB0 95           	sub l
 509+ 9BB1 30 1E        	jr nc,3F
 510+ 9BB3
 511+ 9BB3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BB3              ; B="0".
 513+ 9BB3
 514+ 9BB3 04           4 inc b
 515+ 9BB4 3C           	inc a
 516+ 9BB5 20 FC        	jr nz,4B
 517+ 9BB7 78           	ld a,b
 518+ 9BB8 08           	ex af,af
 519+ 9BB9 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BBC 23           5 inc hl
 521+ 9BBD 23           	inc hl
 522+ 9BBE 10 FC        	djnz 5B
 523+ 9BC0 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BC3 CD 83 8C     	call Extrae_address
 525+ 9BC6 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9BC9
 527+ 9BC9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BC9              ; _(Posicion_actual).
 529+ 9BC9
 530+ 9BC9 21 C8 88     	ld hl,Posicion_actual
 531+ 9BCC 35           	dec (hl)
 532+ 9BCD 08           	ex af,af
 533+ 9BCE 6F           	ld l,a
 534+ 9BCF 18 DD        	jr 6B
 535+ 9BD1
 536+ 9BD1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BD1
 538+ 9BD1 47           3 ld b,a
 539+ 9BD2 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9BD5 23           2 inc hl
 541+ 9BD6 23           	inc hl
 542+ 9BD7 10 FC        	djnz 2B
 543+ 9BD9 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BDC C9           8 ret
 545+ 9BDD
 546+ 9BDD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BDD              ;
 548+ 9BDD              ;	modifica_parametros_1er_DESPLZ
 549+ 9BDD              ;
 550+ 9BDD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BDD              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BDD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BDD
 554+ 9BDD 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BE0 A7           	and a
 556+ 9BE1 20 1E        	jr nz,1F
 557+ 9BE3 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BE4 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9BE7 21 C7 88     	ld hl,Columns
 560+ 9BEA 34           	inc (hl)
 561+ 9BEB 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9BEE E6 01        	and 1
 563+ 9BF0 20 0F        	jr nz,1F
 564+ 9BF2 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BF5 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BF6 22 C8 88     	ld (Posicion_actual),hl
 567+ 9BF9 CD D2 9C     	call Genera_coordenadas
 568+ 9BFC CD 58 9C     	call Dec_CTRL_DESPLZ
 569+ 9BFF 18 03        	jr 2F
 570+ 9C01 CD 58 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C04 C9           2 ret
 572+ 9C05
 573+ 9C05              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C05
 575+ 9C05 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C08 FE F7        	cp $f7
 577+ 9C0A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C0C 30 2C        	jr nc,3F
 579+ 9C0E
 580+ 9C0E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C0E
 582+ 9C0E 06 00        	ld b,0
 583+ 9C10 04           4 inc b
 584+ 9C11 3C           	inc a
 585+ 9C12 FE F7        	cp $f7
 586+ 9C14 20 FA        	jr nz,4B
 587+ 9C16 3E FF        	ld a,$ff
 588+ 9C18 90           	sub b
 589+ 9C19 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C1C 18 1C        	jr 3F
 591+ 9C1E
 592+ 9C1E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C1E
 594+ 9C1E 21 C7 88     1 ld hl,Columns
 595+ 9C21 35           	dec (hl)
 596+ 9C22 AF           	xor a
 597+ 9C23 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C26 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C29 E6 01        	and 1
 600+ 9C2B 28 0A        	jr z,2F
 601+ 9C2D 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C30 2B           	dec hl
 603+ 9C31 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C34 CD D2 9C     	call Genera_coordenadas
 605+ 9C37
 606+ 9C37              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C37
 608+ 9C37 CD AD 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C3A C9           3 ret
 610+ 9C3B
 611+ 9C3B              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C3B              ;
 613+ 9C3B              ;	19/10/22
 614+ 9C3B              ;
 615+ 9C3B              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C3B              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C3B
 618+ 9C3B 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C3E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C40 C9           	ret
 621+ 9C41
 622+ 9C41              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C41              ;
 624+ 9C41              ;	19/10/22
 625+ 9C41              ;
 626+ 9C41              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C41              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C41
 629+ 9C41 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C44 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C46 C9           	ret
 632+ 9C47
 633+ 9C47              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C47              ;
 635+ 9C47              ;	24/7/22
 636+ 9C47              ;
 637+ 9C47              ;	Inc_CTRL_DESPLZ
 638+ 9C47              ;
 639+ 9C47              ;
 640+ 9C47              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C47
 642+ 9C47 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C4A 3A DC 88     	ld a,(Vel_right)
 644+ 9C4D A7           	and a
 645+ 9C4E 28 06        	jr z,1F
 646+ 9C50 47           	ld b,a
 647+ 9C51 34           3 inc (hl)
 648+ 9C52 10 FD        	djnz 3B
 649+ 9C54 18 01        	jr 2F
 650+ 9C56 34           1 inc (hl)
 651+ 9C57 C9           2 ret
 652+ 9C58
 653+ 9C58              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C58              ;
 655+ 9C58              ;	5/2/23
 656+ 9C58              ;
 657+ 9C58              ;	Dec_CTRL_DESPLZ
 658+ 9C58              ;
 659+ 9C58              ;
 660+ 9C58              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C58
 662+ 9C58 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C5B 3A DB 88     	ld a,(Vel_left)
 664+ 9C5E A7           	and a
 665+ 9C5F 28 06        	jr z,1F
 666+ 9C61 47           	ld b,a
 667+ 9C62 35           3 dec (hl)
 668+ 9C63 10 FD        	djnz 3B
 669+ 9C65 18 01        	jr 2F
 670+ 9C67 35           1 dec (hl)
 671+ 9C68 C9           2 ret
 672+ 9C69
 673+ 9C69              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C69
 675+ 9C69 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C6C 01 1F 00     	ld bc,31
 677+ 9C6F A7           	and a
 678+ 9C70 ED 4A        	adc hl,bc
 679+ 9C72 22 C8 88     	ld (Posicion_actual),hl
 680+ 9C75 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C78 CB C6        	set 0,(hl)
 682+ 9C7A C9           	ret
 683+ 9C7B
 684+ 9C7B              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C7B
 686+ 9C7B 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C7E 01 1F 00     	ld bc,31
 688+ 9C81 A7           	and a
 689+ 9C82 ED 42        	sbc hl,bc
 690+ 9C84 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C87 21 F0 88     	ld hl,Ctrl_0
 692+ 9C8A CB CE        	set 1,(hl)
 693+ 9C8C C9           	ret
 694+ 9C8D
 695+ 9C8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C8D
 697+ 9C8D 24           Reaparece_abajo inc h
 698+ 9C8E 01 E0 17     	ld bc,$17e0
 699+ 9C91 A7           	and a
 700+ 9C92 ED 4A        	adc hl,bc
 701+ 9C94 22 C8 88     	ld (Posicion_actual),hl
 702+ 9C97 21 F0 88     	ld hl,Ctrl_0
 703+ 9C9A CB D6        	set 2,(hl)
 704+ 9C9C C9           	ret
 705+ 9C9D
 706+ 9C9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C9D
 708+ 9C9D 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CA0 A7           	and a
 710+ 9CA1 ED 42        	sbc hl,bc
 711+ 9CA3 22 C8 88     	ld (Posicion_actual),hl
 712+ 9CA6 21 F0 88     	ld hl,Ctrl_0
 713+ 9CA9 CB DE        	set 3,(hl)
 714+ 9CAB C9           	ret
 715+ 9CAC
 716+ 9CAC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CAC              ;
 718+ 9CAC              ;	15/07/23
 719+ 9CAC
 720+ 9CAC              Reinicio
 721+ 9CAC
 722+ 9CAC              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CAC
 724+ 9CAC AF           	xor a
 725+ 9CAD 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CB0 CD CE 9C     	call Limpia_contenido_hl
 727+ 9CB3
 728+ 9CB3 21 C8 88     	ld hl,Posicion_actual
 729+ 9CB6 CD CE 9C     	call Limpia_contenido_hl
 730+ 9CB9
 731+ 9CB9 CD FE 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CBC CD 88 9F     	call Inicia_Puntero_mov
 733+ 9CBF
 734+ 9CBF 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9CC2 06 05        	ld b,5
 736+ 9CC4 77           1 ld (hl),a
 737+ 9CC5 23           	inc hl
 738+ 9CC6 10 FC        	djnz 1B
 739+ 9CC8
 740+ 9CC8 21 01 89     	ld hl,Ctrl_2
 741+ 9CCB CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CCD
 743+ 9CCD C9           	ret
 744+ 9CCE
 745+ 9CCE 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CCF 23           	inc hl
 747+ 9CD0 77           	ld (hl),a
 748+ 9CD1 C9           	ret
 749+ 9CD2
 750+ 9CD2
# file closed: Direcciones.asm
1677  9CD2              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CD2              ; ------------------------------------------------------------------------
   2+ 9CD2              ;
   3+ 9CD2              ;	02/04/23
   4+ 9CD2              ;
   5+ 9CD2              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CD2              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CD2              ;
   8+ 9CD2              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CD2              ;
  10+ 9CD2              ;	Modifica: A,BC y DE.
  11+ 9CD2
  12+ 9CD2 C5           Genera_coordenadas push bc
  13+ 9CD3 E5           	push hl
  14+ 9CD4 D5           	push de
  15+ 9CD5
  16+ 9CD5 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9CD8
  18+ 9CD8 7D           	ld a,l
  19+ 9CD9 E6 1F        	and $1f
  20+ 9CDB 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CDE
  22+ 9CDE CD 47 99     	call calcula_tercio
  23+ 9CE1 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CE2
  25+ 9CE2 1E 00        	ld e,0
  26+ 9CE4 7D           	ld a,l
  27+ 9CE5 E6 E0        	and $e0
  28+ 9CE7 28 01        	jr z,1F
  29+ 9CE9 04           	inc b
  30+ 9CEA
  31+ 9CEA 04           1 inc b
  32+ 9CEB 05           	dec b
  33+ 9CEC 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CEE              ;														; _ , salimos.
  35+ 9CEE 1C           3 inc e
  36+ 9CEF D6 20        	sub 32
  37+ 9CF1 20 FB        	jr nz,3B
  38+ 9CF3 10 F5        	djnz 1B
  39+ 9CF5
  40+ 9CF5 7B           2 ld a,e
  41+ 9CF6 32 CD 88     	ld (Coordenada_y),a
  42+ 9CF9
  43+ 9CF9 D1           	pop de
  44+ 9CFA E1           	pop hl
  45+ 9CFB C1           	pop bc
  46+ 9CFC
  47+ 9CFC C9           	ret
  48+ 9CFD
  49+ 9CFD              ; ------------------------------------------------------------------------
  50+ 9CFD              ;	28/05/23
  51+ 9CFD              ;
  52+ 9CFD              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CFD              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CFD              ;
  55+ 9CFD              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CFD              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CFD              ;
  58+ 9CFD              ;		DE="$120d"
  59+ 9CFD              ;
  60+ 9CFD              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CFD              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CFD              ;
  63+ 9CFD              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CFD
  65+ 9CFD              ;	Modifica: A,BC y DE.
  66+ 9CFD
  67+ 9CFD
  68+ 9CFD              Genera_coordenadas_disparo
  69+ 9CFD
  70+ 9CFD              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CFD
  72+ 9CFD 7D           	ld a,l
  73+ 9CFE E6 1F        	and $1f
  74+ 9D00 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D01 CD 47 99     	call calcula_tercio
  76+ 9D04 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D05 1E 00        	ld e,0
  78+ 9D07 7D           	ld a,l
  79+ 9D08 E6 E0        	and $e0
  80+ 9D0A 28 01        	jr z,1F
  81+ 9D0C 04           	inc b
  82+ 9D0D 1C           1 inc e
  83+ 9D0E D6 20        	sub 32
  84+ 9D10 20 FB        	jr nz,1B
  85+ 9D12 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D14 C9           	ret
  87+ 9D15
# file closed: Genera_coordenadas.asm
1678  9D15              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D15              ; Relojes y temporizaciones.
   2+ 9D15
   3+ 9D15              ; ------------------------------------------------------
   4+ 9D15              ;
   5+ 9D15              ;	16/7/23
   6+ 9D15              ;
   7+ 9D15              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D15              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D15              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D15              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D15              ;
  12+ 9D15              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D15              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D15
  15+ 9D15              ; Disparo_entidad db 1
  16+ 9D15              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D15              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D15
  19+ 9D15              Habilita_disparos
  20+ 9D15
  21+ 9D15 7E           	ld a,(hl)
  22+ 9D16 A7           	and a
  23+ 9D17 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D18
  25+ 9D18 EB           	ex de,hl
  26+ 9D19
  27+ 9D19 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D1A C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D1B
  30+ 9D1B              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D1B
  32+ 9D1B 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D1C 7E           	ld a,(hl)
  34+ 9D1D 23           	inc hl
  35+ 9D1E 77           	ld (hl),a
  36+ 9D1F
  37+ 9D1F EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D20 3E 01        	ld a,1
  39+ 9D22 77           	ld (hl),a
  40+ 9D23 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1679  9D24              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D24
   2+ 9D24
   3+ 9D24              ;   07/07/23
   4+ 9D24              ;
   5+ 9D24              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D24              ;
   7+ 9D24              ;   Codificación:
   8+ 9D24              ;
   9+ 9D24              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D24              ;
  11+ 9D24              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D24              ;
  13+ 9D24              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D24              ;
  15+ 9D24              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D24              ;
  17+ 9D24              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D24              ;                               ..... %01000010 Vel_up 4
  19+ 9D24              ;                                               Vel_down 2
  20+ 9D24              ;                               ..... $42
  21+ 9D24              ;
  22+ 9D24              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D24              ;
  24+ 9D24              ;                               ..... %01000010 Vel_left 4
  25+ 9D24              ;                                               Vel_right 2
  26+ 9D24              ;                               ..... $42
  27+ 9D24              ;
  28+ 9D24              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D24              ;
  30+ 9D24              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D24              ;
  32+ 9D24              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D24              ;
  34+ 9D24              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D24              ;                                     $53
  36+ 9D24              ;
  37+ 9D24              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D24              ;
  39+ 9D24              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D24              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D24              ;
  42+ 9D24              ;                       Arriba ..... $81
  43+ 9D24              ;                       Arriba - izquierda ..... $a1
  44+ 9D24              ;                       Arriba - derecha ..... $91
  45+ 9D24              ;
  46+ 9D24              ;                       Abajo ..... $41
  47+ 9D24              ;                       Abajo - izquierda ..... $61
  48+ 9D24              ;                       Abajo - derecha ..... $51
  49+ 9D24              ;
  50+ 9D24              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D24              ;
  52+ 9D24              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D24              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D24              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D24              ;
  56+ 9D24              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D24              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D24              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D24              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D24              ;
  61+ 9D24              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D24              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D24              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D24              ;
  65+ 9D24              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D24              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D24              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D24              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D24
  70+ 9D24              ; ----- ----- ----- ----- -----
  71+ 9D24
  72+ 9D24 50 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D26 58 9D            defw F_1
  74+ 9D28 62 9D            defw F_2
  75+ 9D2A 6C 9D            defw Codo_abajo_derecha
  76+ 9D2C A0 9D            defw Derecha_y_subiendo
  77+ 9D2E AA 9D            defw Derecha_y_subiendo_1
  78+ 9D30 B4 9D            defw F_3
  79+ 9D32 BE 9D            defw F_4
  80+ 9D34 C8 9D            defw Derecha_y_bajando
  81+ 9D36 D2 9D            defw Derecha_y_bajando_1
  82+ 9D38 DC 9D            defw Derecha_y_bajando_2
  83+ 9D3A E6 9D            defw Codo_derecha_abajo
  84+ 9D3C 16 9E            defw Codo_abajo_izq.
  85+ 9D3E 4A 9E            defw Izquierda_y_subiendo
  86+ 9D40 54 9E            defw Izquierda_y_subiendo_1
  87+ 9D42 5E 9E            defw F_5
  88+ 9D44 68 9E            defw F_6
  89+ 9D46 72 9E            defw Izquierda_y_bajando
  90+ 9D48 7C 9E            defw Izquierda_y_bajando_1
  91+ 9D4A 86 9E            defw Izquierda_y_bajando_2
  92+ 9D4C 90 9E            defw Codo_izquierda_abajo
  93+ 9D4E 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D50
  95+ 9D50 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D54 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D58
  98+ 9D58 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D5C 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D60 08 00
 100+ 9D62 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D66 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D6A 0F FE
 102+ 9D6C
 103+ 9D6C 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D70 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D74 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D78 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D7C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D80 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D84 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D88 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D8C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D90 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D94 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D98 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D9C 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DA0
 117+ 9DA0 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DA4 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DA8 06 00
 119+ 9DAA
 120+ 9DAA 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DAE 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DB2 02 00
 122+ 9DB4
 123+ 9DB4 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DB8 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DBC 04 00
 125+ 9DBE 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DC2 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DC6 08 00
 127+ 9DC8
 128+ 9DC8 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DCC 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DD0 02 00
 130+ 9DD2
 131+ 9DD2 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DD6 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DDA 06 00
 133+ 9DDC
 134+ 9DDC 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DE0 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DE4 06 00
 136+ 9DE6
 137+ 9DE6              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DE6
 139+ 9DE6 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DEA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DEE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DF2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DF6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DFA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DFE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E02 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E06 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E0A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E0E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E12 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E16
 152+ 9E16 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E1A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E1E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E22 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E26 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E2A 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E2E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E32 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E36 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E3A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E3E 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E42 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E46 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E4A
 166+ 9E4A 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E4E 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E52 06 00
 168+ 9E54
 169+ 9E54 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E58 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E5C 02 00
 171+ 9E5E
 172+ 9E5E 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E62 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E66 04 00
 174+ 9E68 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E6C 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E70 08 00
 176+ 9E72
 177+ 9E72 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E76 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E7A 02 00
 179+ 9E7C
 180+ 9E7C 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E80 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E84 06 00
 182+ 9E86
 183+ 9E86 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E8A 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E8E 06 00
 185+ 9E90
 186+ 9E90 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E94 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E98 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E9C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EA0 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EA4 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EA8 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EAC 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EB0 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EB4 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EB8 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EBC 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EC0
 199+ 9EC0              ; ----- ----- ----- ----- -----
 200+ 9EC0              ;
 201+ 9EC0              ;   27/06/23
 202+ 9EC0
 203+ 9EC0              Movimiento
 204+ 9EC0
 205+ 9EC0              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EC0
 207+ 9EC0              ;    ld hl,(Posicion_actual)
 208+ 9EC0
 209+ 9EC0 3A 01 89         ld a,(Ctrl_2)
 210+ 9EC3 CB 57            bit 2,a
 211+ 9EC5 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EC7
 213+ 9EC7 2A F3 88         ld hl,(Puntero_mov)
 214+ 9ECA 7E               ld a,(hl)
 215+ 9ECB
 216+ 9ECB              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9ECB
 218+ 9ECB              Inicia_desplazamiento.
 219+ 9ECB
 220+ 9ECB              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9ECB
 222+ 9ECB CD BF 9F         call Ajusta_velocidad_desplazamiento
 223+ 9ECE
 224+ 9ECE              ; Iniciamos (Repetimos_mov).
 225+ 9ECE
 226+ 9ECE 7E               ld a,(hl)
 227+ 9ECF E6 0F            and $0f
 228+ 9ED1 32 F9 88         ld (Repetimos_desplazamiento),a
 229+ 9ED4 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9ED7
 231+ 9ED7              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9ED7
 233+ 9ED7 23               inc hl
 234+ 9ED8 7E               ld a,(hl)
 235+ 9ED9 32 FC 88         ld (Cola_de_desplazamiento),a
 236+ 9EDC 2B               dec hl
 237+ 9EDD
 238+ 9EDD 21 01 89         ld hl,Ctrl_2
 239+ 9EE0 CB D6            set 2,(hl)
 240+ 9EE2
 241+ 9EE2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EE2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EE2
 244+ 9EE2              Desplazamiento_iniciado
 245+ 9EE2
 246+ 9EE2 CD 93 9F         call Aplica_desplazamiento
 247+ 9EE5
 248+ 9EE5 3A 01 89         ld a,(Ctrl_2)
 249+ 9EE8 CB 67            bit 4,a
 250+ 9EEA C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EEB
 252+ 9EEB 21 F9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EEE 35               dec (hl)
 254+ 9EEF C0               ret nz
 255+ 9EF0
 256+ 9EF0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EF0              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EF0              ; Analiza (Cola_de_desplazamiento).
 259+ 9EF0
 260+ 9EF0 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EF3 A7               and a
 262+ 9EF4 CC E8 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EF7 28 30            jr z,Reinicia_el_movimiento
 264+ 9EF9
 265+ 9EF9 FE FF            cp $ff
 266+ 9EFB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EFD
 268+ 9EFD FE FE            cp $fe
 269+ 9EFF CC 6C 9F         call z,Fijamos_bucle
 270+ 9F02 28 25            jr z,Reinicia_el_movimiento
 271+ 9F04
 272+ 9F04 FE FD            cp $fd
 273+ 9F06 20 11            jr nz,1F
 274+ 9F08
 275+ 9F08              ; ---
 276+ 9F08              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F08
 278+ 9F08 3A 01 89         ld a,(Ctrl_2)
 279+ 9F0B CB 5F            bit 3,a
 280+ 9F0D 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F0F
 282+ 9F0F              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F0F
 284+ 9F0F 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F12 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F14
 287+ 9F14 CD 7D 9F         call Inicia_Repetimos_movimiento
 288+ 9F17 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F19              ; ---
 290+ 9F19
 291+ 9F19 FE 01        1 cp 1
 292+ 9F1B CA 56 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F1E
 294+ 9F1E 3D               dec a
 295+ 9F1F 32 FC 88         ld (Cola_de_desplazamiento),a
 296+ 9F22
 297+ 9F22 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F25 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F28              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F28 C9               ret
 301+ 9F29
 302+ 9F29              Reinicia_el_movimiento
 303+ 9F29
 304+ 9F29 3A 01 89         ld a,(Ctrl_2)
 305+ 9F2C CB 5F            bit 3,a
 306+ 9F2E 28 1B            jr z,2F
 307+ 9F30
 308+ 9F30              ; (Cola_de_desplazamiento)="254".
 309+ 9F30
 310+ 9F30 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F33 35               dec (hl)
 312+ 9F34 20 15            jr nz,2F
 313+ 9F36
 314+ 9F36              ; Fin de las repeticiones del último movimiento.
 315+ 9F36
 316+ 9F36 21 01 89         ld hl,Ctrl_2
 317+ 9F39 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F3B
 319+ 9F3B 2A F3 88         ld hl,(Puntero_mov)
 320+ 9F3E 23               inc hl
 321+ 9F3F 23               inc hl
 322+ 9F40 23               inc hl
 323+ 9F41 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F44              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F44 7E               ld a,(hl)
 326+ 9F45 32 FC 88         ld (Cola_de_desplazamiento),a
 327+ 9F48
 328+ 9F48 C3 F0 9E         jp Cola
 329+ 9F4B
 330+ 9F4B CD 88 9F     2 call Inicia_Puntero_mov
 331+ 9F4E
 332+ 9F4E 21 01 89         ld hl,Ctrl_2
 333+ 9F51 CB 96            res 2,(hl)
 334+ 9F53
 335+ 9F53 C3 C0 9E         jp Movimiento
 336+ 9F56
 337+ 9F56              Siguiente_desplazamiento
 338+ 9F56
 339+ 9F56              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F56              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F56
 342+ 9F56 21 01 89         ld hl,Ctrl_2
 343+ 9F59 CB 96            res 2,(hl)
 344+ 9F5B
 345+ 9F5B 2A F3 88         ld hl,(Puntero_mov)
 346+ 9F5E 23               inc hl
 347+ 9F5F 23               inc hl
 348+ 9F60 22 F3 88         ld (Puntero_mov),hl
 349+ 9F63
 350+ 9F63 7E               ld a,(hl)
 351+ 9F64 A7               and a
 352+ 9F65 CC E8 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F68 CA 29 9F         jp z,Reinicia_el_movimiento
 354+ 9F6B
 355+ 9F6B C9               ret
 356+ 9F6C              ; Subrutinas -----------------------------------------
 357+ 9F6C              ; ---------- --------- --------- ---------- ----------
 358+ 9F6C              ;
 359+ 9F6C              ;   24/07/23
 360+ 9F6C              ;
 361+ 9F6C              ;   Fijamos_bucle
 362+ 9F6C              ;
 363+ 9F6C              ;
 364+ 9F6C
 365+ 9F6C              Fijamos_bucle
 366+ 9F6C
 367+ 9F6C 3A F7 88         ld a,(Incrementa_puntero)
 368+ 9F6F 3C               inc a
 369+ 9F70 32 F8 88         ld (Incrementa_puntero_backup),a
 370+ 9F73
 371+ 9F73 CD E8 9F         call Incrementa_Puntero_indice_mov
 372+ 9F76 2A F1 88         ld hl,(Puntero_indice_mov)
 373+ 9F79 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F7C C9               ret
 375+ 9F7D
 376+ 9F7D              ; ---------- --------- --------- ---------- ----------
 377+ 9F7D              ;
 378+ 9F7D              ;   07/7/23
 379+ 9F7D              ;
 380+ 9F7D              ;   Inicia_Repetimos_movimiento
 381+ 9F7D              ;
 382+ 9F7D              ;
 383+ 9F7D
 384+ 9F7D              Inicia_Repetimos_movimiento
 385+ 9F7D
 386+ 9F7D              ; Iniciamos (Repetimos_movimiento).
 387+ 9F7D
 388+ 9F7D DD 2A F3 88      ld ix,(Puntero_mov)
 389+ 9F81 DD 7E 02         ld a,(ix+2)
 390+ 9F84 32 FB 88         ld (Repetimos_movimiento),a
 391+ 9F87
 392+ 9F87 C9               ret
 393+ 9F88
 394+ 9F88              ; ---------- --------- --------- ---------- ----------
 395+ 9F88              ;
 396+ 9F88              ;   26/6/23
 397+ 9F88              ;
 398+ 9F88              ;   Inicia_Puntero_mov
 399+ 9F88              ;
 400+ 9F88              ;
 401+ 9F88
 402+ 9F88 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F8B 5E               ld e,(hl)
 404+ 9F8C 23               inc hl
 405+ 9F8D 56               ld d,(hl)
 406+ 9F8E EB               ex de,hl
 407+ 9F8F 22 F3 88         ld (Puntero_mov),hl
 408+ 9F92 C9               ret
 409+ 9F93
 410+ 9F93              ; ---------- --------- --------- ---------- ----------
 411+ 9F93              ;
 412+ 9F93              ;   27/06/23
 413+ 9F93              ;
 414+ 9F93              ;   Aplica_movimiento.
 415+ 9F93
 416+ 9F93              Aplica_desplazamiento
 417+ 9F93
 418+ 9F93              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F93
 420+ 9F93 2A F3 88         ld hl, (Puntero_mov)
 421+ 9F96
 422+ 9F96 7E               ld a,(hl)
 423+ 9F97 E6 F0            and $f0
 424+ 9F99 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F9A
 426+ 9F9A CB 7E            bit 7,(hl)
 427+ 9F9C 28 03            jr z,1F
 428+ 9F9E CD BE 99         call Mov_up
 429+ 9FA1 2A F3 88     1 ld hl, (Puntero_mov)
 430+ 9FA4 CB 76            bit 6,(hl)
 431+ 9FA6 28 03            jr z,2F
 432+ 9FA8 CD 8D 99         call Mov_down
 433+ 9FAB 2A F3 88     2 ld hl, (Puntero_mov)
 434+ 9FAE CB 6E            bit 5,(hl)
 435+ 9FB0 28 03            jr z,3F
 436+ 9FB2 CD 1F 9B         call Mov_left
 437+ 9FB5 2A F3 88     3 ld hl, (Puntero_mov)
 438+ 9FB8 CB 66            bit 4,(hl)
 439+ 9FBA C8               ret z
 440+ 9FBB CD 01 9A         call Mov_right
 441+ 9FBE C9               ret
 442+ 9FBF
 443+ 9FBF              ; ---------- --------- --------- ---------- ----------
 444+ 9FBF              ;
 445+ 9FBF              ;   26/06/23
 446+ 9FBF              ;
 447+ 9FBF              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FBF
 449+ 9FBF              Ajusta_velocidad_desplazamiento
 450+ 9FBF
 451+ 9FBF              ; 1er byte de la cadena de movimiento.
 452+ 9FBF              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FBF
 454+ 9FBF CD DD 9F         call Extrae_nibble_alto
 455+ 9FC2
 456+ 9FC2 32 DD 88         ld (Vel_up),a
 457+ 9FC5 79               ld a,c
 458+ 9FC6 E6 0F            and $0f
 459+ 9FC8 32 DE 88         ld (Vel_down),a
 460+ 9FCB
 461+ 9FCB              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FCB              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FCB
 464+ 9FCB 23               inc hl
 465+ 9FCC CD DD 9F         call Extrae_nibble_alto
 466+ 9FCF
 467+ 9FCF 32 DB 88         ld (Vel_left),a
 468+ 9FD2 79               ld a,c
 469+ 9FD3 E6 0F            and $0f
 470+ 9FD5 32 DC 88         ld (Vel_right),a
 471+ 9FD8
 472+ 9FD8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FD8
 474+ 9FD8 23               inc hl
 475+ 9FD9 22 F3 88         ld (Puntero_mov),hl
 476+ 9FDC C9               ret
 477+ 9FDD
 478+ 9FDD 06 04        Extrae_nibble_alto ld b,4
 479+ 9FDF 7E               ld a,(hl)
 480+ 9FE0 4F               ld c,a
 481+ 9FE1 E6 F0            and $f0
 482+ 9FE3 CB 3F        1 srl a
 483+ 9FE5 10 FC            djnz 1B
 484+ 9FE7 C9               ret
 485+ 9FE8
 486+ 9FE8              ; ---------- --------- --------- ---------- ----------
 487+ 9FE8              ;
 488+ 9FE8              ;   5/7/23
 489+ 9FE8              ;
 490+ 9FE8              ;   Incrementa_Puntero_indice_mov
 491+ 9FE8
 492+ 9FE8              Incrementa_Puntero_indice_mov
 493+ 9FE8
 494+ 9FE8 21 F7 88         ld hl,Incrementa_puntero
 495+ 9FEB 34               inc (hl)
 496+ 9FEC
 497+ 9FEC 2A F1 88         ld hl,(Puntero_indice_mov)
 498+ 9FEF 01 02 00         ld bc,2
 499+ 9FF2 A7               and a
 500+ 9FF3 09               add hl,bc
 501+ 9FF4 22 F1 88         ld (Puntero_indice_mov),hl
 502+ 9FF7
 503+ 9FF7 7E               ld a,(hl)
 504+ 9FF8 A7               and a
 505+ 9FF9
 506+ 9FF9              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FF9
 508+ 9FF9              ;    jr z,$
 509+ 9FF9
 510+ 9FF9              ;! Reinicia el Patrón de movimiento.
 511+ 9FF9
 512+ 9FF9 CC FE 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FFC
 514+ 9FFC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FFD
 516+ 9FFD C9               ret
 517+ 9FFE
 518+ 9FFE
 519+ 9FFE              ; ---------- --------- --------- ---------- ----------
 520+ 9FFE              ;
 521+ 9FFE              ;   24/07/23
 522+ 9FFE              ;
 523+ 9FFE              ;   Inicializa_Puntero_indice_mov
 524+ 9FFE
 525+ 9FFE              Inicializa_Puntero_indice_mov
 526+ 9FFE
 527+ 9FFE              ; Existe etiqueta de bucle principal???
 528+ 9FFE
 529+ 9FFE 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 530+ A001 24               inc h
 531+ A002 25               dec h
 532+ A003 28 05            jr z,2F
 533+ A005
 534+ A005 22 F1 88         ld (Puntero_indice_mov),hl
 535+ A008 18 14            jr 3F
 536+ A00A
 537+ A00A              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ A00A
 539+ A00A 3A F7 88     2 ld a,(Incrementa_puntero)
 540+ A00D 47               ld b,a
 541+ A00E
 542+ A00E 2A F1 88         ld hl,(Puntero_indice_mov)
 543+ A011 2B           1 dec hl
 544+ A012 2B               dec hl
 545+ A013 10 FC            djnz 1B
 546+ A015 22 F1 88         ld (Puntero_indice_mov),hl
 547+ A018
 548+ A018 AF               xor a
 549+ A019 32 F7 88         ld (Incrementa_puntero),a
 550+ A01C 18 06            jr 4F
 551+ A01E
 552+ A01E 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 553+ A021 32 F7 88         ld (Incrementa_puntero),a
 554+ A024 C9           4 ret
 555+ A025
 556+ A025
 557+ A025
# file closed: Patrones_de_mov.asm
1680  A025              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A025              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A025              ;
   3+ A025              ;	4/9/23
   4+ A025              ;
   5+ A025              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A025
   7+ A025              ;	ADC HL,SP	LD (addr),SP
   8+ A025              ;	ADD HL,SP	LD SP,(addr)
   9+ A025              ;	ADD IX,SP	LD SP,nn
  10+ A025              ; 	ADD IY,SP	LD SP,HL
  11+ A025              ;				LD SP,IX
  12+ A025              ;	DEC SP		LD SP,IY
  13+ A025
  14+ A025              ;	EX (SP),HL
  15+ A025              ;	EX (SP),IX
  16+ A025              ;	EX (SP),IY
  17+ A025
  18+ A025              ;	INC SP
  19+ A025
  20+ A025                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4
  33+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  34+ 7FA4
  35+ 7FA4 31 E6 88         ld sp,Variables_de_borrado+6
  36+ 7FA7
  37+ 7FA7 E5               push hl
  38+ 7FA8 DD E5            push ix
  39+ 7FAA FD E5            push iy
  40+ 7FAC
  41+ 7FAC 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  42+ 7FAF
  43+ 7FAF E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  44+ 7FB0 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  45+ 7FB2 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  46+ 7FB4
  47+ 7FB4              ; Disparo o entidad?
  48+ 7FB4
  49+ 7FB4 3A 03 89         ld a,(Ctrl_1)
  50+ 7FB7 CB 47            bit 0,a
  51+ 7FB9 28 05            jr z,2F
  52+ 7FBB
  53+ 7FBB 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  54+ 7FBE 18 0F            jr 4F
  55+ 7FC0
  56+ 7FC0              ; No es disparo. Entidad/Amadeus ????
  57+ 7FC0
  58+ 7FC0 3A F0 88     2 ld a,(Ctrl_0)
  59+ 7FC3 CB 77            bit 6,a
  60+ 7FC5 28 05            jr z,7F
  61+ 7FC7
  62+ 7FC7              ; Guardamos foto de Amadeus.
  63+ 7FC7
  64+ 7FC7 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  65+ 7FCA 18 03            jr 4F
  66+ 7FCC
  67+ 7FCC 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  68+ 7FCF
  69+ 7FCF 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  70+ 7FD1
  71+ 7FD1 D1           1 pop de
  72+ 7FD2 73               ld (hl),e
  73+ 7FD3 23               inc hl
  74+ 7FD4 72               ld (hl),d
  75+ 7FD5 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  76+ 7FD6 10 F9            djnz 1B
  77+ 7FD8
  78+ 7FD8              ; Disparo o entidad ?
  79+ 7FD8
  80+ 7FD8 3A 03 89         ld a,(Ctrl_1)
  81+ 7FDB CB 47            bit 0,a
  82+ 7FDD 28 05            jr z,5F
  83+ 7FDF
  84+ 7FDF 22 1C 89         ld (Stack_snapshot_disparos),hl
  85+ 7FE2 18 12            jr 6F
  86+ 7FE4
  87+ 7FE4              ; Entidad o Amadeus ?
  88+ 7FE4
  89+ 7FE4 3A F0 88     5 ld a,(Ctrl_0)
  90+ 7FE7 CB 77            bit 6,a
  91+ 7FE9 28 08            jr z,8F
  92+ 7FEB
  93+ 7FEB 22 22 89         ld (End_Snapshot_Amadeus),hl
  94+ 7FEE ED 7B 14 89      ld sp,(Stack)
  95+ 7FF2 C9               ret
  96+ 7FF3
  97+ 7FF3 22 1A 89     8 ld (Stack_snapshot),hl
  98+ 7FF6 ED 7B 14 89  6 ld sp,(Stack)
  99+ 7FFA
 100+ 7FFA              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 101+ 7FFA
 102+ 7FFA 5D               ld e,l
 103+ 7FFB 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 104+ 7FFC
 105+ 7FFC 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 106+ 7FFF 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 107+ 8000 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 108+ 8001 72               ld (hl),d                                     ; _ álbum a otro.
 109+ 8002
 110+ 8002 C9               ret
 111+ 8003
 112+ 8003              ; ------------------------------------------------
 113+ 8003              ;
 114+ 8003              ;   19/10/23
 115+ 8003              ;
 116+ 8003              ;   La rutina estará situada justo después de:
 117+ 8003              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 120+ 8003              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 121+ 8003
 122+ 8003                  org $72ec
 123+ 72EC
 124+ 72EC              Gestiona_albumes_de_fotos
 125+ 72EC
 126+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 127+ 72EC              ;   Vaciamos Album_de_fotos.
 128+ 72EC
 129+ 72EC              ;   Album_de_fotos. Contiene datos ???
 130+ 72EC
 131+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 132+ 72EF 7E               ld a,(hl)
 133+ 72F0 A7               and a
 134+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 135+ 72F3
 136+ 72F3              ;   Hemos impreso Album_de_fotos. Limpiamos el álbum y actualizamos (End_Snapshot).
 137+ 72F3
 138+ 72F3 2A 1E 89         ld hl,(End_Snapshot)
 139+ 72F6 01 00 70         ld bc,Album_de_fotos
 140+ 72F9 11 01 70         ld de,Album_de_fotos+1
 141+ 72FC AF               xor a
 142+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 143+ 72FE
 144+ 72FE CD BC 73         call Limpia_album
 145+ 7301
 146+ 7301 21 00 00         ld hl,0
 147+ 7304 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 148+ 7307
 149+ 7307              ; ----- ----- ----- -----
 150+ 7307
 151+ 7307              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 152+ 7307              ;   Album_de_fotos_1. Contiene un frame completo ???
 153+ 7307
 154+ 7307 3A 3C 89     3 ld a,(Semaforo)
 155+ 730A CB 4F            bit 1,a
 156+ 730C 20 08            jr nz,4F
 157+ 730E
 158+ 730E              ;   Album_de_fotos_1 no está completo.
 159+ 730E
 160+ 730E 21 3C 89         ld hl,Semaforo
 161+ 7311 CB FE            set 7,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 162+ 7313 CB 8E            res 1,(hl)
 163+ 7315 C9               ret                         ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 164+ 7316
 165+ 7316              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 166+ 7316
 167+ 7316 21 55 70     4 ld hl,Album_de_fotos_1+1
 168+ 7319 7E               ld a,(hl)
 169+ 731A A7               and a
 170+ 731B 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 171+ 731D
 172+ 731D              ; ----- ----- ----- -----
 173+ 731D              ; ----- ----- ----- -----
 174+ 731D
 175+ 731D              ;   Album_de_fotos_1 Contiene un frame completo que hay que volcar en Album_de_fotos.
 176+ 731D              ;   Actualiza (End_Snapshot).
 177+ 731D
 178+ 731D 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 179+ 7320 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 180+ 7323 11 00 70         ld de,Album_de_fotos        ; Destino.
 181+ 7326
 182+ 7326 CD BC 73         call Limpia_album
 183+ 7329
 184+ 7329              ;   Calculamos (End_Snapshot)
 185+ 7329
 186+ 7329 A7               and a
 187+ 732A ED 4A            adc hl,bc
 188+ 732C 22 1E 89         ld (End_Snapshot),hl
 189+ 732F
 190+ 732F              ;   Limpiamos Album_de_fotos_1.
 191+ 732F
 192+ 732F 2A 24 89         ld hl,(End_Snapshot_1)
 193+ 7332 01 54 70         ld bc,Album_de_fotos_1
 194+ 7335 11 55 70         ld de,Album_de_fotos_1+1
 195+ 7338 AF               xor a
 196+ 7339 02               ld (bc),a
 197+ 733A
 198+ 733A CD BC 73         call Limpia_album
 199+ 733D
 200+ 733D 21 00 00         ld hl,0
 201+ 7340 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 202+ 7343
 203+ 7343              ; ----- ----- ----- -----
 204+ 7343
 205+ 7343              ;   Album_de_fotos_2. Contiene Frame completo ???
 206+ 7343
 207+ 7343 3A 3C 89     1 ld a,(Semaforo)
 208+ 7346 CB 57            bit 2,a
 209+ 7348 20 07            jr nz,5F
 210+ 734A
 211+ 734A              ;   Album_de_fotos_2 no está completo.
 212+ 734A
 213+ 734A 21 3C 89         ld hl,Semaforo
 214+ 734D CB FE            set 7,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 215+ 734F CB 96            res 2,(hl)
 216+ 7351
 217+ 7351              ;   Album_de_fotos_2 contiene un FRAME completo. Datos ???.
 218+ 7351
 219+ 7351 21 A9 70     5 ld hl,Album_de_fotos_2+1
 220+ 7354 7E               ld a,(hl)
 221+ 7355 A7               and a
 222+ 7356 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 223+ 7358
 224+ 7358              ; ----- ----- ----- -----
 225+ 7358              ; ----- ----- ----- -----
 226+ 7358              ; ----- ----- ----- -----
 227+ 7358
 228+ 7358              ;   Album_de_fotos_2 contiene un frame completo.
 229+ 7358              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 230+ 7358
 231+ 7358 2A 28 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 232+ 735B 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 233+ 735E 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 234+ 7361
 235+ 7361 CD BC 73         call Limpia_album
 236+ 7364
 237+ 7364              ;   Actualizamos (End_Snapshot_1):
 238+ 7364
 239+ 7364 A7               and a
 240+ 7365 ED 4A            adc hl,bc
 241+ 7367 22 24 89         ld (End_Snapshot_1),hl
 242+ 736A
 243+ 736A              ;   Limpiamos Album_de_fotos_2.
 244+ 736A
 245+ 736A 2A 28 89         ld hl,(End_Snapshot_2)
 246+ 736D 01 A8 70         ld bc,Album_de_fotos_2
 247+ 7370 11 A9 70         ld de,Album_de_fotos_2+1
 248+ 7373 AF               xor a
 249+ 7374 02               ld (bc),a
 250+ 7375
 251+ 7375 CD BC 73         call Limpia_album
 252+ 7378
 253+ 7378 21 00 00         ld hl,0
 254+ 737B 22 28 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 255+ 737E
 256+ 737E              ; ----- ----- ----- -----
 257+ 737E
 258+ 737E              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 259+ 737E              ;   Album_de_fotos_3. Contiene un frame completo ???
 260+ 737E
 261+ 737E 3A 3C 89     2 ld a,(Semaforo)
 262+ 7381 CB 5F            bit 3,a
 263+ 7383 20 0A            jr nz,6F
 264+ 7385
 265+ 7385              ;   Album_de_fotos_3 no está completo.
 266+ 7385
 267+ 7385 21 3C 89         ld hl,Semaforo
 268+ 7388 CB FE            set 7,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 269+ 738A CB 9E            res 3,(hl)
 270+ 738C
 271+ 738C 18 FE            jr $    ;! Album_de_fotos_3 NO ESTÁ COMPLETO !!!!! ----- x-x-0-x
 272+ 738E
 273+ 738E C9               ret                         ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 274+ 738F
 275+ 738F              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 276+ 738F
 277+ 738F 21 FD 70     6 ld hl,Album_de_fotos_3+1
 278+ 7392 7E               ld a,(hl)
 279+ 7393 A7               and a
 280+ 7394 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 281+ 7395
 282+ 7395              ; ----- ----- ----- -----
 283+ 7395              ; ----- ----- ----- -----
 284+ 7395              ; ----- ----- ----- -----
 285+ 7395
 286+ 7395              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 287+ 7395
 288+ 7395 2A 2C 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 289+ 7398 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 290+ 739B 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 291+ 739E
 292+ 739E CD BC 73         call Limpia_album
 293+ 73A1
 294+ 73A1              ;   Actualizamos (End_Snapshot_2):
 295+ 73A1
 296+ 73A1 A7               and a
 297+ 73A2 ED 4A            adc hl,bc
 298+ 73A4 22 28 89         ld (End_Snapshot_2),hl
 299+ 73A7
 300+ 73A7              ;   Limpiamos Album_de_fotos_3.
 301+ 73A7
 302+ 73A7 2A 2C 89         ld hl,(End_Snapshot_3)
 303+ 73AA 01 FC 70         ld bc,Album_de_fotos_3
 304+ 73AD 11 FD 70         ld de,Album_de_fotos_3+1
 305+ 73B0 AF               xor a
 306+ 73B1 02               ld (bc),a
 307+ 73B2
 308+ 73B2 CD BC 73         call Limpia_album
 309+ 73B5
 310+ 73B5              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 311+ 73B5              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 312+ 73B5
 313+ 73B5 21 00 00         ld hl,0
 314+ 73B8 22 2C 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 315+ 73BB
 316+ 73BB C9               ret
 317+ 73BC
 318+ 73BC              ; ----------------------------------------------------
 319+ 73BC              ;
 320+ 73BC              ;   10/8/23
 321+ 73BC              ;
 322+ 73BC              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 323+ 73BC              ;
 324+ 73BC              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 325+ 73BC              ;           BC ..... Dirección de inicio del álbum.
 326+ 73BC              ;           DE ..... Dirección de inicio del álbum. +1
 327+ 73BC
 328+ 73BC              ;    ld hl,(End_Snapshot)
 329+ 73BC              ;    ld bc,Album_de_fotos
 330+ 73BC              ;    ld de,Album_de_fotos+1
 331+ 73BC
 332+ 73BC              ;   MODIFICA: A,HL,BC y DE.
 333+ 73BC
 334+ 73BC              Limpia_album
 335+ 73BC D5               push de                     ; Guardo DESTINO.
 336+ 73BD C5               push bc                     ; Guardo ORIGEN.
 337+ 73BE ED 42            sbc hl,bc
 338+ 73C0 4D               ld c,l
 339+ 73C1 44               ld b,h
 340+ 73C2 E1               pop hl
 341+ 73C3 C5               push bc
 342+ 73C4 ED B0            ldir
 343+ 73C6 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 344+ 73C7 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 345+ 73C8 C9               ret                         ; _ a otro).
 346+ 73C9              ;
 347+ 73C9
 348+ 73C9              ; -----------------------------------------------
 349+ 73C9              ;
 350+ 73C9              ;   13/10/23
 351+ 73C9
 352+ 73C9              Actualiza_semaforo
 353+ 73C9
 354+ 73C9              ; Está activo el bit "Album_de_fotos" ???
 355+ 73C9
 356+ 73C9 3A 3C 89         ld a,(Semaforo)
 357+ 73CC CB 47            bit 0,a
 358+ 73CE 20 04            jr nz,1F
 359+ 73D0 CB C7            set 0,a                     ; Album_de_fotos COMPLETO.
 360+ 73D2 18 0D            jr 2F
 361+ 73D4 CB 4F        1 bit 1,a
 362+ 73D6 20 04            jr nz,3F
 363+ 73D8 CB CF            set 1,a                      ; Album_de_fotos_1 COMPLETO.
 364+ 73DA 18 05            jr 2F
 365+ 73DC CB 57        3 bit 2,a
 366+ 73DE C0               ret nz
 367+ 73DF CB D7            set 2,a                      ; Album_de_fotos_2 COMPLETO.
 368+ 73E1 32 3C 89     2 ld (Semaforo),a
 369+ 73E4 C9               ret
 370+ 73E5
 371+ 73E5
 372+ 73E5
# file closed: Guarda_foto_registros.asm
1681  73E5
1682  73E5              	SAVESNA "Pruebas.sna", START
1683  73E5
1684  73E5
1685  73E5
1686  73E5
# file closed: Banco_de_pruebas.asm
