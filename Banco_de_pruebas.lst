# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E5 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A EB 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 03        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20
  41  AA20              ;	call Borra_sprites
  42  AA20
  43  AA20 CD C4 81     	call Pinta_Sprites
  44  AA23              ;	call Extrae_Scanlines_album
  45  AA23
  46  AA23              ;	ld a,6
  47  AA23              ;	out ($fe),a
  48  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  49  AA23
  50  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  51  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  52  AA23
  53  AA23              ;	ld a,7
  54  AA23              ;	out ($fe),a												; Borde blanco.
  55  AA23              ;	call Guarda_parametros_DRAW
  56  AA23              ;	call Restore_Amadeus
  57  AA23
  58  AA23              ; Posible colisión Entidad-Amadeus ???
  59  AA23
  60  AA23              ;	ld a,(Impacto2)
  61  AA23              ;	bit 2,a
  62  AA23              ;	jr z,1F
  63  AA23
  64  AA23              ;	call Detecta_colision_nave_entidad
  65  AA23
  66  AA23              ;1 ld a,4
  67  AA23              ;	out ($fe),a
  68  AA23              ;	call Gestiona_Amadeus
  69  AA23
  70  AA23              ;	ld a,7
  71  AA23              ;	out ($fe),a											; Borde blanco.
  72  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  73  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  74  AA23
  75  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  76  AA23
  77  AA23              ;	call Recupera_parametros_DRAW
  78  AA23
  79  AA23 CD FA 8B     1 call Actualiza_relojes
  80  AA26
  81  AA26 21 EB 89     	ld hl,Ctrl_3
  82  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  83  AA2B
  84  AA2B FD E1        	pop iy
  85  AA2D DD E1        	pop ix
  86  AA2F F1           	pop af
  87  AA30 C1           	pop bc
  88  AA31 D1           	pop de
  89  AA32 E1           	pop hl
  90  AA33 D9           	exx
  91  AA34 C1           	pop bc
  92  AA35 D1           	pop de
  93  AA36 E1           	pop hl
  94  AA37 08           	ex af,af'
  95  AA38 F1           	pop af
  96  AA39 08           	ex af,af'
  97  AA3A D9           	exx
  98  AA3B
  99  AA3B ED 7B E5 89  	ld sp,(Stack_3)
 100  AA3F
 101  AA3F FB           	ei
 102  AA40
 103  AA40 3E 01        	ld a,1												; Borde azul.
 104  AA42 D3 FE        	out ($fe),a
 105  AA44
 106  AA44 C9           	ret
 107  AA45
 108  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 109  AA45
 110  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 30 83        	defw Badsat_der_f8
  97+ 82F4 60 83        	defw Badsat_der_f9
  98+ 82F6 90 83        	defw Badsat_der_fa
  99+ 82F8 C0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 105+ 8303 28 40 00     	DEFB    $28,$40,$00
 106+ 8306 54 40 00     	DEFB	$54,$40,$00
 107+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 108+ 830C 55 40 00     	DEFB	$55,$40,$00
 109+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 110+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 111+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 112+ 8318 07 50 00     	DEFB	$07,$50,$00
 113+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 114+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 115+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 116+ 8324 06 55 00     	DEFB	$06,$55,$00
 117+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 118+ 832A 00 14 00     	DEFB	$00,$14,$00
 119+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 120+ 8330
 121+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 121+ 8334 20 00 2A 20
 122+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 122+ 833C 2A A0 00 15
 123+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 123+ 8344 00 03 60 00
 124+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 124+ 834C F4 00 0B EA
 125+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 125+ 8354 03 2A 80 00
 126+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 126+ 835C 00 00 04 00
 127+ 8360
 128+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 128+ 8364 10 00 15 10
 129+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 129+ 836C 15 50 00 0A
 130+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 130+ 8374 80 01 B0 00
 131+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 131+ 837C FA 00 05 F5
 132+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 132+ 8384 01 95 40 00
 133+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 133+ 838C 00 00 02 00
 134+ 8390
 135+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 135+ 8394 08 00 0A 88
 136+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 136+ 839C 0A A8 00 05
 137+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 137+ 83A4 C0 00 D8 00
 138+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 138+ 83AC FD 00 02 FA
 139+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 139+ 83B4 00 CA A0 00
 140+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 140+ 83BC 80 00 01 00
 141+ 83C0
 142+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 142+ 83C4 84 00 05 44
 143+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 143+ 83CC 05 54 00 02
 144+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 144+ 83D4 E0 00 6C 00
 145+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 145+ 83DC FE 80 01 7D
 146+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 146+ 83E4 00 65 50 00
 147+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 147+ 83EC 40 00 00 80
 148+ 83F0
 149+ 83F0              	org $8400
 150+ 8400
 151+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 151+ 8404 42 00 02 A2
 152+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 152+ 840C 02 AA 00 01
 153+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 153+ 8414 F0 00 36 00
 154+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 154+ 841C FF 40 00 BE
 155+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 155+ 8424 00 32 A8 00
 156+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 156+ 842C A0 00 00 40
 157+ 8430
 158+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 158+ 8434 A1 00 01 51
 159+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 159+ 843C 01 55 00 00
 160+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 160+ 8444 F8 00 1B 00
 161+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 161+ 844C FF A0 00 1F
 162+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 162+ 8454 00 09 54 00
 163+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 163+ 845C 50 00 00 20
 164+ 8460
 165+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 165+ 8464 50 80 00 A8
 166+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 166+ 846C 00 AA 80 00
 167+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 167+ 8474 FC 00 0D 80
 168+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 168+ 847C FF D0 00 0F
 169+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 169+ 8484 00 04 AA 00
 170+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 170+ 848C 28 00 00 10
 171+ 8490
 172+ 8490              ; ----------------------------------------------------------------------------------------
 173+ 8490
 174+ 8490              ; Amadeus. 2x2.
 175+ 8490
 176+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 177+ 8492 00 00        	defw 0
 178+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 179+ 8496 00 00        	defw 0
 180+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 181+ 849A 00 00        	defw 0
 182+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 183+ 849E 00 00        	defw 0	 								; (Fín de índice).
 184+ 84A0
 185+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 186+ 84A2 00 00        	defw 0
 187+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 188+ 84A6 00 00        	defw 0
 189+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 190+ 84AA 00 00        	defw 0
 191+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 192+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 193+ 84B0
 194+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 194+ 84B4 26 64 24 24
 195+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 195+ 84BC 6F F6 67 E6
 196+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 196+ 84C4 F7 EF FF FF
 197+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 197+ 84CC 8B D1 71 8E
 198+ 84D0
 199+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 199+ 84D4 F1 00 09 99
 200+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 200+ 84DC 0B 0D 00 1B
 201+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 201+ 84E4 80 19 F9 80
 202+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 202+ 84EC F3 C0 3D FB
 203+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 203+ 84F4 3E F7 C0 3E
 204+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 204+ 84FC 40 1C 63 80
 205+ 8500
 206+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 206+ 8504 3C 40 02 66
 207+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 207+ 850C 02 C3 40 06
 208+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 208+ 8514 60 06 7E 60
 209+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 209+ 851C 3C F0 0F 7E
 210+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 210+ 8524 0F BD F0 0F
 211+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 211+ 852C 10 07 18 E0
 212+ 8530
 213+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 213+ 8534 8F 10 00 99
 214+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 214+ 853C 00 B0 D0 01
 215+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 215+ 8544 D8 01 9F 98
 216+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 216+ 854C CF 3C 03 DF
 217+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 217+ 8554 03 EF 7C 03
 218+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 218+ 855C 44 01 C6 38
 219+ 8560
 220+ 8560              ; ----------------------------------------------------------------------------------------
 221+ 8560
 222+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 223+ 8562 96 85        	defw Explosion_2x3_2
 224+ 8564 C6 85        	defw Explosion_2x3_3
 225+ 8566
 226+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 226+ 856A 10 00 04 38
 227+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 227+ 8572 02 E6 80 01
 228+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 228+ 857A 00 03 DD 80
 229+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 229+ 8582 3B 80 01 9D
 230+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 230+ 858A 02 FD 80 03
 231+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 231+ 8592 00 08 00 00
 232+ 8596
 233+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 233+ 859A 38 10 03 BC
 234+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 234+ 85A2 04 06 C0 00
 235+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 235+ 85AA 00 03 DD 80
 236+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 236+ 85B2 3A 70 01 9C
 237+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 237+ 85BA 04 F8 80 06
 238+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 238+ 85C2 00 00 00 00
 239+ 85C6
 240+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 240+ 85CA 00 20 08 00
 241+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 241+ 85D2 00 06 00 00
 242+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 242+ 85DA 00 00 14 30
 243+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 243+ 85E2 38 00 01 08
 244+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 244+ 85EA 00 80 00 04
 245+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 245+ 85F2 10 08 00 20
 246+ 85F6
 247+ 85F6              ; ------------------------------------------
 248+ 85F6
 249+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 250+ 85F8 20 86        	defw Explosion_2x2_2
 251+ 85FA 40 86        	defw Explosion_2x2_3
 252+ 85FC
 253+ 85FC              	org $8600
 254+ 8600
 255+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 255+ 8604 43 84 37 D8
 256+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 256+ 860C 17 F0 3D D8
 257+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 257+ 8614 19 D0 1F 60
 258+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 258+ 861C 40 00 80 00
 259+ 8620
 260+ 8620
 261+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 261+ 8624 3B C2 60 0C
 262+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 262+ 862C 07 F0 3D D8
 263+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 263+ 8634 19 C6 1F 64
 264+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 264+ 863C 80 00 00 00
 265+ 8640
 266+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 266+ 8644 88 04 10 0C
 267+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 267+ 864C 81 E0 01 43
 268+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 268+ 8654 10 80 18 00
 269+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 269+ 865C 60 01 80 02
 270+ 8660
 271+ 8660
 272+ 8660
 273+ 8660
 274+ 8660
# file closed: Sprites_e_indices.asm
 111  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8715 00 00        	defw 0
 141+ 8717
 142+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8719 40           	db $40												; (Ctrl_0).
 144+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 871E 00 00
 145+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8726 00           	db 0 												; (Columnas).
 149+ 8727 00 00        	defw 0												; (Limite_horizontal).
 150+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 872C
 152+ 872C              ; ---------- ---------- ---------- ---------- ----------
 153+ 872C              ;
 154+ 872C              ;	22/01/24
 155+ 872C              ;
 156+ 872C              ; 	Cada caja tiene 19 bytes !!!
 157+ 872C
 158+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 872F 00           	db %00000000										; (Attr).
 160+ 8730              ;	db 0												; (Cuad_objeto).
 161+ 8730 00           	db 0												; (Impacto).
 162+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 873D 00           	db 0												; (Ctrl_0).
 167+ 873E 00           	db 0												; (Ctrl_2).
 168+ 873F
 169+ 873F              ; ---------- ---------- ---------- ---------- ----------
 170+ 873F
 171+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 8742 00           	db %00000000										; (Attr).
 173+ 8743              ;	db 0												; (Cuad_objeto).
 174+ 8743 00           	db 0												; (Impacto).
 175+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 8750 00           	db 0												; (Ctrl_0).
 180+ 8751 00           	db 0												; (Ctrl_2).
 181+ 8752
 182+ 8752              ; ---------- ---------- ---------- ---------- ----------
 183+ 8752
 184+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8755 00           	db %00000000										; (Attr).
 186+ 8756              ;	db 0												; (Cuad_objeto).
 187+ 8756 00           	db 0												; (Impacto).
 188+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8763 00           	db 0												; (Ctrl_0).
 193+ 8764 00           	db 0												; (Ctrl_2).
 194+ 8765
 195+ 8765              ; ---------- ---------- ---------- ---------- ----------
 196+ 8765
 197+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8768 00           	db %00000000										; (Attr).
 199+ 8769              ;	db 0												; (Cuad_objeto).
 200+ 8769 00           	db 0												; (Impacto).
 201+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 8776 00           	db 0												; (Ctrl_0).
 206+ 8777 00           	db 0												; (Ctrl_2).
 207+ 8778
 208+ 8778              ; ---------- ---------- ---------- ---------- ----------
 209+ 8778
 210+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 877B 00           	db %00000000										; (Attr).
 212+ 877C              ;	db 0												; (Cuad_objeto).
 213+ 877C 00           	db 0												; (Impacto).
 214+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 8789 00           	db 0												; (Ctrl_0).
 219+ 878A 00           	db 0												; (Ctrl_2).
 220+ 878B
 221+ 878B              ; ---------- ---------- ---------- ---------- ----------
 222+ 878B
 223+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 878E 00           	db %00000000										; (Attr).
 225+ 878F              ;	db 0												; (Cuad_objeto).
 226+ 878F 00           	db 0												; (Impacto).
 227+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 879C 00           	db 0												; (Ctrl_0).
 232+ 879D 00           	db 0												; (Ctrl_2).
 233+ 879E
 234+ 879E              ; ---------- ---------- ---------- ---------- ----------
 235+ 879E
 236+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 87A1 00           	db %00000000										; (Attr).
 238+ 87A2              ;	db 0												; (Cuad_objeto).
 239+ 87A2 00           	db 0												; (Impacto).
 240+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 87AF 00           	db 0												; (Ctrl_0).
 245+ 87B0 00           	db 0												; (Ctrl_2).
 246+ 87B1
 247+ 87B1              ; -------------------------------------------------------------------------------------
 248+ 87B1              ;
 249+ 87B1              ;	11/1/24
 250+ 87B1              ;
 251+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 87B1              ;
 253+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 87B1
 258+ 87B1              Indice_de_definiciones_de_entidades
 259+ 87B1
 260+ 87B1 B5 87        	defw Entidad_1
 261+ 87B3 C2 87        	defw Entidad_2
 262+ 87B5
 263+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 87B5
 265+ 87B5              ;	BADSAT, (Satélite malvado).
 266+ 87B5
 267+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87B8 04           	db %00000100										; (Attr).
 269+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 272+ 87BF 01           	db 1												; (Cuad_objeto).
 273+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87C2
 275+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87C5 02           	db %00000010										; (Attr).
 277+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87CC 01           	db 1												; (Cuad_objeto).
 281+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87CF
# file closed: Cajas_y_disparos.asm
 112  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 113  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
  24+ 898A              ; 13/03/24
  25+ 898A
  26+ 898A              Indice_de_albumes_de_lineas
  27+ 898A
  28+ 898A 00 80        	defw Scanlines_album
  29+ 898C 19 81        	defw Scanlines_album_2
# file closed: Niveles.asm
 114  898E
 115  898E              ; ******************************************************************************************************************************************************************************************
 116  898E              ; Constantes.
 117  898E              ; ******************************************************************************************************************************************************************************************
 118  898E              ;
 119  898E              ; 09/03/24
 120  898E
 121  898E              ;
 122  898E              ; Constantes.
 123  898E              ;
 124  898E
 125  898E              Sprite_vacio equ $eae0
 126  898E
 127  898E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 128  898E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 129  898E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 130  898E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 131  898E
 132  898E              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 133  898E              ;Almacen_de_scanlines_masticados equ $e900
 134  898E              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 135  898E              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 136  898E              ;
 137  898E              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 138  898E
 139  898E              ;                                                       ;	35 bytes por entidad.
 140  898E              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 141  898E              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 142  898E              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 143  898E              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 144  898E
 145  898E              Scanlines_album_2 equ $8119    ;    (8119h - 8231h)
 146  898E
 147  898E              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 148  898E              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 149  898E              ;														; 55 Bytes.
 150  898E
 151  898E              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 152  898E
 153  898E              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 154  898E
 155  898E
 156  898E              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 157  898E
 158  898E              ; ******************************************************************************************************************************************************************************************
 159  898E              ; Variables.
 160  898E              ; ******************************************************************************************************************************************************************************************
 161  898E              ;
 162  898E              ; 18/01/24
 163  898E              ;
 164  898E              ; Variables de DRAW. (Motor principal).	42 Bytes.
 165  898E              ;
 166  898E
 167  898E              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 168  898E
 169  898E 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 170  898F              ;															- Patrón de movimiento.
 171  898F              ;															- Aspecto
 172  898F 00           Filas db 0												; Filas. [DRAW]
 173  8990 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 174  8991 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 175  8993 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 176  8995 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 177  8996 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 178  8997
 179  8997              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 180  8997
 181  8997 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 182  8998              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 183  8998              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 184  8998 00           Attr db 0												; Atributos de la entidad:
 185  8999
 186  8999              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 187  8999              ;
 188  8999              ;	COLORES: 0 ..... NEGRO
 189  8999              ;    		 1 ..... AZUL
 190  8999              ; 			 2 ..... ROJO
 191  8999              ;			 3 ..... MAGENTA
 192  8999              ; 			 4 ..... VERDE
 193  8999              ; 			 5 ..... CIAN
 194  8999              ;			 6 ..... AMARILLO
 195  8999              ; 			 7 ..... BLANCO
 196  8999
 197  8999 00 00        Indice_Sprite_der defw 0
 198  899B 00 00        Indice_Sprite_izq defw 0
 199  899D 00 00        Puntero_DESPLZ_der defw 0
 200  899F 00 00        Puntero_DESPLZ_izq defw 0
 201  89A1
 202  89A1 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 203  89A3 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 204  89A4
 205  89A4              ; Variables de objeto. (Características).
 206  89A4
 207  89A4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 208  89A5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 209  89A5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 210  89A5 00 00 00...  Variables_de_borrado ds 6
 211  89AB
 212  89AB 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 213  89AD              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 214  89AD
 215  89AD 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 216  89AF
 217  89AF              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 218  89AF              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 219  89AF
 220  89AF 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 221  89B1              ;														; _palabras que componen el "movimiento_masticado".
 222  89B1
 223  89B1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 224  89B1
 225  89B1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 226  89B2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 227  89B2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 228  89B2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 229  89B2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 230  89B2              ;
 231  89B2              ; 														DESCRIPCIÖN:
 232  89B2              ;
 233  89B2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 234  89B2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 235  89B2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 236  89B2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 237  89B2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 238  89B2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 239  89B2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 240  89B2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 241  89B2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 242  89B2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 243  89B2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 244  89B2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 245  89B2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 246  89B2              ;
 247  89B2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 248  89B2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 249  89B2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 250  89B2
 251  89B2              ; Variables de funcionamiento. [DRAW].
 252  89B2
 253  89B2 00           Columnas db 0
 254  89B3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 255  89B5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 256  89B5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 257  89B6
 258  89B6              ; variables de control general.
 259  89B6
 260  89B6 00           Ctrl_2 db 0
 261  89B7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 262  89B7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 263  89B7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 264  89B7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 265  89B7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 266  89B7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 267  89B7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 268  89B7              ;
 269  89B7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 270  89B7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 271  89B7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 272  89B7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 273  89B7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 274  89B7              ;														BIT 4, ???
 275  89B7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 276  89B7
 277  89B7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  89B8
 279  89B8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 280  89B8
 281  89B8              ;					         		---------;      ;---------
 282  89B8
 283  89B8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 284  89B8
 285  89B8              Perfiles_de_velocidad
 286  89B8
 287  89B8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 288  89B9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 289  89BA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 290  89BB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 291  89BC
 292  89BC              ; Contadores de 16 bits.
 293  89BC
 294  89BC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 295  89BE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 296  89C0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 297  89C2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 298  89C4
 299  89C4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 300  89C4
 301  89C4              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 302  89C4              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 303  89C4              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 304  89C4
 305  89C4              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 306  89C4
 307  89C4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 308  89C6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 309  89C8 00 00        Puntero_indice_mov_bucle defw 0							;
 310  89CA              ;
 311  89CA              ;
 312  89CA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 313  89CB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 314  89CB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 315  89CB 00           Incrementa_puntero_backup db 0
 316  89CC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 317  89CD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 318  89CD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 319  89CE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 320  89CF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 321  89D0              ;
 322  89D0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 323  89D0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 324  89D0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 325  89D0              ;
 326  89D0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 327  89D0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 328  89D0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 329  89D0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 330  89D0              ;
 331  89D0              ;														;	"$ff" ..... Bucle infinito de repetición.
 332  89D0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 333  89D0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 334  89D0              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 335  89D0
 336  89D0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 337  89D1
 338  89D1              ;														DESCRIPCIÓN:
 339  89D1              ;
 340  89D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 341  89D1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 342  89D1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 343  89D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 344  89D1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 345  89D1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 346  89D1
 347  89D1              ;														BIT 3, Recarga de nueva oleada.
 348  89D1              ;														BIT 4, Recarga de nueva oleada.
 349  89D1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 350  89D1              ;														BIT 6, **** Frame completo.
 351  89D1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 352  89D1
 353  89D1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 354  89D3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 355  89D3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 356  89D3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 357  89D3
 358  89D3              ; Gestión de ENTIDADES y CAJAS.
 359  89D3
 360  89D3 00 00        Puntero_store_caja defw 0
 361  89D5 00 00        Puntero_restore_caja defw 0
 362  89D7 00 00        Indice_restore_caja defw 0
 363  89D9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 364  89DA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 365  89DB 00           Entidades_en_curso db 0									; ..... ..... .....
 366  89DC 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 367  89DD              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 368  89DD              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 369  89DD              ;														; _ (Numero_de_malotes)="0".
 370  89DD 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 371  89DF 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 372  89E1              ;														; _ puntero (Indice_entidades).
 373  89E1
 374  89E1              ;---------------------------------------------------------------------------------------------------------------
 375  89E1              ;
 376  89E1              ;	11/01/24
 377  89E1              ;
 378  89E1              ;	Álbumes.
 379  89E1
 380  89E1 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 381  89E3              ;														; _variable para almacenar lo posición del puntero_
 382  89E3              ; 														; _de pila, SP.
 383  89E3 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 384  89E5              ;														; La utiliza la rutina [Extrae_foto_registros].
 385  89E5 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 386  89E7
 387  89E7 00 00        Sc_album_SP defw 0
 388  89E9 00 00        Scanlines_album_SP defw 0
 389  89EB
 390  89EB              ;Scanlines_album_disparos_SP defw Scanlines_album_disparos
 391  89EB
 392  89EB              ;End_Snapshot defw Scanlines_album
 393  89EB              ;														; Inicialmente está situado el la posición $7000, Scanlines_album.
 394  89EB              ;End_Snapshot_disparos defw Scanlines_album_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 395  89EB              ;														; _el snapshot de los registros del siguiente disparo.
 396  89EB              ;														; Inicialmente está situado en la posición $7060, Scanlines_album_disparos.
 397  89EB              ;End_Snapshot_Amadeus defw Scanlines_album_Amadeus
 398  89EB
 399  89EB 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 400  89EC              ;
 401  89EC              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 402  89EC              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 403  89EC              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 404  89EC
 405  89EC 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 406  89ED              ;
 407  89ED              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 408  89ED              ;
 409  89ED              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 410  89ED              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 411  89ED              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 412  89ED              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 413  89ED              ;
 414  89ED              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 415  89ED              ;															_ masticados ya generados.
 416  89ED              ;
 417  89ED              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 418  89ED              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 419  89ED              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 420  89ED              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 421  89ED
 422  89ED
 423  89ED              ; Gestión de Disparos.
 424  89ED
 425  89ED              ;;Numero_de_disparotes db 0
 426  89ED              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 427  89ED              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 428  89ED              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 429  89ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 430  89ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 431  89ED              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 432  89ED              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 433  89ED              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 434  89ED              ;														; _produzca colisión.
 435  89ED              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 436  89ED              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 437  89ED              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 438  89ED              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 439  89ED 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 440  89F0              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 441  89F0              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 442  89F0
 443  89F0              ;---------------------------------------------------------------------------------------------------------------
 444  89F0
 445  89F0              ; Relojes y temporizaciones.
 446  89F0
 447  89F0 00           Contador_de_frames db 0
 448  89F1 00           Contador_de_frames_2 db 0
 449  89F2
 450  89F2              ;Clock_explosion db 4
 451  89F2 14           Clock_Entidades_en_curso db 20
 452  89F3 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 453  89F4              ;														; Repite la oleada de entidades.
 454  89F4              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 455  89F4              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 456  89F4              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 457  89F4
 458  89F4              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 459  89F4              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 460  89F4              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 461  89F4
 462  89F4              ;---------------------------------------------------------------------------------------------------------------
 463  89F4
 464  89F4              ; Gestión de NIVELES.
 465  89F4
 466  89F4 00           Nivel db 0												; Nivel actual del juego.
 467  89F5 00 00        Puntero_indice_NIVELES defw 0
 468  89F7 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 469  89F9              ; 														; _ que definen el NIVEL.
 470  89F9              ; Y todo comienza aquí .....
 471  89F9              ;
 472  89F9              ; 	INICIO  *************************************************************************************************************************************************************************
 473  89F9              ;
 474  89F9              ;	5/1/24
 475  89F9
 476  89F9              START
 477  89F9
 478  89F9 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 479  89FC 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 480  89FE ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 481  8A00 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 482  8A02 F3           	DI
 483  8A03
 484  8A03              ;	ld a,%00000111
 485  8A03              ;	call Cls
 486  8A03 CD E6 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 487  8A06
 488  8A06              ; INICIALIZACIÓN.
 489  8A06
 490  8A06              ;	Inicializa 1er Nivel.
 491  8A06
 492  8A06 21 6B 89     	ld hl,Indice_de_niveles
 493  8A09 22 F5 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 494  8A0C CD 0C 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 495  8A0F              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 496  8A0F              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 497  8A0F              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 498  8A0F
 499  8A0F              ;	Provisional, (para desarrollo).
 500  8A0F              	;-
 501  8A0F              ;	ld hl,Numero_parcial_de_entidades
 502  8A0F              ;	ld b,(hl)
 503  8A0F              ;	inc b
 504  8A0F              ;	dec b
 505  8A0F              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 506  8A0F
 507  8A0F CD 2F 8B     	call Inicia_selector_de_albumes_de_lineas
 508  8A12
 509  8A12 CD 51 8C     4 call Inicia_Entidades
 510  8A15
 511  8A15 CD 3C 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 512  8A18              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 513  8A18              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 514  8A18              ; (Esto se dá cuando se inicia una nueva oleada).
 515  8A18
 516  8A18              ;	ld a,(Ctrl_1)
 517  8A18              ;	bit 3,a
 518  8A18              ;	jr nz,5F											 ; Loop
 519  8A18
 520  8A18              ; 	INICIA AMADEUS !!!!!
 521  8A18
 522  8A18              ;3 call Restore_Amadeus
 523  8A18              ;	call Inicia_Puntero_objeto
 524  8A18              ;	call Draw
 525  8A18
 526  8A18              ;	call Guarda_movimiento_masticado	;! Provisional
 527  8A18
 528  8A18              ;	call Genera_datos_de_impresion
 529  8A18              ;	call Guarda_datos_de_borrado_Amadeus
 530  8A18
 531  8A18              ;	ld de,Amadeus_db
 532  8A18              ;	call Store_Amadeus
 533  8A18
 534  8A18              ; 	INICIA DISPAROS !!!!!
 535  8A18
 536  8A18              ;	call Inicia_Puntero_Disparo_Entidades
 537  8A18              ;	call Inicia_Puntero_Disparo_Amadeus
 538  8A18
 539  8A18              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 540  8A18
 541  8A18              ;5 call Inicia_punteros_de_cajas
 542  8A18              ;	call Restore_entidad
 543  8A18
 544  8A18              ;	ld a,(Ctrl_1)
 545  8A18              ;	bit 3,a
 546  8A18              ;	jr z,6F
 547  8A18
 548  8A18              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 549  8A18
 550  8A18              ;	ld hl,Ctrl_1
 551  8A18              ;	res 3,(hl)
 552  8A18              ;	jr Main
 553  8A18
 554  8A18              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 555  8A18
 556  8A18              6
 557  8A18
 558  8A18              ;	call Calcula_numero_de_malotes
 559  8A18
 560  8A18              ; Damos por concluida la construcción del FRAME.
 561  8A18              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 562  8A18
 563  8A18 2A E7 89     	ld hl,(Sc_album_SP)
 564  8A1B CD 6A 8B     	call Extrae_address
 565  8A1E 22 E9 89     	ld (Scanlines_album_SP),hl
 566  8A21
 567  8A21 21 EB 89     	ld hl,Ctrl_3
 568  8A24 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 569  8A26
 570  8A26 FB           	ei
 571  8A27 76           	halt
 572  8A28
 573  8A28              ; ------------------------------------
 574  8A28
 575  8A28              Main
 576  8A28              ;
 577  8A28              ;	11/12/23
 578  8A28
 579  8A28              ; Aparece nueva entidad ???
 580  8A28
 581  8A28              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 582  8A28              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 583  8A28              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 584  8A28              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 585  8A28              ;														; _un 2º bloque.
 586  8A28
 587  8A28              ;	call Genera_scanlines_masticados_a_borrar
 588  8A28              ;	call Limpia_Almacen_de_scanlines_masticados
 589  8A28
 590  8A28              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 591  8A28              ; 													 	; _(Scanlines_album_SP).
 592  8A28
 593  8A28 F3           	di
 594  8A29 18 FE        	jr $
 595  8A2B FB           	ei
 596  8A2C
 597  8A2C 3A F2 89     	ld a,(Clock_Entidades_en_curso)
 598  8A2F 47           	ld b,a
 599  8A30 3A F0 89     	ld a,(Contador_de_frames)
 600  8A33 B8           	cp b
 601  8A34 20 1E        	jr nz,13F
 602  8A36
 603  8A36              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 604  8A36              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 605  8A36
 606  8A36 3A DA 89     21 ld a,(Numero_parcial_de_entidades)
 607  8A39 47           	ld b,a
 608  8A3A 3A DB 89     	ld a,(Entidades_en_curso)
 609  8A3D B8           	cp b
 610  8A3E 28 14        	jr z,13F
 611  8A40 30 12        	jr nc,13F
 612  8A42
 613  8A42 3C           	inc a
 614  8A43 32 DB 89     	ld (Entidades_en_curso),a
 615  8A46
 616  8A46 FE 02        	cp 2
 617  8A48 F3           	di
 618  8A49 28 FE        	jr z,$
 619  8A4B FB           	ei
 620  8A4C
 621  8A4C              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 622  8A4C
 623  8A4C 3A F2 89     	ld a,(Clock_Entidades_en_curso)
 624  8A4F              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 625  8A4F              ;! _ IMPREDECIBLE !!!!
 626  8A4F C6 64        	add 100
 627  8A51 32 F2 89     	ld (Clock_Entidades_en_curso),a
 628  8A54
 629  8A54              ; -------------------------------------------------------------------------------------------------------------
 630  8A54
 631  8A54              ; Habilita disparos.
 632  8A54
 633  8A54              13
 634  8A54
 635  8A54              ;	ld hl,Disparo_Amadeus
 636  8A54              ;	ld de,CLOCK_repone_disparo_Amadeus
 637  8A54              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 638  8A54
 639  8A54              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 640  8A54              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 641  8A54              ;	call Habilita_disparos
 642  8A54
 643  8A54              ; COLISIONES.
 644  8A54
 645  8A54              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 646  8A54
 647  8A54              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 648  8A54              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 649  8A54              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 650  8A54
 651  8A54              ;	xor a
 652  8A54              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 653  8A54
 654  8A54              ;	call Inicia_punteros_de_cajas
 655  8A54              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 656  8A54              ; 														; _ en DRAW.
 657  8A54
 658  8A54              ;	ld a,(Filas)
 659  8A54              ;	and a
 660  8A54              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 661  8A54              ;	call Incrementa_punteros_de_cajas
 662  8A54              ;	jr 12B
 663  8A54
 664  8A54              ; ---------------------------------------------------------------------------------------
 665  8A54
 666  8A54 3A DA 89     10 ld a,(Numero_parcial_de_entidades)
 667  8A57 47               ld b,a
 668  8A58 A7           	and a
 669  8A59 20 00        	jr nz,11F
 670  8A5B
 671  8A5B              ;	ld hl,Ctrl_1;
 672  8A5B              ;	bit 4,(hl)
 673  8A5B              ;	jp nz,16F
 674  8A5B
 675  8A5B              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 676  8A5B
 677  8A5B              ;	ld hl,Ctrl_1
 678  8A5B              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 679  8A5B
 680  8A5B              ;	ld a,(Contador_de_frames)
 681  8A5B              ;	inc a
 682  8A5B              ;	ld (Activa_recarga_cajas),a
 683  8A5B
 684  8A5B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 685  8A5B
 686  8A5B 3A DB 89     11 ld a,(Entidades_en_curso)
 687  8A5E A7           	and a
 688  8A5F 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 689  8A61 47           	ld b,a												; No hay entidades que gestionar.
 690  8A62
 691  8A62              ; ( Código que ejecutamos con cada entidad: ).
 692  8A62
 693  8A62              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 694  8A62
 695  8A62 C5           15 push bc 												; Nº de entidades en curso.
 696  8A63
 697  8A63 CD A5 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 698  8A66
 699  8A66 3A EB 89     	ld a,(Ctrl_3)
 700  8A69 CB 57        	bit 2,a
 701  8A6B F3           	di
 702  8A6C 20 FE        	jr nz,$
 703  8A6E FB           	ei
 704  8A6F
 705  8A6F              ; Existe "Entidad_guía" ???.
 706  8A6F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 707  8A6F
 708  8A6F              ;	ld a,(Ctrl_3)
 709  8A6F              ;	bit 1,a
 710  8A6F              ;	jr nz,22F
 711  8A6F
 712  8A6F              ; Almacén de "Movimientos_masticados" lleno ???
 713  8A6F              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 714  8A6F              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 715  8A6F
 716  8A6F              ;;	ld a,(Ctrl_3)
 717  8A6F              ;;	bit 3,a
 718  8A6F              ;;	jr nz,22F
 719  8A6F
 720  8A6F              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 721  8A6F
 722  8A6F              ;	ld hl,Ctrl_2
 723  8A6F              ;	set 5,(hl)
 724  8A6F              ;	ld hl,Ctrl_3
 725  8A6F              ;	set 1,(hl)
 726  8A6F
 727  8A6F              ; Impacto ???
 728  8A6F
 729  8A6F              ;22 ld a,(Impacto)
 730  8A6F              ;	and a
 731  8A6F              ;	jr z,8F
 732  8A6F
 733  8A6F              ; Hay Impacto en esta entidad.
 734  8A6F
 735  8A6F              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 736  8A6F              ;	dec (hl)
 737  8A6F              ;	jp nz,17F
 738  8A6F
 739  8A6F              ;! Velocidad de la animación de la explosión.
 740  8A6F
 741  8A6F              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 742  8A6F              ;														; _,(velocidad de la explosión).
 743  8A6F              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 744  8A6F
 745  8A6F              ;	call Repone_datos_de_borrado
 746  8A6F              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 747  8A6F
 748  8A6F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 749  8A6F
 750  8A6F              ;	ld a,(Ctrl_2)
 751  8A6F              ;	bit 1,a
 752  8A6F              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 753  8A6F
 754  8A6F              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 755  8A6F
 756  8A6F              ;	ld a,(CTRL_DESPLZ)
 757  8A6F              ;	and a
 758  8A6F              ;	jr nz,18F
 759  8A6F
 760  8A6F              ;	ld hl,Indice_Explosion_2x2-2
 761  8A6F              ;	ld (Puntero_DESPLZ_der),hl
 762  8A6F              ;	jr 19F
 763  8A6F
 764  8A6F              ;18 ld hl,Indice_Explosion_2x3-2
 765  8A6F              ;	ld (Puntero_DESPLZ_der),hl
 766  8A6F
 767  8A6F              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 768  8A6F              ;	set 1,(hl)
 769  8A6F              ;	jr 7F
 770  8A6F
 771  8A6F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 772  8A6F              ; _con las coordenadas de la entidad almacenada en DRAW.
 773  8A6F
 774  8A6F              ;8 ld a,(Ctrl_1)
 775  8A6F              ;	bit 2,a
 776  8A6F              ;	jr z,7F
 777  8A6F
 778  8A6F              ;	ld hl,(Coordenadas_disparo_certero)
 779  8A6F              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 780  8A6F              ;														; E contiene la coordenada_X del disparo.
 781  8A6F              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 782  8A6F              ;														; H FILA, (Coordenada_y de la entidad).
 783  8A6F              ;	and a
 784  8A6F              ;	sbc hl,de
 785  8A6F
 786  8A6F              ;	call Determina_resultado_comparativa
 787  8A6F
 788  8A6F              ;	ld a,b
 789  8A6F              ;	and a
 790  8A6F              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 791  8A6F
 792  8A6F              ; ----- ----- -----
 793  8A6F
 794  8A6F              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 795  8A6F              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 796  8A6F
 797  8A6F              ;	ld hl,Ctrl_1
 798  8A6F              ;	res 2,(hl)
 799  8A6F
 800  8A6F CD 8E 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 801  8A72
 802  8A72              ;	ld a,(Ctrl_0)
 803  8A72              ;	bit 4,a
 804  8A72              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 805  8A72
 806  8A72              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 807  8A72              ; [[[
 808  8A72              ;	call Detecta_disparo_entidad
 809  8A72              ; ]]]
 810  8A72
 811  8A72 CD BB 8C     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 812  8A75
 813  8A75              ;	ld hl,Ctrl_0
 814  8A75              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 815  8A75
 816  8A75 CD AB 8C     17 call Store_Restore_cajas
 817  8A78
 818  8A78 C1           	pop bc
 819  8A79
 820  8A79 10 E7        	djnz 15B
 821  8A7B
 822  8A7B CD 3C 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 823  8A7E
 824  8A7E              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 825  8A7E              ; Hemos gestionado todas las unidades.
 826  8A7E              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 827  8A7E
 828  8A7E              ;	ld hl,Ctrl_1
 829  8A7E              ;	res 2,(hl)
 830  8A7E
 831  8A7E
 832  8A7E              16
 833  8A7E CD 52 8B     	call Calcula_numero_de_malotes 						; Si el nº de malotes es "0" no generamos scanlines masticados. No ha habido movimiento.
 834  8A81
 835  8A81 21 EB 89     	ld hl,Ctrl_3
 836  8A84 CB C6        	set 0,(hl)											; Frame completo.
 837  8A86
 838  8A86 AF           	xor a
 839  8A87 D3 FE        	out ($fe),a
 840  8A89 76           	halt
 841  8A8A
 842  8A8A              ; ----------------------------------------
 843  8A8A
 844  8A8A              ;	ld a,(Ctrl_1) 										; Existe Loop?
 845  8A8A              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 846  8A8A CA 28 8A     	jp z,Main
 847  8A8D
 848  8A8D              ; RECARGA DE NUEVA OLEADA.
 849  8A8D
 850  8A8D              ;	ld a,(Contador_de_frames)
 851  8A8D              ;	ld b,a
 852  8A8D              ;	ld a,(Activa_recarga_cajas)
 853  8A8D              ;	cp b
 854  8A8D              ;	jr z,20F
 855  8A8D
 856  8A8D              ;	ld hl,Ctrl_1
 857  8A8D              ;	set 4,(hl)
 858  8A8D              ;	jp Main
 859  8A8D
 860  8A8D              ;20 ld hl,Ctrl_1
 861  8A8D              ;	res 4,(hl)
 862  8A8D
 863  8A8D              ;	ld a,(Contador_de_frames)
 864  8A8D
 865  8A8D              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 866  8A8D              ;! _ IMPREDECIBLE !!!!
 867  8A8D
 868  8A8D              ;	add 10
 869  8A8D              ;	ld (Clock_Entidades_en_curso),a
 870  8A8D
 871  8A8D              ;	jp 4B
 872  8A8D
 873  8A8D C9           	ret
 874  8A8E
 875  8A8E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 876  8A8E              ;
 877  8A8E              ;	16/11/23
 878  8A8E
 879  8A8E              ;;Gestiona_Amadeus
 880  8A8E
 881  8A8E              ;! Activa/desactiva impacto con Amadeus.
 882  8A8E
 883  8A8E              ;	ld a,(Impacto)
 884  8A8E              ;	and a
 885  8A8E              ;	jr nz,2F
 886  8A8E
 887  8A8E              ;;	call Mov_Amadeus
 888  8A8E
 889  8A8E              ;;2 ld a,(Ctrl_0)
 890  8A8E              ;;	bit 4,a
 891  8A8E              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 892  8A8E
 893  8A8E              ;;	call Guarda_foto_entidad_a_pintar
 894  8A8E              ;;	call Guarda_datos_de_borrado_Amadeus
 895  8A8E
 896  8A8E              ;;1 ld hl,Ctrl_0
 897  8A8E              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 898  8A8E
 899  8A8E              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 900  8A8E
 901  8A8E              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 902  8A8E
 903  8A8E              ;	call Calcula_numero_de_disparotes
 904  8A8E
 905  8A8E              ;;	ret
 906  8A8E
 907  8A8E              ; -----------------------------
 908  8A8E              ;
 909  8A8E              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 910  8A8E              ;
 911  8A8E              ;	INPUTS: B a de estar a "0".
 912  8A8E
 913  8A8E              ;Prepara_Borra_sprites
 914  8A8E
 915  8A8E              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 916  8A8E              ;	ld a,l
 917  8A8E              ;	ret z
 918  8A8E
 919  8A8E              ;	srl a
 920  8A8E
 921  8A8E              ;2 sub 16
 922  8A8E              ;	jr z,1F
 923  8A8E              ;	inc b
 924  8A8E              ;	jr 2B
 925  8A8E
 926  8A8E              ;1 inc b
 927  8A8E
 928  8A8E              ;	exx
 929  8A8E              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 930  8A8E              ;	exx
 931  8A8E
 932  8A8E              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 933  8A8E              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 934  8A8E
 935  8A8E              ;	ret
 936  8A8E
 937  8A8E              ; --------------------------------------------------------------------------------------------------------------
 938  8A8E              ;
 939  8A8E              ;	15/12/23
 940  8A8E
 941  8A8E              Mov_obj
 942  8A8E
 943  8A8E              ;	ld a,(Ctrl_2)
 944  8A8E              ;	bit 1,a
 945  8A8E              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 946  8A8E
 947  8A8E              ; Explosión:
 948  8A8E
 949  8A8E              ;	ld a,(Frames_explosion)
 950  8A8E              ;	and a
 951  8A8E              ;	jr nz,4F
 952  8A8E
 953  8A8E              ;!  Una alimaña menos!!!!!!!!!1
 954  8A8E
 955  8A8E              ; Se trataba de una Entidad_guía ???
 956  8A8E
 957  8A8E              ;	ld a,(Ctrl_2)
 958  8A8E              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 959  8A8E              ;	jr z,5F
 960  8A8E
 961  8A8E              ;	ld hl,Ctrl_3
 962  8A8E              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 963  8A8E
 964  8A8E              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 965  8A8E              ;!! _generado puede ser distinto, (aletoriedad).
 966  8A8E
 967  8A8E              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 968  8A8E              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 969  8A8E              ;	dec (hl)
 970  8A8E              ;	ld hl,Entidades_en_curso
 971  8A8E              ;	dec (hl)
 972  8A8E              ;	ld hl,Numero_de_entidades
 973  8A8E              ;	dec (hl)
 974  8A8E              ;	jr 3F
 975  8A8E
 976  8A8E              ; -----
 977  8A8E
 978  8A8E              ;	`Movemos´ la explosión.
 979  8A8E
 980  8A8E              ;4 ld hl,(Puntero_DESPLZ_der)
 981  8A8E              ;	inc hl
 982  8A8E              ;	inc hl
 983  8A8E              ;	call Extrae_address
 984  8A8E              ;;	ld (Puntero_objeto),hl
 985  8A8E
 986  8A8E              ;;	ld hl,Frames_explosion
 987  8A8E              ;;	dec (hl)
 988  8A8E
 989  8A8E              ;;	ld hl,Ctrl_0
 990  8A8E              ;;	set 4,(hl);;
 991  8A8E
 992  8A8E              ;;	jr 3F
 993  8A8E
 994  8A8E              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 995  8A8E
 996  8A8E              ;2 xor a
 997  8A8E              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 998  8A8E
 999  8A8E              ; Movemos Entidades malignas.
1000  8A8E              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1001  8A8E
1002  8A8E              ;	ld a,(Ctrl_2)
1003  8A8E              ;	bit 5,a
1004  8A8E              ;	jr nz,8F
1005  8A8E
1006  8A8E              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1007  8A8E              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1008  8A8E              ;	jr 7F
1009  8A8E
1010  8A8E              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1011  8A8E
1012  8A8E              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1013  8A8E              ;	bit 4,a
1014  8A8E              ;	ret z
1015  8A8E
1016  8A8E              ; Ha habido desplazamiento de la entidad maligna.
1017  8A8E              ; Ha llegado a zona de AMADEUS ???
1018  8A8E
1019  8A8E              ;7 ld a,(Coordenada_y)
1020  8A8E              ;	cp $14
1021  8A8E              ;	jr c,1F
1022  8A8E
1023  8A8E              ; ---------
1024  8A8E
1025  8A8E              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1026  8A8E              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1027  8A8E
1028  8A8E              ;	di
1029  8A8E              ;	call Genera_coordenadas_X
1030  8A8E              ;	call Compara_coordenadas_X
1031  8A8E              ;	ei
1032  8A8E
1033  8A8E              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1034  8A8E
1035  8A8E              ; ---------
1036  8A8E
1037  8A8E              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1038  8A8E              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1039  8A8E              ;	call Limpia_Variables_de_borrado
1040  8A8E
1041  8A8E C9           3 ret
1042  8A8F
1043  8A8F              ; --------------------------------------------------------------------------------------------------------------
1044  8A8F              ;
1045  8A8F              ;	29/1/23
1046  8A8F
1047  8A8F              ;Mov_Amadeus
1048  8A8F
1049  8A8F              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1050  8A8F
1051  8A8F              ;	call Mov_right
1052  8A8F
1053  8A8F              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1054  8A8F              ;	bit 4,a
1055  8A8F              ;	ret z
1056  8A8F
1057  8A8F              ; ---------
1058  8A8F
1059  8A8F              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1060  8A8F              ;	call Repone_datos_de_borrado_Amadeus
1061  8A8F              ;	call Limpia_Variables_de_borrado
1062  8A8F
1063  8A8F              ;	ret
1064  8A8F
1065  8A8F              ; -----------------------------------------------------------------------------------
1066  8A8F              ;
1067  8A8F              ;	20/01/24
1068  8A8F              ;
1069  8A8F              ;
1070  8A8F
1071  8A8F              Construye_movimientos_masticados_entidad
1072  8A8F
1073  8A8F 2A AD 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1074  8A92 E5           	push hl
1075  8A93 CD D3 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1076  8A96              ;															; _ el (Contador_de_mov_masticados).
1077  8A96 CD 70 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1078  8A99              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1079  8A99              ;	call Recompone_posicion_inicio
1080  8A99
1081  8A99 CD 02 8E     1 call Draw
1082  8A9C CD B8 8A     	call Guarda_movimiento_masticado
1083  8A9F
1084  8A9F CD E8 97     	call Movimiento
1085  8AA2
1086  8AA2 3A EB 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1087  8AA5 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1088  8AA7 28 F0        	jr z,1B
1089  8AA9
1090  8AA9              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1091  8AA9              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1092  8AA9
1093  8AA9 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1094  8AAA 22 AD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1095  8AAD
1096  8AAD              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1097  8AAD
1098  8AAD CD 4C 99     	call Situa_en_contador_general_de_mov_masticados
1099  8AB0
1100  8AB0              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1101  8AB0              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1102  8AB0
1103  8AB0 ED 4B AF 89  	ld bc,(Contador_de_mov_masticados)
1104  8AB4 71           	ld (hl),c
1105  8AB5 23           	inc hl
1106  8AB6 70           	ld (hl),b
1107  8AB7
1108  8AB7 C9           	ret
1109  8AB8
1110  8AB8              ; -----------------------------------------------------------------------------------
1111  8AB8              ;
1112  8AB8              ;	28/12/23
1113  8AB8              ;
1114  8AB8              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1115  8AB8              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1116  8AB8
1117  8AB8              Guarda_movimiento_masticado
1118  8AB8
1119  8AB8 ED 73 E1 89  	ld (Stack),sp
1120  8ABC ED 7B AD 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1121  8AC0
1122  8AC0              ;	push hl
1123  8AC0 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1124  8AC2 FD E5            push iy 												; Pushea Puntero_objeto.
1125  8AC4
1126  8AC4 ED 7B E1 89      ld sp,(Stack)
1127  8AC8
1128  8AC8 2A AF 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1129  8ACB 23           	inc hl
1130  8ACC 22 AF 89     	ld (Contador_de_mov_masticados),hl
1131  8ACF
1132  8ACF CD D3 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1133  8AD2              ;															; _ el (Contador_de_mov_masticados).
1134  8AD2 C9               ret
1135  8AD3
1136  8AD3              ; --------------------------------------------------------------------------------------------------------------
1137  8AD3              ;
1138  8AD3              ;	12/1/24
1139  8AD3              ;
1140  8AD3              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1141  8AD3
1142  8AD3              Actualiza_Puntero_de_almacen_de_mov_masticados
1143  8AD3
1144  8AD3 2A AD 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1145  8AD6 01 04 00     	ld bc,4
1146  8AD9 A7           	and a
1147  8ADA ED 4A        	adc hl,bc
1148  8ADC 22 AD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1149  8ADF C9           	ret
1150  8AE0
1151  8AE0              ; --------------------------------------------------------------------------------------------------------------
1152  8AE0              ;
1153  8AE0              ;	09/03/24
1154  8AE0              ;
1155  8AE0              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1156  8AE0              ;
1157  8AE0              ;	IX contiene el puntero de impresión.
1158  8AE0              ;	DE contiene (Puntero_objeto).
1159  8AE0
1160  8AE0
1161  8AE0 ED 73 E1 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1162  8AE4 ED 7B AD 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1163  8AE8
1164  8AE8 D1           	pop de 															; DE contiene Puntero_objeto
1165  8AE9 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1166  8AEB
1167  8AEB ED 73 AD 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1168  8AEF
1169  8AEF ED 7B E1 89  	ld sp,(Stack)
1170  8AF3
1171  8AF3 C9           	ret
1172  8AF4
1173  8AF4              ; --------------------------------------------------------------------------------------------------------------
1174  8AF4              ;
1175  8AF4              ;	28/12/23
1176  8AF4              ;
1177  8AF4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1178  8AF4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1179  8AF4
1180  8AF4              Guarda_foto_entidad_a_pintar
1181  8AF4
1182  8AF4 3A B1 89     	ld a,(Ctrl_0)
1183  8AF7 CB 77        	bit 6,a
1184  8AF9 28 04        	jr z,5F
1185  8AFB
1186  8AFB              ;	Guarda la foto de Amadeus.
1187  8AFB
1188  8AFB              ;	call Draw
1189  8AFB              ;	call Guarda_movimiento_masticado	;! Provisional
1190  8AFB CD BF 80     	call Genera_datos_de_impresion
1191  8AFE C9           	ret
1192  8AFF
1193  8AFF              ; ENTIDADES!
1194  8AFF              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1195  8AFF
1196  8AFF 3A EB 89     5 ld a,(Ctrl_3)
1197  8B02 CB 5F        	bit 3,a
1198  8B04 28 01        	jr z,1F
1199  8B06
1200  8B06              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1201  8B06
1202  8B06              4
1203  8B06              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1204  8B06 C9           	ret
1205  8B07
1206  8B07              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1207  8B07
1208  8B07 3A EB 89     1 ld a,(Ctrl_3)
1209  8B0A CB 57        	bit 2,a
1210  8B0C 20 10        	jr nz,6F
1211  8B0E
1212  8B0E              ; Entidad guía o fantasma ???
1213  8B0E
1214  8B0E 3A B6 89     	ld a,(Ctrl_2)
1215  8B11 CB 6F        	bit 5,a
1216  8B13 20 10        	jr nz,3F
1217  8B15
1218  8B15              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1219  8B15
1220  8B15 18 EF        	jr 4B
1221  8B17
1222  8B17              ; ENTIDAD_GUÍA:
1223  8B17              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1224  8B17              ; _guardando "movimientos_masticados".
1225  8B17
1226  8B17 3A EB 89     2 ld a,(Ctrl_3)
1227  8B1A CB 57        	bit 2,a
1228  8B1C 28 07        	jr z,3F
1229  8B1E
1230  8B1E              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1231  8B1E              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1232  8B1E
1233  8B1E CB 97        6 res 2,a
1234  8B20 CB DF        	set 3,a
1235  8B22 32 EB 89     	ld (Ctrl_3),a
1236  8B25
1237  8B25
1238  8B25              ;	Esto sólo lo ejecuta una entidad guía.
1239  8B25
1240  8B25 CD 02 8E     3 	call Draw
1241  8B28 CD B8 8A     	call Guarda_movimiento_masticado
1242  8B2B CD BF 80     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1243  8B2E
1244  8B2E              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1245  8B2E              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1246  8B2E
1247  8B2E              ;	call Convierte_guia_en_fantasma
1248  8B2E C9           	ret
1249  8B2F
1250  8B2F              ; ---------------------------------------------------------------------------------------------------------------------
1251  8B2F              ;
1252  8B2F              ;	13/03/24
1253  8B2F              ;
1254  8B2F              ;	Sitúa el puntero (Sc_album_SP) en el 1er álbum del índice.
1255  8B2F              ;	Sitúa (Scanlines_album_SP) al comienzo del 1er álbum del índice.
1256  8B2F
1257  8B2F              Inicia_selector_de_albumes_de_lineas
1258  8B2F
1259  8B2F 21 8A 89     	ld hl,Indice_de_albumes_de_lineas
1260  8B32 22 E7 89     	ld (Sc_album_SP),hl
1261  8B35 CD 6A 8B     	call Extrae_address
1262  8B38 22 E9 89     	ld (Scanlines_album_SP),hl
1263  8B3B C9           	ret
1264  8B3C
1265  8B3C              ; ---------------------------------------------------------------------------------------------------------------------
1266  8B3C              ;
1267  8B3C              ; 8/1/23
1268  8B3C              ;
1269  8B3C              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1270  8B3C              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1271  8B3C              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1272  8B3C
1273  8B3C              ; Destruye HL y DE !!!!!
1274  8B3C
1275  8B3C              Inicia_punteros_de_cajas
1276  8B3C
1277  8B3C 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1278  8B3F CD 6A 8B         call Extrae_address
1279  8B42 22 D3 89         ld (Puntero_store_caja),hl
1280  8B45 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1281  8B48 22 D7 89     	ld (Indice_restore_caja),hl
1282  8B4B CD 6A 8B     	call Extrae_address
1283  8B4E 22 D5 89     	ld (Puntero_restore_caja),hl
1284  8B51 C9               ret
1285  8B52
1286  8B52              ; *************************************************************************************************************************************************************
1287  8B52              ;
1288  8B52              ; 8/1/23
1289  8B52              ;
1290  8B52              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1291  8B52
1292  8B52              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1293  8B52              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1294  8B52              ;	ret
1295  8B52              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1296  8B52              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1297  8B52              ;	ret
1298  8B52
1299  8B52              ; -------------------------------------------------------------------------------------------------------------
1300  8B52              ;
1301  8B52              ; 21/9/23
1302  8B52              ;
1303  8B52
1304  8B52              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1305  8B52
1306  8B52              ;;Limpia_album_Amadeus
1307  8B52              ;
1308  8B52              ;;	ld hl,Scanlines_album_Amadeus
1309  8B52              ;;	ld a,(hl)
1310  8B52              ;;	and a
1311  8B52              ;;	ret z
1312  8B52
1313  8B52              ;;	ld hl,Scanlines_album_Amadeus;
1314  8B52              ;;	ld de,Scanlines_album_Amadeus+1
1315  8B52              ;;	ld bc,11
1316  8B52              ;;	xor a
1317  8B52              ;;	ld (hl),a
1318  8B52              ;;	ldir
1319  8B52
1320  8B52              ;;	ld hl,Scanlines_album_Amadeus
1321  8B52              ;;	ld (End_Snapshot_Amadeus),hl
1322  8B52
1323  8B52              ;;	ret
1324  8B52
1325  8B52              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1326  8B52              ;	ld de,Variables_de_borrado+1
1327  8B52              ;	ld bc,5
1328  8B52              ;	xor a
1329  8B52              ;	ld (hl),a
1330  8B52              ;	ldir
1331  8B52              ;	ret
1332  8B52
1333  8B52              ; -------------------------------------------------------------------------------------------------------------
1334  8B52              ;
1335  8B52              ; 	21/02/24
1336  8B52              ;
1337  8B52              ;	MODIFICA: AF,HL,BC,DE
1338  8B52              ;
1339  8B52              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1340  8B52              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1341  8B52
1342  8B52              Calcula_numero_de_malotes
1343  8B52
1344  8B52 21 00 80     	ld hl,Scanlines_album
1345  8B55 EB           	ex de,hl
1346  8B56 2A E9 89     	ld hl,(Scanlines_album_SP)
1347  8B59
1348  8B59 06 00        	ld b,0
1349  8B5B 7D           	ld a,l
1350  8B5C 93           	sub e
1351  8B5D 28 07        	jr z,1F
1352  8B5F
1353  8B5F              ; Nº de malotes no es "0".
1354  8B5F
1355  8B5F D6 06        2 sub 6
1356  8B61 04           	inc b
1357  8B62 A7           	and a
1358  8B63 20 FA        	jr nz,2B
1359  8B65 78           	ld a,b
1360  8B66
1361  8B66 32 DC 89     1 ld (Numero_de_malotes),a
1362  8B69 C9           	ret
1363  8B6A
1364  8B6A              ; -------------------------------------------------------------------------------------------------------------
1365  8B6A              ;
1366  8B6A              ; 8/9/23
1367  8B6A              ;
1368  8B6A
1369  8B6A              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1370  8B6A              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1371  8B6A
1372  8B6A              ;Calcula_malotes_Amadeus
1373  8B6A
1374  8B6A              ;	ld hl,Scanlines_album_Amadeus
1375  8B6A              ;	ex de,hl
1376  8B6A              ;	ld hl,(End_Snapshot_Amadeus)
1377  8B6A
1378  8B6A              ;	ld a,h
1379  8B6A              ;	and a
1380  8B6A              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1381  8B6A
1382  8B6A              ;	ld b,0
1383  8B6A              ;	ld a,l
1384  8B6A              ;	sub e
1385  8B6A              ;	jr z,1F
1386  8B6A
1387  8B6A              ; Nº de malotes no es "0".
1388  8B6A
1389  8B6A              ;2 sub 6
1390  8B6A              ;	inc b
1391  8B6A              ;	and a
1392  8B6A              ;	jr nz,2B
1393  8B6A              ;	ld a,b
1394  8B6A
1395  8B6A              ;1 ld (Numero_de_malotes),a
1396  8B6A              ;	ret
1397  8B6A
1398  8B6A              ; -------------------------------------------------------------------------------------------------------------
1399  8B6A              ;
1400  8B6A              ; 28/2/23
1401  8B6A              ;
1402  8B6A
1403  8B6A              ;;Calcula_numero_de_disparotes
1404  8B6A
1405  8B6A              ;	ld hl,Scanlines_album_disparos
1406  8B6A              ;	ex de,hl
1407  8B6A              ;	ld hl,(End_Snapshot_disparos)
1408  8B6A
1409  8B6A              ;	ld b,0
1410  8B6A              ;	ld a,l
1411  8B6A              ;	sub e
1412  8B6A              ;	jr z,1F
1413  8B6A
1414  8B6A              ; Nº de malotes no es "0".
1415  8B6A
1416  8B6A              ;2 sub 6
1417  8B6A              ;	inc b
1418  8B6A              ;	and a
1419  8B6A              ;	jr nz,2B
1420  8B6A              ;	ld a,b
1421  8B6A
1422  8B6A              ;1 ld (Numero_de_disparotes),a
1423  8B6A              ;	ret
1424  8B6A
1425  8B6A              ; *************************************************************************************************************************************************************
1426  8B6A              ;
1427  8B6A              ; 20/10/22
1428  8B6A              ;
1429  8B6A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1430  8B6A              ;
1431  8B6A              ; Destruye el puntero y DE !!!!!
1432  8B6A
1433  8B6A 5E           Extrae_address ld e,(hl)
1434  8B6B 23           	inc hl
1435  8B6C 56           	ld d,(hl)
1436  8B6D 2B           	dec hl
1437  8B6E EB           	ex de,hl
1438  8B6F C9           	ret
1439  8B70
1440  8B70              ; *************************************************************************************************************************************************************
1441  8B70              ;
1442  8B70              ;	20/1/24
1443  8B70              ;
1444  8B70              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1445  8B70              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1446  8B70              ;
1447  8B70              ;   Destruye HL y BC !!!!!,
1448  8B70              ;
1449  8B70              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1450  8B70              ;					"0" ..... Izquierda.
1451  8B70
1452  8B70              Inicia_Puntero_objeto
1453  8B70
1454  8B70 3A A3 89     	ld a,(Cuad_objeto)
1455  8B73 E6 01        	and 1
1456  8B75 F5           	push af
1457  8B76 CC 92 8B     	call z,Inicia_puntero_objeto_izq
1458  8B79 F1           	pop af
1459  8B7A C8           	ret z
1460  8B7B CD 7F 8B     	call Inicia_puntero_objeto_der
1461  8B7E C9           	ret
1462  8B7F
1463  8B7F              ; Arrancamos desde la parte izquierda de la pantalla.
1464  8B7F              ; Iniciamos (Indice_Sprite_der).
1465  8B7F
1466  8B7F 2A 99 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1467  8B82 22 9D 89     	ld (Puntero_DESPLZ_der),hl
1468  8B85 CD 6A 8B     	call Extrae_address
1469  8B88 22 93 89     	ld (Puntero_objeto),hl
1470  8B8B
1471  8B8B 2A 9B 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1472  8B8E 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
1473  8B91 C9           	ret
1474  8B92
1475  8B92              ; Arrancamos desde la parte derecha de la pantalla.
1476  8B92              ; Iniciamos (Indice_Sprite_izq).
1477  8B92
1478  8B92 2A 9B 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1479  8B95 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
1480  8B98 CD 6A 8B     	call Extrae_address
1481  8B9B 22 93 89     	ld (Puntero_objeto),hl
1482  8B9E
1483  8B9E 2A 99 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1484  8BA1 22 9D 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1485  8BA4 C9           	ret
1486  8BA5
1487  8BA5              ; **************************************************************************************************
1488  8BA5              ;
1489  8BA5              ;	31/01/24
1490  8BA5              ;
1491  8BA5              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1492  8BA5
1493  8BA5              Restore_entidad
1494  8BA5
1495  8BA5 2A D3 89     	ld hl,(Puntero_store_caja)
1496  8BA8 11 8E 89     	ld de,Bandeja_DRAW
1497  8BAB 7E           	ld a,(hl)
1498  8BAC 12           	ld (de),a
1499  8BAD 23           	inc hl 											; (Tipo).
1500  8BAE
1501  8BAE 11 95 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1502  8BB1 01 02 00     	ld bc,2
1503  8BB4 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1504  8BB6
1505  8BB6 13           	inc de
1506  8BB7 7E           	ld a,(hl)
1507  8BB8 12           	ld (de),a 										; Transferimos (Attr).
1508  8BB9 23           	inc hl
1509  8BBA
1510  8BBA 11 A4 89     	ld de,Impacto
1511  8BBD
1512  8BBD 7E           	ld a,(hl)
1513  8BBE 12           	ld (de),a 										; Transferimos (Impacto).
1514  8BBF 23           	inc hl
1515  8BC0
1516  8BC0 13           	inc de
1517  8BC1
1518  8BC1 01 06 00     	ld bc,6
1519  8BC4 ED B0        	ldir
1520  8BC6
1521  8BC6 01 07 00     	ld bc,7
1522  8BC9 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1523  8BCB              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1524  8BCB 11 B6 89     	ld de,Ctrl_2
1525  8BCE
1526  8BCE 7E           	ld a,(hl)
1527  8BCF 12           	ld (de),a 										; Transferimos (Ctrl_2).
1528  8BD0
1529  8BD0 C9           	ret
1530  8BD1
1531  8BD1              ; **************************************************************************************************
1532  8BD1              ;
1533  8BD1              ;	08/05/23
1534  8BD1              ;
1535  8BD1              ;	Incrementamos los dos punteros de entidades. (+1).
1536  8BD1
1537  8BD1              Incrementa_punteros_de_cajas
1538  8BD1
1539  8BD1 2A D5 89     	ld hl,(Puntero_restore_caja)
1540  8BD4 22 D3 89     	ld (Puntero_store_caja),hl
1541  8BD7 2A D7 89     	ld hl,(Indice_restore_caja)
1542  8BDA 23           	inc hl
1543  8BDB 23           	inc hl
1544  8BDC 22 D7 89     	ld (Indice_restore_caja),hl
1545  8BDF CD 6A 8B         call Extrae_address
1546  8BE2 22 D5 89         ld (Puntero_restore_caja),hl
1547  8BE5 C9               ret
1548  8BE6
1549  8BE6              ; **************************************************************************************************
1550  8BE6              ;
1551  8BE6              ;	21/12/23
1552  8BE6              ;
1553  8BE6              ;	Restore_Amadeus
1554  8BE6              ;
1555  8BE6              ;	Cargamos en DRAW los parámetros de Amadeus.
1556  8BE6              ;
1557  8BE6
1558  8BE6              ;Restore_Amadeus	push hl
1559  8BE6              ;	push de
1560  8BE6              ; 	push bc
1561  8BE6              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1562  8BE6              ;	ld de,Bandeja_DRAW
1563  8BE6              ;	ld bc,42
1564  8BE6              ;	ldir
1565  8BE6              ;	pop bc
1566  8BE6              ;	pop de
1567  8BE6              ;	pop hl
1568  8BE6              ;	ret
1569  8BE6
1570  8BE6              ; *************************************************************************************************************************************************************
1571  8BE6              ;
1572  8BE6              ;	21/12/23
1573  8BE6              ;
1574  8BE6              ;	Store_Amadeus
1575  8BE6              ;
1576  8BE6              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1577  8BE6              ;
1578  8BE6              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1579  8BE6              ;
1580  8BE6              ;	DESTRUYE: HL y BC y DE.
1581  8BE6
1582  8BE6              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1583  8BE6              ;	ld bc,42
1584  8BE6              ;	ldir
1585  8BE6              ;	ret
1586  8BE6
1587  8BE6              ; -----------------------------------------------------------
1588  8BE6              ;
1589  8BE6              ;	21/12/23
1590  8BE6              ;
1591  8BE6              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1592  8BE6              ;
1593  8BE6              ;	Destruye: HL,BC,DE,A
1594  8BE6
1595  8BE6              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1596  8BE6              ;	ld bc,41
1597  8BE6              ;	xor a
1598  8BE6              ;	ld (hl),a;
1599  8BE6              ;	ld de,Bandeja_DRAW+1
1600  8BE6              ;	ldir
1601  8BE6              ;	ret
1602  8BE6
1603  8BE6              ; -----------------------------------------------------------
1604  8BE6
1605  8BE6              ; Teclado.
1606  8BE6
1607  8BE6 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1608  8BE8 DB FE        	in a,($fe)
1609  8BEA E6 01        	and $01
1610  8BEC 28 02        	jr z,1f
1611  8BEE 18 F6        	jr Pulsa_ENTER
1612  8BF0 C9           1 ret
1613  8BF1
1614  8BF1              ; **************************************************************************************************
1615  8BF1              ;
1616  8BF1              ; Temporización.
1617  8BF1
1618  8BF1              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1619  8BF1              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1620  8BF1              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1621  8BF1              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1622  8BF1
1623  8BF1              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1624  8BF1              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1625  8BF1              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1626  8BF1
1627  8BF1              ; A partir de $4f61 no hace falta DELAY.
1628  8BF1
1629  8BF1              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1630  8BF1
1631  8BF1 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1632  8BF4 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1633  8BF5 78           	LD A,B
1634  8BF6 A7           	AND A
1635  8BF7 20 FB        	JR NZ,wait
1636  8BF9 C9           	RET
1637  8BFA
1638  8BFA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1639  8BFA              ;
1640  8BFA              ;	5/3/23
1641  8BFA              ;
1642  8BFA              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1643  8BFA
1644  8BFA              ;Movimiento_Amadeus
1645  8BFA
1646  8BFA              ; Disparo.
1647  8BFA
1648  8BFA              ;	ld a,(Disparo_Amadeus)
1649  8BFA              ;	and a
1650  8BFA              ;	jr nz,1F
1651  8BFA              ;	jr 2F
1652  8BFA
1653  8BFA              ;1 ld a,$f7													; "5" para disparar.
1654  8BFA              ;	in a,($fe)
1655  8BFA              ;	and $10
1656  8BFA
1657  8BFA              ;	push af
1658  8BFA              ;	call z,Genera_disparo
1659  8BFA              ;	pop af
1660  8BFA              ;	jr nz,2F
1661  8BFA
1662  8BFA              ;	ld a,(Disparo_Amadeus)
1663  8BFA              ;	xor 1
1664  8BFA              ;	ld (Disparo_Amadeus),a
1665  8BFA              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1666  8BFA              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1667  8BFA              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1668  8BFA              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1669  8BFA
1670  8BFA              ;	ld a,$f7
1671  8BFA              ;	in a,($fe)
1672  8BFA              ;	and $01
1673  8BFA              ;	ret z
1674  8BFA
1675  8BFA              ;	ld a,$f7
1676  8BFA              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1677  8BFA              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1678  8BFA              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1679  8BFA              ;	ret
1680  8BFA
1681  8BFA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1682  8BFA              ;
1683  8BFA              ;	Rutina provisional para que los malotes cagen balas.
1684  8BFA
1685  8BFA              ;Detecta_disparo_entidad
1686  8BFA
1687  8BFA              ;	ld a,(Disparo_entidad)
1688  8BFA              ;	and a
1689  8BFA              ;	ret z
1690  8BFA
1691  8BFA              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1692  8BFA
1693  8BFA              ;	ld a,$7f				; Detecta SPACE.
1694  8BFA              ;	in a,($fe)
1695  8BFA              ;	and 1
1696  8BFA              ;	ret nz
1697  8BFA
1698  8BFA              ;	call Genera_disparo
1699  8BFA              ;	ret
1700  8BFA
1701  8BFA              ; ----------------------------------------------------------------------
1702  8BFA              ;
1703  8BFA              ;	8/9/23
1704  8BFA
1705  8BFA              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1706  8BFA              ; 	dec hl
1707  8BFA              ;	ld a,(hl)
1708  8BFA              ;	and a
1709  8BFA              ;	ret z										; Salimos si es álbum está vacío.
1710  8BFA
1711  8BFA              ;	ld de,Variables_de_borrado+5
1712  8BFA              ;	ld bc,6
1713  8BFA              ;	lddr
1714  8BFA              ;	ret
1715  8BFA
1716  8BFA              ; ----------------------------------------------------------------------
1717  8BFA              ;
1718  8BFA              ;	9/9/23
1719  8BFA
1720  8BFA              ;Repone_datos_de_borrado_Amadeus
1721  8BFA
1722  8BFA              ;	ld hl,Variables_de_borrado
1723  8BFA              ;	ld de,Scanlines_album_Amadeus
1724  8BFA              ;	ld bc,6
1725  8BFA              ;	ldir
1726  8BFA
1727  8BFA              ;	ex de,hl
1728  8BFA              ;	ld (End_Snapshot_Amadeus),hl
1729  8BFA
1730  8BFA              ;	ret
1731  8BFA
1732  8BFA              ; ----------------------------------------------------------------------
1733  8BFA              ;
1734  8BFA              ;	27/10/23
1735  8BFA              ;
1736  8BFA
1737  8BFA              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1738  8BFA              ;	_ Scanlines_album correspondiente.
1739  8BFA
1740  8BFA              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1741  8BFA              ;	_ durante el proceso de escritura.
1742  8BFA
1743  8BFA              ;Repone_datos_de_borrado
1744  8BFA
1745  8BFA              ;	ld de,(Scanlines_album_SP)
1746  8BFA              ;	ld hl,Variables_de_borrado
1747  8BFA              ;	ld bc,6
1748  8BFA              ;	ldir
1749  8BFA
1750  8BFA              ;	ex de,hl
1751  8BFA              ;	ld (Scanlines_album_SP),hl
1752  8BFA
1753  8BFA              ;	ret
1754  8BFA
1755  8BFA              ; --------------------------------------------------------------------------------------
1756  8BFA
1757  8BFA              ;Pinta_Amadeus
1758  8BFA
1759  8BFA              ;   	call Calcula_malotes_Amadeus
1760  8BFA              ;	call Extrae_foto_Amadeus
1761  8BFA              ;	call Limpia_album_Amadeus
1762  8BFA
1763  8BFA              ;	ret
1764  8BFA
1765  8BFA              ; -----------------------------------------------------------------------------------
1766  8BFA              ;
1767  8BFA              ;	10/12/23
1768  8BFA              ;
1769  8BFA              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1770  8BFA
1771  8BFA              Actualiza_relojes
1772  8BFA
1773  8BFA 3A EB 89     	ld a,(Ctrl_3)
1774  8BFD CB 47        	bit 0,a
1775  8BFF C8           	ret z 						;	Salimos si no hemos pintado unidades.
1776  8C00
1777  8C00 21 F0 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1778  8C03 34           	inc (hl)
1779  8C04
1780  8C04 34           	inc (hl)
1781  8C05 35           	dec (hl)
1782  8C06 C0           	ret nz
1783  8C07
1784  8C07 21 F1 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1785  8C0A 34           	inc (hl)
1786  8C0B C9           	ret
1787  8C0C
1788  8C0C              ; ---------------------------------------------------------------
1789  8C0C
1790  8C0C              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8C0C              ;---------------------------------------------------------------------------------------------------------------
   2+ 8C0C              ;
   3+ 8C0C              ;   8/3/24
   4+ 8C0C              ;
   5+ 8C0C              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8C0C              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8C0C              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8C0C              ;	_ de la 1ª entidad del Nivel.
   9+ 8C0C              ;
  10+ 8C0C              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8C0C
  12+ 8C0C              ;	MODIFICA: HL,DE y A.
  13+ 8C0C              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8C0C
  15+ 8C0C              Inicializa_Nivel
  16+ 8C0C
  17+ 8C0C 2A F5 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8C0F CD 6A 8B     	call Extrae_address
  19+ 8C12 7E           	ld a,(hl)
  20+ 8C13 32 D9 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8C16 23           	inc hl
  22+ 8C17 CD 24 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8C1A 22 F7 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C1D CD 2D 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C20
  26+ 8C20 CD 3E 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C23 C9           	ret
  28+ 8C24
  29+ 8C24              ; ----------------------
  30+ 8C24
  31+ 8C24 11 B8 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C27 01 04 00     	ld bc,4
  33+ 8C2A ED B0        	ldir
  34+ 8C2C C9           	ret
  35+ 8C2D
  36+ 8C2D 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C2E CD 7E 8D         call Calcula_salto_en_BC
  38+ 8C31 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C34 A7               and a
  40+ 8C35 ED 4A            adc hl,bc
  41+ 8C37 CD 6A 8B         call Extrae_address
  42+ 8C3A 22 C4 89         ld (Puntero_indice_mov),hl
  43+ 8C3D C9               ret
  44+ 8C3E
  45+ 8C3E 3A 8E 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8C41 CD 7E 8D     	call Calcula_salto_en_BC
  47+ 8C44 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8C47 A7               and a
  49+ 8C48 ED 4A            adc hl,bc
  50+ 8C4A CD 6A 8B         call Extrae_address
  51+ 8C4D 22 AD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8C50 C9           	ret
  53+ 8C51
  54+ 8C51              ;---------------------------------------------------------------------------------------------------------------
  55+ 8C51              ;
  56+ 8C51              ;   5/1/24
  57+ 8C51              ;
  58+ 8C51              ;	Destruye A,BC,HL,DE
  59+ 8C51
  60+ 8C51              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8C51              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8C51
  63+ 8C51              Inicia_Entidades
  64+ 8C51
  65+ 8C51              ; Preparamos los punteros de las cajas de entidades:
  66+ 8C51
  67+ 8C51 CD 3C 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8C54              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8C54 CD E5 8D     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8C57
  71+ 8C57 2A F7 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8C5A
  73+ 8C5A 22 F7 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8C5D
  75+ 8C5D CD 2C 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8C60
  77+ 8C60 2A F7 89     	ld hl,(Datos_de_nivel)
  78+ 8C63
  79+ 8C63              ; En este punto:
  80+ 8C63              ;
  81+ 8C63              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8C63              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8C63
  84+ 8C63 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8C64
  86+ 8C64 7E           	ld a,(hl)
  87+ 8C65 CD A1 8C     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8C68
  89+ 8C68 CD 90 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8C6B
  91+ 8C6B              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8C6B
  93+ 8C6B CD 4E 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8C6E
  95+ 8C6E A7           	and a
  96+ 8C6F 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8C71
  98+ 8C71              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8C71
 100+ 8C71              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8C71              ;	_ de este tipo de entidad.
 102+ 8C71
 103+ 8C71 CD 4C 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8C74 CD 59 99     	call Transfiere_datos_de_contadores
 105+ 8C77
 106+ 8C77 18 06        	jr 4F
 107+ 8C79
 108+ 8C79 CD 8F 8A     3 call Construye_movimientos_masticados_entidad
 109+ 8C7C
 110+ 8C7C              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8C7C              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8C7C              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8C7C              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8C7C              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8C7C
 116+ 8C7C CD 0C 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8C7F              ;																; _ Mov_masticados ya generados.
 118+ 8C7F CD BB 8C     4 call Guarda_foto_de_mov_masticado
 119+ 8C82
 120+ 8C82              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8C82
 122+ 8C82 2A AB 89     	ld hl,(Puntero_de_impresion)
 123+ 8C85 CD 8F 99     	call Genera_coordenadas
 124+ 8C88 CD B7 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8C8B CD C5 8C     	call Limpiamos_bandeja_DRAW
 126+ 8C8E CD D1 8B     	call Incrementa_punteros_de_cajas
 127+ 8C91
 128+ 8C91              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8C91              ; _ entidad del Nivel.
 130+ 8C91
 131+ 8C91 3A EC 89     	ld a,(Ctrl_4)
 132+ 8C94 E6 F0        	and $f0
 133+ 8C96 32 EC 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8C99
 135+ 8C99              ; Siguiente entidad del Nivel.
 136+ 8C99
 137+ 8C99 2A F7 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8C9C 23           	inc hl 														; _ entidad del Nivel.
 139+ 8C9D
 140+ 8C9D C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8C9E
 142+ 8C9E 10 BA        	djnz 2B
 143+ 8CA0
 144+ 8CA0 C9           	ret
 145+ 8CA1
 146+ 8CA1              ; ---------------------------------------------------------------------
 147+ 8CA1              ;
 148+ 8CA1              ;	10/02/24
 149+ 8CA1              ;
 150+ 8CA1              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8CA1              ;
 152+ 8CA1              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8CA1
 154+ 8CA1              Definicion_segun_tipo
 155+ 8CA1
 156+ 8CA1 CD 7E 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8CA4 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8CA7 CD 86 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8CAA C9           	ret
 160+ 8CAB
 161+ 8CAB              ; ---------------------------------------------------------------------
 162+ 8CAB              ;
 163+ 8CAB              ;	30/01/24
 164+ 8CAB
 165+ 8CAB
 166+ 8CAB              Store_Restore_cajas
 167+ 8CAB
 168+ 8CAB              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8CAB
 170+ 8CAB 2A AB 89     	ld hl,(Puntero_de_impresion)
 171+ 8CAE CD 8F 99     	call Genera_coordenadas
 172+ 8CB1
 173+ 8CB1 CD B7 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8CB4 CD C5 8C     	call Limpiamos_bandeja_DRAW
 175+ 8CB7
 176+ 8CB7              ; 	Entidad_sospechosa. 20/4/23
 177+ 8CB7
 178+ 8CB7              ;	ld a,(Impacto)
 179+ 8CB7              ;	and a
 180+ 8CB7              ;	jr z,1F
 181+ 8CB7
 182+ 8CB7              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8CB7              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8CB7              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8CB7              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8CB7              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8CB7
 188+ 8CB7
 189+ 8CB7              ;1 ld hl,(Puntero_restore_caja)
 190+ 8CB7              ;	ld a,(hl)
 191+ 8CB7              ;	and a
 192+ 8CB7              ;	push af
 193+ 8CB7              ;	jr z,2F
 194+ 8CB7
 195+ 8CB7              ;	di
 196+ 8CB7              ;	ld de,Bandeja_DRAW
 197+ 8CB7              ;	ld bc,42
 198+ 8CB7              ;	ldir
 199+ 8CB7              ;	ei
 200+ 8CB7
 201+ 8CB7 CD D1 8B     2 call Incrementa_punteros_de_cajas
 202+ 8CBA C9           	ret
 203+ 8CBB
 204+ 8CBB
 205+ 8CBB              ; ---------------------------------------------------------------------
 206+ 8CBB              ;
 207+ 8CBB              ;	29/01/24
 208+ 8CBB
 209+ 8CBB              Guarda_foto_de_mov_masticado
 210+ 8CBB
 211+ 8CBB CD E0 8A     	call Cargamos_registros_con_mov_masticado
 212+ 8CBE CD BF 80     	call Genera_datos_de_impresion
 213+ 8CC1              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8CC1              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8CC1              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8CC1              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8CC1
 218+ 8CC1 CD D0 8C     	call Decrementa_Contador_de_mov_masticados
 219+ 8CC4 C9           	ret
 220+ 8CC5
 221+ 8CC5              ; ---------------------------------------------------------------------
 222+ 8CC5              ;
 223+ 8CC5              ;	25/01/24
 224+ 8CC5
 225+ 8CC5 21 8E 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8CC8 06 2A        	ld b,42
 227+ 8CCA AF           	xor a
 228+ 8CCB
 229+ 8CCB 77           1 ld (hl),a
 230+ 8CCC 23           	inc hl
 231+ 8CCD 10 FC        	djnz 1B
 232+ 8CCF
 233+ 8CCF C9           	ret
 234+ 8CD0
 235+ 8CD0              ; ---------------------------------------------------------------------
 236+ 8CD0              ;
 237+ 8CD0              ;	22/01/24
 238+ 8CD0
 239+ 8CD0 2A AF 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8CD3 2B           	dec hl
 241+ 8CD4
 242+ 8CD4 24           	inc h
 243+ 8CD5 25           	dec h
 244+ 8CD6
 245+ 8CD6 FC DD 8C     	call m,Reinicia_entidad_maliciosa
 246+ 8CD9
 247+ 8CD9              ;	jr nz,1F
 248+ 8CD9
 249+ 8CD9              ;	inc l
 250+ 8CD9              ;	dec l
 251+ 8CD9
 252+ 8CD9              ;	di
 253+ 8CD9              ;	jr z,$
 254+ 8CD9              ;	ei
 255+ 8CD9
 256+ 8CD9 22 AF 89     1 ld (Contador_de_mov_masticados),hl
 257+ 8CDC C9           	ret
 258+ 8CDD
 259+ 8CDD              ; ---------------------------------------------------------------------
 260+ 8CDD              ;
 261+ 8CDD              ;	10/2/24
 262+ 8CDD
 263+ 8CDD              Reinicia_entidad_maliciosa
 264+ 8CDD
 265+ 8CDD              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8CDD
 267+ 8CDD CD 4C 99     	call Situa_en_contador_general_de_mov_masticados
 268+ 8CE0 CD 59 99     	call Transfiere_datos_de_contadores
 269+ 8CE3
 270+ 8CE3              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8CE3
 272+ 8CE3 3A 8E 89     	ld a,(Tipo)
 273+ 8CE6 CD A1 8C     	call Definicion_segun_tipo
 274+ 8CE9
 275+ 8CE9 E5           	push hl
 276+ 8CEA DD E1        	pop ix
 277+ 8CEC
 278+ 8CEC DD 6E 0B     	ld l,(ix+11)
 279+ 8CEF DD 66 0C     	ld h,(ix+12)
 280+ 8CF2
 281+ 8CF2 22 AD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8CF5
 283+ 8CF5              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8CF5              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8CF5
 286+ 8CF5 2A E9 89     	ld hl,(Scanlines_album_SP)
 287+ 8CF8 01 06 00     	ld bc,6
 288+ 8CFB A7           	and a
 289+ 8CFC ED 42        	sbc hl,bc
 290+ 8CFE 22 E9 89     	ld (Scanlines_album_SP),hl
 291+ 8D01
 292+ 8D01 CD E0 8A     	call Cargamos_registros_con_mov_masticado
 293+ 8D04 CD BF 80     	call Genera_datos_de_impresion
 294+ 8D07
 295+ 8D07 2A AF 89     	ld hl,(Contador_de_mov_masticados)
 296+ 8D0A 2B           	dec hl
 297+ 8D0B
 298+ 8D0B C9           	ret
 299+ 8D0C
 300+ 8D0C
 301+ 8D0C
 302+ 8D0C
 303+ 8D0C              ; ---------------------------------------------------------------------
 304+ 8D0C              ;
 305+ 8D0C              ;	22/01/24
 306+ 8D0C
 307+ 8D0C 21 EC 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8D0F CB 46        	bit 0,(hl)
 309+ 8D11 20 0D        	jr nz,1F
 310+ 8D13 CB 4E        	bit 1,(hl)
 311+ 8D15 20 0C        	jr nz,2F
 312+ 8D17 CB 56        	bit 2,(hl)
 313+ 8D19 20 0B        	jr nz,3F
 314+ 8D1B CB 5E        	bit 3,(hl)
 315+ 8D1D 20 0A        	jr nz,4F
 316+ 8D1F C9           	ret
 317+ 8D20
 318+ 8D20 CB E6        1 set 4,(hl)
 319+ 8D22 C9           	ret
 320+ 8D23 CB EE        2 set 5,(hl)
 321+ 8D25 C9           	ret
 322+ 8D26 CB F6        3 set 6,(hl)
 323+ 8D28 C9           	ret
 324+ 8D29 CB FE        4 set 7,(hl)
 325+ 8D2B C9           	ret
 326+ 8D2C
 327+ 8D2C              ; ---------------------------------------------------------------------
 328+ 8D2C              ;
 329+ 8D2C              ;	23/01/24
 330+ 8D2C              ;
 331+ 8D2C              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8D2C              ;
 333+ 8D2C              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8D2C              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8D2C              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8D2C              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8D2C
 338+ 8D2C              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8D2C
 340+ 8D2C 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8D2D 3D           	dec a
 342+ 8D2E 20 06        	jr nz,1F
 343+ 8D30
 344+ 8D30              ; --- Tipo_1
 345+ 8D30
 346+ 8D30 21 EC 89     	ld hl,Ctrl_4
 347+ 8D33 CB C6        	set 0,(hl)
 348+ 8D35 C9           	ret
 349+ 8D36
 350+ 8D36 3D           1 dec a
 351+ 8D37 20 06        	jr nz,2F
 352+ 8D39
 353+ 8D39              ; --- Tipo_2
 354+ 8D39
 355+ 8D39 21 EC 89     	ld hl,Ctrl_4
 356+ 8D3C CB CE        	set 1,(hl)
 357+ 8D3E C9           	ret
 358+ 8D3F
 359+ 8D3F 3D           2 dec a
 360+ 8D40 20 06        	jr nz,3F
 361+ 8D42
 362+ 8D42              ; --- Tipo_3
 363+ 8D42
 364+ 8D42 21 EC 89     	ld hl,Ctrl_4
 365+ 8D45 CB D6        	set 2,(hl)
 366+ 8D47 C9           	ret
 367+ 8D48
 368+ 8D48              ; --- Tipo_3
 369+ 8D48
 370+ 8D48 21 EC 89     3 ld hl,Ctrl_4
 371+ 8D4B CB D6        	set 2,(hl)
 372+ 8D4D C9           	ret
 373+ 8D4E
 374+ 8D4E              ; ---------------------------------------------------------------------
 375+ 8D4E              ;
 376+ 8D4E              ;	22/01/24
 377+ 8D4E
 378+ 8D4E 21 EC 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8D51 CB 46        	bit 0,(hl)
 380+ 8D53 20 0E        	jr nz,1F
 381+ 8D55
 382+ 8D55 CB 4E        	bit 1,(hl)
 383+ 8D57 20 10        	jr nz,2F
 384+ 8D59
 385+ 8D59 CB 56        	bit 2,(hl)
 386+ 8D5B 20 12        	jr nz,3F
 387+ 8D5D
 388+ 8D5D CB 5E        	bit 3,(hl)
 389+ 8D5F 20 14        	jr nz,4F
 390+ 8D61 18 19        	jr 6F
 391+ 8D63
 392+ 8D63              ; Entidad_de_Tipo_1.
 393+ 8D63
 394+ 8D63 CB 66        1 bit 4,(hl)
 395+ 8D65 28 15        	jr z,6F
 396+ 8D67 18 10        	jr 5F
 397+ 8D69
 398+ 8D69              ; Entidad_de_Tipo_2.
 399+ 8D69
 400+ 8D69 CB 6E        2 bit 5,(hl)
 401+ 8D6B 28 0F        	jr z,6F
 402+ 8D6D 18 0A        	jr 5F
 403+ 8D6F
 404+ 8D6F              ; Entidad_de_Tipo_3.
 405+ 8D6F
 406+ 8D6F CB 76        3 bit 6,(hl)
 407+ 8D71 28 09        	jr z,6F
 408+ 8D73 18 04        	jr 5F
 409+ 8D75
 410+ 8D75              ; Entidad_de_Tipo_4.
 411+ 8D75
 412+ 8D75 CB 7E        4 bit 7,(hl)
 413+ 8D77 28 03        	jr z,6F
 414+ 8D79
 415+ 8D79              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8D79
 417+ 8D79 AF           5 xor a
 418+ 8D7A 3C           	inc a
 419+ 8D7B C9           	ret
 420+ 8D7C
 421+ 8D7C              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8D7C
 423+ 8D7C AF           6 xor a
 424+ 8D7D C9           	ret
 425+ 8D7E
 426+ 8D7E              ;	------------------------------------------------------------------------------------
 427+ 8D7E              ;
 428+ 8D7E              ;	12/01/24
 429+ 8D7E              ;
 430+ 8D7E              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8D7E              ;
 432+ 8D7E              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8D7E              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8D7E
 435+ 8D7E CB 27        Calcula_salto_en_BC sla a
 436+ 8D80 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8D82 4F           	ld c,a
 438+ 8D83 06 00        	ld b,0
 439+ 8D85 C9           	ret
 440+ 8D86
 441+ 8D86              ; ------------------------------------------------------------------
 442+ 8D86              ;
 443+ 8D86              ;	19/1/24
 444+ 8D86              ;
 445+ 8D86              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8D86              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8D86
 448+ 8D86 A7           Situa_en_datos_de_definicion and a
 449+ 8D87 ED 4A        	adc hl,bc
 450+ 8D89 CD 6A 8B     	call Extrae_address
 451+ 8D8C 22 DF 89         ld (Datos_de_entidad),hl
 452+ 8D8F C9           	ret
 453+ 8D90
 454+ 8D90              ; ------------------------------------------------------------------
 455+ 8D90
 456+ 8D90              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8D90              ; 	inc de
 458+ 8D90              ; 	inc de
 459+ 8D90              ; 	ex de,hl
 460+ 8D90              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8D90              ; 	ret
 462+ 8D90
 463+ 8D90              ; ----------------------------------------------------------------------------------------------------------
 464+ 8D90              ;
 465+ 8D90              ;	31/1/24
 466+ 8D90              ;
 467+ 8D90              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8D90              ;	_ de entidad.
 469+ 8D90              ;
 470+ 8D90              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8D90              ;
 472+ 8D90              ;
 473+ 8D90              ;	MODIFICA: HL,DE y BC
 474+ 8D90
 475+ 8D90
 476+ 8D90              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8D90
 478+ 8D90 11 8E 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8D93 01 03 00     	ld bc,3
 480+ 8D96 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8D98              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8D98 11 98 89     	ld de,Attr									; DE en (Attr).
 483+ 8D9B 01 05 00     	ld bc,5
 484+ 8D9E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8DA0              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8DA0 11 A1 89     	ld de,Posicion_inicio
 487+ 8DA3 01 03 00     	ld bc,3
 488+ 8DA6 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8DA8              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8DA8 11 AD 89     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8DAB 01 02 00     	ld bc,2
 492+ 8DAE ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8DB0
 494+ 8DB0 11 B7 89     	ld de,Frames_explosion
 495+ 8DB3 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8DB5 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8DB6
 498+ 8DB6 C9           	ret
 499+ 8DB7
 500+ 8DB7              ; ----------------------------------------------------------------------------------------------------------
 501+ 8DB7              ;
 502+ 8DB7              ;	22/01/24
 503+ 8DB7              ;
 504+ 8DB7              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8DB7              ;
 506+ 8DB7              ;	Las cajas contienen entidades iniciadas:
 507+ 8DB7              ;
 508+ 8DB7              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8DB7              ;
 510+ 8DB7              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8DB7              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8DB7              ;
 513+ 8DB7              ;	MODIFICA: HL,DE y BC
 514+ 8DB7
 515+ 8DB7 21 8E 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8DBA ED 5B D3 89  	ld de,(Puntero_store_caja)
 517+ 8DBE 7E           	ld a,(hl)
 518+ 8DBF 12           	ld (de),a
 519+ 8DC0 13           	inc de 													; (Tipo).
 520+ 8DC1
 521+ 8DC1 21 95 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8DC4 01 02 00     	ld bc,2
 523+ 8DC7 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8DC9              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8DC9 23           	inc hl
 526+ 8DCA 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8DCB 12           	ld (de),a
 528+ 8DCC 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8DCD
 530+ 8DCD 21 A4 89     	ld hl,Impacto
 531+ 8DD0 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8DD1 12           	ld (de),a
 533+ 8DD2 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8DD3              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8DD3 23           	inc hl
 536+ 8DD4 01 06 00     	ld bc,6
 537+ 8DD7 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8DD9              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8DD9 01 07 00     	ld bc,7
 540+ 8DDC ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8DDE              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8DDE              ;															; HL apunta ahora a (Columnas).
 543+ 8DDE 21 B6 89     	ld hl,Ctrl_2
 544+ 8DE1 7E           	ld a,(hl)
 545+ 8DE2 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8DE3 13           	inc de
 547+ 8DE4
 548+ 8DE4 C9           	ret
 549+ 8DE5
 550+ 8DE5              ;---------------------------------------------------------------------------------------------------------------
 551+ 8DE5              ;
 552+ 8DE5              ;	5/1/24
 553+ 8DE5              ;
 554+ 8DE5              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8DE5              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8DE5              ;
 557+ 8DE5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8DE5              ;
 559+ 8DE5              ;	(Numero_parcial_de_entidades)="7".
 560+ 8DE5              ;
 561+ 8DE5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8DE5              ;
 563+ 8DE5              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8DE5              ;
 565+ 8DE5              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8DE5              ;	MODIFICA: A y B.
 567+ 8DE5              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8DE5
 569+ 8DE5              Inicializa_Numero_parcial_de_entidades
 570+ 8DE5
 571+ 8DE5              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8DE5
 573+ 8DE5 3A D9 89     	ld a,(Numero_de_entidades)
 574+ 8DE8 A7           	and a
 575+ 8DE9
 576+ 8DE9              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8DE9              ;	jr z,$
 578+ 8DE9              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8DE9
 580+ 8DE9 20 03        	jr nz,3F
 581+ 8DEB
 582+ 8DEB              ; ---------- ---------- ----------
 583+ 8DEB
 584+ 8DEB              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8DEB              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8DEB
 587+ 8DEB CD 0C 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8DEE
 589+ 8DEE              ; ---------- ---------- ----------
 590+ 8DEE
 591+ 8DEE 3A D9 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8DF1 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8DF3 38 08        	jr c,1F
 594+ 8DF5
 595+ 8DF5              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8DF5              ; Actualizamos variables.
 597+ 8DF5
 598+ 8DF5 3E 07        	ld a,7
 599+ 8DF7 32 DA 89     	ld (Numero_parcial_de_entidades),a
 600+ 8DFA 47           	ld b,a
 601+ 8DFB 18 04        	jr 2F
 602+ 8DFD
 603+ 8DFD              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8DFD              ; (Numero_de_entidades)="0".
 605+ 8DFD
 606+ 8DFD 32 DA 89     1 ld (Numero_parcial_de_entidades),a
 607+ 8E00 47           	ld b,a
 608+ 8E01 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1791  8E02              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8E02              ; ******************************************************************************************************************************************************************************************
   2+ 8E02              ;
   3+ 8E02              ; 26/06/23
   4+ 8E02              ;
   5+ 8E02              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8E02
   7+ 8E02              Draw
   8+ 8E02
   9+ 8E02 CD EC 90     	call Prepara_draw
  10+ 8E05 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8E06 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8E07 28 05        	jr z,2F
  13+ 8E09
  14+ 8E09 3A A3 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8E0C 18 0C        	jr 1F
  16+ 8E0E
  17+ 8E0E 2A A1 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8E11 22 91 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8E14 CD A0 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8E17              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8E17
  22+ 8E17 CD B0 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8E1A
  24+ 8E1A 3A B1 89     1 ld a,(Ctrl_0)
  25+ 8E1D CB 6F        	bit 5,a
  26+ 8E1F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8E21
  28+ 8E21 CD 36 8E     	call Comprueba_limite_horizontal
  29+ 8E24 CD C6 8E     	call Comprueba_limite_vertical
  30+ 8E27
  31+ 8E27              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8E27              ; -----------------------
  33+ 8E27              ; -----------------------
  34+ 8E27              ; -----------------------
  35+ 8E27
  36+ 8E27 CD 1C 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8E2A CD 53 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8E2D              ;	call Define_rutina_de_impresion
  39+ 8E2D
  40+ 8E2D 3A B1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8E30 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8E32 32 B1 89     	ld (Ctrl_0),a
  43+ 8E35
  44+ 8E35 C9           	ret
  45+ 8E36
  46+ 8E36              ; *******************************************************************************************************************************************************************************************
  47+ 8E36              ;	21/01/23
  48+ 8E36              ;
  49+ 8E36              ; 	Comprueba_limite_horizontal.
  50+ 8E36              ;
  51+ 8E36              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8E36              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8E36              ;
  54+ 8E36              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8E36              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8E36              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8E36              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8E36
  59+ 8E36
  60+ 8E36
  61+ 8E36 3A B1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8E39 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8E3B 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8E3D E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8E3F 32 B1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8E42 18 09            jr 6F
  67+ 8E44 CB 5F        1 bit 3,a
  68+ 8E46 28 0A            jr z,2F
  69+ 8E48 E6 F7            and $f7
  70+ 8E4A 32 B1 89         ld (Ctrl_0),a
  71+ 8E4D CD A0 8F     6 call Inicializacion
  72+ 8E50 18 5B            jr 5F
  73+ 8E52 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8E53
  75+ 8E53              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8E53              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8E53
  78+ 8E53 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8E54 2A B3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8E57 CD 71 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8E5A 67           	ld h,a
  82+ 8E5B EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8E5C CD 71 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8E5F 67           	ld h,a
  85+ 8E60 A7           	and a
  86+ 8E61 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8E63 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8E64 3A A3 89     	ld a,(Cuad_objeto)
  89+ 8E67 FE 02        	cp 2
  90+ 8E69 38 1E        	jr c,3F
  91+ 8E6B 28 1C        	jr z,3F
  92+ 8E6D 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8E6E 28 23            jr z,7F
  94+ 8E70 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8E72 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8E74 E1           	pop hl
  97+ 8E75
  98+ 8E75              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8E75              ; _para indicar con E="2" en caso necesario.
 100+ 8E75
 101+ 8E75 E5               push hl
 102+ 8E76 C5               push bc
 103+ 8E77 CD 71 99     	call calcula_tercio
 104+ 8E7A FE 01        	cp 1
 105+ 8E7C 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8E7E CD AE 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8E81 28 26            jr z,9F
 108+ 8E83 38 24            jr c,9F
 109+ 8E85 1E 00        11 ld e,0
 110+ 8E87 18 22            jr 8F
 111+ 8E89 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8E8A 28 07        	jr z, 7F
 113+ 8E8C 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8E8E 1E 00         	ld e,0
 115+ 8E90 E1           	pop hl
 116+ 8E91 18 04        	jr 4F
 117+ 8E93 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8E95 18 15            jr 10F
 119+ 8E97
 120+ 8E97              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8E97              ; _para indicar con E="2" en caso necesario.
 122+ 8E97
 123+ 8E97 E5           4 push hl
 124+ 8E98 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8E99 CD 71 99     	call calcula_tercio
 126+ 8E9C FE 01        	cp 1
 127+ 8E9E 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8EA0 CD AE 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8EA3 28 04            jr z,9F
 130+ 8EA5 30 02            jr nc,9F
 131+ 8EA7 18 02        	jr 8F
 132+ 8EA9 1E 02        9 ld e,2
 133+ 8EAB C1           8 pop bc
 134+ 8EAC E1           10 pop hl
 135+ 8EAD C9           5 ret
 136+ 8EAE
 137+ 8EAE              ; --------------------
 138+ 8EAE              ;
 139+ 8EAE              ; 25/08/22
 140+ 8EAE
 141+ 8EAE CD 71 99     Comprueba_centro call calcula_tercio
 142+ 8EB1 67               ld h,a
 143+ 8EB2 08           	ex af,af
 144+ 8EB3 FE 02        	cp 2
 145+ 8EB5 38 07        	jr c,1F
 146+ 8EB7 28 05        	jr z,1F
 147+ 8EB9 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8EBC 18 03        	jr 2F
 149+ 8EBE 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8EC1 08           2 ex af,af
 151+ 8EC2 A7               and a
 152+ 8EC3 ED 42            sbc hl,bc
 153+ 8EC5 C9               ret
 154+ 8EC6
 155+ 8EC6              ; *********************************************************************************************************************************************************************************************
 156+ 8EC6              ;
 157+ 8EC6              ;   16/8/22
 158+ 8EC6              ;
 159+ 8EC6              ;	Comprueba_limite_vertical
 160+ 8EC6              ;
 161+ 8EC6              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8EC6              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8EC6              ;
 164+ 8EC6
 165+ 8EC6 2A 91 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8EC9 7D           	ld a,l
 167+ 8ECA E6 1F        	and $1F
 168+ 8ECC 57           	ld d,a
 169+ 8ECD 3A B5 89     	ld a,(Limite_vertical)
 170+ 8ED0 BA           	cp d 											; Límite - Posición.
 171+ 8ED1 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8ED2 3A A3 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8ED5 CB 47        	bit 0,a
 174+ 8ED7 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8ED9
 176+ 8ED9              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8ED9
 178+ 8ED9 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8EDA 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8EDC
 181+ 8EDC              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8EDC              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8EDC
 184+ 8EDC 3A 95 89         ld a,(Coordenada_X)
 185+ 8EDF 16 0F            ld d,Centro_izquierda
 186+ 8EE1 A7               and a
 187+ 8EE2 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8EE3 28 1E            jr z,3F
 189+ 8EE5 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8EE7              ;                                                    ; _salimos sin modificar nada.
 191+ 8EE7 18 0E            jr 2F
 192+ 8EE9 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8EEA 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8EEC
 195+ 8EEC              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8EEC              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8EEC
 198+ 8EEC 3A 95 89         ld a,(Coordenada_X)
 199+ 8EEF 16 10            ld d,Centro_derecha
 200+ 8EF1 A7               and a
 201+ 8EF2 92               sub d
 202+ 8EF3 28 0E            jr z,3F
 203+ 8EF5 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8EF7              ;                                                    ; _salimos sin modificar nada.
 205+ 8EF7 CB 43        2 bit 0,e
 206+ 8EF9 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8EFB C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8EFC CD 90 8F         call Modificaccionne
 209+ 8EFF C1           	pop bc
 210+ 8F00 CD A0 8F         call Inicializacion
 211+ 8F03 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8F04
 213+ 8F04              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8F04
 215+ 8F04 C5           4 push bc
 216+ 8F05 01 90 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8F08 0A           	ld a,(bc)
 218+ 8F09 3D           	dec a
 219+ 8F0A 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8F0B 7D           	ld a,l
 221+ 8F0C 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8F0D CB 47        	bit 0,a
 223+ 8F0F 28 03        	jr z,5F
 224+ 8F11 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8F12 18 2E        	jr 7F
 226+ 8F14
 227+ 8F14              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8F14
 229+ 8F14 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8F15 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8F16 3A B1 89     	ld a,(Ctrl_0)
 232+ 8F19 CB 4F        	bit 1,a
 233+ 8F1B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8F1D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8F1E
 236+ 8F1E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8F1E
 238+ 8F1E 1C               inc e
 239+ 8F1F 1D               dec e
 240+ 8F20 20 07            jr nz,12F
 241+ 8F22 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8F23 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8F24 22 91 89     	ld (Posicion_actual),hl
 244+ 8F27 18 44        13 jr 9F
 245+ 8F29 CB 43        12 bit 0,e
 246+ 8F2B 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8F2D              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8F2D C1           	pop bc
 249+ 8F2E 18 D3        	jr 3B
 250+ 8F30 80           14 add b
 251+ 8F31 6F               ld l,a
 252+ 8F32 22 91 89     	ld (Posicion_actual),hl
 253+ 8F35 CD 90 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8F38 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8F3A E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8F3C 32 B1 89         ld (Ctrl_0),a
 257+ 8F3F F1           	pop af
 258+ 8F40 18 2B        	jr 9F
 259+ 8F42
 260+ 8F42              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8F42
 262+ 8F42 F5           7 push af
 263+ 8F43 3A B1 89     	ld a,(Ctrl_0)
 264+ 8F46 CB 47        	bit 0,a
 265+ 8F48 20 1D        	jr nz,8F
 266+ 8F4A F1           	pop af
 267+ 8F4B
 268+ 8F4B              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8F4B
 270+ 8F4B 1C           	inc e
 271+ 8F4C 1D               dec e
 272+ 8F4D 20 07            jr nz,10F
 273+ 8F4F 90           	sub b
 274+ 8F50 6F               ld l,a
 275+ 8F51 22 91 89     	ld (Posicion_actual),hl
 276+ 8F54 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8F56              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8F56 CB 43        10 bit 0,e
 279+ 8F58 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8F5A              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8F5A C1           	pop bc
 282+ 8F5B 18 A6        	jr 3B
 283+ 8F5D 90           16 sub b
 284+ 8F5E 6F               ld l,a
 285+ 8F5F 22 91 89     	ld (Posicion_actual),hl
 286+ 8F62 CD 90 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 8F65 18 06            jr 9F
 288+ 8F67 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 8F69 32 B1 89         ld (Ctrl_0),a
 290+ 8F6C F1           	pop af
 291+ 8F6D C1           9 pop bc
 292+ 8F6E 1E 00        	ld e,0
 293+ 8F70 CD A0 8F         call Inicializacion
 294+ 8F73 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 8F74 08           	ex af,af
 296+ 8F75 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 8F76 18 8B            jr 3B
 298+ 8F78
 299+ 8F78              ; --------------------
 300+ 8F78
 301+ 8F78 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 8F7A CD 07 91     1 call PreviousScan
 303+ 8F7D 10 FB            djnz 1B
 304+ 8F7F 22 91 89     	ld (Posicion_actual),hl
 305+ 8F82 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 8F83 C9           	ret
 307+ 8F84
 308+ 8F84              ; --------------------
 309+ 8F84
 310+ 8F84 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 8F86 CD F8 90     1 call NextScan
 312+ 8F89 10 FB            djnz 1B
 313+ 8F8B 22 91 89     	ld (Posicion_actual),hl
 314+ 8F8E AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 8F8F C9           	ret
 316+ 8F90
 317+ 8F90              ; --------------------
 318+ 8F90              ;
 319+ 8F90              ;	22/01/23
 320+ 8F90              ;
 321+ 8F90              ;	E="1". Hemos cambiado de cuadrante.
 322+ 8F90              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 8F90              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 8F90
 325+ 8F90
 326+ 8F90              Modificaccionne
 327+ 8F90
 328+ 8F90 3A A3 89     	ld a,(Cuad_objeto)
 329+ 8F93 FE 02        	cp 2
 330+ 8F95 CC 78 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 8F98 DC 78 8F         call c,Modifica_Pos_actual
 332+ 8F9B C8           	ret z
 333+ 8F9C CD 84 8F         call Modifica_Pos_actual2
 334+ 8F9F C9               ret
 335+ 8FA0
 336+ 8FA0              ; *************************************************************************************************************************************************************************************************
 337+ 8FA0              ;
 338+ 8FA0              ;	13/8/22
 339+ 8FA0              ;
 340+ 8FA0              ;	Inicializacion
 341+ 8FA0              ;
 342+ 8FA0              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 8FA0              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 8FA0              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 8FA0              ;
 346+ 8FA0              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 8FA0              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 8FA0              ;	_ desaparece/aparece.
 349+ 8FA0
 350+ 8FA0              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 8FA0              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 8FA0              ;
 353+ 8FA0              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 8FA0              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 8FA0              ; 		   [E] ="0"
 356+ 8FA0
 357+ 8FA0              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 8FA0
 359+ 8FA0 CD 71 99     Inicializacion call calcula_tercio
 360+ 8FA3 28 36        	jr z,primit
 361+ 8FA5 E6 02        	and 2
 362+ 8FA7 20 07        	jr nz,segmit
 363+ 8FA9 7D           	ld a,l
 364+ 8FAA FE 7F        	cp $7f
 365+ 8FAC 38 2D        	jr c,primit
 366+ 8FAE 28 2B        	jr z,primit
 367+ 8FB0 CD 16 90     segmit call column
 368+ 8FB3 38 13        	jr c,tercuad
 369+ 8FB5 3E 04        cuarcuad ld a,4
 370+ 8FB7 32 A3 89     	ld (Cuad_objeto),a
 371+ 8FBA 21 20 48     	ld hl,$4820
 372+ 8FBD 22 B3 89     	ld (Limite_horizontal),hl
 373+ 8FC0 21 B5 89     	ld hl,Limite_vertical
 374+ 8FC3 36 0D        	ld (hl),$0d
 375+ 8FC5 08           	ex af,af
 376+ 8FC6 18 3C        	jr 1F
 377+ 8FC8              tercuad
 378+ 8FC8 3E 03        	ld a,3
 379+ 8FCA 32 A3 89     	ld (Cuad_objeto),a
 380+ 8FCD 21 20 48     	ld hl,$4820
 381+ 8FD0 22 B3 89     	ld (Limite_horizontal),hl
 382+ 8FD3 21 B5 89     	ld hl,Limite_vertical
 383+ 8FD6 36 12        	ld (hl),$12
 384+ 8FD8 08           	ex af,af
 385+ 8FD9 18 29        	jr 1F
 386+ 8FDB CD 16 90     primit call column
 387+ 8FDE 38 13        	jr c, primcuad
 388+ 8FE0              segcuad
 389+ 8FE0 3E 02        	ld a,2
 390+ 8FE2 32 A3 89     	ld (Cuad_objeto),a
 391+ 8FE5 21 C0 4F     	ld hl,$4fc0
 392+ 8FE8 22 B3 89     	ld (Limite_horizontal),hl
 393+ 8FEB 21 B5 89     	ld hl,Limite_vertical
 394+ 8FEE 36 0D        	ld (hl),$0d
 395+ 8FF0 08           	ex af,af
 396+ 8FF1 18 11        	jr 1F
 397+ 8FF3              primcuad
 398+ 8FF3 3E 01        	ld a,1
 399+ 8FF5 32 A3 89     	ld (Cuad_objeto),a
 400+ 8FF8 21 C0 4F     	ld hl,$4fc0
 401+ 8FFB 22 B3 89     	ld (Limite_horizontal),hl
 402+ 8FFE 21 B5 89     	ld hl,Limite_vertical
 403+ 9001 36 12        	ld (hl),$12
 404+ 9003 08           	ex af,af
 405+ 9004
 406+ 9004 C5           1 push bc
 407+ 9005 E5           	push hl
 408+ 9006 D5           	push de
 409+ 9007
 410+ 9007 2A 91 89     	ld hl,(Posicion_actual)
 411+ 900A CD 8F 99     	call Genera_coordenadas
 412+ 900D
 413+ 900D D1           	pop de
 414+ 900E E1           	pop hl
 415+ 900F C1           	pop bc
 416+ 9010
 417+ 9010 21 B1 89     	ld hl,Ctrl_0
 418+ 9013 CB EE        	set 5,(hl)
 419+ 9015 C9           	ret
 420+ 9016
 421+ 9016              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9016
 423+ 9016              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9016              ;
 425+ 9016              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9016
 427+ 9016 7D           column ld a,l
 428+ 9017 E6 1F        	and $1f
 429+ 9019 FE 10         	cp $10
 430+ 901B C9            	ret
 431+ 901C
 432+ 901C              ; --------------------------------------------------------------------------------------------------------------------
 433+ 901C              ;
 434+ 901C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 901C              ;
 436+ 901C              ; 14/12/22
 437+ 901C              ;
 438+ 901C              ;	Modifica: A y BC.
 439+ 901C
 440+ 901C 3A A3 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 901F E6 01        	and 1
 442+ 9021 28 17        	jr z,1F
 443+ 9023
 444+ 9023              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9023
 446+ 9023 3A 95 89     	ld a,(Coordenada_X)
 447+ 9026 47           	ld b,a
 448+ 9027 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9028 79           	ld a,c
 450+ 9029 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 902A 38 08        	jr c,2F
 452+ 902C 47           	ld b,a
 453+ 902D 79           	ld a,c
 454+ 902E 90           	sub b
 455+ 902F 32 B2 89     	ld (Columnas),a
 456+ 9032 18 1B        	jr 4F
 457+ 9034 79           2 ld a,c
 458+ 9035 32 B2 89     	ld (Columnas),a
 459+ 9038 18 15        	jr 4F
 460+ 903A
 461+ 903A              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 903A
 463+ 903A 3A 95 89     1 ld a,(Coordenada_X)
 464+ 903D 81           	add c
 465+ 903E 3D           	dec a
 466+ 903F D6 1F        	sub $1f
 467+ 9041 38 08        	jr c,3F
 468+ 9043 47           	ld b,a
 469+ 9044 79           	ld a,c
 470+ 9045 90           	sub b
 471+ 9046 32 B2 89     	ld (Columnas),a
 472+ 9049 18 04        	jr 4F
 473+ 904B 79           3 ld a,c
 474+ 904C 32 B2 89     	ld (Columnas),a
 475+ 904F D9           4 exx
 476+ 9050 4F           	ld c,a
 477+ 9051 D9           	exx
 478+ 9052 C9            ret
 479+ 9053
 480+ 9053              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9053              ;
 482+ 9053              ;   19/7/23
 483+ 9053              ;
 484+ 9053              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9053              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9053              ;
 487+ 9053              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9053              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9053              ;
 490+ 9053              ;	DESTRUYE: HL,B Y A.
 491+ 9053
 492+ 9053 3A A3 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9056 FE 02        	cp 2
 494+ 9058 38 18        	jr c,1F
 495+ 905A 28 16        	jr z,1F
 496+ 905C E6 01        	and 1
 497+ 905E 28 0D        	jr z,3F
 498+ 9060
 499+ 9060              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9060
 501+ 9060 CD A6 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9063
 503+ 9063 7D           9 ld a,l
 504+ 9064 E6 1F        	and $1f
 505+ 9066 28 2A        	jr z,7F
 506+ 9068 2B           	dec hl
 507+ 9069 10 F8        	djnz 9B
 508+ 906B 18 25        	jr 7F
 509+ 906D
 510+ 906D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 906D
 512+ 906D 2A 91 89     3 ld hl,(Posicion_actual)
 513+ 9070 18 20        	jr 7F
 514+ 9072
 515+ 9072 28 14        1 jr z,2F
 516+ 9074
 517+ 9074              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9074
 519+ 9074 CD A6 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9077
 521+ 9077 7D           4 ld a,l
 522+ 9078 E6 1F        	and $1f
 523+ 907A 28 03        	jr z,6F
 524+ 907C 2B           	dec hl
 525+ 907D 10 F8        	djnz 4B
 526+ 907F 06 0F        6 ld b,15
 527+ 9081 CD 07 91     5 call PreviousScan
 528+ 9084 10 FB        	djnz 5B
 529+ 9086 18 0A        	jr 7F
 530+ 9088
 531+ 9088              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9088
 533+ 9088 CD A6 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 908B 06 0F        	ld b,15
 535+ 908D CD 07 91     8 call PreviousScan
 536+ 9090 10 FB        	djnz 8B
 537+ 9092
 538+ 9092 E5           7 push hl
 539+ 9093 DD E1        	pop ix
 540+ 9095
 541+ 9095 2A 93 89     	ld hl,(Puntero_objeto)
 542+ 9098 E5           	push hl
 543+ 9099 FD E1        	pop iy
 544+ 909B
 545+ 909B              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 909B
 547+ 909B 3A B1 89     	ld a,(Ctrl_0)
 548+ 909E CB 77        	bit 6,a
 549+ 90A0 C8           	ret z
 550+ 90A1
 551+ 90A1              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 90A1              ; _ entidad / Amadeus´.
 553+ 90A1
 554+ 90A1 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 90A5
 556+ 90A5 C9           	ret
 557+ 90A6
 558+ 90A6              ; --------------------------------------------------------------------------------------------------------------------
 559+ 90A6              ;
 560+ 90A6              ;	2/1/23
 561+ 90A6              ;
 562+ 90A6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 90A6              ;
 564+ 90A6              ;	Tras esta rutina tenemos:
 565+ 90A6              ;
 566+ 90A6              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 90A6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 90A6              ;
 569+ 90A6              ;	DESTRUYE!!!!! HL,B y A.
 570+ 90A6
 571+ 90A6 2A 91 89     Operandos ld hl,(Posicion_actual)
 572+ 90A9 3A B2 89     	ld a,(Columnas)
 573+ 90AC 3D           	dec a
 574+ 90AD 20 01        	jr nz,1F
 575+ 90AF 3C           	inc a
 576+ 90B0 47           1 ld b,a
 577+ 90B1 C9           	ret
 578+ 90B2
 579+ 90B2              ; --------------------------------------------------------------------------------------------------------------------
 580+ 90B2              ;
 581+ 90B2              ;	3/1/23
 582+ 90B2              ;
 583+ 90B2              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 90B2              ;
 585+ 90B2              ;	Destruye: A,B,HL y DE.
 586+ 90B2
 587+ 90B2              Define_rutina_de_impresion
 588+ 90B2
 589+ 90B2 3A 90 89     	ld a,(Columns)
 590+ 90B5 47           	ld b,a
 591+ 90B6 3A B2 89     	ld a,(Columnas)
 592+ 90B9 B8           	cp b
 593+ 90BA 20 0D        	jr nz,2f
 594+ 90BC
 595+ 90BC              ;	La entidad se imprime entera.
 596+ 90BC
 597+ 90BC 21 59 91     	ld hl, Indice_entidades_completas
 598+ 90BF E6 01        	and 1
 599+ 90C1 28 02        	jr z,1F
 600+ 90C3
 601+ 90C3 23           	inc hl
 602+ 90C4 23           	inc hl
 603+ 90C5
 604+ 90C5 CD 6A 8B     1 call Extrae_address
 605+ 90C8 C9           	ret		;	ret
 606+ 90C9
 607+ 90C9              ;	La entidad no se imprime entera en pantalla.
 608+ 90C9
 609+ 90C9 3A A3 89     2 ld a,(Cuad_objeto)
 610+ 90CC E6 01        	and 1
 611+ 90CE 28 17        	jr z,3F
 612+ 90D0
 613+ 90D0              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 90D0
 615+ 90D0 21 5D 91     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 90D3 3A 90 89     4 ld a,(Columns)
 617+ 90D6 E6 01        	and 1
 618+ 90D8 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 90DA
 620+ 90DA 23           	inc hl
 621+ 90DB 23           	inc hl
 622+ 90DC
 623+ 90DC 3A B2 89     	ld a,(Columnas)
 624+ 90DF E6 01        	and 1
 625+ 90E1 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 90E3
 627+ 90E3 23           	inc hl
 628+ 90E4 23           	inc hl
 629+ 90E5
 630+ 90E5 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 90E7
 632+ 90E7 21 63 91     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 90EA 18 E7        	jr 4B
 634+ 90EC
 635+ 90EC              ; --------------------------------------------------------------------------------------------------------------------
 636+ 90EC              ;
 637+ 90EC              ;	Prepara_draw
 638+ 90EC              ;
 639+ 90EC              ;	Es una rutina de carga.
 640+ 90EC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 90EC              ;
 642+ 90EC              ;	FUNCIONAMIENTO:
 643+ 90EC              ;
 644+ 90EC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 90EC              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 90EC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 90EC              ;
 648+ 90EC              ;	DESTRUYE:
 649+ 90EC              ;
 650+ 90EC              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 90EC
 652+ 90EC 21 8F 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 90EF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 90F0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 90F1 4E           	ld c,(hl)
 656+ 90F2 2A 91 89     	ld hl,(Posicion_actual)
 657+ 90F5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 90F7 C9           	ret
 659+ 90F8
 660+ 90F8              ;----------------------------------------------------------------------------------------------------------------
 661+ 90F8              ;
 662+ 90F8              ;	5/08/22
 663+ 90F8              ;
 664+ 90F8              ;   NextScan.
 665+ 90F8              ;
 666+ 90F8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 90F8              ;
 668+ 90F8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 90F8              ;
 670+ 90F8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 90F8              ;
 672+ 90F8              ;       DESTRUIDOS: AF y HL !!!
 673+ 90F8              ;
 674+ 90F8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 90F8              ;
 676+ 90F8
 677+ 90F8 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 90F9 7C               ld a,h
 679+ 90FA E6 07            and 7
 680+ 90FC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 90FD
 682+ 90FD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 90FE C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9100 6F               ld l,a
 685+ 9101 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9102
 687+ 9102 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9103 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9105 67               ld h,a
 690+ 9106 C9               ret
 691+ 9107
 692+ 9107              ;----------------------------------------------------------------------------------------------------------------
 693+ 9107              ;
 694+ 9107              ;	5/08/22
 695+ 9107              ;
 696+ 9107              ;   PreviousScan.
 697+ 9107              ;
 698+ 9107              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9107              ;
 700+ 9107              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9107              ;
 702+ 9107              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9107              ;
 704+ 9107              ;       DESTRUIDOS: AF y HL !!!
 705+ 9107              ;
 706+ 9107              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9107              ;
 708+ 9107
 709+ 9107 7C           PreviousScan ld a,h
 710+ 9108 25               dec h               ; Dec H.
 711+ 9109 E6 07            and 7
 712+ 910B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 910C
 714+ 910C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 910D D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 910F 6F               ld l,a
 717+ 9110 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9111
 719+ 9111 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9112 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9114 67               ld h,a
 722+ 9115 C9               ret
 723+ 9116
 724+ 9116              ; -----------------------------------------------------------------------------------
 725+ 9116              ;
 726+ 9116              ;	31/7/23
 727+ 9116              ;
 728+ 9116              ;	Rutina principal de pintado de entidades.
 729+ 9116              ;	Extrae la foto del frame, (entidades).
 730+ 9116
 731+ 9116              Extrae_Scanlines_album
 732+ 9116
 733+ 9116 21 01 80     	ld hl,Scanlines_album+1
 734+ 9119 7E           	ld a,(hl)
 735+ 911A A7           	and a
 736+ 911B C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 911C
 738+ 911C              ;	No hay datos, (entidades para pintar en este frame).
 739+ 911C
 740+ 911C 3A DC 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 911F A7           	and a
 742+ 9120 C8           	ret z
 743+ 9121
 744+ 9121              ; -----------------------------------
 745+ 9121
 746+ 9121 ED 73 E1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 9125 31 00 80     	ld sp,Scanlines_album
 748+ 9128
 749+ 9128 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 912A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 912B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 912C
 753+ 912C ED 73 E3 89  	ld (Stack_2),sp
 754+ 9130 ED 7B E1 89  	ld sp,(Stack)
 755+ 9134
 756+ 9134              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9134
 758+ 9134 3E CD        	ld a,$cd
 759+ 9136 32 3E 91     	ld (Imprime),a
 760+ 9139 EB           	ex de,hl
 761+ 913A 22 3F 91     	ld (Imprime+1),hl
 762+ 913D EB           	ex de,hl
 763+ 913E
 764+ 913E              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 913E
 766+ 913E 00 00 00     Imprime db 0,0,0
 767+ 9141
 768+ 9141 ED 73 E1 89  	ld (Stack),sp
 769+ 9145
 770+ 9145 3A DC 89     	ld a,(Numero_de_malotes)
 771+ 9148 3D           	dec a
 772+ 9149 28 09        	jr z,1F
 773+ 914B 32 DC 89      	ld (Numero_de_malotes),a
 774+ 914E
 775+ 914E ED 7B E3 89  	ld sp,(Stack_2)
 776+ 9152 18 D4        	jr 2B
 777+ 9154
 778+ 9154 AF           1 xor a
 779+ 9155 32 E3 89     	ld (Stack_2),a
 780+ 9158
 781+ 9158 C9           	ret
 782+ 9159
 783+ 9159              ; -----------------------------------------------------------------------------------
 784+ 9159              ;
 785+ 9159              ;	28/2/23
 786+ 9159              ;
 787+ 9159              ;	Pinta los disparos generados.
 788+ 9159
 789+ 9159              ;Extrae_foto_disparos
 790+ 9159
 791+ 9159              ;	ld hl,Scanlines_album_disparos+1
 792+ 9159              ;    ld a,(hl)
 793+ 9159              ;    and a
 794+ 9159              ;    ret z
 795+ 9159
 796+ 9159              ;	ld a,(Numero_de_disparotes)
 797+ 9159              ;	and a
 798+ 9159              ;	ret z
 799+ 9159              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 9159              ;	ld sp,Scanlines_album_disparos
 801+ 9159
 802+ 9159              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9159              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9159              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9159
 806+ 9159              ;	ld (Stack_2),sp
 807+ 9159              ;	ld sp,(Stack)
 808+ 9159
 809+ 9159              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9159
 811+ 9159              ;	ld a,$cd
 812+ 9159              ;	ld (Imprime2),a
 813+ 9159              ;	ex de,hl
 814+ 9159              ;	ld (Imprime2+1),hl
 815+ 9159              ;	ex de,hl
 816+ 9159
 817+ 9159              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9159
 819+ 9159              ;Imprime2 db 0,0,0
 820+ 9159
 821+ 9159              ;	ld a,(Numero_de_disparotes)
 822+ 9159              ;	dec a
 823+ 9159              ;	jr z,1F
 824+ 9159              ; 	ld (Numero_de_disparotes),a
 825+ 9159
 826+ 9159              ;	ld sp,(Stack_2)
 827+ 9159              ;	jr 2B
 828+ 9159
 829+ 9159              ;1 xor a
 830+ 9159              ;	ld (Stack_2),a
 831+ 9159              ;	ret
 832+ 9159
 833+ 9159              ; -----------------------------------------------------------------------------------
 834+ 9159              ;
 835+ 9159              ;	4/9/23
 836+ 9159              ;
 837+ 9159              ;	Rutina principal de pintado de Amadeus.
 838+ 9159              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 9159
 840+ 9159              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 9159              ;	ld a,(hl)
 842+ 9159              ;	and a
 843+ 9159              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9159
 845+ 9159              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9159              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9159              ;	ret z
 848+ 9159
 849+ 9159              ; -----------------------------------
 850+ 9159
 851+ 9159              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 9159              ;	ld sp,Scanlines_album_Amadeus
 853+ 9159
 854+ 9159              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9159              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9159              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9159
 858+ 9159              ;	ld (Stack_2),sp
 859+ 9159              ;	ld sp,(Stack)
 860+ 9159
 861+ 9159              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9159
 863+ 9159              ;	ld a,$cd
 864+ 9159              ;	ld (Imprime_Amadeus),a
 865+ 9159              ;	ex de,hl
 866+ 9159              ;	ld (Imprime_Amadeus+1),hl
 867+ 9159              ;	ex de,hl
 868+ 9159
 869+ 9159              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9159
 871+ 9159              ;Imprime_Amadeus db 0,0,0
 872+ 9159
 873+ 9159              ;	ld (Stack),sp
 874+ 9159
 875+ 9159              ;	ld a,(Numero_de_malotes)
 876+ 9159              ;	dec a
 877+ 9159              ;	jr z,1F
 878+ 9159              ; 	ld (Numero_de_malotes),a
 879+ 9159
 880+ 9159              ;	ld sp,(Stack_2)
 881+ 9159              ;	jr 2B
 882+ 9159
 883+ 9159              ;1 xor a
 884+ 9159              ;	ld (Stack_2),a
 885+ 9159
 886+ 9159              ;	ret
 887+ 9159
 888+ 9159
 889+ 9159
 890+ 9159
 891+ 9159
 892+ 9159
# file closed: Draw_XOR.asm
1792  9159              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9159              ;   índices de Rutinas de impresión.
   2+ 9159
   3+ 9159 69 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 915B FD 91            defw Pinta_Amadeus_3x2
   5+ 915D
   6+ 915D D1 92        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 915F 71 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9161 25 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9163
  10+ 9163 FB 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9165 FF 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9167 B3 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9169
  14+ 9169
  15+ 9169              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9169              ;
  17+ 9169              ;   28/2/24
  18+ 9169              ;
  19+ 9169              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 9169              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9169              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 9169              ;
  23+ 9169              ;   Modifica: AF,HL,BC y DE.
  24+ 9169
  25+ 9169              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 9169
  27+ 9169 D9               exx
  28+ 916A 36 01            ld (hl),1
  29+ 916C 2C               inc l
  30+ 916D D9               exx
  31+ 916E
  32+ 916E FD E5            push iy
  33+ 9170 D1               pop de
  34+ 9171
  35+ 9171 ED 73 E1 89      ld (Stack),sp
  36+ 9175 F9           	ld sp,hl
  37+ 9176 06 10            ld b,16
  38+ 9178
  39+ 9178 E1               pop hl
  40+ 9179 1A               ld a,(de)
  41+ 917A 77               ld (hl),a
  42+ 917B 1C           	inc e
  43+ 917C 2C               inc l
  44+ 917D 1A               ld a,(de)
  45+ 917E 77               ld (hl),a
  46+ 917F 1C               inc e
  47+ 9180
  48+ 9180 E1               pop hl
  49+ 9181 1A               ld a,(de)
  50+ 9182 77               ld (hl),a
  51+ 9183 1C           	inc e
  52+ 9184 2C               inc l
  53+ 9185 1A               ld a,(de)
  54+ 9186 77               ld (hl),a
  55+ 9187 1C               inc e
  56+ 9188
  57+ 9188 E1               pop hl
  58+ 9189 1A               ld a,(de)
  59+ 918A 77               ld (hl),a
  60+ 918B 1C           	inc e
  61+ 918C 2C               inc l
  62+ 918D 1A               ld a,(de)
  63+ 918E 77               ld (hl),a
  64+ 918F 1C               inc e
  65+ 9190
  66+ 9190 E1               pop hl
  67+ 9191 1A               ld a,(de)
  68+ 9192 77               ld (hl),a
  69+ 9193 1C           	inc e
  70+ 9194 2C               inc l
  71+ 9195 1A               ld a,(de)
  72+ 9196 77               ld (hl),a
  73+ 9197 1C               inc e
  74+ 9198
  75+ 9198 E1               pop hl
  76+ 9199 1A               ld a,(de)
  77+ 919A 77               ld (hl),a
  78+ 919B 1C           	inc e
  79+ 919C 2C               inc l
  80+ 919D 1A               ld a,(de)
  81+ 919E 77               ld (hl),a
  82+ 919F 1C               inc e
  83+ 91A0
  84+ 91A0 E1               pop hl
  85+ 91A1 1A               ld a,(de)
  86+ 91A2 77               ld (hl),a
  87+ 91A3 1C           	inc e
  88+ 91A4 2C               inc l
  89+ 91A5 1A               ld a,(de)
  90+ 91A6 77               ld (hl),a
  91+ 91A7 1C               inc e
  92+ 91A8
  93+ 91A8 E1               pop hl
  94+ 91A9 1A               ld a,(de)
  95+ 91AA 77               ld (hl),a
  96+ 91AB 1C           	inc e
  97+ 91AC 2C               inc l
  98+ 91AD 1A               ld a,(de)
  99+ 91AE 77               ld (hl),a
 100+ 91AF 1C               inc e
 101+ 91B0
 102+ 91B0 E1               pop hl
 103+ 91B1 1A               ld a,(de)
 104+ 91B2 77               ld (hl),a
 105+ 91B3 1C           	inc e
 106+ 91B4 2C               inc l
 107+ 91B5 1A               ld a,(de)
 108+ 91B6 77               ld (hl),a
 109+ 91B7 1C               inc e
 110+ 91B8
 111+ 91B8 E1               pop hl
 112+ 91B9 1A               ld a,(de)
 113+ 91BA 77               ld (hl),a
 114+ 91BB 1C           	inc e
 115+ 91BC 2C               inc l
 116+ 91BD 1A               ld a,(de)
 117+ 91BE 77               ld (hl),a
 118+ 91BF 1C               inc e
 119+ 91C0
 120+ 91C0 E1               pop hl
 121+ 91C1 1A               ld a,(de)
 122+ 91C2 77               ld (hl),a
 123+ 91C3 1C           	inc e
 124+ 91C4 2C               inc l
 125+ 91C5 1A               ld a,(de)
 126+ 91C6 77               ld (hl),a
 127+ 91C7 1C               inc e
 128+ 91C8
 129+ 91C8 E1               pop hl
 130+ 91C9 1A               ld a,(de)
 131+ 91CA 77               ld (hl),a
 132+ 91CB 1C           	inc e
 133+ 91CC 2C               inc l
 134+ 91CD 1A               ld a,(de)
 135+ 91CE 77               ld (hl),a
 136+ 91CF 1C               inc e
 137+ 91D0
 138+ 91D0 E1               pop hl
 139+ 91D1 1A               ld a,(de)
 140+ 91D2 77               ld (hl),a
 141+ 91D3 1C           	inc e
 142+ 91D4 2C               inc l
 143+ 91D5 1A               ld a,(de)
 144+ 91D6 77               ld (hl),a
 145+ 91D7 1C               inc e
 146+ 91D8
 147+ 91D8 E1               pop hl
 148+ 91D9 1A               ld a,(de)
 149+ 91DA 77               ld (hl),a
 150+ 91DB 1C           	inc e
 151+ 91DC 2C               inc l
 152+ 91DD 1A               ld a,(de)
 153+ 91DE 77               ld (hl),a
 154+ 91DF 1C               inc e
 155+ 91E0
 156+ 91E0 E1               pop hl
 157+ 91E1 1A               ld a,(de)
 158+ 91E2 77               ld (hl),a
 159+ 91E3 1C           	inc e
 160+ 91E4 2C               inc l
 161+ 91E5 1A               ld a,(de)
 162+ 91E6 77               ld (hl),a
 163+ 91E7 1C               inc e
 164+ 91E8
 165+ 91E8 E1               pop hl
 166+ 91E9 1A               ld a,(de)
 167+ 91EA 77               ld (hl),a
 168+ 91EB 1C           	inc e
 169+ 91EC 2C               inc l
 170+ 91ED 1A               ld a,(de)
 171+ 91EE 77               ld (hl),a
 172+ 91EF 1C               inc e
 173+ 91F0
 174+ 91F0 E1               pop hl
 175+ 91F1 1A               ld a,(de)
 176+ 91F2 77               ld (hl),a
 177+ 91F3 1C           	inc e
 178+ 91F4 2C               inc l
 179+ 91F5 1A               ld a,(de)
 180+ 91F6 77               ld (hl),a
 181+ 91F7 1C               inc e
 182+ 91F8
 183+ 91F8 ED 7B E1 89      ld sp,(Stack)
 184+ 91FC
 185+ 91FC C9           	ret
 186+ 91FD
 187+ 91FD              Pinta_Amadeus_3x2
 188+ 91FD
 189+ 91FD D9               exx
 190+ 91FE 36 02            ld (hl),2
 191+ 9200 2C               inc l
 192+ 9201 D9               exx
 193+ 9202
 194+ 9202 FD E5            push iy
 195+ 9204 D1               pop de
 196+ 9205
 197+ 9205 ED 73 E1 89      ld (Stack),sp
 198+ 9209 F9               ld sp,hl
 199+ 920A 06 10            ld b,16
 200+ 920C
 201+ 920C E1               pop hl
 202+ 920D 1A               ld a,(de)
 203+ 920E 77               ld (hl),a
 204+ 920F 1C               inc e
 205+ 9210 2C               inc l
 206+ 9211 1A               ld a,(de)
 207+ 9212 77               ld (hl),a
 208+ 9213 1C               inc e
 209+ 9214 2C               inc l
 210+ 9215 1A               ld a,(de)
 211+ 9216 77               ld (hl),a
 212+ 9217 1C               inc e
 213+ 9218
 214+ 9218 E1               pop hl
 215+ 9219 1A               ld a,(de)
 216+ 921A 77               ld (hl),a
 217+ 921B 1C               inc e
 218+ 921C 2C               inc l
 219+ 921D 1A               ld a,(de)
 220+ 921E 77               ld (hl),a
 221+ 921F 1C               inc e
 222+ 9220 2C               inc l
 223+ 9221 1A               ld a,(de)
 224+ 9222 77               ld (hl),a
 225+ 9223 1C               inc e
 226+ 9224
 227+ 9224 E1               pop hl
 228+ 9225 1A               ld a,(de)
 229+ 9226 77               ld (hl),a
 230+ 9227 1C               inc e
 231+ 9228 2C               inc l
 232+ 9229 1A               ld a,(de)
 233+ 922A 77               ld (hl),a
 234+ 922B 1C               inc e
 235+ 922C 2C               inc l
 236+ 922D 1A               ld a,(de)
 237+ 922E 77               ld (hl),a
 238+ 922F 1C               inc e
 239+ 9230
 240+ 9230 E1               pop hl
 241+ 9231 1A               ld a,(de)
 242+ 9232 77               ld (hl),a
 243+ 9233 1C               inc e
 244+ 9234 2C               inc l
 245+ 9235 1A               ld a,(de)
 246+ 9236 77               ld (hl),a
 247+ 9237 1C               inc e
 248+ 9238 2C               inc l
 249+ 9239 1A               ld a,(de)
 250+ 923A 77               ld (hl),a
 251+ 923B 1C               inc e
 252+ 923C
 253+ 923C E1               pop hl
 254+ 923D 1A               ld a,(de)
 255+ 923E 77               ld (hl),a
 256+ 923F 1C               inc e
 257+ 9240 2C               inc l
 258+ 9241 1A               ld a,(de)
 259+ 9242 77               ld (hl),a
 260+ 9243 1C               inc e
 261+ 9244 2C               inc l
 262+ 9245 1A               ld a,(de)
 263+ 9246 77               ld (hl),a
 264+ 9247 1C               inc e
 265+ 9248
 266+ 9248 E1               pop hl
 267+ 9249 1A               ld a,(de)
 268+ 924A 77               ld (hl),a
 269+ 924B 1C               inc e
 270+ 924C 2C               inc l
 271+ 924D 1A               ld a,(de)
 272+ 924E 77               ld (hl),a
 273+ 924F 1C               inc e
 274+ 9250 2C               inc l
 275+ 9251 1A               ld a,(de)
 276+ 9252 77               ld (hl),a
 277+ 9253 1C               inc e
 278+ 9254
 279+ 9254 E1               pop hl
 280+ 9255 1A               ld a,(de)
 281+ 9256 77               ld (hl),a
 282+ 9257 1C               inc e
 283+ 9258 2C               inc l
 284+ 9259 1A               ld a,(de)
 285+ 925A 77               ld (hl),a
 286+ 925B 1C               inc e
 287+ 925C 2C               inc l
 288+ 925D 1A               ld a,(de)
 289+ 925E 77               ld (hl),a
 290+ 925F 1C               inc e
 291+ 9260
 292+ 9260 E1               pop hl
 293+ 9261 1A               ld a,(de)
 294+ 9262 77               ld (hl),a
 295+ 9263 1C               inc e
 296+ 9264 2C               inc l
 297+ 9265 1A               ld a,(de)
 298+ 9266 77               ld (hl),a
 299+ 9267 1C               inc e
 300+ 9268 2C               inc l
 301+ 9269 1A               ld a,(de)
 302+ 926A 77               ld (hl),a
 303+ 926B 1C               inc e
 304+ 926C
 305+ 926C E1               pop hl
 306+ 926D 1A               ld a,(de)
 307+ 926E 77               ld (hl),a
 308+ 926F 1C               inc e
 309+ 9270 2C               inc l
 310+ 9271 1A               ld a,(de)
 311+ 9272 77               ld (hl),a
 312+ 9273 1C               inc e
 313+ 9274 2C               inc l
 314+ 9275 1A               ld a,(de)
 315+ 9276 77               ld (hl),a
 316+ 9277 1C               inc e
 317+ 9278
 318+ 9278 E1               pop hl
 319+ 9279 1A               ld a,(de)
 320+ 927A 77               ld (hl),a
 321+ 927B 1C               inc e
 322+ 927C 2C               inc l
 323+ 927D 1A               ld a,(de)
 324+ 927E 77               ld (hl),a
 325+ 927F 1C               inc e
 326+ 9280 2C               inc l
 327+ 9281 1A               ld a,(de)
 328+ 9282 77               ld (hl),a
 329+ 9283 1C               inc e
 330+ 9284
 331+ 9284 E1               pop hl
 332+ 9285 1A               ld a,(de)
 333+ 9286 77               ld (hl),a
 334+ 9287 1C               inc e
 335+ 9288 2C               inc l
 336+ 9289 1A               ld a,(de)
 337+ 928A 77               ld (hl),a
 338+ 928B 1C               inc e
 339+ 928C 2C               inc l
 340+ 928D 1A               ld a,(de)
 341+ 928E 77               ld (hl),a
 342+ 928F 1C               inc e
 343+ 9290
 344+ 9290 E1               pop hl
 345+ 9291 1A               ld a,(de)
 346+ 9292 77               ld (hl),a
 347+ 9293 1C               inc e
 348+ 9294 2C               inc l
 349+ 9295 1A               ld a,(de)
 350+ 9296 77               ld (hl),a
 351+ 9297 1C               inc e
 352+ 9298 2C               inc l
 353+ 9299 1A               ld a,(de)
 354+ 929A 77               ld (hl),a
 355+ 929B 1C               inc e
 356+ 929C
 357+ 929C E1               pop hl
 358+ 929D 1A               ld a,(de)
 359+ 929E 77               ld (hl),a
 360+ 929F 1C               inc e
 361+ 92A0 2C               inc l
 362+ 92A1 1A               ld a,(de)
 363+ 92A2 77               ld (hl),a
 364+ 92A3 1C               inc e
 365+ 92A4 2C               inc l
 366+ 92A5 1A               ld a,(de)
 367+ 92A6 77               ld (hl),a
 368+ 92A7 1C               inc e
 369+ 92A8
 370+ 92A8 E1               pop hl
 371+ 92A9 1A               ld a,(de)
 372+ 92AA 77               ld (hl),a
 373+ 92AB 1C               inc e
 374+ 92AC 2C               inc l
 375+ 92AD 1A               ld a,(de)
 376+ 92AE 77               ld (hl),a
 377+ 92AF 1C               inc e
 378+ 92B0 2C               inc l
 379+ 92B1 1A               ld a,(de)
 380+ 92B2 77               ld (hl),a
 381+ 92B3 1C               inc e
 382+ 92B4
 383+ 92B4 E1               pop hl
 384+ 92B5 1A               ld a,(de)
 385+ 92B6 77               ld (hl),a
 386+ 92B7 1C               inc e
 387+ 92B8 2C               inc l
 388+ 92B9 1A               ld a,(de)
 389+ 92BA 77               ld (hl),a
 390+ 92BB 1C               inc e
 391+ 92BC 2C               inc l
 392+ 92BD 1A               ld a,(de)
 393+ 92BE 77               ld (hl),a
 394+ 92BF 1C               inc e
 395+ 92C0
 396+ 92C0 E1               pop hl
 397+ 92C1 1A               ld a,(de)
 398+ 92C2 77               ld (hl),a
 399+ 92C3 1C               inc e
 400+ 92C4 2C               inc l
 401+ 92C5 1A               ld a,(de)
 402+ 92C6 77               ld (hl),a
 403+ 92C7 1C               inc e
 404+ 92C8 2C               inc l
 405+ 92C9 1A               ld a,(de)
 406+ 92CA 77               ld (hl),a
 407+ 92CB 1C               inc e
 408+ 92CC
 409+ 92CC ED 7B E1 89      ld sp,(Stack)
 410+ 92D0
 411+ 92D0 C9               ret
 412+ 92D1
 413+ 92D1              ; ---------------------------------------------------
 414+ 92D1
 415+ 92D1 ED 73 E1 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 92D5 FD F9        	ld sp,iy
 417+ 92D7
 418+ 92D7              ; >>>
 419+ 92D7
 420+ 92D7 06 10            ld b,16
 421+ 92D9 D1           1 pop de
 422+ 92DA 7A           	ld a,d
 423+ 92DB AE           	xor (hl)
 424+ 92DC 77           	ld (hl),a
 425+ 92DD 24           	inc h
 426+ 92DE 7C               ld a,h
 427+ 92DF E6 07            and 7
 428+ 92E1 20 0C            jr nz,2F
 429+ 92E3 7D               ld a,l
 430+ 92E4 C6 20            add a,$20
 431+ 92E6 6F               ld l,a
 432+ 92E7 38 06            jr c,2F
 433+ 92E9 7C               ld a,h
 434+ 92EA D6 08            sub 8
 435+ 92EC 67               ld h,a
 436+ 92ED 18 00            jr 2F
 437+ 92EF 7C           2 ld a,h
 438+ 92F0 FE 58            cp $58
 439+ 92F2 28 02            jr z,3F
 440+ 92F4 10 E3            djnz 1B
 441+ 92F6 ED 7B E1 89  3 ld sp,(Stack)
 442+ 92FA C9           	ret
 443+ 92FB
 444+ 92FB ED 73 E1 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 92FF FD F9        	ld sp,iy
 446+ 9301
 447+ 9301              ; >>>
 448+ 9301
 449+ 9301 06 10            ld b,16
 450+ 9303 D1           1 pop de
 451+ 9304 7B           	ld a,e
 452+ 9305 AE           	xor (hl)
 453+ 9306 77           	ld (hl),a
 454+ 9307 24           	inc h
 455+ 9308 7C               ld a,h
 456+ 9309 E6 07            and 7
 457+ 930B 20 0C            jr nz,2F
 458+ 930D 7D               ld a,l
 459+ 930E C6 20            add a,$20
 460+ 9310 6F               ld l,a
 461+ 9311 38 06            jr c,2F
 462+ 9313 7C               ld a,h
 463+ 9314 D6 08            sub 8
 464+ 9316 67               ld h,a
 465+ 9317 18 00            jr 2F
 466+ 9319 7C           2 ld a,h
 467+ 931A FE 58            cp $58
 468+ 931C 28 02            jr z,3F
 469+ 931E 10 E3            djnz 1B
 470+ 9320 ED 7B E1 89  3 ld sp,(Stack)
 471+ 9324 C9           	ret
 472+ 9325
 473+ 9325              ; ---------------------------------------------------
 474+ 9325
 475+ 9325 ED 73 E1 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 9329 FD F9        	ld sp,iy
 477+ 932B 06 08            ld b,8
 478+ 932D D1           1 pop de
 479+ 932E 7A           	ld a,d
 480+ 932F AE           	xor (hl)
 481+ 9330 77           	ld (hl),a
 482+ 9331 23           	inc hl
 483+ 9332 D1           	pop de
 484+ 9333 7B           	ld a,e
 485+ 9334 AE           	xor (hl)
 486+ 9335 77           	ld (hl),a
 487+ 9336 2B           	dec hl
 488+ 9337 24            	inc h
 489+ 9338 7C               ld a,h
 490+ 9339 E6 07            and 7
 491+ 933B 20 0A            jr nz,2F
 492+ 933D 7D               ld a,l
 493+ 933E C6 20            add a,$20
 494+ 9340 6F               ld l,a
 495+ 9341 38 04            jr c,2F
 496+ 9343 7C               ld a,h
 497+ 9344 D6 08            sub 8
 498+ 9346 67               ld h,a
 499+ 9347 7C           2 ld a,h
 500+ 9348 FE 58            cp $58
 501+ 934A 28 20            jr z,4F
 502+ 934C D1               pop de
 503+ 934D 7B           	ld a,e
 504+ 934E AE           	xor (hl)
 505+ 934F 77           	ld (hl),a
 506+ 9350 23           	inc hl
 507+ 9351 7A           	ld a,d
 508+ 9352 AE           	xor (hl)
 509+ 9353 77           	ld (hl),a
 510+ 9354 2B           	dec hl
 511+ 9355 24           	inc h
 512+ 9356 7C               ld a,h
 513+ 9357 E6 07            and 7
 514+ 9359 20 0A            jr nz,3F
 515+ 935B 7D               ld a,l
 516+ 935C C6 20            add a,$20
 517+ 935E 6F               ld l,a
 518+ 935F 38 04            jr c,3F
 519+ 9361 7C               ld a,h
 520+ 9362 D6 08            sub 8
 521+ 9364 67               ld h,a
 522+ 9365 7C           3 ld a,h
 523+ 9366 FE 58            cp $58
 524+ 9368 28 02            jr z,4F
 525+ 936A 10 C1            djnz 1B
 526+ 936C ED 7B E1 89  4 ld sp,(Stack)
 527+ 9370 C9           	ret
 528+ 9371
 529+ 9371 ED 73 E1 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 9375 FD F9        	ld sp,iy
 531+ 9377 06 08            ld b,8
 532+ 9379 D1           1 pop de
 533+ 937A D1           	pop de
 534+ 937B 7B           	ld a,e
 535+ 937C AE           	xor (hl)
 536+ 937D 77           	ld (hl),a
 537+ 937E 24            	inc h
 538+ 937F 7C               ld a,h
 539+ 9380 E6 07            and 7
 540+ 9382 20 0A            jr nz,2F
 541+ 9384 7D               ld a,l
 542+ 9385 C6 20            add a,$20
 543+ 9387 6F               ld l,a
 544+ 9388 38 04            jr c,2F
 545+ 938A 7C               ld a,h
 546+ 938B D6 08            sub 8
 547+ 938D 67               ld h,a
 548+ 938E 7C           2 ld a,h
 549+ 938F FE 58            cp $58
 550+ 9391 28 1B            jr z,4F
 551+ 9393 D1               pop de
 552+ 9394 7A           	ld a,d
 553+ 9395 AE           	xor (hl)
 554+ 9396 77           	ld (hl),a
 555+ 9397 24           	inc h
 556+ 9398 7C               ld a,h
 557+ 9399 E6 07            and 7
 558+ 939B 20 0A            jr nz,3F
 559+ 939D 7D               ld a,l
 560+ 939E C6 20            add a,$20
 561+ 93A0 6F               ld l,a
 562+ 93A1 38 04            jr c,3F
 563+ 93A3 7C               ld a,h
 564+ 93A4 D6 08            sub 8
 565+ 93A6 67               ld h,a
 566+ 93A7 7C           3 ld a,h
 567+ 93A8 FE 58            cp $58
 568+ 93AA 28 02            jr z,4F
 569+ 93AC 10 CB            djnz 1B
 570+ 93AE ED 7B E1 89  4 ld sp,(Stack)
 571+ 93B2 C9           	ret
 572+ 93B3
 573+ 93B3 ED 73 E1 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 93B7 FD F9        	ld sp,iy
 575+ 93B9 06 08            ld b,8
 576+ 93BB D1           1 pop de
 577+ 93BC 7B           	ld a,e
 578+ 93BD AE           	xor (hl)
 579+ 93BE 77           	ld (hl),a
 580+ 93BF 23           	inc hl
 581+ 93C0 7A           	ld a,d
 582+ 93C1 AE           	xor (hl)
 583+ 93C2 77           	ld (hl),a
 584+ 93C3 2B           	dec hl
 585+ 93C4 24             	inc h
 586+ 93C5 7C               ld a,h
 587+ 93C6 E6 07            and 7
 588+ 93C8 20 0A            jr nz,2F
 589+ 93CA 7D               ld a,l
 590+ 93CB C6 20            add a,$20
 591+ 93CD 6F               ld l,a
 592+ 93CE 38 04            jr c,2F
 593+ 93D0 7C               ld a,h
 594+ 93D1 D6 08            sub 8
 595+ 93D3 67               ld h,a
 596+ 93D4 7C           2 ld a,h
 597+ 93D5 FE 58            cp $58
 598+ 93D7 28 21            jr z,4F
 599+ 93D9 D1               pop de
 600+ 93DA 7A           	ld a,d
 601+ 93DB AE           	xor (hl)
 602+ 93DC 77           	ld (hl),a
 603+ 93DD 23           	inc hl
 604+ 93DE D1               pop de
 605+ 93DF 7B           	ld a,e
 606+ 93E0 AE           	xor (hl)
 607+ 93E1 77           	ld (hl),a
 608+ 93E2 2B           	dec hl
 609+ 93E3 24           	inc h
 610+ 93E4 7C               ld a,h
 611+ 93E5 E6 07            and 7
 612+ 93E7 20 0A            jr nz,3F
 613+ 93E9 7D               ld a,l
 614+ 93EA C6 20            add a,$20
 615+ 93EC 6F               ld l,a
 616+ 93ED 38 04            jr c,3F
 617+ 93EF 7C               ld a,h
 618+ 93F0 D6 08            sub 8
 619+ 93F2 67               ld h,a
 620+ 93F3 7C           3 ld a,h
 621+ 93F4 FE 58            cp $58
 622+ 93F6 28 02            jr z,4F
 623+ 93F8 10 C1            djnz 1B
 624+ 93FA ED 7B E1 89  4 ld sp,(Stack)
 625+ 93FE C9           	ret
 626+ 93FF
 627+ 93FF ED 73 E1 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 9403 FD F9        	ld sp,iy
 629+ 9405 06 08            ld b,8
 630+ 9407 D1           1 pop de
 631+ 9408 7B           	ld a,e
 632+ 9409 AE           	xor (hl)
 633+ 940A 77           	ld (hl),a
 634+ 940B 24            	inc h
 635+ 940C 7C               ld a,h
 636+ 940D E6 07            and 7
 637+ 940F 20 0A            jr nz,2F
 638+ 9411 7D               ld a,l
 639+ 9412 C6 20            add a,$20
 640+ 9414 6F               ld l,a
 641+ 9415 38 04            jr c,2F
 642+ 9417 7C               ld a,h
 643+ 9418 D6 08            sub 8
 644+ 941A 67               ld h,a
 645+ 941B 7C           2 ld a,h
 646+ 941C FE 58            cp $58
 647+ 941E 28 1C            jr z,4F
 648+ 9420 D1               pop de
 649+ 9421 7A           	ld a,d
 650+ 9422 AE           	xor (hl)
 651+ 9423 77           	ld (hl),a
 652+ 9424 24           	inc h
 653+ 9425 7C               ld a,h
 654+ 9426 E6 07            and 7
 655+ 9428 20 0A            jr nz,3F
 656+ 942A 7D               ld a,l
 657+ 942B C6 20            add a,$20
 658+ 942D 6F               ld l,a
 659+ 942E 38 04            jr c,3F
 660+ 9430 7C               ld a,h
 661+ 9431 D6 08            sub 8
 662+ 9433 67               ld h,a
 663+ 9434 7C           3 ld a,h
 664+ 9435 FE 58            cp $58
 665+ 9437 28 03            jr z,4F
 666+ 9439 D1               pop de
 667+ 943A 10 CB            djnz 1B
 668+ 943C ED 7B E1 89  4 ld sp,(Stack)
 669+ 9440 C9           	ret
 670+ 9441
 671+ 9441              ; ---------------------------------------------------
 672+ 9441              ;
 673+ 9441              ;   27/02/23
 674+ 9441              ;
 675+ 9441              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 9441              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 9441              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 9441
 679+ 9441 ED 73 E1 89  Pinta_Disparo ld (Stack),sp
 680+ 9445 FD F9            ld sp,iy
 681+ 9447 06 03            ld b,3
 682+ 9449 D1           1 pop de
 683+ 944A 7B               ld a,e
 684+ 944B AE               xor (hl)
 685+ 944C 77               ld (hl),a
 686+ 944D 23               inc hl
 687+ 944E 7A               ld a,d
 688+ 944F AE               xor (hl)
 689+ 9450 77               ld (hl),a
 690+ 9451 2B               dec hl
 691+ 9452
 692+ 9452 24               inc h
 693+ 9453 7C               ld a,h
 694+ 9454 E6 07            and 7
 695+ 9456 20 0A            jr nz,2F
 696+ 9458 7D               ld a,l
 697+ 9459 C6 20            add a,$20
 698+ 945B 6F               ld l,a
 699+ 945C 38 04            jr c,2F
 700+ 945E 7C               ld a,h
 701+ 945F D6 08            sub 8
 702+ 9461 67               ld h,a
 703+ 9462 7C           2 ld a,h
 704+ 9463 FE 58            cp $58
 705+ 9465 28 02            jr z,3F
 706+ 9467
 707+ 9467 10 E0            djnz 1B
 708+ 9469 ED 7B E1 89  3 ld sp,(Stack)
 709+ 946D C9               ret
 710+ 946E
# file closed: Rutinas_de_impresion_sprites.asm
1793  946E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 946E
   2+ 946E              ; ******************************************************************************************************************************************************************************************
   3+ 946E              ;
   4+ 946E              ;   20/05/23
   5+ 946E              ;
   6+ 946E              ;	Recompone_posicion_inicio
   7+ 946E              ;
   8+ 946E              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 946E              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 946E              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 946E              ;	_ a una u otra rutina.
  12+ 946E
  13+ 946E              Recompone_posicion_inicio
  14+ 946E
  15+ 946E 2A A1 89     	ld hl,(Posicion_inicio)
  16+ 9471 7D           	ld a,l
  17+ 9472 E6 1F        	and $1f
  18+ 9474 28 16        	jr z,1F
  19+ 9476
  20+ 9476 FE 1F        	cp $1f
  21+ 9478 28 0D        	jr z,3F
  22+ 947A
  23+ 947A 21 B6 89     	ld hl,Ctrl_2
  24+ 947D CB C6        	set 0,(hl)
  25+ 947F 2A 93 89     	ld hl,(Puntero_objeto)
  26+ 9482 22 D1 89     	ld (Repone_puntero_objeto),hl
  27+ 9485 18 08        	jr 2F
  28+ 9487
  29+ 9487 CD 35 96     3 call Mov_left
  30+ 948A 18 03        	jr 2F
  31+ 948C
  32+ 948C CD 12 95     1 call Mov_right
  33+ 948F 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9492 22 93 89     	ld (Puntero_objeto),hl
  35+ 9495 C9           	ret
  36+ 9496
  37+ 9496              ; ******************************************************************************************************************************************************************************************
  38+ 9496              ;
  39+ 9496              ;   27/05/23
  40+ 9496              ;
  41+ 9496              ;	Mov_down
  42+ 9496              ;
  43+ 9496              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9496              ;
  45+ 9496              ;
  46+ 9496              Mov_down
  47+ 9496
  48+ 9496 CD 00 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9499              ;																	; _ repone (Puntero_objeto).
  50+ 9499 21 B1 89     	ld hl,Ctrl_0
  51+ 949C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 949E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 949E              ; 																	; _ en el caso de que no lo haya.
  54+ 949E 3A BB 89     	ld a,(Vel_down)
  55+ 94A1 47           	ld b,a
  56+ 94A2 2A 91 89         ld hl,(Posicion_actual)
  57+ 94A5 CD 71 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 94A8 E6 02        	and 2
  59+ 94AA 28 17        	jr z,1F
  60+ 94AC
  61+ 94AC              ; Nos encontramos en el último tercio de pantalla.
  62+ 94AC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 94AC
  64+ 94AC 7C           	ld a,h
  65+ 94AD FE 57        	cp $57
  66+ 94AF 20 12        	jr nz,1F
  67+ 94B1
  68+ 94B1 7D           	ld a,l
  69+ 94B2 C6 20        	add $20
  70+ 94B4 30 0D        	jr nc,1F
  71+ 94B6
  72+ 94B6              ; ------------------------------
  73+ 94B6              ;
  74+ 94B6              ;	12/01/24
  75+ 94B6
  76+ 94B6              ;	call Reaparece_arriba
  77+ 94B6 CD C2 97     	call Reinicio
  78+ 94B9
  79+ 94B9              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 94B9
  81+ 94B9 3A EB 89     	ld a,(Ctrl_3)
  82+ 94BC CB CF        	set 1,a
  83+ 94BE 32 EB 89     	ld (Ctrl_3),a
  84+ 94C1
  85+ 94C1 18 08        	jr 3F
  86+ 94C3              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 94C3              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 94C3              ; ------------------------------
  89+ 94C3
  90+ 94C3 CD F8 90     1 call NextScan
  91+ 94C6 22 91 89     	ld (Posicion_actual),hl
  92+ 94C9 10 DA            djnz 2B
  93+ 94CB CD 8F 99     3 call Genera_coordenadas
  94+ 94CE C9           	ret
  95+ 94CF
  96+ 94CF              ; ******************************************************************************************************************************************************************************************
  97+ 94CF              ;
  98+ 94CF              ;   27/05/23
  99+ 94CF              ;
 100+ 94CF              ;	Mov_up
 101+ 94CF              ;
 102+ 94CF              ; 	Mueve el Sprite hacia arriba.
 103+ 94CF              ;
 104+ 94CF              ;
 105+ 94CF              Mov_up
 106+ 94CF
 107+ 94CF CD 00 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 94D2              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 94D2 21 B1 89     	ld hl,Ctrl_0
 110+ 94D5 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 94D7              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 94D7              ; 																		; _ en el caso de que no lo haya.
 113+ 94D7 3A BA 89     	ld a,(Vel_up)
 114+ 94DA 47           	ld b,a
 115+ 94DB 2A 91 89     	ld hl,(Posicion_actual)
 116+ 94DE CD 71 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 94E1 A7           	and a
 118+ 94E2 20 10        	jr nz,1F
 119+ 94E4
 120+ 94E4              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 94E4              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 94E4
 123+ 94E4 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 94E5 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 94E7 20 0B            jr nz,1F
 126+ 94E9 7D               ld a,l
 127+ 94EA D6 20            sub $20
 128+ 94EC 30 06            jr nc,1F
 129+ 94EE 25               dec h
 130+ 94EF
 131+ 94EF              ; -----------------------------
 132+ 94EF CD A3 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 94F2              ;	call Reinicio
 134+ 94F2              ; -----------------------------
 135+ 94F2
 136+ 94F2 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 94F4 CD 07 91     1 call PreviousScan
 138+ 94F7 22 91 89     	ld (Posicion_actual),hl
 139+ 94FA 10 E2            djnz 3B
 140+ 94FC CD 8F 99     2 call Genera_coordenadas
 141+ 94FF C9           	ret
 142+ 9500
 143+ 9500              ; -----------------------------
 144+ 9500              ;
 145+ 9500              ;	27/5/23
 146+ 9500              ;
 147+ 9500              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9500              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9500              ;
 150+ 9500              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9500              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9500              ;
 153+ 9500              ;	Modifica: A y (Puntero_objeto).
 154+ 9500
 155+ 9500 3A B6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9503 CB 47        	bit 0,a
 157+ 9505 C8           	ret z
 158+ 9506 CB 87        	res 0,a
 159+ 9508 32 B6 89     	ld (Ctrl_2),a
 160+ 950B 2A D1 89     	ld hl,(Repone_puntero_objeto)
 161+ 950E 22 93 89     	ld (Puntero_objeto),hl
 162+ 9511 C9           	ret
 163+ 9512
 164+ 9512              ; ******************************************************************************************************************************************************************************************
 165+ 9512              ;
 166+ 9512              ;	19/10/22
 167+ 9512              ;
 168+ 9512              ;	Mov_right.
 169+ 9512              ;
 170+ 9512              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9512              ;
 172+ 9512
 173+ 9512 3A B1 89     Mov_right ld a,(Ctrl_0)
 174+ 9515 CB 77        	bit 6,a
 175+ 9517 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9519
 177+ 9519 CD 51 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 951C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 951D
 180+ 951D 21 B1 89     	ld hl,Ctrl_0
 181+ 9520 CB E6        	set 4,(hl)
 182+ 9522 18 52        	jr 8F
 183+ 9524
 184+ 9524 21 B1 89     10 ld hl,Ctrl_0
 185+ 9527 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9529              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9529              ; 																	; _ en el caso de que no lo haya.
 188+ 9529 3A 95 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 952C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 952E 20 46        	jr nz,8F
 191+ 9530
 192+ 9530 3A 97 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9533 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9534 28 40        	jr z,8F
 195+ 9536
 196+ 9536              ; ---------- ---------- ----------
 197+ 9536              ;
 198+ 9536              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9536
 200+ 9536 3A B9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9539 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 953B 28 11        	jr z,1F
 203+ 953D 38 06        	jr c,6F
 204+ 953F FE 04        	cp 4
 205+ 9541 28 14        	jr z,7F
 206+ 9543 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9545
 208+ 9545              ; ---------- ---------- ----------
 209+ 9545              ;
 210+ 9545              ; Perfiles de velocidad
 211+ 9545              ;
 212+ 9545
 213+ 9545 3A 97 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9548 FE FE        	cp $fe
 215+ 954A 20 2A        	jr nz,8F
 216+ 954C 18 10        	jr 3F
 217+ 954E 3A 97 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9551 FE FD        	cp $fd
 219+ 9553 20 21        	jr nz,8F
 220+ 9555 18 07        	jr 3F
 221+ 9557 3A 97 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 955A FE FB        	cp $fb
 223+ 955C 20 18        	jr nz,8F
 224+ 955E
 225+ 955E              ; ---------- ---------- ----------
 226+ 955E
 227+ 955E              3
 228+ 955E CD 91 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9561              ;	call Reinicio
 230+ 9561
 231+ 9561              ; ---------- ---------- ----------
 232+ 9561              ;
 233+ 9561              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9561
 235+ 9561 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9563 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9564 CD 7D 95     	call DESPLZ_DER
 238+ 9567 C1           	pop bc
 239+ 9568 10 F9        	djnz 5B
 240+ 956A 2A 91 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 956D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 956E 22 91 89     	ld (Posicion_actual),hl
 243+ 9571 CD 8F 99     	call Genera_coordenadas
 244+ 9574 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9576
 246+ 9576              ; ---------- ---------- ----------
 247+ 9576
 248+ 9576 2A 91 89     8 ld hl,(Posicion_actual)
 249+ 9579 CD 7D 95     	call DESPLZ_DER
 250+ 957C C9           2 ret
 251+ 957D
 252+ 957D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 957D              ;
 254+ 957D              ;	22/9/22
 255+ 957D              ;
 256+ 957D
 257+ 957D CD 8C 95     DESPLZ_DER call Desplaza_derecha
 258+ 9580 CD D8 95         call modifica_parametros_1er_DESPLZ_2
 259+ 9583 CD 01 96         call Ciclo_completo
 260+ 9586 21 B1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9589 CB FE        	set 7,(hl)
 262+ 958B C9           	ret
 263+ 958C
 264+ 958C              ; ******************************************************************************************************************************************************************************************
 265+ 958C              ;	15/02/23
 266+ 958C              ;
 267+ 958C
 268+ 958C 3A B9 89     Desplaza_derecha ld a,(Vel_right)
 269+ 958F 47           	ld b,a
 270+ 9590 2A 9D 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9593 23           1 inc hl
 272+ 9594 23           	inc hl
 273+ 9595 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9597 22 9D 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 959A CD 6A 8B     	call Extrae_address
 276+ 959D 22 93 89     	ld (Puntero_objeto),hl
 277+ 95A0
 278+ 95A0              ; Modifica (Puntero_DESPLZ_izq).
 279+ 95A0
 280+ 95A0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 95A0              ; Cuántos movimientos hemos hecho ??
 282+ 95A0              ; DE contiene (Puntero_DESPLZ_der).
 283+ 95A0
 284+ 95A0 2A 99 89     7 ld hl,(Indice_Sprite_der)
 285+ 95A3 EB           	ex de,hl
 286+ 95A4 A7           	and a
 287+ 95A5 ED 52        	sbc hl,de
 288+ 95A7 CB 3D        	srl l
 289+ 95A9 3E 08        6 ld a,8
 290+ 95AB 95           	sub l
 291+ 95AC 30 1E        	jr nc,3F
 292+ 95AE
 293+ 95AE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 95AE              ; B="0".
 295+ 95AE
 296+ 95AE 04           4 inc b
 297+ 95AF 3C           	inc a
 298+ 95B0 20 FC        	jr nz,4B
 299+ 95B2 78           	ld a,b
 300+ 95B3 08           	ex af,af
 301+ 95B4 2A 99 89     	ld hl,(Indice_Sprite_der)
 302+ 95B7 23           5 inc hl
 303+ 95B8 23           	inc hl
 304+ 95B9 10 FC        	djnz 5B
 305+ 95BB 22 9D 89     	ld (Puntero_DESPLZ_der),hl
 306+ 95BE CD 6A 8B     	call Extrae_address
 307+ 95C1 22 93 89     	ld (Puntero_objeto),hl
 308+ 95C4
 309+ 95C4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 95C4              ; _(Posicion_actual).
 311+ 95C4
 312+ 95C4 21 91 89     	ld hl,Posicion_actual
 313+ 95C7 34           	inc (hl)
 314+ 95C8 08               ex af,af
 315+ 95C9 6F           	ld l,a
 316+ 95CA 18 DD        	jr 6B
 317+ 95CC
 318+ 95CC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 95CC
 320+ 95CC 47           3 ld b,a
 321+ 95CD 2A 9B 89     	ld hl,(Indice_Sprite_izq)
 322+ 95D0 23           2 inc hl
 323+ 95D1 23           	inc hl
 324+ 95D2 10 FC        	djnz 2B
 325+ 95D4 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 95D7 C9           8 ret
 327+ 95D8
 328+ 95D8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 95D8              ;
 330+ 95D8              ;	24/7/22
 331+ 95D8              ;
 332+ 95D8              ;	modifica_parametros_1er_DESPLZ_2
 333+ 95D8              ;
 334+ 95D8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 95D8              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 95D8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 95D8
 338+ 95D8 3A 97 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 95DB A7           	and a
 340+ 95DC 20 1F        	jr nz,1F
 341+ 95DE D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 95E0 32 97 89         ld (CTRL_DESPLZ),a
 343+ 95E3
 344+ 95E3 21 90 89     	ld hl,Columns
 345+ 95E6 34           	inc (hl)
 346+ 95E7 3A A3 89     	ld a,(Cuad_objeto)
 347+ 95EA E6 01        	and 1
 348+ 95EC 28 0F        	jr z,1F
 349+ 95EE 2A 91 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 95F1 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 95F2 22 91 89     	ld (Posicion_actual),hl
 352+ 95F5 CD 8F 99     	call Genera_coordenadas
 353+ 95F8 CD 5D 97     	call Inc_CTRL_DESPLZ
 354+ 95FB 18 03        	jr 2F
 355+ 95FD CD 5D 97     1 call Inc_CTRL_DESPLZ
 356+ 9600 C9           2 ret
 357+ 9601
 358+ 9601              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9601              ;
 360+ 9601              ;	24/7/22
 361+ 9601              ;
 362+ 9601              ;	Ciclo_completo.
 363+ 9601              ;
 364+ 9601              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9601              ;
 366+ 9601              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9601              ; 	Decrementamos (Columns).
 368+ 9601              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9601              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9601
 371+ 9601
 372+ 9601 3A 97 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9604 FE FF        	cp $ff
 374+ 9606 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9608 E6 F0        	and $f0
 376+ 960A 20 28        	jr nz,3F
 377+ 960C
 378+ 960C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 960C
 380+ 960C 3A 97 89     	ld a,(CTRL_DESPLZ)
 381+ 960F 47           	ld b,a
 382+ 9610 3E F8        	ld a,$f8
 383+ 9612 80           	add b
 384+ 9613 32 97 89     	ld (CTRL_DESPLZ),a
 385+ 9616 18 1C        	jr 3F
 386+ 9618 21 90 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 961B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 961C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 961D 32 97 89     	ld (CTRL_DESPLZ),a
 390+ 9620 3A A3 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9623 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9625 20 0A        	jr nz,2F
 393+ 9627 2A 91 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 962A 23           	inc hl
 395+ 962B 22 91 89     	ld (Posicion_actual),hl
 396+ 962E CD 8F 99     	call Genera_coordenadas
 397+ 9631
 398+ 9631              ; Inicia el puntero de Sprite.
 399+ 9631
 400+ 9631 CD 7F 8B     2 call Inicia_puntero_objeto_der
 401+ 9634 C9           3 ret
 402+ 9635
 403+ 9635              ; ******************************************************************************************************************************************************************************************
 404+ 9635              ;
 405+ 9635              ;	15/02/23
 406+ 9635              ;
 407+ 9635              ;	Mov_left.
 408+ 9635              ;
 409+ 9635              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9635              ;
 411+ 9635              Mov_left
 412+ 9635
 413+ 9635 21 B1 89     	ld hl,Ctrl_0
 414+ 9638 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 963A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 963A              ; 																	; _ en el caso de que no lo haya.
 417+ 963A 3A B1 89     	ld a,(Ctrl_0)
 418+ 963D CB 77        	bit 6,a
 419+ 963F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9641
 421+ 9641 CD 57 97     	call Stop_Amadeus_left
 422+ 9644 C8           	ret z
 423+ 9645 20 4A        	jr nz,8F
 424+ 9647
 425+ 9647 3A 95 89     11 ld a,(Coordenada_X)
 426+ 964A A7           	and a
 427+ 964B 20 44        	jr nz,8F
 428+ 964D
 429+ 964D 3A 97 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9650 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9651 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9653
 433+ 9653              ; ---------- ---------- ----------
 434+ 9653
 435+ 9653 3A B8 89     	ld a,(Vel_left)
 436+ 9656 FE 02        	cp 2
 437+ 9658 28 0F        	jr z,1F
 438+ 965A 38 04        	jr c,6F
 439+ 965C FE 04        	cp 4
 440+ 965E 28 12        	jr z,7F
 441+ 9660
 442+ 9660              ; ---------- ---------- ----------
 443+ 9660
 444+ 9660 3A 97 89     6 ld a,(CTRL_DESPLZ)
 445+ 9663 FE F8        	cp $f8
 446+ 9665 20 2A        	jr nz,8F
 447+ 9667 18 10        	jr 4F
 448+ 9669 3A 97 89     1 ld a,(CTRL_DESPLZ)
 449+ 966C FE F9        	cp $f9
 450+ 966E 20 21        	jr nz,8F
 451+ 9670 18 07        	jr 4F
 452+ 9672 3A 97 89     7 ld a,(CTRL_DESPLZ)
 453+ 9675 FE FB        	cp $fb
 454+ 9677 20 18        	jr nz,8F
 455+ 9679
 456+ 9679              ; ---------- ---------- ----------
 457+ 9679
 458+ 9679              4
 459+ 9679 CD 7F 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 967C              ;	call Reinicio
 461+ 967C
 462+ 967C              ; ---------- ---------- ----------
 463+ 967C
 464+ 967C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 967E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 967F
 467+ 967F              ;	ld hl,(Indice_Sprite_izq)
 468+ 967F              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 967F
 470+ 967F CD 98 96     	call DESPLZ_IZQ
 471+ 9682 C1           	pop bc
 472+ 9683 10 F9        	djnz 5B
 473+ 9685 2A 91 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9688 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9689 22 91 89     	ld (Posicion_actual),hl
 476+ 968C CD 8F 99     	call Genera_coordenadas
 477+ 968F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9691
 479+ 9691              ; ---------- ---------- ----------
 480+ 9691
 481+ 9691              ; Movemos, no hay recolocación.
 482+ 9691
 483+ 9691 2A 91 89     8 ld hl,(Posicion_actual)
 484+ 9694 CD 98 96     	call DESPLZ_IZQ
 485+ 9697 C9           2 ret
 486+ 9698
 487+ 9698              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9698              ;
 489+ 9698              ;	22/9/22
 490+ 9698
 491+ 9698              DESPLZ_IZQ
 492+ 9698
 493+ 9698 CD A7 96     	call Desplaza_izquierda
 494+ 969B CD F3 96         call modifica_parametros_1er_DESPLZ
 495+ 969E CD 1B 97     	call Ciclo_completo_2
 496+ 96A1 21 B1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 96A4 CB BE        	res 7,(hl)
 498+ 96A6 C9           	ret
 499+ 96A7
 500+ 96A7              Desplaza_izquierda
 501+ 96A7
 502+ 96A7 3A B8 89     	ld a,(Vel_left)
 503+ 96AA 47           	ld b,a
 504+ 96AB 2A 9F 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 96AE 23           1 inc hl
 506+ 96AF 23           	inc hl
 507+ 96B0 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 96B2 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 96B5 CD 6A 8B     	call Extrae_address
 510+ 96B8 22 93 89     	ld (Puntero_objeto),hl
 511+ 96BB
 512+ 96BB              ; Modifica (Puntero_DESPLZ_der).
 513+ 96BB
 514+ 96BB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96BB              ; Cuántos movimientos hemos hecho ??
 516+ 96BB              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96BB
 518+ 96BB 2A 9B 89     7 ld hl,(Indice_Sprite_izq)
 519+ 96BE EB           	ex de,hl
 520+ 96BF A7           	and a
 521+ 96C0 ED 52        	sbc hl,de
 522+ 96C2 CB 3D        	srl l
 523+ 96C4 3E 08        6 ld a,8
 524+ 96C6 95           	sub l
 525+ 96C7 30 1E        	jr nc,3F
 526+ 96C9
 527+ 96C9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 96C9              ; B="0".
 529+ 96C9
 530+ 96C9 04           4 inc b
 531+ 96CA 3C           	inc a
 532+ 96CB 20 FC        	jr nz,4B
 533+ 96CD 78           	ld a,b
 534+ 96CE 08           	ex af,af
 535+ 96CF 2A 9B 89     	ld hl,(Indice_Sprite_izq)
 536+ 96D2 23           5 inc hl
 537+ 96D3 23           	inc hl
 538+ 96D4 10 FC        	djnz 5B
 539+ 96D6 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 96D9 CD 6A 8B     	call Extrae_address
 541+ 96DC 22 93 89     	ld (Puntero_objeto),hl
 542+ 96DF
 543+ 96DF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 96DF              ; _(Posicion_actual).
 545+ 96DF
 546+ 96DF 21 91 89     	ld hl,Posicion_actual
 547+ 96E2 35           	dec (hl)
 548+ 96E3 08           	ex af,af
 549+ 96E4 6F           	ld l,a
 550+ 96E5 18 DD        	jr 6B
 551+ 96E7
 552+ 96E7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 96E7
 554+ 96E7 47           3 ld b,a
 555+ 96E8 2A 99 89     	ld hl,(Indice_Sprite_der)
 556+ 96EB 23           2 inc hl
 557+ 96EC 23           	inc hl
 558+ 96ED 10 FC        	djnz 2B
 559+ 96EF 22 9D 89     	ld (Puntero_DESPLZ_der),hl
 560+ 96F2 C9           8 ret
 561+ 96F3
 562+ 96F3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 96F3              ;
 564+ 96F3              ;	modifica_parametros_1er_DESPLZ
 565+ 96F3              ;
 566+ 96F3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 96F3              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 96F3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 96F3
 570+ 96F3 3A 97 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 96F6 A7           	and a
 572+ 96F7 20 1E        	jr nz,1F
 573+ 96F9 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 96FA 32 97 89         ld (CTRL_DESPLZ),a
 575+ 96FD 21 90 89     	ld hl,Columns
 576+ 9700 34           	inc (hl)
 577+ 9701 3A A3 89     	ld a,(Cuad_objeto)
 578+ 9704 E6 01        	and 1
 579+ 9706 20 0F        	jr nz,1F
 580+ 9708 2A 91 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 970B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 970C 22 91 89     	ld (Posicion_actual),hl
 583+ 970F CD 8F 99     	call Genera_coordenadas
 584+ 9712 CD 6E 97     	call Dec_CTRL_DESPLZ
 585+ 9715 18 03        	jr 2F
 586+ 9717 CD 6E 97     1 call Dec_CTRL_DESPLZ
 587+ 971A C9           2 ret
 588+ 971B
 589+ 971B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 971B
 591+ 971B 3A 97 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 971E FE F7        	cp $f7
 593+ 9720 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9722 30 2C        	jr nc,3F
 595+ 9724
 596+ 9724              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9724
 598+ 9724 06 00        	ld b,0
 599+ 9726 04           4 inc b
 600+ 9727 3C           	inc a
 601+ 9728 FE F7        	cp $f7
 602+ 972A 20 FA        	jr nz,4B
 603+ 972C 3E FF        	ld a,$ff
 604+ 972E 90           	sub b
 605+ 972F 32 97 89     	ld (CTRL_DESPLZ),a
 606+ 9732 18 1C        	jr 3F
 607+ 9734
 608+ 9734              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9734
 610+ 9734 21 90 89     1 ld hl,Columns
 611+ 9737 35           	dec (hl)
 612+ 9738 AF           	xor a
 613+ 9739 32 97 89     	ld (CTRL_DESPLZ),a
 614+ 973C 3A A3 89     	ld a,(Cuad_objeto)
 615+ 973F E6 01        	and 1
 616+ 9741 28 0A        	jr z,2F
 617+ 9743 2A 91 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9746 2B           	dec hl
 619+ 9747 22 91 89     	ld (Posicion_actual),hl
 620+ 974A CD 8F 99     	call Genera_coordenadas
 621+ 974D
 622+ 974D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 974D
 624+ 974D CD 92 8B     2 call Inicia_puntero_objeto_izq
 625+ 9750 C9           3 ret
 626+ 9751
 627+ 9751              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9751              ;
 629+ 9751              ;	19/10/22
 630+ 9751              ;
 631+ 9751              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9751              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9751
 634+ 9751 3A 95 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9754 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9756 C9           	ret
 637+ 9757
 638+ 9757              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9757              ;
 640+ 9757              ;	19/10/22
 641+ 9757              ;
 642+ 9757              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9757              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9757
 645+ 9757 3A 95 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 975A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 975C C9           	ret
 648+ 975D
 649+ 975D              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 975D              ;
 651+ 975D              ;	24/7/22
 652+ 975D              ;
 653+ 975D              ;	Inc_CTRL_DESPLZ
 654+ 975D              ;
 655+ 975D              ;
 656+ 975D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 975D
 658+ 975D 21 97 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9760 3A B9 89     	ld a,(Vel_right)
 660+ 9763 A7           	and a
 661+ 9764 28 06        	jr z,1F
 662+ 9766 47           	ld b,a
 663+ 9767 34           3 inc (hl)
 664+ 9768 10 FD        	djnz 3B
 665+ 976A 18 01        	jr 2F
 666+ 976C 34           1 inc (hl)
 667+ 976D C9           2 ret
 668+ 976E
 669+ 976E              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 976E              ;
 671+ 976E              ;	5/2/23
 672+ 976E              ;
 673+ 976E              ;	Dec_CTRL_DESPLZ
 674+ 976E              ;
 675+ 976E              ;
 676+ 976E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 976E
 678+ 976E 21 97 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9771 3A B8 89     	ld a,(Vel_left)
 680+ 9774 A7           	and a
 681+ 9775 28 06        	jr z,1F
 682+ 9777 47           	ld b,a
 683+ 9778 35           3 dec (hl)
 684+ 9779 10 FD        	djnz 3B
 685+ 977B 18 01        	jr 2F
 686+ 977D 35           1 dec (hl)
 687+ 977E C9           2 ret
 688+ 977F
 689+ 977F              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 977F
 691+ 977F 2A 91 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9782 01 1F 00     	ld bc,31
 693+ 9785 A7           	and a
 694+ 9786 ED 4A        	adc hl,bc
 695+ 9788 22 91 89     	ld (Posicion_actual),hl
 696+ 978B 21 B1 89     	ld hl,Ctrl_0														; $xxx1
 697+ 978E CB C6        	set 0,(hl)
 698+ 9790 C9           	ret
 699+ 9791
 700+ 9791              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9791
 702+ 9791 2A 91 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9794 01 1F 00     	ld bc,31
 704+ 9797 A7           	and a
 705+ 9798 ED 42        	sbc hl,bc
 706+ 979A 22 91 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 979D 21 B1 89     	ld hl,Ctrl_0
 708+ 97A0 CB CE        	set 1,(hl)
 709+ 97A2 C9           	ret
 710+ 97A3
 711+ 97A3              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 97A3
 713+ 97A3 24           Reaparece_abajo inc h
 714+ 97A4 01 E0 17     	ld bc,$17e0
 715+ 97A7 A7           	and a
 716+ 97A8 ED 4A        	adc hl,bc
 717+ 97AA 22 91 89     	ld (Posicion_actual),hl
 718+ 97AD 21 B1 89     	ld hl,Ctrl_0
 719+ 97B0 CB D6        	set 2,(hl)
 720+ 97B2 C9           	ret
 721+ 97B3
 722+ 97B3              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 97B3
 724+ 97B3 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 97B6 A7           	and a
 726+ 97B7 ED 42        	sbc hl,bc
 727+ 97B9 22 91 89     	ld (Posicion_actual),hl
 728+ 97BC 21 B1 89     	ld hl,Ctrl_0
 729+ 97BF CB DE        	set 3,(hl)
 730+ 97C1 C9           	ret
 731+ 97C2
 732+ 97C2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 97C2              ;
 734+ 97C2              ;	15/07/23
 735+ 97C2
 736+ 97C2              Reinicio
 737+ 97C2
 738+ 97C2              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 97C2
 740+ 97C2 AF           	xor a
 741+ 97C3 21 C8 89     	ld hl,Puntero_indice_mov_bucle
 742+ 97C6 CD E4 97     	call Limpia_contenido_hl
 743+ 97C9
 744+ 97C9 21 91 89     	ld hl,Posicion_actual
 745+ 97CC CD E4 97     	call Limpia_contenido_hl
 746+ 97CF
 747+ 97CF CD 2D 8C     	call Inicializa_Puntero_indice_mov
 748+ 97D2 CD B0 98     	call Inicia_Puntero_mov
 749+ 97D5
 750+ 97D5 21 CA 89     	ld hl,Incrementa_puntero
 751+ 97D8 06 05        	ld b,5
 752+ 97DA 77           1 ld (hl),a
 753+ 97DB 23           	inc hl
 754+ 97DC 10 FC        	djnz 1B
 755+ 97DE
 756+ 97DE 21 B6 89     	ld hl,Ctrl_2
 757+ 97E1 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 97E3
 759+ 97E3 C9           	ret
 760+ 97E4
 761+ 97E4 77           Limpia_contenido_hl	ld (hl),a
 762+ 97E5 23           	inc hl
 763+ 97E6 77           	ld (hl),a
 764+ 97E7 C9           	ret
 765+ 97E8
 766+ 97E8
# file closed: Direcciones.asm
1794  97E8              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 97E8              ; ----- ----- ----- ----- -----
   2+ 97E8              ;
   3+ 97E8              ;   28/12/23
   4+ 97E8
   5+ 97E8              Movimiento
   6+ 97E8
   7+ 97E8              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 97E8
   9+ 97E8 3A B6 89         ld a,(Ctrl_2)
  10+ 97EB CB 57            bit 2,a
  11+ 97ED 20 1B            jr nz, Desplazamiento_iniciado
  12+ 97EF
  13+ 97EF 2A C6 89         ld hl,(Puntero_mov)
  14+ 97F2 7E               ld a,(hl)
  15+ 97F3
  16+ 97F3              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 97F3
  18+ 97F3              Inicia_desplazamiento.
  19+ 97F3
  20+ 97F3              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 97F3
  22+ 97F3 CD E6 98         call Ajusta_velocidad_desplazamiento
  23+ 97F6
  24+ 97F6              ; Iniciamos (Repetimos_mov).
  25+ 97F6
  26+ 97F6 7E               ld a,(hl)
  27+ 97F7 E6 0F            and $0f
  28+ 97F9 32 CC 89         ld (Repetimos_desplazamiento),a
  29+ 97FC 32 CD 89         ld (Repetimos_desplazamiento_backup),a
  30+ 97FF
  31+ 97FF              ; Iniciamos (Cola_de_desplazamiento).
  32+ 97FF
  33+ 97FF 23               inc hl
  34+ 9800 7E               ld a,(hl)
  35+ 9801 32 CF 89         ld (Cola_de_desplazamiento),a
  36+ 9804 2B               dec hl
  37+ 9805
  38+ 9805 21 B6 89         ld hl,Ctrl_2
  39+ 9808 CB D6            set 2,(hl)
  40+ 980A
  41+ 980A              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 980A              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 980A
  44+ 980A              Desplazamiento_iniciado
  45+ 980A
  46+ 980A CD BA 98         call Aplica_desplazamiento
  47+ 980D
  48+ 980D              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 980D
  50+ 980D 3A EB 89         ld a,(Ctrl_3)
  51+ 9810 CB 4F            bit 1,a
  52+ 9812 C0               ret nz
  53+ 9813
  54+ 9813 21 CC 89     3 ld hl,Repetimos_desplazamiento
  55+ 9816 35               dec (hl)
  56+ 9817 C0               ret nz
  57+ 9818
  58+ 9818              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9818              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9818              ; Analiza (Cola_de_desplazamiento).
  61+ 9818
  62+ 9818 3A CF 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 981B A7               and a
  64+ 981C CC 0F 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 981F 28 30            jr z,Reinicia_el_movimiento
  66+ 9821
  67+ 9821 FE FF            cp $ff
  68+ 9823 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9825
  70+ 9825 FE FE            cp $fe
  71+ 9827 CC 94 98         call z,Fijamos_bucle
  72+ 982A 28 25            jr z,Reinicia_el_movimiento
  73+ 982C
  74+ 982C FE FD            cp $fd
  75+ 982E 20 11            jr nz,1F
  76+ 9830
  77+ 9830              ; ---
  78+ 9830              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9830
  80+ 9830 3A B6 89         ld a,(Ctrl_2)
  81+ 9833 CB 5F            bit 3,a
  82+ 9835 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9837
  84+ 9837              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9837
  86+ 9837 21 B6 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 983A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 983C
  89+ 983C CD A5 98         call Inicia_Repetimos_movimiento
  90+ 983F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9841              ; ---
  92+ 9841
  93+ 9841 FE 01        1 cp 1
  94+ 9843 CA 7E 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9846
  96+ 9846 3D               dec a
  97+ 9847 32 CF 89         ld (Cola_de_desplazamiento),a
  98+ 984A
  99+ 984A 3A CD 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 984D 32 CC 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9850              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9850 C9               ret
 103+ 9851
 104+ 9851              Reinicia_el_movimiento
 105+ 9851
 106+ 9851 3A B6 89         ld a,(Ctrl_2)
 107+ 9854 CB 5F            bit 3,a
 108+ 9856 28 1B            jr z,2F
 109+ 9858
 110+ 9858              ; (Cola_de_desplazamiento)="254".
 111+ 9858
 112+ 9858 21 CE 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 985B 35               dec (hl)
 114+ 985C 20 15            jr nz,2F
 115+ 985E
 116+ 985E              ; Fin de las repeticiones del último movimiento.
 117+ 985E
 118+ 985E 21 B6 89         ld hl,Ctrl_2
 119+ 9861 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9863
 121+ 9863 2A C6 89         ld hl,(Puntero_mov)
 122+ 9866 23               inc hl
 123+ 9867 23               inc hl
 124+ 9868 23               inc hl
 125+ 9869 22 C6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 986C              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 986C 7E               ld a,(hl)
 128+ 986D 32 CF 89         ld (Cola_de_desplazamiento),a
 129+ 9870
 130+ 9870 C3 18 98         jp Cola
 131+ 9873
 132+ 9873 CD B0 98     2 call Inicia_Puntero_mov
 133+ 9876
 134+ 9876 21 B6 89         ld hl,Ctrl_2
 135+ 9879 CB 96            res 2,(hl)
 136+ 987B
 137+ 987B C3 E8 97         jp Movimiento
 138+ 987E
 139+ 987E              Siguiente_desplazamiento
 140+ 987E
 141+ 987E              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 987E              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 987E
 144+ 987E 21 B6 89         ld hl,Ctrl_2
 145+ 9881 CB 96            res 2,(hl)
 146+ 9883
 147+ 9883 2A C6 89         ld hl,(Puntero_mov)
 148+ 9886 23               inc hl
 149+ 9887 23               inc hl
 150+ 9888 22 C6 89         ld (Puntero_mov),hl
 151+ 988B
 152+ 988B 7E               ld a,(hl)
 153+ 988C A7               and a
 154+ 988D CC 0F 99         call z,Incrementa_Puntero_indice_mov
 155+ 9890 CA 51 98         jp z,Reinicia_el_movimiento
 156+ 9893
 157+ 9893 C9               ret
 158+ 9894
 159+ 9894              ; Subrutinas -----------------------------------------
 160+ 9894              ; ---------- --------- --------- ---------- ----------
 161+ 9894              ;
 162+ 9894              ;   24/07/23
 163+ 9894              ;
 164+ 9894              ;   Fijamos_bucle
 165+ 9894              ;
 166+ 9894              ;
 167+ 9894
 168+ 9894              Fijamos_bucle
 169+ 9894
 170+ 9894 3A CA 89         ld a,(Incrementa_puntero)
 171+ 9897 3C               inc a
 172+ 9898 32 CB 89         ld (Incrementa_puntero_backup),a
 173+ 989B
 174+ 989B CD 0F 99         call Incrementa_Puntero_indice_mov
 175+ 989E 2A C4 89         ld hl,(Puntero_indice_mov)
 176+ 98A1 22 C8 89         ld (Puntero_indice_mov_bucle),hl
 177+ 98A4 C9               ret
 178+ 98A5
 179+ 98A5              ; ---------- --------- --------- ---------- ----------
 180+ 98A5              ;
 181+ 98A5              ;   07/7/23
 182+ 98A5              ;
 183+ 98A5              ;   Inicia_Repetimos_movimiento
 184+ 98A5              ;
 185+ 98A5              ;
 186+ 98A5
 187+ 98A5              Inicia_Repetimos_movimiento
 188+ 98A5
 189+ 98A5              ; Iniciamos (Repetimos_movimiento).
 190+ 98A5
 191+ 98A5 DD 2A C6 89      ld ix,(Puntero_mov)
 192+ 98A9 DD 7E 02         ld a,(ix+2)
 193+ 98AC 32 CE 89         ld (Repetimos_movimiento),a
 194+ 98AF
 195+ 98AF C9               ret
 196+ 98B0
 197+ 98B0              ; ---------- --------- --------- ---------- ----------
 198+ 98B0              ;
 199+ 98B0              ;   26/6/23
 200+ 98B0              ;
 201+ 98B0              ;   Inicia_Puntero_mov
 202+ 98B0              ;
 203+ 98B0              ;
 204+ 98B0
 205+ 98B0 2A C4 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 98B3 CD 6A 8B         call Extrae_address
 207+ 98B6 22 C6 89         ld (Puntero_mov),hl
 208+ 98B9 C9               ret
 209+ 98BA
 210+ 98BA              ; ---------- --------- --------- ---------- ----------
 211+ 98BA              ;
 212+ 98BA              ;   27/06/23
 213+ 98BA              ;
 214+ 98BA              ;   Aplica_movimiento.
 215+ 98BA
 216+ 98BA              Aplica_desplazamiento
 217+ 98BA
 218+ 98BA              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98BA
 220+ 98BA 2A C6 89         ld hl, (Puntero_mov)
 221+ 98BD
 222+ 98BD 7E               ld a,(hl)
 223+ 98BE E6 F0            and $f0
 224+ 98C0 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 98C1
 226+ 98C1 CB 7E            bit 7,(hl)
 227+ 98C3 28 03            jr z,1F
 228+ 98C5 CD CF 94         call Mov_up
 229+ 98C8 2A C6 89     1 ld hl, (Puntero_mov)
 230+ 98CB CB 76            bit 6,(hl)
 231+ 98CD 28 03            jr z,2F
 232+ 98CF CD 96 94         call Mov_down
 233+ 98D2
 234+ 98D2              ; Se ha aplicado reinicio ???
 235+ 98D2              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 98D2
 237+ 98D2              ;    ld a,(Ctrl_3)
 238+ 98D2              ;    bit 1,a
 239+ 98D2              ;    ret nz
 240+ 98D2
 241+ 98D2 2A C6 89     2 ld hl, (Puntero_mov)
 242+ 98D5 CB 6E            bit 5,(hl)
 243+ 98D7 28 03            jr z,3F
 244+ 98D9 CD 35 96         call Mov_left
 245+ 98DC 2A C6 89     3 ld hl, (Puntero_mov)
 246+ 98DF CB 66            bit 4,(hl)
 247+ 98E1 C8               ret z
 248+ 98E2 CD 12 95         call Mov_right
 249+ 98E5 C9               ret
 250+ 98E6
 251+ 98E6              ; ---------- --------- --------- ---------- ----------
 252+ 98E6              ;
 253+ 98E6              ;   26/06/23
 254+ 98E6              ;
 255+ 98E6              ;   Ajusta_velocidad_desplazamiento.
 256+ 98E6
 257+ 98E6              Ajusta_velocidad_desplazamiento
 258+ 98E6
 259+ 98E6              ; 1er byte de la cadena de movimiento.
 260+ 98E6              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 98E6
 262+ 98E6 CD 04 99         call Extrae_nibble_alto
 263+ 98E9
 264+ 98E9 32 BA 89         ld (Vel_up),a
 265+ 98EC 79               ld a,c
 266+ 98ED E6 0F            and $0f
 267+ 98EF 32 BB 89         ld (Vel_down),a
 268+ 98F2
 269+ 98F2              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 98F2              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 98F2
 272+ 98F2 23               inc hl
 273+ 98F3 CD 04 99         call Extrae_nibble_alto
 274+ 98F6
 275+ 98F6 32 B8 89         ld (Vel_left),a
 276+ 98F9 79               ld a,c
 277+ 98FA E6 0F            and $0f
 278+ 98FC 32 B9 89         ld (Vel_right),a
 279+ 98FF
 280+ 98FF              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 98FF
 282+ 98FF 23               inc hl
 283+ 9900 22 C6 89         ld (Puntero_mov),hl
 284+ 9903 C9               ret
 285+ 9904
 286+ 9904 06 04        Extrae_nibble_alto ld b,4
 287+ 9906 7E               ld a,(hl)
 288+ 9907 4F               ld c,a
 289+ 9908 E6 F0            and $f0
 290+ 990A CB 3F        1 srl a
 291+ 990C 10 FC            djnz 1B
 292+ 990E C9               ret
 293+ 990F
 294+ 990F              ; ---------- --------- --------- ---------- ----------
 295+ 990F              ;
 296+ 990F              ;   5/7/23
 297+ 990F              ;
 298+ 990F              ;   Incrementa_Puntero_indice_mov
 299+ 990F
 300+ 990F              Incrementa_Puntero_indice_mov
 301+ 990F
 302+ 990F 21 CA 89         ld hl,Incrementa_puntero
 303+ 9912 34               inc (hl)
 304+ 9913
 305+ 9913 2A C4 89         ld hl,(Puntero_indice_mov)
 306+ 9916 01 02 00         ld bc,2
 307+ 9919 A7               and a
 308+ 991A 09               add hl,bc
 309+ 991B 22 C4 89         ld (Puntero_indice_mov),hl
 310+ 991E
 311+ 991E 7E               ld a,(hl)
 312+ 991F A7               and a
 313+ 9920
 314+ 9920              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9920
 316+ 9920              ;    jr z,$
 317+ 9920
 318+ 9920              ;! Reinicia el Patrón de movimiento.
 319+ 9920
 320+ 9920 CC 25 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 9923
 322+ 9923 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9924
 324+ 9924 C9               ret
 325+ 9925
 326+ 9925              ; ---------- --------- --------- ---------- ----------
 327+ 9925              ;
 328+ 9925              ;   15/01/24
 329+ 9925              ;
 330+ 9925              ;   Inicializa_Puntero_indice_mov
 331+ 9925
 332+ 9925              Inicializa_Puntero_indice_mov_2
 333+ 9925
 334+ 9925              ; Existe etiqueta de bucle principal???
 335+ 9925
 336+ 9925 2A C8 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9928 24               inc h
 338+ 9929 25               dec h
 339+ 992A 28 05            jr z,2F
 340+ 992C
 341+ 992C 22 C4 89         ld (Puntero_indice_mov),hl
 342+ 992F 18 14            jr 3F
 343+ 9931
 344+ 9931              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9931
 346+ 9931 3A CA 89     2 ld a,(Incrementa_puntero)
 347+ 9934 47               ld b,a
 348+ 9935
 349+ 9935 2A C4 89         ld hl,(Puntero_indice_mov)
 350+ 9938 2B           1 dec hl
 351+ 9939 2B               dec hl
 352+ 993A 10 FC            djnz 1B
 353+ 993C 22 C4 89         ld (Puntero_indice_mov),hl
 354+ 993F
 355+ 993F AF               xor a
 356+ 9940 32 CA 89         ld (Incrementa_puntero),a
 357+ 9943 18 06            jr 4F
 358+ 9945
 359+ 9945 3A CB 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9948 32 CA 89         ld (Incrementa_puntero),a
 361+ 994B C9           4 ret
 362+ 994C
 363+ 994C              ; ----------------------------------------------------------------------
 364+ 994C              ;
 365+ 994C              ;   30/01/24
 366+ 994C              ;
 367+ 994C              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 994C
 369+ 994C 3A 8E 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 994F CD 7E 8D         call Calcula_salto_en_BC
 371+ 9952 21 BC 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9955 A7               and a
 373+ 9956 ED 4A            adc hl,bc
 374+ 9958 C9               ret
 375+ 9959
 376+ 9959              ; ----------------------------------------------------------------------
 377+ 9959              ;
 378+ 9959              ;   30/01/24
 379+ 9959              ;
 380+ 9959              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9959              ;
 382+ 9959              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9959
 384+ 9959 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 995A 23               inc hl
 386+ 995B 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 995C 69               ld l,c
 388+ 995D 60               ld h,b
 389+ 995E 22 AF 89         ld (Contador_de_mov_masticados),hl
 390+ 9961 C9               ret
 391+ 9962
# file closed: Movimiento.asm
1795  9962              ;	include "Disparo.asm"
1796  9962              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9962              ; Relojes y temporizaciones.
   2+ 9962
   3+ 9962              ; ------------------------------------------------------
   4+ 9962              ;
   5+ 9962              ;	16/7/23
   6+ 9962              ;
   7+ 9962              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9962              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9962              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9962              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9962              ;
  12+ 9962              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9962              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9962
  15+ 9962              ; Disparo_entidad db 1
  16+ 9962              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9962              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9962
  19+ 9962              Habilita_disparos
  20+ 9962
  21+ 9962 7E           	ld a,(hl)
  22+ 9963 A7           	and a
  23+ 9964 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9965
  25+ 9965 EB           	ex de,hl
  26+ 9966
  27+ 9966 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9967 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9968
  30+ 9968              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9968
  32+ 9968 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9969 7E           	ld a,(hl)
  34+ 996A 23           	inc hl
  35+ 996B 77           	ld (hl),a
  36+ 996C
  37+ 996C EB           	ex de,hl						; Habilitamos disparo.
  38+ 996D 3E 01        	ld a,1
  39+ 996F 77           	ld (hl),a
  40+ 9970 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1797  9971              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9971              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9971              ;
   3+ 9971              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9971              ;
   5+ 9971              ; *****************************************************************************************************************************************************************************************
   6+ 9971              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9971
   8+ 9971 7C           calcula_tercio ld a,h
   9+ 9972 E6 18        	and $18
  10+ 9974 CB 2F        	sra a
  11+ 9976 CB 2F        	sra a
  12+ 9978 CB 2F        	sra a
  13+ 997A C9           	ret
  14+ 997B
# file closed: calcula_tercio.asm
1798  997B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 997B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 997B              ;
   3+ 997B              ;
   4+ 997B              ;	CLS.
   5+ 997B              ;
   6+ 997B              ;	Limpia la pantalla y define sus atributos.
   7+ 997B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 997B              ;
   9+ 997B              ;	COLORES: 0 ..... NEGRO
  10+ 997B              ;    		 1 ..... AZUL
  11+ 997B              ; 			 2 ..... ROJO
  12+ 997B              ;			 3 ..... MAGENTA
  13+ 997B              ; 			 4 ..... VERDE
  14+ 997B              ; 			 5 ..... CIAN
  15+ 997B              ;			 6 ..... AMARILLO
  16+ 997B              ; 			 7 ..... BLANCO
  17+ 997B              ;
  18+ 997B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 997B              ;
  20+ 997B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 997B
  22+ 997B
  23+ 997B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 997E 11 01 40     	LD DE,$4001
  25+ 9981 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9984 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9986 ED B0        	LDIR
  28+ 9988 01 FF 02     	LD BC,767
  29+ 998B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 998C ED B0        	LDIR
  31+ 998E C9           	ret
  32+ 998F
# file closed: Cls.asm
1799  998F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 998F              ; ------------------------------------------------------------------------
   2+ 998F              ;
   3+ 998F              ;	30/1/24
   4+ 998F              ;
   5+ 998F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 998F              ;	Fila superior "0", Columna izquierda "0".
   7+ 998F              ;
   8+ 998F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 998F              ;
  10+ 998F              ;	Modifica: A,BC y DE.
  11+ 998F
  12+ 998F 7D           Genera_coordenadas ld a,l
  13+ 9990 E6 1F        	and $1f
  14+ 9992 32 95 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9995
  16+ 9995 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9996 FE 40        	cp $40
  18+ 9998 38 1C        	jr c,4F
  19+ 999A
  20+ 999A CD 71 99     	call calcula_tercio
  21+ 999D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 999E
  23+ 999E 1E 00        	ld e,0
  24+ 99A0 7D           	ld a,l
  25+ 99A1 E6 E0        	and $e0
  26+ 99A3 28 01        	jr z,1F
  27+ 99A5 04           	inc b
  28+ 99A6
  29+ 99A6 04           1 inc b
  30+ 99A7 05           	dec b
  31+ 99A8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 99AA              ;														; _ , salimos.
  33+ 99AA 1C           3 inc e
  34+ 99AB D6 20        	sub 32
  35+ 99AD 20 FB        	jr nz,3B
  36+ 99AF 10 F5        	djnz 1B
  37+ 99B1
  38+ 99B1 7B           2 ld a,e
  39+ 99B2 32 96 89     	ld (Coordenada_y),a
  40+ 99B5 C9           	ret
  41+ 99B6
  42+ 99B6 AF           4 xor a
  43+ 99B7 32 96 89     	ld (Coordenada_y),a
  44+ 99BA C9           	ret
  45+ 99BB
  46+ 99BB              ; ------------------------------------------------------------------------
  47+ 99BB              ;	28/05/23
  48+ 99BB              ;
  49+ 99BB              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 99BB              ;	Fila superior "0", Columna izquierda "0".
  51+ 99BB              ;
  52+ 99BB              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 99BB              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 99BB              ;
  55+ 99BB              ;		DE="$120d"
  56+ 99BB              ;
  57+ 99BB              ;		D, (Coordenada_X), Columnas, $12
  58+ 99BB              ;		E, (Coordenada_y), Filas, $0d
  59+ 99BB              ;
  60+ 99BB              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 99BB
  62+ 99BB              ;	Modifica: A,BC y DE.
  63+ 99BB
  64+ 99BB
  65+ 99BB              Genera_coordenadas_disparo
  66+ 99BB
  67+ 99BB              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 99BB
  69+ 99BB 7D           	ld a,l
  70+ 99BC E6 1F        	and $1f
  71+ 99BE 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 99BF CD 71 99     	call calcula_tercio
  73+ 99C2 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 99C3 1E 00        	ld e,0
  75+ 99C5 7D           	ld a,l
  76+ 99C6 E6 E0        	and $e0
  77+ 99C8 28 01        	jr z,1F
  78+ 99CA 04           	inc b
  79+ 99CB 1C           1 inc e
  80+ 99CC D6 20        	sub 32
  81+ 99CE 20 FB        	jr nz,1B
  82+ 99D0 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 99D2 C9           	ret
  84+ 99D3
# file closed: Genera_coordenadas.asm
1800  99D3              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 99D3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 99D3              ;
   3+ 99D3              ;	11/03/24
   4+ 99D3              ;
   5+ 99D3                  org $80bf
   6+ 80BF
   7+ 80BF              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   8+ 80BF              ;   DE contiene Puntero_objeto.
   9+ 80BF              ;   IX contiene el Puntero de impresión.
  10+ 80BF
  11+ 80BF              Genera_datos_de_impresion
  12+ 80BF
  13+ 80BF ED 73 E1 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  14+ 80C3 31 AD 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  15+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  16+ 80C8
  17+ 80C8 2A E9 89         ld hl,(Scanlines_album_SP)
  18+ 80CB
  19+ 80CB 3E 05            ld a,5
  20+ 80CD 85               add l
  21+ 80CE 6F               ld l,a
  22+ 80CF
  23+ 80CF F9               ld sp,hl
  24+ 80D0 22 E9 89         ld (Scanlines_album_SP),hl
  25+ 80D3
  26+ 80D3 21 00 00         ld hl,0
  27+ 80D6
  28+ 80D6 DD E5            push ix
  29+ 80D8 3B               dec sp
  30+ 80D9 ED 7A            adc hl,sp
  31+ 80DB D5               push de
  32+ 80DC
  33+ 80DC              ; Recuperamos SP.
  34+ 80DC
  35+ 80DC ED 7B E1 89      ld sp,(Stack)
  36+ 80E0
  37+ 80E0 E5               push hl
  38+ 80E1 F1               pop af
  39+ 80E2 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  40+ 80E3
  41+ 80E3              ; Tenemos el encabezado listo.
  42+ 80E3              ; Preparamos registros para generar los scanlines.
  43+ 80E3
  44+ 80E3 DD E5            push ix
  45+ 80E5 E1               pop hl                                          ; 1er scanline en HL.
  46+ 80E6
  47+ 80E6 ED 5B E9 89      ld de,(Scanlines_album_SP)
  48+ 80EA
  49+ 80EA              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  50+ 80EA              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  51+ 80EA
  52+ 80EA 7C               ld a,h
  53+ 80EB FE 50            cp $50
  54+ 80ED 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  55+ 80EF
  56+ 80EF 20 05            jr nz,2F
  57+ 80F1
  58+ 80F1 7D               ld a,l
  59+ 80F2 FE E0            cp $e0
  60+ 80F4 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  61+ 80F6
  62+ 80F6 7D           2 ld a,l
  63+ 80F7 FE C0            cp $c0
  64+ 80F9 D2 8B 81         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  65+ 80FC
  66+ 80FC              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  67+ 80FC
  68+ 80FC CD F8 90         call NextScan
  69+ 80FF EB               ex de,hl
  70+ 8100
  71+ 8100 73               ld (hl),e
  72+ 8101 2C               inc l
  73+ 8102 72               ld (hl),d
  74+ 8103 2C               inc l
  75+ 8104
  76+ 8104 EB               ex de,hl
  77+ 8105
  78+ 8105 CD F8 90         call NextScan
  79+ 8108 EB               ex de,hl
  80+ 8109
  81+ 8109 73               ld (hl),e
  82+ 810A 2C               inc l
  83+ 810B 72               ld (hl),d
  84+ 810C 2C               inc l
  85+ 810D
  86+ 810D EB               ex de,hl
  87+ 810E
  88+ 810E CD F8 90         call NextScan
  89+ 8111 EB               ex de,hl
  90+ 8112
  91+ 8112 73               ld (hl),e
  92+ 8113 2C               inc l
  93+ 8114 72               ld (hl),d
  94+ 8115 2C               inc l
  95+ 8116
  96+ 8116 EB               ex de,hl
  97+ 8117
  98+ 8117 CD F8 90         call NextScan
  99+ 811A EB               ex de,hl
 100+ 811B
 101+ 811B 73               ld (hl),e
 102+ 811C 2C               inc l
 103+ 811D 72               ld (hl),d
 104+ 811E 2C               inc l
 105+ 811F
 106+ 811F EB               ex de,hl
 107+ 8120
 108+ 8120 CD F8 90         call NextScan
 109+ 8123 EB               ex de,hl
 110+ 8124
 111+ 8124 73               ld (hl),e
 112+ 8125 2C               inc l
 113+ 8126 72               ld (hl),d
 114+ 8127 2C               inc l
 115+ 8128
 116+ 8128 EB               ex de,hl
 117+ 8129
 118+ 8129 CD F8 90         call NextScan
 119+ 812C EB               ex de,hl
 120+ 812D
 121+ 812D 73               ld (hl),e
 122+ 812E 2C               inc l
 123+ 812F 72               ld (hl),d
 124+ 8130 2C               inc l
 125+ 8131
 126+ 8131 EB               ex de,hl
 127+ 8132
 128+ 8132 CD F8 90         call NextScan
 129+ 8135 EB               ex de,hl
 130+ 8136
 131+ 8136 73               ld (hl),e
 132+ 8137 2C               inc l
 133+ 8138 72               ld (hl),d
 134+ 8139 2C               inc l
 135+ 813A
 136+ 813A EB               ex de,hl
 137+ 813B
 138+ 813B CD F8 90         call NextScan
 139+ 813E EB               ex de,hl
 140+ 813F
 141+ 813F 73               ld (hl),e
 142+ 8140 2C               inc l
 143+ 8141 72               ld (hl),d
 144+ 8142 2C               inc l
 145+ 8143
 146+ 8143 EB               ex de,hl
 147+ 8144
 148+ 8144 CD F8 90         call NextScan
 149+ 8147 EB               ex de,hl
 150+ 8148
 151+ 8148 73               ld (hl),e
 152+ 8149 2C               inc l
 153+ 814A 72               ld (hl),d
 154+ 814B 2C               inc l
 155+ 814C
 156+ 814C EB               ex de,hl
 157+ 814D
 158+ 814D CD F8 90         call NextScan
 159+ 8150 EB               ex de,hl
 160+ 8151
 161+ 8151 73               ld (hl),e
 162+ 8152 2C               inc l
 163+ 8153 72               ld (hl),d
 164+ 8154 2C               inc l
 165+ 8155
 166+ 8155 EB               ex de,hl
 167+ 8156
 168+ 8156 CD F8 90         call NextScan
 169+ 8159 EB               ex de,hl
 170+ 815A
 171+ 815A 73               ld (hl),e
 172+ 815B 2C               inc l
 173+ 815C 72               ld (hl),d
 174+ 815D 2C               inc l
 175+ 815E
 176+ 815E EB               ex de,hl
 177+ 815F
 178+ 815F CD F8 90         call NextScan
 179+ 8162 EB               ex de,hl
 180+ 8163
 181+ 8163 73               ld (hl),e
 182+ 8164 2C               inc l
 183+ 8165 72               ld (hl),d
 184+ 8166 2C               inc l
 185+ 8167
 186+ 8167 EB               ex de,hl
 187+ 8168
 188+ 8168 CD F8 90         call NextScan
 189+ 816B EB               ex de,hl
 190+ 816C
 191+ 816C 73               ld (hl),e
 192+ 816D 2C               inc l
 193+ 816E 72               ld (hl),d
 194+ 816F 2C               inc l
 195+ 8170
 196+ 8170 EB               ex de,hl
 197+ 8171
 198+ 8171 CD F8 90         call NextScan
 199+ 8174 EB               ex de,hl
 200+ 8175
 201+ 8175 73               ld (hl),e
 202+ 8176 2C               inc l
 203+ 8177 72               ld (hl),d
 204+ 8178 2C               inc l
 205+ 8179
 206+ 8179 EB               ex de,hl
 207+ 817A
 208+ 817A CD F8 90         call NextScan
 209+ 817D EB               ex de,hl
 210+ 817E
 211+ 817E 73               ld (hl),e
 212+ 817F 2C               inc l
 213+ 8180 72               ld (hl),d
 214+ 8181 2C               inc l
 215+ 8182
 216+ 8182              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 217+ 8182
 218+ 8182 22 E9 89         ld (Scanlines_album_SP),hl
 219+ 8185
 220+ 8185              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 221+ 8185
 222+ 8185 08               ex af,af
 223+ 8186
 224+ 8186 F5               push af
 225+ 8187 E1               pop hl
 226+ 8188
 227+ 8188 36 10            ld (hl),16
 228+ 818A
 229+ 818A C9               ret
 230+ 818B
 231+ 818B              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 232+ 818B
 233+ 818B              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 234+ 818B
 235+ 818B 3E 57            ld a,$57
 236+ 818D 94               sub h
 237+ 818E 20 04            jr nz,4F
 238+ 8190
 239+ 8190 0E 01            ld c,1
 240+ 8192 18 17            jr 5F
 241+ 8194
 242+ 8194 47           4 ld b,a
 243+ 8195
 244+ 8195 3E DF            ld a,$df
 245+ 8197 BD               cp l
 246+ 8198 38 04            jr c,1F
 247+ 819A
 248+ 819A 3E 08            ld a,8
 249+ 819C 80               add b
 250+ 819D 47               ld b,a
 251+ 819E
 252+ 819E              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 253+ 819E              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 254+ 819E
 255+ 819E 48           1 ld c,b
 256+ 819F 0C               inc c
 257+ 81A0
 258+ 81A0 CD F8 90     3 call NextScan
 259+ 81A3 EB               ex de,hl
 260+ 81A4
 261+ 81A4 73               ld (hl),e
 262+ 81A5 2C               inc l
 263+ 81A6 72               ld (hl),d
 264+ 81A7 2C               inc l
 265+ 81A8
 266+ 81A8 EB               ex de,hl
 267+ 81A9
 268+ 81A9 10 F5            djnz 3B
 269+ 81AB
 270+ 81AB 08           5 ex af,af
 271+ 81AC F5               push af
 272+ 81AD E1               pop hl
 273+ 81AE
 274+ 81AE 71               ld (hl),c
 275+ 81AF
 276+ 81AF C9               ret
 277+ 81B0
 278+ 81B0              ; -----------------------------------------------------------------------------
 279+ 81B0              ;
 280+ 81B0              ;   21/11/23
 281+ 81B0
 282+ 81B0              Limpia_y_reinicia_Scanlines_album
 283+ 81B0
 284+ 81B0              ;   Limpia Scanlines_album.
 285+ 81B0
 286+ 81B0 2A E9 89         ld hl,(Scanlines_album_SP)
 287+ 81B3 7D               ld a,l
 288+ 81B4 A7               and a
 289+ 81B5 C8               ret z   ;   Salimos si el álbum está vacío.
 290+ 81B6
 291+ 81B6 47               ld b,a
 292+ 81B7 04               inc b
 293+ 81B8
 294+ 81B8 36 00        1 ld (hl),0
 295+ 81BA 2D               dec l
 296+ 81BB 10 FB            djnz 1B
 297+ 81BD
 298+ 81BD              ;   Reinicializa (Scanlines_album_SP).
 299+ 81BD
 300+ 81BD 21 00 80         ld hl,Scanlines_album
 301+ 81C0 22 E9 89         ld (Scanlines_album_SP),hl
 302+ 81C3
 303+ 81C3 C9               ret
 304+ 81C4
 305+ 81C4              ; -----------------------------------------------------------------------------
 306+ 81C4              ;
 307+ 81C4              ;   11/03/24
 308+ 81C4
 309+ 81C4              Pinta_Sprites
 310+ 81C4
 311+ 81C4              ;   Preparamos registros ...
 312+ 81C4
 313+ 81C4 2A E9 89         ld hl,(Scanlines_album_SP)
 314+ 81C7 CD 6A 8B         call Extrae_address
 315+ 81CA
 316+ 81CA 24               inc h
 317+ 81CB 25               dec h
 318+ 81CC C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
 319+ 81CD
 320+ 81CD ED 73 E1 89      ld (Stack),sp
 321+ 81D1
 322+ 81D1 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
 323+ 81D2              ;                                       ; DE se encuentra en los datos del sprite.
 324+ 81D2 2C               inc l
 325+ 81D3 2C               inc l
 326+ 81D4
 327+ 81D4 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
 328+ 81D5
 329+ 81D5 2C               inc l
 330+ 81D6 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
 331+ 81D7
 332+ 81D7              ;   Seleccionamos rutina de impresión:
 333+ 81D7
 334+ 81D7 3E 10            ld a,16
 335+ 81D9 B8               cp b
 336+ 81DA C2 D8 82         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 337+ 81DD
 338+ 81DD              ;   Rutinas:
 339+ 81DD
 340+ 81DD              Pinta_rapido    ;   1520 t/states.
 341+ 81DD
 342+ 81DD E1               pop hl
 343+ 81DE
 344+ 81DE 1A               ld a,(de)
 345+ 81DF AE               xor (hl)
 346+ 81E0 77               ld (hl),a
 347+ 81E1 2C               inc l
 348+ 81E2 1C               inc e
 349+ 81E3 1A               ld a,(de)
 350+ 81E4 AE               xor (hl)
 351+ 81E5 77               ld (hl),a
 352+ 81E6 2C               inc l
 353+ 81E7 1C               inc e
 354+ 81E8 1A               ld a,(de)
 355+ 81E9 AE               xor (hl)
 356+ 81EA 77               ld (hl),a
 357+ 81EB 13               inc de
 358+ 81EC
 359+ 81EC E1               pop hl
 360+ 81ED
 361+ 81ED 1A               ld a,(de)
 362+ 81EE AE               xor (hl)
 363+ 81EF 77               ld (hl),a
 364+ 81F0 2C               inc l
 365+ 81F1 1C               inc e
 366+ 81F2 1A               ld a,(de)
 367+ 81F3 AE               xor (hl)
 368+ 81F4 77               ld (hl),a
 369+ 81F5 2C               inc l
 370+ 81F6 1C               inc e
 371+ 81F7 1A               ld a,(de)
 372+ 81F8 AE               xor (hl)
 373+ 81F9 77               ld (hl),a
 374+ 81FA 13               inc de
 375+ 81FB
 376+ 81FB E1               pop hl
 377+ 81FC
 378+ 81FC 1A               ld a,(de)
 379+ 81FD AE               xor (hl)
 380+ 81FE 77               ld (hl),a
 381+ 81FF 2C               inc l
 382+ 8200 1C               inc e
 383+ 8201 1A               ld a,(de)
 384+ 8202 AE               xor (hl)
 385+ 8203 77               ld (hl),a
 386+ 8204 2C               inc l
 387+ 8205 1C               inc e
 388+ 8206 1A               ld a,(de)
 389+ 8207 AE               xor (hl)
 390+ 8208 77               ld (hl),a
 391+ 8209 13               inc de
 392+ 820A
 393+ 820A E1               pop hl
 394+ 820B
 395+ 820B 1A               ld a,(de)
 396+ 820C AE               xor (hl)
 397+ 820D 77               ld (hl),a
 398+ 820E 2C               inc l
 399+ 820F 1C               inc e
 400+ 8210 1A               ld a,(de)
 401+ 8211 AE               xor (hl)
 402+ 8212 77               ld (hl),a
 403+ 8213 2C               inc l
 404+ 8214 1C               inc e
 405+ 8215 1A               ld a,(de)
 406+ 8216 AE               xor (hl)
 407+ 8217 77               ld (hl),a
 408+ 8218 13               inc de
 409+ 8219
 410+ 8219 E1               pop hl
 411+ 821A
 412+ 821A 1A               ld a,(de)
 413+ 821B AE               xor (hl)
 414+ 821C 77               ld (hl),a
 415+ 821D 2C               inc l
 416+ 821E 1C               inc e
 417+ 821F 1A               ld a,(de)
 418+ 8220 AE               xor (hl)
 419+ 8221 77               ld (hl),a
 420+ 8222 2C               inc l
 421+ 8223 1C               inc e
 422+ 8224 1A               ld a,(de)
 423+ 8225 AE               xor (hl)
 424+ 8226 77               ld (hl),a
 425+ 8227 13               inc de
 426+ 8228
 427+ 8228 E1               pop hl
 428+ 8229
 429+ 8229 1A               ld a,(de)
 430+ 822A AE               xor (hl)
 431+ 822B 77               ld (hl),a
 432+ 822C 2C               inc l
 433+ 822D 1C               inc e
 434+ 822E 1A               ld a,(de)
 435+ 822F AE               xor (hl)
 436+ 8230 77               ld (hl),a
 437+ 8231 2C               inc l
 438+ 8232 1C               inc e
 439+ 8233 1A               ld a,(de)
 440+ 8234 AE               xor (hl)
 441+ 8235 77               ld (hl),a
 442+ 8236 13               inc de
 443+ 8237
 444+ 8237 E1               pop hl
 445+ 8238
 446+ 8238 1A               ld a,(de)
 447+ 8239 AE               xor (hl)
 448+ 823A 77               ld (hl),a
 449+ 823B 2C               inc l
 450+ 823C 1C               inc e
 451+ 823D 1A               ld a,(de)
 452+ 823E AE               xor (hl)
 453+ 823F 77               ld (hl),a
 454+ 8240 2C               inc l
 455+ 8241 1C               inc e
 456+ 8242 1A               ld a,(de)
 457+ 8243 AE               xor (hl)
 458+ 8244 77               ld (hl),a
 459+ 8245 13               inc de
 460+ 8246
 461+ 8246 E1               pop hl
 462+ 8247
 463+ 8247 1A               ld a,(de)
 464+ 8248 AE               xor (hl)
 465+ 8249 77               ld (hl),a
 466+ 824A 2C               inc l
 467+ 824B 1C               inc e
 468+ 824C 1A               ld a,(de)
 469+ 824D AE               xor (hl)
 470+ 824E 77               ld (hl),a
 471+ 824F 2C               inc l
 472+ 8250 1C               inc e
 473+ 8251 1A               ld a,(de)
 474+ 8252 AE               xor (hl)
 475+ 8253 77               ld (hl),a
 476+ 8254 13               inc de
 477+ 8255
 478+ 8255 E1               pop hl
 479+ 8256
 480+ 8256 1A               ld a,(de)
 481+ 8257 AE               xor (hl)
 482+ 8258 77               ld (hl),a
 483+ 8259 2C               inc l
 484+ 825A 1C               inc e
 485+ 825B 1A               ld a,(de)
 486+ 825C AE               xor (hl)
 487+ 825D 77               ld (hl),a
 488+ 825E 2C               inc l
 489+ 825F 1C               inc e
 490+ 8260 1A               ld a,(de)
 491+ 8261 AE               xor (hl)
 492+ 8262 77               ld (hl),a
 493+ 8263 13               inc de
 494+ 8264
 495+ 8264 E1               pop hl
 496+ 8265
 497+ 8265 1A               ld a,(de)
 498+ 8266 AE               xor (hl)
 499+ 8267 77               ld (hl),a
 500+ 8268 2C               inc l
 501+ 8269 1C               inc e
 502+ 826A 1A               ld a,(de)
 503+ 826B AE               xor (hl)
 504+ 826C 77               ld (hl),a
 505+ 826D 2C               inc l
 506+ 826E 1C               inc e
 507+ 826F 1A               ld a,(de)
 508+ 8270 AE               xor (hl)
 509+ 8271 77               ld (hl),a
 510+ 8272 13               inc de
 511+ 8273
 512+ 8273 E1               pop hl
 513+ 8274
 514+ 8274 1A               ld a,(de)
 515+ 8275 AE               xor (hl)
 516+ 8276 77               ld (hl),a
 517+ 8277 2C               inc l
 518+ 8278 1C               inc e
 519+ 8279 1A               ld a,(de)
 520+ 827A AE               xor (hl)
 521+ 827B 77               ld (hl),a
 522+ 827C 2C               inc l
 523+ 827D 1C               inc e
 524+ 827E 1A               ld a,(de)
 525+ 827F AE               xor (hl)
 526+ 8280 77               ld (hl),a
 527+ 8281 13               inc de
 528+ 8282
 529+ 8282 E1               pop hl
 530+ 8283
 531+ 8283 1A               ld a,(de)
 532+ 8284 AE               xor (hl)
 533+ 8285 77               ld (hl),a
 534+ 8286 2C               inc l
 535+ 8287 1C               inc e
 536+ 8288 1A               ld a,(de)
 537+ 8289 AE               xor (hl)
 538+ 828A 77               ld (hl),a
 539+ 828B 2C               inc l
 540+ 828C 1C               inc e
 541+ 828D 1A               ld a,(de)
 542+ 828E AE               xor (hl)
 543+ 828F 77               ld (hl),a
 544+ 8290 13               inc de
 545+ 8291
 546+ 8291 E1               pop hl
 547+ 8292
 548+ 8292 1A               ld a,(de)
 549+ 8293 AE               xor (hl)
 550+ 8294 77               ld (hl),a
 551+ 8295 2C               inc l
 552+ 8296 1C               inc e
 553+ 8297 1A               ld a,(de)
 554+ 8298 AE               xor (hl)
 555+ 8299 77               ld (hl),a
 556+ 829A 2C               inc l
 557+ 829B 1C               inc e
 558+ 829C 1A               ld a,(de)
 559+ 829D AE               xor (hl)
 560+ 829E 77               ld (hl),a
 561+ 829F 13               inc de
 562+ 82A0
 563+ 82A0 E1               pop hl
 564+ 82A1
 565+ 82A1 1A               ld a,(de)
 566+ 82A2 AE               xor (hl)
 567+ 82A3 77               ld (hl),a
 568+ 82A4 2C               inc l
 569+ 82A5 1C               inc e
 570+ 82A6 1A               ld a,(de)
 571+ 82A7 AE               xor (hl)
 572+ 82A8 77               ld (hl),a
 573+ 82A9 2C               inc l
 574+ 82AA 1C               inc e
 575+ 82AB 1A               ld a,(de)
 576+ 82AC AE               xor (hl)
 577+ 82AD 77               ld (hl),a
 578+ 82AE 13               inc de
 579+ 82AF
 580+ 82AF E1               pop hl
 581+ 82B0
 582+ 82B0 1A               ld a,(de)
 583+ 82B1 AE               xor (hl)
 584+ 82B2 77               ld (hl),a
 585+ 82B3 2C               inc l
 586+ 82B4 1C               inc e
 587+ 82B5 1A               ld a,(de)
 588+ 82B6 AE               xor (hl)
 589+ 82B7 77               ld (hl),a
 590+ 82B8 2C               inc l
 591+ 82B9 1C               inc e
 592+ 82BA 1A               ld a,(de)
 593+ 82BB AE               xor (hl)
 594+ 82BC 77               ld (hl),a
 595+ 82BD 13               inc de
 596+ 82BE
 597+ 82BE E1               pop hl
 598+ 82BF
 599+ 82BF 1A               ld a,(de)
 600+ 82C0 AE               xor (hl)
 601+ 82C1 77               ld (hl),a
 602+ 82C2 2C               inc l
 603+ 82C3 1C               inc e
 604+ 82C4 1A               ld a,(de)
 605+ 82C5 AE               xor (hl)
 606+ 82C6 77               ld (hl),a
 607+ 82C7 2C               inc l
 608+ 82C8 1C               inc e
 609+ 82C9 1A               ld a,(de)
 610+ 82CA AE               xor (hl)
 611+ 82CB 77               ld (hl),a
 612+ 82CC 13               inc de
 613+ 82CD
 614+ 82CD ED 73 E9 89  2 ld (Scanlines_album_SP),sp
 615+ 82D1 ED 7B E1 89      ld sp,(Stack)
 616+ 82D5 C3 C4 81         jp Pinta_Sprites
 617+ 82D8
 618+ 82D8              Pinta_lento
 619+ 82D8
 620+ 82D8 E1           1 pop hl
 621+ 82D9
 622+ 82D9 1A               ld a,(de)
 623+ 82DA AE               xor (hl)
 624+ 82DB 77               ld (hl),a
 625+ 82DC 2C               inc l
 626+ 82DD 1C               inc e
 627+ 82DE 1A               ld a,(de)
 628+ 82DF AE               xor (hl)
 629+ 82E0 77               ld (hl),a
 630+ 82E1 2C               inc l
 631+ 82E2 1C               inc e
 632+ 82E3 1A               ld a,(de)
 633+ 82E4 AE               xor (hl)
 634+ 82E5 77               ld (hl),a
 635+ 82E6 13               inc de
 636+ 82E7
 637+ 82E7 10 EF            djnz 1B
 638+ 82E9
 639+ 82E9 18 E2            jr 2B
# file closed: Genera_datos_de_impresion.asm
1801  82EB
1802  82EB              	SAVESNA "Pruebas.sna", START
1803  82EB
1804  82EB
1805  82EB
1806  82EB
# file closed: Banco_de_pruebas.asm
