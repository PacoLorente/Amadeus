# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B3 8E     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 12 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 16 8A        	defw End_Snapshot_1
 267+ 8500 1A 8A        	defw End_Snapshot_2
 268+ 8502 1E 8A        	defw End_Snapshot_3
 269+ 8504 14 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 18 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1C 8A        	defw End_Snapshot_disparos_2
 272+ 850A 20 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  20  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 A7 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 A7 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  21  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BC 88        	defw Nivel_2
   7+ 88AD C9 88        	defw Nivel_3
   8+ 88AF D9 88        	defw Nivel_4
   9+ 88B1 EB 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 04           Nivel_1 db 4	                                ; Nº de entidades.
  19+ 88B8 01 01 01 01  	db 1,1,1,1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C1 01 02
  22+ 88C3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C7 01 02
  23+ 88C9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CE 01
  25+ 88CF 03 01 01 01  	db 3,1,1,1,1
  25+ 88D3 01
  26+ 88D4 03 01 01 01  	db 3,1,1,1,1
  26+ 88D8 01
  27+ 88D9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DE 01
  29+ 88DF 04 01 01 01  	db 4,1,1,1,1
  29+ 88E3 01
  30+ 88E4 04 01 01 01  	db 4,1,1,1,1
  30+ 88E8 01
  31+ 88E9 02 03        	db 2,3
  32+ 88EB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88F0 01
  34+ 88F1 05 01 01 01  	db 5,1,1,1,1
  34+ 88F5 01
  35+ 88F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88FA 01
  36+ 88FB 05 01 01 01  	db 5,1,1,1,1
  36+ 88FF 01
  37+ 8900
  38+ 8900              ;---------------------------------------------------------------------------------------------------------------
  39+ 8900              ;
  40+ 8900              ;   21/5/23
  41+ 8900              ;
  42+ 8900              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8900              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8900              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8900              ;	_en la caja DRAW correspondiente.
  46+ 8900              ;
  47+ 8900              ;	MODIFICA: HL,DE y A.
  48+ 8900              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8900
  50+ 8900              Inicializa_Punteros_de_nivel
  51+ 8900
  52+ 8900 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8903 22 4D 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8906 CD 89 8D     	call Extrae_address
  55+ 8909 7E           	ld a,(hl)
  56+ 890A 32 02 8A     	ld (Numero_de_entidades),a
  57+ 890D 23           	inc hl
  58+ 890E 22 4F 8A     	ld (Datos_de_nivel),hl
  59+ 8911 C9           	ret
  60+ 8912
  61+ 8912              ;---------------------------------------------------------------------------------------------------------------
  62+ 8912              ;
  63+ 8912              ;   13/5/23
  64+ 8912              ;
  65+ 8912              ;	Destruye A,BC,HL,DE
  66+ 8912
  67+ 8912              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8912              ;	_del juego.
  69+ 8912
  70+ 8912              Prepara_cajas
  71+ 8912
  72+ 8912              ; Preparamos los punteros de las cajas.
  73+ 8912
  74+ 8912 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8915 CD 89 8D     	call Extrae_address
  76+ 8918 CD 55 89     	call Avanza_caja
  77+ 891B
  78+ 891B CD 99 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891E
  80+ 891E 2A 4F 8A     	ld hl,(Datos_de_nivel)
  81+ 8921
  82+ 8921              ; HL está en los datos del nivel correspondiente.
  83+ 8921              ; B actuará como contador de cajas.
  84+ 8921
  85+ 8921 C5           1 push bc
  86+ 8922
  87+ 8922 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8923 CD 46 89     	call PreparaBC
  89+ 8926
  90+ 8926 21 85 88     	ld hl,Indice_de_entidades
  91+ 8929 CD 4E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892C 22 08 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892F
  94+ 892F CD 5F 89     	call Datos_de_entidad_a_caja
  95+ 8932
  96+ 8932 2A 00 8A     	ld hl,(Indice_restore_caja)
  97+ 8935 CD 89 8D     	call Extrae_address
  98+ 8938 CD 55 89     	call Avanza_caja
  99+ 893B
 100+ 893B 2A 4F 8A     	ld hl,(Datos_de_nivel)
 101+ 893E 23           	inc hl
 102+ 893F 22 4F 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8942
 104+ 8942 C1           	pop bc
 105+ 8943 10 DC        	djnz 1B
 106+ 8945 C9           	ret
 107+ 8946
 108+ 8946 CB 27        PreparaBC sla a
 109+ 8948 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 894A 4F           	ld c,a
 111+ 894B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894D C9           	ret
 113+ 894E
 114+ 894E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894F ED 4A        	adc hl,bc
 116+ 8951 CD 89 8D     	call Extrae_address
 117+ 8954 C9           	ret
 118+ 8955
 119+ 8955 22 FC 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8958 13           	inc de
 121+ 8959 13           	inc de
 122+ 895A EB           	ex de,hl
 123+ 895B 22 00 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895E C9           	ret
 125+ 895F
 126+ 895F              Datos_de_entidad_a_caja
 127+ 895F
 128+ 895F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895F
 130+ 895F
 131+ 895F ED 5B FC 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8963
 133+ 8963 01 02 00     	ld bc,2
 134+ 8966 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8968
 136+ 8968 01 07 00     	ld bc,7
 137+ 896B CD 93 89     	call Situa_DE
 138+ 896E
 139+ 896E 01 05 00     	ld bc,5
 140+ 8971 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8973
 142+ 8973 01 04 00     	ld bc,4
 143+ 8976 CD 93 89     	call Situa_DE
 144+ 8979
 145+ 8979 01 07 00     	ld bc,7
 146+ 897C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897E
 148+ 897E 01 18 00     	ld bc,24
 149+ 8981 CD 93 89     	call Situa_DE
 150+ 8984
 151+ 8984 01 02 00     	ld bc,2
 152+ 8987 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8989
 154+ 8989              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8989              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8989
 157+ 8989 01 0F 00     	ld bc,15									; *****
 158+ 898C CD 93 89     	call Situa_DE
 159+ 898F
 160+ 898F 3E 03        	ld a,3
 161+ 8991 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8992
 163+ 8992 C9           	ret
 164+ 8993
 165+ 8993 EB           Situa_DE ex de,hl
 166+ 8994 A7           	and a
 167+ 8995 ED 4A        	adc hl,bc
 168+ 8997 EB           	ex de,hl
 169+ 8998 C9           	ret
 170+ 8999
 171+ 8999              ;---------------------------------------------------------------------------------------------------------------
 172+ 8999              ;
 173+ 8999              ;	21/5/23
 174+ 8999              ;
 175+ 8999              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8999              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8999              ;
 178+ 8999              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8999              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8999              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8999              ;
 182+ 8999              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8999              ;	MODIFICA: A y B.
 184+ 8999              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8999
 186+ 8999              Admin_num_entidades
 187+ 8999
 188+ 8999              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8999
 190+ 8999 3A 02 8A     	ld a,(Numero_de_entidades)
 191+ 899C A7           	and a
 192+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899D              ;	jr z,$
 194+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899D
 196+ 899D 20 03        	jr nz,3F
 197+ 899F
 198+ 899F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899F
 200+ 899F CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A2
 202+ 89A2 3A 02 8A     3 ld a,(Numero_de_entidades)
 203+ 89A5 FE 0A        	cp 10
 204+ 89A7 38 08        	jr c,1F
 205+ 89A9
 206+ 89A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 89A9              ; Actualizamos variables.
 208+ 89A9
 209+ 89A9 3E 0A        	ld a,10
 210+ 89AB 32 03 8A     	ld (Numero_parcial_de_entidades),a
 211+ 89AE 47           	ld b,a
 212+ 89AF 18 04        	jr 2F
 213+ 89B1
 214+ 89B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 89B1              ; (Numero_de_entidades)="0".
 216+ 89B1
 217+ 89B1 32 03 8A     1 ld (Numero_parcial_de_entidades),a
 218+ 89B4 47           	ld b,a
 219+ 89B5 C9           2 ret
# file closed: Niveles.asm
  22  89B6
  23  89B6              ; ******************************************************************************************************************************************************************************************
  24  89B6              ; Constantes.
  25  89B6              ; ******************************************************************************************************************************************************************************************
  26  89B6              ;
  27  89B6              ; 25/05/23
  28  89B6              ;
  29  89B6              ; Constantes generales.
  30  89B6              ;
  31  89B6
  32  89B6              Sprite_vacio equ $f000
  33  89B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  34  89B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  35  89B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  36  89B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  37  89B6
  38  89B6              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  39  89B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  40  89B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  41  89B6              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  42  89B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  43  89B6              ;                               				        ; De momento situamos este almacén en $7060.
  44  89B6              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  45  89B6              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  46  89B6              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  47  89B6              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  48  89B6              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  49  89B6              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  50  89B6
  51  89B6              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  52  89B6
  53  89B6              ; ******************************************************************************************************************************************************************************************
  54  89B6              ; Variables.
  55  89B6              ; ******************************************************************************************************************************************************************************************
  56  89B6              ;
  57  89B6              ; 28/07/23
  58  89B6              ;
  59  89B6              ; Variables de DRAW. (Motor principal).
  60  89B6              ;
  61  89B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  62  89B6
  63  89B6 00           Filas db 0												; Filas. [DRAW]
  64  89B7 00           Columns db 0  											; Nº de columnas. [DRAW]
  65  89B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  66  89BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  67  89BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  68  89BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  69  89BE
  70  89BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  71  89BE
  72  89BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  73  89BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  74  89BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  75  89BF 00           Attr db 0												; Atributos de la entidad:
  76  89C0
  77  89C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  78  89C0              ;
  79  89C0              ;	COLORES: 0 ..... NEGRO
  80  89C0              ;    		 1 ..... AZUL
  81  89C0              ; 			 2 ..... ROJO
  82  89C0              ;			 3 ..... MAGENTA
  83  89C0              ; 			 4 ..... VERDE
  84  89C0              ; 			 5 ..... CIAN
  85  89C0              ;			 6 ..... AMARILLO
  86  89C0              ; 			 7 ..... BLANCO
  87  89C0
  88  89C0 00 00        Indice_Sprite_der defw 0
  89  89C2 00 00        Indice_Sprite_izq defw 0
  90  89C4 00 00        Puntero_DESPLZ_der defw 0
  91  89C6 00 00        Puntero_DESPLZ_izq defw 0
  92  89C8
  93  89C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  94  89CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  95  89CB
  96  89CB              ; Variables de objeto. (Características).
  97  89CB
  98  89CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  99  89CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 100  89CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 101  89CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 102  89CF
 103  89CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 104  89D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 105  89D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 106  89D0
 107  89D0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89D2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  89D4 00 00        	defw 0
 110  89D6 00 00 00 00  	db 0,0,0,0
 111  89DA
 112  89DA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 113  89DC 00 00        	defw 0
 114  89DE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 115  89E0 00 00 00 00  	db 0,0,0,0
 116  89E4
 117  89E4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 118  89E4
 119  89E4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 120  89E5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 121  89E5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 122  89E5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 123  89E5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 124  89E5              ;
 125  89E5              ; 														DESCRIPCIÖN:
 126  89E5              ;
 127  89E5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 128  89E5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 129  89E5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 130  89E5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 131  89E5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 132  89E5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 133  89E5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 134  89E5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 135  89E5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 136  89E5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 137  89E5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 138  89E5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 139  89E5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 140  89E5              ;
 141  89E5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 142  89E5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 143  89E5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 144  89E5
 145  89E5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 146  89E6
 147  89E6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 148  89E6
 149  89E6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 150  89E7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 151  89E9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 152  89EB 00 00        Puntero_indice_mov_bucle defw 0							;
 153  89ED              ;
 154  89ED              ;
 155  89ED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 156  89EE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 157  89EE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 158  89EE 00           Incrementa_puntero_backup db 0
 159  89EF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 160  89F0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 161  89F0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 162  89F1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 163  89F2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 164  89F3              ;
 165  89F3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 166  89F3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 167  89F3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 168  89F3              ;
 169  89F3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 170  89F3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 171  89F3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 172  89F3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 173  89F3              ;
 174  89F3              ;														;	"$ff" ..... Bucle infinito de repetición.
 175  89F3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 176  89F3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 177  89F3
 178  89F3
 179  89F3              ; Variables de funcionamiento. [DRAW].
 180  89F3
 181  89F3 00           Columnas db 0
 182  89F4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 183  89F6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 184  89F6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F7
 186  89F7              ; variables de control general.
 187  89F7
 188  89F7 00           Ctrl_2 db 0
 189  89F8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 190  89F8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 191  89F8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 192  89F8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 193  89F8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 194  89F8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 195  89F8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 196  89F8              ;
 197  89F8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 198  89F8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 199  89F8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 200  89F8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 201  89F8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 202  89F8
 203  89F8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 204  89F9
 205  89F9              ;! 67 Bytes por entidad.
 206  89F9
 207  89F9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 208  89F9              ;					         		---------;      ;---------
 209  89F9
 210  89F9
 211  89F9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 212  89F9
 213  89F9 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 214  89FA
 215  89FA              ;														DESCRIPCIÓN:
 216  89FA              ;
 217  89FA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 218  89FA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 219  89FA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 220  89FA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 221  89FA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 222  89FA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 223  89FA
 224  89FA              ;														BIT 3, Recarga de nueva oleada.
 225  89FA              ;														BIT 4, Recarga de nueva oleada.
 226  89FA              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 227  89FA
 228  89FA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 229  89FC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 230  89FC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 231  89FC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 232  89FC
 233  89FC
 234  89FC
 235  89FC              ; Gestión de ENTIDADES y CAJAS.
 236  89FC
 237  89FC 00 00        Puntero_store_caja defw 0
 238  89FE 00 00        Puntero_restore_caja defw 0
 239  8A00 00 00        Indice_restore_caja defw 0
 240  8A02 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 241  8A03 00           Numero_parcial_de_entidades db 0
 242  8A04 00           Entidades_en_curso db 0									; ..... ..... .....
 243  8A05 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 244  8A06              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 245  8A06              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 246  8A06              ;														; _ (Numero_de_malotes)="0".
 247  8A06 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 248  8A08 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 249  8A0A              ;														; _ puntero (Indice_entidades).
 250  8A0A
 251  8A0A
 252  8A0A              ;---------------------------------------------------------------------------------------------------------------
 253  8A0A              ;
 254  8A0A              ;	9/8/23
 255  8A0A              ;
 256  8A0A              ;	Álbumes.
 257  8A0A
 258  8A0A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 259  8A0C              ;														; _variable para almacenar lo posición del puntero_
 260  8A0C              ; 														; _de pila, SP.
 261  8A0C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 262  8A0E              ;														; La utiliza la rutina [Extrae_foto_registros].
 263  8A0E 00 00        Stack_snapshot defw 0
 264  8A10 00 00        Stack_snapshot_disparos defw 0
 265  8A12
 266  8A12 00 00        End_Snapshot defw 0
 267  8A14              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 268  8A14 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 269  8A16              ;														; _el snapshot de los registros del siguiente disparo.
 270  8A16              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 271  8A16 00 00        End_Snapshot_1 defw 0
 272  8A18 00 00        End_Snapshot_disparos_1 defw 0
 273  8A1A 00 00        End_Snapshot_2 defw 0
 274  8A1C 00 00        End_Snapshot_disparos_2 defw 0
 275  8A1E 00 00        End_Snapshot_3 defw 0
 276  8A20 00 00        End_Snapshot_disparos_3 defw 0
 277  8A22
 278  8A22 00 00        Puntero_indice_album_de_fotos defw 0
 279  8A24 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 280  8A26
 281  8A26 00 00        Puntero_indice_End_Snapshot defw 0
 282  8A28 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 283  8A2A 00 00        Puntero_de_End_Snapshot defw 0
 284  8A2C 00 00        Puntero_de_End_Snapshot_disparos defw 0
 285  8A2E
 286  8A2E              ;---------------------------------------------------------------------------------------------------------------
 287  8A2E
 288  8A2E              ; Gestión de Disparos.
 289  8A2E
 290  8A2E 00           Numero_de_disparotes db 0
 291  8A2F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 292  8A31 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 293  8A33 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 294  8A34              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 295  8A34              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 296  8A34 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 297  8A36              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 298  8A36              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 299  8A36              ;														; _produzca colisión.
 300  8A36 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 301  8A38              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 302  8A38 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 303  8A3B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 304  8A3B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8A3E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 306  8A3E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 307  8A40 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 308  8A41
 309  8A41              ;---------------------------------------------------------------------------------------------------------------
 310  8A41
 311  8A41              ; Relojes y temporizaciones.
 312  8A41
 313  8A41 00           Contador_de_frames db 0
 314  8A42 00           Contador_de_frames_2 db 0
 315  8A43
 316  8A43 04           Clock_explosion db 4
 317  8A44 1E           Clock_Entidades_en_curso db 30
 318  8A45 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 319  8A46              ;														; Repite la oleada de entidades.
 320  8A46 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 321  8A47 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 322  8A48 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 323  8A49
 324  8A49 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 325  8A4A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 326  8A4B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 327  8A4C
 328  8A4C              ;---------------------------------------------------------------------------------------------------------------
 329  8A4C
 330  8A4C              ; Gestión de NIVELES.
 331  8A4C
 332  8A4C 00           Nivel db 0												; Nivel actual del juego.
 333  8A4D 00 00        Puntero_indice_NIVELES defw 0
 334  8A4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 335  8A51              ; 														; _ que definen el NIVEL.
 336  8A51              ; Y todo comienza aquí .....
 337  8A51              ;
 338  8A51              ; Rutina principal *************************************************************************************************************************************************************************
 339  8A51              ;
 340  8A51              ;	14/11/22
 341  8A51
 342  8A51              START
 343  8A51
 344  8A51 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 345  8A54 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 346  8A56 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 347  8A58 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 348  8A5A F3           	DI
 349  8A5B
 350  8A5B 3E 07        	ld a,%00000111
 351  8A5D CD E3 99     	call Cls
 352  8A60
 353  8A60 CD 62 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 354  8A63
 355  8A63              ; INICIALIZACIÓN.
 356  8A63
 357  8A63 CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 358  8A66
 359  8A66 CD 12 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 360  8A69
 361  8A69 CD D5 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 362  8A6C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 363  8A6C CD EB 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 364  8A6F              ;													     ; _ malotes antes de guardar ninguna foto.
 365  8A6F              ; ----------
 366  8A6F
 367  8A6F CD 12 8E     	call Restore_entidad
 368  8A72
 369  8A72 21 03 8A     	ld hl,Numero_parcial_de_entidades
 370  8A75 46           	ld b,(hl)
 371  8A76 04           	inc b
 372  8A77 05           	dec b
 373  8A78 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 374  8A7A
 375  8A7A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 376  8A7A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 377  8A7A              ;	Pintamos el resto de entidades:
 378  8A7A
 379  8A7A              ;	INICIA ENTIDADES !!!!!
 380  8A7A
 381  8A7A C5           1 push bc  												; Guardo el contador de entidades.
 382  8A7B
 383  8A7B CD 7C 8C     	call Inicia_entidad
 384  8A7E
 385  8A7E C1           	pop bc
 386  8A7F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 387  8A81
 388  8A81              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 389  8A81              ; (Esto se dá cuando se inicia una nueva oleada).
 390  8A81
 391  8A81 3A F9 89     	ld a,(Ctrl_1)
 392  8A84 CB 5F        	bit 3,a
 393  8A86 20 18        	jr nz,5F											; Loop
 394  8A88
 395  8A88              ; 	INICIA AMADEUS !!!!!
 396  8A88
 397  8A88 CD 39 8E     3 call Restore_Amadeus
 398  8A8B CD 8F 8D     	call Inicia_Puntero_objeto
 399  8A8E CD 19 94     	call Draw
 400  8A91 CD A0 7F     	call Guarda_foto_registros
 401  8A94 11 A4 85     	ld de,Amadeus_db
 402  8A97 CD 4B 8E     	call Store_Amadeus
 403  8A9A
 404  8A9A              ; 	INICIA DISPAROS !!!!!
 405  8A9A
 406  8A9A CD 4B 8D     	call Inicia_Puntero_Disparo_Entidades
 407  8A9D CD 52 8D     	call Inicia_Puntero_Disparo_Amadeus
 408  8AA0
 409  8AA0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 410  8AA0
 411  8AA0 CD D5 8C     5 call Inicia_punteros_de_cajas
 412  8AA3 CD 12 8E     	call Restore_entidad
 413  8AA6
 414  8AA6 3A F9 89     	ld a,(Ctrl_1)
 415  8AA9 CB 5F        	bit 3,a
 416  8AAB 28 0A        	jr z,6F
 417  8AAD
 418  8AAD              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 419  8AAD
 420  8AAD 21 F9 89     	ld hl,Ctrl_1
 421  8AB0 CB 9E        	res 3,(hl)
 422  8AB2 CD 59 8D     	call Calcula_numero_de_malotes
 423  8AB5 18 0A        	jr Main
 424  8AB7
 425  8AB7              ; ----------
 426  8AB7
 427  8AB7 3A 03 8A     6 ld a,(Numero_parcial_de_entidades)
 428  8ABA 3C           	inc a
 429  8ABB 32 05 8A     	ld (Numero_de_malotes),a
 430  8ABE
 431  8ABE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 432  8ABE              ; _ tenemos calculado (Numero_de_malotes).
 433  8ABE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 434  8ABE              ; _ para situarnos en el siguiente album.
 435  8ABE
 436  8ABE CD 1C 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 437  8AC1
 438  8AC1              ; ------------------------------------
 439  8AC1
 440  8AC1              Main
 441  8AC1
 442  8AC1 FB           	ei ; Interrupciones habilitadas.
 443  8AC2
 444  8AC2              ; -----------------------------------------------------------------------
 445  8AC2              ;
 446  8AC2              ;	3/8/23
 447  8AC2
 448  8AC2 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 449  8AC5 47           	ld b,a
 450  8AC6 3A 41 8A     	ld a,(Contador_de_frames)
 451  8AC9 B8           	cp b
 452  8ACA 20 18        	jr nz,13F
 453  8ACC
 454  8ACC 3A 03 8A     	ld a,(Numero_parcial_de_entidades)
 455  8ACF 47           	ld b,a
 456  8AD0 3A 04 8A     	ld a,(Entidades_en_curso)
 457  8AD3 B8           	cp b
 458  8AD4 28 0E        	jr z,13F
 459  8AD6 30 0C        	jr nc,13F
 460  8AD8
 461  8AD8 3C           	inc a
 462  8AD9 32 04 8A     	ld (Entidades_en_curso),a
 463  8ADC
 464  8ADC 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 465  8ADF
 466  8ADF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 467  8ADF              ;! _ IMPREDECIBLE !!!!
 468  8ADF
 469  8ADF C6 64        	add 100
 470  8AE1 32 44 8A     	ld (Clock_Entidades_en_curso),a
 471  8AE4
 472  8AE4              ; Habilita disparos.
 473  8AE4
 474  8AE4 21 46 8A     13 ld hl,Disparo_Amadeus
 475  8AE7 11 48 8A     	ld de,CLOCK_repone_disparo_Amadeus
 476  8AEA CD A8 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 477  8AED
 478  8AED 21 49 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 479  8AF0 11 4B 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 480  8AF3 CD A8 A0     	call Habilita_disparos
 481  8AF6
 482  8AF6              ; COLISIONES.
 483  8AF6
 484  8AF6 CD FB 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 485  8AF9
 486  8AF9              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 487  8AF9              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 488  8AF9              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 489  8AF9
 490  8AF9 AF           	xor a
 491  8AFA 32 33 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 492  8AFD
 493  8AFD CD D5 8C     	call Inicia_punteros_de_cajas
 494  8B00 CD 12 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 495  8B03              ; 														; _ en DRAW.
 496  8B03 3A B6 89     	ld a,(Filas)
 497  8B06 A7           	and a
 498  8B07 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 499  8B09 CD 24 8E     	call Incrementa_punteros_de_cajas
 500  8B0C 18 F2        	jr 12B
 501  8B0E
 502  8B0E              ; ---------------------------------------------------------------------------------------
 503  8B0E
 504  8B0E 3A 03 8A     10 ld a,(Numero_parcial_de_entidades)
 505  8B11 47               ld b,a
 506  8B12 A7           	and a
 507  8B13 20 14        	jr nz,11F
 508  8B15
 509  8B15 21 F9 89     	ld hl,Ctrl_1
 510  8B18 CB 66        	bit 4,(hl)
 511  8B1A C2 A6 8B     	jp nz,16F
 512  8B1D
 513  8B1D 21 F9 89     	ld hl,Ctrl_1
 514  8B20 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 515  8B22
 516  8B22 3A 41 8A     	ld a,(Contador_de_frames)
 517  8B25 3C           	inc a
 518  8B26 32 45 8A     	ld (Activa_recarga_cajas),a
 519  8B29
 520  8B29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 521  8B29
 522  8B29 3A 04 8A     11 ld a,(Entidades_en_curso)
 523  8B2C A7           	and a
 524  8B2D CA A6 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 525  8B30 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 526  8B31
 527  8B31              ; Código que ejecutamos con cada entidad:
 528  8B31              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 529  8B31
 530  8B31 C5           15 push bc 												; Nº de entidades en curso.
 531  8B32
 532  8B32              ; Impacto ???
 533  8B32
 534  8B32 3A CF 89     	ld a,(Impacto)
 535  8B35 A7           	and a
 536  8B36 28 2D        	jr z,8F
 537  8B38
 538  8B38              ; Hay Impacto en esta entidad.
 539  8B38
 540  8B38 21 43 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 541  8B3B 35           	dec (hl)
 542  8B3C 20 62        	jr nz,17F
 543  8B3E
 544  8B3E              ;! Velocidad de la animación de la explosión.
 545  8B3E
 546  8B3E 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 547  8B40              ;														; _,(velocidad de la explosión).
 548  8B40 CD 8C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 549  8B43
 550  8B43              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 551  8B43
 552  8B43 3A F7 89     	ld a,(Ctrl_2)
 553  8B46 CB 4F        	bit 1,a
 554  8B48 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 555  8B4A
 556  8B4A              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 557  8B4A
 558  8B4A 3A BE 89     	ld a,(CTRL_DESPLZ)
 559  8B4D A7           	and a
 560  8B4E 20 08        	jr nz,18F
 561  8B50
 562  8B50 21 84 84     	ld hl,Indice_Explosion_2x2-2
 563  8B53 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 564  8B56 18 06        	jr 19F
 565  8B58
 566  8B58 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 567  8B5B 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 568  8B5E
 569  8B5E 21 F7 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 570  8B61 CB CE        	set 1,(hl)
 571  8B63 18 22        	jr 7F
 572  8B65
 573  8B65              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 574  8B65              ; _con las coordenadas de la entidad almacenada en DRAW.
 575  8B65
 576  8B65 3A F9 89     8 ld a,(Ctrl_1)
 577  8B68 CB 57        	bit 2,a
 578  8B6A 28 1B        	jr z,7F
 579  8B6C
 580  8B6C 2A 36 8A     	ld hl,(Coordenadas_disparo_certero)
 581  8B6F EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 582  8B70              ;														; E contiene la coordenada_X del disparo.
 583  8B70 2A BC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 584  8B73              ;														; H FILA, (Coordenada_y de la entidad).
 585  8B73 A7           	and a
 586  8B74 ED 52        	sbc hl,de
 587  8B76
 588  8B76 CD 32 93     	call Determina_resultado_comparativa
 589  8B79
 590  8B79 78           	ld a,b
 591  8B7A A7           	and a
 592  8B7B 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 593  8B7D
 594  8B7D              ; ----- ----- -----
 595  8B7D
 596  8B7D 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 597  8B7F 32 CF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 598  8B82
 599  8B82 21 F9 89     	ld hl,Ctrl_1
 600  8B85 CB 96        	res 2,(hl)
 601  8B87
 602  8B87 CD FE 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 603  8B8A
 604  8B8A 3A E4 89     	ld a,(Ctrl_0)
 605  8B8D CB 67        	bit 4,a
 606  8B8F 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 607  8B91
 608  8B91              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 609  8B91              ; [[[
 610  8B91 CD AD 8E     	call Detecta_disparo_entidad
 611  8B94              ; ]]]
 612  8B94 CD 9C 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 613  8B97
 614  8B97 21 E4 89     	ld hl,Ctrl_0
 615  8B9A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 616  8B9C AF           	xor a
 617  8B9D 32 E5 89     	ld (Obj_dibujado),a
 618  8BA0
 619  8BA0 CD D7 8D     17 call Store_Restore_cajas
 620  8BA3
 621  8BA3 C1           	pop bc
 622  8BA4 10 8B        	djnz 15B
 623  8BA6
 624  8BA6              ; ------------------------------------
 625  8BA6
 626  8BA6              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 627  8BA6              ; Hemos gestionado todas las unidades.
 628  8BA6              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 629  8BA6
 630  8BA6              ;	ld hl,Ctrl_1
 631  8BA6              ;	res 2,(hl)
 632  8BA6
 633  8BA6              ; ------------------------------------
 634  8BA6
 635  8BA6              ; Tras la gestión de las entidades, ... AMADEUS.
 636  8BA6
 637  8BA6 CD 39 8E     16 call Restore_Amadeus
 638  8BA9
 639  8BA9 3A CF 89     	ld a,(Impacto)
 640  8BAC A7           	and a
 641  8BAD 20 FE        	jr nz,$
 642  8BAF
 643  8BAF CD 5D 8C     	call Mov_Amadeus
 644  8BB2
 645  8BB2 3A E4 89     	ld a,(Ctrl_0)
 646  8BB5 CB 67        	bit 4,a
 647  8BB7 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 648  8BB9
 649  8BB9 CD 9C 8C     	call Guarda_foto_entidad_a_pintar
 650  8BBC
 651  8BBC
 652  8BBC
 653  8BBC 21 E4 89     14 ld hl,Ctrl_0
 654  8BBF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 655  8BC1 AF           	xor a
 656  8BC2 32 E5 89     	ld (Obj_dibujado),a
 657  8BC5
 658  8BC5 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 659  8BC8 CD 4B 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 660  8BCB
 661  8BCB              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 662  8BCB
 663  8BCB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 664  8BCB
 665  8BCB              ;	call Calcula_numero_de_disparotes
 666  8BCB
 667  8BCB
 668  8BCB CD 1C 8D     9 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 669  8BCE              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 670  8BCE              ;														; _ interrupción.
 671  8BCE 3E 04        	ld a,4
 672  8BD0 D3 FE        	out ($fe),a
 673  8BD2
 674  8BD2              ; ----------------------------------------
 675  8BD2
 676  8BD2 3A F9 89     	ld a,(Ctrl_1) 										; Existe Loop?
 677  8BD5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 678  8BD7 CA C1 8A     	jp z,Main
 679  8BDA
 680  8BDA              ; -----
 681  8BDA              ;	(((
 682  8BDA
 683  8BDA 3A 41 8A     	ld a,(Contador_de_frames)
 684  8BDD 47           	ld b,a
 685  8BDE 3A 45 8A     	ld a,(Activa_recarga_cajas)
 686  8BE1 B8           	cp b
 687  8BE2 28 08        	jr z,20F
 688  8BE4
 689  8BE4 21 F9 89     	ld hl,Ctrl_1
 690  8BE7 CB E6        	set 4,(hl)
 691  8BE9 C3 C1 8A     	jp Main
 692  8BEC
 693  8BEC 21 F9 89     20 ld hl,Ctrl_1
 694  8BEF CB A6        	res 4,(hl)
 695  8BF1 F3           	di
 696  8BF2
 697  8BF2 3A 41 8A     	ld a,(Contador_de_frames)
 698  8BF5
 699  8BF5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 700  8BF5              ;! _ IMPREDECIBLE !!!!
 701  8BF5
 702  8BF5 C6 0A        	add 10
 703  8BF7 32 44 8A     	ld (Clock_Entidades_en_curso),a
 704  8BFA
 705  8BFA C3 66 8A     	jp 4B
 706  8BFD
 707  8BFD C9           	ret
 708  8BFE
 709  8BFE              ; --------------------------------------------------------------------------------------------------------------
 710  8BFE              ;
 711  8BFE              ;	27/05/23
 712  8BFE
 713  8BFE              Mov_obj
 714  8BFE
 715  8BFE              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 716  8BFE
 717  8BFE 3A F7 89     	ld a,(Ctrl_2)
 718  8C01 CB 4F        	bit 1,a
 719  8C03 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 720  8C05
 721  8C05              ; Explosión:
 722  8C05
 723  8C05 3A F8 89     	ld a,(Frames_explosion)
 724  8C08 A7           	and a
 725  8C09 20 11        	jr nz,4F
 726  8C0B
 727  8C0B              ; Una alimaña menos!!!!!!!!!1
 728  8C0B
 729  8C0B CD 54 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 730  8C0E 21 03 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 731  8C11 35           	dec (hl)
 732  8C12 21 04 8A     	ld hl,Entidades_en_curso
 733  8C15 35           	dec (hl)
 734  8C16 21 02 8A     	ld hl,Numero_de_entidades
 735  8C19 35           	dec (hl)
 736  8C1A 18 40        	jr 3F
 737  8C1C
 738  8C1C              ; -----
 739  8C1C
 740  8C1C              ;	`Movemos´ la explosión.
 741  8C1C
 742  8C1C 2A C4 89     4 ld hl,(Puntero_DESPLZ_der)
 743  8C1F 23           	inc hl
 744  8C20 23           	inc hl
 745  8C21 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 746  8C24 CD 89 8D     	call Extrae_address
 747  8C27 22 BA 89     	ld (Puntero_objeto),hl
 748  8C2A
 749  8C2A 21 F8 89     	ld hl,Frames_explosion
 750  8C2D 35           	dec (hl)
 751  8C2E
 752  8C2E CD 8C 8C     	call Guarda_foto_entidad_a_borrar
 753  8C31 18 29        	jr 3F
 754  8C33
 755  8C33 AF           2 xor a
 756  8C34 32 E5 89     	ld (Obj_dibujado),a
 757  8C37 32 E4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 758  8C3A              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 759  8C3A              ; 														; _de la entidad.
 760  8C3A CD A6 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 761  8C3D              ;														; Obj_dibujado="0".
 762  8C3D              ; Movemos Entidades malignas.
 763  8C3D
 764  8C3D              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 765  8C3D              ;	and a 												; _a movernos. (Limitador_de_entidades).
 766  8C3D              ;	ret z
 767  8C3D
 768  8C3D CD 43 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 769  8C40
 770  8C40 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 771  8C43 CB 67        	bit 4,a
 772  8C45 C8           	ret z
 773  8C46
 774  8C46              ; Ha habido desplazamiento de la entidad maligna.
 775  8C46              ; Ha llegado a zona de AMADEUS ???
 776  8C46
 777  8C46 3A BD 89     	ld a,(Coordenada_y)
 778  8C49 FE 14        	cp $14
 779  8C4B D4 C0 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 780  8C4E              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 781  8C4E              ; ---------
 782  8C4E
 783  8C4E 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 784  8C50 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 785  8C53 CD A6 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 786  8C56 CD BD 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 787  8C59 CD 8C 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 788  8C5C C9           3 ret													; _de la misma.
 789  8C5D
 790  8C5D              ; --------------------------------------------------------------------------------------------------------------
 791  8C5D              ;
 792  8C5D              ;	29/1/23
 793  8C5D
 794  8C5D              Mov_Amadeus
 795  8C5D
 796  8C5D AF           	xor a
 797  8C5E 32 E5 89     	ld (Obj_dibujado),a
 798  8C61 CD A6 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 799  8C64              ;														; Obj_dibujado="0".
 800  8C64              ; Movemos Amadeus.
 801  8C64
 802  8C64 CD 76 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 803  8C67 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 804  8C6A CB 67        	bit 4,a
 805  8C6C C8           	ret z
 806  8C6D
 807  8C6D              ; ---------
 808  8C6D
 809  8C6D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 810  8C6F 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 811  8C72 CD A6 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 812  8C75 CD BD 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 813  8C78 CD 8C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 814  8C7B C9           	ret													; _de la nave.
 815  8C7C
 816  8C7C              ; -----------------------------------------------------------------------------------
 817  8C7C
 818  8C7C CD 8F 8D     Inicia_entidad	call Inicia_Puntero_objeto
 819  8C7F CD F7 99     	call Recompone_posicion_inicio
 820  8C82 CD 19 94     	call Draw
 821  8C85 CD A0 7F     	call Guarda_foto_registros
 822  8C88 CD D7 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 823  8C8B C9           	ret
 824  8C8C
 825  8C8C              ; --------------------------------------------------------------------------------------------------------------
 826  8C8C              ;
 827  8C8C              ;	31/01/23
 828  8C8C              ;
 829  8C8C              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 830  8C8C
 831  8C8C              Guarda_foto_entidad_a_borrar
 832  8C8C
 833  8C8C CD FD 96     	call Prepara_draw
 834  8C8F CD 2D 96     	call calcula_CColumnass
 835  8C92 CD 64 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 836  8C95 CD C3 96     	call Define_rutina_de_impresion
 837  8C98 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 838  8C9B C9           	ret
 839  8C9C
 840  8C9C              ; --------------------------------------------------------------------------------------------------------------
 841  8C9C              ;
 842  8C9C              ;	31/01/23
 843  8C9C              ;
 844  8C9C              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 845  8C9C              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 846  8C9C
 847  8C9C              Guarda_foto_entidad_a_pintar
 848  8C9C
 849  8C9C CD C9 8C     	call Repone_pintar
 850  8C9F CD 19 94     	call Draw
 851  8CA2 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 852  8CA5 C9           	ret
 853  8CA6
 854  8CA6              ; --------------------------------------------------------------------------------------------------------------
 855  8CA6              ;
 856  8CA6              ;
 857  8CA6
 858  8CA6 21 B6 89     Prepara_var_pintado_borrado	ld hl,Filas
 859  8CA9 3A E5 89     	ld a,(Obj_dibujado)
 860  8CAC A7           	and a
 861  8CAD 28 05        	jr z,1F
 862  8CAF 11 DA 89     	ld de,Variables_de_pintado
 863  8CB2 18 03        	jr 2F
 864  8CB4 11 D0 89     1 ld de,Variables_de_borrado
 865  8CB7 01 08 00     2 ld bc,8
 866  8CBA ED B0        	ldir
 867  8CBC C9           	ret
 868  8CBD
 869  8CBD              ; --------------------------------------------------------------------------------------------------------------
 870  8CBD
 871  8CBD 21 D0 89     Repone_borrar ld hl,Variables_de_borrado
 872  8CC0 11 B6 89     	ld de,Filas
 873  8CC3 01 08 00     	ld bc,8
 874  8CC6 ED B0        	ldir
 875  8CC8 C9           	ret
 876  8CC9
 877  8CC9 21 DA 89     Repone_pintar ld hl,Variables_de_pintado
 878  8CCC 11 B6 89     	ld de,Filas
 879  8CCF 01 08 00     	ld bc,8
 880  8CD2 ED B0        	ldir
 881  8CD4 C9           	ret
 882  8CD5
 883  8CD5              ; *************************************************************************************************************************************************************
 884  8CD5              ;
 885  8CD5              ; 8/1/23
 886  8CD5              ;
 887  8CD5              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 888  8CD5              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 889  8CD5              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 890  8CD5
 891  8CD5              ; Destruye HL y DE !!!!!
 892  8CD5
 893  8CD5              Inicia_punteros_de_cajas
 894  8CD5
 895  8CD5 21 8C 85     	ld hl,Indice_de_cajas
 896  8CD8 CD 89 8D         call Extrae_address
 897  8CDB 22 FC 89         ld (Puntero_store_caja),hl
 898  8CDE 21 8E 85     	ld hl,Indice_de_cajas+2
 899  8CE1 22 00 8A     	ld (Indice_restore_caja),hl
 900  8CE4 CD 89 8D     	call Extrae_address
 901  8CE7 22 FE 89     	ld (Puntero_restore_caja),hl
 902  8CEA C9               ret
 903  8CEB
 904  8CEB              ; ---------------------------------------------------------------
 905  8CEB              ;
 906  8CEB              ;	9/8/23
 907  8CEB              ;
 908  8CEB              ;	Inicialización y gestión de álbumes de fotos y cajas.
 909  8CEB
 910  8CEB              Inicia_punteros_de_albumes_y_malotes
 911  8CEB
 912  8CEB 21 EC 84     	ld hl,Indice_album_de_fotos
 913  8CEE 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 914  8CF1 CD 89 8D     	call Extrae_address
 915  8CF4 22 0E 8A     	ld (Stack_snapshot),hl
 916  8CF7
 917  8CF7 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 918  8CFA 22 24 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 919  8CFD CD 89 8D     	call Extrae_address
 920  8D00 22 10 8A     	ld (Stack_snapshot_disparos),hl
 921  8D03
 922  8D03 21 FC 84     	ld hl,Indice_End_Snapshot
 923  8D06 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 924  8D09 CD 89 8D     	call Extrae_address
 925  8D0C 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 926  8D0F
 927  8D0F 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 928  8D12 22 28 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 929  8D15 CD 89 8D     	call Extrae_address
 930  8D18 22 2C 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 931  8D1B
 932  8D1B C9           	ret
 933  8D1C
 934  8D1C              ;	12/8/23
 935  8D1C
 936  8D1C              Avanza_puntero_de_album_de_fotos_y_malotes
 937  8D1C
 938  8D1C              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 939  8D1C
 940  8D1C              ; Estamos en el último álbum del índice???.
 941  8D1C
 942  8D1C 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
 943  8D1F 01 F2 84     	ld bc,Indice_album_de_fotos+6
 944  8D22 A7           	and a
 945  8D23 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 946  8D25 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 947  8D27
 948  8D27 21 F9 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 949  8D2A CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 950  8D2C 76           	halt
 951  8D2D C9           	ret
 952  8D2E
 953  8D2E 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 954  8D31 23           	inc hl
 955  8D32 23           	inc hl
 956  8D33 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 957  8D36 CD 89 8D     	call Extrae_address
 958  8D39 22 0E 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 959  8D3C
 960  8D3C 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
 961  8D3F 23           	inc hl
 962  8D40 23           	inc hl
 963  8D41 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 964  8D44 CD 89 8D     	call Extrae_address
 965  8D47 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 966  8D4A
 967  8D4A C9           	ret
 968  8D4B
 969  8D4B              ; *************************************************************************************************************************************************************
 970  8D4B              ;
 971  8D4B              ; 8/1/23
 972  8D4B              ;
 973  8D4B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 974  8D4B
 975  8D4B 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 976  8D4E 22 2F 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 977  8D51 C9           	ret
 978  8D52 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 979  8D55 22 31 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 980  8D58 C9           	ret
 981  8D59
 982  8D59              ; -------------------------------------------------------------------------------------------------------------
 983  8D59              ;
 984  8D59              ; 3/8/23
 985  8D59              ;
 986  8D59
 987  8D59              Calcula_numero_de_malotes
 988  8D59
 989  8D59 21 00 70     	ld hl,Album_de_fotos
 990  8D5C EB           	ex de,hl
 991  8D5D 2A 12 8A     	ld hl,(End_Snapshot)
 992  8D60
 993  8D60 06 00        	ld b,0
 994  8D62 7D           	ld a,l
 995  8D63 93           	sub e
 996  8D64 28 07        	jr z,1F
 997  8D66
 998  8D66              ; Nº de malotes no es "0".
 999  8D66
1000  8D66 D6 06        2 sub 6
1001  8D68 04           	inc b
1002  8D69 A7           	and a
1003  8D6A 20 FA        	jr nz,2B
1004  8D6C 78           	ld a,b
1005  8D6D
1006  8D6D 32 05 8A     1 ld (Numero_de_malotes),a
1007  8D70 C9           	ret
1008  8D71
1009  8D71              ; -------------------------------------------------------------------------------------------------------------
1010  8D71              ;
1011  8D71              ; 28/2/23
1012  8D71              ;
1013  8D71
1014  8D71              Calcula_numero_de_disparotes
1015  8D71
1016  8D71 21 0D 72     	ld hl,Album_de_fotos_disparos
1017  8D74 EB           	ex de,hl
1018  8D75 2A 2C 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1019  8D78
1020  8D78 06 00        	ld b,0
1021  8D7A 7D           	ld a,l
1022  8D7B 93           	sub e
1023  8D7C 28 07        	jr z,1F
1024  8D7E
1025  8D7E              ; Nº de malotes no es "0".
1026  8D7E
1027  8D7E D6 06        2 sub 6
1028  8D80 04           	inc b
1029  8D81 A7           	and a
1030  8D82 20 FA        	jr nz,2B
1031  8D84 78           	ld a,b
1032  8D85
1033  8D85 32 2E 8A     1 ld (Numero_de_disparotes),a
1034  8D88 C9           	ret
1035  8D89
1036  8D89              ; *************************************************************************************************************************************************************
1037  8D89              ;
1038  8D89              ; 20/10/22
1039  8D89              ;
1040  8D89              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1041  8D89              ;
1042  8D89              ; Destruye el puntero y DE !!!!!
1043  8D89
1044  8D89 5E           Extrae_address ld e,(hl)
1045  8D8A 23           	inc hl
1046  8D8B 56           	ld d,(hl)
1047  8D8C 2B           	dec hl
1048  8D8D EB           	ex de,hl
1049  8D8E C9           	ret
1050  8D8F
1051  8D8F              ; *************************************************************************************************************************************************************
1052  8D8F              ;
1053  8D8F              ;	7/2/23
1054  8D8F              ;
1055  8D8F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1056  8D8F              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1057  8D8F              ;
1058  8D8F              ;   Destruye HL y BC !!!!!,
1059  8D8F              ;
1060  8D8F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1061  8D8F              ;					"0" ..... Izquierda.
1062  8D8F
1063  8D8F              Inicia_Puntero_objeto
1064  8D8F
1065  8D8F 3A CA 89     	ld a,(Cuad_objeto)
1066  8D92 E6 01        	and 1
1067  8D94 F5           	push af
1068  8D95 CC B3 8D     	call z,Inicia_puntero_objeto_izq
1069  8D98 F1           	pop af
1070  8D99 28 2B        	jr z,1F
1071  8D9B CD A0 8D     	call Inicia_puntero_objeto_der
1072  8D9E 18 26        	jr 1F
1073  8DA0
1074  8DA0              ; Arrancamos desde la parte izquierda de la pantalla.
1075  8DA0              ; Iniciamos (Indice_Sprite_der).
1076  8DA0
1077  8DA0 2A C0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1078  8DA3 22 C4 89     	ld (Puntero_DESPLZ_der),hl
1079  8DA6 CD 89 8D     	call Extrae_address
1080  8DA9 22 BA 89     	ld (Puntero_objeto),hl
1081  8DAC
1082  8DAC 2A C2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1083  8DAF 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1084  8DB2 C9           	ret
1085  8DB3
1086  8DB3              ; Arrancamos desde la parte derecha de la pantalla.
1087  8DB3              ; Iniciamos (Indice_Sprite_izq).
1088  8DB3
1089  8DB3 2A C2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1090  8DB6 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1091  8DB9 CD 89 8D     	call Extrae_address
1092  8DBC 22 BA 89     	ld (Puntero_objeto),hl
1093  8DBF
1094  8DBF 2A C0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1095  8DC2 22 C4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1096  8DC5 C9           	ret
1097  8DC6
1098  8DC6              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1099  8DC6
1100  8DC6 21 40 83     1 ld hl,Amadeus
1101  8DC9 ED 4B BA 89  	ld bc,(Puntero_objeto)
1102  8DCD B7 ED 42     	sub hl,bc
1103  8DD0 C0           	ret nz
1104  8DD1 21 E4 89     	ld hl,Ctrl_0
1105  8DD4 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1106  8DD6 C9           	ret 												; _de nuestra nave en los extremos.
1107  8DD7
1108  8DD7              ; *************************************************************************************************************************************************************
1109  8DD7              ;
1110  8DD7              ;	14/5/23
1111  8DD7              ;
1112  8DD7              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1113  8DD7              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1114  8DD7
1115  8DD7              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1116  8DD7              ;	_de la 2ª y 3ª entidad respectivamente.
1117  8DD7
1118  8DD7              Store_Restore_cajas
1119  8DD7
1120  8DD7 E5           	push hl
1121  8DD8 D5           	push de
1122  8DD9 C5            	push bc
1123  8DDA
1124  8DDA              ;	STORE !!!!!
1125  8DDA              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1126  8DDA
1127  8DDA 21 B6 89     	ld hl,Filas
1128  8DDD ED 5B FC 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1129  8DE1 01 43 00     	ld bc,67
1130  8DE4 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1131  8DE6
1132  8DE6              ; 	Entidad_sospechosa. 20/4/23
1133  8DE6
1134  8DE6 3A CF 89     	ld a,(Impacto)
1135  8DE9 A7           	and a
1136  8DEA 28 0C        	jr z,1F
1137  8DEC
1138  8DEC 2A FC 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1139  8DEF 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1140  8DF2 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1141  8DF3 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1142  8DF5 22 34 8A     	ld (Entidad_sospechosa_de_colision),hl
1143  8DF8
1144  8DF8              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1145  8DF8
1146  8DF8 2A FE 89     1 ld hl,(Puntero_restore_caja)
1147  8DFB 7E           	ld a,(hl)
1148  8DFC A7           	and a
1149  8DFD F5           	push af
1150  8DFE 28 08        	jr z,2F
1151  8E00
1152  8E00 11 B6 89     	ld de,Filas
1153  8E03 01 43 00     	ld bc,67
1154  8E06 ED B0        	ldir
1155  8E08
1156  8E08 CD 24 8E     2 call Incrementa_punteros_de_cajas
1157  8E0B F1           	pop af
1158  8E0C 28 EA        	jr z,1B
1159  8E0E
1160  8E0E C1           	pop bc
1161  8E0F D1           	pop de
1162  8E10 E1           	pop hl
1163  8E11
1164  8E11 C9           	ret
1165  8E12
1166  8E12              ; **************************************************************************************************
1167  8E12              ;
1168  8E12              ;	12/05/23
1169  8E12              ;
1170  8E12              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1171  8E12
1172  8E12 E5           Restore_entidad push hl
1173  8E13 D5           	push de
1174  8E14 C5            	push bc
1175  8E15
1176  8E15 2A FC 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1177  8E18 11 B6 89     	ld de,Filas
1178  8E1B 01 43 00     	ld bc,67
1179  8E1E ED B0        	ldir
1180  8E20
1181  8E20 C1           	pop bc
1182  8E21 D1           	pop de
1183  8E22 E1           	pop hl
1184  8E23 C9           	ret
1185  8E24
1186  8E24
1187  8E24              ; **************************************************************************************************
1188  8E24              ;
1189  8E24              ;	08/05/23
1190  8E24              ;
1191  8E24              ;	Incrementamos los dos punteros de entidades. (+1).
1192  8E24
1193  8E24 2A FE 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1194  8E27 22 FC 89     	ld (Puntero_store_caja),hl
1195  8E2A 2A 00 8A     	ld hl,(Indice_restore_caja)
1196  8E2D 23           	inc hl
1197  8E2E 23           	inc hl
1198  8E2F 22 00 8A     	ld (Indice_restore_caja),hl
1199  8E32 CD 89 8D         call Extrae_address
1200  8E35 22 FE 89         ld (Puntero_restore_caja),hl
1201  8E38 C9               ret
1202  8E39
1203  8E39              ; **************************************************************************************************
1204  8E39              ;
1205  8E39              ;	25/01/23
1206  8E39              ;
1207  8E39              ;	Restore_Amadeus
1208  8E39              ;
1209  8E39              ;	Cargamos en DRAW los parámetros de Amadeus.
1210  8E39              ;
1211  8E39
1212  8E39 E5           Restore_Amadeus	push hl
1213  8E3A D5           	push de
1214  8E3B C5            	push bc
1215  8E3C 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1216  8E3F 11 B6 89     	ld de,Filas
1217  8E42 01 43 00     	ld bc,67
1218  8E45 ED B0        	ldir
1219  8E47 C1           	pop bc
1220  8E48 D1           	pop de
1221  8E49 E1           	pop hl
1222  8E4A C9           	ret
1223  8E4B
1224  8E4B              ; *************************************************************************************************************************************************************
1225  8E4B              ;
1226  8E4B              ;	29/04/23
1227  8E4B              ;
1228  8E4B              ;	Store_Amadeus
1229  8E4B              ;
1230  8E4B              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1231  8E4B              ;
1232  8E4B              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1233  8E4B              ;
1234  8E4B              ;	DESTRUYE: HL y BC y DE.
1235  8E4B
1236  8E4B 21 B6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1237  8E4E 01 43 00     	ld bc,67
1238  8E51 ED B0        	ldir
1239  8E53 C9           	ret
1240  8E54
1241  8E54              ; -----------------------------------------------------------
1242  8E54              ;
1243  8E54              ;	27/04/23
1244  8E54              ;
1245  8E54              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1246  8E54              ;
1247  8E54              ;	Destruye: HL,BC,DE,A
1248  8E54
1249  8E54 21 B6 89     Borra_datos_entidad ld hl,Filas
1250  8E57 01 42 00     	ld bc,66
1251  8E5A AF           	xor a
1252  8E5B 77           	ld (hl),a
1253  8E5C 11 B7 89     	ld de,Filas+1
1254  8E5F ED B0        	ldir
1255  8E61 C9           	ret
1256  8E62
1257  8E62              ; -----------------------------------------------------------
1258  8E62
1259  8E62              ; Teclado.
1260  8E62
1261  8E62 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1262  8E64 DB FE        	in a,($fe)
1263  8E66 E6 01        	and $01
1264  8E68 28 02        	jr z,1f
1265  8E6A 18 F6        	jr Pulsa_ENTER
1266  8E6C C9           1 ret
1267  8E6D
1268  8E6D              ; **************************************************************************************************
1269  8E6D              ;
1270  8E6D              ; Temporización.
1271  8E6D
1272  8E6D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1273  8E6D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1274  8E6D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1275  8E6D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1276  8E6D
1277  8E6D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1278  8E6D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1279  8E6D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1280  8E6D
1281  8E6D              ; A partir de $4f61 no hace falta DELAY.
1282  8E6D
1283  8E6D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1284  8E6D
1285  8E6D 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1286  8E70 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1287  8E71 78           	LD A,B
1288  8E72 A7           	AND A
1289  8E73 20 FB        	JR NZ,wait
1290  8E75 C9           	RET
1291  8E76
1292  8E76              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1293  8E76              ;
1294  8E76              ;	5/3/23
1295  8E76              ;
1296  8E76              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1297  8E76
1298  8E76              Movimiento_Amadeus
1299  8E76
1300  8E76              ; Disparo.
1301  8E76
1302  8E76 3A 46 8A     	ld a,(Disparo_Amadeus)
1303  8E79 A7           	and a
1304  8E7A 20 02        	jr nz,1F
1305  8E7C 18 15        	jr 2F
1306  8E7E
1307  8E7E 3E F7        1 ld a,$f7													; "5" para disparar.
1308  8E80 DB FE        	in a,($fe)
1309  8E82 E6 10        	and $10
1310  8E84
1311  8E84 F5           	push af
1312  8E85 CC 23 8F     	call z,Genera_disparo
1313  8E88 F1           	pop af
1314  8E89 20 08        	jr nz,2F
1315  8E8B
1316  8E8B 3A 46 8A     	ld a,(Disparo_Amadeus)
1317  8E8E EE 01        	xor 1
1318  8E90 32 46 8A     	ld (Disparo_Amadeus),a
1319  8E93
1320  8E93 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1321  8E95 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1322  8E97 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1323  8E99 CC B1 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1324  8E9C 3E F7        	ld a,$f7
1325  8E9E DB FE        	in a,($fe)
1326  8EA0 E6 01        	and $01
1327  8EA2 C8           	ret z
1328  8EA3
1329  8EA3 3E F7        	ld a,$f7
1330  8EA5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1331  8EA7 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1332  8EA9 CC 93 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1333  8EAC C9           	ret
1334  8EAD
1335  8EAD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1336  8EAD              ;
1337  8EAD              ;	Rutina provisional para que los malotes cagen balas.
1338  8EAD
1339  8EAD              Detecta_disparo_entidad
1340  8EAD
1341  8EAD 3A 49 8A     	ld a,(Disparo_entidad)
1342  8EB0 A7           	and a
1343  8EB1 C8           	ret z
1344  8EB2
1345  8EB2              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1346  8EB2
1347  8EB2              ;	ld a,$7f				; Detecta SPACE.
1348  8EB2              ;	in a,($fe)
1349  8EB2              ;	and 1
1350  8EB2              ;	ret nz
1351  8EB2
1352  8EB2              ;	call Genera_disparo
1353  8EB2 C9           	ret
1354  8EB3
1355  8EB3              ; ----------------------------------------------------------------------
1356  8EB3              ;
1357  8EB3              ;	11/8/23
1358  8EB3
1359  8EB3              Frame
1360  8EB3
1361  8EB3              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1362  8EB3              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1363  8EB3
1364  8EB3              ; PINTAMOS.
1365  8EB3
1366  8EB3 F5           	push af
1367  8EB4 C5           	push bc
1368  8EB5 D5           	push de
1369  8EB6 E5           	push hl
1370  8EB7
1371  8EB7 3E 02            ld a,2
1372  8EB9 D3 FE            out ($fe),a											; Rojo.
1373  8EBB
1374  8EBB              ;;! debuggg !!!
1375  8EBB              ;	ld a,(Contador_de_frames_2)
1376  8EBB              ;	cp 1
1377  8EBB              ;	jr nz,4F
1378  8EBB              ;	ld a,(Contador_de_frames)
1379  8EBB              ;	cp $53 	; Último FRAME estable, a partir de aquí hay que hacer seguimiento.	$53.
1380  8EBB              ;	jr z,$
1381  8EBB              ;	jr nc,$
1382  8EBB              ;;! debuggg !!!;
1383  8EBB
1384  8EBB CD 27 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1385  8EBE CD 6A 97     	call Extrae_foto_disparos
1386  8EC1 3E 01            ld a,1
1387  8EC3 D3 FE            out ($fe),a											; Azul.
1388  8EC5
1389  8EC5              ; 	Gestiona los álbumes de fotos.
1390  8EC5
1391  8EC5 CD 71 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1392  8EC8 CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1393  8ECB
1394  8ECB              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1395  8ECB
1396  8ECB 3A F9 89     	ld a,(Ctrl_1)
1397  8ECE CB 6F        	bit 5,a
1398  8ED0 20 1E        	jr nz,1F
1399  8ED2
1400  8ED2              ; No hemos terminado de guardar el último FRAME.
1401  8ED2
1402  8ED2 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1403  8ED5              ;	ld bc,Indice_album_de_fotos+2
1404  8ED5 2B           	dec hl
1405  8ED6 2B           	dec hl
1406  8ED7
1407  8ED7              ;	ld a,l
1408  8ED7              ;	sub c
1409  8ED7
1410  8ED7              ;	jr z,$
1411  8ED7
1412  8ED7 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
1413  8EDA
1414  8EDA
1415  8EDA 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
1416  8EDD 2B           	dec hl
1417  8EDE 2B           	dec hl
1418  8EDF 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
1419  8EE2 CD 89 8D     	call Extrae_address
1420  8EE5 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
1421  8EE8 CD 89 8D     	call Extrae_address
1422  8EEB 22 0E 8A     	ld (Stack_snapshot),hl
1423  8EEE
1424  8EEE 18 09        	jr 2F
1425  8EF0
1426  8EF0              ; FRAME completo.
1427  8EF0
1428  8EF0 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1429  8EF3 CD 89 8D     	call Extrae_address
1430  8EF6 22 0E 8A     	ld (Stack_snapshot),hl
1431  8EF9
1432  8EF9              ;	En este punto:
1433  8EF9
1434  8EF9              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1435  8EF9              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1436  8EF9
1437  8EF9              ; RELOJES.
1438  8EF9
1439  8EF9              2
1440  8EF9
1441  8EF9              ;;! debuggg !!!
1442  8EF9 3A 42 8A     	ld a,(Contador_de_frames_2)
1443  8EFC FE 01        	cp 1
1444  8EFE 20 09        	jr nz,5F
1445  8F00 3A 41 8A     	ld a,(Contador_de_frames)
1446  8F03 FE 53        	cp $53 	; Último FRAME estable, a partir de aquí hay que hacer seguimiento.	$53.
1447  8F05 28 FE        	jr z,$
1448  8F07 30 FE        	jr nc,$
1449  8F09              ;;! debuggg !!!;
1450  8F09
1451  8F09 21 41 8A     5 ld hl,Contador_de_frames
1452  8F0C 7E           	ld a,(hl)
1453  8F0D FE FF        	cp $ff
1454  8F0F 20 04        	jr nz,3F
1455  8F11 34           	inc (hl)
1456  8F12
1457  8F12 21 42 8A     	ld hl,Contador_de_frames_2
1458  8F15 34           3 inc (hl)											; 0 - 255
1459  8F16
1460  8F16 21 F9 89     	ld hl,Ctrl_1
1461  8F19 CB AE        	res 5,(hl)
1462  8F1B
1463  8F1B CD 59 8D     	call Calcula_numero_de_malotes
1464  8F1E
1465  8F1E E1           	pop hl
1466  8F1F D1           	pop de
1467  8F20 C1           	pop bc
1468  8F21 F1           	pop af
1469  8F22
1470  8F22 C9           	ret
1471  8F23
1472  8F23              ; ---------------------------------------------------------------
1473  8F23
1474  8F23              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F23              ; ******************************************************************************************************************************************************************************************
   2+ 8F23              ;
   3+ 8F23              ;   21/07/23
   4+ 8F23              ;
   5+ 8F23              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F23              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F23              ;
   8+ 8F23              ;
   9+ 8F23              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F23              ;
  11+ 8F23              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F23              ;               _ hacen las entidades hacia abajo.
  13+ 8F23              ;
  14+ 8F23              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F23              ;
  16+ 8F23              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F23              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F23              ;
  19+ 8F23              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F23              ;           _ la bala.
  21+ 8F23              ;
  22+ 8F23              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F23              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F23              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F23              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F23              ;           _ en el momento de generarse la bala)).
  27+ 8F23
  28+ 8F23              Genera_disparo
  29+ 8F23
  30+ 8F23              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F23              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F23              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F23              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F23              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F23              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F23              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F23
  38+ 8F23              ; Exclusiones:
  39+ 8F23
  40+ 8F23 3A CE 89         ld a,(Vel_down)
  41+ 8F26 47               ld b,a
  42+ 8F27 3A 40 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F2A B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F2B D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F2C 3A F3 89         ld a,(Columnas)
  46+ 8F2F 47               ld b,a
  47+ 8F30 3A B7 89         ld a,(Columns)
  48+ 8F33 B8               cp b
  49+ 8F34 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F35
  51+ 8F35              ; ----- ----- -----
  52+ 8F35
  53+ 8F35 3A E4 89         ld a,(Ctrl_0)
  54+ 8F38 CB 77            bit 6,a
  55+ 8F3A 20 06            jr nz,14F
  56+ 8F3C
  57+ 8F3C 3A BD 89         ld a,(Coordenada_y)
  58+ 8F3F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F41 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F42
  61+ 8F42 21 00 80     14 ld hl,Indice_disparo
  62+ 8F45 3A BE 89         ld a,(CTRL_DESPLZ)
  63+ 8F48 4F               ld c,a
  64+ 8F49 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F4B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F4B              ;                                            ""        ""       "f9", B="1"
  67+ 8F4B              ;                                            ""        ""       "fb", B="2"
  68+ 8F4B              ;                                            ""        ""       "fb", B="3"
  69+ 8F4B A7               and a
  70+ 8F4C 28 10            jr z,1F
  71+ 8F4E E6 01            and 1
  72+ 8F50 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F51
  74+ 8F51 79               ld a,c
  75+ 8F52 16 F9            ld d,$f9
  76+ 8F54 23           2 inc hl
  77+ 8F55 23               inc hl
  78+ 8F56 04               inc b
  79+ 8F57 BA               cp d
  80+ 8F58 28 04            jr z,1F
  81+ 8F5A 14               inc d
  82+ 8F5B 14               inc d
  83+ 8F5C 18 F6            jr 2B
  84+ 8F5E
  85+ 8F5E CD 89 8D     1 call Extrae_address
  86+ 8F61 E5               push hl
  87+ 8F62 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F64 DD 21 AC 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F68
  90+ 8F68              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F68              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F68
  93+ 8F68 3A E4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F6B CB 77            bit 6,a
  95+ 8F6D 20 04            jr nz,19F
  96+ 8F6F
  97+ 8F6F AF               xor a
  98+ 8F70 32 49 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F73
 100+ 8F73 3A CA 89     19 ld a,(Cuad_objeto)
 101+ 8F76 FE 02            cp 2
 102+ 8F78 38 66            jr c,3F
 103+ 8F7A 28 64            jr z,3F
 104+ 8F7C
 105+ 8F7C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F7C
 107+ 8F7C E6 01            and 1
 108+ 8F7E 28 30            jr z,4F
 109+ 8F80
 110+ 8F80              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F80              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F80              ;
 113+ 8F80              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F80              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F80              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F80
 117+ 8F80 2A B8 89     	ld hl,(Posicion_actual)
 118+ 8F83
 119+ 8F83              ;   Amadeus o entidad ???.
 120+ 8F83
 121+ 8F83 3A E4 89         ld a,(Ctrl_0)
 122+ 8F86 CB 77            bit 6,a
 123+ 8F88 28 0A            jr z,8F
 124+ 8F8A
 125+ 8F8A              ; 	Dispara Amadeus.
 126+ 8F8A
 127+ 8F8A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F8C CD 18 97         call PreviousScan
 129+ 8F8F CD 18 97         call PreviousScan
 130+ 8F92
 131+ 8F92              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F92              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F92              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F92              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F92
 136+ 8F92 18 11            jr 10F
 137+ 8F94
 138+ 8F94              ; 	Dispara Entidad.
 139+ 8F94
 140+ 8F94 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F97              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F97
 143+ 8F97              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F97              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F97
 146+ 8F97 C5               push bc
 147+ 8F98 06 10            ld b,16
 148+ 8F9A CD 09 97     9 call NextScan
 149+ 8F9D 10 FB            djnz 9B
 150+ 8F9F C1               pop bc
 151+ 8FA0 CD 0A 90         call Ajusta_disparo_parte_izquierda
 152+ 8FA3 18 06            jr 17F
 153+ 8FA5
 154+ 8FA5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FA5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FA5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FA5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FA5
 159+ 8FA5 CD 0A 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FA8 CD 7F 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FAB              ;                                                      ; _al generar el disparo.
 162+ 8FAB
 163+ 8FAB              ; 	LLegados a este punto tendremos:
 164+ 8FAB              ;
 165+ 8FAB              ;       Puntero_objeto_disparo en IY.
 166+ 8FAB              ;       Rutinas_de_impresion en IX.
 167+ 8FAB              ;       Puntero_de_impresion en HL.
 168+ 8FAB              ;       Impacto/Dirección en BC.
 169+ 8FAB
 170+ 8FAB CD 12 90     17 call Almacena_disparo
 171+ 8FAE 18 52            jr 6F                                             ; RET.
 172+ 8FB0
 173+ 8FB0              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FB0              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FB0              ;
 176+ 8FB0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FB0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FB0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FB0
 180+ 8FB0 2A B8 89     4 ld hl,(Posicion_actual)
 181+ 8FB3
 182+ 8FB3              ;   Amadeus o entidad ???.
 183+ 8FB3
 184+ 8FB3 3A E4 89         ld a,(Ctrl_0)
 185+ 8FB6 CB 77            bit 6,a
 186+ 8FB8 28 0A            jr z,11F
 187+ 8FBA
 188+ 8FBA              ; 	Dispara Amadeus.
 189+ 8FBA
 190+ 8FBA 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FBC CD 18 97         call PreviousScan
 192+ 8FBF CD 18 97         call PreviousScan
 193+ 8FC2
 194+ 8FC2              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FC2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FC2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FC2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FC2
 199+ 8FC2 18 11            jr 13F
 200+ 8FC4
 201+ 8FC4              ; 	Dispara Entidad.
 202+ 8FC4
 203+ 8FC4 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FC7              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FC7
 206+ 8FC7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FC7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FC7
 209+ 8FC7 C5               push bc
 210+ 8FC8 06 10            ld b,16
 211+ 8FCA CD 09 97     12 call NextScan
 212+ 8FCD 10 FB            djnz 12B
 213+ 8FCF C1               pop bc
 214+ 8FD0
 215+ 8FD0 CD 03 90         call Ajusta_disparo_parte_derecha
 216+ 8FD3 18 06            jr 18F
 217+ 8FD5
 218+ 8FD5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FD5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FD5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FD5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FD5
 223+ 8FD5 CD 03 90     13 call Ajusta_disparo_parte_derecha
 224+ 8FD8 CD 7F 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FDB              ;                                                       ; _al generar el disparo.
 226+ 8FDB
 227+ 8FDB              ; LLegados a este punto tendremos:
 228+ 8FDB              ;
 229+ 8FDB              ;       Puntero_objeto_disparo en IY.
 230+ 8FDB              ;       Rutinas_de_impresion en IX.
 231+ 8FDB              ;       Puntero_de_impresion en HL.
 232+ 8FDB              ;       Impacto/Dirección en BC.
 233+ 8FDB
 234+ 8FDB CD 12 90     18 call Almacena_disparo
 235+ 8FDE 18 22            jr 6F                                               ; RET.
 236+ 8FE0
 237+ 8FE0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FE0
 239+ 8FE0 28 11        3 jr z,5F
 240+ 8FE2
 241+ 8FE2              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FE2              ;
 243+ 8FE2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FE2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FE2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FE2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FE2
 248+ 8FE2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FE2              ;	   ""        ""       "f9", B="1"
 250+ 8FE2              ;	   ""        ""       "fb", B="2"
 251+ 8FE2              ; 	   ""        ""       "fb", B="3"
 252+ 8FE2
 253+ 8FE2 2A B8 89     	ld hl,(Posicion_actual)
 254+ 8FE5 CD 09 97     	call NextScan
 255+ 8FE8
 256+ 8FE8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FE8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FE8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FE8
 261+ 8FE8 CD 0A 90         call Ajusta_disparo_parte_izquierda
 262+ 8FEB
 263+ 8FEB              ; 	No se produce impacto. B="$80"
 264+ 8FEB              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FEB
 266+ 8FEB 01 80 80         ld bc,$8080
 267+ 8FEE
 268+ 8FEE              ; 	LLegados a este punto tendremos:
 269+ 8FEE              ;
 270+ 8FEE              ;       Puntero_objeto_disparo en IY.
 271+ 8FEE              ;       Rutinas_de_impresion en IX.
 272+ 8FEE              ;       Puntero_de_impresion en HL.
 273+ 8FEE              ;       Impacto/Dirección en BC.
 274+ 8FEE
 275+ 8FEE CD 12 90         call Almacena_disparo
 276+ 8FF1 18 0F            jr 6F                                           ; RET.
 277+ 8FF3
 278+ 8FF3              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FF3              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FF3              ;
 281+ 8FF3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FF3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FF3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FF3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FF3
 286+ 8FF3 2A B8 89     5 ld hl,(Posicion_actual)
 287+ 8FF6 CD 09 97     	call NextScan
 288+ 8FF9
 289+ 8FF9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FF9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FF9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FF9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FF9
 294+ 8FF9 CD 03 90         call Ajusta_disparo_parte_derecha
 295+ 8FFC
 296+ 8FFC              ; 	No se produce impacto. B="$80"
 297+ 8FFC              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FFC
 299+ 8FFC 01 80 80     15 ld bc,$8080
 300+ 8FFF
 301+ 8FFF              ; 	LLegados a este punto tendremos:
 302+ 8FFF              ;
 303+ 8FFF              ;       Puntero_objeto_disparo en IY.
 304+ 8FFF              ;       Rutinas_de_impresion en IX.
 305+ 8FFF              ;       Puntero_de_impresion en HL.
 306+ 8FFF              ;       Impacto/Dirección en BC.
 307+ 8FFF
 308+ 8FFF CD 12 90         call Almacena_disparo
 309+ 9002
 310+ 9002 C9           6 ret
 311+ 9003
 312+ 9003              ; ----------------------------------------------------------------
 313+ 9003              ;
 314+ 9003              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9003              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9003              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9003
 318+ 9003 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9004 FE 02            cp 2
 320+ 9006 38 01            jr c,1F
 321+ 9008 23               inc hl
 322+ 9009 C9           1 ret
 323+ 900A
 324+ 900A 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 900B FE 01        	cp 1
 326+ 900D 20 01        	jr nz,1F
 327+ 900F 2B           	dec hl
 328+ 9010 2B           1 dec hl
 329+ 9011 C9               ret
 330+ 9012
 331+ 9012              ; ----------------------------------------------------------------
 332+ 9012              ;
 333+ 9012              ;   25/02/23
 334+ 9012              ;
 335+ 9012              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9012              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9012              ;
 338+ 9012              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9012              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9012
 341+ 9012              Almacena_disparo
 342+ 9012
 343+ 9012 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9013 F1               pop af
 345+ 9014 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9015
 347+ 9015 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9016 E6 01            and 1
 349+ 9018 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 901A              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 901A              ; 	Dispara AMADEUS.
 352+ 901A
 353+ 901A              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 901A              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 901A              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 901A              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 901A
 358+ 901A C5               push bc
 359+ 901B 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 901E 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9021 A7               and a
 362+ 9022 ED 42            sbc hl,bc
 363+ 9024 CC 52 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9027 C1               pop bc
 365+ 9028 28 54            jr z,4F
 366+ 902A
 367+ 902A 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 902D 23               inc hl
 369+ 902E 23               inc hl
 370+ 902F 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9032              ;                                                   ; _ Disparo_(+1).
 372+ 9032 18 18            jr 2F
 373+ 9034
 374+ 9034              ; Dispara una entidad.
 375+ 9034
 376+ 9034 C5           1 push bc
 377+ 9035 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9038 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 903B A7               and a
 380+ 903C ED 42            sbc hl,bc
 381+ 903E CC 4B 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9041 C1               pop bc
 383+ 9042 28 3A            jr z,4F
 384+ 9044
 385+ 9044 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9047 23               inc hl
 387+ 9048 23               inc hl
 388+ 9049 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 904C              ;                                                   ; _ Disparo_(+1).
 390+ 904C CD 89 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 904F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 904F              ;
 393+ 904F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 904F              ;                                                     Rutinas_de_impresion en IX.
 395+ 904F              ;                                                     Puntero_de_impresion en HL.
 396+ 904F              ;                                                     Impacto/Dirección en BC.
 397+ 904F
 398+ 904F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9050 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9051 23               inc hl                                          ; _ al siguiente.
 401+ 9052 A7               and a
 402+ 9053 20 C0            jr nz,3B
 403+ 9055
 404+ 9055 08               ex af,af
 405+ 9056 ED 73 0A 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 905A F9               ld sp,hl
 407+ 905B
 408+ 905B DD E5            push ix                                         ; Rutina de impresión.
 409+ 905D F5               push af                                         ; Puntero de impresión.
 410+ 905E FD E5            push iy                                         ; Puntero objeto.
 411+ 9060 C5               push bc                                         ; Control.
 412+ 9061
 413+ 9061 ED 7B 0A 8A      ld sp,(Stack)
 414+ 9065
 415+ 9065              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9065
 417+ 9065 21 F9 89     	ld hl,Ctrl_1
 418+ 9068 CB C6        	set 0,(hl)
 419+ 906A
 420+ 906A DD E5        	push ix
 421+ 906C E1               pop hl
 422+ 906D F5               push af
 423+ 906E DD E1            pop ix
 424+ 9070
 425+ 9070 CD A0 7F     	call Guarda_foto_registros
 426+ 9073
 427+ 9073 21 F9 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9076 CB 86        	res 0,(hl)
 429+ 9078
 430+ 9078              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9078              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9078
 433+ 9078 CD 52 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 907B CD 4B 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 907E
 436+ 907E C9           4 ret
 437+ 907F
 438+ 907F              ; ----------------------------------------------------------------
 439+ 907F              ;
 440+ 907F              ;   4/3/23
 441+ 907F              ;
 442+ 907F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 907F              ;   _ al generarse el disparo.
 444+ 907F              ;
 445+ 907F              ;       "$80" ..... No se produce colisión.
 446+ 907F              ;       "$81" ..... Se produce colisión.
 447+ 907F              ;
 448+ 907F              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 907F              ;         _ que forman el disparo.
 450+ 907F
 451+ 907F
 452+ 907F              Comprueba_Colision
 453+ 907F
 454+ 907F              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 907F
 456+ 907F FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9081 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9082
 459+ 9082 CD B8 90         call Modifica_H_Velocidad_disparo
 460+ 9085
 461+ 9085 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9086 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9088 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 908A
 465+ 908A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 908C CD A8 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 908F
 468+ 908F 7B               ld a,e
 469+ 9090 E6 01            and 1
 470+ 9092 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9094              ;                                                  ; _ para activar IMPACTO.
 472+ 9094 E1               pop hl
 473+ 9095 E5               push hl
 474+ 9096 CD 09 97         call NextScan
 475+ 9099
 476+ 9099 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 909A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 909C 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 909E              ;                                                  ; _ 2º scanline si esto es así.
 480+ 909E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 90A0 CD A8 90         call Bucle_2
 482+ 90A3
 483+ 90A3 43           1 ld b,e
 484+ 90A4 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90A5 FD E1            pop iy
 486+ 90A7 C9               ret
 487+ 90A8
 488+ 90A8              ; ---------- ----------
 489+ 90A8
 490+ 90A8 06 02        Bucle_2 ld b,2
 491+ 90AA FD 7E 00     2 ld a,(iy)
 492+ 90AD A6               and (hl)
 493+ 90AE 28 02            jr z,1F
 494+ 90B0 1E 81            ld e,$81
 495+ 90B2 23           1 inc hl
 496+ 90B3 FD 23            inc iy
 497+ 90B5 10 F3            djnz 2B
 498+ 90B7 C9               ret
 499+ 90B8
 500+ 90B8              ; ---------- ----------
 501+ 90B8              ;
 502+ 90B8              ;   21/7/23
 503+ 90B8
 504+ 90B8              Modifica_H_Velocidad_disparo
 505+ 90B8
 506+ 90B8 3A 40 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90BB FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90BD D0               ret nc                                         ; _ incrementamos H.
 509+ 90BE 24               inc h
 510+ 90BF
 511+ 90BF C9               ret
 512+ 90C0
 513+ 90C0              ; -------------------------------------------------------------------------------------------------------------
 514+ 90C0              ;
 515+ 90C0              ;   11/04/23
 516+ 90C0              ;
 517+ 90C0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90C0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90C0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90C0              ;
 521+ 90C0              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90C0
 523+ 90C0              Compara_coordenadas_X
 524+ 90C0
 525+ 90C0              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90C0              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90C0
 528+ 90C0              ; Preparamos registros:
 529+ 90C0
 530+ 90C0 21 BC 89         ld hl,Filas+6
 531+ 90C3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90C4 23               inc hl
 533+ 90C5 23               inc hl
 534+ 90C6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90C7 43               ld b,e
 536+ 90C8
 537+ 90C8 21 CA 89         ld hl,Filas+20
 538+ 90CB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90CC 21 3B 8A         ld hl,Coordenadas_X_Entidad
 540+ 90CF CD EB 92         call Guarda_coordenadas_X
 541+ 90D2
 542+ 90D2              ; Preparamos registros:
 543+ 90D2
 544+ 90D2 21 AA 85         ld hl,Amadeus_db+6
 545+ 90D5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90D6 23               inc hl
 547+ 90D7 23               inc hl
 548+ 90D8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90D9 7B               ld a,e
 550+ 90DA 08               ex af,af'
 551+ 90DB 21 B8 85         ld hl,Amadeus_db+20
 552+ 90DE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90DF 21 38 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90E2 CD EB 92         call Guarda_coordenadas_X
 555+ 90E5
 556+ 90E5              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90E5              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90E5
 559+ 90E5 04               inc b
 560+ 90E6 05               dec b
 561+ 90E7 28 04            jr z,1F
 562+ 90E9 06 03            ld b,3
 563+ 90EB 18 02            jr 2F
 564+ 90ED 06 02        1 ld b,2
 565+ 90EF 08           2 ex af,af'
 566+ 90F0 3C               inc a
 567+ 90F1 3D               dec a
 568+ 90F2 28 04            jr z,5F
 569+ 90F4 0E 03            ld c,3
 570+ 90F6 18 02            jr 6F
 571+ 90F8 0E 02        5 ld c,2
 572+ 90FA 79           6 ld a,c
 573+ 90FB 08               ex af,af'
 574+ 90FC 11 3B 8A         ld de,Coordenadas_X_Entidad
 575+ 90FF 1A           4 ld a,(de)
 576+ 9100 21 38 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9103 BE           3 cp (hl)
 578+ 9104 28 0E            jr z,7F
 579+ 9106 23               inc hl
 580+ 9107 0D               dec c
 581+ 9108 20 F9            jr nz,3B
 582+ 910A 13               inc de
 583+ 910B 08               ex af,af'
 584+ 910C 4F               ld c,a
 585+ 910D 08               ex af,af'
 586+ 910E 10 EF            djnz 4B
 587+ 9110
 588+ 9110              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9110
 590+ 9110 CD 27 93     8 call Limpia_Coordenadas_X
 591+ 9113 C9               ret
 592+ 9114
 593+ 9114 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9116 32 CF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9119 21 33 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 911C CB D6            set 2,(hl)
 597+ 911E 18 F0            jr 8B
 598+ 9120
 599+ 9120              ; -----------------------------------------------------------------------
 600+ 9120              ;
 601+ 9120              ;   17/04/23
 602+ 9120              ;
 603+ 9120
 604+ 9120              Detecta_colision_nave_entidad
 605+ 9120
 606+ 9120              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9120
 608+ 9120 2A B8 89         ld hl,(Posicion_actual)
 609+ 9123 CD 64 96         call Calcula_puntero_de_impresion
 610+ 9126
 611+ 9126              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9126              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9126
 614+ 9126 DD E5            push ix
 615+ 9128 E1               pop hl
 616+ 9129 E5               push hl
 617+ 912A
 618+ 912A              ; ----- ----- -----
 619+ 912A 1E 00            ld e,0                                         ; Indica impacto.
 620+ 912C 06 0A            ld b,10
 621+ 912E CD 5E 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9131 7B               ld a,e
 623+ 9132 FE 05            cp 5
 624+ 9134 38 0E            jr c,3F
 625+ 9136
 626+ 9136              ; LLegados a este punto:
 627+ 9136              ;
 628+ 9136              ;   HAY COLISIÓN !!!!!.
 629+ 9136              ;
 630+ 9136              ;   .db (Impacto) de Amadeus a "1".
 631+ 9136              ;   SET el bit3 de (Impacto2).
 632+ 9136              ;
 633+ 9136              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9136
 635+ 9136 21 BD 85         ld hl,Amadeus_db+25
 636+ 9139 36 01            ld (hl),1
 637+ 913B 21 33 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 913E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9140 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9142 18 18            jr 1F
 641+ 9144
 642+ 9144              ; -----
 643+ 9144
 644+ 9144 E1           3 pop hl
 645+ 9145 CD 09 97         call NextScan
 646+ 9148 E5               push hl
 647+ 9149 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 914A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 914C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 914E 30 0C            jr nc,1F
 651+ 9150              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9150 10 DC            djnz 2B
 653+ 9152
 654+ 9152              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9152
 656+ 9152              ; LLegados a este punto:
 657+ 9152              ;
 658+ 9152              ;   NO HAY COLISIÓN !!!!!.
 659+ 9152              ;
 660+ 9152              ;   .db (Impacto) de Amadeus a "0".
 661+ 9152              ;   RES el bit2 de (Impacto2).
 662+ 9152              ;
 663+ 9152              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9152              ;   Lo colocamos a "0".
 665+ 9152
 666+ 9152 21 33 8A         ld hl,Impacto2
 667+ 9155 CB 96            res 2,(hl)
 668+ 9157 2A 34 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 915A 36 00            ld (hl),0
 670+ 915C
 671+ 915C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 915D C9               ret
 673+ 915E
 674+ 915E               ; ---------- ----------
 675+ 915E
 676+ 915E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 915F 3A B7 89         ld a,(Columns)
 678+ 9162 47               ld b,a
 679+ 9163 FD 7E 00     2 ld a,(iy)
 680+ 9166 BE               cp (hl)
 681+ 9167 28 01            jr z,1F
 682+ 9169
 683+ 9169 1C               inc e
 684+ 916A
 685+ 916A 23           1 inc hl
 686+ 916B FD 23            inc iy
 687+ 916D 10 F4            djnz 2B
 688+ 916F C1               pop bc
 689+ 9170 C9               ret
 690+ 9171
 691+ 9171              ; -------------------------------------------------------------------------------------------------------------
 692+ 9171              ;
 693+ 9171              ;   13/03/23
 694+ 9171              ;
 695+ 9171              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9171              ;
 697+ 9171              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9171
 699+ 9171 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9174 7E               ld a,(hl)
 701+ 9175 A7               and a
 702+ 9176 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9177
 704+ 9177 44               ld b,h
 705+ 9178 4D               ld c,l
 706+ 9179 2A 10 8A         ld hl,(Stack_snapshot_disparos)
 707+ 917C E5               push hl
 708+ 917D A7               and a
 709+ 917E ED 42            sbc hl,bc
 710+ 9180 E5               push hl
 711+ 9181 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9182
 713+ 9182 E1               pop hl
 714+ 9183 54               ld d,h
 715+ 9184 5D               ld e,l
 716+ 9185 1B               dec de
 717+ 9186 ED B8            lddr                                                ; Limpiamos.
 718+ 9188
 719+ 9188 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 918B 22 10 8A         ld (Stack_snapshot_disparos),hl
 721+ 918E
 722+ 918E C9               ret
 723+ 918F
 724+ 918F              ; -------------------------------------------------------------------------------------------------------------
 725+ 918F              ;
 726+ 918F              ;   18/07/23
 727+ 918F              ;
 728+ 918F
 729+ 918F              Motor_de_disparos
 730+ 918F
 731+ 918F              ; Gestiona DISPAROS DE AMADEUS.
 732+ 918F
 733+ 918F 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9192 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9195
 736+ 9195 CD 89 8D     2 call Extrae_address
 737+ 9198 7E               ld a,(hl)
 738+ 9199 A7               and a
 739+ 919A 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 919C
 741+ 919C              ; ----- ----- ----- ----- ----- -----
 742+ 919C
 743+ 919C C5               push bc
 744+ 919D CD 61 92         call foto_disparo_a_borrar
 745+ 91A0
 746+ 91A0              ; Existe colisión con este disparo???
 747+ 91A0
 748+ 91A0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 91A1 7E               ld a,(hl)
 750+ 91A2 2B               dec hl
 751+ 91A3 E6 01            and 1
 752+ 91A5 28 1D            jr z,9F
 753+ 91A7
 754+ 91A7              ;   En este punto:
 755+ 91A7              ;
 756+ 91A7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91A7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91A7              ;   _con la entidad).
 759+ 91A7              ;
 760+ 91A7              ;   Disparo_2A defw 0                                ; Control.
 761+ 91A7              ;    defw 0                                          ; Puntero objeto.
 762+ 91A7              ;    defw 0                                          ; Puntero de impresión.
 763+ 91A7              ;    defw 0                                          ; Rutina de impresión.
 764+ 91A7
 765+ 91A7 E5               push hl
 766+ 91A8
 767+ 91A8 06 04            ld b,4
 768+ 91AA 23           19 inc hl
 769+ 91AB 10 FD            djnz 19B
 770+ 91AD
 771+ 91AD CD 89 8D         call Extrae_address
 772+ 91B0 CD 8F 9D         call Genera_coordenadas_disparo
 773+ 91B3
 774+ 91B3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91B3
 776+ 91B3 21 36 8A         ld hl,Coordenadas_disparo_certero
 777+ 91B6 72               ld (hl),d
 778+ 91B7 23               inc hl
 779+ 91B8 73               ld (hl),e
 780+ 91B9
 781+ 91B9              ; Elimino el disparo de la base de datos.
 782+ 91B9
 783+ 91B9 E1               pop hl
 784+ 91BA CD E0 92         call Elimina_disparo_de_base_de_datos
 785+ 91BD 21 33 8A         ld hl,Impacto2
 786+ 91C0 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91C2
 788+ 91C2 18 06            jr 11F
 789+ 91C4
 790+ 91C4 CD 8A 92     9 call Mueve_disparo
 791+ 91C7 CD 61 92         call foto_disparo_a_borrar
 792+ 91CA
 793+ 91CA C1           11 pop bc
 794+ 91CB 18 04            jr 7F
 795+ 91CD
 796+ 91CD              ; ----- ----- ----- ----- ----- -----
 797+ 91CD
 798+ 91CD ED 42        1 sbc hl,bc
 799+ 91CF 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91D1
 801+ 91D1 2A 31 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91D4 23               inc hl
 803+ 91D5 23               inc hl
 804+ 91D6 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91D9 18 BA            jr 2B
 806+ 91DB
 807+ 91DB CD 52 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91DE              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91DE
 810+ 91DE              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91DE
 812+ 91DE 01 8A 85         ld bc,Disparo_11
 813+ 91E1 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91E4
 815+ 91E4 CD 89 8D     5 call Extrae_address
 816+ 91E7 7E               ld a,(hl)
 817+ 91E8 A7               and a
 818+ 91E9 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91EB
 820+ 91EB              ; ----- ----- ----- ----- ----- -----
 821+ 91EB
 822+ 91EB C5               push bc
 823+ 91EC CD 61 92         call foto_disparo_a_borrar
 824+ 91EF
 825+ 91EF              ; Existe colisión con este disparo???
 826+ 91EF
 827+ 91EF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91F0 7E               ld a,(hl)
 829+ 91F1 2B               dec hl
 830+ 91F2 E6 01            and 1
 831+ 91F4 28 4D            jr z,10F
 832+ 91F6
 833+ 91F6              ;! La colisión se produce con Amadeus???
 834+ 91F6              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91F6
 836+ 91F6 E5               push hl
 837+ 91F7
 838+ 91F7 06 04            ld b,4
 839+ 91F9 23           16 inc hl
 840+ 91FA 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91FC
 842+ 91FC CD 89 8D         call Extrae_address
 843+ 91FF CD 8F 9D         call Genera_coordenadas_disparo
 844+ 9202
 845+ 9202 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9203 FE 16            cp $16
 847+ 9205 38 2A            jr c,15F
 848+ 9207
 849+ 9207
 850+ 9207              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9207
 852+ 9207 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9208
 854+ 9208              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9208
 856+ 9208
 857+ 9208 2A 3E 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 920B
 859+ 920B              ; Coordenada X de Amadeus en D.
 860+ 920B
 861+ 920B 7D               ld a,l
 862+ 920C E6 1F            and $1F
 863+ 920E 57               ld d,a
 864+ 920F
 865+ 920F 21 AC 85         ld hl,Amadeus_db+8
 866+ 9212 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9213
 868+ 9213 21 38 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9216 CD EB 92         call Guarda_coordenadas_X
 870+ 9219
 871+ 9219 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 921A
 873+ 921A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 921A
 875+ 921A 06 02            ld b,2
 876+ 921C C5           20 push bc
 877+ 921D
 878+ 921D 06 03            ld b,3
 879+ 921F 21 38 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9222 7E           18 ld a,(hl)
 881+ 9223 BA               cp d
 882+ 9224 20 04            jr nz,17F
 883+ 9226
 884+ 9226              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9226
 886+ 9226 C1               pop bc
 887+ 9227 E1               pop hl
 888+ 9228 18 0D            jr 14F
 889+ 922A
 890+ 922A 23           17 inc hl
 891+ 922B 10 F5            djnz 18B
 892+ 922D
 893+ 922D 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 922E
 895+ 922E C1               pop bc
 896+ 922F 10 EB            djnz 20B
 897+ 9231
 898+ 9231
 899+ 9231              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9231              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9231
 902+ 9231 E1           15 pop hl
 903+ 9232 23               inc hl
 904+ 9233 35               dec (hl)
 905+ 9234 2B               dec hl
 906+ 9235 18 0C            jr 10F
 907+ 9237
 908+ 9237              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9237              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9237
 911+ 9237 E5           14 push hl
 912+ 9238 CD E0 92         call Elimina_disparo_de_base_de_datos
 913+ 923B 21 33 8A         ld hl,Impacto2
 914+ 923E CB CE            set 1,(hl)
 915+ 9240 E1               pop hl
 916+ 9241 18 06            jr 12F
 917+ 9243
 918+ 9243              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9243
 920+ 9243 CD 8A 92     10 call Mueve_disparo
 921+ 9246 CD 61 92         call foto_disparo_a_borrar
 922+ 9249 C1           12 pop bc
 923+ 924A
 924+ 924A 18 04            jr 8F
 925+ 924C
 926+ 924C              ; ----- ----- ----- ----- ----- -----
 927+ 924C
 928+ 924C ED 42        4 sbc hl,bc
 929+ 924E 28 0A            jr z,6F
 930+ 9250
 931+ 9250 2A 2F 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9253 23               inc hl
 933+ 9254 23               inc hl
 934+ 9255 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9258 18 8A            jr 5B
 936+ 925A
 937+ 925A CD 4B 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 925D CD 27 93         call Limpia_Coordenadas_X
 939+ 9260 C9               ret
 940+ 9261
 941+ 9261              ; ------------------------------------------------------------------
 942+ 9261
 943+ 9261              foto_disparo_a_borrar
 944+ 9261
 945+ 9261 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9262 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9263 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9264
 949+ 9264 E5               push hl
 950+ 9265 23               inc hl
 951+ 9266 23               inc hl
 952+ 9267 ED 73 0A 8A      ld (Stack),sp
 953+ 926B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 926C FD E1            pop iy
 955+ 926E DD E1            pop ix
 956+ 9270 E1               pop hl
 957+ 9271 ED 7B 0A 8A      ld sp,(Stack)
 958+ 9275 3A F9 89         ld a,(Ctrl_1)
 959+ 9278 CB C7            set 0,a
 960+ 927A 32 F9 89         ld (Ctrl_1),a
 961+ 927D CD A0 7F         call Guarda_foto_registros
 962+ 9280 3A F9 89         ld a,(Ctrl_1)
 963+ 9283 CB 87            res 0,a
 964+ 9285 32 F9 89         ld (Ctrl_1),a
 965+ 9288 E1               pop hl
 966+ 9289 C9               ret
 967+ 928A
 968+ 928A              ;---------------------------------------------------
 969+ 928A              ;
 970+ 928A              ;   18/07/23
 971+ 928A              ;
 972+ 928A
 973+ 928A              Mueve_disparo
 974+ 928A
 975+ 928A              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 928A              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 928A              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 928A
 979+ 928A E5               push hl
 980+ 928B
 981+ 928B 7E               ld a,(hl)
 982+ 928C
 983+ 928C 06 04            ld b,4
 984+ 928E 23           1 inc hl
 985+ 928F 10 FD            djnz 1B
 986+ 9291
 987+ 9291              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9291
 989+ 9291 CD 89 8D         call Extrae_address
 990+ 9294
 991+ 9294 E6 01            and 1
 992+ 9296 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9298
 994+ 9298              ; Disparo hacia arriba, (Amadeus).
 995+ 9298
 996+ 9298              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9298              ; _ de la dificultad.
 998+ 9298
 999+ 9298 CD 18 97         call PreviousScan
1000+ 929B CD 18 97         call PreviousScan
1001+ 929E CD 18 97         call PreviousScan
1002+ 92A1 CD 18 97         call PreviousScan
1003+ 92A4
1004+ 92A4              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92A4
1006+ 92A4 7C               ld a,h
1007+ 92A5 FE 40            cp $40
1008+ 92A7 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92A9
1010+ 92A9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92A9
1012+ 92A9 EB               ex de,hl
1013+ 92AA 06 04            ld b,4
1014+ 92AC 2B           6 dec hl
1015+ 92AD 10 FD            djnz 6B
1016+ 92AF
1017+ 92AF CD E0 92         call Elimina_disparo_de_base_de_datos
1018+ 92B2 E1               pop hl
1019+ 92B3 18 10            jr 7F
1020+ 92B5
1021+ 92B5              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92B5              ; HL contiene el puntero de impresión del disparo.
1023+ 92B5              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92B5
1025+ 92B5 D5           3 push de
1026+ 92B6 C5               push bc
1027+ 92B7
1028+ 92B7 CD 7F 90         call Comprueba_Colision
1029+ 92BA
1030+ 92BA              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92BA
1032+ 92BA 78               ld a,b
1033+ 92BB
1034+ 92BB C1               pop bc
1035+ 92BC D1               pop de
1036+ 92BD
1037+ 92BD EB               ex de,hl
1038+ 92BE
1039+ 92BE 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92BF 23               inc hl                                      ; _ movimiento.
1041+ 92C0 72               ld (hl),d
1042+ 92C1
1043+ 92C1 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92C2
1045+ 92C2 23               inc hl                                      ; _ en curso.
1046+ 92C3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92C4 2B               dec hl
1048+ 92C5
1049+ 92C5 C9           7 ret
1050+ 92C6
1051+ 92C6              ; Disparo hacia abajo, (Entidad).
1052+ 92C6
1053+ 92C6 3A 40 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92C9 47               ld b,a
1055+ 92CA
1056+ 92CA CD 09 97     4 call NextScan
1057+ 92CD 10 FB            djnz 4B
1058+ 92CF
1059+ 92CF              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92CF
1061+ 92CF 7C               ld a,h
1062+ 92D0 FE 58            cp $58
1063+ 92D2 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92D4
1065+ 92D4 EB               ex de,hl
1066+ 92D5 06 04            ld b,4
1067+ 92D7 2B           5 dec hl
1068+ 92D8 10 FD            djnz 5B
1069+ 92DA
1070+ 92DA CD E0 92         call Elimina_disparo_de_base_de_datos
1071+ 92DD E1               pop hl
1072+ 92DE 18 E5            jr 7B
1073+ 92E0
1074+ 92E0              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92E0
1076+ 92E0 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92E3 AF               xor a
1078+ 92E4 77               ld (hl),a
1079+ 92E5 54               ld d,h
1080+ 92E6 5D               ld e,l
1081+ 92E7 13               inc de
1082+ 92E8 ED B0            ldir
1083+ 92EA C9               ret
1084+ 92EB
1085+ 92EB              ; -----------------------------------------------------------------
1086+ 92EB              ;
1087+ 92EB              ;   19/7/23
1088+ 92EB              ;
1089+ 92EB              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92EB              ;
1091+ 92EB              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92EB              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92EB              ;
1094+ 92EB              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92EB              ;
1096+ 92EB              ;   INPUTS:
1097+ 92EB              ;
1098+ 92EB              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92EB              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92EB
1101+ 92EB              ;   MODIFICA: A, HL, BC y DE.
1102+ 92EB
1103+ 92EB              Guarda_coordenadas_X
1104+ 92EB
1105+ 92EB 7B               ld a,e
1106+ 92EC A7               and a
1107+ 92ED 20 04            jr nz,1F
1108+ 92EF
1109+ 92EF 06 02            ld b,2
1110+ 92F1 18 02            jr 2F
1111+ 92F3
1112+ 92F3 06 03        1 ld b,3
1113+ 92F5 72           2 ld (hl),d
1114+ 92F6 23               inc hl
1115+ 92F7 14               inc d
1116+ 92F8 10 FB            djnz 2B
1117+ 92FA
1118+ 92FA C9               ret
1119+ 92FB
1120+ 92FB              ; -----------------------------------------------------------------
1121+ 92FB              ;
1122+ 92FB              ;   12/04/23
1123+ 92FB              ;
1124+ 92FB
1125+ 92FB 3A 33 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92FE A7               and a
1127+ 92FF C8               ret z
1128+ 9300
1129+ 9300 FE 04            cp 4
1130+ 9302 20 09            jr nz,1F
1131+ 9304
1132+ 9304
1133+ 9304              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9304
1135+ 9304 CD 20 91         call Detecta_colision_nave_entidad
1136+ 9307
1137+ 9307 21 33 8A         ld hl,Impacto2
1138+ 930A CB 5E            bit 3,(hl)
1139+ 930C C0               ret nz                                               ; Existe colisión, RET.
1140+ 930D
1141+ 930D              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 930D              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 930D
1144+ 930D 21 33 8A     1 ld hl,Impacto2
1145+ 9310 CB 4E            bit 1,(hl)
1146+ 9312 28 07            jr z,2F
1147+ 9314
1148+ 9314 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9317 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9319 18 0B            jr 3F
1151+ 931B
1152+ 931B 21 33 8A     2 ld hl,Impacto2
1153+ 931E CB 46            bit 0,(hl)
1154+ 9320 C8               ret z
1155+ 9321
1156+ 9321              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9321
1158+ 9321 21 F9 89         ld hl,Ctrl_1
1159+ 9324 CB D6            set 2,(hl)
1160+ 9326
1161+ 9326 C9           3 ret
1162+ 9327
1163+ 9327              ; -----------------------------------------------------------------
1164+ 9327              ;
1165+ 9327              ;   19/7/23
1166+ 9327              ;
1167+ 9327              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9327
1169+ 9327 AF           Limpia_Coordenadas_X xor a
1170+ 9328 06 06            ld b,6
1171+ 932A 21 38 8A         ld hl,Coordenadas_X_Amadeus
1172+ 932D 77           1 ld (hl),a
1173+ 932E 23               inc hl
1174+ 932F 10 FC            djnz 1B
1175+ 9331 C9               ret
1176+ 9332
1177+ 9332              ; -----------------------------------------------------------------
1178+ 9332              ;
1179+ 9332              ;   25/04/23
1180+ 9332              ;
1181+ 9332
1182+ 9332              Determina_resultado_comparativa
1183+ 9332
1184+ 9332              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9332              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9332              ;
1187+ 9332              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9332              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9332              ;
1190+ 9332              ;   SBC HL,DE
1191+ 9332
1192+ 9332              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9332              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9332
1195+ 9332              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9332              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9332
1198+ 9332
1199+ 9332 3A CA 89         ld a,(Cuad_objeto)
1200+ 9335 FE 02            cp 2
1201+ 9337 28 26            jr z,2F
1202+ 9339 38 24            jr c,2F
1203+ 933B
1204+ 933B              ; Cuadrantes 3º y 4º
1205+ 933B
1206+ 933B E6 01            and 1
1207+ 933D 28 10            jr z,4F
1208+ 933F
1209+ 933F              ; Cuadrante 3º
1210+ 933F
1211+ 933F 7C               ld a,h
1212+ 9340 06 00            ld b,0
1213+ 9342
1214+ 9342 CD CD 93         call Compara_cositas_H3
1215+ 9345
1216+ 9345 04               inc b
1217+ 9346 05               dec b
1218+ 9347 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9348
1220+ 9348 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9349 06 00            ld b,0
1222+ 934B
1223+ 934B CD DF 93         call Compara_cositas_L3
1224+ 934E C9               ret
1225+ 934F
1226+ 934F              ; Cuadrante 4º
1227+ 934F
1228+ 934F 7C           4 ld a,h
1229+ 9350 06 00            ld b,0
1230+ 9352
1231+ 9352 CD F1 93         call Compara_cositas_H4
1232+ 9355
1233+ 9355 04               inc b
1234+ 9356 05               dec b
1235+ 9357 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9358
1237+ 9358 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9359 06 00            ld b,0
1239+ 935B
1240+ 935B CD 07 94         call Compara_cositas_L4
1241+ 935E C9               ret
1242+ 935F
1243+ 935F              ; Cuadrantes 1º y 2º.
1244+ 935F
1245+ 935F 28 10        2 jr z,3F
1246+ 9361
1247+ 9361              ; 1er Cuadrante
1248+ 9361
1249+ 9361 7C               ld a,h
1250+ 9362 06 00            ld b,0
1251+ 9364
1252+ 9364 CD A5 93         call Compara_cositas_H1
1253+ 9367
1254+ 9367 04               inc b
1255+ 9368 05               dec b
1256+ 9369 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 936A
1258+ 936A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 936B 06 00            ld b,0
1260+ 936D
1261+ 936D CD BB 93         call Compara_cositas_L1
1262+ 9370 C9               ret
1263+ 9371
1264+ 9371
1265+ 9371              ; 2º Cuadrante
1266+ 9371
1267+ 9371 7C           3 ld a,h
1268+ 9372 06 00            ld b,0
1269+ 9374
1270+ 9374 CD 81 93         call Compara_cositas_H2
1271+ 9377
1272+ 9377 04               inc b
1273+ 9378 05               dec b
1274+ 9379 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 937A
1276+ 937A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 937B 06 00            ld b,0
1278+ 937D
1279+ 937D CD 93 93         call Compara_cositas_L2
1280+ 9380 C9               ret
1281+ 9381
1282+ 9381 A7           Compara_cositas_H2 and a
1283+ 9382 28 0D            jr z,1F
1284+ 9384              ;    cp $fd
1285+ 9384              ;    jr z,1F
1286+ 9384              ;    cp $fe
1287+ 9384              ;    jr z,1F
1288+ 9384 FE FF            cp $ff
1289+ 9386 28 09            jr z,1F
1290+ 9388 FE 01            cp $01
1291+ 938A 28 05            jr z,1F
1292+ 938C FE 02            cp $02
1293+ 938E 28 01            jr z,1F
1294+ 9390 C0               ret nz
1295+ 9391 04           1 inc b
1296+ 9392 C9               ret
1297+ 9393
1298+ 9393 A7           Compara_cositas_L2 and a
1299+ 9394 28 0D            jr z,1F
1300+ 9396              ;    cp $fd
1301+ 9396              ;    jr z,1F
1302+ 9396 FE FE            cp $fe
1303+ 9398 28 09            jr z,1F
1304+ 939A FE FF            cp $ff
1305+ 939C 28 05            jr z,1F
1306+ 939E FE 01            cp $01
1307+ 93A0 28 01            jr z,1F
1308+ 93A2              ;    cp $02
1309+ 93A2              ;    jr z,1F
1310+ 93A2 C0               ret nz
1311+ 93A3 04           1 inc b
1312+ 93A4 C9               ret
1313+ 93A5
1314+ 93A5 A7           Compara_cositas_H1 and a
1315+ 93A6 28 11            jr z,1F
1316+ 93A8              ;    cp $fd
1317+ 93A8              ;    jr z,1F
1318+ 93A8              ;    cp $fe
1319+ 93A8              ;    jr z,1F
1320+ 93A8 FE FF            cp $ff
1321+ 93AA 28 0D            jr z,1F
1322+ 93AC FE 01            cp $01
1323+ 93AE 28 09            jr z,1F
1324+ 93B0 FE 02            cp $02
1325+ 93B2 28 05            jr z,1F
1326+ 93B4 FE 03            cp $03
1327+ 93B6 28 01            jr z,1F
1328+ 93B8 C0               ret nz
1329+ 93B9 04           1 inc b
1330+ 93BA C9               ret
1331+ 93BB
1332+ 93BB A7           Compara_cositas_L1 and a
1333+ 93BC 28 0D            jr z,1F
1334+ 93BE              ;    cp $fd
1335+ 93BE              ;    jr z,1F
1336+ 93BE              ;    cp $fe
1337+ 93BE              ;    jr z,1F
1338+ 93BE              ;    cp $ff
1339+ 93BE              ;    jr z,1F
1340+ 93BE FE 01            cp $01
1341+ 93C0 28 09            jr z,1F
1342+ 93C2 FE 02            cp $02
1343+ 93C4 28 05            jr z,1F
1344+ 93C6 FE 03            cp $03
1345+ 93C8 28 01            jr z,1F
1346+ 93CA C0               ret nz
1347+ 93CB 04           1 inc b
1348+ 93CC C9               ret
1349+ 93CD
1350+ 93CD A7           Compara_cositas_H3 and a
1351+ 93CE 28 0D            jr z,1F
1352+ 93D0              ;    cp $fd
1353+ 93D0              ;    jr z,1F
1354+ 93D0 FE FE            cp $fe
1355+ 93D2 28 09            jr z,1F
1356+ 93D4 FE FF            cp $ff
1357+ 93D6 28 05            jr z,1F
1358+ 93D8 FE 01            cp $01
1359+ 93DA 28 01            jr z,1F
1360+ 93DC              ;    cp $02
1361+ 93DC              ;    jr z,1F
1362+ 93DC              ;    cp $03
1363+ 93DC              ;    jr z,1F
1364+ 93DC C0               ret nz
1365+ 93DD 04           1 inc b
1366+ 93DE C9               ret
1367+ 93DF
1368+ 93DF A7           Compara_cositas_L3 and a
1369+ 93E0 28 0D            jr z,1F
1370+ 93E2              ;    cp $fd
1371+ 93E2              ;    jr z,1F
1372+ 93E2              ;    cp $fe
1373+ 93E2              ;    jr z,1F
1374+ 93E2              ;    cp $ff
1375+ 93E2              ;    jr z,1F
1376+ 93E2 FE 01            cp $01
1377+ 93E4 28 09            jr z,1F
1378+ 93E6 FE 02            cp $02
1379+ 93E8 28 05            jr z,1F
1380+ 93EA FE 03            cp $03
1381+ 93EC 28 01            jr z,1F
1382+ 93EE C0               ret nz
1383+ 93EF 04           1 inc b
1384+ 93F0 C9               ret
1385+ 93F1
1386+ 93F1 A7           Compara_cositas_H4 and a
1387+ 93F2 28 11            jr z,1F
1388+ 93F4 FE FD            cp $fd
1389+ 93F6 28 0D            jr z,1F
1390+ 93F8 FE FE            cp $fe
1391+ 93FA 28 09            jr z,1F
1392+ 93FC FE FF            cp $ff
1393+ 93FE 28 05            jr z,1F
1394+ 9400 FE 01            cp $01
1395+ 9402 28 01            jr z,1F
1396+ 9404              ;    cp $02
1397+ 9404              ;    jr z,1F
1398+ 9404              ;    cp $03
1399+ 9404              ;    jr z,1F
1400+ 9404 C0               ret nz
1401+ 9405 04           1 inc b
1402+ 9406 C9               ret
1403+ 9407
1404+ 9407 A7           Compara_cositas_L4 and a
1405+ 9408 28 0D            jr z,1F
1406+ 940A              ;    cp $fd
1407+ 940A              ;    jr z,1F
1408+ 940A FE FE            cp $fe
1409+ 940C 28 09            jr z,1F
1410+ 940E FE FF            cp $ff
1411+ 9410 28 05            jr z,1F
1412+ 9412 FE 01            cp $01
1413+ 9414 28 01            jr z,1F
1414+ 9416              ;    cp $02
1415+ 9416              ;    jr z,1F
1416+ 9416              ;    cp $03
1417+ 9416              ;    jr z,1F
1418+ 9416 C0               ret nz
1419+ 9417 04           1 inc b
1420+ 9418 C9               ret
# file closed: Disparo.asm
1475  9419              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9419              ; ******************************************************************************************************************************************************************************************
   2+ 9419              ;
   3+ 9419              ; 26/06/23
   4+ 9419              ;
   5+ 9419              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9419
   7+ 9419 CD FD 96     Draw call Prepara_draw
   8+ 941C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 941D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 941E 28 05        	jr z,2F
  11+ 9420
  12+ 9420 3A CA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9423 18 0C        	jr 1F
  14+ 9425
  15+ 9425 2A C8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9428 22 B8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 942B CD BA 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 942E              ;													; _la esquina superior izquierda de la pantalla.
  19+ 942E CD 0B A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9431
  21+ 9431 3A E4 89     1 ld a,(Ctrl_0)
  22+ 9434 CB 6F        	bit 5,a
  23+ 9436 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9438
  25+ 9438 CD 50 94     	call Comprueba_limite_horizontal
  26+ 943B CD E0 94     	call Comprueba_limite_vertical
  27+ 943E
  28+ 943E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 943E              ; -----------------------
  30+ 943E              ; -----------------------
  31+ 943E              ; -----------------------
  32+ 943E
  33+ 943E CD 2D 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9441 CD 64 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9444 CD C3 96     	call Define_rutina_de_impresion
  36+ 9447
  37+ 9447 3A E4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 944A CB AF        	res 5,a											; _a ser de utilidad.
  39+ 944C 32 E4 89     	ld (Ctrl_0),a
  40+ 944F
  41+ 944F C9           	ret
  42+ 9450
  43+ 9450              ; *******************************************************************************************************************************************************************************************
  44+ 9450              ;	21/01/23
  45+ 9450              ;
  46+ 9450              ; 	Comprueba_limite_horizontal.
  47+ 9450              ;
  48+ 9450              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9450              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9450              ;
  51+ 9450              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9450              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9450              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9450              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9450
  56+ 9450
  57+ 9450
  58+ 9450 3A E4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9453 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9455 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9457 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9459 32 E4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 945C 18 09            jr 6F
  64+ 945E CB 5F        1 bit 3,a
  65+ 9460 28 0A            jr z,2F
  66+ 9462 E6 F7            and $f7
  67+ 9464 32 E4 89         ld (Ctrl_0),a
  68+ 9467 CD BA 95     6 call Inicializacion
  69+ 946A 18 5B            jr 5F
  70+ 946C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 946D
  72+ 946D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 946D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 946D
  75+ 946D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 946E 2A F4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9471 CD D9 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9474 67           	ld h,a
  79+ 9475 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9476 CD D9 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9479 67           	ld h,a
  82+ 947A A7           	and a
  83+ 947B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 947D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 947E 3A CA 89     	ld a,(Cuad_objeto)
  86+ 9481 FE 02        	cp 2
  87+ 9483 38 1E        	jr c,3F
  88+ 9485 28 1C        	jr z,3F
  89+ 9487 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9488 28 23            jr z,7F
  91+ 948A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 948C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 948E E1           	pop hl
  94+ 948F
  95+ 948F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 948F              ; _para indicar con E="2" en caso necesario.
  97+ 948F
  98+ 948F E5               push hl
  99+ 9490 C5               push bc
 100+ 9491 CD D9 99     	call calcula_tercio
 101+ 9494 FE 01        	cp 1
 102+ 9496 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9498 CD C8 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 949B 28 26            jr z,9F
 105+ 949D 38 24            jr c,9F
 106+ 949F 1E 00        11 ld e,0
 107+ 94A1 18 22            jr 8F
 108+ 94A3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94A4 28 07        	jr z, 7F
 110+ 94A6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94A8 1E 00         	ld e,0
 112+ 94AA E1           	pop hl
 113+ 94AB 18 04        	jr 4F
 114+ 94AD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94AF 18 15            jr 10F
 116+ 94B1
 117+ 94B1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94B1              ; _para indicar con E="2" en caso necesario.
 119+ 94B1
 120+ 94B1 E5           4 push hl
 121+ 94B2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94B3 CD D9 99     	call calcula_tercio
 123+ 94B6 FE 01        	cp 1
 124+ 94B8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94BA CD C8 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94BD 28 04            jr z,9F
 127+ 94BF 30 02            jr nc,9F
 128+ 94C1 18 02        	jr 8F
 129+ 94C3 1E 02        9 ld e,2
 130+ 94C5 C1           8 pop bc
 131+ 94C6 E1           10 pop hl
 132+ 94C7 C9           5 ret
 133+ 94C8
 134+ 94C8              ; --------------------
 135+ 94C8              ;
 136+ 94C8              ; 25/08/22
 137+ 94C8
 138+ 94C8 CD D9 99     Comprueba_centro call calcula_tercio
 139+ 94CB 67               ld h,a
 140+ 94CC 08           	ex af,af
 141+ 94CD FE 02        	cp 2
 142+ 94CF 38 07        	jr c,1F
 143+ 94D1 28 05        	jr z,1F
 144+ 94D3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94D6 18 03        	jr 2F
 146+ 94D8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94DB 08           2 ex af,af
 148+ 94DC A7               and a
 149+ 94DD ED 42            sbc hl,bc
 150+ 94DF C9               ret
 151+ 94E0
 152+ 94E0              ; *********************************************************************************************************************************************************************************************
 153+ 94E0              ;
 154+ 94E0              ;   16/8/22
 155+ 94E0              ;
 156+ 94E0              ;	Comprueba_limite_vertical
 157+ 94E0              ;
 158+ 94E0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94E0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94E0              ;
 161+ 94E0
 162+ 94E0 2A B8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94E3 7D           	ld a,l
 164+ 94E4 E6 1F        	and $1F
 165+ 94E6 57           	ld d,a
 166+ 94E7 3A F6 89     	ld a,(Limite_vertical)
 167+ 94EA BA           	cp d 											; Límite - Posición.
 168+ 94EB 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94EC 3A CA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94EF CB 47        	bit 0,a
 171+ 94F1 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94F3
 173+ 94F3              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94F3
 175+ 94F3 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94F4 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94F6
 178+ 94F6              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94F6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94F6
 181+ 94F6 3A BC 89         ld a,(Coordenada_X)
 182+ 94F9 16 0F            ld d,Centro_izquierda
 183+ 94FB A7               and a
 184+ 94FC 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94FD 28 1E            jr z,3F
 186+ 94FF 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9501              ;                                                    ; _salimos sin modificar nada.
 188+ 9501 18 0E            jr 2F
 189+ 9503 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9504 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9506
 192+ 9506              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9506              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9506
 195+ 9506 3A BC 89         ld a,(Coordenada_X)
 196+ 9509 16 10            ld d,Centro_derecha
 197+ 950B A7               and a
 198+ 950C 92               sub d
 199+ 950D 28 0E            jr z,3F
 200+ 950F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9511              ;                                                    ; _salimos sin modificar nada.
 202+ 9511 CB 43        2 bit 0,e
 203+ 9513 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9515 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9516 CD AA 95         call Modificaccionne
 206+ 9519 C1           	pop bc
 207+ 951A CD BA 95         call Inicializacion
 208+ 951D C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 951E
 210+ 951E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 951E
 212+ 951E C5           4 push bc
 213+ 951F 01 B7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9522 0A           	ld a,(bc)
 215+ 9523 3D           	dec a
 216+ 9524 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9525 7D           	ld a,l
 218+ 9526 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9527 CB 47        	bit 0,a
 220+ 9529 28 03        	jr z,5F
 221+ 952B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 952C 18 2E        	jr 7F
 223+ 952E
 224+ 952E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 952E
 226+ 952E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 952F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9530 3A E4 89     	ld a,(Ctrl_0)
 229+ 9533 CB 4F        	bit 1,a
 230+ 9535 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9537 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9538
 233+ 9538              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9538
 235+ 9538 1C               inc e
 236+ 9539 1D               dec e
 237+ 953A 20 07            jr nz,12F
 238+ 953C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 953D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 953E 22 B8 89     	ld (Posicion_actual),hl
 241+ 9541 18 44        13 jr 9F
 242+ 9543 CB 43        12 bit 0,e
 243+ 9545 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9547              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9547 C1           	pop bc
 246+ 9548 18 D3        	jr 3B
 247+ 954A 80           14 add b
 248+ 954B 6F               ld l,a
 249+ 954C 22 B8 89     	ld (Posicion_actual),hl
 250+ 954F CD AA 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9552 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9554 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9556 32 E4 89         ld (Ctrl_0),a
 254+ 9559 F1           	pop af
 255+ 955A 18 2B        	jr 9F
 256+ 955C
 257+ 955C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 955C
 259+ 955C F5           7 push af
 260+ 955D 3A E4 89     	ld a,(Ctrl_0)
 261+ 9560 CB 47        	bit 0,a
 262+ 9562 20 1D        	jr nz,8F
 263+ 9564 F1           	pop af
 264+ 9565
 265+ 9565              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9565
 267+ 9565 1C           	inc e
 268+ 9566 1D               dec e
 269+ 9567 20 07            jr nz,10F
 270+ 9569 90           	sub b
 271+ 956A 6F               ld l,a
 272+ 956B 22 B8 89     	ld (Posicion_actual),hl
 273+ 956E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9570              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9570 CB 43        10 bit 0,e
 276+ 9572 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9574              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9574 C1           	pop bc
 279+ 9575 18 A6        	jr 3B
 280+ 9577 90           16 sub b
 281+ 9578 6F               ld l,a
 282+ 9579 22 B8 89     	ld (Posicion_actual),hl
 283+ 957C CD AA 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 957F 18 06            jr 9F
 285+ 9581 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9583 32 E4 89         ld (Ctrl_0),a
 287+ 9586 F1           	pop af
 288+ 9587 C1           9 pop bc
 289+ 9588 1E 00        	ld e,0
 290+ 958A CD BA 95         call Inicializacion
 291+ 958D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 958E 08           	ex af,af
 293+ 958F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9590 18 8B            jr 3B
 295+ 9592
 296+ 9592              ; --------------------
 297+ 9592
 298+ 9592 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9594 CD 18 97     1 call PreviousScan
 300+ 9597 10 FB            djnz 1B
 301+ 9599 22 B8 89     	ld (Posicion_actual),hl
 302+ 959C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 959D C9           	ret
 304+ 959E
 305+ 959E              ; --------------------
 306+ 959E
 307+ 959E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 95A0 CD 09 97     1 call NextScan
 309+ 95A3 10 FB            djnz 1B
 310+ 95A5 22 B8 89     	ld (Posicion_actual),hl
 311+ 95A8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95A9 C9           	ret
 313+ 95AA
 314+ 95AA              ; --------------------
 315+ 95AA              ;
 316+ 95AA              ;	22/01/23
 317+ 95AA              ;
 318+ 95AA              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95AA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95AA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95AA
 322+ 95AA
 323+ 95AA              Modificaccionne
 324+ 95AA
 325+ 95AA 3A CA 89     	ld a,(Cuad_objeto)
 326+ 95AD FE 02        	cp 2
 327+ 95AF CC 92 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95B2 DC 92 95         call c,Modifica_Pos_actual
 329+ 95B5 C8           	ret z
 330+ 95B6 CD 9E 95         call Modifica_Pos_actual2
 331+ 95B9 C9               ret
 332+ 95BA
 333+ 95BA              ; *************************************************************************************************************************************************************************************************
 334+ 95BA              ;
 335+ 95BA              ;	13/8/22
 336+ 95BA              ;
 337+ 95BA              ;	Inicializacion
 338+ 95BA              ;
 339+ 95BA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95BA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95BA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95BA              ;
 343+ 95BA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95BA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95BA              ;	_ desaparece/aparece.
 346+ 95BA
 347+ 95BA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95BA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95BA              ;
 350+ 95BA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95BA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95BA              ; 		   [E] ="0"
 353+ 95BA
 354+ 95BA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95BA
 356+ 95BA CD D9 99     Inicializacion call calcula_tercio
 357+ 95BD 28 36        	jr z,primit
 358+ 95BF E6 02        	and 2
 359+ 95C1 20 07        	jr nz,segmit
 360+ 95C3 7D           	ld a,l
 361+ 95C4 FE 7F        	cp $7f
 362+ 95C6 38 2D        	jr c,primit
 363+ 95C8 28 2B        	jr z,primit
 364+ 95CA CD 27 96     segmit call column
 365+ 95CD 38 13        	jr c,tercuad
 366+ 95CF 3E 04        cuarcuad ld a,4
 367+ 95D1 32 CA 89     	ld (Cuad_objeto),a
 368+ 95D4 21 20 48     	ld hl,$4820
 369+ 95D7 22 F4 89     	ld (Limite_horizontal),hl
 370+ 95DA 21 F6 89     	ld hl,Limite_vertical
 371+ 95DD 36 0D        	ld (hl),$0d
 372+ 95DF 08           	ex af,af
 373+ 95E0 18 3C        	jr 1F
 374+ 95E2              tercuad
 375+ 95E2 3E 03        	ld a,3
 376+ 95E4 32 CA 89     	ld (Cuad_objeto),a
 377+ 95E7 21 20 48     	ld hl,$4820
 378+ 95EA 22 F4 89     	ld (Limite_horizontal),hl
 379+ 95ED 21 F6 89     	ld hl,Limite_vertical
 380+ 95F0 36 12        	ld (hl),$12
 381+ 95F2 08           	ex af,af
 382+ 95F3 18 29        	jr 1F
 383+ 95F5 CD 27 96     primit call column
 384+ 95F8 38 13        	jr c, primcuad
 385+ 95FA              segcuad
 386+ 95FA 3E 02        	ld a,2
 387+ 95FC 32 CA 89     	ld (Cuad_objeto),a
 388+ 95FF 21 C0 4F     	ld hl,$4fc0
 389+ 9602 22 F4 89     	ld (Limite_horizontal),hl
 390+ 9605 21 F6 89     	ld hl,Limite_vertical
 391+ 9608 36 0D        	ld (hl),$0d
 392+ 960A 08           	ex af,af
 393+ 960B 18 11        	jr 1F
 394+ 960D              primcuad
 395+ 960D 3E 01        	ld a,1
 396+ 960F 32 CA 89     	ld (Cuad_objeto),a
 397+ 9612 21 C0 4F     	ld hl,$4fc0
 398+ 9615 22 F4 89     	ld (Limite_horizontal),hl
 399+ 9618 21 F6 89     	ld hl,Limite_vertical
 400+ 961B 36 12        	ld (hl),$12
 401+ 961D 08           	ex af,af
 402+ 961E CD 64 9D     1 call Genera_coordenadas
 403+ 9621 21 E4 89     	ld hl,Ctrl_0
 404+ 9624 CB EE        	set 5,(hl)
 405+ 9626 C9           	ret
 406+ 9627
 407+ 9627              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9627
 409+ 9627              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9627              ;
 411+ 9627              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9627
 413+ 9627 7D           column ld a,l
 414+ 9628 E6 1F        	and $1f
 415+ 962A FE 10         	cp $10
 416+ 962C C9            	ret
 417+ 962D
 418+ 962D              ; --------------------------------------------------------------------------------------------------------------------
 419+ 962D              ;
 420+ 962D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 962D              ;
 422+ 962D              ; 14/12/22
 423+ 962D              ;
 424+ 962D              ;	Modifica: A y BC.
 425+ 962D
 426+ 962D 3A CA 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9630 E6 01        	and 1
 428+ 9632 28 17        	jr z,1F
 429+ 9634
 430+ 9634              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9634
 432+ 9634 3A BC 89     	ld a,(Coordenada_X)
 433+ 9637 47           	ld b,a
 434+ 9638 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9639 79           	ld a,c
 436+ 963A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 963B 38 08        	jr c,2F
 438+ 963D 47           	ld b,a
 439+ 963E 79           	ld a,c
 440+ 963F 90           	sub b
 441+ 9640 32 F3 89     	ld (Columnas),a
 442+ 9643 18 1B        	jr 4F
 443+ 9645 79           2 ld a,c
 444+ 9646 32 F3 89     	ld (Columnas),a
 445+ 9649 18 15        	jr 4F
 446+ 964B
 447+ 964B              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 964B
 449+ 964B 3A BC 89     1 ld a,(Coordenada_X)
 450+ 964E 81           	add c
 451+ 964F 3D           	dec a
 452+ 9650 D6 1F        	sub $1f
 453+ 9652 38 08        	jr c,3F
 454+ 9654 47           	ld b,a
 455+ 9655 79           	ld a,c
 456+ 9656 90           	sub b
 457+ 9657 32 F3 89     	ld (Columnas),a
 458+ 965A 18 04        	jr 4F
 459+ 965C 79           3 ld a,c
 460+ 965D 32 F3 89     	ld (Columnas),a
 461+ 9660 D9           4 exx
 462+ 9661 4F           	ld c,a
 463+ 9662 D9           	exx
 464+ 9663 C9            ret
 465+ 9664
 466+ 9664              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9664              ;
 468+ 9664              ;   19/7/23
 469+ 9664              ;
 470+ 9664              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9664              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9664              ;
 473+ 9664              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9664              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9664              ;
 476+ 9664              ;	DESTRUYE: HL,B Y A.
 477+ 9664
 478+ 9664 3A CA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9667 FE 02        	cp 2
 480+ 9669 38 18        	jr c,1F
 481+ 966B 28 16        	jr z,1F
 482+ 966D E6 01        	and 1
 483+ 966F 28 0D        	jr z,3F
 484+ 9671
 485+ 9671              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9671
 487+ 9671 CD B7 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9674
 489+ 9674 7D           9 ld a,l
 490+ 9675 E6 1F        	and $1f
 491+ 9677 28 2A        	jr z,7F
 492+ 9679 2B           	dec hl
 493+ 967A 10 F8        	djnz 9B
 494+ 967C 18 25        	jr 7F
 495+ 967E
 496+ 967E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 967E
 498+ 967E 2A B8 89     3 ld hl,(Posicion_actual)
 499+ 9681 18 20        	jr 7F
 500+ 9683
 501+ 9683 28 14        1 jr z,2F
 502+ 9685
 503+ 9685              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9685
 505+ 9685 CD B7 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9688
 507+ 9688 7D           4 ld a,l
 508+ 9689 E6 1F        	and $1f
 509+ 968B 28 03        	jr z,6F
 510+ 968D 2B           	dec hl
 511+ 968E 10 F8        	djnz 4B
 512+ 9690 06 0F        6 ld b,15
 513+ 9692 CD 18 97     5 call PreviousScan
 514+ 9695 10 FB        	djnz 5B
 515+ 9697 18 0A        	jr 7F
 516+ 9699
 517+ 9699              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9699
 519+ 9699 CD B7 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 969C 06 0F        	ld b,15
 521+ 969E CD 18 97     8 call PreviousScan
 522+ 96A1 10 FB        	djnz 8B
 523+ 96A3
 524+ 96A3 E5           7 push hl
 525+ 96A4 DD E1        	pop ix
 526+ 96A6
 527+ 96A6 2A BA 89     	ld hl,(Puntero_objeto)
 528+ 96A9 E5           	push hl
 529+ 96AA FD E1        	pop iy
 530+ 96AC
 531+ 96AC              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96AC
 533+ 96AC 3A E4 89     	ld a,(Ctrl_0)
 534+ 96AF CB 77        	bit 6,a
 535+ 96B1 C8           	ret z
 536+ 96B2
 537+ 96B2              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96B2              ; _ entidad / Amadeus´.
 539+ 96B2
 540+ 96B2 DD 22 3E 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96B6
 542+ 96B6 C9           	ret
 543+ 96B7
 544+ 96B7              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96B7              ;
 546+ 96B7              ;	2/1/23
 547+ 96B7              ;
 548+ 96B7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96B7              ;
 550+ 96B7              ;	Tras esta rutina tenemos:
 551+ 96B7              ;
 552+ 96B7              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96B7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96B7              ;
 555+ 96B7              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96B7
 557+ 96B7 2A B8 89     Operandos ld hl,(Posicion_actual)
 558+ 96BA 3A F3 89     	ld a,(Columnas)
 559+ 96BD 3D           	dec a
 560+ 96BE 20 01        	jr nz,1F
 561+ 96C0 3C           	inc a
 562+ 96C1 47           1 ld b,a
 563+ 96C2 C9           	ret
 564+ 96C3
 565+ 96C3              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96C3              ;
 567+ 96C3              ;	3/1/23
 568+ 96C3              ;
 569+ 96C3              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96C3              ;
 571+ 96C3              ;	Destruye: A,B,HL y DE.
 572+ 96C3
 573+ 96C3              Define_rutina_de_impresion
 574+ 96C3
 575+ 96C3 3A B7 89     	ld a,(Columns)
 576+ 96C6 47           	ld b,a
 577+ 96C7 3A F3 89     	ld a,(Columnas)
 578+ 96CA B8           	cp b
 579+ 96CB 20 0D        	jr nz,2f
 580+ 96CD
 581+ 96CD              ;	La entidad se imprime entera.
 582+ 96CD
 583+ 96CD 21 A9 97     	ld hl, Indice_entidades_completas
 584+ 96D0 E6 01        	and 1
 585+ 96D2 28 02        	jr z,1F
 586+ 96D4
 587+ 96D4 23           	inc hl
 588+ 96D5 23           	inc hl
 589+ 96D6
 590+ 96D6 CD 89 8D     1 call Extrae_address
 591+ 96D9 C9           	ret		;	ret
 592+ 96DA
 593+ 96DA              ;	La entidad no se imprime entera en pantalla.
 594+ 96DA
 595+ 96DA 3A CA 89     2 ld a,(Cuad_objeto)
 596+ 96DD E6 01        	and 1
 597+ 96DF 28 17        	jr z,3F
 598+ 96E1
 599+ 96E1              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96E1
 601+ 96E1 21 AD 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96E4 3A B7 89     4 ld a,(Columns)
 603+ 96E7 E6 01        	and 1
 604+ 96E9 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96EB
 606+ 96EB 23           	inc hl
 607+ 96EC 23           	inc hl
 608+ 96ED
 609+ 96ED 3A F3 89     	ld a,(Columnas)
 610+ 96F0 E6 01        	and 1
 611+ 96F2 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96F4
 613+ 96F4 23           	inc hl
 614+ 96F5 23           	inc hl
 615+ 96F6
 616+ 96F6 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96F8
 618+ 96F8 21 B3 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96FB 18 E7        	jr 4B
 620+ 96FD
 621+ 96FD              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96FD              ;
 623+ 96FD              ;	Prepara_draw
 624+ 96FD              ;
 625+ 96FD              ;	Es una rutina de carga.
 626+ 96FD              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96FD              ;
 628+ 96FD              ;	FUNCIONAMIENTO:
 629+ 96FD              ;
 630+ 96FD              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96FD              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96FD              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96FD              ;
 634+ 96FD              ;	DESTRUYE:
 635+ 96FD              ;
 636+ 96FD              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96FD
 638+ 96FD 21 B6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9700 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9701 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9702 4E           	ld c,(hl)
 642+ 9703 2A B8 89     	ld hl,(Posicion_actual)
 643+ 9706 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9708 C9           	ret
 645+ 9709
 646+ 9709              ;----------------------------------------------------------------------------------------------------------------
 647+ 9709              ;
 648+ 9709              ;	5/08/22
 649+ 9709              ;
 650+ 9709              ;   NextScan.
 651+ 9709              ;
 652+ 9709              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9709              ;
 654+ 9709              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9709              ;
 656+ 9709              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9709              ;
 658+ 9709              ;       DESTRUIDOS: AF y HL !!!
 659+ 9709              ;
 660+ 9709              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9709              ;
 662+ 9709
 663+ 9709 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 970A 7C               ld a,h
 665+ 970B E6 07            and 7
 666+ 970D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 970E
 668+ 970E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 970F C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9711 6F               ld l,a
 671+ 9712 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9713
 673+ 9713 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9714 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9716 67               ld h,a
 676+ 9717 C9               ret
 677+ 9718
 678+ 9718              ;----------------------------------------------------------------------------------------------------------------
 679+ 9718              ;
 680+ 9718              ;	5/08/22
 681+ 9718              ;
 682+ 9718              ;   PreviousScan.
 683+ 9718              ;
 684+ 9718              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9718              ;
 686+ 9718              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9718              ;
 688+ 9718              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9718              ;
 690+ 9718              ;       DESTRUIDOS: AF y HL !!!
 691+ 9718              ;
 692+ 9718              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9718              ;
 694+ 9718
 695+ 9718 7C           PreviousScan ld a,h
 696+ 9719 25               dec h               ; Dec H.
 697+ 971A E6 07            and 7
 698+ 971C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 971D
 700+ 971D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 971E D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9720 6F               ld l,a
 703+ 9721 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9722
 705+ 9722 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9723 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9725 67               ld h,a
 708+ 9726 C9               ret
 709+ 9727
 710+ 9727              ; -----------------------------------------------------------------------------------
 711+ 9727              ;
 712+ 9727              ;	31/7/23
 713+ 9727              ;
 714+ 9727              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9727              ;	Extrae fotos de Album_de_fotos.
 716+ 9727
 717+ 9727              Extrae_foto_entidades
 718+ 9727
 719+ 9727              ;	ld a,(Contador_de_frames)
 720+ 9727              ;	cp $1e
 721+ 9727              ;	jr z,$
 722+ 9727
 723+ 9727 21 01 70     	ld hl,Album_de_fotos+1
 724+ 972A 7E           	ld a,(hl)
 725+ 972B A7           	and a
 726+ 972C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 972D
 728+ 972D 3A 05 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 9730 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 730+ 9731 C8           	ret z
 731+ 9732
 732+ 9732              ; -----------------------------------
 733+ 9732
 734+ 9732 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9736 31 00 70     	ld sp,Album_de_fotos
 736+ 9739
 737+ 9739 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 973B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 973C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 973D
 741+ 973D ED 73 0C 8A  	ld (Stack_2),sp
 742+ 9741 ED 7B 0A 8A  	ld sp,(Stack)
 743+ 9745
 744+ 9745              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9745
 746+ 9745 3E CD        	ld a,$cd
 747+ 9747 32 4F 97     	ld (Imprime),a
 748+ 974A EB           	ex de,hl
 749+ 974B 22 50 97     	ld (Imprime+1),hl
 750+ 974E EB           	ex de,hl
 751+ 974F
 752+ 974F              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 974F
 754+ 974F 00 00 00     Imprime db 0,0,0
 755+ 9752
 756+ 9752 ED 73 0A 8A  	ld (Stack),sp
 757+ 9756
 758+ 9756 3A 05 8A     	ld a,(Numero_de_malotes)
 759+ 9759 3D           	dec a
 760+ 975A 28 09        	jr z,1F
 761+ 975C 32 05 8A      	ld (Numero_de_malotes),a
 762+ 975F
 763+ 975F ED 7B 0C 8A  	ld sp,(Stack_2)
 764+ 9763 18 D4        	jr 2B
 765+ 9765
 766+ 9765 AF           1 xor a
 767+ 9766 32 0C 8A     	ld (Stack_2),a
 768+ 9769
 769+ 9769 C9           	ret
 770+ 976A
 771+ 976A              ; -----------------------------------------------------------------------------------
 772+ 976A              ;
 773+ 976A              ;	28/2/23
 774+ 976A              ;
 775+ 976A              ;	Pinta los disparos generados.
 776+ 976A
 777+ 976A              Extrae_foto_disparos
 778+ 976A
 779+ 976A 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 780+ 976D 7E               ld a,(hl)
 781+ 976E A7               and a
 782+ 976F C8               ret z
 783+ 9770
 784+ 9770 3A 2E 8A     	ld a,(Numero_de_disparotes)
 785+ 9773 A7           	and a
 786+ 9774 C8           	ret z
 787+ 9775 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9779 31 0D 72     	ld sp,Album_de_fotos_disparos
 789+ 977C
 790+ 977C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 977E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 977F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9780
 794+ 9780 ED 73 0C 8A  	ld (Stack_2),sp
 795+ 9784 ED 7B 0A 8A  	ld sp,(Stack)
 796+ 9788
 797+ 9788              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9788
 799+ 9788 3E CD        	ld a,$cd
 800+ 978A 32 92 97     	ld (Imprime2),a
 801+ 978D EB           	ex de,hl
 802+ 978E 22 93 97     	ld (Imprime2+1),hl
 803+ 9791 EB           	ex de,hl
 804+ 9792
 805+ 9792              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9792
 807+ 9792 00 00 00     Imprime2 db 0,0,0
 808+ 9795
 809+ 9795 3A 2E 8A     	ld a,(Numero_de_disparotes)
 810+ 9798 3D           	dec a
 811+ 9799 28 09        	jr z,1F
 812+ 979B 32 2E 8A      	ld (Numero_de_disparotes),a
 813+ 979E
 814+ 979E ED 7B 0C 8A  	ld sp,(Stack_2)
 815+ 97A2 18 D8        	jr 2B
 816+ 97A4
 817+ 97A4 AF           1 xor a
 818+ 97A5 32 0C 8A     	ld (Stack_2),a
 819+ 97A8 C9           	ret
 820+ 97A9
# file closed: Draw_XOR.asm
1476  97A9              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97A9              ;   índices de Rutinas de impresión.
   2+ 97A9
   3+ 97A9 B9 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97AB E6 97            defw Pinta_Amadeus_3x2
   5+ 97AD
   6+ 97AD 3C 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97AF DC 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97B1 90 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97B3
  10+ 97B3 66 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97B5 6A 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97B7 1E 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97B9
  14+ 97B9
  15+ 97B9              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97B9              ;
  17+ 97B9              ;   12/12/22
  18+ 97B9              ;
  19+ 97B9              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97B9              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97B9              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97B9              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97B9              ;
  24+ 97B9              ;   Modifica: DE y HL.
  25+ 97B9
  26+ 97B9 ED 73 0A 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97BD FD F9        	ld sp,iy
  28+ 97BF 06 10            ld b,16
  29+ 97C1 D1           1 pop de
  30+ 97C2 7B               ld a,e
  31+ 97C3 AE               xor (hl)
  32+ 97C4 77           	ld (hl),a
  33+ 97C5 23           	inc hl
  34+ 97C6 7A               ld a,d
  35+ 97C7 AE               xor (hl)
  36+ 97C8 77           	ld (hl),a
  37+ 97C9 2B           	dec hl
  38+ 97CA 24           	inc h
  39+ 97CB 7C               ld a,h
  40+ 97CC E6 07            and 7
  41+ 97CE 20 0A            jr nz,2F
  42+ 97D0 7D               ld a,l
  43+ 97D1 C6 20            add a,$20
  44+ 97D3 6F               ld l,a
  45+ 97D4 38 04            jr c,2F
  46+ 97D6 7C               ld a,h
  47+ 97D7 D6 08            sub 8
  48+ 97D9 67               ld h,a
  49+ 97DA 7C           2 ld a,h
  50+ 97DB FE 58            cp $58
  51+ 97DD 28 02            jr z,3F
  52+ 97DF 10 E0            djnz 1B
  53+ 97E1 ED 7B 0A 8A  3 ld sp,(Stack)
  54+ 97E5 C9           	ret
  55+ 97E6
  56+ 97E6 ED 73 0A 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97EA FD F9        	ld sp,iy
  58+ 97EC 06 08            ld b,8
  59+ 97EE D1           1 pop de
  60+ 97EF 7B               ld a,e
  61+ 97F0 AE               xor (hl)
  62+ 97F1 77           	ld (hl),a
  63+ 97F2 23           	inc hl
  64+ 97F3 7A               ld a,d
  65+ 97F4 AE               xor (hl)
  66+ 97F5 77           	ld (hl),a
  67+ 97F6 23           	inc hl
  68+ 97F7 D1           	pop de
  69+ 97F8 7B               ld a,e
  70+ 97F9 AE               xor (hl)
  71+ 97FA 77           	ld (hl),a
  72+ 97FB 2B           	dec hl
  73+ 97FC 2B           	dec hl
  74+ 97FD 24           	inc h
  75+ 97FE 7C               ld a,h
  76+ 97FF E6 07            and 7
  77+ 9801 20 0A            jr nz,2F
  78+ 9803 7D               ld a,l
  79+ 9804 C6 20            add a,$20
  80+ 9806 6F               ld l,a
  81+ 9807 38 04            jr c,2F
  82+ 9809 7C               ld a,h
  83+ 980A D6 08            sub 8
  84+ 980C 67               ld h,a
  85+ 980D 7C           2 ld a,h
  86+ 980E FE 58            cp $58
  87+ 9810 28 25            jr z,4F
  88+ 9812 7A               ld a,d
  89+ 9813 AE               xor (hl)
  90+ 9814 77               ld (hl),a
  91+ 9815 D1           	pop de
  92+ 9816 23           	inc hl
  93+ 9817 7B               ld a,e
  94+ 9818 AE               xor (hl)
  95+ 9819 77           	ld (hl),a
  96+ 981A 23           	inc hl
  97+ 981B 7A               ld a,d
  98+ 981C AE               xor (hl)
  99+ 981D 77           	ld (hl),a
 100+ 981E 2B           	dec hl
 101+ 981F 2B           	dec hl
 102+ 9820 24           	inc h
 103+ 9821 7C               ld a,h
 104+ 9822 E6 07            and 7
 105+ 9824 20 0A            jr nz,3F
 106+ 9826 7D               ld a,l
 107+ 9827 C6 20            add a,$20
 108+ 9829 6F               ld l,a
 109+ 982A 38 04            jr c,3F
 110+ 982C 7C               ld a,h
 111+ 982D D6 08            sub 8
 112+ 982F 67               ld h,a
 113+ 9830 7C           3 ld a,h
 114+ 9831 FE 58            cp $58
 115+ 9833 28 02            jr z,4F
 116+ 9835 10 B7            djnz 1B
 117+ 9837 ED 7B 0A 8A  4 ld sp,(Stack)
 118+ 983B C9           	ret
 119+ 983C
 120+ 983C              ; ---------------------------------------------------
 121+ 983C
 122+ 983C ED 73 0A 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9840 FD F9        	ld sp,iy
 124+ 9842
 125+ 9842              ; >>>
 126+ 9842
 127+ 9842 06 10            ld b,16
 128+ 9844 D1           1 pop de
 129+ 9845 7A           	ld a,d
 130+ 9846 AE           	xor (hl)
 131+ 9847 77           	ld (hl),a
 132+ 9848 24           	inc h
 133+ 9849 7C               ld a,h
 134+ 984A E6 07            and 7
 135+ 984C 20 0C            jr nz,2F
 136+ 984E 7D               ld a,l
 137+ 984F C6 20            add a,$20
 138+ 9851 6F               ld l,a
 139+ 9852 38 06            jr c,2F
 140+ 9854 7C               ld a,h
 141+ 9855 D6 08            sub 8
 142+ 9857 67               ld h,a
 143+ 9858 18 00            jr 2F
 144+ 985A 7C           2 ld a,h
 145+ 985B FE 58            cp $58
 146+ 985D 28 02            jr z,3F
 147+ 985F 10 E3            djnz 1B
 148+ 9861 ED 7B 0A 8A  3 ld sp,(Stack)
 149+ 9865 C9           	ret
 150+ 9866
 151+ 9866 ED 73 0A 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 986A FD F9        	ld sp,iy
 153+ 986C
 154+ 986C              ; >>>
 155+ 986C
 156+ 986C 06 10            ld b,16
 157+ 986E D1           1 pop de
 158+ 986F 7B           	ld a,e
 159+ 9870 AE           	xor (hl)
 160+ 9871 77           	ld (hl),a
 161+ 9872 24           	inc h
 162+ 9873 7C               ld a,h
 163+ 9874 E6 07            and 7
 164+ 9876 20 0C            jr nz,2F
 165+ 9878 7D               ld a,l
 166+ 9879 C6 20            add a,$20
 167+ 987B 6F               ld l,a
 168+ 987C 38 06            jr c,2F
 169+ 987E 7C               ld a,h
 170+ 987F D6 08            sub 8
 171+ 9881 67               ld h,a
 172+ 9882 18 00            jr 2F
 173+ 9884 7C           2 ld a,h
 174+ 9885 FE 58            cp $58
 175+ 9887 28 02            jr z,3F
 176+ 9889 10 E3            djnz 1B
 177+ 988B ED 7B 0A 8A  3 ld sp,(Stack)
 178+ 988F C9           	ret
 179+ 9890
 180+ 9890              ; ---------------------------------------------------
 181+ 9890
 182+ 9890 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9894 FD F9        	ld sp,iy
 184+ 9896 06 08            ld b,8
 185+ 9898 D1           1 pop de
 186+ 9899 7A           	ld a,d
 187+ 989A AE           	xor (hl)
 188+ 989B 77           	ld (hl),a
 189+ 989C 23           	inc hl
 190+ 989D D1           	pop de
 191+ 989E 7B           	ld a,e
 192+ 989F AE           	xor (hl)
 193+ 98A0 77           	ld (hl),a
 194+ 98A1 2B           	dec hl
 195+ 98A2 24            	inc h
 196+ 98A3 7C               ld a,h
 197+ 98A4 E6 07            and 7
 198+ 98A6 20 0A            jr nz,2F
 199+ 98A8 7D               ld a,l
 200+ 98A9 C6 20            add a,$20
 201+ 98AB 6F               ld l,a
 202+ 98AC 38 04            jr c,2F
 203+ 98AE 7C               ld a,h
 204+ 98AF D6 08            sub 8
 205+ 98B1 67               ld h,a
 206+ 98B2 7C           2 ld a,h
 207+ 98B3 FE 58            cp $58
 208+ 98B5 28 20            jr z,4F
 209+ 98B7 D1               pop de
 210+ 98B8 7B           	ld a,e
 211+ 98B9 AE           	xor (hl)
 212+ 98BA 77           	ld (hl),a
 213+ 98BB 23           	inc hl
 214+ 98BC 7A           	ld a,d
 215+ 98BD AE           	xor (hl)
 216+ 98BE 77           	ld (hl),a
 217+ 98BF 2B           	dec hl
 218+ 98C0 24           	inc h
 219+ 98C1 7C               ld a,h
 220+ 98C2 E6 07            and 7
 221+ 98C4 20 0A            jr nz,3F
 222+ 98C6 7D               ld a,l
 223+ 98C7 C6 20            add a,$20
 224+ 98C9 6F               ld l,a
 225+ 98CA 38 04            jr c,3F
 226+ 98CC 7C               ld a,h
 227+ 98CD D6 08            sub 8
 228+ 98CF 67               ld h,a
 229+ 98D0 7C           3 ld a,h
 230+ 98D1 FE 58            cp $58
 231+ 98D3 28 02            jr z,4F
 232+ 98D5 10 C1            djnz 1B
 233+ 98D7 ED 7B 0A 8A  4 ld sp,(Stack)
 234+ 98DB C9           	ret
 235+ 98DC
 236+ 98DC ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98E0 FD F9        	ld sp,iy
 238+ 98E2 06 08            ld b,8
 239+ 98E4 D1           1 pop de
 240+ 98E5 D1           	pop de
 241+ 98E6 7B           	ld a,e
 242+ 98E7 AE           	xor (hl)
 243+ 98E8 77           	ld (hl),a
 244+ 98E9 24            	inc h
 245+ 98EA 7C               ld a,h
 246+ 98EB E6 07            and 7
 247+ 98ED 20 0A            jr nz,2F
 248+ 98EF 7D               ld a,l
 249+ 98F0 C6 20            add a,$20
 250+ 98F2 6F               ld l,a
 251+ 98F3 38 04            jr c,2F
 252+ 98F5 7C               ld a,h
 253+ 98F6 D6 08            sub 8
 254+ 98F8 67               ld h,a
 255+ 98F9 7C           2 ld a,h
 256+ 98FA FE 58            cp $58
 257+ 98FC 28 1B            jr z,4F
 258+ 98FE D1               pop de
 259+ 98FF 7A           	ld a,d
 260+ 9900 AE           	xor (hl)
 261+ 9901 77           	ld (hl),a
 262+ 9902 24           	inc h
 263+ 9903 7C               ld a,h
 264+ 9904 E6 07            and 7
 265+ 9906 20 0A            jr nz,3F
 266+ 9908 7D               ld a,l
 267+ 9909 C6 20            add a,$20
 268+ 990B 6F               ld l,a
 269+ 990C 38 04            jr c,3F
 270+ 990E 7C               ld a,h
 271+ 990F D6 08            sub 8
 272+ 9911 67               ld h,a
 273+ 9912 7C           3 ld a,h
 274+ 9913 FE 58            cp $58
 275+ 9915 28 02            jr z,4F
 276+ 9917 10 CB            djnz 1B
 277+ 9919 ED 7B 0A 8A  4 ld sp,(Stack)
 278+ 991D C9           	ret
 279+ 991E
 280+ 991E ED 73 0A 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9922 FD F9        	ld sp,iy
 282+ 9924 06 08            ld b,8
 283+ 9926 D1           1 pop de
 284+ 9927 7B           	ld a,e
 285+ 9928 AE           	xor (hl)
 286+ 9929 77           	ld (hl),a
 287+ 992A 23           	inc hl
 288+ 992B 7A           	ld a,d
 289+ 992C AE           	xor (hl)
 290+ 992D 77           	ld (hl),a
 291+ 992E 2B           	dec hl
 292+ 992F 24             	inc h
 293+ 9930 7C               ld a,h
 294+ 9931 E6 07            and 7
 295+ 9933 20 0A            jr nz,2F
 296+ 9935 7D               ld a,l
 297+ 9936 C6 20            add a,$20
 298+ 9938 6F               ld l,a
 299+ 9939 38 04            jr c,2F
 300+ 993B 7C               ld a,h
 301+ 993C D6 08            sub 8
 302+ 993E 67               ld h,a
 303+ 993F 7C           2 ld a,h
 304+ 9940 FE 58            cp $58
 305+ 9942 28 21            jr z,4F
 306+ 9944 D1               pop de
 307+ 9945 7A           	ld a,d
 308+ 9946 AE           	xor (hl)
 309+ 9947 77           	ld (hl),a
 310+ 9948 23           	inc hl
 311+ 9949 D1               pop de
 312+ 994A 7B           	ld a,e
 313+ 994B AE           	xor (hl)
 314+ 994C 77           	ld (hl),a
 315+ 994D 2B           	dec hl
 316+ 994E 24           	inc h
 317+ 994F 7C               ld a,h
 318+ 9950 E6 07            and 7
 319+ 9952 20 0A            jr nz,3F
 320+ 9954 7D               ld a,l
 321+ 9955 C6 20            add a,$20
 322+ 9957 6F               ld l,a
 323+ 9958 38 04            jr c,3F
 324+ 995A 7C               ld a,h
 325+ 995B D6 08            sub 8
 326+ 995D 67               ld h,a
 327+ 995E 7C           3 ld a,h
 328+ 995F FE 58            cp $58
 329+ 9961 28 02            jr z,4F
 330+ 9963 10 C1            djnz 1B
 331+ 9965 ED 7B 0A 8A  4 ld sp,(Stack)
 332+ 9969 C9           	ret
 333+ 996A
 334+ 996A ED 73 0A 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 996E FD F9        	ld sp,iy
 336+ 9970 06 08            ld b,8
 337+ 9972 D1           1 pop de
 338+ 9973 7B           	ld a,e
 339+ 9974 AE           	xor (hl)
 340+ 9975 77           	ld (hl),a
 341+ 9976 24            	inc h
 342+ 9977 7C               ld a,h
 343+ 9978 E6 07            and 7
 344+ 997A 20 0A            jr nz,2F
 345+ 997C 7D               ld a,l
 346+ 997D C6 20            add a,$20
 347+ 997F 6F               ld l,a
 348+ 9980 38 04            jr c,2F
 349+ 9982 7C               ld a,h
 350+ 9983 D6 08            sub 8
 351+ 9985 67               ld h,a
 352+ 9986 7C           2 ld a,h
 353+ 9987 FE 58            cp $58
 354+ 9989 28 1C            jr z,4F
 355+ 998B D1               pop de
 356+ 998C 7A           	ld a,d
 357+ 998D AE           	xor (hl)
 358+ 998E 77           	ld (hl),a
 359+ 998F 24           	inc h
 360+ 9990 7C               ld a,h
 361+ 9991 E6 07            and 7
 362+ 9993 20 0A            jr nz,3F
 363+ 9995 7D               ld a,l
 364+ 9996 C6 20            add a,$20
 365+ 9998 6F               ld l,a
 366+ 9999 38 04            jr c,3F
 367+ 999B 7C               ld a,h
 368+ 999C D6 08            sub 8
 369+ 999E 67               ld h,a
 370+ 999F 7C           3 ld a,h
 371+ 99A0 FE 58            cp $58
 372+ 99A2 28 03            jr z,4F
 373+ 99A4 D1               pop de
 374+ 99A5 10 CB            djnz 1B
 375+ 99A7 ED 7B 0A 8A  4 ld sp,(Stack)
 376+ 99AB C9           	ret
 377+ 99AC
 378+ 99AC              ; ---------------------------------------------------
 379+ 99AC              ;
 380+ 99AC              ;   27/02/23
 381+ 99AC              ;
 382+ 99AC              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99AC              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99AC              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99AC
 386+ 99AC ED 73 0A 8A  Pinta_Disparo ld (Stack),sp
 387+ 99B0 FD F9            ld sp,iy
 388+ 99B2 06 03            ld b,3
 389+ 99B4 D1           1 pop de
 390+ 99B5 7B               ld a,e
 391+ 99B6 AE               xor (hl)
 392+ 99B7 77               ld (hl),a
 393+ 99B8 23               inc hl
 394+ 99B9 7A               ld a,d
 395+ 99BA AE               xor (hl)
 396+ 99BB 77               ld (hl),a
 397+ 99BC 2B               dec hl
 398+ 99BD
 399+ 99BD 24               inc h
 400+ 99BE 7C               ld a,h
 401+ 99BF E6 07            and 7
 402+ 99C1 20 0A            jr nz,2F
 403+ 99C3 7D               ld a,l
 404+ 99C4 C6 20            add a,$20
 405+ 99C6 6F               ld l,a
 406+ 99C7 38 04            jr c,2F
 407+ 99C9 7C               ld a,h
 408+ 99CA D6 08            sub 8
 409+ 99CC 67               ld h,a
 410+ 99CD 7C           2 ld a,h
 411+ 99CE FE 58            cp $58
 412+ 99D0 28 02            jr z,3F
 413+ 99D2
 414+ 99D2 10 E0            djnz 1B
 415+ 99D4 ED 7B 0A 8A  3 ld sp,(Stack)
 416+ 99D8 C9               ret
 417+ 99D9
# file closed: Rutinas_de_impresion_sprites.asm
1477  99D9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99D9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99D9              ;
   3+ 99D9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99D9              ;
   5+ 99D9              ; *****************************************************************************************************************************************************************************************
   6+ 99D9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99D9
   8+ 99D9 7C           calcula_tercio ld a,h
   9+ 99DA E6 18        	and $18
  10+ 99DC CB 2F        	sra a
  11+ 99DE CB 2F        	sra a
  12+ 99E0 CB 2F        	sra a
  13+ 99E2 C9           	ret
  14+ 99E3
# file closed: calcula_tercio.asm
1478  99E3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99E3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99E3              ;
   3+ 99E3              ;
   4+ 99E3              ;	CLS.
   5+ 99E3              ;
   6+ 99E3              ;	Limpia la pantalla y define sus atributos.
   7+ 99E3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99E3              ;
   9+ 99E3              ;	COLORES: 0 ..... NEGRO
  10+ 99E3              ;    		 1 ..... AZUL
  11+ 99E3              ; 			 2 ..... ROJO
  12+ 99E3              ;			 3 ..... MAGENTA
  13+ 99E3              ; 			 4 ..... VERDE
  14+ 99E3              ; 			 5 ..... CIAN
  15+ 99E3              ;			 6 ..... AMARILLO
  16+ 99E3              ; 			 7 ..... BLANCO
  17+ 99E3              ;
  18+ 99E3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99E3              ;
  20+ 99E3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99E3
  22+ 99E3
  23+ 99E3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99E6 11 01 40     	LD DE,$4001
  25+ 99E9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99EC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99EE ED B0        	LDIR
  28+ 99F0 01 FF 02     	LD BC,767
  29+ 99F3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99F4 ED B0        	LDIR
  31+ 99F6 C9           	ret
  32+ 99F7
# file closed: Cls.asm
1479  99F7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F7              ; ******************************************************************************************************************************************************************************************
   2+ 99F7              ;
   3+ 99F7              ;   20/05/23
   4+ 99F7              ;
   5+ 99F7              ;	Recompone_posicion_inicio
   6+ 99F7              ;
   7+ 99F7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99F7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99F7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99F7              ;	_ a una u otra rutina.
  11+ 99F7
  12+ 99F7              Recompone_posicion_inicio
  13+ 99F7
  14+ 99F7 2A C8 89     	ld hl,(Posicion_inicio)
  15+ 99FA 7D           	ld a,l
  16+ 99FB E6 1F        	and $1f
  17+ 99FD 28 16        	jr z,1F
  18+ 99FF
  19+ 99FF FE 1F        	cp $1f
  20+ 9A01 28 0D        	jr z,3F
  21+ 9A03
  22+ 9A03 21 F7 89     	ld hl,Ctrl_2
  23+ 9A06 CB C6        	set 0,(hl)
  24+ 9A08 2A BA 89     	ld hl,(Puntero_objeto)
  25+ 9A0B 22 FA 89     	ld (Repone_puntero_objeto),hl
  26+ 9A0E 18 08        	jr 2F
  27+ 9A10
  28+ 9A10 CD B1 9B     3 call Mov_left
  29+ 9A13 18 03        	jr 2F
  30+ 9A15
  31+ 9A15 CD 93 9A     1 call Mov_right
  32+ 9A18 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A1B 22 BA 89     	ld (Puntero_objeto),hl
  34+ 9A1E C9           	ret
  35+ 9A1F
  36+ 9A1F              ; ******************************************************************************************************************************************************************************************
  37+ 9A1F              ;
  38+ 9A1F              ;   27/05/23
  39+ 9A1F              ;
  40+ 9A1F              ;	Mov_down
  41+ 9A1F              ;
  42+ 9A1F              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A1F              ;
  44+ 9A1F              ;
  45+ 9A1F              Mov_down
  46+ 9A1F
  47+ 9A1F CD 81 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A22              ;																	; _ repone (Puntero_objeto).
  49+ 9A22 21 E4 89     	ld hl,Ctrl_0
  50+ 9A25 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A27              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A27              ; 																	; _ en el caso de que no lo haya.
  53+ 9A27 3A CE 89     	ld a,(Vel_down)
  54+ 9A2A 47           	ld b,a
  55+ 9A2B 2A B8 89         ld hl,(Posicion_actual)
  56+ 9A2E CD D9 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A31 E6 02        	and 2
  58+ 9A33 28 0F        	jr z,1F
  59+ 9A35
  60+ 9A35              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A35              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A35
  63+ 9A35 7C           	ld a,h
  64+ 9A36 FE 57        	cp $57
  65+ 9A38 20 0A        	jr nz,1F
  66+ 9A3A
  67+ 9A3A 7D           	ld a,l
  68+ 9A3B C6 20        	add $20
  69+ 9A3D 30 05        	jr nc,1F
  70+ 9A3F
  71+ 9A3F              ; ------------------------------
  72+ 9A3F              ;	call Reaparece_arriba
  73+ 9A3F CD 3E 9D     	call Reinicio
  74+ 9A42              ; ------------------------------
  75+ 9A42
  76+ 9A42 18 08        	jr 3F
  77+ 9A44 CD 09 97     1 call NextScan
  78+ 9A47 22 B8 89     	ld (Posicion_actual),hl
  79+ 9A4A 10 E2            djnz 2B
  80+ 9A4C CD 64 9D     3 call Genera_coordenadas
  81+ 9A4F C9           	ret
  82+ 9A50
  83+ 9A50              ; ******************************************************************************************************************************************************************************************
  84+ 9A50              ;
  85+ 9A50              ;   27/05/23
  86+ 9A50              ;
  87+ 9A50              ;	Mov_up
  88+ 9A50              ;
  89+ 9A50              ; 	Mueve el Sprite hacia arriba.
  90+ 9A50              ;
  91+ 9A50              ;
  92+ 9A50              Mov_up
  93+ 9A50
  94+ 9A50 CD 81 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A53              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A53 21 E4 89     	ld hl,Ctrl_0
  97+ 9A56 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A58              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A58              ; 																		; _ en el caso de que no lo haya.
 100+ 9A58 3A CD 89     	ld a,(Vel_up)
 101+ 9A5B 47           	ld b,a
 102+ 9A5C 2A B8 89     	ld hl,(Posicion_actual)
 103+ 9A5F CD D9 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A62 A7           	and a
 105+ 9A63 20 10        	jr nz,1F
 106+ 9A65
 107+ 9A65              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A65              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A65
 110+ 9A65 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A66 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A68 20 0B            jr nz,1F
 113+ 9A6A 7D               ld a,l
 114+ 9A6B D6 20            sub $20
 115+ 9A6D 30 06            jr nc,1F
 116+ 9A6F 25               dec h
 117+ 9A70
 118+ 9A70              ; -----------------------------
 119+ 9A70 CD 1F 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A73              ;	call Reinicio
 121+ 9A73              ; -----------------------------
 122+ 9A73
 123+ 9A73 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A75 CD 18 97     1 call PreviousScan
 125+ 9A78 22 B8 89     	ld (Posicion_actual),hl
 126+ 9A7B 10 E2            djnz 3B
 127+ 9A7D CD 64 9D     2 call Genera_coordenadas
 128+ 9A80 C9           	ret
 129+ 9A81
 130+ 9A81              ; -----------------------------
 131+ 9A81              ;
 132+ 9A81              ;	27/5/23
 133+ 9A81              ;
 134+ 9A81              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A81              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A81              ;
 137+ 9A81              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A81              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A81              ;
 140+ 9A81              ;	Modifica: A y (Puntero_objeto).
 141+ 9A81
 142+ 9A81 3A F7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A84 CB 47        	bit 0,a
 144+ 9A86 C8           	ret z
 145+ 9A87 CB 87        	res 0,a
 146+ 9A89 32 F7 89     	ld (Ctrl_2),a
 147+ 9A8C 2A FA 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A8F 22 BA 89     	ld (Puntero_objeto),hl
 149+ 9A92 C9           	ret
 150+ 9A93
 151+ 9A93              ; ******************************************************************************************************************************************************************************************
 152+ 9A93              ;
 153+ 9A93              ;	19/10/22
 154+ 9A93              ;
 155+ 9A93              ;	Mov_right.
 156+ 9A93              ;
 157+ 9A93              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A93              ;
 159+ 9A93
 160+ 9A93 21 E4 89     Mov_right ld hl,Ctrl_0
 161+ 9A96 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A98              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A98              ; 																	; _ en el caso de que no lo haya.
 164+ 9A98 3A E4 89     	ld a,(Ctrl_0)
 165+ 9A9B CB 77        	bit 6,a
 166+ 9A9D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A9F
 168+ 9A9F CD CD 9C     	call Stop_Amadeus_right
 169+ 9AA2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9AA3 18 4D        	jr 8F
 171+ 9AA5
 172+ 9AA5 3A BC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AA8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9AAA 20 46        	jr nz,8F
 175+ 9AAC
 176+ 9AAC 3A BE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9AAF A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AB0 28 40        	jr z,8F
 179+ 9AB2
 180+ 9AB2              ; ---------- ---------- ----------
 181+ 9AB2              ;
 182+ 9AB2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9AB2
 184+ 9AB2 3A CC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AB5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AB7 28 11        	jr z,1F
 187+ 9AB9 38 06        	jr c,6F
 188+ 9ABB FE 04        	cp 4
 189+ 9ABD 28 14        	jr z,7F
 190+ 9ABF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AC1
 192+ 9AC1              ; ---------- ---------- ----------
 193+ 9AC1              ;
 194+ 9AC1              ; Perfiles de velocidad
 195+ 9AC1              ;
 196+ 9AC1
 197+ 9AC1 3A BE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AC4 FE FE        	cp $fe
 199+ 9AC6 20 2A        	jr nz,8F
 200+ 9AC8 18 10        	jr 3F
 201+ 9ACA 3A BE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9ACD FE FD        	cp $fd
 203+ 9ACF 20 21        	jr nz,8F
 204+ 9AD1 18 07        	jr 3F
 205+ 9AD3 3A BE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AD6 FE FB        	cp $fb
 207+ 9AD8 20 18        	jr nz,8F
 208+ 9ADA
 209+ 9ADA              ; ---------- ---------- ----------
 210+ 9ADA
 211+ 9ADA              3
 212+ 9ADA CD 0D 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9ADD              ;	call Reinicio
 214+ 9ADD
 215+ 9ADD              ; ---------- ---------- ----------
 216+ 9ADD              ;
 217+ 9ADD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9ADD
 219+ 9ADD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9ADF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AE0 CD F9 9A     	call DESPLZ_DER
 222+ 9AE3 C1           	pop bc
 223+ 9AE4 10 F9        	djnz 5B
 224+ 9AE6 2A B8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AE9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AEA 22 B8 89     	ld (Posicion_actual),hl
 227+ 9AED CD 64 9D     	call Genera_coordenadas
 228+ 9AF0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AF2
 230+ 9AF2              ; ---------- ---------- ----------
 231+ 9AF2
 232+ 9AF2 2A B8 89     8 ld hl,(Posicion_actual)
 233+ 9AF5 CD F9 9A     	call DESPLZ_DER
 234+ 9AF8 C9           2 ret
 235+ 9AF9
 236+ 9AF9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AF9              ;
 238+ 9AF9              ;	22/9/22
 239+ 9AF9              ;
 240+ 9AF9
 241+ 9AF9 CD 08 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9AFC CD 54 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AFF CD 7D 9B         call Ciclo_completo
 244+ 9B02 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B05 CB FE        	set 7,(hl)
 246+ 9B07 C9           	ret
 247+ 9B08
 248+ 9B08              ; ******************************************************************************************************************************************************************************************
 249+ 9B08              ;	15/02/23
 250+ 9B08              ;
 251+ 9B08
 252+ 9B08 3A CC 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B0B 47           	ld b,a
 254+ 9B0C 2A C4 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B0F 23           1 inc hl
 256+ 9B10 23           	inc hl
 257+ 9B11 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B13 22 C4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B16 CD 89 8D     	call Extrae_address
 260+ 9B19 22 BA 89     	ld (Puntero_objeto),hl
 261+ 9B1C
 262+ 9B1C              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B1C
 264+ 9B1C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B1C              ; Cuántos movimientos hemos hecho ??
 266+ 9B1C              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B1C
 268+ 9B1C 2A C0 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B1F EB           	ex de,hl
 270+ 9B20 A7           	and a
 271+ 9B21 ED 52        	sbc hl,de
 272+ 9B23 CB 3D        	srl l
 273+ 9B25 3E 08        6 ld a,8
 274+ 9B27 95           	sub l
 275+ 9B28 30 1E        	jr nc,3F
 276+ 9B2A
 277+ 9B2A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B2A              ; B="0".
 279+ 9B2A
 280+ 9B2A 04           4 inc b
 281+ 9B2B 3C           	inc a
 282+ 9B2C 20 FC        	jr nz,4B
 283+ 9B2E 78           	ld a,b
 284+ 9B2F 08           	ex af,af
 285+ 9B30 2A C0 89     	ld hl,(Indice_Sprite_der)
 286+ 9B33 23           5 inc hl
 287+ 9B34 23           	inc hl
 288+ 9B35 10 FC        	djnz 5B
 289+ 9B37 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B3A CD 89 8D     	call Extrae_address
 291+ 9B3D 22 BA 89     	ld (Puntero_objeto),hl
 292+ 9B40
 293+ 9B40              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B40              ; _(Posicion_actual).
 295+ 9B40
 296+ 9B40 21 B8 89     	ld hl,Posicion_actual
 297+ 9B43 34           	inc (hl)
 298+ 9B44 08               ex af,af
 299+ 9B45 6F           	ld l,a
 300+ 9B46 18 DD        	jr 6B
 301+ 9B48
 302+ 9B48              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B48
 304+ 9B48 47           3 ld b,a
 305+ 9B49 2A C2 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B4C 23           2 inc hl
 307+ 9B4D 23           	inc hl
 308+ 9B4E 10 FC        	djnz 2B
 309+ 9B50 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B53 C9           8 ret
 311+ 9B54
 312+ 9B54              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B54              ;
 314+ 9B54              ;	24/7/22
 315+ 9B54              ;
 316+ 9B54              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B54              ;
 318+ 9B54              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B54              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B54              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B54
 322+ 9B54 3A BE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B57 A7           	and a
 324+ 9B58 20 1F        	jr nz,1F
 325+ 9B5A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B5C 32 BE 89         ld (CTRL_DESPLZ),a
 327+ 9B5F
 328+ 9B5F 21 B7 89     	ld hl,Columns
 329+ 9B62 34           	inc (hl)
 330+ 9B63 3A CA 89     	ld a,(Cuad_objeto)
 331+ 9B66 E6 01        	and 1
 332+ 9B68 28 0F        	jr z,1F
 333+ 9B6A 2A B8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B6D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B6E 22 B8 89     	ld (Posicion_actual),hl
 336+ 9B71 CD 64 9D     	call Genera_coordenadas
 337+ 9B74 CD D9 9C     	call Inc_CTRL_DESPLZ
 338+ 9B77 18 03        	jr 2F
 339+ 9B79 CD D9 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B7C C9           2 ret
 341+ 9B7D
 342+ 9B7D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B7D              ;
 344+ 9B7D              ;	24/7/22
 345+ 9B7D              ;
 346+ 9B7D              ;	Ciclo_completo.
 347+ 9B7D              ;
 348+ 9B7D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B7D              ;
 350+ 9B7D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B7D              ; 	Decrementamos (Columns).
 352+ 9B7D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B7D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B7D
 355+ 9B7D
 356+ 9B7D 3A BE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B80 FE FF        	cp $ff
 358+ 9B82 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B84 E6 F0        	and $f0
 360+ 9B86 20 28        	jr nz,3F
 361+ 9B88
 362+ 9B88              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B88
 364+ 9B88 3A BE 89     	ld a,(CTRL_DESPLZ)
 365+ 9B8B 47           	ld b,a
 366+ 9B8C 3E F8        	ld a,$f8
 367+ 9B8E 80           	add b
 368+ 9B8F 32 BE 89     	ld (CTRL_DESPLZ),a
 369+ 9B92 18 1C        	jr 3F
 370+ 9B94 21 B7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B97 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B98 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B99 32 BE 89     	ld (CTRL_DESPLZ),a
 374+ 9B9C 3A CA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B9F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BA1 20 0A        	jr nz,2F
 377+ 9BA3 2A B8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BA6 23           	inc hl
 379+ 9BA7 22 B8 89     	ld (Posicion_actual),hl
 380+ 9BAA CD 64 9D     	call Genera_coordenadas
 381+ 9BAD
 382+ 9BAD              ; Inicia el puntero de Sprite.
 383+ 9BAD
 384+ 9BAD CD A0 8D     2 call Inicia_puntero_objeto_der
 385+ 9BB0 C9           3 ret
 386+ 9BB1
 387+ 9BB1              ; ******************************************************************************************************************************************************************************************
 388+ 9BB1              ;
 389+ 9BB1              ;	15/02/23
 390+ 9BB1              ;
 391+ 9BB1              ;	Mov_left.
 392+ 9BB1              ;
 393+ 9BB1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BB1              ;
 395+ 9BB1 21 E4 89     Mov_left ld hl,Ctrl_0
 396+ 9BB4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BB6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BB6              ; 																	; _ en el caso de que no lo haya.
 399+ 9BB6 3A E4 89     	ld a,(Ctrl_0)
 400+ 9BB9 CB 77        	bit 6,a
 401+ 9BBB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BBD
 403+ 9BBD CD D3 9C     	call Stop_Amadeus_left
 404+ 9BC0 C8           	ret z
 405+ 9BC1 20 4A        	jr nz,8F
 406+ 9BC3
 407+ 9BC3 3A BC 89     11 ld a,(Coordenada_X)
 408+ 9BC6 A7           	and a
 409+ 9BC7 20 44        	jr nz,8F
 410+ 9BC9
 411+ 9BC9 3A BE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BCC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BCD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BCF
 415+ 9BCF              ; ---------- ---------- ----------
 416+ 9BCF
 417+ 9BCF 3A CB 89     	ld a,(Vel_left)
 418+ 9BD2 FE 02        	cp 2
 419+ 9BD4 28 0F        	jr z,1F
 420+ 9BD6 38 04        	jr c,6F
 421+ 9BD8 FE 04        	cp 4
 422+ 9BDA 28 12        	jr z,7F
 423+ 9BDC
 424+ 9BDC              ; ---------- ---------- ----------
 425+ 9BDC
 426+ 9BDC 3A BE 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BDF FE F8        	cp $f8
 428+ 9BE1 20 2A        	jr nz,8F
 429+ 9BE3 18 10        	jr 4F
 430+ 9BE5 3A BE 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BE8 FE F9        	cp $f9
 432+ 9BEA 20 21        	jr nz,8F
 433+ 9BEC 18 07        	jr 4F
 434+ 9BEE 3A BE 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BF1 FE FB        	cp $fb
 436+ 9BF3 20 18        	jr nz,8F
 437+ 9BF5
 438+ 9BF5              ; ---------- ---------- ----------
 439+ 9BF5
 440+ 9BF5              4
 441+ 9BF5 CD FB 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BF8              ;	call Reinicio
 443+ 9BF8
 444+ 9BF8              ; ---------- ---------- ----------
 445+ 9BF8
 446+ 9BF8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BFA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BFB
 449+ 9BFB              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BFB              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BFB
 452+ 9BFB CD 14 9C     	call DESPLZ_IZQ
 453+ 9BFE C1           	pop bc
 454+ 9BFF 10 F9        	djnz 5B
 455+ 9C01 2A B8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C04 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C05 22 B8 89     	ld (Posicion_actual),hl
 458+ 9C08 CD 64 9D     	call Genera_coordenadas
 459+ 9C0B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C0D
 461+ 9C0D              ; ---------- ---------- ----------
 462+ 9C0D
 463+ 9C0D              ; Movemos, no hay recolocación.
 464+ 9C0D
 465+ 9C0D 2A B8 89     8 ld hl,(Posicion_actual)
 466+ 9C10 CD 14 9C     	call DESPLZ_IZQ
 467+ 9C13 C9           2 ret
 468+ 9C14
 469+ 9C14              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C14              ;
 471+ 9C14              ;	22/9/22
 472+ 9C14
 473+ 9C14              DESPLZ_IZQ
 474+ 9C14
 475+ 9C14 CD 23 9C     	call Desplaza_izquierda
 476+ 9C17 CD 6F 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C1A CD 97 9C     	call Ciclo_completo_2
 478+ 9C1D 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C20 CB BE        	res 7,(hl)
 480+ 9C22 C9           	ret
 481+ 9C23
 482+ 9C23              Desplaza_izquierda
 483+ 9C23
 484+ 9C23 3A CB 89     	ld a,(Vel_left)
 485+ 9C26 47           	ld b,a
 486+ 9C27 2A C6 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C2A 23           1 inc hl
 488+ 9C2B 23           	inc hl
 489+ 9C2C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C2E 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C31 CD 89 8D     	call Extrae_address
 492+ 9C34 22 BA 89     	ld (Puntero_objeto),hl
 493+ 9C37
 494+ 9C37              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C37
 496+ 9C37              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C37              ; Cuántos movimientos hemos hecho ??
 498+ 9C37              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C37
 500+ 9C37 2A C2 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C3A EB           	ex de,hl
 502+ 9C3B A7           	and a
 503+ 9C3C ED 52        	sbc hl,de
 504+ 9C3E CB 3D        	srl l
 505+ 9C40 3E 08        6 ld a,8
 506+ 9C42 95           	sub l
 507+ 9C43 30 1E        	jr nc,3F
 508+ 9C45
 509+ 9C45              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C45              ; B="0".
 511+ 9C45
 512+ 9C45 04           4 inc b
 513+ 9C46 3C           	inc a
 514+ 9C47 20 FC        	jr nz,4B
 515+ 9C49 78           	ld a,b
 516+ 9C4A 08           	ex af,af
 517+ 9C4B 2A C2 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C4E 23           5 inc hl
 519+ 9C4F 23           	inc hl
 520+ 9C50 10 FC        	djnz 5B
 521+ 9C52 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C55 CD 89 8D     	call Extrae_address
 523+ 9C58 22 BA 89     	ld (Puntero_objeto),hl
 524+ 9C5B
 525+ 9C5B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C5B              ; _(Posicion_actual).
 527+ 9C5B
 528+ 9C5B 21 B8 89     	ld hl,Posicion_actual
 529+ 9C5E 35           	dec (hl)
 530+ 9C5F 08           	ex af,af
 531+ 9C60 6F           	ld l,a
 532+ 9C61 18 DD        	jr 6B
 533+ 9C63
 534+ 9C63              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C63
 536+ 9C63 47           3 ld b,a
 537+ 9C64 2A C0 89     	ld hl,(Indice_Sprite_der)
 538+ 9C67 23           2 inc hl
 539+ 9C68 23           	inc hl
 540+ 9C69 10 FC        	djnz 2B
 541+ 9C6B 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C6E C9           8 ret
 543+ 9C6F
 544+ 9C6F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C6F              ;
 546+ 9C6F              ;	modifica_parametros_1er_DESPLZ
 547+ 9C6F              ;
 548+ 9C6F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C6F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C6F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C6F
 552+ 9C6F 3A BE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C72 A7           	and a
 554+ 9C73 20 1E        	jr nz,1F
 555+ 9C75 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C76 32 BE 89         ld (CTRL_DESPLZ),a
 557+ 9C79 21 B7 89     	ld hl,Columns
 558+ 9C7C 34           	inc (hl)
 559+ 9C7D 3A CA 89     	ld a,(Cuad_objeto)
 560+ 9C80 E6 01        	and 1
 561+ 9C82 20 0F        	jr nz,1F
 562+ 9C84 2A B8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C87 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C88 22 B8 89     	ld (Posicion_actual),hl
 565+ 9C8B CD 64 9D     	call Genera_coordenadas
 566+ 9C8E CD EA 9C     	call Dec_CTRL_DESPLZ
 567+ 9C91 18 03        	jr 2F
 568+ 9C93 CD EA 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C96 C9           2 ret
 570+ 9C97
 571+ 9C97              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C97
 573+ 9C97 3A BE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C9A FE F7        	cp $f7
 575+ 9C9C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C9E 30 2C        	jr nc,3F
 577+ 9CA0
 578+ 9CA0              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9CA0
 580+ 9CA0 06 00        	ld b,0
 581+ 9CA2 04           4 inc b
 582+ 9CA3 3C           	inc a
 583+ 9CA4 FE F7        	cp $f7
 584+ 9CA6 20 FA        	jr nz,4B
 585+ 9CA8 3E FF        	ld a,$ff
 586+ 9CAA 90           	sub b
 587+ 9CAB 32 BE 89     	ld (CTRL_DESPLZ),a
 588+ 9CAE 18 1C        	jr 3F
 589+ 9CB0
 590+ 9CB0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CB0
 592+ 9CB0 21 B7 89     1 ld hl,Columns
 593+ 9CB3 35           	dec (hl)
 594+ 9CB4 AF           	xor a
 595+ 9CB5 32 BE 89     	ld (CTRL_DESPLZ),a
 596+ 9CB8 3A CA 89     	ld a,(Cuad_objeto)
 597+ 9CBB E6 01        	and 1
 598+ 9CBD 28 0A        	jr z,2F
 599+ 9CBF 2A B8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CC2 2B           	dec hl
 601+ 9CC3 22 B8 89     	ld (Posicion_actual),hl
 602+ 9CC6 CD 64 9D     	call Genera_coordenadas
 603+ 9CC9
 604+ 9CC9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CC9
 606+ 9CC9 CD B3 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CCC C9           3 ret
 608+ 9CCD
 609+ 9CCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CCD              ;
 611+ 9CCD              ;	19/10/22
 612+ 9CCD              ;
 613+ 9CCD              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CCD              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CCD
 616+ 9CCD 3A BC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CD0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CD2 C9           	ret
 619+ 9CD3
 620+ 9CD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CD3              ;
 622+ 9CD3              ;	19/10/22
 623+ 9CD3              ;
 624+ 9CD3              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CD3              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CD3
 627+ 9CD3 3A BC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CD6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CD8 C9           	ret
 630+ 9CD9
 631+ 9CD9              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CD9              ;
 633+ 9CD9              ;	24/7/22
 634+ 9CD9              ;
 635+ 9CD9              ;	Inc_CTRL_DESPLZ
 636+ 9CD9              ;
 637+ 9CD9              ;
 638+ 9CD9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CD9
 640+ 9CD9 21 BE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CDC 3A CC 89     	ld a,(Vel_right)
 642+ 9CDF A7           	and a
 643+ 9CE0 28 06        	jr z,1F
 644+ 9CE2 47           	ld b,a
 645+ 9CE3 34           3 inc (hl)
 646+ 9CE4 10 FD        	djnz 3B
 647+ 9CE6 18 01        	jr 2F
 648+ 9CE8 34           1 inc (hl)
 649+ 9CE9 C9           2 ret
 650+ 9CEA
 651+ 9CEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CEA              ;
 653+ 9CEA              ;	5/2/23
 654+ 9CEA              ;
 655+ 9CEA              ;	Dec_CTRL_DESPLZ
 656+ 9CEA              ;
 657+ 9CEA              ;
 658+ 9CEA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CEA
 660+ 9CEA 21 BE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CED 3A CB 89     	ld a,(Vel_left)
 662+ 9CF0 A7           	and a
 663+ 9CF1 28 06        	jr z,1F
 664+ 9CF3 47           	ld b,a
 665+ 9CF4 35           3 dec (hl)
 666+ 9CF5 10 FD        	djnz 3B
 667+ 9CF7 18 01        	jr 2F
 668+ 9CF9 35           1 dec (hl)
 669+ 9CFA C9           2 ret
 670+ 9CFB
 671+ 9CFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CFB
 673+ 9CFB 2A B8 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CFE 01 1F 00     	ld bc,31
 675+ 9D01 A7           	and a
 676+ 9D02 ED 4A        	adc hl,bc
 677+ 9D04 22 B8 89     	ld (Posicion_actual),hl
 678+ 9D07 21 E4 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D0A CB C6        	set 0,(hl)
 680+ 9D0C C9           	ret
 681+ 9D0D
 682+ 9D0D              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D0D
 684+ 9D0D 2A B8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D10 01 1F 00     	ld bc,31
 686+ 9D13 A7           	and a
 687+ 9D14 ED 42        	sbc hl,bc
 688+ 9D16 22 B8 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D19 21 E4 89     	ld hl,Ctrl_0
 690+ 9D1C CB CE        	set 1,(hl)
 691+ 9D1E C9           	ret
 692+ 9D1F
 693+ 9D1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D1F
 695+ 9D1F 24           Reaparece_abajo inc h
 696+ 9D20 01 E0 17     	ld bc,$17e0
 697+ 9D23 A7           	and a
 698+ 9D24 ED 4A        	adc hl,bc
 699+ 9D26 22 B8 89     	ld (Posicion_actual),hl
 700+ 9D29 21 E4 89     	ld hl,Ctrl_0
 701+ 9D2C CB D6        	set 2,(hl)
 702+ 9D2E C9           	ret
 703+ 9D2F
 704+ 9D2F              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D2F
 706+ 9D2F 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D32 A7           	and a
 708+ 9D33 ED 42        	sbc hl,bc
 709+ 9D35 22 B8 89     	ld (Posicion_actual),hl
 710+ 9D38 21 E4 89     	ld hl,Ctrl_0
 711+ 9D3B CB DE        	set 3,(hl)
 712+ 9D3D C9           	ret
 713+ 9D3E
 714+ 9D3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D3E              ;
 716+ 9D3E              ;	15/07/23
 717+ 9D3E
 718+ 9D3E              Reinicio
 719+ 9D3E
 720+ 9D3E              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D3E
 722+ 9D3E AF           	xor a
 723+ 9D3F 21 EB 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D42 CD 60 9D     	call Limpia_contenido_hl
 725+ 9D45
 726+ 9D45 21 B8 89     	ld hl,Posicion_actual
 727+ 9D48 CD 60 9D     	call Limpia_contenido_hl
 728+ 9D4B
 729+ 9D4B CD 81 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D4E CD 0B A0     	call Inicia_Puntero_mov
 731+ 9D51
 732+ 9D51 21 ED 89     	ld hl,Incrementa_puntero
 733+ 9D54 06 05        	ld b,5
 734+ 9D56 77           1 ld (hl),a
 735+ 9D57 23           	inc hl
 736+ 9D58 10 FC        	djnz 1B
 737+ 9D5A
 738+ 9D5A 21 F7 89     	ld hl,Ctrl_2
 739+ 9D5D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D5F
 741+ 9D5F C9           	ret
 742+ 9D60
 743+ 9D60 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D61 23           	inc hl
 745+ 9D62 77           	ld (hl),a
 746+ 9D63 C9           	ret
 747+ 9D64
 748+ 9D64
# file closed: Direcciones.asm
1480  9D64              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D64              ; ------------------------------------------------------------------------
   2+ 9D64              ;
   3+ 9D64              ;	02/04/23
   4+ 9D64              ;
   5+ 9D64              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D64              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D64              ;
   8+ 9D64              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D64              ;
  10+ 9D64              ;	Modifica: A,BC y DE.
  11+ 9D64
  12+ 9D64 C5           Genera_coordenadas push bc
  13+ 9D65 E5           	push hl
  14+ 9D66 D5           	push de
  15+ 9D67
  16+ 9D67 2A B8 89     	ld hl,(Posicion_actual)
  17+ 9D6A
  18+ 9D6A 7D           	ld a,l
  19+ 9D6B E6 1F        	and $1f
  20+ 9D6D 32 BC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D70
  22+ 9D70 CD D9 99     	call calcula_tercio
  23+ 9D73 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D74
  25+ 9D74 1E 00        	ld e,0
  26+ 9D76 7D           	ld a,l
  27+ 9D77 E6 E0        	and $e0
  28+ 9D79 28 01        	jr z,1F
  29+ 9D7B 04           	inc b
  30+ 9D7C
  31+ 9D7C 04           1 inc b
  32+ 9D7D 05           	dec b
  33+ 9D7E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D80              ;														; _ , salimos.
  35+ 9D80 1C           3 inc e
  36+ 9D81 D6 20        	sub 32
  37+ 9D83 20 FB        	jr nz,3B
  38+ 9D85 10 F5        	djnz 1B
  39+ 9D87
  40+ 9D87 7B           2 ld a,e
  41+ 9D88 32 BD 89     	ld (Coordenada_y),a
  42+ 9D8B
  43+ 9D8B D1           	pop de
  44+ 9D8C E1           	pop hl
  45+ 9D8D C1           	pop bc
  46+ 9D8E
  47+ 9D8E C9           	ret
  48+ 9D8F
  49+ 9D8F              ; ------------------------------------------------------------------------
  50+ 9D8F              ;	28/05/23
  51+ 9D8F              ;
  52+ 9D8F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D8F              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D8F              ;
  55+ 9D8F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D8F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D8F              ;
  58+ 9D8F              ;		DE="$120d"
  59+ 9D8F              ;
  60+ 9D8F              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D8F              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D8F              ;
  63+ 9D8F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D8F
  65+ 9D8F              ;	Modifica: A,BC y DE.
  66+ 9D8F
  67+ 9D8F
  68+ 9D8F              Genera_coordenadas_disparo
  69+ 9D8F
  70+ 9D8F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D8F
  72+ 9D8F 7D           	ld a,l
  73+ 9D90 E6 1F        	and $1f
  74+ 9D92 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D93 CD D9 99     	call calcula_tercio
  76+ 9D96 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D97 1E 00        	ld e,0
  78+ 9D99 7D           	ld a,l
  79+ 9D9A E6 E0        	and $e0
  80+ 9D9C 28 01        	jr z,1F
  81+ 9D9E 04           	inc b
  82+ 9D9F 1C           1 inc e
  83+ 9DA0 D6 20        	sub 32
  84+ 9DA2 20 FB        	jr nz,1B
  85+ 9DA4 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DA6 C9           	ret
  87+ 9DA7
# file closed: Genera_coordenadas.asm
1481  9DA7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DA7
   2+ 9DA7
   3+ 9DA7              ;   07/07/23
   4+ 9DA7              ;
   5+ 9DA7              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DA7              ;
   7+ 9DA7              ;   Codificación:
   8+ 9DA7              ;
   9+ 9DA7              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DA7              ;
  11+ 9DA7              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DA7              ;
  13+ 9DA7              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DA7              ;
  15+ 9DA7              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DA7              ;
  17+ 9DA7              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DA7              ;                               ..... %01000010 Vel_up 4
  19+ 9DA7              ;                                               Vel_down 2
  20+ 9DA7              ;                               ..... $42
  21+ 9DA7              ;
  22+ 9DA7              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DA7              ;
  24+ 9DA7              ;                               ..... %01000010 Vel_left 4
  25+ 9DA7              ;                                               Vel_right 2
  26+ 9DA7              ;                               ..... $42
  27+ 9DA7              ;
  28+ 9DA7              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DA7              ;
  30+ 9DA7              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DA7              ;
  32+ 9DA7              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DA7              ;
  34+ 9DA7              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DA7              ;                                     $53
  36+ 9DA7              ;
  37+ 9DA7              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DA7              ;
  39+ 9DA7              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DA7              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DA7              ;
  42+ 9DA7              ;                       Arriba ..... $81
  43+ 9DA7              ;                       Arriba - izquierda ..... $a1
  44+ 9DA7              ;                       Arriba - derecha ..... $91
  45+ 9DA7              ;
  46+ 9DA7              ;                       Abajo ..... $41
  47+ 9DA7              ;                       Abajo - izquierda ..... $61
  48+ 9DA7              ;                       Abajo - derecha ..... $51
  49+ 9DA7              ;
  50+ 9DA7              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DA7              ;
  52+ 9DA7              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DA7              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DA7              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DA7              ;
  56+ 9DA7              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DA7              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DA7              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DA7              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DA7              ;
  61+ 9DA7              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DA7              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DA7              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DA7              ;
  65+ 9DA7              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DA7              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DA7              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DA7              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DA7
  70+ 9DA7              ; ----- ----- ----- ----- -----
  71+ 9DA7
  72+ 9DA7 D3 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DA9 DB 9D            defw F_1
  74+ 9DAB E5 9D            defw F_2
  75+ 9DAD EF 9D            defw Codo_abajo_derecha
  76+ 9DAF 23 9E            defw Derecha_y_subiendo
  77+ 9DB1 2D 9E            defw Derecha_y_subiendo_1
  78+ 9DB3 37 9E            defw F_3
  79+ 9DB5 41 9E            defw F_4
  80+ 9DB7 4B 9E            defw Derecha_y_bajando
  81+ 9DB9 55 9E            defw Derecha_y_bajando_1
  82+ 9DBB 5F 9E            defw Derecha_y_bajando_2
  83+ 9DBD 69 9E            defw Codo_derecha_abajo
  84+ 9DBF 99 9E            defw Codo_abajo_izq.
  85+ 9DC1 CD 9E            defw Izquierda_y_subiendo
  86+ 9DC3 D7 9E            defw Izquierda_y_subiendo_1
  87+ 9DC5 E1 9E            defw F_5
  88+ 9DC7 EB 9E            defw F_6
  89+ 9DC9 F5 9E            defw Izquierda_y_bajando
  90+ 9DCB FF 9E            defw Izquierda_y_bajando_1
  91+ 9DCD 09 9F            defw Izquierda_y_bajando_2
  92+ 9DCF 13 9F            defw Codo_izquierda_abajo
  93+ 9DD1 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DD3
  95+ 9DD3 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DD7 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DDB
  98+ 9DDB 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DDF 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DE3 08 00
 100+ 9DE5 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DE9 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DED 0F FE
 102+ 9DEF
 103+ 9DEF 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DF3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DF7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DFB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DFF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E03 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E07 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E0B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E0F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E13 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E17 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E1B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E1F 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E23
 117+ 9E23 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E27 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E2B 06 00
 119+ 9E2D
 120+ 9E2D 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E31 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E35 02 00
 122+ 9E37
 123+ 9E37 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E3B 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E3F 04 00
 125+ 9E41 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E45 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E49 08 00
 127+ 9E4B
 128+ 9E4B 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E4F 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E53 02 00
 130+ 9E55
 131+ 9E55 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E59 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E5D 06 00
 133+ 9E5F
 134+ 9E5F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E63 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E67 06 00
 136+ 9E69
 137+ 9E69              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E69
 139+ 9E69 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E6D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E71 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E75 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E79 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E7D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E81 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E85 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E89 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E8D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E91 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E95 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E99
 152+ 9E99 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E9D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EA1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EA5 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EA9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EAD 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EB1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EB5 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EB9 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EBD 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EC1 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EC5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EC9 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9ECD
 166+ 9ECD 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9ED1 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9ED5 06 00
 168+ 9ED7
 169+ 9ED7 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EDB 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EDF 02 00
 171+ 9EE1
 172+ 9EE1 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EE5 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EE9 04 00
 174+ 9EEB 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EEF 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EF3 08 00
 176+ 9EF5
 177+ 9EF5 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EF9 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EFD 02 00
 179+ 9EFF
 180+ 9EFF 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F03 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F07 06 00
 182+ 9F09
 183+ 9F09 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F0D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F11 06 00
 185+ 9F13
 186+ 9F13 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F17 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F1B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F1F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F23 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F27 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F2B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F2F 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F33 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F37 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F3B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F3F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F43
 199+ 9F43              ; ----- ----- ----- ----- -----
 200+ 9F43              ;
 201+ 9F43              ;   27/06/23
 202+ 9F43
 203+ 9F43              Movimiento
 204+ 9F43
 205+ 9F43              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F43
 207+ 9F43              ;    ld hl,(Posicion_actual)
 208+ 9F43
 209+ 9F43 3A F7 89         ld a,(Ctrl_2)
 210+ 9F46 CB 57            bit 2,a
 211+ 9F48 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F4A
 213+ 9F4A 2A E9 89         ld hl,(Puntero_mov)
 214+ 9F4D 7E               ld a,(hl)
 215+ 9F4E
 216+ 9F4E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F4E
 218+ 9F4E              Inicia_desplazamiento.
 219+ 9F4E
 220+ 9F4E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F4E
 222+ 9F4E CD 42 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F51
 224+ 9F51              ; Iniciamos (Repetimos_mov).
 225+ 9F51
 226+ 9F51 7E               ld a,(hl)
 227+ 9F52 E6 0F            and $0f
 228+ 9F54 32 EF 89         ld (Repetimos_desplazamiento),a
 229+ 9F57 32 F0 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F5A
 231+ 9F5A              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F5A
 233+ 9F5A 23               inc hl
 234+ 9F5B 7E               ld a,(hl)
 235+ 9F5C 32 F2 89         ld (Cola_de_desplazamiento),a
 236+ 9F5F 2B               dec hl
 237+ 9F60
 238+ 9F60 21 F7 89         ld hl,Ctrl_2
 239+ 9F63 CB D6            set 2,(hl)
 240+ 9F65
 241+ 9F65              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F65              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F65
 244+ 9F65              Desplazamiento_iniciado
 245+ 9F65
 246+ 9F65 CD 16 A0         call Aplica_desplazamiento
 247+ 9F68
 248+ 9F68 3A F7 89         ld a,(Ctrl_2)
 249+ 9F6B CB 67            bit 4,a
 250+ 9F6D C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F6E
 252+ 9F6E 21 EF 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F71 35               dec (hl)
 254+ 9F72 C0               ret nz
 255+ 9F73
 256+ 9F73              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F73              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F73              ; Analiza (Cola_de_desplazamiento).
 259+ 9F73
 260+ 9F73 3A F2 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F76 A7               and a
 262+ 9F77 CC 6B A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F7A 28 30            jr z,Reinicia_el_movimiento
 264+ 9F7C
 265+ 9F7C FE FF            cp $ff
 266+ 9F7E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F80
 268+ 9F80 FE FE            cp $fe
 269+ 9F82 CC EF 9F         call z,Fijamos_bucle
 270+ 9F85 28 25            jr z,Reinicia_el_movimiento
 271+ 9F87
 272+ 9F87 FE FD            cp $fd
 273+ 9F89 20 11            jr nz,1F
 274+ 9F8B
 275+ 9F8B              ; ---
 276+ 9F8B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F8B
 278+ 9F8B 3A F7 89         ld a,(Ctrl_2)
 279+ 9F8E CB 5F            bit 3,a
 280+ 9F90 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F92
 282+ 9F92              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F92
 284+ 9F92 21 F7 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F95 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F97
 287+ 9F97 CD 00 A0         call Inicia_Repetimos_movimiento
 288+ 9F9A 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F9C              ; ---
 290+ 9F9C
 291+ 9F9C FE 01        1 cp 1
 292+ 9F9E CA D9 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FA1
 294+ 9FA1 3D               dec a
 295+ 9FA2 32 F2 89         ld (Cola_de_desplazamiento),a
 296+ 9FA5
 297+ 9FA5 3A F0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FA8 32 EF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FAB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FAB C9               ret
 301+ 9FAC
 302+ 9FAC              Reinicia_el_movimiento
 303+ 9FAC
 304+ 9FAC 3A F7 89         ld a,(Ctrl_2)
 305+ 9FAF CB 5F            bit 3,a
 306+ 9FB1 28 1B            jr z,2F
 307+ 9FB3
 308+ 9FB3              ; (Cola_de_desplazamiento)="254".
 309+ 9FB3
 310+ 9FB3 21 F1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FB6 35               dec (hl)
 312+ 9FB7 20 15            jr nz,2F
 313+ 9FB9
 314+ 9FB9              ; Fin de las repeticiones del último movimiento.
 315+ 9FB9
 316+ 9FB9 21 F7 89         ld hl,Ctrl_2
 317+ 9FBC CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FBE
 319+ 9FBE 2A E9 89         ld hl,(Puntero_mov)
 320+ 9FC1 23               inc hl
 321+ 9FC2 23               inc hl
 322+ 9FC3 23               inc hl
 323+ 9FC4 22 E9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FC7              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FC7 7E               ld a,(hl)
 326+ 9FC8 32 F2 89         ld (Cola_de_desplazamiento),a
 327+ 9FCB
 328+ 9FCB C3 73 9F         jp Cola
 329+ 9FCE
 330+ 9FCE
 331+ 9FCE CD 0B A0     2 call Inicia_Puntero_mov
 332+ 9FD1
 333+ 9FD1 21 F7 89         ld hl,Ctrl_2
 334+ 9FD4 CB 96            res 2,(hl)
 335+ 9FD6
 336+ 9FD6 C3 43 9F         jp Movimiento
 337+ 9FD9
 338+ 9FD9              Siguiente_desplazamiento
 339+ 9FD9
 340+ 9FD9              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FD9              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FD9
 343+ 9FD9 21 F7 89         ld hl,Ctrl_2
 344+ 9FDC CB 96            res 2,(hl)
 345+ 9FDE
 346+ 9FDE 2A E9 89         ld hl,(Puntero_mov)
 347+ 9FE1 23               inc hl
 348+ 9FE2 23               inc hl
 349+ 9FE3 22 E9 89         ld (Puntero_mov),hl
 350+ 9FE6
 351+ 9FE6 7E               ld a,(hl)
 352+ 9FE7 A7               and a
 353+ 9FE8 CC 6B A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FEB CA AC 9F         jp z,Reinicia_el_movimiento
 355+ 9FEE
 356+ 9FEE C9               ret
 357+ 9FEF              ; Subrutinas -----------------------------------------
 358+ 9FEF              ; ---------- --------- --------- ---------- ----------
 359+ 9FEF              ;
 360+ 9FEF              ;   24/07/23
 361+ 9FEF              ;
 362+ 9FEF              ;   Fijamos_bucle
 363+ 9FEF              ;
 364+ 9FEF              ;
 365+ 9FEF
 366+ 9FEF              Fijamos_bucle
 367+ 9FEF
 368+ 9FEF 3A ED 89         ld a,(Incrementa_puntero)
 369+ 9FF2 3C               inc a
 370+ 9FF3 32 EE 89         ld (Incrementa_puntero_backup),a
 371+ 9FF6
 372+ 9FF6 CD 6B A0         call Incrementa_Puntero_indice_mov
 373+ 9FF9 2A E7 89         ld hl,(Puntero_indice_mov)
 374+ 9FFC 22 EB 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FFF C9               ret
 376+ A000
 377+ A000              ; ---------- --------- --------- ---------- ----------
 378+ A000              ;
 379+ A000              ;   07/7/23
 380+ A000              ;
 381+ A000              ;   Inicia_Repetimos_movimiento
 382+ A000              ;
 383+ A000              ;
 384+ A000
 385+ A000              Inicia_Repetimos_movimiento
 386+ A000
 387+ A000              ; Iniciamos (Repetimos_movimiento).
 388+ A000
 389+ A000 DD 2A E9 89      ld ix,(Puntero_mov)
 390+ A004 DD 7E 02         ld a,(ix+2)
 391+ A007 32 F1 89         ld (Repetimos_movimiento),a
 392+ A00A
 393+ A00A C9               ret
 394+ A00B
 395+ A00B              ; ---------- --------- --------- ---------- ----------
 396+ A00B              ;
 397+ A00B              ;   26/6/23
 398+ A00B              ;
 399+ A00B              ;   Inicia_Puntero_mov
 400+ A00B              ;
 401+ A00B              ;
 402+ A00B
 403+ A00B 2A E7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A00E 5E               ld e,(hl)
 405+ A00F 23               inc hl
 406+ A010 56               ld d,(hl)
 407+ A011 EB               ex de,hl
 408+ A012 22 E9 89         ld (Puntero_mov),hl
 409+ A015 C9               ret
 410+ A016
 411+ A016              ; ---------- --------- --------- ---------- ----------
 412+ A016              ;
 413+ A016              ;   27/06/23
 414+ A016              ;
 415+ A016              ;   Aplica_movimiento.
 416+ A016
 417+ A016              Aplica_desplazamiento
 418+ A016
 419+ A016              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A016
 421+ A016 2A E9 89         ld hl, (Puntero_mov)
 422+ A019
 423+ A019 7E               ld a,(hl)
 424+ A01A E6 F0            and $f0
 425+ A01C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A01D
 427+ A01D CB 7E            bit 7,(hl)
 428+ A01F 28 03            jr z,1F
 429+ A021 CD 50 9A         call Mov_up
 430+ A024 2A E9 89     1 ld hl, (Puntero_mov)
 431+ A027 CB 76            bit 6,(hl)
 432+ A029 28 03            jr z,2F
 433+ A02B CD 1F 9A         call Mov_down
 434+ A02E 2A E9 89     2 ld hl, (Puntero_mov)
 435+ A031 CB 6E            bit 5,(hl)
 436+ A033 28 03            jr z,3F
 437+ A035 CD B1 9B         call Mov_left
 438+ A038 2A E9 89     3 ld hl, (Puntero_mov)
 439+ A03B CB 66            bit 4,(hl)
 440+ A03D C8               ret z
 441+ A03E CD 93 9A         call Mov_right
 442+ A041 C9               ret
 443+ A042
 444+ A042              ; ---------- --------- --------- ---------- ----------
 445+ A042              ;
 446+ A042              ;   26/06/23
 447+ A042              ;
 448+ A042              ;   Ajusta_velocidad_desplazamiento.
 449+ A042
 450+ A042              Ajusta_velocidad_desplazamiento
 451+ A042
 452+ A042              ; 1er byte de la cadena de movimiento.
 453+ A042              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A042
 455+ A042 CD 60 A0         call Extrae_nibble_alto
 456+ A045
 457+ A045 32 CD 89         ld (Vel_up),a
 458+ A048 79               ld a,c
 459+ A049 E6 0F            and $0f
 460+ A04B 32 CE 89         ld (Vel_down),a
 461+ A04E
 462+ A04E              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A04E              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A04E
 465+ A04E 23               inc hl
 466+ A04F CD 60 A0         call Extrae_nibble_alto
 467+ A052
 468+ A052 32 CB 89         ld (Vel_left),a
 469+ A055 79               ld a,c
 470+ A056 E6 0F            and $0f
 471+ A058 32 CC 89         ld (Vel_right),a
 472+ A05B
 473+ A05B              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A05B
 475+ A05B 23               inc hl
 476+ A05C 22 E9 89         ld (Puntero_mov),hl
 477+ A05F C9               ret
 478+ A060
 479+ A060 06 04        Extrae_nibble_alto ld b,4
 480+ A062 7E               ld a,(hl)
 481+ A063 4F               ld c,a
 482+ A064 E6 F0            and $f0
 483+ A066 CB 3F        1 srl a
 484+ A068 10 FC            djnz 1B
 485+ A06A C9               ret
 486+ A06B
 487+ A06B              ; ---------- --------- --------- ---------- ----------
 488+ A06B              ;
 489+ A06B              ;   5/7/23
 490+ A06B              ;
 491+ A06B              ;   Incrementa_Puntero_indice_mov
 492+ A06B
 493+ A06B              Incrementa_Puntero_indice_mov
 494+ A06B
 495+ A06B 21 ED 89         ld hl,Incrementa_puntero
 496+ A06E 34               inc (hl)
 497+ A06F
 498+ A06F 2A E7 89         ld hl,(Puntero_indice_mov)
 499+ A072 01 02 00         ld bc,2
 500+ A075 A7               and a
 501+ A076 09               add hl,bc
 502+ A077 22 E7 89         ld (Puntero_indice_mov),hl
 503+ A07A
 504+ A07A 7E               ld a,(hl)
 505+ A07B A7               and a
 506+ A07C
 507+ A07C              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A07C
 509+ A07C              ;    jr z,$
 510+ A07C
 511+ A07C              ;! Reinicia el Patrón de movimiento.
 512+ A07C
 513+ A07C CC 81 A0         call z,Inicializa_Puntero_indice_mov
 514+ A07F
 515+ A07F AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A080
 517+ A080 C9               ret
 518+ A081
 519+ A081
 520+ A081              ; ---------- --------- --------- ---------- ----------
 521+ A081              ;
 522+ A081              ;   24/07/23
 523+ A081              ;
 524+ A081              ;   Inicializa_Puntero_indice_mov
 525+ A081
 526+ A081              Inicializa_Puntero_indice_mov
 527+ A081
 528+ A081              ; Existe etiqueta de bucle principal???
 529+ A081
 530+ A081 2A EB 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A084 24               inc h
 532+ A085 25               dec h
 533+ A086 28 05            jr z,2F
 534+ A088
 535+ A088 22 E7 89         ld (Puntero_indice_mov),hl
 536+ A08B 18 14            jr 3F
 537+ A08D
 538+ A08D              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A08D
 540+ A08D 3A ED 89     2 ld a,(Incrementa_puntero)
 541+ A090 47               ld b,a
 542+ A091
 543+ A091 2A E7 89         ld hl,(Puntero_indice_mov)
 544+ A094 2B           1 dec hl
 545+ A095 2B               dec hl
 546+ A096 10 FC            djnz 1B
 547+ A098 22 E7 89         ld (Puntero_indice_mov),hl
 548+ A09B
 549+ A09B AF               xor a
 550+ A09C 32 ED 89         ld (Incrementa_puntero),a
 551+ A09F 18 06            jr 4F
 552+ A0A1
 553+ A0A1 3A EE 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0A4 32 ED 89         ld (Incrementa_puntero),a
 555+ A0A7 C9           4 ret
 556+ A0A8
 557+ A0A8
 558+ A0A8
# file closed: Patrones_de_mov.asm
1482  A0A8              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A0A8              ; Relojes y temporizaciones.
   2+ A0A8
   3+ A0A8              ; ------------------------------------------------------
   4+ A0A8              ;
   5+ A0A8              ;	16/7/23
   6+ A0A8              ;
   7+ A0A8              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A0A8              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A0A8              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A0A8              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A0A8              ;
  12+ A0A8              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A0A8              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A0A8
  15+ A0A8              ; Disparo_entidad db 1
  16+ A0A8              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A0A8              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A0A8
  19+ A0A8              Habilita_disparos
  20+ A0A8
  21+ A0A8 7E           	ld a,(hl)
  22+ A0A9 A7           	and a
  23+ A0AA C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A0AB
  25+ A0AB EB           	ex de,hl
  26+ A0AC
  27+ A0AC 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A0AD C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A0AE
  30+ A0AE              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A0AE
  32+ A0AE 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0AF 7E           	ld a,(hl)
  34+ A0B0 23           	inc hl
  35+ A0B1 77           	ld (hl),a
  36+ A0B2
  37+ A0B2 EB           	ex de,hl						; Habilitamos disparo.
  38+ A0B3 3E 01        	ld a,1
  39+ A0B5 77           	ld (hl),a
  40+ A0B6 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1483  A0B7              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0B7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0B7              ;
   3+ A0B7              ;	9/8/23
   4+ A0B7              ;
   5+ A0B7              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0B7
   7+ A0B7              ;	ADC HL,SP	LD (addr),SP
   8+ A0B7              ;	ADD HL,SP	LD SP,(addr)
   9+ A0B7              ;	ADD IX,SP	LD SP,nn
  10+ A0B7              ; 	ADD IY,SP	LD SP,HL
  11+ A0B7              ;				LD SP,IX
  12+ A0B7              ;	DEC SP		LD SP,IY
  13+ A0B7
  14+ A0B7              ;	EX (SP),HL
  15+ A0B7              ;	EX (SP),IX
  16+ A0B7              ;	EX (SP),IY
  17+ A0B7
  18+ A0B7              ;	INC SP
  19+ A0B7
  20+ A0B7                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 0A 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A F9 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 10 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 0E 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 10 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 0E 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 0A 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 2A 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 12 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 12 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 16 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 12 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 16 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 16 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 1A 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 16 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 1A 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 1A 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 1E 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 1A 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 1E 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 1E 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1484  74C8
1485  74C8              	SAVESNA "Pruebas.sna", START
1486  74C8
1487  74C8
1488  74C8
1489  74C8
# file closed: Banco_de_pruebas.asm
