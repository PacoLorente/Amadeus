# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82ea
  60  82EA
  61  82EA F5           	push af
  62  82EB E5           	push hl
  63  82EC
  64  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82EC 21 28 8C     	ld hl,Ctrl_3
  66  82EF CB 46        	bit 0,(hl)
  67  82F1 28 FE        	jr z,$
  68  82F3              ;! -------------------
  69  82F3
  70  82F3              ; Disparos.
  71  82F3
  72  82F3 CD C7 A1     	call Pinta_disparos_Amadeus
  73  82F6 CD 14 9F     	call Pinta_disparos_Entidades
  74  82F9
  75  82F9              ; Shield -----------------------
  76  82F9
  77  82F9              Temporizacion_shield
  78  82F9
  79  82F9 21 52 8C     	ld hl,Shield
  80  82FC 7E           	ld a,(hl)
  81  82FD A7           	and a
  82  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8300
  84  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8301
  86  8301 23           	inc hl
  87  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  8303
  89  8303 20 17        	jr nz,Incrementa_FRAMES
  90  8305
  91  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  8305
  93  8305              Cambio_de_estado
  94  8305
  95  8305              ;	Indica cambio de estado.
  96  8305
  97  8305 23           	inc hl						;	Sitúa en (Shield_3).
  98  8306
  99  8306 CB 5E        	bit 3,(hl)
 100  8308 28 05        	jr z,2F
 101  830A
 102  830A CD 24 91     	call Inicia_Shield
 103  830D
 104  830D 18 0D        	jr Incrementa_FRAMES
 105  830F
 106  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8311
 108  8311              ;	Carga en (Shield_2) la siguiente temporización.
 109  8311
 110  8311 2A 50 8C     	ld hl,(Puntero_datos_shield)
 111  8314 23           	inc hl
 112  8315 22 50 8C     	ld (Puntero_datos_shield),hl
 113  8318 7E           	ld a,(hl)
 114  8319 32 53 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  831C
 116  831C              Incrementa_FRAMES
 117  831C
 118  831C 2A 78 5C     	ld hl,(FRAMES)
 119  831F 23           	inc hl
 120  8320 22 78 5C     	ld (FRAMES),hl
 121  8323
 122  8323 7C           	ld a,h
 123  8324 B5           	or l
 124  8325 20 04        	jr nz,1F
 125  8327
 126  8327 21 7A 5C     	ld hl,FRAMES_3
 127  832A 34           	inc (hl)
 128  832B
 129  832B D5           1 push de
 130  832C C5           	push bc
 131  832D
 132  832D CD 34 91     	call Actualiza_pantalla
 133  8330
 134  8330 C1           	pop bc
 135  8331 D1           	pop de
 136  8332 E1           	pop hl
 137  8333 F1           	pop af
 138  8334
 139  8334 FB           	ei
 140  8335
 141  8335 C9           	ret
 142  8336
 143  8336              ; --------------------------------------------------------------------------------
 144  8336
 145  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 5A 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 54 89        	defw Disparo_2
  40+ 8927 4E 89        	defw Disparo_3
  41+ 8929 48 89        	defw Disparo_4
  42+ 892B 42 89        	defw Disparo_5
  43+ 892D 3C 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00           Disparo_7 db 0	     						; Control.
  49+ 8937
  50+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893A 00 00        	defw 0									; Puntero de impresión.
  52+ 893C 00           Disparo_6 db 0		    					; Control.
  53+ 893D
  54+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8940 00 00        	defw 0									; Puntero de impresión.
  56+ 8942 00           Disparo_5 db 0			    				; Control.
  57+ 8943
  58+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8946 00 00        	defw 0									; Puntero de impresión.
  60+ 8948 00           Disparo_4 db 0				     			; Control.
  61+ 8949
  62+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 894C 00 00        	defw 0									; Puntero de impresión.
  64+ 894E 00           Disparo_3 db 0					    		; Control.
  65+ 894F
  66+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8952 00 00        	defw 0									; Puntero de impresión.
  68+ 8954 00           Disparo_2 db 0						    	; Control.
  69+ 8955
  70+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 8958 00 00        	defw 0									; Puntero de impresión.
  72+ 895A 00           Disparo_1 db 0							    ; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 148  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A2 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA2
  19+ 8BA2 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA3 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAB 01 02
  22+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB1 01 02
  23+ 8BB3
# file closed: Niveles.asm
 149  8BB3
 150  8BB3              ; --------------------------------------------------------------------------------
 151  8BB3              ;
 152  8BB3              ; 12/05/24
 153  8BB3              ;
 154  8BB3              ; Parámetros DRAW.
 155  8BB3              ;
 156  8BB3
 157  8BB3              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BB3
 159  8BB3 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BB4              ;															- Patrón de movimiento.
 161  8BB4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BB5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BB6
 164  8BB6 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BB7              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BB7
 167  8BB7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BB7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BB7              ; Ejemplos.
 170  8BB7
 171  8BB7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BB7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BB7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BB7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BB7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BB7
 177  8BB7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BB8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BB8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BB8
 181  8BB8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BBA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BBA
 184  8BBA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BBC
 186  8BBC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BBC
 188  8BBC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BBE              ;														; _palabras que componen el "movimiento_masticado".
 190  8BBE
 191  8BBE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BBE
 193  8BBE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BBF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BBF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BBF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BBF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BBF
 199  8BBF 00           Ctrl_2 db 0
 200  8BC0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BC0              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BC0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BC0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BC0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BC0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BC0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BC0              ;
 208  8BC0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BC0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BC0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BC0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BC0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BC0              ;														BIT 4, ???
 214  8BC0              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BC0
 216  8BC0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BC1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BC1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BC1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BC1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BC1              ;
 222  8BC1              ; 														DESCRIPCIÖN:
 223  8BC1              ;
 224  8BC1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BC1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BC1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BC1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BC1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BC1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BC1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BC1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BC1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BC1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BC1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BC1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BC1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BC1              ;
 238  8BC1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BC1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BC1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BC1
 242  8BC1              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BC1
 244  8BC1 00           Filas db 0												; Filas. [DRAW]
 245  8BC2 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BC3 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BC5 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BC7
 249  8BC7              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BC7
 251  8BC7 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BC8              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BC8              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BC8
 255  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BC8
 257  8BC8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BC8              ;
 259  8BC8              ;	COLORES: 0 ..... NEGRO
 260  8BC8              ;    		 1 ..... AZUL
 261  8BC8              ; 			 2 ..... ROJO
 262  8BC8              ;			 3 ..... MAGENTA
 263  8BC8              ; 			 4 ..... VERDE
 264  8BC8              ; 			 5 ..... CIAN
 265  8BC8              ;			 6 ..... AMARILLO
 266  8BC8              ; 			 7 ..... BLANCO
 267  8BC8
 268  8BC8 00 00        Indice_Sprite_der defw 0
 269  8BCA 00 00        Indice_Sprite_izq defw 0
 270  8BCC 00 00        Puntero_DESPLZ_der defw 0
 271  8BCE 00 00        Puntero_DESPLZ_izq defw 0
 272  8BD0
 273  8BD0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BD2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BD3 00           Columnas db 0
 276  8BD4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BD6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BD6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BD7
 280  8BD7              ; variables de control general.
 281  8BD7
 282  8BD7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BD8
 284  8BD8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BD8
 286  8BD8              Perfiles_de_velocidad
 287  8BD8
 288  8BD8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BD9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BDA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BDB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BDC
 293  8BDC              ; Contadores de 16 bits.
 294  8BDC
 295  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BE4
 300  8BE4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BE4
 302  8BE4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BE6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BE8 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BEA              ;
 306  8BEA              ;
 307  8BEA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BEB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BEB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BEB 00           Incrementa_puntero_backup db 0
 311  8BEC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BEE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BEF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BF0              ;
 317  8BF0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BF0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BF0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BF0              ;
 321  8BF0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BF0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BF0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BF0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BF0              ;
 326  8BF0              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BF0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BF0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BF0
 330  8BF0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BF1
 332  8BF1              ;														DESCRIPCIÓN:
 333  8BF1              ;
 334  8BF1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BF1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BF1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BF1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BF1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BF1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BF1
 341  8BF1              ;														BIT 3, Recarga de nueva oleada.
 342  8BF1              ;														BIT 4, Recarga de nueva oleada.
 343  8BF1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BF1              ;														BIT 6, **** Frame completo.
 345  8BF1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BF1
 347  8BF1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BF3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BF3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BF3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BF3
 352  8BF3              ; Gestión de ENTIDADES y CAJAS.
 353  8BF3
 354  8BF3 00 00        Puntero_store_caja defw 0
 355  8BF5 00 00        Puntero_restore_caja defw 0
 356  8BF7 00 00        Indice_restore_caja defw 0
 357  8BF9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8BFA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8BFB 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8BFC
 361  8BFC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8BFE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C00              ;														; _ puntero (Indice_entidades).
 364  8C00
 365  8C00              ;---------------------------------------------------------------------------------------------------------------
 366  8C00              ;
 367  8C00              ;	13/10/24
 368  8C00              ;
 369  8C00              ;	Álbumes.
 370  8C00
 371  8C00 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C02              ;														; _variable para almacenar lo posición del puntero_
 373  8C02              ; 														; _de pila, SP.
 374  8C02 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C04              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C04
 377  8C04              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C04
 379  8C04 00 00        Album_de_pintado defw 0
 380  8C06 00 00        Album_de_borrado defw 0
 381  8C08 00 00        Album_de_pintado_Amadeus defw 0
 382  8C0A 00 00        Album_de_borrado_Amadeus defw 0
 383  8C0C
 384  8C0C 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C0E 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C10
 387  8C10 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C12 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C14
 390  8C14
 391  8C14 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C16
 393  8C16 00           Num_de_bytes_album_de_disparos db 0
 394  8C17 00           Num_de_bytes_album_de_disparos_borrado db 0
 395  8C18
 396  8C18 07           Numero_de_disparos_de_entidades db 7
 397  8C19
 398  8C19 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 399  8C1A 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 400  8C1B
 401  8C1B 00 00        Techo_Scanlines_album defw 0
 402  8C1D 00 00        Techo_Scanlines_album_2 defw 0
 403  8C1F 00           Switch db 0
 404  8C20 00 00        Techo defw 0
 405  8C22 00 00        Scanlines_album_SP defw 0
 406  8C24 00 89        India_SP defw Tabla_de_pintado
 407  8C26 03 89        India_2_SP defw Tabla_de_pintado+3
 408  8C28
 409  8C28 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 410  8C29              ;
 411  8C29              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 412  8C29              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 413  8C29              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 414  8C29              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 415  8C29              ;																Habilita el borrado/pintado de sprites.
 416  8C29              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 417  8C29              ;																_ a la baja.
 418  8C29              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 419  8C29              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 420  8C29              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 421  8C29              ; 																_ el último frame de la explosión de nuestra nave.
 422  8C29              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 423  8C29              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 424  8C29
 425  8C29 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8C2A              ;
 427  8C2A              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8C2A              ;
 429  8C2A              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8C2A              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8C2A              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8C2A              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8C2A              ;
 434  8C2A              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8C2A              ;															_ masticados ya generados.
 436  8C2A              ;
 437  8C2A              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8C2A              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8C2A              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8C2A              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8C2A
 442  8C2A 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 443  8C2B              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 444  8C2B              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 445  8C2B
 446  8C2B              ; Gestión de Disparos.
 447  8C2B
 448  8C2B 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 449  8C2D 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 450  8C2F 00           Impacto2 db 0											; Byte de control de impactos.
 451  8C30
 452  8C30              ;
 453  8C30              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 454  8C30              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 455  8C30              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 456  8C30              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 457  8C30
 458  8C30
 459  8C30
 460  8C30
 461  8C30
 462  8C30
 463  8C30
 464  8C30 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 465  8C32              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 466  8C32              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 467  8C32
 468  8C32 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 469  8C34              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 470  8C34 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  8C37              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  8C37 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 473  8C3A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 474  8C3A
 475  8C3A              ;---------------------------------------------------------------------------------------------------------------
 476  8C3A
 477  8C3A              ; Relojes y temporizaciones.
 478  8C3A
 479  8C3A 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 480  8C3B 05           Clock_explosion_Amadeus db 5
 481  8C3C 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 482  8C3D
 483  8C3D F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 484  8C3F F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 485  8C41 00           Numero_rnd_disparos db 0
 486  8C42
 487  8C42 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 488  8C44 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 489  8C45              ;														; Repite la oleada de entidades.
 490  8C45 A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 491  8C46 A0           CLOCK_disparos_de_entidades db $a0
 492  8C47
 493  8C47              ;---------------------------------------------------------------------------------------------------------------
 494  8C47
 495  8C47              ; Gestión de NIVELES.
 496  8C47
 497  8C47 00           Nivel db 0												; Nivel actual del juego.
 498  8C48 00 00        Puntero_indice_NIVELES defw 0
 499  8C4A 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  8C4C              ; 														; _ que definen el NIVEL.
 501  8C4C
 502  8C4C              ; ---------------------------------------------------------------------------------------------------------------
 503  8C4C
 504  8C4C              ; Temporizaciones Shield.
 505  8C4C
 506  8C4C 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 507  8C50 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 508  8C52 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 509  8C53 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 510  8C54 00           Shield_3 db 0
 511  8C55
 512  8C55 06           Lives db 6
 513  8C56
 514  8C56              ; 	INICIO  *************************************************************************************************************************************************************************
 515  8C56              ;
 516  8C56              ;	5/1/24
 517  8C56
 518  8C56              START
 519  8C56
 520  8C56 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 521  8C59 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 522  8C5B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 523  8C5D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 524  8C5F F3           	DI
 525  8C60
 526  8C60              ; Limpiamos pantalla.
 527  8C60
 528  8C60 3E 07        	ld a,%00000111
 529  8C62 CD C1 94     	call Cls
 530  8C65 CD 19 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 531  8C68
 532  8C68              ; INICIALIZACIÓN.
 533  8C68
 534  8C68 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 535  8C6A CD 66 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 536  8C6D
 537  8C6D CD AE 8E     	call Extrae_numero_aleatorio_y_avanza
 538  8C70
 539  8C70 6F           	ld l,a
 540  8C71 26 00        	ld h,0
 541  8C73 22 42 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C76
 543  8C76              ;	Inicializa 1er Nivel.
 544  8C76
 545  8C76 21 94 8B     	ld hl,Indice_de_niveles
 546  8C79 22 48 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 547  8C7C CD 96 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 548  8C7F              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 549  8C7F              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 550  8C7F              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 551  8C7F
 552  8C7F              ;	Inicia los álbumes de líneas.
 553  8C7F
 554  8C7F CD 67 90     	call Inicia_albumes_de_lineas
 555  8C82              ;
 556  8C82 CD 77 90     	call Inicia_albumes_de_lineas_Amadeus
 557  8C85 CD 84 90     	call Inicia_albumes_de_disparos
 558  8C88
 559  8C88 CD DB 92     4 call Inicia_Entidades
 560  8C8B CD 3E 93     	call Inicia_Amadeus
 561  8C8E
 562  8C8E              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 563  8C8E              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 564  8C8E              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 565  8C8E
 566  8C8E 11 6D 89     	ld de,Amadeus_BOX
 567  8C91 CD 91 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 568  8C94 CD 81 93     	call Limpiamos_bandeja_DRAW
 569  8C97
 570  8C97              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 571  8C97
 572  8C97 06 3C        	ld b,60
 573  8C99 CD 67 9D     2 call Amadeus_a_izquierda
 574  8C9C 10 FB        	djnz 2B
 575  8C9E
 576  8C9E CD 45 90     	call Genera_datos_de_impresion_Amadeus
 577  8CA1
 578  8CA1              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 579  8CA1
 580  8CA1 CD A0 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 581  8CA4
 582  8CA4 CD 24 91     	call Inicia_Shield
 583  8CA7
 584  8CA7 2A 22 8C     6 ld hl,(Scanlines_album_SP)
 585  8CAA 22 1B 8C     	ld (Techo_Scanlines_album),hl
 586  8CAD
 587  8CAD 2A 06 8C     	ld hl,(Album_de_borrado)
 588  8CB0 22 22 8C     	ld (Scanlines_album_SP),hl
 589  8CB3
 590  8CB3 21 00 89     	ld hl,Tabla_de_pintado
 591  8CB6 22 24 8C     	ld (India_SP),hl
 592  8CB9
 593  8CB9 21 28 8C     	ld hl,Ctrl_3
 594  8CBC CB C6        	set 0,(hl) 											; Indica Frame completo.
 595  8CBE CB D6        	set 2,(hl)
 596  8CC0 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 597  8CC2
 598  8CC2 FB           	ei 													; Ha de apuntar a $5c3a.
 599  8CC3
 600  8CC3 76           	halt
 601  8CC4
 602  8CC4              ; ------------------------------------
 603  8CC4
 604  8CC4              Main
 605  8CC4              ;
 606  8CC4              ; 25/10/24
 607  8CC4
 608  8CC4              ; Gestión de disparos.
 609  8CC4
 610  8CC4 CD 83 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 611  8CC7 CD 5A 9F     	call Motor_de_disparos_entidades
 612  8CCA CD 73 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 613  8CCD
 614  8CCD              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 615  8CCD              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 616  8CCD              ; Este hecho lo indica el bit2 de (Impacto2).
 617  8CCD
 618  8CCD CD 10 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 619  8CD0
 620  8CD0              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 621  8CD0
 622  8CD0 21 46 8C     	ld hl,CLOCK_disparos_de_entidades
 623  8CD3 35           	dec (hl)
 624  8CD4 CC CC 8D     	call z,Autoriza_disparo_de_entidades
 625  8CD7
 626  8CD7 2A 42 8C     	ld hl,(Clock_next_entity)
 627  8CDA ED 4B 78 5C  	ld bc,(FRAMES)
 628  8CDE A7           	and a
 629  8CDF ED 42        	sbc hl,bc
 630  8CE1 20 16        	jr nz,1F
 631  8CE3
 632  8CE3              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 633  8CE3              ; _ (Clock_next_entity) para la siguiente entidad.
 634  8CE3
 635  8CE3 3A FA 8B     	ld a,(Numero_parcial_de_entidades)
 636  8CE6 47           	ld b,a
 637  8CE7 3A FB 8B     	ld a,(Entidades_en_curso)
 638  8CEA B8           	cp b
 639  8CEB 28 0C        	jr z,1F
 640  8CED 30 0A        	jr nc,1F
 641  8CEF
 642  8CEF 3C           	inc a
 643  8CF0 32 FB 8B     	ld (Entidades_en_curso),a
 644  8CF3
 645  8CF3              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 646  8CF3
 647  8CF3 CD AE 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 648  8CF6 CD CA 8E     	call Define_Clock_next_entity
 649  8CF9
 650  8CF9 3A FB 8B     1 ld a,(Entidades_en_curso)
 651  8CFC A7           	and a
 652  8CFD CA 77 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 653  8D00 47           	ld b,a												; No hay entidades que gestionar.
 654  8D01
 655  8D01              ; ( Código que ejecutamos con cada entidad: ).
 656  8D01
 657  8D01              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 658  8D01              ;
 659  8D01              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 660  8D01
 661  8D01 21 00 89     	ld hl,Tabla_de_pintado
 662  8D04 22 24 8C     	ld (India_SP),hl
 663  8D07
 664  8D07 21 28 8C     	ld hl,Ctrl_3
 665  8D0A CB D6        	set 2,(hl)
 666  8D0C CD 58 8E     	call Change
 667  8D0F
 668  8D0F C5           2 push bc 												; Nº de entidades en curso.
 669  8D10
 670  8D10 CD F1 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 671  8D13 ED 5B 22 8C  	ld de,(Scanlines_album_SP)
 672  8D17
 673  8D17              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 674  8D17
 675  8D17              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 676  8D17              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 677  8D17
 678  8D17 3A 2F 8C     	ld a,(Impacto2)
 679  8D1A CB 5F        	bit 3,a
 680  8D1C C4 0A A1     	call nz,Compara_con_coordenadas_de_disparo
 681  8D1F
 682  8D1F 3A B7 8B     	ld a,(Impacto)
 683  8D22 CB 4F        	bit 1,a
 684  8D24 C4 01 92     	call nz,Genera_explosion
 685  8D27 20 31        	jr nz,Gestiona_siguiente_entidad
 686  8D29
 687  8D29 3A B7 8B     	ld a,(Impacto)
 688  8D2C A7           	and a
 689  8D2D 28 0C        	jr z,3F
 690  8D2F
 691  8D2F              ; IMPACTO en entidad por colisión con Amadeus.
 692  8D2F
 693  8D2F              ; 5/7/24
 694  8D2F              ; Nota importante:
 695  8D2F              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 696  8D2F              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 697  8D2F              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 698  8D2F
 699  8D2F 3A 71 89     	ld a,(Impacto_Amadeus)
 700  8D32 A7           	and a
 701  8D33 C4 01 92     	call nz,Genera_explosion
 702  8D36 20 22        	jr nz,Gestiona_siguiente_entidad
 703  8D38
 704  8D38              ; Falsa colisión !!!
 705  8D38
 706  8D38 32 B7 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 707  8D3B
 708  8D3B              ; -------------------------------------------
 709  8D3B
 710  8D3B CD 0E 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 711  8D3E CD 38 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 712  8D41 CD FE 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 713  8D44 CD 01 95     	call Genera_datos_de_impresion
 714  8D47 CD A4 93     	call Decrementa_Contador_de_mov_masticados
 715  8D4A
 716  8D4A              ; -------------------------------------------
 717  8D4A
 718  8D4A              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 719  8D4A
 720  8D4A 2A B8 8B     	ld hl,(Puntero_de_impresion)
 721  8D4D CD D5 94     	call Genera_coordenadas
 722  8D50
 723  8D50              ; TODO: Generamos disparo ???
 724  8D50
 725  8D50 3A 1A 8C     	ld a,(Permiso_de_disparo_Entidades)
 726  8D53 A7           	and a
 727  8D54 C4 E1 8D     	call nz,Entidad_genera_disparo_si_procede
 728  8D57
 729  8D57 CD 8E A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 730  8D5A
 731  8D5A              Gestiona_siguiente_entidad
 732  8D5A
 733  8D5A CD 76 93      	call Store_Restore_cajas
 734  8D5D C1           	pop bc
 735  8D5E 10 AF        	djnz 2B
 736  8D60
 737  8D60              ; Hemos gestionado todas las entidades.
 738  8D60              ; ----- ----- -----
 739  8D60
 740  8D60 CD 22 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 741  8D63 CD 39 8F     	call Ordena_tabla_de_impresion
 742  8D66 CD A0 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 743  8D69
 744  8D69 CD DF 8E     	call Borra_diferencia
 745  8D6C
 746  8D6C 3A 28 8C     	ld a,(Ctrl_3)
 747  8D6F CB 5F        	bit 3,a
 748  8D71 20 04        	jr nz,Gestion_de_Amadeus
 749  8D73
 750  8D73 EB           	ex de,hl
 751  8D74 71           	ld (hl),c
 752  8D75 2C           	inc l
 753  8D76 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 754  8D77
 755  8D77              ;! GESTIONA AMADEUS !!!!!!!!!!
 756  8D77
 757  8D77              Gestion_de_Amadeus
 758  8D77
 759  8D77 21 28 8C     	ld hl,Ctrl_3
 760  8D7A CB 76        	bit 6,(hl)
 761  8D7C 28 13        	jr z,Amadeus_vivo
 762  8D7E
 763  8D7E              ; Amadeus ha sido destruido.
 764  8D7E              ; Decrementa (Temp_new_live).
 765  8D7E
 766  8D7E 21 3C 8C     	ld hl,Temp_new_live
 767  8D81 35           	dec (hl)
 768  8D82 20 26        	jr nz,End_frame
 769  8D84
 770  8D84              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 771  8D84
 772  8D84 21 55 8C     	ld hl,Lives
 773  8D87 35           	dec (hl)
 774  8D88
 775  8D88              ;! Fin del juego
 776  8D88
 777  8D88 F3           	di
 778  8D89 28 FE        	jr z,$
 779  8D8B FB           	ei
 780  8D8C
 781  8D8C              ; Nueva nave.
 782  8D8C
 783  8D8C CD FE 8D     	call Reinicia_Amadeus
 784  8D8F 18 19        	jr End_frame
 785  8D91
 786  8D91              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 787  8D91
 788  8D91              Amadeus_vivo
 789  8D91
 790  8D91 3A 71 89     	ld a,(Impacto_Amadeus)
 791  8D94 A7           	and a
 792  8D95 C4 31 92     	call nz, Genera_explosion_Amadeus
 793  8D98 20 10        	jr nz, End_frame
 794  8D9A
 795  8D9A CD DE 91     	call Teclado
 796  8D9D 21 28 8C     	ld hl,Ctrl_3
 797  8DA0
 798  8DA0 CB 6E        	bit 5,(hl)
 799  8DA2 28 06        	jr z,End_frame
 800  8DA4
 801  8DA4              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 802  8DA4
 803  8DA4 CD 73 8E     	call Change_Amadeus
 804  8DA7 CD 45 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 805  8DAA
 806  8DAA              End_frame
 807  8DAA
 808  8DAA              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 809  8DAA              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 810  8DAA
 811  8DAA CD 35 A0     	call Genera_datos_de_impresion_disparos_Entidades
 812  8DAD CD F9 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 813  8DB0 CD 4F A1     	call Calcula_bytes_pintado_disparos
 814  8DB3 CD 5C A1     	call Limpia_album_de_pintado_disparos_entidades
 815  8DB6
 816  8DB6              ; ------------ ------------- --------------
 817  8DB6
 818  8DB6 2A 06 8C     	ld hl,(Album_de_borrado)
 819  8DB9 22 22 8C     	ld (Scanlines_album_SP),hl
 820  8DBC
 821  8DBC 21 28 8C     	ld hl,Ctrl_3
 822  8DBF CB C6        	set 0,(hl) 											; Indica Frame completo.
 823  8DC1 CB 9E        	res 3,(hl)
 824  8DC3 CB A6        	res 4,(hl)
 825  8DC5
 826  8DC5 AF           	xor a
 827  8DC6 D3 FE        	out ($fe),a
 828  8DC8
 829  8DC8 76           	halt
 830  8DC9
 831  8DC9              ; ----------------------------------------
 832  8DC9
 833  8DC9              ;	ld a,(Ctrl_1) 										; Existe Loop?
 834  8DC9              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 835  8DC9 CA C4 8C     	jp z,Main
 836  8DCC
 837  8DCC              ;------------------------------------------
 838  8DCC              ;
 839  8DCC              ;	2/10/24
 840  8DCC
 841  8DCC              Autoriza_disparo_de_entidades
 842  8DCC
 843  8DCC 3E 01        	ld a,1
 844  8DCE 32 1A 8C     	ld (Permiso_de_disparo_Entidades),a
 845  8DD1
 846  8DD1 3A 45 8C     	ld a,(Repone_CLOCK_disparos)
 847  8DD4 FE 19        	cp 25
 848  8DD6 38 02        	jr c,1F
 849  8DD8
 850  8DD8 D6 05        	sub 5
 851  8DDA
 852  8DDA 32 45 8C     1 ld (Repone_CLOCK_disparos),a
 853  8DDD 32 46 8C     	ld (CLOCK_disparos_de_entidades),a
 854  8DE0
 855  8DE0 C9           	ret
 856  8DE1
 857  8DE1              ;------------------------------------------
 858  8DE1              ;
 859  8DE1              ;	14/09/24
 860  8DE1              ;
 861  8DE1              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 862  8DE1
 863  8DE1              Entidad_genera_disparo_si_procede
 864  8DE1
 865  8DE1 2A 3F 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 866  8DE4 CB 06        	rlc (hl)
 867  8DE6
 868  8DE6 DC 85 A0     	call c,Genera_disparo_de_entidad_maldosa
 869  8DE9
 870  8DE9 C9           	ret
 871  8DEA
 872  8DEA              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 873  8DEA              ;
 874  8DEA              ;	30/09/24
 875  8DEA
 876  8DEA              Actuaiza_sp_de_disparos_de_entidades
 877  8DEA
 878  8DEA 2A 3F 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 879  8DED 23           	inc hl
 880  8DEE 22 3F 8C     	ld (Puntero_num_aleatorios_disparos),hl
 881  8DF1
 882  8DF1 11 FD 88     	ld de,Numeros_aleatorios+7
 883  8DF4 7B           	ld a,e
 884  8DF5 95           	sub l
 885  8DF6 C0           	ret nz
 886  8DF7
 887  8DF7 21 F6 88     1 ld hl,Numeros_aleatorios
 888  8DFA 22 3F 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 889  8DFD C9           	ret
 890  8DFE
 891  8DFE              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 892  8DFE              ;
 893  8DFE              ;	24/07/24
 894  8DFE
 895  8DFE              Reinicia_Amadeus
 896  8DFE
 897  8DFE              ;	Reinicia posición y estado.
 898  8DFE
 899  8DFE 21 CF 50     	ld hl,$50cf
 900  8E01 22 72 89     	ld (p.imp.amadeus),hl
 901  8E04 21 F0 E0     	ld hl,$e0f0
 902  8E07 22 74 89     	ld (Pamm_Amadeus),hl
 903  8E0A 21 3D 00     	ld hl,$003d
 904  8E0D 22 76 89     	ld (Comm_Amadeus),hl
 905  8E10
 906  8E10              ;	limpiamos el álbum de borrado.
 907  8E10
 908  8E10 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
 909  8E13
 910  8E13 AF           	xor a
 911  8E14 77           	ld (hl),a
 912  8E15
 913  8E15 E5           	push hl
 914  8E16 D1           	pop de
 915  8E17 13           	inc de
 916  8E18
 917  8E18 01 23 00     	ld bc,35
 918  8E1B ED B0        	ldir
 919  8E1D
 920  8E1D CD 45 90     	call Genera_datos_de_impresion_Amadeus
 921  8E20
 922  8E20              ;	Reinicia temporizaciones.
 923  8E20
 924  8E20 CD 24 91     	call Inicia_Shield
 925  8E23
 926  8E23 3E 5A        	ld a,90
 927  8E25 32 52 8C     	ld (Shield),a
 928  8E28
 929  8E28 3E 64        	ld a,100
 930  8E2A 32 3C 8C     	ld (Temp_new_live),a
 931  8E2D
 932  8E2D              ; 	Restauramos el FLAG: Amadeus vivo.
 933  8E2D
 934  8E2D 21 28 8C     	ld hl,Ctrl_3
 935  8E30 CB B6        	res 6,(hl)
 936  8E32
 937  8E32              ;	Fuerza la impresión de la nave en el siguiente frame.
 938  8E32
 939  8E32 21 28 8C      	ld hl,Ctrl_3
 940  8E35 CB EE        	set 5,(hl)
 941  8E37
 942  8E37 C9           	ret
 943  8E38
 944  8E38              ; --------------------------------------------------------------------------------------------------------------
 945  8E38              ;
 946  8E38              ;	12/05/24
 947  8E38
 948  8E38 3A BE 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 949  8E3B CB 27        	sla a
 950  8E3D 32 BE 8B     	ld (Velocidad),a
 951  8E40 E6 10        	and $10
 952  8E42 C8           	ret z
 953  8E43
 954  8E43              ; Restaura (Velocidad) a razón del nº de vueltas.
 955  8E43
 956  8E43 3A B6 8B     	ld a,(Contador_de_vueltas)
 957  8E46 CB 2F        	sra a
 958  8E48 CB 2F        	sra a
 959  8E4A 32 BE 8B     	ld (Velocidad),a
 960  8E4D
 961  8E4D 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 962  8E50 23           	inc hl
 963  8E51 23           	inc hl
 964  8E52 23           	inc hl
 965  8E53 23           	inc hl
 966  8E54 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 967  8E57
 968  8E57 C9           	ret
 969  8E58
 970  8E58              ; --------------------------------------------------------------------------------------------------------------
 971  8E58              ;
 972  8E58              ;	25/08/24
 973  8E58
 974  8E58              Change
 975  8E58
 976  8E58 3A 1F 8C     	ld a,(Switch)
 977  8E5B EE 01        	xor 1
 978  8E5D 32 1F 8C     	ld (Switch),a
 979  8E60 2A 04 8C     	ld hl,(Album_de_pintado)
 980  8E63 ED 5B 06 8C  	ld de,(Album_de_borrado)
 981  8E67 EB           	ex de,hl
 982  8E68 22 04 8C     	ld (Album_de_pintado),hl
 983  8E6B 22 22 8C     	ld (Scanlines_album_SP),hl
 984  8E6E ED 53 06 8C  	ld (Album_de_borrado),de
 985  8E72 C9           	ret
 986  8E73
 987  8E73              Change_Amadeus
 988  8E73
 989  8E73 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
 990  8E76 ED 5B 0A 8C  	ld de,(Album_de_borrado_Amadeus)
 991  8E7A EB           	ex de,hl
 992  8E7B 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
 993  8E7E ED 53 0A 8C  	ld (Album_de_borrado_Amadeus),de
 994  8E82 C9           	ret
 995  8E83
 996  8E83              Change_Disparos
 997  8E83
 998  8E83              ; Álbumes de Amadeus.
 999  8E83
1000  8E83 2A 0C 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1001  8E86 ED 5B 0E 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1002  8E8A EB           	ex de,hl
1003  8E8B 22 0C 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1004  8E8E ED 53 0E 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1005  8E92 CD 44 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1006  8E95
1007  8E95              ; Álbumes de entidades.
1008  8E95
1009  8E95 2A 10 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1010  8E98 ED 5B 12 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1011  8E9C EB           	ex de,hl
1012  8E9D 22 10 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1013  8EA0 ED 53 12 8C  	ld (Album_de_borrado_disparos_Entidades),de
1014  8EA4 22 14 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1015  8EA7
1016  8EA7 3A 16 8C     	ld a,(Num_de_bytes_album_de_disparos)
1017  8EAA 32 17 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1018  8EAD
1019  8EAD C9           	ret
1020  8EAE
1021  8EAE              ; ------------------------------------
1022  8EAE              ;
1023  8EAE              ; 1/05/24
1024  8EAE
1025  8EAE              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1026  8EAE              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1027  8EAE
1028  8EAE              ;	DESTRUYE: HL,DE,A
1029  8EAE              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1030  8EAE
1031  8EAE              ;	Variables implicadas: (RND_SP).
1032  8EAE
1033  8EAE              Extrae_numero_aleatorio_y_avanza
1034  8EAE
1035  8EAE 21 00 89     	ld hl,Tabla_de_pintado
1036  8EB1 EB           	ex de,hl
1037  8EB2 2A 3D 8C     	ld hl,(RND_SP)
1038  8EB5 EB           	ex de,hl
1039  8EB6 A7           	and a
1040  8EB7 ED 52        	sbc hl,de
1041  8EB9
1042  8EB9 2A 3D 8C     	ld hl,(RND_SP)
1043  8EBC 20 06        	jr nz,1F
1044  8EBE
1045  8EBE              ; Sitúa HL al principio de la tabla de nº aleatorios.
1046  8EBE
1047  8EBE 21 F6 88     	ld hl,Numeros_aleatorios
1048  8EC1 22 3D 8C     	ld (RND_SP),HL
1049  8EC4
1050  8EC4              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1051  8EC4
1052  8EC4 7E           1 ld a,(hl)
1053  8EC5 23           	inc hl
1054  8EC6 22 3D 8C     	ld (RND_SP),hl
1055  8EC9 C9           	ret
1056  8ECA
1057  8ECA              ; ------------------------------------
1058  8ECA              ;
1059  8ECA              ; 1/05/24
1060  8ECA
1061  8ECA              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1062  8ECA              ; (1 a 4 segundos).
1063  8ECA              ; Actualizamos (Clock_next_entity) con A.
1064  8ECA
1065  8ECA              ;	DESTRUYE: A y B.
1066  8ECA              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1067  8ECA              ;			 Actualiza (Clock_next_entity) con A.
1068  8ECA
1069  8ECA              ;	Variables implicadas: (Clock_next_entity).
1070  8ECA
1071  8ECA              ; Notas:
1072  8ECA
1073  8ECA              ; 	$32 1 seg.
1074  8ECA              ; 	$64 2 seg.
1075  8ECA              ; 	$96 3 seg.
1076  8ECA              ; 	$c8 4 seg.
1077  8ECA              ; 	$fa 5 seg.
1078  8ECA
1079  8ECA              ; $ffff 1310,7 seg, 22 minutos.
1080  8ECA
1081  8ECA              ;	$0100  5 seg. aproximadamente.
1082  8ECA              ;	$0200 10 seg. aproximadamente.
1083  8ECA              ;	$0300 15 seg. aproximadamente.
1084  8ECA              ;	$0400 20 seg. aproximadamente.
1085  8ECA              ;	$0500 25 seg. aproximadamente.
1086  8ECA              ;	$0600 30 seg. aproximadamente.
1087  8ECA
1088  8ECA              Define_Clock_next_entity
1089  8ECA
1090  8ECA FE 34        	cp $34
1091  8ECC 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1092  8ECE
1093  8ECE              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1094  8ECE
1095  8ECE 4F           3 ld c,a
1096  8ECF 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1097  8ED1 2A 78 5C     	ld hl,(FRAMES)
1098  8ED4 A7           	and a
1099  8ED5 ED 4A        	adc hl,bc
1100  8ED7 22 42 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1101  8EDA C9           	ret
1102  8EDB
1103  8EDB 3E 34        1 ld a,$34
1104  8EDD 18 EF        	jr 3B
1105  8EDF
1106  8EDF              ; ------------------------------------
1107  8EDF              ;
1108  8EDF              ; 18/03/24
1109  8EDF
1110  8EDF              Borra_diferencia
1111  8EDF
1112  8EDF ED 4B 22 8C  	ld bc,(Scanlines_album_SP)
1113  8EE3
1114  8EE3 3A 1F 8C     	ld a,(Switch)
1115  8EE6 A7           	and a
1116  8EE7 28 08        	jr z,2F
1117  8EE9
1118  8EE9 2A 1D 8C     	ld hl,(Techo_Scanlines_album_2)
1119  8EEC 11 1D 8C     	ld de,Techo_Scanlines_album_2
1120  8EEF 18 06        	jr 3F
1121  8EF1
1122  8EF1 2A 1B 8C     2 ld hl,(Techo_Scanlines_album)
1123  8EF4 11 1B 8C     	ld de,Techo_Scanlines_album
1124  8EF7
1125  8EF7              ; Diferencia.
1126  8EF7
1127  8EF7 ED 42        3 sbc hl,bc
1128  8EF9
1129  8EF9 C8           	ret z
1130  8EFA D8           	ret c
1131  8EFB
1132  8EFB              ; Nuevo techo, (más bajo que el anterior).
1133  8EFB              ; Fijamos nuevo techo y borramos bytes sobrantes.
1134  8EFB
1135  8EFB EB           	ex de,hl
1136  8EFC
1137  8EFC 71           	ld (hl),c
1138  8EFD 2C           	inc l
1139  8EFE 70           	ld (hl),b
1140  8EFF
1141  8EFF AF           	xor a
1142  8F00 43           	ld b,e
1143  8F01
1144  8F01 2A 22 8C     	ld hl,(Scanlines_album_SP)
1145  8F04
1146  8F04 77           1 ld (hl),a
1147  8F05 23           	inc hl
1148  8F06 10 FC        	djnz 1B
1149  8F08
1150  8F08              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1151  8F08
1152  8F08 21 28 8C     	ld hl,Ctrl_3
1153  8F0B CB DE        	set 3,(hl)
1154  8F0D
1155  8F0D C9           	ret
1156  8F0E
1157  8F0E              ; --------------------------------------------------------------------------------------------------------------
1158  8F0E              ;
1159  8F0E              ;	26/3/24
1160  8F0E
1161  8F0E              Recauda_informacion_de_entidad_en_curso
1162  8F0E
1163  8F0E              ; Almacena la Coordenada Y de la entidad en curso.
1164  8F0E
1165  8F0E              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1166  8F0E
1167  8F0E 3A B5 8B     	ld a,(Coordenada_y)
1168  8F11 2A 24 8C     	ld hl,(India_SP)
1169  8F14 77           	ld (hl),a
1170  8F15 2C           	inc l
1171  8F16
1172  8F16              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1173  8F16
1174  8F16 ED 5B 22 8C  	ld de,(Scanlines_album_SP)
1175  8F1A
1176  8F1A 73           	ld (hl),e
1177  8F1B 2C           	inc l
1178  8F1C 72           	ld (hl),d
1179  8F1D 2C           	inc l
1180  8F1E
1181  8F1E 22 24 8C     	ld (India_SP),hl
1182  8F21
1183  8F21 C9           	ret
1184  8F22
1185  8F22              ; --------------------------------------------------------------------------------------------------------------
1186  8F22              ;
1187  8F22              ;	27/03/24
1188  8F22              ;
1189  8F22
1190  8F22              Inicializa_India_y_limpia_Tabla_de_impresion
1191  8F22
1192  8F22 2A 24 8C     	ld hl,(India_SP)
1193  8F25 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1194  8F28
1195  8F28 79           	ld a,c
1196  8F29 95           	sub l
1197  8F2A 28 06        	jr z,2F
1198  8F2C 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1199  8F2D              ;														; _ y pasamos a inicializar (India_SP).
1200  8F2D AF           	xor a
1201  8F2E
1202  8F2E 77           1 ld (hl),a
1203  8F2F 2C           	inc l
1204  8F30 10 FC        	djnz 1B												; Limpia Tabla.
1205  8F32
1206  8F32 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1207  8F35 22 24 8C     	ld (India_SP),hl
1208  8F38
1209  8F38 C9           	ret
1210  8F39
1211  8F39              ; --------------------------------------------------------------------------------------------------------------
1212  8F39              ;
1213  8F39              ;	31/3/24
1214  8F39
1215  8F39              Ordena_tabla_de_impresion
1216  8F39
1217  8F39              ; 5794 T/states.
1218  8F39              ; 6278 T/states.
1219  8F39              ; 5310 T/states.
1220  8F39
1221  8F39              ; Inicializamos punteros (India_SP) e (India_2_SP).
1222  8F39              ; Inicializamos contador de comparaciones, [C].
1223  8F39              ; Cargamos los registros A y B para efectuar comparación.
1224  8F39
1225  8F39 FD 2E 00     	ld iyl,0
1226  8F3C
1227  8F3C 3A FB 8B     	ld a,(Entidades_en_curso)
1228  8F3F FE 04        	cp 4 	;	4
1229  8F41 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1230  8F42
1231  8F42 3D           	dec a
1232  8F43 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1233  8F44 51           	ld d,c 										; Copia de respaldo.
1234  8F45
1235  8F45 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1236  8F46
1237  8F46 21 03 89     	ld hl,Tabla_de_pintado+3
1238  8F49 46           	ld b,(hl)
1239  8F4A 22 26 8C     	ld (India_2_SP),hl
1240  8F4D
1241  8F4D B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1242  8F4E DC 76 8F     	call c, Avanza_India_2_SP
1243  8F51 CC 76 8F     	call z, Avanza_India_2_SP
1244  8F54
1245  8F54 FD 2D        	dec iyl
1246  8F56 28 18        	jr z,2F
1247  8F58
1248  8F58
1249  8F58              ; --------------------------------------------------------------------------------------------------------------
1250  8F58              ;
1251  8F58              ;	7/4/24
1252  8F58
1253  8F58              Trueque
1254  8F58
1255  8F58              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1256  8F58              ;  			A contiene en nº de fila de (India_SP).
1257  8F58              ;			HL contiene (India_2_SP).
1258  8F58
1259  8F58 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1260  8F59 E5           	push hl										; Preservo (India_2_SP).
1261  8F5A
1262  8F5A ED 5B 24 8C  	ld de,(India_SP)
1263  8F5E EB           	ex de,hl
1264  8F5F 70           	ld (hl),b
1265  8F60 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1266  8F61
1267  8F61 CD A2 8F     	call Intercambia_1_byte
1268  8F64 CD A2 8F     	call Intercambia_1_byte
1269  8F67
1270  8F67
1271  8F67              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1272  8F67              ; Recuperamos (India_2_SP) en HL.
1273  8F67
1274  8F67 2A 24 8C     	ld hl,(India_SP)
1275  8F6A 7E           	ld a,(hl)
1276  8F6B
1277  8F6B E1           	pop hl
1278  8F6C D1           	pop de
1279  8F6D
1280  8F6D              ; --------------------------------------------------------------------------------------------------------------
1281  8F6D
1282  8F6D CD 76 8F     	call Avanza_India_2_SP
1283  8F70
1284  8F70 14           2 inc d
1285  8F71 15           	dec d
1286  8F72 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1287  8F73 18 D8        	jr 1B
1288  8F75
1289  8F75 C9           	ret
1290  8F76
1291  8F76              ; ----- ----- ----- ----- -----
1292  8F76
1293  8F76              Avanza_India_2_SP
1294  8F76
1295  8F76 0D           	dec c
1296  8F77 28 0A        	jr z,Avanza_punteros_indios
1297  8F79
1298  8F79 FD 2C        	inc iyl
1299  8F7B
1300  8F7B 2C           	inc l
1301  8F7C 2C           	inc l
1302  8F7D 2C           	inc l
1303  8F7E
1304  8F7E 46           	ld b,(hl)
1305  8F7F 22 26 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1306  8F82
1307  8F82 C9           	ret
1308  8F83
1309  8F83              ; ----- ----- ----- ----- -----
1310  8F83
1311  8F83              Avanza_punteros_indios
1312  8F83
1313  8F83 15           	dec d
1314  8F84 28 15        	jr z,Prepara_salida
1315  8F86
1316  8F86 4A           	ld c,d
1317  8F87
1318  8F87 2A 24 8C     	ld hl,(India_SP)
1319  8F8A 2C           	inc l
1320  8F8B 2C           	inc l
1321  8F8C 2C           	inc l
1322  8F8D 7E           	ld a,(hl)
1323  8F8E 22 24 8C     	ld (India_SP),hl
1324  8F91
1325  8F91 2C           	inc l
1326  8F92 2C           	inc l
1327  8F93 2C           	inc l
1328  8F94 46           	ld b,(hl)
1329  8F95 22 26 8C     	ld (India_2_SP),hl
1330  8F98
1331  8F98 FD 2C        	inc iyl
1332  8F9A
1333  8F9A C9           	ret
1334  8F9B
1335  8F9B              Prepara_salida
1336  8F9B
1337  8F9B 21 00 89     	ld hl,Tabla_de_pintado
1338  8F9E 22 24 8C     	ld (India_SP),hl
1339  8FA1 C9           	ret
1340  8FA2
1341  8FA2
1342  8FA2 2C           Intercambia_1_byte inc l
1343  8FA3 1C           	inc e
1344  8FA4 46           	ld b,(hl)
1345  8FA5 1A           	ld a,(de)
1346  8FA6 EB           	ex de,hl
1347  8FA7 70           	ld (hl),b
1348  8FA8 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1349  8FA9 C9           	ret
1350  8FAA
1351  8FAA              ; -----------------------------------------------------------------------------------
1352  8FAA              ;
1353  8FAA              ;	20/01/24
1354  8FAA              ;
1355  8FAA              ;
1356  8FAA
1357  8FAA              Construye_movimientos_masticados_entidad
1358  8FAA
1359  8FAA 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1360  8FAD E5           	push hl
1361  8FAE CD F1 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1362  8FB1              ;															; _ el (Contador_de_mov_masticados).
1363  8FB1 CD BC 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1364  8FB4              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1365  8FB4 CD ED 99     	call Recompone_posicion_inicio
1366  8FB7
1367  8FB7 CD 1D 97     1 call Draw
1368  8FBA CD D6 8F     	call Guarda_movimiento_masticado
1369  8FBD
1370  8FBD CD 9A 9D     	call Movimiento
1371  8FC0
1372  8FC0 3A 28 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1373  8FC3 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1374  8FC5 28 F0        	jr z,1B
1375  8FC7
1376  8FC7              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1377  8FC7              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1378  8FC7
1379  8FC7 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1380  8FC8 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1381  8FCB
1382  8FCB              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1383  8FCB
1384  8FCB CD FE 9E     	call Situa_en_contador_general_de_mov_masticados
1385  8FCE
1386  8FCE              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1387  8FCE              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1388  8FCE
1389  8FCE ED 4B BC 8B  	ld bc,(Contador_de_mov_masticados)
1390  8FD2
1391  8FD2 71           	ld (hl),c
1392  8FD3 23           	inc hl
1393  8FD4 70           	ld (hl),b
1394  8FD5
1395  8FD5 C9           	ret
1396  8FD6
1397  8FD6              ; -----------------------------------------------------------------------------------
1398  8FD6              ;
1399  8FD6              ;	28/12/23
1400  8FD6              ;
1401  8FD6              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1402  8FD6              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1403  8FD6
1404  8FD6              Guarda_movimiento_masticado
1405  8FD6
1406  8FD6 ED 73 00 8C  	ld (Stack),sp
1407  8FDA ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1408  8FDE
1409  8FDE DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1410  8FE0 FD E5            push iy 												; Pushea Puntero_objeto.
1411  8FE2
1412  8FE2 ED 7B 00 8C      ld sp,(Stack)
1413  8FE6
1414  8FE6 2A BC 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1415  8FE9 23           	inc hl
1416  8FEA 22 BC 8B     	ld (Contador_de_mov_masticados),hl
1417  8FED
1418  8FED CD F1 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1419  8FF0              ;															; _ el (Contador_de_mov_masticados).
1420  8FF0 C9               ret
1421  8FF1
1422  8FF1              ; --------------------------------------------------------------------------------------------------------------
1423  8FF1              ;
1424  8FF1              ;	12/1/24
1425  8FF1              ;
1426  8FF1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1427  8FF1
1428  8FF1              Actualiza_Puntero_de_almacen_de_mov_masticados
1429  8FF1
1430  8FF1 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1431  8FF4 01 04 00     	ld bc,4
1432  8FF7 A7           	and a
1433  8FF8 ED 4A        	adc hl,bc
1434  8FFA 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1435  8FFD C9           	ret
1436  8FFE
1437  8FFE              ; --------------------------------------------------------------------------------------------------------------
1438  8FFE              ;
1439  8FFE              ;	24/03/24
1440  8FFE              ;
1441  8FFE              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1442  8FFE              ;
1443  8FFE              ;	IX contiene el puntero de impresión.
1444  8FFE              ;	DE contiene (Puntero_objeto).
1445  8FFE
1446  8FFE
1447  8FFE              Cargamos_registros_con_mov_masticado
1448  8FFE
1449  8FFE ED 73 00 8C  	ld (Stack),sp
1450  9002 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1451  9006
1452  9006 D1           	pop de 															; DE contiene Puntero_objeto
1453  9007 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1454  9009
1455  9009 ED 73 BA 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1456  900D ED 7B 00 8C  	ld sp,(Stack)
1457  9011
1458  9011 7B           	ld a,e
1459  9012 82           	add d															; Comprueba si ya no hay datos en el almacén.
1460  9013
1461  9013 CC AC 93     	call z,Reinicia_entidad_maliciosa
1462  9016
1463  9016 C9           	ret
1464  9017
1465  9017              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1466  9017              ;
1467  9017              ;	22/7/24
1468  9017
1469  9017              Cargamos_registros_con_explosion
1470  9017
1471  9017
1472  9017 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1473  901A CD B6 90     	call Extrae_address
1474  901D
1475  901D 5D           	ld e,l
1476  901E 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1477  901F
1478  901F DD 2A B8 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1479  9023
1480  9023 C9           	ret
1481  9024
1482  9024
1483  9024              Cargamos_registros_con_explosion_Amadeus
1484  9024
1485  9024 2A 74 89     	ld hl,(Pamm_Amadeus)
1486  9027 CD B6 90     	call Extrae_address
1487  902A
1488  902A 5D           	ld e,l
1489  902B 54           	ld d,h
1490  902C
1491  902C DD 2A 72 89  	ld ix,(p.imp.amadeus)
1492  9030
1493  9030 C9           	ret
1494  9031
1495  9031              ; --------------------------------------------------------------------------------------------------------------
1496  9031              ;
1497  9031              ;	17/06/24
1498  9031              ;
1499  9031              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1500  9031              ;
1501  9031              ;	IX contiene el puntero de impresión.
1502  9031              ;	DE contiene (Puntero_objeto).
1503  9031
1504  9031
1505  9031              Cargamos_registros_con_mov_masticado_Amadeus
1506  9031
1507  9031 ED 73 00 8C  	ld (Stack),sp
1508  9035 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1509  9039 D1           	pop de 															; DE contiene Puntero_objeto
1510  903A DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1511  903C DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1512  9040 ED 7B 00 8C  	ld sp,(Stack)
1513  9044 C9           	ret
1514  9045
1515  9045              ; ---------------------------------------------------------------------------------------------------------------------
1516  9045              ;
1517  9045              ;	18/6/24
1518  9045              ;
1519  9045              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1520  9045
1521  9045              Genera_datos_de_impresion_Amadeus
1522  9045
1523  9045 3A 71 89     	ld a,(Impacto_Amadeus)
1524  9048 A7           	and a
1525  9049 20 03        	jr nz,1F
1526  904B
1527  904B              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1528  904B              ; _apuntando a la correspondiente explosión.
1529  904B
1530  904B CD 31 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1531  904E
1532  904E DD 7D        1 ld a,ixl
1533  9050 E6 1F        	and $1f
1534  9052 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1535  9055
1536  9055 2A 22 8C     	ld hl,(Scanlines_album_SP)
1537  9058 E5           	push hl
1538  9059
1539  9059 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1540  905C 22 22 8C     	ld (Scanlines_album_SP),hl
1541  905F
1542  905F CD 01 95     	call Genera_datos_de_impresion
1543  9062
1544  9062 E1           	pop hl
1545  9063 22 22 8C     	ld (Scanlines_album_SP),hl
1546  9066
1547  9066 C9           	ret
1548  9067
1549  9067              ; ---------------------------------------------------------------------------------------------------------------------
1550  9067              ;
1551  9067              ;	13/03/24
1552  9067              ;
1553  9067              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1554  9067
1555  9067              Inicia_albumes_de_lineas
1556  9067
1557  9067 21 00 80     	ld hl,Scanlines_album
1558  906A 22 04 8C     	ld (Album_de_pintado),hl
1559  906D 22 22 8C     	ld (Scanlines_album_SP),hl
1560  9070
1561  9070 21 1A 81     	ld hl,Scanlines_album_2
1562  9073 22 06 8C     	ld (Album_de_borrado),hl
1563  9076
1564  9076 C9           	ret
1565  9077
1566  9077              Inicia_albumes_de_lineas_Amadeus
1567  9077
1568  9077 21 34 82     	ld hl,Amadeus_scanlines_album
1569  907A 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1570  907D 21 58 82     	ld hl,Amadeus_scanlines_album_2
1571  9080 22 0A 8C     	ld (Album_de_borrado_Amadeus),hl
1572  9083
1573  9083 C9           	ret
1574  9084
1575  9084              Inicia_albumes_de_disparos
1576  9084
1577  9084 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1578  9087 22 0C 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1579  908A 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1580  908D 22 0E 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1581  9090
1582  9090 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1583  9093 22 10 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1584  9096 22 14 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1585  9099
1586  9099 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1587  909C 22 12 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1588  909F
1589  909F C9           	ret
1590  90A0
1591  90A0              ; ---------------------------------------------------------------------------------------------------------------------
1592  90A0              ;
1593  90A0              ; 8/1/23
1594  90A0              ;
1595  90A0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1596  90A0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1597  90A0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1598  90A0
1599  90A0              ; Destruye HL y DE !!!!!
1600  90A0
1601  90A0              Inicia_punteros_de_cajas
1602  90A0
1603  90A0 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1604  90A3 CD B6 90         call Extrae_address
1605  90A6 22 F3 8B         ld (Puntero_store_caja),hl
1606  90A9 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1607  90AC 22 F7 8B     	ld (Indice_restore_caja),hl
1608  90AF CD B6 90     	call Extrae_address
1609  90B2 22 F5 8B     	ld (Puntero_restore_caja),hl
1610  90B5 C9               ret
1611  90B6
1612  90B6              ; *************************************************************************************************************************************************************
1613  90B6
1614  90B6              ;
1615  90B6              ; 20/10/22
1616  90B6              ;
1617  90B6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1618  90B6              ;
1619  90B6              ; Destruye el puntero y DE !!!!!
1620  90B6
1621  90B6 5E           Extrae_address ld e,(hl)
1622  90B7 23           	inc hl
1623  90B8 56           	ld d,(hl)
1624  90B9 2B           	dec hl
1625  90BA EB           	ex de,hl
1626  90BB C9           	ret
1627  90BC
1628  90BC              ; *************************************************************************************************************************************************************
1629  90BC              ;
1630  90BC              ;	20/1/24
1631  90BC              ;
1632  90BC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1633  90BC              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1634  90BC              ;
1635  90BC              ;   Destruye HL y BC !!!!!,
1636  90BC              ;
1637  90BC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1638  90BC              ;					"0" ..... Izquierda.
1639  90BC
1640  90BC              Inicia_Puntero_objeto
1641  90BC
1642  90BC 3A D2 8B     	ld a,(Cuad_objeto)
1643  90BF E6 01        	and 1
1644  90C1 F5           	push af
1645  90C2 CC DE 90     	call z,Inicia_puntero_objeto_izq
1646  90C5 F1           	pop af
1647  90C6 C8           	ret z
1648  90C7 CD CB 90     	call Inicia_puntero_objeto_der
1649  90CA C9           	ret
1650  90CB
1651  90CB              ; Arrancamos desde la parte izquierda de la pantalla.
1652  90CB              ; Iniciamos (Indice_Sprite_der).
1653  90CB
1654  90CB 2A C8 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1655  90CE 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
1656  90D1 CD B6 90     	call Extrae_address
1657  90D4 22 C5 8B     	ld (Puntero_objeto),hl
1658  90D7
1659  90D7 2A CA 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1660  90DA 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1661  90DD C9           	ret
1662  90DE
1663  90DE              ; Arrancamos desde la parte derecha de la pantalla.
1664  90DE              ; Iniciamos (Indice_Sprite_izq).
1665  90DE
1666  90DE 2A CA 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1667  90E1 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1668  90E4 CD B6 90     	call Extrae_address
1669  90E7 22 C5 8B     	ld (Puntero_objeto),hl
1670  90EA
1671  90EA 2A C8 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1672  90ED 22 CC 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1673  90F0 C9           	ret
1674  90F1
1675  90F1              ; **************************************************************************************************
1676  90F1              ;
1677  90F1              ;	06/07/24
1678  90F1              ;
1679  90F1              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1680  90F1
1681  90F1              Restore_entidad
1682  90F1
1683  90F1 2A F3 8B     	ld hl,(Puntero_store_caja)
1684  90F4 7E           	ld a,(hl)
1685  90F5 A7           	and a
1686  90F6 CC 04 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1687  90F9 28 F6        	jr z,Restore_entidad
1688  90FB
1689  90FB 11 B3 8B     	ld de,Bandeja_DRAW
1690  90FE 01 0C 00     	ld bc,12
1691  9101 ED B0        	ldir
1692  9103 C9           	ret
1693  9104
1694  9104              ; **************************************************************************************************
1695  9104              ;
1696  9104              ;	08/05/23
1697  9104              ;
1698  9104              ;	Incrementamos los dos punteros de entidades. (+1).
1699  9104
1700  9104              Incrementa_punteros_de_cajas
1701  9104
1702  9104 2A F5 8B     	ld hl,(Puntero_restore_caja)
1703  9107 22 F3 8B     	ld (Puntero_store_caja),hl
1704  910A 2A F7 8B     	ld hl,(Indice_restore_caja)
1705  910D 23           	inc hl
1706  910E 23           	inc hl
1707  910F 22 F7 8B     	ld (Indice_restore_caja),hl
1708  9112 CD B6 90         call Extrae_address
1709  9115 22 F5 8B         ld (Puntero_restore_caja),hl
1710  9118 C9               ret
1711  9119
1712  9119              ; -----------------------------------------------------------
1713  9119
1714  9119              ; Teclado.
1715  9119
1716  9119 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1717  911B DB FE        	in a,($fe)
1718  911D E6 01        	and $01
1719  911F 28 02        	jr z,1f
1720  9121 18 F6        	jr Pulsa_ENTER
1721  9123 C9           1 ret
1722  9124
1723  9124              ; **************************************************************************************************
1724  9124              ;
1725  9124              ; Temporización.
1726  9124
1727  9124              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1728  9124              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1729  9124              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1730  9124              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1731  9124
1732  9124              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1733  9124              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1734  9124              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1735  9124
1736  9124              ; A partir de $4f61 no hace falta DELAY.
1737  9124
1738  9124              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1739  9124
1740  9124              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1741  9124              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1742  9124              ;	LD A,B
1743  9124              ;	AND A
1744  9124              ;	JR NZ,wait
1745  9124              ;	RET
1746  9124
1747  9124              ; ---------------------------------------------------------------------------------------------------------------
1748  9124              ;
1749  9124              ;	13/07/24
1750  9124              ;
1751  9124
1752  9124              Inicia_Shield
1753  9124
1754  9124 21 4C 8C     	ld hl,Datos_Shield
1755  9127 22 50 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1756  912A
1757  912A 7E           	ld a,(hl)
1758  912B 32 53 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1759  912E
1760  912E 3E 01        	ld a,1
1761  9130 32 54 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1762  9133
1763  9133 C9           	ret
1764  9134
1765  9134              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1766  9134              ;
1767  9134              ;	4/6/24
1768  9134              ;
1769  9134              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1770  9134              ;
1771  9134              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1772  9134              ;
1773  9134
1774  9134              Actualiza_pantalla
1775  9134
1776  9134 3E 02        	ld a,2
1777  9136 D3 FE        	out ($fe),a
1778  9138
1779  9138 3A 28 8C     	ld a,(Ctrl_3)
1780  913B CB 57        	bit 2,a
1781  913D 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1782  913F
1783  913F              Borrando_entidades
1784  913F
1785  913F 2A 22 8C     	ld hl,(Scanlines_album_SP)
1786  9142 CD B6 90     	call Extrae_address
1787  9145 24           	inc h
1788  9146 25           	dec h
1789  9147 28 05        	jr z,Pintando_entidades
1790  9149 CD FA 95     	call Pinta_Sprites
1791  914C 18 F1        	jr Borrando_entidades
1792  914E
1793  914E              Pintando_entidades
1794  914E
1795  914E 2A 24 8C     	ld hl,(India_SP)
1796  9151 2C           	inc l
1797  9152 CD B6 90     	call Extrae_address
1798  9155 24           	inc h
1799  9156 25           	dec h
1800  9157 28 0E        	jr z,Ejecuta_escudo
1801  9159 1C           	inc e
1802  915A 1C           	inc e
1803  915B ED 53 24 8C  	ld (India_SP),de
1804  915F CD B6 90     	call Extrae_address
1805  9162 CD FA 95     	call Pinta_Sprites
1806  9165 18 E7        	jr Pintando_entidades
1807  9167
1808  9167              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1809  9167
1810  9167              Ejecuta_escudo
1811  9167
1812  9167 3A 52 8C     	ld a,(Shield)
1813  916A A7           	and a
1814  916B 20 2F        	jr nz,Aplica_Shield
1815  916D
1816  916D              Borrando_Amadeus
1817  916D
1818  916D 21 28 8C     	ld hl,Ctrl_3
1819  9170 CB 6E        	bit 5,(hl)
1820  9172 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1821  9174
1822  9174 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1823  9177 CD B6 90     	call Extrae_address
1824  917A 24           	inc h
1825  917B 25           	dec h
1826  917C 28 03        	jr z,Pintando_Amadeus
1827  917E CD FA 95     	call Pinta_Sprites
1828  9181
1829  9181              Pintando_Amadeus
1830  9181
1831  9181 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1832  9184 CD B6 90     	call Extrae_address
1833  9187 24           	inc h
1834  9188 25           	dec h
1835  9189 28 03        	jr z,1F
1836  918B CD FA 95     	call Pinta_Sprites
1837  918E
1838  918E              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1839  918E
1840  918E 21 28 8C     1 ld hl,Ctrl_3
1841  9191 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1842  9193 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1843  9195 CB AE        	res 5,(hl)
1844  9197
1845  9197 3E 01        	ld a,1												; Borde azul.
1846  9199 D3 FE        	out ($fe),a
1847  919B
1848  919B C9           	ret
1849  919C
1850  919C              Aplica_Shield
1851  919C
1852  919C              ;	Bit 1 "1" (Shield_3) Sólo borra.
1853  919C              ;		  "0"     ""     Borra/Pinta.
1854  919C              ;	Bit 2    ""  RET.	 No borra, no pinta.
1855  919C
1856  919C 21 54 8C     	ld hl,Shield_3
1857  919F
1858  919F CB 5E        	bit 3,(hl)
1859  91A1 20 DE        	jr nz,Pintando_Amadeus
1860  91A3
1861  91A3 CB 56        	bit 2,(hl)
1862  91A5 20 E7        	jr nz,1B
1863  91A7
1864  91A7 CB 4E        	bit 1,(hl)
1865  91A9 C4 B0 91     	call nz,Borra_Amadeus_shield
1866  91AC
1867  91AC 28 BF        	jr z,Borrando_Amadeus
1868  91AE 18 DE        	jr 1B
1869  91B0
1870  91B0              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1871  91B0
1872  91B0              Borra_Amadeus_shield
1873  91B0
1874  91B0 3A 28 8C     	ld a,(Ctrl_3)
1875  91B3 CB 6F        	bit 5,a
1876  91B5 28 08        	jr z,1F
1877  91B7
1878  91B7 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1879  91BA CD B6 90     	call Extrae_address
1880  91BD 18 06        	jr 2F
1881  91BF
1882  91BF 2A 08 8C     1 ld hl,(Album_de_pintado_Amadeus)
1883  91C2 CD B6 90     	call Extrae_address
1884  91C5
1885  91C5 CD FA 95     2 call Pinta_Sprites
1886  91C8
1887  91C8 AF           	xor a
1888  91C9 3C           	inc a											; Asegura NZ en la salida de la rutina.
1889  91CA
1890  91CA C9           	ret
1891  91CB
1892  91CB              Pinta_Amadeus_shield
1893  91CB
1894  91CB 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1895  91CE CD B6 90     	call Extrae_address
1896  91D1 CD FA 95     	call Pinta_Sprites
1897  91D4
1898  91D4 AF           	xor a
1899  91D5 3C           	inc a											; Asegura NZ en la salida de la rutina.
1900  91D6
1901  91D6 C9           	ret
1902  91D7
1903  91D7              Borra_Pinta_Amadeus_shield
1904  91D7
1905  91D7 CD B0 91     	call Borra_Amadeus_shield
1906  91DA CD CB 91     	call Pinta_Amadeus_shield
1907  91DD C9           	ret
1908  91DE
1909  91DE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1910  91DE              ;
1911  91DE              ;	19/6/24
1912  91DE              ;
1913  91DE
1914  91DE              Teclado
1915  91DE
1916  91DE              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1917  91DE
1918  91DE 3E F7        	ld a,$f7												; "5" para disparar.
1919  91E0 DB FE        	in a,($fe)
1920  91E2 E6 10        	and $10
1921  91E4
1922  91E4 CC 18 A2     	call z,Genera_disparo_Amadeus
1923  91E7
1924  91E7 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1925  91E9 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1926  91EB E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1927  91ED CC 67 9D         call z,Amadeus_a_izquierda
1928  91F0
1929  91F0 3E F7        	ld a,$f7
1930  91F2 DB FE        	in a,($fe)
1931  91F4 E6 01        	and $01
1932  91F6 C8           	ret z
1933  91F7
1934  91F7 3E F7        	ld a,$f7
1935  91F9 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1936  91FB E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1937  91FD CC 7F 9D     	call z,Amadeus_a_derecha
1938  9200
1939  9200 C9           	ret
1940  9201
1941  9201              ; ------------------------------------------------------------------------------------------------------------------------
1942  9201              ;
1943  9201              ;	06/07/24
1944  9201              ;
1945  9201
1946  9201              Genera_explosion
1947  9201
1948  9201 21 3A 8C     	ld hl,Clock_explosion
1949  9204 35           	dec (hl)
1950  9205 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1951  9207
1952  9207              Borra_entidad_colisionada
1953  9207
1954  9207 CD 0E 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1955  920A CD 17 90     	call Cargamos_registros_con_explosion
1956  920D CD 01 95     	call Genera_datos_de_impresion
1957  9210
1958  9210 AF           	xor a
1959  9211 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1960  9212
1961  9212 C9           	ret
1962  9213
1963  9213              Siguiente_frame_explosion
1964  9213
1965  9213 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1966  9215
1967  9215              ; Avanza Frame de explosión.
1968  9215
1969  9215 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1970  9218 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1971  921B
1972  921B 79           	ld a,c
1973  921C 95           	sub l
1974  921D 20 0B        	jr nz,1F
1975  921F
1976  921F              ; Fín de la entidad !!!!!!!!!!!!!
1977  921F
1978  921F 21 FA 8B     	ld hl,Numero_parcial_de_entidades
1979  9222 35           	dec (hl)
1980  9223 23           	inc hl
1981  9224 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1982  9225
1983  9225 CD 81 93     	call Limpiamos_bandeja_DRAW
1984  9228 18 DD        	jr Borra_entidad_colisionada
1985  922A
1986  922A 23           1 inc hl
1987  922B 23           	inc hl
1988  922C 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1989  922F 18 D6        	jr Borra_entidad_colisionada
1990  9231
1991  9231              ; ----- ----- ----- ----- -----
1992  9231
1993  9231              Genera_explosion_Amadeus
1994  9231
1995  9231 21 3B 8C     	ld hl,Clock_explosion_Amadeus
1996  9234 35           	dec (hl)
1997  9235 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
1998  9237
1999  9237              Borra_Amadeus_impactado
2000  9237
2001  9237 CD 73 8E     	call Change_Amadeus
2002  923A CD 24 90     	call Cargamos_registros_con_explosion_Amadeus
2003  923D CD 45 90     	call Genera_datos_de_impresion_Amadeus
2004  9240
2005  9240 21 28 8C     	ld hl,Ctrl_3
2006  9243 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2007  9245
2008  9245 AF           	xor a
2009  9246 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2010  9247
2011  9247 C9           	ret
2012  9248
2013  9248              Siguiente_frame_explosion_Amadeus
2014  9248
2015  9248 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2016  924A
2017  924A              ; Avanza Frame de explosión.
2018  924A
2019  924A 2A 74 89     	ld hl,(Pamm_Amadeus)
2020  924D 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2021  9250
2022  9250 79           	ld a,c
2023  9251 95           	sub l
2024  9252 20 0B        	jr nz,1F
2025  9254
2026  9254              ; Fín de Amadeus !!!!!!!!!!!!!
2027  9254              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2028  9254
2029  9254 AF           	xor a
2030  9255 32 71 89     	ld (Impacto_Amadeus),a
2031  9258 21 28 8C     	ld hl,Ctrl_3
2032  925B CB F6        	set 6,(hl)
2033  925D
2034  925D 18 D8        	jr Borra_Amadeus_impactado
2035  925F
2036  925F 23           1 inc hl
2037  9260 23           	inc hl
2038  9261 22 74 89     	ld (Pamm_Amadeus),hl
2039  9264 18 D1        	jr Borra_Amadeus_impactado
2040  9266
2041  9266              ; ---------------------------------------------------------------
2042  9266
2043  9266              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9266              ; ******************************************************************************************************************************************************************************************
   2+ 9266              ;
   3+ 9266              ;   21/04/24
   4+ 9266              ;
   5+ 9266              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9266              ;   (XOR) bit a bit.
   7+ 9266              ;
   8+ 9266              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9266
  10+ 9266              Derivando_RND
  11+ 9266
  12+ 9266 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9269
  14+ 9269 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 926B C5               push bc
  16+ 926C              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 926C 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 926F              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 926F
  20+ 926F A7           6 and a                                 ; Carry a "0".
  21+ 9270 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9272 30 02            jr nc,1F
  23+ 9274
  24+ 9274 CB C1            set 0,c
  25+ 9276
  26+ 9276 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9277 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9279 5F               ld e,a
  29+ 927A
  30+ 927A 7A               ld a,d
  31+ 927B E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 927D 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 927F
  34+ 927F CB 3F            srl a
  35+ 9281
  36+ 9281 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9282
  38+ 9282 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9283 28 04            jr z,4F
  40+ 9285
  41+ 9285 CB FF            set 7,a
  42+ 9287 18 02            jr 5F
  43+ 9289
  44+ 9289 CB BF        4 res 7,a
  45+ 928B
  46+ 928B CB 21        5 sla c
  47+ 928D 10 E0            djnz 6B
  48+ 928F
  49+ 928F 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9290
  51+ 9290 77               ld (hl),a
  52+ 9291 23               inc hl
  53+ 9292 C1               pop bc
  54+ 9293 10 D4            djnz 3B
  55+ 9295
  56+ 9295 C9               ret
  57+ 9296
  58+ 9296
  59+ 9296
# file closed: RND_Derivando.asm
2044  9296              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9296              ;---------------------------------------------------------------------------------------------------------------
   2+ 9296              ;
   3+ 9296              ;   8/3/24
   4+ 9296              ;
   5+ 9296              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9296              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9296              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9296              ;	_ de la 1ª entidad del Nivel.
   9+ 9296              ;
  10+ 9296              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9296
  12+ 9296              ;	MODIFICA: HL,DE y A.
  13+ 9296              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9296
  15+ 9296              Inicializa_Nivel
  16+ 9296
  17+ 9296 2A 48 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9299 CD B6 90     	call Extrae_address
  19+ 929C 7E           	ld a,(hl)
  20+ 929D 32 F9 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92A0 23           	inc hl
  22+ 92A1 CD AE 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92A4 22 4A 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92A7 CD B7 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92AA
  26+ 92AA CD C8 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92AD C9           	ret
  28+ 92AE
  29+ 92AE              ; ----------------------
  30+ 92AE
  31+ 92AE 11 D8 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92B1 01 04 00     	ld bc,4
  33+ 92B4 ED B0        	ldir
  34+ 92B6 C9           	ret
  35+ 92B7
  36+ 92B7 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92B8 CD 52 94         call Calcula_salto_en_BC
  38+ 92BB 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92BE A7               and a
  40+ 92BF ED 4A            adc hl,bc
  41+ 92C1 CD B6 90         call Extrae_address
  42+ 92C4 22 E4 8B         ld (Puntero_indice_mov),hl
  43+ 92C7 C9               ret
  44+ 92C8
  45+ 92C8 3A B3 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92CB CD 52 94     	call Calcula_salto_en_BC
  47+ 92CE 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92D1 A7               and a
  49+ 92D2 ED 4A            adc hl,bc
  50+ 92D4 CD B6 90         call Extrae_address
  51+ 92D7 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92DA C9           	ret
  53+ 92DB
  54+ 92DB              ;---------------------------------------------------------------------------------------------------------------
  55+ 92DB              ;
  56+ 92DB              ;   5/1/24
  57+ 92DB              ;
  58+ 92DB              ;	Destruye A,BC,HL,DE
  59+ 92DB
  60+ 92DB              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92DB              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92DB
  63+ 92DB              Inicia_Entidades
  64+ 92DB
  65+ 92DB              ; Preparamos los punteros de las cajas de entidades:
  66+ 92DB
  67+ 92DB CD A0 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92DE              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92DE CD 9A 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92E1
  71+ 92E1 2A 4A 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92E4
  73+ 92E4 22 4A 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92E7
  75+ 92E7 CD 00 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92EA
  77+ 92EA 2A 4A 8C     	ld hl,(Datos_de_nivel)
  78+ 92ED
  79+ 92ED              ; En este punto:
  80+ 92ED              ;
  81+ 92ED              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92ED              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92ED
  84+ 92ED C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92EE
  86+ 92EE 7E           	ld a,(hl)
  87+ 92EF CD 6C 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92F2
  89+ 92F2 CD 64 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92F5
  91+ 92F5              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92F5
  93+ 92F5 CD 22 94     	call Busca_mov_masticados_segun_tipo
  94+ 92F8
  95+ 92F8 A7           	and a
  96+ 92F9 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92FB
  98+ 92FB              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92FB
 100+ 92FB              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92FB              ;	_ de este tipo de entidad.
 102+ 92FB
 103+ 92FB CD FE 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92FE CD 0B 9F     	call Transfiere_datos_de_contadores
 105+ 9301
 106+ 9301 18 06        	jr 4F
 107+ 9303
 108+ 9303 CD AA 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9306
 110+ 9306              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9306              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9306              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9306              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9306              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9306
 116+ 9306 CD E0 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9309              ;																; _ Mov_masticados ya generados.
 118+ 9309
 119+ 9309 CD FE 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 930C
 121+ 930C DD E5        	push ix
 122+ 930E E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 930F
 124+ 930F D5           	push de
 125+ 9310 CD D5 94     	call Genera_coordenadas
 126+ 9313
 127+ 9313 ED 5B 22 8C  	ld de,(Scanlines_album_SP)
 128+ 9317 CD 0E 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 931A D1           	pop de
 130+ 931B
 131+ 931B CD 01 95     	call Genera_datos_de_impresion
 132+ 931E              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 931E              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 931E              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 931E              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 931E
 137+ 931E CD A4 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9321
 139+ 9321              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9321
 141+ 9321 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 142+ 9325 CD 91 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9328
 144+ 9328 CD 81 93     	call Limpiamos_bandeja_DRAW
 145+ 932B CD 04 91     	call Incrementa_punteros_de_cajas
 146+ 932E
 147+ 932E              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 932E              ; _ entidad del Nivel.
 149+ 932E
 150+ 932E 3A 29 8C     	ld a,(Ctrl_4)
 151+ 9331 E6 F0        	and $f0
 152+ 9333 32 29 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9336
 154+ 9336              ; Siguiente entidad del Nivel.
 155+ 9336
 156+ 9336 2A 4A 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9339 23           	inc hl 														; _ entidad del Nivel.
 158+ 933A
 159+ 933A C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 933B
 161+ 933B 10 A7        	djnz 2B
 162+ 933D
 163+ 933D C9           	ret
 164+ 933E
 165+ 933E              ; -------------------------------------------------------------------------------------------------------------------
 166+ 933E              ;
 167+ 933E              ;	27/5/24
 168+ 933E              ;
 169+ 933E              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 933E              ;
 171+ 933E
 172+ 933E              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 933E              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 933E
 175+ 933E 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9341 CD 64 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9344
 178+ 9344
 179+ 9344              Construye_movimientos_masticados_Amadeus
 180+ 9344
 181+ 9344 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9347 CD F1 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 934A              ;															; _ el (Contador_de_mov_masticados).
 184+ 934A CD BC 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 934D              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 934D
 187+ 934D              ; Generamos movimientos masticados de Amadeus.
 188+ 934D
 189+ 934D 06 79        	ld b,121												; $0079, 121d.
 190+ 934F
 191+ 934F C5           1 push bc
 192+ 9350 CD 1D 97     	call Draw
 193+ 9353 CD D6 8F     	call Guarda_movimiento_masticado
 194+ 9356
 195+ 9356 CD 91 9A     	call Mov_right
 196+ 9359 CD 91 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 935C
 198+ 935C C1           	pop bc
 199+ 935D 10 F0        	djnz 1B
 200+ 935F
 201+ 935F              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 935F
 203+ 935F              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 935F              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 935F
 206+ 935F 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9362 01 08 00     	ld bc,8
 208+ 9365 A7           	and a
 209+ 9366 ED 42        	sbc hl,bc
 210+ 9368 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 936B
 212+ 936B C9           	ret
 213+ 936C
 214+ 936C              ; ---------------------------------------------------------------------
 215+ 936C              ;
 216+ 936C              ;	10/02/24
 217+ 936C              ;
 218+ 936C              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 936C              ;
 220+ 936C              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 936C
 222+ 936C              Definicion_segun_tipo
 223+ 936C
 224+ 936C CD 52 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 936F 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9372 CD 5A 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9375 C9           	ret
 228+ 9376
 229+ 9376              ; ---------------------------------------------------------------------
 230+ 9376              ;
 231+ 9376              ;	6/7/24
 232+ 9376
 233+ 9376
 234+ 9376              Store_Restore_cajas
 235+ 9376
 236+ 9376 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 237+ 937A CD 91 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 937D CD 04 91     	call Incrementa_punteros_de_cajas
 239+ 9380 C9           	ret
 240+ 9381
 241+ 9381              ; ---------------------------------------------------------------------
 242+ 9381              ;
 243+ 9381              ;	23/6/24
 244+ 9381              ;
 245+ 9381              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9381              ;
 247+ 9381              ;	MODIFY: HL
 248+ 9381
 249+ 9381              Limpiamos_bandeja_DRAW
 250+ 9381
 251+ 9381 ED 73 00 8C  	ld (Stack),sp
 252+ 9385 31 D8 8B     	ld sp,Vel_left
 253+ 9388
 254+ 9388 AF           	xor a
 255+ 9389 67           	ld h,a
 256+ 938A 6F           	ld l,a
 257+ 938B
 258+ 938B E5           	push hl
 259+ 938C E5           	push hl
 260+ 938D E5           	push hl
 261+ 938E E5           	push hl
 262+ 938F E5           	push hl
 263+ 9390 E5           	push hl
 264+ 9391 E5           	push hl
 265+ 9392 E5           	push hl
 266+ 9393 E5           	push hl
 267+ 9394 E5           	push hl
 268+ 9395 E5           	push hl
 269+ 9396 E5           	push hl
 270+ 9397 E5           	push hl
 271+ 9398 E5           	push hl
 272+ 9399 E5           	push hl
 273+ 939A E5           	push hl
 274+ 939B E5           	push hl
 275+ 939C E5           	push hl
 276+ 939D
 277+ 939D 33           	inc sp
 278+ 939E
 279+ 939E E5           	push hl
 280+ 939F ED 7B 00 8C  	ld sp,(Stack)
 281+ 93A3
 282+ 93A3 C9           	ret
 283+ 93A4
 284+ 93A4              ; ---------------------------------------------------------------------
 285+ 93A4              ;
 286+ 93A4              ;	24/03/24
 287+ 93A4
 288+ 93A4 2A BC 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93A7 2B           	dec hl
 290+ 93A8 22 BC 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93AB C9           	ret
 292+ 93AC
 293+ 93AC              ; ---------------------------------------------------------------------
 294+ 93AC              ;
 295+ 93AC              ;	8/5/24
 296+ 93AC
 297+ 93AC              Reinicia_entidad_maliciosa
 298+ 93AC
 299+ 93AC              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93AC
 301+ 93AC CD FE 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93AF CD 0B 9F     	call Transfiere_datos_de_contadores
 303+ 93B2
 304+ 93B2              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93B2
 306+ 93B2 3A B3 8B     	ld a,(Tipo)
 307+ 93B5 CD 6C 93     	call Definicion_segun_tipo
 308+ 93B8
 309+ 93B8 E5           	push hl
 310+ 93B9 DD E1        	pop ix
 311+ 93BB
 312+ 93BB DD 6E 0B     	ld l,(ix+11)
 313+ 93BE DD 66 0C     	ld h,(ix+12)
 314+ 93C1
 315+ 93C1 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93C4
 317+ 93C4 CD FE 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93C7
 319+ 93C7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93C7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93C7              ; Ejemplos.
 322+ 93C7
 323+ 93C7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93C7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93C7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93C7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93C7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93C7
 329+ 93C7 21 B6 8B     	ld hl,Contador_de_vueltas
 330+ 93CA CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93CC
 332+ 93CC 7E           	ld a,(hl)
 333+ 93CD CB 2F        	sra a
 334+ 93CF CB 2F        	sra a
 335+ 93D1
 336+ 93D1 32 BE 8B     	ld (Velocidad),a
 337+ 93D4
 338+ 93D4 3E 40        	ld a,$40
 339+ 93D6 BE           	cp (hl)
 340+ 93D7 C0           	ret nz
 341+ 93D8
 342+ 93D8              ; Límitador.
 343+ 93D8
 344+ 93D8              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93D8
 346+ 93D8 CB 2E        	sra (hl)
 347+ 93DA 21 BE 8B     	ld hl,Velocidad
 348+ 93DD CB 2E        	sra (hl)
 349+ 93DF
 350+ 93DF C9           	ret
 351+ 93E0
 352+ 93E0              ; ---------------------------------------------------------------------
 353+ 93E0              ;
 354+ 93E0              ;	22/01/24
 355+ 93E0
 356+ 93E0 21 29 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93E3 CB 46        	bit 0,(hl)
 358+ 93E5 20 0D        	jr nz,1F
 359+ 93E7 CB 4E        	bit 1,(hl)
 360+ 93E9 20 0C        	jr nz,2F
 361+ 93EB CB 56        	bit 2,(hl)
 362+ 93ED 20 0B        	jr nz,3F
 363+ 93EF CB 5E        	bit 3,(hl)
 364+ 93F1 20 0A        	jr nz,4F
 365+ 93F3 C9           	ret
 366+ 93F4
 367+ 93F4 CB E6        1 set 4,(hl)
 368+ 93F6 C9           	ret
 369+ 93F7 CB EE        2 set 5,(hl)
 370+ 93F9 C9           	ret
 371+ 93FA CB F6        3 set 6,(hl)
 372+ 93FC C9           	ret
 373+ 93FD CB FE        4 set 7,(hl)
 374+ 93FF C9           	ret
 375+ 9400
 376+ 9400              ; ---------------------------------------------------------------------
 377+ 9400              ;
 378+ 9400              ;	23/01/24
 379+ 9400              ;
 380+ 9400              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9400              ;
 382+ 9400              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9400              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9400              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9400              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9400
 387+ 9400              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9400
 389+ 9400 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9401 3D           	dec a
 391+ 9402 20 06        	jr nz,1F
 392+ 9404
 393+ 9404              ; --- Tipo_1
 394+ 9404
 395+ 9404 21 29 8C     	ld hl,Ctrl_4
 396+ 9407 CB C6        	set 0,(hl)
 397+ 9409 C9           	ret
 398+ 940A
 399+ 940A 3D           1 dec a
 400+ 940B 20 06        	jr nz,2F
 401+ 940D
 402+ 940D              ; --- Tipo_2
 403+ 940D
 404+ 940D 21 29 8C     	ld hl,Ctrl_4
 405+ 9410 CB CE        	set 1,(hl)
 406+ 9412 C9           	ret
 407+ 9413
 408+ 9413 3D           2 dec a
 409+ 9414 20 06        	jr nz,3F
 410+ 9416
 411+ 9416              ; --- Tipo_3
 412+ 9416
 413+ 9416 21 29 8C     	ld hl,Ctrl_4
 414+ 9419 CB D6        	set 2,(hl)
 415+ 941B C9           	ret
 416+ 941C
 417+ 941C              ; --- Tipo_3
 418+ 941C
 419+ 941C 21 29 8C     3 ld hl,Ctrl_4
 420+ 941F CB D6        	set 2,(hl)
 421+ 9421 C9           	ret
 422+ 9422
 423+ 9422              ; ---------------------------------------------------------------------
 424+ 9422              ;
 425+ 9422              ;	22/01/24
 426+ 9422
 427+ 9422 21 29 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9425 CB 46        	bit 0,(hl)
 429+ 9427 20 0E        	jr nz,1F
 430+ 9429
 431+ 9429 CB 4E        	bit 1,(hl)
 432+ 942B 20 10        	jr nz,2F
 433+ 942D
 434+ 942D CB 56        	bit 2,(hl)
 435+ 942F 20 12        	jr nz,3F
 436+ 9431
 437+ 9431 CB 5E        	bit 3,(hl)
 438+ 9433 20 14        	jr nz,4F
 439+ 9435 18 19        	jr 6F
 440+ 9437
 441+ 9437              ; Entidad_de_Tipo_1.
 442+ 9437
 443+ 9437 CB 66        1 bit 4,(hl)
 444+ 9439 28 15        	jr z,6F
 445+ 943B 18 10        	jr 5F
 446+ 943D
 447+ 943D              ; Entidad_de_Tipo_2.
 448+ 943D
 449+ 943D CB 6E        2 bit 5,(hl)
 450+ 943F 28 0F        	jr z,6F
 451+ 9441 18 0A        	jr 5F
 452+ 9443
 453+ 9443              ; Entidad_de_Tipo_3.
 454+ 9443
 455+ 9443 CB 76        3 bit 6,(hl)
 456+ 9445 28 09        	jr z,6F
 457+ 9447 18 04        	jr 5F
 458+ 9449
 459+ 9449              ; Entidad_de_Tipo_4.
 460+ 9449
 461+ 9449 CB 7E        4 bit 7,(hl)
 462+ 944B 28 03        	jr z,6F
 463+ 944D
 464+ 944D              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 944D
 466+ 944D AF           5 xor a
 467+ 944E 3C           	inc a
 468+ 944F C9           	ret
 469+ 9450
 470+ 9450              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9450
 472+ 9450 AF           6 xor a
 473+ 9451 C9           	ret
 474+ 9452
 475+ 9452              ;	------------------------------------------------------------------------------------
 476+ 9452              ;
 477+ 9452              ;	12/01/24
 478+ 9452              ;
 479+ 9452              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9452              ;
 481+ 9452              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9452              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9452
 484+ 9452 CB 27        Calcula_salto_en_BC sla a
 485+ 9454 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9456 4F           	ld c,a
 487+ 9457 06 00        	ld b,0
 488+ 9459 C9           	ret
 489+ 945A
 490+ 945A              ; ------------------------------------------------------------------
 491+ 945A              ;
 492+ 945A              ;	19/1/24
 493+ 945A              ;
 494+ 945A              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 945A              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 945A
 497+ 945A A7           Situa_en_datos_de_definicion and a
 498+ 945B ED 4A        	adc hl,bc
 499+ 945D CD B6 90     	call Extrae_address
 500+ 9460 22 FE 8B         ld (Datos_de_entidad),hl
 501+ 9463 C9           	ret
 502+ 9464
 503+ 9464              ; ------------------------------------------------------------------
 504+ 9464
 505+ 9464              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9464              ; 	inc de
 507+ 9464              ; 	inc de
 508+ 9464              ; 	ex de,hl
 509+ 9464              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9464              ; 	ret
 511+ 9464
 512+ 9464              ; ----------------------------------------------------------------------------------------------------------
 513+ 9464              ;
 514+ 9464              ;	24/6/24
 515+ 9464              ;
 516+ 9464              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9464              ;	_ de entidad.
 518+ 9464              ;
 519+ 9464              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9464              ;
 521+ 9464              ;
 522+ 9464              ;	MODIFICA: HL,DE y BC
 523+ 9464
 524+ 9464
 525+ 9464              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9464
 527+ 9464 11 B3 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9467 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9468 12           	ld (de),a
 530+ 9469 23           	inc hl
 531+ 946A              ;
 532+ 946A 11 C1 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 946D 01 02 00     	ld bc,2
 534+ 9470 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9472              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9472 11 B6 8B     	ld de,Contador_de_vueltas
 537+ 9475 7E           	ld a,(hl)
 538+ 9476 12           	ld (de),a
 539+ 9477 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9478
 541+ 9478 11 C8 8B     	ld de,Indice_Sprite_der
 542+ 947B 01 04 00     	ld bc,4
 543+ 947E ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9480
 545+ 9480 11 D0 8B     	ld de,Posicion_inicio
 546+ 9483 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9486 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9488
 549+ 9488 11 BA 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 948B 01 02 00     	ld bc,2
 551+ 948E ED B0        	ldir
 552+ 9490
 553+ 9490 C9           	ret
 554+ 9491
 555+ 9491              ; ----------------------------------------------------------------------------------------------------------
 556+ 9491              ;
 557+ 9491              ;	1/8/24
 558+ 9491              ;
 559+ 9491
 560+ 9491              Parametros_de_bandeja_DRAW_a_caja
 561+ 9491
 562+ 9491 21 B3 8B     	ld hl,Bandeja_DRAW
 563+ 9494 01 0C 00     	ld bc,12
 564+ 9497 ED B0        	ldir
 565+ 9499 C9           	ret
 566+ 949A
 567+ 949A              ;---------------------------------------------------------------------------------------------------------------
 568+ 949A              ;
 569+ 949A              ;	5/1/24
 570+ 949A              ;
 571+ 949A              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 949A              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 949A              ;
 574+ 949A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 949A              ;
 576+ 949A              ;	(Numero_parcial_de_entidades)="7".
 577+ 949A              ;
 578+ 949A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 949A              ;
 580+ 949A              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 949A              ;
 582+ 949A              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 949A              ;	MODIFICA: A y B.
 584+ 949A              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 949A
 586+ 949A              Inicializa_Numero_parcial_de_entidades
 587+ 949A
 588+ 949A              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 949A
 590+ 949A 3A F9 8B     	ld a,(Numero_de_entidades)
 591+ 949D A7           	and a
 592+ 949E
 593+ 949E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 949E              ;	jr z,$
 595+ 949E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 949E
 597+ 949E 20 03        	jr nz,3F
 598+ 94A0
 599+ 94A0              ; ---------- ---------- ----------
 600+ 94A0
 601+ 94A0              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94A0              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94A0
 604+ 94A0 CD 96 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94A3
 606+ 94A3              ; ---------- ---------- ----------
 607+ 94A3
 608+ 94A3 3A F9 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94A6 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94A8 38 08        	jr c,1F
 611+ 94AA
 612+ 94AA              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94AA              ; Actualizamos variables.
 614+ 94AA
 615+ 94AA 3E 07        	ld a,7
 616+ 94AC 32 FA 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94AF 47           	ld b,a
 618+ 94B0 18 04        	jr 2F
 619+ 94B2
 620+ 94B2              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94B2              ; (Numero_de_entidades)="0".
 622+ 94B2
 623+ 94B2 32 FA 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94B5 47           	ld b,a
 625+ 94B6 C9           2 ret
 626+ 94B7
# file closed: Rutinas_de_inicio_y_niveles.asm
2045  94B7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94B7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94B7              ;
   3+ 94B7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94B7              ;
   5+ 94B7              ; *****************************************************************************************************************************************************************************************
   6+ 94B7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94B7
   8+ 94B7 7C           calcula_tercio ld a,h
   9+ 94B8 E6 18        	and $18
  10+ 94BA CB 2F        	sra a
  11+ 94BC CB 2F        	sra a
  12+ 94BE CB 2F        	sra a
  13+ 94C0 C9           	ret
  14+ 94C1
# file closed: calcula_tercio.asm
2046  94C1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94C1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94C1              ;
   3+ 94C1              ;
   4+ 94C1              ;	CLS.
   5+ 94C1              ;
   6+ 94C1              ;	Limpia la pantalla y define sus atributos.
   7+ 94C1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94C1              ;
   9+ 94C1              ;	COLORES: 0 ..... NEGRO
  10+ 94C1              ;    		 1 ..... AZUL
  11+ 94C1              ; 			 2 ..... ROJO
  12+ 94C1              ;			 3 ..... MAGENTA
  13+ 94C1              ; 			 4 ..... VERDE
  14+ 94C1              ; 			 5 ..... CIAN
  15+ 94C1              ;			 6 ..... AMARILLO
  16+ 94C1              ; 			 7 ..... BLANCO
  17+ 94C1              ;
  18+ 94C1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94C1              ;
  20+ 94C1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94C1
  22+ 94C1
  23+ 94C1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94C4 11 01 40     	LD DE,$4001
  25+ 94C7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94CA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94CC ED B0        	LDIR
  28+ 94CE 01 FF 02     	LD BC,767
  29+ 94D1 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94D2 ED B0        	LDIR
  31+ 94D4 C9           	ret
  32+ 94D5
# file closed: Cls.asm
2047  94D5              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94D5              ; ------------------------------------------------------------------------
   2+ 94D5              ;
   3+ 94D5              ;	30/1/24
   4+ 94D5              ;
   5+ 94D5              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94D5              ;	Fila superior "0", Columna izquierda "0".
   7+ 94D5              ;
   8+ 94D5              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94D5              ;
  10+ 94D5              ;	Modifica: A,BC y DE.
  11+ 94D5
  12+ 94D5 7D           Genera_coordenadas ld a,l
  13+ 94D6 E6 1F        	and $1f
  14+ 94D8 32 B4 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94DB
  16+ 94DB 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94DC FE 40        	cp $40
  18+ 94DE 38 1C        	jr c,4F
  19+ 94E0
  20+ 94E0 CD B7 94     	call calcula_tercio
  21+ 94E3 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94E4
  23+ 94E4 1E 00        	ld e,0
  24+ 94E6 7D           	ld a,l
  25+ 94E7 E6 E0        	and $e0
  26+ 94E9 28 01        	jr z,1F
  27+ 94EB 04           	inc b
  28+ 94EC
  29+ 94EC 04           1 inc b
  30+ 94ED 05           	dec b
  31+ 94EE 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94F0              ;														; _ , salimos.
  33+ 94F0 1C           3 inc e
  34+ 94F1 D6 20        	sub 32
  35+ 94F3 20 FB        	jr nz,3B
  36+ 94F5 10 F5        	djnz 1B
  37+ 94F7
  38+ 94F7 7B           2 ld a,e
  39+ 94F8 32 B5 8B     	ld (Coordenada_y),a
  40+ 94FB C9           	ret
  41+ 94FC
  42+ 94FC AF           4 xor a
  43+ 94FD 32 B5 8B     	ld (Coordenada_y),a
  44+ 9500 C9           	ret
  45+ 9501
# file closed: Genera_coordenadas.asm
2048  9501              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9501              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9501              ;
   3+ 9501              ;	20/09/24
   4+ 9501              ;
   5+ 9501              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9501              ;   DE contiene Puntero_objeto.
   7+ 9501              ;   IX contiene el Puntero de impresión.
   8+ 9501
   9+ 9501              Genera_datos_de_impresion
  10+ 9501
  11+ 9501 ED 73 00 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9505
  13+ 9505 31 BA 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9508 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 950A
  16+ 950A 2A 22 8C         ld hl,(Scanlines_album_SP)
  17+ 950D
  18+ 950D 3E 05            ld a,5
  19+ 950F 85               add l
  20+ 9510 6F               ld l,a
  21+ 9511
  22+ 9511 F9               ld sp,hl
  23+ 9512 22 22 8C         ld (Scanlines_album_SP),hl
  24+ 9515
  25+ 9515 21 00 00         ld hl,0
  26+ 9518
  27+ 9518 DD E5            push ix
  28+ 951A 3B               dec sp
  29+ 951B ED 7A            adc hl,sp
  30+ 951D D5               push de
  31+ 951E
  32+ 951E              ; Recuperamos SP.
  33+ 951E
  34+ 951E ED 7B 00 8C      ld sp,(Stack)
  35+ 9522
  36+ 9522 E5               push hl
  37+ 9523 F1               pop af
  38+ 9524 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9525
  40+ 9525              ; Tenemos el encabezado listo.
  41+ 9525              ; Preparamos registros para generar los scanlines.
  42+ 9525
  43+ 9525 DD E5            push ix
  44+ 9527 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9528
  46+ 9528 ED 5B 22 8C      ld de,(Scanlines_album_SP)
  47+ 952C
  48+ 952C              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 952C              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 952C
  51+ 952C 7C               ld a,h
  52+ 952D FE 50            cp $50
  53+ 952F 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9531
  55+ 9531 20 05            jr nz,2F
  56+ 9533
  57+ 9533 7D               ld a,l
  58+ 9534 FE E0            cp $e0
  59+ 9536 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9538
  61+ 9538 7D           2 ld a,l
  62+ 9539 FE C0            cp $c0
  63+ 953B D2 D1 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 953E
  65+ 953E              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 953E
  67+ 953E CD CF 99         call NextScan
  68+ 9541 EB               ex de,hl
  69+ 9542
  70+ 9542 73               ld (hl),e
  71+ 9543 23               inc hl
  72+ 9544 72               ld (hl),d
  73+ 9545 23               inc hl
  74+ 9546
  75+ 9546 EB               ex de,hl
  76+ 9547
  77+ 9547 CD CF 99         call NextScan
  78+ 954A EB               ex de,hl
  79+ 954B
  80+ 954B 73               ld (hl),e
  81+ 954C 23               inc hl
  82+ 954D 72               ld (hl),d
  83+ 954E 23               inc hl
  84+ 954F
  85+ 954F EB               ex de,hl
  86+ 9550
  87+ 9550 CD CF 99         call NextScan
  88+ 9553 EB               ex de,hl
  89+ 9554
  90+ 9554 73               ld (hl),e
  91+ 9555 23               inc hl
  92+ 9556 72               ld (hl),d
  93+ 9557 23               inc hl
  94+ 9558
  95+ 9558 EB               ex de,hl
  96+ 9559
  97+ 9559 CD CF 99         call NextScan
  98+ 955C EB               ex de,hl
  99+ 955D
 100+ 955D 73               ld (hl),e
 101+ 955E 23               inc hl
 102+ 955F 72               ld (hl),d
 103+ 9560 23               inc hl
 104+ 9561
 105+ 9561 EB               ex de,hl
 106+ 9562
 107+ 9562 CD CF 99         call NextScan
 108+ 9565 EB               ex de,hl
 109+ 9566
 110+ 9566 73               ld (hl),e
 111+ 9567 23               inc hl
 112+ 9568 72               ld (hl),d
 113+ 9569 23               inc hl
 114+ 956A
 115+ 956A EB               ex de,hl
 116+ 956B
 117+ 956B CD CF 99         call NextScan
 118+ 956E EB               ex de,hl
 119+ 956F
 120+ 956F 73               ld (hl),e
 121+ 9570 23               inc hl
 122+ 9571 72               ld (hl),d
 123+ 9572 23               inc hl
 124+ 9573
 125+ 9573 EB               ex de,hl
 126+ 9574
 127+ 9574 CD CF 99         call NextScan
 128+ 9577 EB               ex de,hl
 129+ 9578
 130+ 9578 73               ld (hl),e
 131+ 9579 23               inc hl
 132+ 957A 72               ld (hl),d
 133+ 957B 23               inc hl
 134+ 957C
 135+ 957C EB               ex de,hl
 136+ 957D
 137+ 957D CD CF 99         call NextScan
 138+ 9580 EB               ex de,hl
 139+ 9581
 140+ 9581 73               ld (hl),e
 141+ 9582 23               inc hl
 142+ 9583 72               ld (hl),d
 143+ 9584 23               inc hl
 144+ 9585
 145+ 9585 EB               ex de,hl
 146+ 9586
 147+ 9586 CD CF 99         call NextScan
 148+ 9589 EB               ex de,hl
 149+ 958A
 150+ 958A 73               ld (hl),e
 151+ 958B 23               inc hl
 152+ 958C 72               ld (hl),d
 153+ 958D 23               inc hl
 154+ 958E
 155+ 958E EB               ex de,hl
 156+ 958F
 157+ 958F CD CF 99         call NextScan
 158+ 9592 EB               ex de,hl
 159+ 9593
 160+ 9593 73               ld (hl),e
 161+ 9594 23               inc hl
 162+ 9595 72               ld (hl),d
 163+ 9596 23               inc hl
 164+ 9597
 165+ 9597 EB               ex de,hl
 166+ 9598
 167+ 9598 CD CF 99         call NextScan
 168+ 959B EB               ex de,hl
 169+ 959C
 170+ 959C 73               ld (hl),e
 171+ 959D 23               inc hl
 172+ 959E 72               ld (hl),d
 173+ 959F 23               inc hl
 174+ 95A0
 175+ 95A0 EB               ex de,hl
 176+ 95A1
 177+ 95A1 CD CF 99         call NextScan
 178+ 95A4 EB               ex de,hl
 179+ 95A5
 180+ 95A5 73               ld (hl),e
 181+ 95A6 23               inc hl
 182+ 95A7 72               ld (hl),d
 183+ 95A8 23               inc hl
 184+ 95A9
 185+ 95A9 EB               ex de,hl
 186+ 95AA
 187+ 95AA CD CF 99         call NextScan
 188+ 95AD EB               ex de,hl
 189+ 95AE
 190+ 95AE 73               ld (hl),e
 191+ 95AF 23               inc hl
 192+ 95B0 72               ld (hl),d
 193+ 95B1 23               inc hl
 194+ 95B2
 195+ 95B2 EB               ex de,hl
 196+ 95B3
 197+ 95B3 CD CF 99         call NextScan
 198+ 95B6 EB               ex de,hl
 199+ 95B7
 200+ 95B7 73               ld (hl),e
 201+ 95B8 23               inc hl
 202+ 95B9 72               ld (hl),d
 203+ 95BA 23               inc hl
 204+ 95BB
 205+ 95BB EB               ex de,hl
 206+ 95BC
 207+ 95BC CD CF 99         call NextScan
 208+ 95BF EB               ex de,hl
 209+ 95C0
 210+ 95C0              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95C0              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95C0              ;   _ generar sus scanlines.
 213+ 95C0
 214+ 95C0              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95C0
 216+ 95C0 73               ld (hl),e
 217+ 95C1 23               inc hl
 218+ 95C2 72               ld (hl),d
 219+ 95C3 23               inc hl
 220+ 95C4
 221+ 95C4              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95C4
 223+ 95C4 22 22 8C         ld (Scanlines_album_SP),hl
 224+ 95C7
 225+ 95C7 EB               ex de,hl
 226+ 95C8
 227+ 95C8              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95C8
 229+ 95C8              ;    call NextScan
 230+ 95C8              ;    call NextScan
 231+ 95C8
 232+ 95C8 22 2D 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95CB
 234+ 95CB              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95CB
 236+ 95CB 08               ex af,af
 237+ 95CC
 238+ 95CC F5               push af
 239+ 95CD E1               pop hl
 240+ 95CE
 241+ 95CE 36 10            ld (hl),16
 242+ 95D0
 243+ 95D0 C9               ret
 244+ 95D1
 245+ 95D1              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95D1
 247+ 95D1              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95D1
 249+ 95D1 3E 57            ld a,$57
 250+ 95D3 94               sub h
 251+ 95D4 47               ld b,a
 252+ 95D5
 253+ 95D5 3E DF            ld a,$df
 254+ 95D7 BD               cp l
 255+ 95D8 38 04            jr c,1F
 256+ 95DA
 257+ 95DA 3E 08            ld a,8
 258+ 95DC 80               add b
 259+ 95DD 47               ld b,a
 260+ 95DE
 261+ 95DE              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95DE              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95DE
 264+ 95DE 48           1 ld c,b
 265+ 95DF 0C               inc c
 266+ 95E0
 267+ 95E0 04               inc b
 268+ 95E1 05               dec b
 269+ 95E2 20 02            jr nz,3F
 270+ 95E4
 271+ 95E4 18 0B            jr 6F
 272+ 95E6
 273+ 95E6 CD CF 99     3 call NextScan
 274+ 95E9 EB               ex de,hl
 275+ 95EA
 276+ 95EA 73               ld (hl),e
 277+ 95EB 23               inc hl
 278+ 95EC 72               ld (hl),d
 279+ 95ED 23               inc hl
 280+ 95EE
 281+ 95EE EB               ex de,hl
 282+ 95EF 10 F5            djnz 3B
 283+ 95F1
 284+ 95F1 ED 53 22 8C  6 ld (Scanlines_album_SP),de
 285+ 95F5
 286+ 95F5 08           5 ex af,af
 287+ 95F6 F5               push af
 288+ 95F7 E1               pop hl
 289+ 95F8
 290+ 95F8 71               ld (hl),c
 291+ 95F9
 292+ 95F9 C9               ret
 293+ 95FA
# file closed: Genera_datos_de_impresion.asm
2049  95FA              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95FA              ; -----------------------------------------------------------------------------
   2+ 95FA              ;
   3+ 95FA              ;   11/03/24
   4+ 95FA              ;
   5+ 95FA
   6+ 95FA              Pinta_Sprites
   7+ 95FA
   8+ 95FA              ;    ld hl,(Scanlines_album_SP)
   9+ 95FA              ;    call Extrae_address
  10+ 95FA
  11+ 95FA              ;    inc h
  12+ 95FA              ;    dec h
  13+ 95FA              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95FA
  15+ 95FA ED 73 00 8C      ld (Stack),sp
  16+ 95FE
  17+ 95FE EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95FF              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95FF 2C               inc l
  20+ 9600 2C               inc l
  21+ 9601
  22+ 9601 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9602
  24+ 9602 2C               inc l
  25+ 9603 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9604
  27+ 9604              ;   Seleccionamos rutina de impresión:
  28+ 9604
  29+ 9604 3E 10            ld a,16
  30+ 9606 B8               cp b
  31+ 9607 C2 03 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 960A
  33+ 960A              ;   Rutinas:
  34+ 960A
  35+ 960A              Pinta_rapido    ;   1520 t/states.
  36+ 960A
  37+ 960A E1               pop hl
  38+ 960B
  39+ 960B 1A               ld a,(de)
  40+ 960C AE               xor (hl)
  41+ 960D 77               ld (hl),a
  42+ 960E 2C               inc l
  43+ 960F 1C               inc e
  44+ 9610 1A               ld a,(de)
  45+ 9611 AE               xor (hl)
  46+ 9612 77               ld (hl),a
  47+ 9613 2C               inc l
  48+ 9614 1C               inc e
  49+ 9615 1A               ld a,(de)
  50+ 9616 AE               xor (hl)
  51+ 9617 77               ld (hl),a
  52+ 9618 13               inc de
  53+ 9619
  54+ 9619 E1               pop hl
  55+ 961A
  56+ 961A 1A               ld a,(de)
  57+ 961B AE               xor (hl)
  58+ 961C 77               ld (hl),a
  59+ 961D 2C               inc l
  60+ 961E 1C               inc e
  61+ 961F 1A               ld a,(de)
  62+ 9620 AE               xor (hl)
  63+ 9621 77               ld (hl),a
  64+ 9622 2C               inc l
  65+ 9623 1C               inc e
  66+ 9624 1A               ld a,(de)
  67+ 9625 AE               xor (hl)
  68+ 9626 77               ld (hl),a
  69+ 9627 13               inc de
  70+ 9628
  71+ 9628 E1               pop hl
  72+ 9629
  73+ 9629 1A               ld a,(de)
  74+ 962A AE               xor (hl)
  75+ 962B 77               ld (hl),a
  76+ 962C 2C               inc l
  77+ 962D 1C               inc e
  78+ 962E 1A               ld a,(de)
  79+ 962F AE               xor (hl)
  80+ 9630 77               ld (hl),a
  81+ 9631 2C               inc l
  82+ 9632 1C               inc e
  83+ 9633 1A               ld a,(de)
  84+ 9634 AE               xor (hl)
  85+ 9635 77               ld (hl),a
  86+ 9636 13               inc de
  87+ 9637
  88+ 9637 E1               pop hl
  89+ 9638
  90+ 9638 1A               ld a,(de)
  91+ 9639 AE               xor (hl)
  92+ 963A 77               ld (hl),a
  93+ 963B 2C               inc l
  94+ 963C 1C               inc e
  95+ 963D 1A               ld a,(de)
  96+ 963E AE               xor (hl)
  97+ 963F 77               ld (hl),a
  98+ 9640 2C               inc l
  99+ 9641 1C               inc e
 100+ 9642 1A               ld a,(de)
 101+ 9643 AE               xor (hl)
 102+ 9644 77               ld (hl),a
 103+ 9645 13               inc de
 104+ 9646
 105+ 9646 E1               pop hl
 106+ 9647
 107+ 9647 1A               ld a,(de)
 108+ 9648 AE               xor (hl)
 109+ 9649 77               ld (hl),a
 110+ 964A 2C               inc l
 111+ 964B 1C               inc e
 112+ 964C 1A               ld a,(de)
 113+ 964D AE               xor (hl)
 114+ 964E 77               ld (hl),a
 115+ 964F 2C               inc l
 116+ 9650 1C               inc e
 117+ 9651 1A               ld a,(de)
 118+ 9652 AE               xor (hl)
 119+ 9653 77               ld (hl),a
 120+ 9654 13               inc de
 121+ 9655
 122+ 9655 E1               pop hl
 123+ 9656
 124+ 9656 1A               ld a,(de)
 125+ 9657 AE               xor (hl)
 126+ 9658 77               ld (hl),a
 127+ 9659 2C               inc l
 128+ 965A 1C               inc e
 129+ 965B 1A               ld a,(de)
 130+ 965C AE               xor (hl)
 131+ 965D 77               ld (hl),a
 132+ 965E 2C               inc l
 133+ 965F 1C               inc e
 134+ 9660 1A               ld a,(de)
 135+ 9661 AE               xor (hl)
 136+ 9662 77               ld (hl),a
 137+ 9663 13               inc de
 138+ 9664
 139+ 9664 E1               pop hl
 140+ 9665
 141+ 9665 1A               ld a,(de)
 142+ 9666 AE               xor (hl)
 143+ 9667 77               ld (hl),a
 144+ 9668 2C               inc l
 145+ 9669 1C               inc e
 146+ 966A 1A               ld a,(de)
 147+ 966B AE               xor (hl)
 148+ 966C 77               ld (hl),a
 149+ 966D 2C               inc l
 150+ 966E 1C               inc e
 151+ 966F 1A               ld a,(de)
 152+ 9670 AE               xor (hl)
 153+ 9671 77               ld (hl),a
 154+ 9672 13               inc de
 155+ 9673
 156+ 9673 E1               pop hl
 157+ 9674
 158+ 9674 1A               ld a,(de)
 159+ 9675 AE               xor (hl)
 160+ 9676 77               ld (hl),a
 161+ 9677 2C               inc l
 162+ 9678 1C               inc e
 163+ 9679 1A               ld a,(de)
 164+ 967A AE               xor (hl)
 165+ 967B 77               ld (hl),a
 166+ 967C 2C               inc l
 167+ 967D 1C               inc e
 168+ 967E 1A               ld a,(de)
 169+ 967F AE               xor (hl)
 170+ 9680 77               ld (hl),a
 171+ 9681 13               inc de
 172+ 9682
 173+ 9682 E1               pop hl
 174+ 9683
 175+ 9683 1A               ld a,(de)
 176+ 9684 AE               xor (hl)
 177+ 9685 77               ld (hl),a
 178+ 9686 2C               inc l
 179+ 9687 1C               inc e
 180+ 9688 1A               ld a,(de)
 181+ 9689 AE               xor (hl)
 182+ 968A 77               ld (hl),a
 183+ 968B 2C               inc l
 184+ 968C 1C               inc e
 185+ 968D 1A               ld a,(de)
 186+ 968E AE               xor (hl)
 187+ 968F 77               ld (hl),a
 188+ 9690 13               inc de
 189+ 9691
 190+ 9691 E1               pop hl
 191+ 9692
 192+ 9692 1A               ld a,(de)
 193+ 9693 AE               xor (hl)
 194+ 9694 77               ld (hl),a
 195+ 9695 2C               inc l
 196+ 9696 1C               inc e
 197+ 9697 1A               ld a,(de)
 198+ 9698 AE               xor (hl)
 199+ 9699 77               ld (hl),a
 200+ 969A 2C               inc l
 201+ 969B 1C               inc e
 202+ 969C 1A               ld a,(de)
 203+ 969D AE               xor (hl)
 204+ 969E 77               ld (hl),a
 205+ 969F 13               inc de
 206+ 96A0
 207+ 96A0 E1               pop hl
 208+ 96A1
 209+ 96A1 1A               ld a,(de)
 210+ 96A2 AE               xor (hl)
 211+ 96A3 77               ld (hl),a
 212+ 96A4 2C               inc l
 213+ 96A5 1C               inc e
 214+ 96A6 1A               ld a,(de)
 215+ 96A7 AE               xor (hl)
 216+ 96A8 77               ld (hl),a
 217+ 96A9 2C               inc l
 218+ 96AA 1C               inc e
 219+ 96AB 1A               ld a,(de)
 220+ 96AC AE               xor (hl)
 221+ 96AD 77               ld (hl),a
 222+ 96AE 13               inc de
 223+ 96AF
 224+ 96AF E1               pop hl
 225+ 96B0
 226+ 96B0 1A               ld a,(de)
 227+ 96B1 AE               xor (hl)
 228+ 96B2 77               ld (hl),a
 229+ 96B3 2C               inc l
 230+ 96B4 1C               inc e
 231+ 96B5 1A               ld a,(de)
 232+ 96B6 AE               xor (hl)
 233+ 96B7 77               ld (hl),a
 234+ 96B8 2C               inc l
 235+ 96B9 1C               inc e
 236+ 96BA 1A               ld a,(de)
 237+ 96BB AE               xor (hl)
 238+ 96BC 77               ld (hl),a
 239+ 96BD 13               inc de
 240+ 96BE
 241+ 96BE E1               pop hl
 242+ 96BF
 243+ 96BF 1A               ld a,(de)
 244+ 96C0 AE               xor (hl)
 245+ 96C1 77               ld (hl),a
 246+ 96C2 2C               inc l
 247+ 96C3 1C               inc e
 248+ 96C4 1A               ld a,(de)
 249+ 96C5 AE               xor (hl)
 250+ 96C6 77               ld (hl),a
 251+ 96C7 2C               inc l
 252+ 96C8 1C               inc e
 253+ 96C9 1A               ld a,(de)
 254+ 96CA AE               xor (hl)
 255+ 96CB 77               ld (hl),a
 256+ 96CC 13               inc de
 257+ 96CD
 258+ 96CD E1               pop hl
 259+ 96CE
 260+ 96CE 1A               ld a,(de)
 261+ 96CF AE               xor (hl)
 262+ 96D0 77               ld (hl),a
 263+ 96D1 2C               inc l
 264+ 96D2 1C               inc e
 265+ 96D3 1A               ld a,(de)
 266+ 96D4 AE               xor (hl)
 267+ 96D5 77               ld (hl),a
 268+ 96D6 2C               inc l
 269+ 96D7 1C               inc e
 270+ 96D8 1A               ld a,(de)
 271+ 96D9 AE               xor (hl)
 272+ 96DA 77               ld (hl),a
 273+ 96DB 13               inc de
 274+ 96DC
 275+ 96DC E1               pop hl
 276+ 96DD
 277+ 96DD 1A               ld a,(de)
 278+ 96DE AE               xor (hl)
 279+ 96DF 77               ld (hl),a
 280+ 96E0 2C               inc l
 281+ 96E1 1C               inc e
 282+ 96E2 1A               ld a,(de)
 283+ 96E3 AE               xor (hl)
 284+ 96E4 77               ld (hl),a
 285+ 96E5 2C               inc l
 286+ 96E6 1C               inc e
 287+ 96E7 1A               ld a,(de)
 288+ 96E8 AE               xor (hl)
 289+ 96E9 77               ld (hl),a
 290+ 96EA 13               inc de
 291+ 96EB
 292+ 96EB E1               pop hl
 293+ 96EC
 294+ 96EC 1A               ld a,(de)
 295+ 96ED AE               xor (hl)
 296+ 96EE 77               ld (hl),a
 297+ 96EF 2C               inc l
 298+ 96F0 1C               inc e
 299+ 96F1 1A               ld a,(de)
 300+ 96F2 AE               xor (hl)
 301+ 96F3 77               ld (hl),a
 302+ 96F4 2C               inc l
 303+ 96F5 1C               inc e
 304+ 96F6 1A               ld a,(de)
 305+ 96F7 AE               xor (hl)
 306+ 96F8 77               ld (hl),a
 307+ 96F9 13               inc de
 308+ 96FA
 309+ 96FA ED 73 22 8C      ld (Scanlines_album_SP),sp
 310+ 96FE ED 7B 00 8C      ld sp,(Stack)
 311+ 9702 C9               ret
 312+ 9703
 313+ 9703              Pinta_lento
 314+ 9703
 315+ 9703 E1           1 pop hl
 316+ 9704
 317+ 9704 1A               ld a,(de)
 318+ 9705 AE               xor (hl)
 319+ 9706 77               ld (hl),a
 320+ 9707 2C               inc l
 321+ 9708 1C               inc e
 322+ 9709 1A               ld a,(de)
 323+ 970A AE               xor (hl)
 324+ 970B 77               ld (hl),a
 325+ 970C 2C               inc l
 326+ 970D 1C               inc e
 327+ 970E 1A               ld a,(de)
 328+ 970F AE               xor (hl)
 329+ 9710 77               ld (hl),a
 330+ 9711 13               inc de
 331+ 9712
 332+ 9712 10 EF            djnz 1B
 333+ 9714
 334+ 9714 ED 73 22 8C      ld (Scanlines_album_SP),sp
 335+ 9718 ED 7B 00 8C      ld sp,(Stack)
 336+ 971C C9               ret
# file closed: Pinta_Sprites.asm
2050  971D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 971D              ; ******************************************************************************************************************************************************************************************
   2+ 971D              ;
   3+ 971D              ; 26/06/23
   4+ 971D              ;
   5+ 971D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 971D
   7+ 971D              Draw
   8+ 971D
   9+ 971D CD C3 99     	call Prepara_draw
  10+ 9720 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9721 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9722 28 05        	jr z,2F
  13+ 9724
  14+ 9724 3A D2 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9727 18 0C        	jr 1F
  16+ 9729
  17+ 9729 2A D0 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 972C 22 C3 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 972F CD BB 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9732              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9732
  22+ 9732 CD 62 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9735
  24+ 9735 3A C0 8B     1 ld a,(Ctrl_0)
  25+ 9738 CB 6F        	bit 5,a
  26+ 973A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 973C
  28+ 973C CD 51 97     	call Comprueba_limite_horizontal
  29+ 973F CD E1 97     	call Comprueba_limite_vertical
  30+ 9742
  31+ 9742              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9742              ; -----------------------
  33+ 9742              ; -----------------------
  34+ 9742              ; -----------------------
  35+ 9742
  36+ 9742 CD 37 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9745 CD 6E 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9748
  39+ 9748 3A C0 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 974B CB AF        	res 5,a											; _a ser de utilidad.
  41+ 974D 32 C0 8B     	ld (Ctrl_0),a
  42+ 9750
  43+ 9750 C9           	ret
  44+ 9751
  45+ 9751              ; *******************************************************************************************************************************************************************************************
  46+ 9751              ;	21/01/23
  47+ 9751              ;
  48+ 9751              ; 	Comprueba_limite_horizontal.
  49+ 9751              ;
  50+ 9751              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9751              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9751              ;
  53+ 9751              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9751              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9751              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9751              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9751
  58+ 9751
  59+ 9751
  60+ 9751 3A C0 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9754 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9756 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9758 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 975A 32 C0 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 975D 18 09            jr 6F
  66+ 975F CB 5F        1 bit 3,a
  67+ 9761 28 0A            jr z,2F
  68+ 9763 E6 F7            and $f7
  69+ 9765 32 C0 8B         ld (Ctrl_0),a
  70+ 9768 CD BB 98     6 call Inicializacion
  71+ 976B 18 5B            jr 5F
  72+ 976D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 976E
  74+ 976E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 976E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 976E
  77+ 976E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 976F 2A D4 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9772 CD B7 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9775 67           	ld h,a
  81+ 9776 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9777 CD B7 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 977A 67           	ld h,a
  84+ 977B A7           	and a
  85+ 977C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 977E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 977F 3A D2 8B     	ld a,(Cuad_objeto)
  88+ 9782 FE 02        	cp 2
  89+ 9784 38 1E        	jr c,3F
  90+ 9786 28 1C        	jr z,3F
  91+ 9788 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9789 28 23            jr z,7F
  93+ 978B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 978D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 978F E1           	pop hl
  96+ 9790
  97+ 9790              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9790              ; _para indicar con E="2" en caso necesario.
  99+ 9790
 100+ 9790 E5               push hl
 101+ 9791 C5               push bc
 102+ 9792 CD B7 94     	call calcula_tercio
 103+ 9795 FE 01        	cp 1
 104+ 9797 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9799 CD C9 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 979C 28 26            jr z,9F
 107+ 979E 38 24            jr c,9F
 108+ 97A0 1E 00        11 ld e,0
 109+ 97A2 18 22            jr 8F
 110+ 97A4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97A5 28 07        	jr z, 7F
 112+ 97A7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97A9 1E 00         	ld e,0
 114+ 97AB E1           	pop hl
 115+ 97AC 18 04        	jr 4F
 116+ 97AE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97B0 18 15            jr 10F
 118+ 97B2
 119+ 97B2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97B2              ; _para indicar con E="2" en caso necesario.
 121+ 97B2
 122+ 97B2 E5           4 push hl
 123+ 97B3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97B4 CD B7 94     	call calcula_tercio
 125+ 97B7 FE 01        	cp 1
 126+ 97B9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97BB CD C9 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97BE 28 04            jr z,9F
 129+ 97C0 30 02            jr nc,9F
 130+ 97C2 18 02        	jr 8F
 131+ 97C4 1E 02        9 ld e,2
 132+ 97C6 C1           8 pop bc
 133+ 97C7 E1           10 pop hl
 134+ 97C8 C9           5 ret
 135+ 97C9
 136+ 97C9              ; --------------------
 137+ 97C9              ;
 138+ 97C9              ; 25/08/22
 139+ 97C9
 140+ 97C9 CD B7 94     Comprueba_centro call calcula_tercio
 141+ 97CC 67               ld h,a
 142+ 97CD 08           	ex af,af
 143+ 97CE FE 02        	cp 2
 144+ 97D0 38 07        	jr c,1F
 145+ 97D2 28 05        	jr z,1F
 146+ 97D4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97D7 18 03        	jr 2F
 148+ 97D9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97DC 08           2 ex af,af
 150+ 97DD A7               and a
 151+ 97DE ED 42            sbc hl,bc
 152+ 97E0 C9               ret
 153+ 97E1
 154+ 97E1              ; *********************************************************************************************************************************************************************************************
 155+ 97E1              ;
 156+ 97E1              ;   16/8/22
 157+ 97E1              ;
 158+ 97E1              ;	Comprueba_limite_vertical
 159+ 97E1              ;
 160+ 97E1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E1              ;
 163+ 97E1
 164+ 97E1 2A C3 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97E4 7D           	ld a,l
 166+ 97E5 E6 1F        	and $1F
 167+ 97E7 57           	ld d,a
 168+ 97E8 3A D6 8B     	ld a,(Limite_vertical)
 169+ 97EB BA           	cp d 											; Límite - Posición.
 170+ 97EC 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97ED 3A D2 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97F0 CB 47        	bit 0,a
 173+ 97F2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97F4
 175+ 97F4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97F4
 177+ 97F4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97F5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97F7
 180+ 97F7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97F7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97F7
 183+ 97F7 3A B4 8B         ld a,(Coordenada_X)
 184+ 97FA 16 0F            ld d,Centro_izquierda
 185+ 97FC A7               and a
 186+ 97FD 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97FE 28 1E            jr z,3F
 188+ 9800 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9802              ;                                                    ; _salimos sin modificar nada.
 190+ 9802 18 0E            jr 2F
 191+ 9804 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9805 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9807
 194+ 9807              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9807              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9807
 197+ 9807 3A B4 8B         ld a,(Coordenada_X)
 198+ 980A 16 10            ld d,Centro_derecha
 199+ 980C A7               and a
 200+ 980D 92               sub d
 201+ 980E 28 0E            jr z,3F
 202+ 9810 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9812              ;                                                    ; _salimos sin modificar nada.
 204+ 9812 CB 43        2 bit 0,e
 205+ 9814 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9816 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9817 CD AB 98         call Modificaccionne
 208+ 981A C1           	pop bc
 209+ 981B CD BB 98         call Inicializacion
 210+ 981E C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 981F
 212+ 981F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 981F
 214+ 981F C5           4 push bc
 215+ 9820 01 C2 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9823 0A           	ld a,(bc)
 217+ 9824 3D           	dec a
 218+ 9825 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9826 7D           	ld a,l
 220+ 9827 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9828 CB 47        	bit 0,a
 222+ 982A 28 03        	jr z,5F
 223+ 982C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 982D 18 2E        	jr 7F
 225+ 982F
 226+ 982F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 982F
 228+ 982F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9830 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9831 3A C0 8B     	ld a,(Ctrl_0)
 231+ 9834 CB 4F        	bit 1,a
 232+ 9836 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9838 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9839
 235+ 9839              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9839
 237+ 9839 1C               inc e
 238+ 983A 1D               dec e
 239+ 983B 20 07            jr nz,12F
 240+ 983D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 983E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 983F 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9842 18 44        13 jr 9F
 244+ 9844 CB 43        12 bit 0,e
 245+ 9846 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9848              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9848 C1           	pop bc
 248+ 9849 18 D3        	jr 3B
 249+ 984B 80           14 add b
 250+ 984C 6F               ld l,a
 251+ 984D 22 C3 8B     	ld (Posicion_actual),hl
 252+ 9850 CD AB 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9853 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9855 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9857 32 C0 8B         ld (Ctrl_0),a
 256+ 985A F1           	pop af
 257+ 985B 18 2B        	jr 9F
 258+ 985D
 259+ 985D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 985D
 261+ 985D F5           7 push af
 262+ 985E 3A C0 8B     	ld a,(Ctrl_0)
 263+ 9861 CB 47        	bit 0,a
 264+ 9863 20 1D        	jr nz,8F
 265+ 9865 F1           	pop af
 266+ 9866
 267+ 9866              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9866
 269+ 9866 1C           	inc e
 270+ 9867 1D               dec e
 271+ 9868 20 07            jr nz,10F
 272+ 986A 90           	sub b
 273+ 986B 6F               ld l,a
 274+ 986C 22 C3 8B     	ld (Posicion_actual),hl
 275+ 986F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9871              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9871 CB 43        10 bit 0,e
 278+ 9873 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9875              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9875 C1           	pop bc
 281+ 9876 18 A6        	jr 3B
 282+ 9878 90           16 sub b
 283+ 9879 6F               ld l,a
 284+ 987A 22 C3 8B     	ld (Posicion_actual),hl
 285+ 987D CD AB 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9880 18 06            jr 9F
 287+ 9882 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9884 32 C0 8B         ld (Ctrl_0),a
 289+ 9887 F1           	pop af
 290+ 9888 C1           9 pop bc
 291+ 9889 1E 00        	ld e,0
 292+ 988B CD BB 98         call Inicializacion
 293+ 988E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 988F 08           	ex af,af
 295+ 9890 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9891 18 8B            jr 3B
 297+ 9893
 298+ 9893              ; --------------------
 299+ 9893
 300+ 9893 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9895 CD DE 99     1 call PreviousScan
 302+ 9898 10 FB            djnz 1B
 303+ 989A 22 C3 8B     	ld (Posicion_actual),hl
 304+ 989D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 989E C9           	ret
 306+ 989F
 307+ 989F              ; --------------------
 308+ 989F
 309+ 989F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A1 CD CF 99     1 call NextScan
 311+ 98A4 10 FB            djnz 1B
 312+ 98A6 22 C3 8B     	ld (Posicion_actual),hl
 313+ 98A9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98AA C9           	ret
 315+ 98AB
 316+ 98AB              ; --------------------
 317+ 98AB              ;
 318+ 98AB              ;	22/01/23
 319+ 98AB              ;
 320+ 98AB              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98AB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98AB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98AB
 324+ 98AB
 325+ 98AB              Modificaccionne
 326+ 98AB
 327+ 98AB 3A D2 8B     	ld a,(Cuad_objeto)
 328+ 98AE FE 02        	cp 2
 329+ 98B0 CC 93 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98B3 DC 93 98         call c,Modifica_Pos_actual
 331+ 98B6 C8           	ret z
 332+ 98B7 CD 9F 98         call Modifica_Pos_actual2
 333+ 98BA C9               ret
 334+ 98BB
 335+ 98BB              ; *************************************************************************************************************************************************************************************************
 336+ 98BB              ;
 337+ 98BB              ;	13/8/22
 338+ 98BB              ;
 339+ 98BB              ;	Inicializacion
 340+ 98BB              ;
 341+ 98BB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98BB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98BB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98BB              ;
 345+ 98BB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98BB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98BB              ;	_ desaparece/aparece.
 348+ 98BB
 349+ 98BB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98BB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98BB              ;
 352+ 98BB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98BB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98BB              ; 		   [E] ="0"
 355+ 98BB
 356+ 98BB              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98BB
 358+ 98BB CD B7 94     Inicializacion call calcula_tercio
 359+ 98BE 28 36        	jr z,primit
 360+ 98C0 E6 02        	and 2
 361+ 98C2 20 07        	jr nz,segmit
 362+ 98C4 7D           	ld a,l
 363+ 98C5 FE 7F        	cp $7f
 364+ 98C7 38 2D        	jr c,primit
 365+ 98C9 28 2B        	jr z,primit
 366+ 98CB CD 31 99     segmit call column
 367+ 98CE 38 13        	jr c,tercuad
 368+ 98D0 3E 04        cuarcuad ld a,4
 369+ 98D2 32 D2 8B     	ld (Cuad_objeto),a
 370+ 98D5 21 20 48     	ld hl,$4820
 371+ 98D8 22 D4 8B     	ld (Limite_horizontal),hl
 372+ 98DB 21 D6 8B     	ld hl,Limite_vertical
 373+ 98DE 36 0D        	ld (hl),$0d
 374+ 98E0 08           	ex af,af
 375+ 98E1 18 3C        	jr 1F
 376+ 98E3              tercuad
 377+ 98E3 3E 03        	ld a,3
 378+ 98E5 32 D2 8B     	ld (Cuad_objeto),a
 379+ 98E8 21 20 48     	ld hl,$4820
 380+ 98EB 22 D4 8B     	ld (Limite_horizontal),hl
 381+ 98EE 21 D6 8B     	ld hl,Limite_vertical
 382+ 98F1 36 12        	ld (hl),$12
 383+ 98F3 08           	ex af,af
 384+ 98F4 18 29        	jr 1F
 385+ 98F6 CD 31 99     primit call column
 386+ 98F9 38 13        	jr c, primcuad
 387+ 98FB              segcuad
 388+ 98FB 3E 02        	ld a,2
 389+ 98FD 32 D2 8B     	ld (Cuad_objeto),a
 390+ 9900 21 C0 4F     	ld hl,$4fc0
 391+ 9903 22 D4 8B     	ld (Limite_horizontal),hl
 392+ 9906 21 D6 8B     	ld hl,Limite_vertical
 393+ 9909 36 0D        	ld (hl),$0d
 394+ 990B 08           	ex af,af
 395+ 990C 18 11        	jr 1F
 396+ 990E              primcuad
 397+ 990E 3E 01        	ld a,1
 398+ 9910 32 D2 8B     	ld (Cuad_objeto),a
 399+ 9913 21 C0 4F     	ld hl,$4fc0
 400+ 9916 22 D4 8B     	ld (Limite_horizontal),hl
 401+ 9919 21 D6 8B     	ld hl,Limite_vertical
 402+ 991C 36 12        	ld (hl),$12
 403+ 991E 08           	ex af,af
 404+ 991F
 405+ 991F C5           1 push bc
 406+ 9920 E5           	push hl
 407+ 9921 D5           	push de
 408+ 9922
 409+ 9922 2A C3 8B     	ld hl,(Posicion_actual)
 410+ 9925 CD D5 94     	call Genera_coordenadas
 411+ 9928
 412+ 9928 D1           	pop de
 413+ 9929 E1           	pop hl
 414+ 992A C1           	pop bc
 415+ 992B
 416+ 992B 21 C0 8B     	ld hl,Ctrl_0
 417+ 992E CB EE        	set 5,(hl)
 418+ 9930 C9           	ret
 419+ 9931
 420+ 9931              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9931
 422+ 9931              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9931              ;
 424+ 9931              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9931
 426+ 9931 7D           column ld a,l
 427+ 9932 E6 1F        	and $1f
 428+ 9934 FE 10         	cp $10
 429+ 9936 C9            	ret
 430+ 9937
 431+ 9937              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9937              ;
 433+ 9937              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9937              ;
 435+ 9937              ; 14/12/22
 436+ 9937              ;
 437+ 9937              ;	Modifica: A y BC.
 438+ 9937
 439+ 9937 3A D2 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 993A E6 01        	and 1
 441+ 993C 28 17        	jr z,1F
 442+ 993E
 443+ 993E              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 993E
 445+ 993E 3A B4 8B     	ld a,(Coordenada_X)
 446+ 9941 47           	ld b,a
 447+ 9942 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9943 79           	ld a,c
 449+ 9944 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9945 38 08        	jr c,2F
 451+ 9947 47           	ld b,a
 452+ 9948 79           	ld a,c
 453+ 9949 90           	sub b
 454+ 994A 32 D3 8B     	ld (Columnas),a
 455+ 994D 18 1B        	jr 4F
 456+ 994F 79           2 ld a,c
 457+ 9950 32 D3 8B     	ld (Columnas),a
 458+ 9953 18 15        	jr 4F
 459+ 9955
 460+ 9955              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9955
 462+ 9955 3A B4 8B     1 ld a,(Coordenada_X)
 463+ 9958 81           	add c
 464+ 9959 3D           	dec a
 465+ 995A D6 1F        	sub $1f
 466+ 995C 38 08        	jr c,3F
 467+ 995E 47           	ld b,a
 468+ 995F 79           	ld a,c
 469+ 9960 90           	sub b
 470+ 9961 32 D3 8B     	ld (Columnas),a
 471+ 9964 18 04        	jr 4F
 472+ 9966 79           3 ld a,c
 473+ 9967 32 D3 8B     	ld (Columnas),a
 474+ 996A D9           4 exx
 475+ 996B 4F           	ld c,a
 476+ 996C D9           	exx
 477+ 996D C9            ret
 478+ 996E
 479+ 996E              ; --------------------------------------------------------------------------------------------------------------------
 480+ 996E              ;
 481+ 996E              ;   19/7/23
 482+ 996E              ;
 483+ 996E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 996E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 996E              ;
 486+ 996E              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 996E              ;			HL e IY Contienen (Puntero_objeto).
 488+ 996E              ;
 489+ 996E              ;	DESTRUYE: HL,B Y A.
 490+ 996E
 491+ 996E 3A D2 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9971 FE 02        	cp 2
 493+ 9973 38 18        	jr c,1F
 494+ 9975 28 16        	jr z,1F
 495+ 9977 E6 01        	and 1
 496+ 9979 28 0D        	jr z,3F
 497+ 997B
 498+ 997B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 997B
 500+ 997B CD B7 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 997E
 502+ 997E 7D           9 ld a,l
 503+ 997F E6 1F        	and $1f
 504+ 9981 28 2A        	jr z,7F
 505+ 9983 2B           	dec hl
 506+ 9984 10 F8        	djnz 9B
 507+ 9986 18 25        	jr 7F
 508+ 9988
 509+ 9988              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9988
 511+ 9988 2A C3 8B     3 ld hl,(Posicion_actual)
 512+ 998B 18 20        	jr 7F
 513+ 998D
 514+ 998D 28 14        1 jr z,2F
 515+ 998F
 516+ 998F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 998F
 518+ 998F CD B7 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9992
 520+ 9992 7D           4 ld a,l
 521+ 9993 E6 1F        	and $1f
 522+ 9995 28 03        	jr z,6F
 523+ 9997 2B           	dec hl
 524+ 9998 10 F8        	djnz 4B
 525+ 999A 06 0F        6 ld b,15
 526+ 999C CD DE 99     5 call PreviousScan
 527+ 999F 10 FB        	djnz 5B
 528+ 99A1 18 0A        	jr 7F
 529+ 99A3
 530+ 99A3              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99A3
 532+ 99A3 CD B7 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99A6 06 0F        	ld b,15
 534+ 99A8 CD DE 99     8 call PreviousScan
 535+ 99AB 10 FB        	djnz 8B
 536+ 99AD
 537+ 99AD E5           7 push hl
 538+ 99AE DD E1        	pop ix
 539+ 99B0
 540+ 99B0 2A C5 8B     	ld hl,(Puntero_objeto)
 541+ 99B3 E5           	push hl
 542+ 99B4 FD E1        	pop iy
 543+ 99B6
 544+ 99B6 C9           	ret
 545+ 99B7
 546+ 99B7              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99B7              ;
 548+ 99B7              ;	2/1/23
 549+ 99B7              ;
 550+ 99B7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99B7              ;
 552+ 99B7              ;	Tras esta rutina tenemos:
 553+ 99B7              ;
 554+ 99B7              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99B7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99B7              ;
 557+ 99B7              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99B7
 559+ 99B7 2A C3 8B     Operandos ld hl,(Posicion_actual)
 560+ 99BA 3A D3 8B     	ld a,(Columnas)
 561+ 99BD 3D           	dec a
 562+ 99BE 20 01        	jr nz,1F
 563+ 99C0 3C           	inc a
 564+ 99C1 47           1 ld b,a
 565+ 99C2 C9           	ret
 566+ 99C3
 567+ 99C3              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99C3              ;
 569+ 99C3              ;	Prepara_draw
 570+ 99C3              ;
 571+ 99C3              ;	Es una rutina de carga.
 572+ 99C3              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99C3              ;
 574+ 99C3              ;	FUNCIONAMIENTO:
 575+ 99C3              ;
 576+ 99C3              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99C3              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99C3              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99C3              ;
 580+ 99C3              ;	DESTRUYE:
 581+ 99C3              ;
 582+ 99C3              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99C3
 584+ 99C3 21 C1 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99C6 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99C7 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99C8 4E           	ld c,(hl)
 588+ 99C9 2A C3 8B     	ld hl,(Posicion_actual)
 589+ 99CC 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99CE C9           	ret
 591+ 99CF
 592+ 99CF              ;----------------------------------------------------------------------------------------------------------------
 593+ 99CF              ;
 594+ 99CF              ;	5/08/22
 595+ 99CF              ;
 596+ 99CF              ;   NextScan.
 597+ 99CF              ;
 598+ 99CF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99CF              ;
 600+ 99CF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99CF              ;
 602+ 99CF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99CF              ;
 604+ 99CF              ;       DESTRUIDOS: AF y HL !!!
 605+ 99CF              ;
 606+ 99CF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99CF              ;
 608+ 99CF
 609+ 99CF 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99D0 7C               ld a,h
 611+ 99D1 E6 07            and 7
 612+ 99D3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99D4
 614+ 99D4 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99D5 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99D7 6F               ld l,a
 617+ 99D8 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99D9
 619+ 99D9 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99DA D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99DC 67               ld h,a
 622+ 99DD C9               ret
 623+ 99DE
 624+ 99DE              ;----------------------------------------------------------------------------------------------------------------
 625+ 99DE              ;
 626+ 99DE              ;	5/08/22
 627+ 99DE              ;
 628+ 99DE              ;   PreviousScan.
 629+ 99DE              ;
 630+ 99DE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99DE              ;
 632+ 99DE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99DE              ;
 634+ 99DE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99DE              ;
 636+ 99DE              ;       DESTRUIDOS: AF y HL !!!
 637+ 99DE              ;
 638+ 99DE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99DE              ;
 640+ 99DE
 641+ 99DE 7C           PreviousScan ld a,h
 642+ 99DF 25               dec h               ; Dec H.
 643+ 99E0 E6 07            and 7
 644+ 99E2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99E3
 646+ 99E3 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99E4 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99E6 6F               ld l,a
 649+ 99E7 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99E8
 651+ 99E8 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99E9 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99EB 67               ld h,a
 654+ 99EC C9               ret
 655+ 99ED
 656+ 99ED
 657+ 99ED
 658+ 99ED
 659+ 99ED
 660+ 99ED
 661+ 99ED
 662+ 99ED
 663+ 99ED
 664+ 99ED
 665+ 99ED
 666+ 99ED
# file closed: Draw_XOR.asm
2051  99ED              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99ED
   2+ 99ED              ; ******************************************************************************************************************************************************************************************
   3+ 99ED              ;
   4+ 99ED              ;   20/05/23
   5+ 99ED              ;
   6+ 99ED              ;	Recompone_posicion_inicio
   7+ 99ED              ;
   8+ 99ED              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99ED              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99ED              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99ED              ;	_ a una u otra rutina.
  12+ 99ED
  13+ 99ED              Recompone_posicion_inicio
  14+ 99ED
  15+ 99ED 2A D0 8B     	ld hl,(Posicion_inicio)
  16+ 99F0 7D           	ld a,l
  17+ 99F1 E6 1F        	and $1f
  18+ 99F3 28 16        	jr z,1F
  19+ 99F5
  20+ 99F5 FE 1F        	cp $1f
  21+ 99F7 28 0D        	jr z,3F
  22+ 99F9
  23+ 99F9 21 BF 8B     	ld hl,Ctrl_2
  24+ 99FC CB C6        	set 0,(hl)
  25+ 99FE 2A C5 8B     	ld hl,(Puntero_objeto)
  26+ 9A01 22 F1 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A04 18 08        	jr 2F
  28+ 9A06
  29+ 9A06 CD B4 9B     3 call Mov_left
  30+ 9A09 18 03        	jr 2F
  31+ 9A0B
  32+ 9A0B CD 91 9A     1 call Mov_right
  33+ 9A0E 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A11 22 C5 8B     	ld (Puntero_objeto),hl
  35+ 9A14 C9           	ret
  36+ 9A15
  37+ 9A15              ; ******************************************************************************************************************************************************************************************
  38+ 9A15              ;
  39+ 9A15              ;   27/05/23
  40+ 9A15              ;
  41+ 9A15              ;	Mov_down
  42+ 9A15              ;
  43+ 9A15              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A15              ;
  45+ 9A15              ;
  46+ 9A15              Mov_down
  47+ 9A15
  48+ 9A15 CD 7F 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A18              ;																	; _ repone (Puntero_objeto).
  50+ 9A18 21 C0 8B     	ld hl,Ctrl_0
  51+ 9A1B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A1D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A1D              ; 																	; _ en el caso de que no lo haya.
  54+ 9A1D 3A DB 8B     	ld a,(Vel_down)
  55+ 9A20 47           	ld b,a
  56+ 9A21 2A C3 8B         ld hl,(Posicion_actual)
  57+ 9A24 CD B7 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A27 E6 02        	and 2
  59+ 9A29 28 17        	jr z,1F
  60+ 9A2B
  61+ 9A2B              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A2B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A2B
  64+ 9A2B 7C           	ld a,h
  65+ 9A2C FE 57        	cp $57
  66+ 9A2E 20 12        	jr nz,1F
  67+ 9A30
  68+ 9A30 7D           	ld a,l
  69+ 9A31 C6 20        	add $20
  70+ 9A33 30 0D        	jr nc,1F
  71+ 9A35
  72+ 9A35              ; ------------------------------
  73+ 9A35              ;
  74+ 9A35              ;	12/01/24
  75+ 9A35
  76+ 9A35              ;	call Reaparece_arriba
  77+ 9A35 CD 41 9D     	call Reinicio
  78+ 9A38
  79+ 9A38              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A38
  81+ 9A38 3A 28 8C     	ld a,(Ctrl_3)
  82+ 9A3B CB CF        	set 1,a
  83+ 9A3D 32 28 8C     	ld (Ctrl_3),a
  84+ 9A40
  85+ 9A40 18 08        	jr 3F
  86+ 9A42              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A42              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A42              ; ------------------------------
  89+ 9A42
  90+ 9A42 CD CF 99     1 call NextScan
  91+ 9A45 22 C3 8B     	ld (Posicion_actual),hl
  92+ 9A48 10 DA            djnz 2B
  93+ 9A4A CD D5 94     3 call Genera_coordenadas
  94+ 9A4D C9           	ret
  95+ 9A4E
  96+ 9A4E              ; ******************************************************************************************************************************************************************************************
  97+ 9A4E              ;
  98+ 9A4E              ;   27/05/23
  99+ 9A4E              ;
 100+ 9A4E              ;	Mov_up
 101+ 9A4E              ;
 102+ 9A4E              ; 	Mueve el Sprite hacia arriba.
 103+ 9A4E              ;
 104+ 9A4E              ;
 105+ 9A4E              Mov_up
 106+ 9A4E
 107+ 9A4E CD 7F 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A51              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A51 21 C0 8B     	ld hl,Ctrl_0
 110+ 9A54 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A56              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A56              ; 																		; _ en el caso de que no lo haya.
 113+ 9A56 3A DA 8B     	ld a,(Vel_up)
 114+ 9A59 47           	ld b,a
 115+ 9A5A 2A C3 8B     	ld hl,(Posicion_actual)
 116+ 9A5D CD B7 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A60 A7           	and a
 118+ 9A61 20 10        	jr nz,1F
 119+ 9A63
 120+ 9A63              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A63              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A63
 123+ 9A63 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A64 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A66 20 0B            jr nz,1F
 126+ 9A68 7D               ld a,l
 127+ 9A69 D6 20            sub $20
 128+ 9A6B 30 06            jr nc,1F
 129+ 9A6D 25               dec h
 130+ 9A6E
 131+ 9A6E              ; -----------------------------
 132+ 9A6E CD 22 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A71              ;	call Reinicio
 134+ 9A71              ; -----------------------------
 135+ 9A71
 136+ 9A71 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A73 CD DE 99     1 call PreviousScan
 138+ 9A76 22 C3 8B     	ld (Posicion_actual),hl
 139+ 9A79 10 E2            djnz 3B
 140+ 9A7B CD D5 94     2 call Genera_coordenadas
 141+ 9A7E C9           	ret
 142+ 9A7F
 143+ 9A7F              ; -----------------------------
 144+ 9A7F              ;
 145+ 9A7F              ;	27/5/23
 146+ 9A7F              ;
 147+ 9A7F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A7F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A7F              ;
 150+ 9A7F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A7F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A7F              ;
 153+ 9A7F              ;	Modifica: A y (Puntero_objeto).
 154+ 9A7F
 155+ 9A7F 3A BF 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A82 CB 47        	bit 0,a
 157+ 9A84 C8           	ret z
 158+ 9A85 CB 87        	res 0,a
 159+ 9A87 32 BF 8B     	ld (Ctrl_2),a
 160+ 9A8A 2A F1 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A8D 22 C5 8B     	ld (Puntero_objeto),hl
 162+ 9A90 C9           	ret
 163+ 9A91
 164+ 9A91              ; ******************************************************************************************************************************************************************************************
 165+ 9A91              ;
 166+ 9A91              ;	19/10/22
 167+ 9A91              ;
 168+ 9A91              ;	Mov_right.
 169+ 9A91              ;
 170+ 9A91              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A91              ;
 172+ 9A91
 173+ 9A91 3A C0 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A94 CB 77        	bit 6,a
 175+ 9A96 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A98
 177+ 9A98 CD D0 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A9B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A9C
 180+ 9A9C 21 C0 8B     	ld hl,Ctrl_0
 181+ 9A9F CB E6        	set 4,(hl)
 182+ 9AA1 18 52        	jr 8F
 183+ 9AA3
 184+ 9AA3 21 C0 8B     10 ld hl,Ctrl_0
 185+ 9AA6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AA8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AA8              ; 																	; _ en el caso de que no lo haya.
 188+ 9AA8 3A B4 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AAB FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AAD 20 46        	jr nz,8F
 191+ 9AAF
 192+ 9AAF 3A C7 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AB2 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AB3 28 40        	jr z,8F
 195+ 9AB5
 196+ 9AB5              ; ---------- ---------- ----------
 197+ 9AB5              ;
 198+ 9AB5              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AB5
 200+ 9AB5 3A D9 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AB8 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9ABA 28 11        	jr z,1F
 203+ 9ABC 38 06        	jr c,6F
 204+ 9ABE FE 04        	cp 4
 205+ 9AC0 28 14        	jr z,7F
 206+ 9AC2 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AC4
 208+ 9AC4              ; ---------- ---------- ----------
 209+ 9AC4              ;
 210+ 9AC4              ; Perfiles de velocidad
 211+ 9AC4              ;
 212+ 9AC4
 213+ 9AC4 3A C7 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AC7 FE FE        	cp $fe
 215+ 9AC9 20 2A        	jr nz,8F
 216+ 9ACB 18 10        	jr 3F
 217+ 9ACD 3A C7 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AD0 FE FD        	cp $fd
 219+ 9AD2 20 21        	jr nz,8F
 220+ 9AD4 18 07        	jr 3F
 221+ 9AD6 3A C7 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AD9 FE FB        	cp $fb
 223+ 9ADB 20 18        	jr nz,8F
 224+ 9ADD
 225+ 9ADD              ; ---------- ---------- ----------
 226+ 9ADD
 227+ 9ADD              3
 228+ 9ADD CD 10 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AE0              ;	call Reinicio
 230+ 9AE0
 231+ 9AE0              ; ---------- ---------- ----------
 232+ 9AE0              ;
 233+ 9AE0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AE0
 235+ 9AE0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AE2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AE3 CD FC 9A     	call DESPLZ_DER
 238+ 9AE6 C1           	pop bc
 239+ 9AE7 10 F9        	djnz 5B
 240+ 9AE9 2A C3 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AEC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AED 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9AF0 CD D5 94     	call Genera_coordenadas
 244+ 9AF3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AF5
 246+ 9AF5              ; ---------- ---------- ----------
 247+ 9AF5
 248+ 9AF5 2A C3 8B     8 ld hl,(Posicion_actual)
 249+ 9AF8 CD FC 9A     	call DESPLZ_DER
 250+ 9AFB C9           2 ret
 251+ 9AFC
 252+ 9AFC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AFC              ;
 254+ 9AFC              ;	22/9/22
 255+ 9AFC              ;
 256+ 9AFC
 257+ 9AFC CD 0B 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9AFF CD 57 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B02 CD 80 9B         call Ciclo_completo
 260+ 9B05 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B08 CB FE        	set 7,(hl)
 262+ 9B0A C9           	ret
 263+ 9B0B
 264+ 9B0B              ; ******************************************************************************************************************************************************************************************
 265+ 9B0B              ;	15/02/23
 266+ 9B0B              ;
 267+ 9B0B
 268+ 9B0B 3A D9 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B0E 47           	ld b,a
 270+ 9B0F 2A CC 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B12 23           1 inc hl
 272+ 9B13 23           	inc hl
 273+ 9B14 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B16 22 CC 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B19 CD B6 90     	call Extrae_address
 276+ 9B1C 22 C5 8B     	ld (Puntero_objeto),hl
 277+ 9B1F
 278+ 9B1F              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B1F
 280+ 9B1F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B1F              ; Cuántos movimientos hemos hecho ??
 282+ 9B1F              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B1F
 284+ 9B1F 2A C8 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B22 EB           	ex de,hl
 286+ 9B23 A7           	and a
 287+ 9B24 ED 52        	sbc hl,de
 288+ 9B26 CB 3D        	srl l
 289+ 9B28 3E 08        6 ld a,8
 290+ 9B2A 95           	sub l
 291+ 9B2B 30 1E        	jr nc,3F
 292+ 9B2D
 293+ 9B2D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B2D              ; B="0".
 295+ 9B2D
 296+ 9B2D 04           4 inc b
 297+ 9B2E 3C           	inc a
 298+ 9B2F 20 FC        	jr nz,4B
 299+ 9B31 78           	ld a,b
 300+ 9B32 08           	ex af,af
 301+ 9B33 2A C8 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B36 23           5 inc hl
 303+ 9B37 23           	inc hl
 304+ 9B38 10 FC        	djnz 5B
 305+ 9B3A 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B3D CD B6 90     	call Extrae_address
 307+ 9B40 22 C5 8B     	ld (Puntero_objeto),hl
 308+ 9B43
 309+ 9B43              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B43              ; _(Posicion_actual).
 311+ 9B43
 312+ 9B43 21 C3 8B     	ld hl,Posicion_actual
 313+ 9B46 34           	inc (hl)
 314+ 9B47 08               ex af,af
 315+ 9B48 6F           	ld l,a
 316+ 9B49 18 DD        	jr 6B
 317+ 9B4B
 318+ 9B4B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B4B
 320+ 9B4B 47           3 ld b,a
 321+ 9B4C 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B4F 23           2 inc hl
 323+ 9B50 23           	inc hl
 324+ 9B51 10 FC        	djnz 2B
 325+ 9B53 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B56 C9           8 ret
 327+ 9B57
 328+ 9B57              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B57              ;
 330+ 9B57              ;	24/7/22
 331+ 9B57              ;
 332+ 9B57              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B57              ;
 334+ 9B57              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B57              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B57              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B57
 338+ 9B57 3A C7 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B5A A7           	and a
 340+ 9B5B 20 1F        	jr nz,1F
 341+ 9B5D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B5F 32 C7 8B         ld (CTRL_DESPLZ),a
 343+ 9B62
 344+ 9B62 21 C2 8B     	ld hl,Columns
 345+ 9B65 34           	inc (hl)
 346+ 9B66 3A D2 8B     	ld a,(Cuad_objeto)
 347+ 9B69 E6 01        	and 1
 348+ 9B6B 28 0F        	jr z,1F
 349+ 9B6D 2A C3 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B70 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B71 22 C3 8B     	ld (Posicion_actual),hl
 352+ 9B74 CD D5 94     	call Genera_coordenadas
 353+ 9B77 CD DC 9C     	call Inc_CTRL_DESPLZ
 354+ 9B7A 18 03        	jr 2F
 355+ 9B7C CD DC 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B7F C9           2 ret
 357+ 9B80
 358+ 9B80              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B80              ;
 360+ 9B80              ;	24/7/22
 361+ 9B80              ;
 362+ 9B80              ;	Ciclo_completo.
 363+ 9B80              ;
 364+ 9B80              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B80              ;
 366+ 9B80              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B80              ; 	Decrementamos (Columns).
 368+ 9B80              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B80              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B80
 371+ 9B80
 372+ 9B80 3A C7 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B83 FE FF        	cp $ff
 374+ 9B85 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B87 E6 F0        	and $f0
 376+ 9B89 20 28        	jr nz,3F
 377+ 9B8B
 378+ 9B8B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B8B
 380+ 9B8B 3A C7 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B8E 47           	ld b,a
 382+ 9B8F 3E F8        	ld a,$f8
 383+ 9B91 80           	add b
 384+ 9B92 32 C7 8B     	ld (CTRL_DESPLZ),a
 385+ 9B95 18 1C        	jr 3F
 386+ 9B97 21 C2 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B9A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B9B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B9C 32 C7 8B     	ld (CTRL_DESPLZ),a
 390+ 9B9F 3A D2 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BA2 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BA4 20 0A        	jr nz,2F
 393+ 9BA6 2A C3 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BA9 23           	inc hl
 395+ 9BAA 22 C3 8B     	ld (Posicion_actual),hl
 396+ 9BAD CD D5 94     	call Genera_coordenadas
 397+ 9BB0
 398+ 9BB0              ; Inicia el puntero de Sprite.
 399+ 9BB0
 400+ 9BB0 CD CB 90     2 call Inicia_puntero_objeto_der
 401+ 9BB3 C9           3 ret
 402+ 9BB4
 403+ 9BB4              ; ******************************************************************************************************************************************************************************************
 404+ 9BB4              ;
 405+ 9BB4              ;	15/02/23
 406+ 9BB4              ;
 407+ 9BB4              ;	Mov_left.
 408+ 9BB4              ;
 409+ 9BB4              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BB4              ;
 411+ 9BB4              Mov_left
 412+ 9BB4
 413+ 9BB4 21 C0 8B     	ld hl,Ctrl_0
 414+ 9BB7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BB9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BB9              ; 																	; _ en el caso de que no lo haya.
 417+ 9BB9 3A C0 8B     	ld a,(Ctrl_0)
 418+ 9BBC CB 77        	bit 6,a
 419+ 9BBE 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BC0
 421+ 9BC0 CD D6 9C     	call Stop_Amadeus_left
 422+ 9BC3 C8           	ret z
 423+ 9BC4 20 4A        	jr nz,8F
 424+ 9BC6
 425+ 9BC6 3A B4 8B     11 ld a,(Coordenada_X)
 426+ 9BC9 A7           	and a
 427+ 9BCA 20 44        	jr nz,8F
 428+ 9BCC
 429+ 9BCC 3A C7 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BCF A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BD0 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BD2
 433+ 9BD2              ; ---------- ---------- ----------
 434+ 9BD2
 435+ 9BD2 3A D8 8B     	ld a,(Vel_left)
 436+ 9BD5 FE 02        	cp 2
 437+ 9BD7 28 0F        	jr z,1F
 438+ 9BD9 38 04        	jr c,6F
 439+ 9BDB FE 04        	cp 4
 440+ 9BDD 28 12        	jr z,7F
 441+ 9BDF
 442+ 9BDF              ; ---------- ---------- ----------
 443+ 9BDF
 444+ 9BDF 3A C7 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BE2 FE F8        	cp $f8
 446+ 9BE4 20 2A        	jr nz,8F
 447+ 9BE6 18 10        	jr 4F
 448+ 9BE8 3A C7 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BEB FE F9        	cp $f9
 450+ 9BED 20 21        	jr nz,8F
 451+ 9BEF 18 07        	jr 4F
 452+ 9BF1 3A C7 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BF4 FE FB        	cp $fb
 454+ 9BF6 20 18        	jr nz,8F
 455+ 9BF8
 456+ 9BF8              ; ---------- ---------- ----------
 457+ 9BF8
 458+ 9BF8              4
 459+ 9BF8 CD FE 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BFB              ;	call Reinicio
 461+ 9BFB
 462+ 9BFB              ; ---------- ---------- ----------
 463+ 9BFB
 464+ 9BFB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BFD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BFE
 467+ 9BFE              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BFE              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BFE
 470+ 9BFE CD 17 9C     	call DESPLZ_IZQ
 471+ 9C01 C1           	pop bc
 472+ 9C02 10 F9        	djnz 5B
 473+ 9C04 2A C3 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C07 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C08 22 C3 8B     	ld (Posicion_actual),hl
 476+ 9C0B CD D5 94     	call Genera_coordenadas
 477+ 9C0E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C10
 479+ 9C10              ; ---------- ---------- ----------
 480+ 9C10
 481+ 9C10              ; Movemos, no hay recolocación.
 482+ 9C10
 483+ 9C10 2A C3 8B     8 ld hl,(Posicion_actual)
 484+ 9C13 CD 17 9C     	call DESPLZ_IZQ
 485+ 9C16 C9           2 ret
 486+ 9C17
 487+ 9C17              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C17              ;
 489+ 9C17              ;	22/9/22
 490+ 9C17
 491+ 9C17              DESPLZ_IZQ
 492+ 9C17
 493+ 9C17 CD 26 9C     	call Desplaza_izquierda
 494+ 9C1A CD 72 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C1D CD 9A 9C     	call Ciclo_completo_2
 496+ 9C20 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C23 CB BE        	res 7,(hl)
 498+ 9C25 C9           	ret
 499+ 9C26
 500+ 9C26              Desplaza_izquierda
 501+ 9C26
 502+ 9C26 3A D8 8B     	ld a,(Vel_left)
 503+ 9C29 47           	ld b,a
 504+ 9C2A 2A CE 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C2D 23           1 inc hl
 506+ 9C2E 23           	inc hl
 507+ 9C2F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C31 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C34 CD B6 90     	call Extrae_address
 510+ 9C37 22 C5 8B     	ld (Puntero_objeto),hl
 511+ 9C3A
 512+ 9C3A              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C3A
 514+ 9C3A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C3A              ; Cuántos movimientos hemos hecho ??
 516+ 9C3A              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C3A
 518+ 9C3A 2A CA 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C3D EB           	ex de,hl
 520+ 9C3E A7           	and a
 521+ 9C3F ED 52        	sbc hl,de
 522+ 9C41 CB 3D        	srl l
 523+ 9C43 3E 08        6 ld a,8
 524+ 9C45 95           	sub l
 525+ 9C46 30 1E        	jr nc,3F
 526+ 9C48
 527+ 9C48              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C48              ; B="0".
 529+ 9C48
 530+ 9C48 04           4 inc b
 531+ 9C49 3C           	inc a
 532+ 9C4A 20 FC        	jr nz,4B
 533+ 9C4C 78           	ld a,b
 534+ 9C4D 08           	ex af,af
 535+ 9C4E 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C51 23           5 inc hl
 537+ 9C52 23           	inc hl
 538+ 9C53 10 FC        	djnz 5B
 539+ 9C55 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C58 CD B6 90     	call Extrae_address
 541+ 9C5B 22 C5 8B     	ld (Puntero_objeto),hl
 542+ 9C5E
 543+ 9C5E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C5E              ; _(Posicion_actual).
 545+ 9C5E
 546+ 9C5E 21 C3 8B     	ld hl,Posicion_actual
 547+ 9C61 35           	dec (hl)
 548+ 9C62 08           	ex af,af
 549+ 9C63 6F           	ld l,a
 550+ 9C64 18 DD        	jr 6B
 551+ 9C66
 552+ 9C66              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C66
 554+ 9C66 47           3 ld b,a
 555+ 9C67 2A C8 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C6A 23           2 inc hl
 557+ 9C6B 23           	inc hl
 558+ 9C6C 10 FC        	djnz 2B
 559+ 9C6E 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C71 C9           8 ret
 561+ 9C72
 562+ 9C72              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C72              ;
 564+ 9C72              ;	modifica_parametros_1er_DESPLZ
 565+ 9C72              ;
 566+ 9C72              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C72              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C72              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C72
 570+ 9C72 3A C7 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C75 A7           	and a
 572+ 9C76 20 1E        	jr nz,1F
 573+ 9C78 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C79 32 C7 8B         ld (CTRL_DESPLZ),a
 575+ 9C7C 21 C2 8B     	ld hl,Columns
 576+ 9C7F 34           	inc (hl)
 577+ 9C80 3A D2 8B     	ld a,(Cuad_objeto)
 578+ 9C83 E6 01        	and 1
 579+ 9C85 20 0F        	jr nz,1F
 580+ 9C87 2A C3 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C8A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C8B 22 C3 8B     	ld (Posicion_actual),hl
 583+ 9C8E CD D5 94     	call Genera_coordenadas
 584+ 9C91 CD ED 9C     	call Dec_CTRL_DESPLZ
 585+ 9C94 18 03        	jr 2F
 586+ 9C96 CD ED 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C99 C9           2 ret
 588+ 9C9A
 589+ 9C9A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C9A
 591+ 9C9A 3A C7 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C9D FE F7        	cp $f7
 593+ 9C9F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA1 30 2C        	jr nc,3F
 595+ 9CA3
 596+ 9CA3              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CA3
 598+ 9CA3 06 00        	ld b,0
 599+ 9CA5 04           4 inc b
 600+ 9CA6 3C           	inc a
 601+ 9CA7 FE F7        	cp $f7
 602+ 9CA9 20 FA        	jr nz,4B
 603+ 9CAB 3E FF        	ld a,$ff
 604+ 9CAD 90           	sub b
 605+ 9CAE 32 C7 8B     	ld (CTRL_DESPLZ),a
 606+ 9CB1 18 1C        	jr 3F
 607+ 9CB3
 608+ 9CB3              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CB3
 610+ 9CB3 21 C2 8B     1 ld hl,Columns
 611+ 9CB6 35           	dec (hl)
 612+ 9CB7 AF           	xor a
 613+ 9CB8 32 C7 8B     	ld (CTRL_DESPLZ),a
 614+ 9CBB 3A D2 8B     	ld a,(Cuad_objeto)
 615+ 9CBE E6 01        	and 1
 616+ 9CC0 28 0A        	jr z,2F
 617+ 9CC2 2A C3 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CC5 2B           	dec hl
 619+ 9CC6 22 C3 8B     	ld (Posicion_actual),hl
 620+ 9CC9 CD D5 94     	call Genera_coordenadas
 621+ 9CCC
 622+ 9CCC              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CCC
 624+ 9CCC CD DE 90     2 call Inicia_puntero_objeto_izq
 625+ 9CCF C9           3 ret
 626+ 9CD0
 627+ 9CD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CD0              ;
 629+ 9CD0              ;	19/10/22
 630+ 9CD0              ;
 631+ 9CD0              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CD0              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CD0
 634+ 9CD0 3A B4 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CD3 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CD5 C9           	ret
 637+ 9CD6
 638+ 9CD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CD6              ;
 640+ 9CD6              ;	19/10/22
 641+ 9CD6              ;
 642+ 9CD6              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CD6              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CD6
 645+ 9CD6 3A B4 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CD9 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CDB C9           	ret
 648+ 9CDC
 649+ 9CDC              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CDC              ;
 651+ 9CDC              ;	24/7/22
 652+ 9CDC              ;
 653+ 9CDC              ;	Inc_CTRL_DESPLZ
 654+ 9CDC              ;
 655+ 9CDC              ;
 656+ 9CDC              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CDC
 658+ 9CDC 21 C7 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CDF 3A D9 8B     	ld a,(Vel_right)
 660+ 9CE2 A7           	and a
 661+ 9CE3 28 06        	jr z,1F
 662+ 9CE5 47           	ld b,a
 663+ 9CE6 34           3 inc (hl)
 664+ 9CE7 10 FD        	djnz 3B
 665+ 9CE9 18 01        	jr 2F
 666+ 9CEB 34           1 inc (hl)
 667+ 9CEC C9           2 ret
 668+ 9CED
 669+ 9CED              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CED              ;
 671+ 9CED              ;	5/2/23
 672+ 9CED              ;
 673+ 9CED              ;	Dec_CTRL_DESPLZ
 674+ 9CED              ;
 675+ 9CED              ;
 676+ 9CED              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CED
 678+ 9CED 21 C7 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CF0 3A D8 8B     	ld a,(Vel_left)
 680+ 9CF3 A7           	and a
 681+ 9CF4 28 06        	jr z,1F
 682+ 9CF6 47           	ld b,a
 683+ 9CF7 35           3 dec (hl)
 684+ 9CF8 10 FD        	djnz 3B
 685+ 9CFA 18 01        	jr 2F
 686+ 9CFC 35           1 dec (hl)
 687+ 9CFD C9           2 ret
 688+ 9CFE
 689+ 9CFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CFE
 691+ 9CFE 2A C3 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D01 01 1F 00     	ld bc,31
 693+ 9D04 A7           	and a
 694+ 9D05 ED 4A        	adc hl,bc
 695+ 9D07 22 C3 8B     	ld (Posicion_actual),hl
 696+ 9D0A 21 C0 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D0D CB C6        	set 0,(hl)
 698+ 9D0F C9           	ret
 699+ 9D10
 700+ 9D10              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D10
 702+ 9D10 2A C3 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D13 01 1F 00     	ld bc,31
 704+ 9D16 A7           	and a
 705+ 9D17 ED 42        	sbc hl,bc
 706+ 9D19 22 C3 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D1C 21 C0 8B     	ld hl,Ctrl_0
 708+ 9D1F CB CE        	set 1,(hl)
 709+ 9D21 C9           	ret
 710+ 9D22
 711+ 9D22              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D22
 713+ 9D22 24           Reaparece_abajo inc h
 714+ 9D23 01 E0 17     	ld bc,$17e0
 715+ 9D26 A7           	and a
 716+ 9D27 ED 4A        	adc hl,bc
 717+ 9D29 22 C3 8B     	ld (Posicion_actual),hl
 718+ 9D2C 21 C0 8B     	ld hl,Ctrl_0
 719+ 9D2F CB D6        	set 2,(hl)
 720+ 9D31 C9           	ret
 721+ 9D32
 722+ 9D32              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D32
 724+ 9D32 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D35 A7           	and a
 726+ 9D36 ED 42        	sbc hl,bc
 727+ 9D38 22 C3 8B     	ld (Posicion_actual),hl
 728+ 9D3B 21 C0 8B     	ld hl,Ctrl_0
 729+ 9D3E CB DE        	set 3,(hl)
 730+ 9D40 C9           	ret
 731+ 9D41
 732+ 9D41              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D41              ;
 734+ 9D41              ;	15/07/23
 735+ 9D41
 736+ 9D41              Reinicio
 737+ 9D41
 738+ 9D41              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D41
 740+ 9D41 AF           	xor a
 741+ 9D42 21 E8 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D45 CD 63 9D     	call Limpia_contenido_hl
 743+ 9D48
 744+ 9D48 21 C3 8B     	ld hl,Posicion_actual
 745+ 9D4B CD 63 9D     	call Limpia_contenido_hl
 746+ 9D4E
 747+ 9D4E CD B7 92     	call Inicializa_Puntero_indice_mov
 748+ 9D51 CD 62 9E     	call Inicia_Puntero_mov
 749+ 9D54
 750+ 9D54 21 EA 8B     	ld hl,Incrementa_puntero
 751+ 9D57 06 05        	ld b,5
 752+ 9D59 77           1 ld (hl),a
 753+ 9D5A 23           	inc hl
 754+ 9D5B 10 FC        	djnz 1B
 755+ 9D5D
 756+ 9D5D 21 BF 8B     	ld hl,Ctrl_2
 757+ 9D60 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D62
 759+ 9D62 C9           	ret
 760+ 9D63
 761+ 9D63 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D64 23           	inc hl
 763+ 9D65 77           	ld (hl),a
 764+ 9D66 C9           	ret
 765+ 9D67
 766+ 9D67              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D67              ;
 768+ 9D67              ;	18/6/24
 769+ 9D67              ;
 770+ 9D67
 771+ 9D67              Amadeus_a_izquierda
 772+ 9D67
 773+ 9D67              ;	Actualiza contador de movimientos.
 774+ 9D67
 775+ 9D67 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D6A 35           	dec (hl)
 777+ 9D6B 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D6D
 779+ 9D6D 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D70 2B           	dec hl
 781+ 9D71 2B           	dec hl
 782+ 9D72 2B           	dec hl
 783+ 9D73 2B           	dec hl
 784+ 9D74 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D77
 786+ 9D77 21 28 8C     	ld hl,Ctrl_3
 787+ 9D7A CB EE        	set 5,(hl)
 788+ 9D7C
 789+ 9D7C C9           	ret
 790+ 9D7D
 791+ 9D7D 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D7E C9           	ret
 793+ 9D7F
 794+ 9D7F
 795+ 9D7F              Amadeus_a_derecha
 796+ 9D7F
 797+ 9D7F              ;	Actualiza contador de movimientos.
 798+ 9D7F
 799+ 9D7F 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D82 34           	inc (hl)
 801+ 9D83 3E 7A        	ld a,$7a
 802+ 9D85 BE           	cp (hl)
 803+ 9D86 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D88
 805+ 9D88 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D8B 23           	inc hl
 807+ 9D8C 23           	inc hl
 808+ 9D8D 23           	inc hl
 809+ 9D8E 23           	inc hl
 810+ 9D8F 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D92
 812+ 9D92 21 28 8C     	ld hl,Ctrl_3
 813+ 9D95 CB EE        	set 5,(hl)
 814+ 9D97 C9           	ret
 815+ 9D98
 816+ 9D98 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D99 C9           	ret
# file closed: Direcciones.asm
2052  9D9A              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D9A              ; ----- ----- ----- ----- -----
   2+ 9D9A              ;
   3+ 9D9A              ;   28/12/23
   4+ 9D9A
   5+ 9D9A              Movimiento
   6+ 9D9A
   7+ 9D9A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D9A
   9+ 9D9A 3A BF 8B         ld a,(Ctrl_2)
  10+ 9D9D CB 57            bit 2,a
  11+ 9D9F 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA1
  13+ 9DA1 2A E6 8B         ld hl,(Puntero_mov)
  14+ 9DA4 7E               ld a,(hl)
  15+ 9DA5
  16+ 9DA5              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DA5
  18+ 9DA5              Inicia_desplazamiento.
  19+ 9DA5
  20+ 9DA5              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DA5
  22+ 9DA5 CD 98 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DA8
  24+ 9DA8              ; Iniciamos (Repetimos_mov).
  25+ 9DA8
  26+ 9DA8 7E               ld a,(hl)
  27+ 9DA9 E6 0F            and $0f
  28+ 9DAB 32 EC 8B         ld (Repetimos_desplazamiento),a
  29+ 9DAE 32 ED 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB1
  31+ 9DB1              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB1
  33+ 9DB1 23               inc hl
  34+ 9DB2 7E               ld a,(hl)
  35+ 9DB3 32 EF 8B         ld (Cola_de_desplazamiento),a
  36+ 9DB6 2B               dec hl
  37+ 9DB7
  38+ 9DB7 21 BF 8B         ld hl,Ctrl_2
  39+ 9DBA CB D6            set 2,(hl)
  40+ 9DBC
  41+ 9DBC              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DBC              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DBC
  44+ 9DBC              Desplazamiento_iniciado
  45+ 9DBC
  46+ 9DBC CD 6C 9E         call Aplica_desplazamiento
  47+ 9DBF
  48+ 9DBF              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DBF
  50+ 9DBF 3A 28 8C         ld a,(Ctrl_3)
  51+ 9DC2 CB 4F            bit 1,a
  52+ 9DC4 C0               ret nz
  53+ 9DC5
  54+ 9DC5 21 EC 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DC8 35               dec (hl)
  56+ 9DC9 C0               ret nz
  57+ 9DCA
  58+ 9DCA              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DCA              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DCA              ; Analiza (Cola_de_desplazamiento).
  61+ 9DCA
  62+ 9DCA 3A EF 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DCD A7               and a
  64+ 9DCE CC C1 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD1 28 30            jr z,Reinicia_el_movimiento
  66+ 9DD3
  67+ 9DD3 FE FF            cp $ff
  68+ 9DD5 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DD7
  70+ 9DD7 FE FE            cp $fe
  71+ 9DD9 CC 46 9E         call z,Fijamos_bucle
  72+ 9DDC 28 25            jr z,Reinicia_el_movimiento
  73+ 9DDE
  74+ 9DDE FE FD            cp $fd
  75+ 9DE0 20 11            jr nz,1F
  76+ 9DE2
  77+ 9DE2              ; ---
  78+ 9DE2              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DE2
  80+ 9DE2 3A BF 8B         ld a,(Ctrl_2)
  81+ 9DE5 CB 5F            bit 3,a
  82+ 9DE7 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DE9
  84+ 9DE9              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DE9
  86+ 9DE9 21 BF 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DEC CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DEE
  89+ 9DEE CD 57 9E         call Inicia_Repetimos_movimiento
  90+ 9DF1 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DF3              ; ---
  92+ 9DF3
  93+ 9DF3 FE 01        1 cp 1
  94+ 9DF5 CA 30 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DF8
  96+ 9DF8 3D               dec a
  97+ 9DF9 32 EF 8B         ld (Cola_de_desplazamiento),a
  98+ 9DFC
  99+ 9DFC 3A ED 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DFF 32 EC 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E02              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E02 C9               ret
 103+ 9E03
 104+ 9E03              Reinicia_el_movimiento
 105+ 9E03
 106+ 9E03 3A BF 8B         ld a,(Ctrl_2)
 107+ 9E06 CB 5F            bit 3,a
 108+ 9E08 28 1B            jr z,2F
 109+ 9E0A
 110+ 9E0A              ; (Cola_de_desplazamiento)="254".
 111+ 9E0A
 112+ 9E0A 21 EE 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E0D 35               dec (hl)
 114+ 9E0E 20 15            jr nz,2F
 115+ 9E10
 116+ 9E10              ; Fin de las repeticiones del último movimiento.
 117+ 9E10
 118+ 9E10 21 BF 8B         ld hl,Ctrl_2
 119+ 9E13 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E15
 121+ 9E15 2A E6 8B         ld hl,(Puntero_mov)
 122+ 9E18 23               inc hl
 123+ 9E19 23               inc hl
 124+ 9E1A 23               inc hl
 125+ 9E1B 22 E6 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E1E              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E1E 7E               ld a,(hl)
 128+ 9E1F 32 EF 8B         ld (Cola_de_desplazamiento),a
 129+ 9E22
 130+ 9E22 C3 CA 9D         jp Cola
 131+ 9E25
 132+ 9E25 CD 62 9E     2 call Inicia_Puntero_mov
 133+ 9E28
 134+ 9E28 21 BF 8B         ld hl,Ctrl_2
 135+ 9E2B CB 96            res 2,(hl)
 136+ 9E2D
 137+ 9E2D C3 9A 9D         jp Movimiento
 138+ 9E30
 139+ 9E30              Siguiente_desplazamiento
 140+ 9E30
 141+ 9E30              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E30              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E30
 144+ 9E30 21 BF 8B         ld hl,Ctrl_2
 145+ 9E33 CB 96            res 2,(hl)
 146+ 9E35
 147+ 9E35 2A E6 8B         ld hl,(Puntero_mov)
 148+ 9E38 23               inc hl
 149+ 9E39 23               inc hl
 150+ 9E3A 22 E6 8B         ld (Puntero_mov),hl
 151+ 9E3D
 152+ 9E3D 7E               ld a,(hl)
 153+ 9E3E A7               and a
 154+ 9E3F CC C1 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E42 CA 03 9E         jp z,Reinicia_el_movimiento
 156+ 9E45
 157+ 9E45 C9               ret
 158+ 9E46
 159+ 9E46              ; Subrutinas -----------------------------------------
 160+ 9E46              ; ---------- --------- --------- ---------- ----------
 161+ 9E46              ;
 162+ 9E46              ;   24/07/23
 163+ 9E46              ;
 164+ 9E46              ;   Fijamos_bucle
 165+ 9E46              ;
 166+ 9E46              ;
 167+ 9E46
 168+ 9E46              Fijamos_bucle
 169+ 9E46
 170+ 9E46 3A EA 8B         ld a,(Incrementa_puntero)
 171+ 9E49 3C               inc a
 172+ 9E4A 32 EB 8B         ld (Incrementa_puntero_backup),a
 173+ 9E4D
 174+ 9E4D CD C1 9E         call Incrementa_Puntero_indice_mov
 175+ 9E50 2A E4 8B         ld hl,(Puntero_indice_mov)
 176+ 9E53 22 E8 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E56 C9               ret
 178+ 9E57
 179+ 9E57              ; ---------- --------- --------- ---------- ----------
 180+ 9E57              ;
 181+ 9E57              ;   07/7/23
 182+ 9E57              ;
 183+ 9E57              ;   Inicia_Repetimos_movimiento
 184+ 9E57              ;
 185+ 9E57              ;
 186+ 9E57
 187+ 9E57              Inicia_Repetimos_movimiento
 188+ 9E57
 189+ 9E57              ; Iniciamos (Repetimos_movimiento).
 190+ 9E57
 191+ 9E57 DD 2A E6 8B      ld ix,(Puntero_mov)
 192+ 9E5B DD 7E 02         ld a,(ix+2)
 193+ 9E5E 32 EE 8B         ld (Repetimos_movimiento),a
 194+ 9E61
 195+ 9E61 C9               ret
 196+ 9E62
 197+ 9E62              ; ---------- --------- --------- ---------- ----------
 198+ 9E62              ;
 199+ 9E62              ;   26/6/23
 200+ 9E62              ;
 201+ 9E62              ;   Inicia_Puntero_mov
 202+ 9E62              ;
 203+ 9E62              ;
 204+ 9E62
 205+ 9E62 2A E4 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E65 CD B6 90         call Extrae_address
 207+ 9E68 22 E6 8B         ld (Puntero_mov),hl
 208+ 9E6B C9               ret
 209+ 9E6C
 210+ 9E6C              ; ---------- --------- --------- ---------- ----------
 211+ 9E6C              ;
 212+ 9E6C              ;   27/06/23
 213+ 9E6C              ;
 214+ 9E6C              ;   Aplica_movimiento.
 215+ 9E6C
 216+ 9E6C              Aplica_desplazamiento
 217+ 9E6C
 218+ 9E6C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E6C
 220+ 9E6C 2A E6 8B         ld hl, (Puntero_mov)
 221+ 9E6F
 222+ 9E6F 7E               ld a,(hl)
 223+ 9E70 E6 F0            and $f0
 224+ 9E72 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E73
 226+ 9E73 CB 7E            bit 7,(hl)
 227+ 9E75 28 03            jr z,1F
 228+ 9E77 CD 4E 9A         call Mov_up
 229+ 9E7A 2A E6 8B     1 ld hl, (Puntero_mov)
 230+ 9E7D CB 76            bit 6,(hl)
 231+ 9E7F 28 03            jr z,2F
 232+ 9E81 CD 15 9A         call Mov_down
 233+ 9E84
 234+ 9E84              ; Se ha aplicado reinicio ???
 235+ 9E84              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E84
 237+ 9E84              ;    ld a,(Ctrl_3)
 238+ 9E84              ;    bit 1,a
 239+ 9E84              ;    ret nz
 240+ 9E84
 241+ 9E84 2A E6 8B     2 ld hl, (Puntero_mov)
 242+ 9E87 CB 6E            bit 5,(hl)
 243+ 9E89 28 03            jr z,3F
 244+ 9E8B CD B4 9B         call Mov_left
 245+ 9E8E 2A E6 8B     3 ld hl, (Puntero_mov)
 246+ 9E91 CB 66            bit 4,(hl)
 247+ 9E93 C8               ret z
 248+ 9E94 CD 91 9A         call Mov_right
 249+ 9E97 C9               ret
 250+ 9E98
 251+ 9E98              ; ---------- --------- --------- ---------- ----------
 252+ 9E98              ;
 253+ 9E98              ;   26/06/23
 254+ 9E98              ;
 255+ 9E98              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E98
 257+ 9E98              Ajusta_velocidad_desplazamiento
 258+ 9E98
 259+ 9E98              ; 1er byte de la cadena de movimiento.
 260+ 9E98              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E98
 262+ 9E98 CD B6 9E         call Extrae_nibble_alto
 263+ 9E9B
 264+ 9E9B 32 DA 8B         ld (Vel_up),a
 265+ 9E9E 79               ld a,c
 266+ 9E9F E6 0F            and $0f
 267+ 9EA1 32 DB 8B         ld (Vel_down),a
 268+ 9EA4
 269+ 9EA4              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EA4              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EA4
 272+ 9EA4 23               inc hl
 273+ 9EA5 CD B6 9E         call Extrae_nibble_alto
 274+ 9EA8
 275+ 9EA8 32 D8 8B         ld (Vel_left),a
 276+ 9EAB 79               ld a,c
 277+ 9EAC E6 0F            and $0f
 278+ 9EAE 32 D9 8B         ld (Vel_right),a
 279+ 9EB1
 280+ 9EB1              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB1
 282+ 9EB1 23               inc hl
 283+ 9EB2 22 E6 8B         ld (Puntero_mov),hl
 284+ 9EB5 C9               ret
 285+ 9EB6
 286+ 9EB6 06 04        Extrae_nibble_alto ld b,4
 287+ 9EB8 7E               ld a,(hl)
 288+ 9EB9 4F               ld c,a
 289+ 9EBA E6 F0            and $f0
 290+ 9EBC CB 3F        1 srl a
 291+ 9EBE 10 FC            djnz 1B
 292+ 9EC0 C9               ret
 293+ 9EC1
 294+ 9EC1              ; ---------- --------- --------- ---------- ----------
 295+ 9EC1              ;
 296+ 9EC1              ;   5/7/23
 297+ 9EC1              ;
 298+ 9EC1              ;   Incrementa_Puntero_indice_mov
 299+ 9EC1
 300+ 9EC1              Incrementa_Puntero_indice_mov
 301+ 9EC1
 302+ 9EC1 21 EA 8B         ld hl,Incrementa_puntero
 303+ 9EC4 34               inc (hl)
 304+ 9EC5
 305+ 9EC5 2A E4 8B         ld hl,(Puntero_indice_mov)
 306+ 9EC8 01 02 00         ld bc,2
 307+ 9ECB A7               and a
 308+ 9ECC 09               add hl,bc
 309+ 9ECD 22 E4 8B         ld (Puntero_indice_mov),hl
 310+ 9ED0
 311+ 9ED0 7E               ld a,(hl)
 312+ 9ED1 A7               and a
 313+ 9ED2
 314+ 9ED2              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ED2
 316+ 9ED2              ;    jr z,$
 317+ 9ED2
 318+ 9ED2              ;! Reinicia el Patrón de movimiento.
 319+ 9ED2
 320+ 9ED2 CC D7 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ED5
 322+ 9ED5 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ED6
 324+ 9ED6 C9               ret
 325+ 9ED7
 326+ 9ED7              ; ---------- --------- --------- ---------- ----------
 327+ 9ED7              ;
 328+ 9ED7              ;   15/01/24
 329+ 9ED7              ;
 330+ 9ED7              ;   Inicializa_Puntero_indice_mov
 331+ 9ED7
 332+ 9ED7              Inicializa_Puntero_indice_mov_2
 333+ 9ED7
 334+ 9ED7              ; Existe etiqueta de bucle principal???
 335+ 9ED7
 336+ 9ED7 2A E8 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EDA 24               inc h
 338+ 9EDB 25               dec h
 339+ 9EDC 28 05            jr z,2F
 340+ 9EDE
 341+ 9EDE 22 E4 8B         ld (Puntero_indice_mov),hl
 342+ 9EE1 18 14            jr 3F
 343+ 9EE3
 344+ 9EE3              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EE3
 346+ 9EE3 3A EA 8B     2 ld a,(Incrementa_puntero)
 347+ 9EE6 47               ld b,a
 348+ 9EE7
 349+ 9EE7 2A E4 8B         ld hl,(Puntero_indice_mov)
 350+ 9EEA 2B           1 dec hl
 351+ 9EEB 2B               dec hl
 352+ 9EEC 10 FC            djnz 1B
 353+ 9EEE 22 E4 8B         ld (Puntero_indice_mov),hl
 354+ 9EF1
 355+ 9EF1 AF               xor a
 356+ 9EF2 32 EA 8B         ld (Incrementa_puntero),a
 357+ 9EF5 18 06            jr 4F
 358+ 9EF7
 359+ 9EF7 3A EB 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EFA 32 EA 8B         ld (Incrementa_puntero),a
 361+ 9EFD C9           4 ret
 362+ 9EFE
 363+ 9EFE              ; ----------------------------------------------------------------------
 364+ 9EFE              ;
 365+ 9EFE              ;   30/01/24
 366+ 9EFE              ;
 367+ 9EFE              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EFE
 369+ 9EFE 3A B3 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F01 CD 52 94         call Calcula_salto_en_BC
 371+ 9F04 21 DC 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F07 A7               and a
 373+ 9F08 ED 4A            adc hl,bc
 374+ 9F0A C9               ret
 375+ 9F0B
 376+ 9F0B              ; ----------------------------------------------------------------------
 377+ 9F0B              ;
 378+ 9F0B              ;   30/01/24
 379+ 9F0B              ;
 380+ 9F0B              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F0B              ;
 382+ 9F0B              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F0B
 384+ 9F0B 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F0C 23               inc hl
 386+ 9F0D 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F0E 69               ld l,c
 388+ 9F0F 60               ld h,b
 389+ 9F10 22 BC 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F13 C9               ret
 391+ 9F14
# file closed: Movimiento.asm
2053  9F14              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F14              ; --------------------------------------------------------------------------------------
   2+ 9F14              ;
   3+ 9F14              ;   25/10/24
   4+ 9F14              ;
   5+ 9F14
   6+ 9F14              Pinta_disparos_Entidades
   7+ 9F14
   8+ 9F14 ED 73 00 8C      ld (Stack),sp
   9+ 9F18 ED 7B 12 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F1C
  11+ 9F1C 3E 02            ld a,2
  12+ 9F1E 08               ex af,af
  13+ 9F1F
  14+ 9F1F 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F21              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F21              ;                                     _ No encontraría "0".
  17+ 9F21 FD E1        4 pop iy
  18+ 9F23 D1               pop de                          ; 1er .db IYL
  19+ 9F24              ;                                   ; 2º  .db IYH
  20+ 9F24              ;                                   ; 3er .db E.
  21+ 9F24              ;   Album vacío ???
  22+ 9F24
  23+ 9F24 FD 7D            ld a,iyl
  24+ 9F26 FD 84            add iyh
  25+ 9F28 83               add e
  26+ 9F29 28 1F            jr z,1F
  27+ 9F2B
  28+ 9F2B              ;   Imprime album, (contiene datos).
  29+ 9F2B
  30+ 9F2B 3B               dec sp
  31+ 9F2C
  32+ 9F2C E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F2D
  34+ 9F2D              ; Imprime el 1er scanline del disparo.
  35+ 9F2D
  36+ 9F2D FD 7D            ld a,iyl
  37+ 9F2F AE               xor (hl)
  38+ 9F30 77               ld (hl),a
  39+ 9F31
  40+ 9F31 2C               inc l
  41+ 9F32
  42+ 9F32 FD 7C            ld a,iyh
  43+ 9F34 AE               xor (hl)
  44+ 9F35 77               ld (hl),a
  45+ 9F36
  46+ 9F36 2C               inc l
  47+ 9F37
  48+ 9F37 7B               ld a,e
  49+ 9F38 AE               xor (hl)
  50+ 9F39 77               ld (hl),a
  51+ 9F3A
  52+ 9F3A              ; Imprime el 2º scanline del disparo.
  53+ 9F3A
  54+ 9F3A E1               pop hl
  55+ 9F3B
  56+ 9F3B FD 7D            ld a,iyl
  57+ 9F3D AE               xor (hl)
  58+ 9F3E 77               ld (hl),a
  59+ 9F3F
  60+ 9F3F 2C               inc l
  61+ 9F40
  62+ 9F40 FD 7C            ld a,iyh
  63+ 9F42 AE               xor (hl)
  64+ 9F43 77               ld (hl),a
  65+ 9F44
  66+ 9F44 2C               inc l
  67+ 9F45
  68+ 9F45 7B               ld a,e
  69+ 9F46 AE               xor (hl)
  70+ 9F47 77               ld (hl),a
  71+ 9F48
  72+ 9F48 10 D7            djnz 4B
  73+ 9F4A
  74+ 9F4A 08           1 ex af,af
  75+ 9F4B 3D               dec a
  76+ 9F4C 20 05            jr nz,2F
  77+ 9F4E
  78+ 9F4E ED 7B 00 8C      ld sp,(Stack)
  79+ 9F52 C9               ret
  80+ 9F53
  81+ 9F53 ED 7B 10 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F57 08               ex af,af
  83+ 9F58 18 C5            jr 3B
  84+ 9F5A
  85+ 9F5A              ; --------------------------------------------------------------------------------------
  86+ 9F5A              ;
  87+ 9F5A              ;   15/10/24
  88+ 9F5A              ;
  89+ 9F5A
  90+ 9F5A              Motor_de_disparos_entidades
  91+ 9F5A
  92+ 9F5A 3A 18 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F5D FE 07            cp 7
  94+ 9F5F C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F60
  96+ 9F60 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F62 21 23 89         ld hl,Indice_de_disparos_entidades
  98+ 9F65
  99+ 9F65 CD B6 90     1 call Extrae_address
 100+ 9F68 1C               inc e
 101+ 9F69 1C               inc e
 102+ 9F6A ED 53 2B 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F6E
 104+ 9F6E               ; Caja vacía ???
 105+ 9F6E
 106+ 9F6E 2D               dec l
 107+ 9F6F 7E               ld a,(hl)
 108+ 9F70 A7               and a
 109+ 9F71 28 38            jr z,3F                                                              ; Caja vacía.
 110+ 9F73
 111+ 9F73              ; --- Trabajamos con caja:
 112+ 9F73
 113+ 9F73 2C               inc l
 114+ 9F74
 115+ 9F74 CD C1 9F         call Rota_disparo_si_procede
 116+ 9F77
 117+ 9F77              ; ------------------------------------------------------------
 118+ 9F77
 119+ 9F77 2D               dec l
 120+ 9F78 2D               dec l
 121+ 9F79
 122+ 9F79 CD B6 90         call Extrae_address
 123+ 9F7C
 124+ 9F7C              ;   (Puntero_de_impresion) del disparo en HL
 125+ 9F7C              ;   Hay que modificar el puntero de impresión ??? ---------------------
 126+ 9F7C
 127+ 9F7C 3A 2A 8C         ld a,(Ctrl_5)
 128+ 9F7F CB 57            bit 2,a
 129+ 9F81 28 09            jr z,4F
 130+ 9F83
 131+ 9F83 CB 97            res 2,a
 132+ 9F85 32 2A 8C         ld (Ctrl_5),a
 133+ 9F88 2C               inc l
 134+ 9F89 2C               inc l
 135+ 9F8A 18 0C            jr 5F
 136+ 9F8C
 137+ 9F8C CB 5F        4 bit 3,a
 138+ 9F8E 28 08            jr z,5F
 139+ 9F90
 140+ 9F90 CB 9F            res 3,a
 141+ 9F92 32 2A 8C         ld (Ctrl_5),a
 142+ 9F95 2D               dec l
 143+ 9F96 2D               dec l
 144+ 9F97 2D               dec l
 145+ 9F98
 146+ 9F98              ; ---------------------------------------------------------------------
 147+ 9F98
 148+ 9F98              ;! Velocidad del disparo de entidades.
 149+ 9F98
 150+ 9F98 CD CF 99     5 call NextScan
 151+ 9F9B CD CF 99         call NextScan
 152+ 9F9E
 153+ 9F9E              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 154+ 9F9E
 155+ 9F9E CD AF 9F         call Fin_de_disparo_de_entidad
 156+ 9FA1
 157+ 9FA1 EB               ex de,hl
 158+ 9FA2
 159+ 9FA2 73               ld (hl),e
 160+ 9FA3 23               inc hl
 161+ 9FA4 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 162+ 9FA5
 163+ 9FA5 2A 2B 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 164+ 9FA8 18 02            jr 2F
 165+ 9FAA
 166+ 9FAA C9               ret
 167+ 9FAB
 168+ 9FAB EB           3 ex de,hl
 169+ 9FAC 10 B7        2 djnz 1B
 170+ 9FAE
 171+ 9FAE C9               ret
 172+ 9FAF
 173+ 9FAF              ; ------------- ------------- ------------
 174+ 9FAF              ;
 175+ 9FAF              ;   25/9/24
 176+ 9FAF
 177+ 9FAF              Fin_de_disparo_de_entidad
 178+ 9FAF
 179+ 9FAF 7C               ld a,h
 180+ 9FB0 FE 54            cp $54
 181+ 9FB2 D8               ret c
 182+ 9FB3
 183+ 9FB3 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 184+ 9FB4
 185+ 9FB4 5D               ld e,l
 186+ 9FB5 54               ld d,h
 187+ 9FB6
 188+ 9FB6 21 E0 57         ld hl,$57e0
 189+ 9FB9 ED 52            sbc hl,de
 190+ 9FBB
 191+ 9FBB 38 5F            jr c,Elimina_disparo_entidad
 192+ 9FBD
 193+ 9FBD 6B               ld l,e
 194+ 9FBE 62               ld h,d
 195+ 9FBF
 196+ 9FBF D1               pop de
 197+ 9FC0
 198+ 9FC0 C9               ret
 199+ 9FC1
 200+ 9FC1              ; ----------------------------------------------------------
 201+ 9FC1              ;
 202+ 9FC1              ;   08/10/24
 203+ 9FC1
 204+ 9FC1              ;   Estructura de un disparo de entidades.
 205+ 9FC1
 206+ 9FC1              ;   Disparo_1 defw 0								; Puntero objeto.
 207+ 9FC1              ; 	defw 0											; Puntero de impresión.
 208+ 9FC1              ;	defw 0											; Control.
 209+ 9FC1
 210+ 9FC1              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 211+ 9FC1              ;   _de la entidad en el momento de disparar.
 212+ 9FC1
 213+ 9FC1              ;   El byte alto muestra la siguiente información:
 214+ 9FC1              ;
 215+ 9FC1              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 216+ 9FC1              ;                        _antes de desplazarse a derecha/izquierda.
 217+ 9FC1              ;
 218+ 9FC1              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 219+ 9FC1              ;
 220+ 9FC1              ;                        10xx ..... Izquierda.
 221+ 9FC1              ;                        01xx ..... Derecha.
 222+ 9FC1              ;                        00xx ..... Recto.
 223+ 9FC1
 224+ 9FC1              Rota_disparo_si_procede
 225+ 9FC1
 226+ 9FC1              ;   Nos situamos en el byte alto de (Control).
 227+ 9FC1
 228+ 9FC1 CB 76            bit 6,(hl)
 229+ 9FC3 20 2D            jr nz,Rota_a_derecha
 230+ 9FC5 CB 7E            bit 7,(hl)
 231+ 9FC7 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 232+ 9FC8
 233+ 9FC8              Rota_a_izq
 234+ 9FC8
 235+ 9FC8 E5               push hl
 236+ 9FC9
 237+ 9FC9 7D               ld a,l
 238+ 9FCA D6 05            sub 5
 239+ 9FCC 6F               ld l,a
 240+ 9FCD
 241+ 9FCD E5               push hl
 242+ 9FCE FD E1            pop iy
 243+ 9FD0
 244+ 9FD0 A7               and a
 245+ 9FD1
 246+ 9FD1 FD CB 02 16      rl (iy+02)
 247+ 9FD5 FD CB 01 16      rl (iy+01)
 248+ 9FD9 FD CB 00 16      rl (iy+00)
 249+ 9FDD
 250+ 9FDD 30 3B            jr nc,Exit
 251+ 9FDF
 252+ 9FDF              ; Desplazamiento completo hasta Carry.
 253+ 9FDF              ; Modificamos datos y decremento (Puntero_de_impresión).
 254+ 9FDF
 255+ 9FDF FD 36 02 03      ld (iy+02),$03
 256+ 9FE3 FD 36 01 00      ld (iy+01),$00
 257+ 9FE7 FD 36 00 00      ld (iy+00),$00
 258+ 9FEB
 259+ 9FEB 21 2A 8C         ld hl,Ctrl_5
 260+ 9FEE CB DE            set 3,(hl)
 261+ 9FF0
 262+ 9FF0 18 28            jr Exit
 263+ 9FF2
 264+ 9FF2              Rota_a_derecha
 265+ 9FF2
 266+ 9FF2 E5               push hl
 267+ 9FF3
 268+ 9FF3 7D               ld a,l
 269+ 9FF4 D6 05            sub 5
 270+ 9FF6 6F               ld l,a
 271+ 9FF7
 272+ 9FF7 E5               push hl
 273+ 9FF8 FD E1            pop iy
 274+ 9FFA
 275+ 9FFA A7               and a
 276+ 9FFB
 277+ 9FFB FD CB 00 1E      rr (iy+00)
 278+ 9FFF FD CB 01 1E      rr (iy+01)
 279+ A003 FD CB 02 1E      rr (iy+02)
 280+ A007
 281+ A007 30 11            jr nc,Exit
 282+ A009
 283+ A009              ; Desplazamiento completo hasta Carry.
 284+ A009              ; Modificamos datos e incremento (Puntero_de_impresión).
 285+ A009
 286+ A009 FD 36 00 01      ld (iy+00),$01
 287+ A00D FD 36 01 80      ld (iy+01),$80
 288+ A011 FD 36 02 00      ld (iy+02),$00
 289+ A015
 290+ A015 21 2A 8C         ld hl,Ctrl_5
 291+ A018 CB D6            set 2,(hl)
 292+ A01A
 293+ A01A E1           Exit pop hl
 294+ A01B C9               ret
 295+ A01C
 296+ A01C              ; ------------ ----------- ------------
 297+ A01C              ;
 298+ A01C              ;   25/9/24
 299+ A01C
 300+ A01C              Elimina_disparo_entidad
 301+ A01C
 302+ A01C 21 18 8C         ld hl,Numero_de_disparos_de_entidades
 303+ A01F 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 304+ A020
 305+ A020 E1               pop hl
 306+ A021 E5               push hl
 307+ A022
 308+ A022 2C               inc l
 309+ A023 2C               inc l
 310+ A024
 311+ A024 CD 2C A0         call Borra_6_bytes
 312+ A027
 313+ A027 D1               pop de
 314+ A028
 315+ A028 21 00 00         ld hl,0
 316+ A02B
 317+ A02B C9               ret
 318+ A02C
 319+ A02C              ; ----- ----- ----- ----- -----
 320+ A02C
 321+ A02C              Borra_6_bytes
 322+ A02C
 323+ A02C 16 06            ld d,6                                                    ; Contador
 324+ A02E AF               xor a                                                     ; Borrador
 325+ A02F 77           1 ld (hl),a
 326+ A030 2D               dec l
 327+ A031 15               dec d
 328+ A032 20 FB            jr nz,1B
 329+ A034
 330+ A034 C9               ret
 331+ A035
 332+ A035              ; --------------------------------------------------------------------------------------
 333+ A035              ;
 334+ A035              ;   12/10/24
 335+ A035              ;
 336+ A035
 337+ A035              Genera_datos_de_impresion_disparos_Entidades
 338+ A035
 339+ A035 3E 07            ld a,7
 340+ A037 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 341+ A038
 342+ A038              ; ---------------
 343+ A038
 344+ A038              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 345+ A038
 346+ A038 21 23 89          ld hl,Indice_de_disparos_entidades
 347+ A03B
 348+ A03B CD B6 90     1 call Extrae_address
 349+ A03E
 350+ A03E 13               inc de
 351+ A03F 13               inc de
 352+ A040
 353+ A040 ED 53 2B 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 354+ A044
 355+ A044 2D               dec l
 356+ A045 7E               ld a,(hl)
 357+ A046 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 358+ A047 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 359+ A049
 360+ A049              ; ----- ----- ----- -----
 361+ A049
 362+ A049 2D               dec l
 363+ A04A CD B6 90         call Extrae_address
 364+ A04D E5               push hl
 365+ A04E
 366+ A04E 1D               dec e
 367+ A04F
 368+ A04F EB               ex de,hl
 369+ A050
 370+ A050 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 371+ A051 2D               dec l
 372+ A052 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 373+ A053 2D               dec l
 374+ A054 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 375+ A055
 376+ A055 E1               pop hl                                                    ;? Puntero de impresión en HL.
 377+ A056
 378+ A056              Genera_scanlines_de_los_disparos_de_entidades.
 379+ A056
 380+ A056 FD 2A 14 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 381+ A05A FD 73 00         ld (iy+0),e
 382+ A05D FD 70 01         ld (iy+1),b
 383+ A060 FD 71 02         ld (iy+2),c
 384+ A063
 385+ A063 FD 75 03         ld (iy+3),l
 386+ A066 FD 74 04         ld (iy+4),h
 387+ A069
 388+ A069 CD CF 99         call NextScan
 389+ A06C
 390+ A06C FD 75 05         ld (iy+5),l
 391+ A06F FD 74 06         ld (iy+6),h
 392+ A072
 393+ A072 FD E5            push iy
 394+ A074 E1               pop hl
 395+ A075
 396+ A075 3E 07            ld a,7
 397+ A077 85               add l
 398+ A078 6F               ld l,a
 399+ A079
 400+ A079 22 14 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 401+ A07C
 402+ A07C              ; ----- ----- ----- -----
 403+ A07C
 404+ A07C              Situa_en_siguiente_caja
 405+ A07C
 406+ A07C 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 407+ A07D 3D               dec a
 408+ A07E C8               ret z
 409+ A07F
 410+ A07F 08               ex af,af
 411+ A080 2A 2B 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 412+ A083 18 B6            jr 1B
 413+ A085
 414+ A085              ; --------------------------------------------------------------------------------------
 415+ A085              ;
 416+ A085              ;   12/10/24
 417+ A085              ;
 418+ A085
 419+ A085              Genera_disparo_de_entidad_maldosa
 420+ A085
 421+ A085              ;   Estructura de un disparo de entidades.
 422+ A085
 423+ A085              ;   Disparo_1 defw 0								; Puntero objeto.
 424+ A085              ; 	defw 0											; Puntero de impresión.
 425+ A085              ;	defw 0											; Control.
 426+ A085
 427+ A085              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 428+ A085              ;   _de la entidad en el momento de disparar.
 429+ A085
 430+ A085              ;   El byte de control muestra la siguiente información:
 431+ A085
 432+ A085              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 433+ A085              ;
 434+ A085              ;                        10xx ..... Izquierda.
 435+ A085              ;                        01xx ..... Derecha.
 436+ A085              ;                        00xx ..... Recto.
 437+ A085
 438+ A085              ;*  Exclusiones.
 439+ A085
 440+ A085              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 441+ A085              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 442+ A085
 443+ A085 3A 18 8C         ld a,(Numero_de_disparos_de_entidades)
 444+ A088 A7               and a
 445+ A089 C8               ret z
 446+ A08A
 447+ A08A 3A B5 8B         ld a,(Coordenada_y)
 448+ A08D A7               and a
 449+ A08E C8               ret z
 450+ A08F
 451+ A08F 3D               dec a
 452+ A090 C8               ret z
 453+ A091
 454+ A091 FE 10            cp 16
 455+ A093 D0               ret nc
 456+ A094
 457+ A094              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 458+ A094              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 459+ A094              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 460+ A094
 461+ A094 21 1A 8C         ld hl,Permiso_de_disparo_Entidades
 462+ A097 35               dec (hl)                                            ; No más disparos en este FRAME.
 463+ A098
 464+ A098              ;   Decrementa el numero de disparos de entidades.
 465+ A098
 466+ A098 21 18 8C         ld hl,Numero_de_disparos_de_entidades
 467+ A09B 35               dec (hl)
 468+ A09C
 469+ A09C 21 23 89         ld hl,Indice_de_disparos_entidades
 470+ A09F
 471+ A09F CD B6 90     1 call Extrae_address
 472+ A0A2
 473+ A0A2 13               inc de
 474+ A0A3 13               inc de
 475+ A0A4
 476+ A0A4 ED 53 2B 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 477+ A0A8
 478+ A0A8              ;   Comprobamos si la caja está vacía.
 479+ A0A8
 480+ A0A8 2D               dec l
 481+ A0A9 7E               ld a,(hl)
 482+ A0AA A7               and a
 483+ A0AB 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 484+ A0AD 2C               inc l
 485+ A0AE
 486+ A0AE              ;   Caja vacía, vamos a generar un disparo.
 487+ A0AE              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 488+ A0AE
 489+ A0AE CD CF A0         call Genera_byte_inclinacion
 490+ A0B1
 491+ A0B1 7E               ld a,(hl)
 492+ A0B2 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 493+ A0B3
 494+ A0B3 2D               dec l
 495+ A0B4
 496+ A0B4 CD EB A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 497+ A0B7
 498+ A0B7 70               ld (hl),b
 499+ A0B8 2D               dec l
 500+ A0B9 71               ld (hl),c
 501+ A0BA
 502+ A0BA 2D               dec l
 503+ A0BB
 504+ A0BB              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 505+ A0BB
 506+ A0BB FD 7E 02         ld a,(iy+02)
 507+ A0BE 77               ld (hl),a
 508+ A0BF 2D               dec l
 509+ A0C0
 510+ A0C0 FD 7E 01         ld a,(iy+01)
 511+ A0C3 77               ld (hl),a
 512+ A0C4 2D               dec l
 513+ A0C5
 514+ A0C5 FD 7E 00         ld a,(iy+00)
 515+ A0C8 77               ld (hl),a
 516+ A0C9
 517+ A0C9 C9               ret
 518+ A0CA
 519+ A0CA              ;   --- --- ---
 520+ A0CA
 521+ A0CA              Situa_en_siguiente_disparo
 522+ A0CA
 523+ A0CA 2A 2B 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 524+ A0CD 18 D0            jr 1B
 525+ A0CF
 526+ A0CF              ; --------------------------------------------------------------------------------------
 527+ A0CF              ;
 528+ A0CF              ;   09/10/24
 529+ A0CF              ;
 530+ A0CF
 531+ A0CF              Genera_byte_inclinacion
 532+ A0CF
 533+ A0CF              ; Determina tendencia del disparo.
 534+ A0CF
 535+ A0CF 3A 6E 89         ld a,(CX_Amadeus)
 536+ A0D2 47               ld b,a
 537+ A0D3 3A B4 8B         ld a,(Coordenada_X)
 538+ A0D6 90               sub b
 539+ A0D7 38 07            jr c,Disparo_a_derecha
 540+ A0D9
 541+ A0D9 FE 06        Disparo_a_izquierda cp 6
 542+ A0DB
 543+ A0DB D8               ret c
 544+ A0DC C8               ret z
 545+ A0DD
 546+ A0DD CB FE            set 7,(hl)
 547+ A0DF C9               ret
 548+ A0E0
 549+ A0E0 47           Disparo_a_derecha ld b,a
 550+ A0E1 3E FF            ld a,$ff
 551+ A0E3 90               sub b
 552+ A0E4
 553+ A0E4 FE 05            cp 5
 554+ A0E6
 555+ A0E6 D8               ret c
 556+ A0E7 C8               ret z
 557+ A0E8
 558+ A0E8 CB F6            set 6,(hl)
 559+ A0EA C9               ret
 560+ A0EB
 561+ A0EB              ; --------------------------------------------------------------------------------------
 562+ A0EB              ;
 563+ A0EB              ;   09/10/24
 564+ A0EB              ;
 565+ A0EB
 566+ A0EB              Modifica_puntero_de_impresion
 567+ A0EB
 568+ A0EB              ;   Puntero de impresión del disparo en BC.
 569+ A0EB
 570+ A0EB E5               push hl
 571+ A0EC
 572+ A0EC 2A 2D 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 573+ A0EF CD CF 99         call NextScan
 574+ A0F2
 575+ A0F2 4D               ld c,l
 576+ A0F3 44               ld b,h
 577+ A0F4
 578+ A0F4 E1               pop hl
 579+ A0F5
 580+ A0F5 08               ex af,af
 581+ A0F6 CB 77            bit 6,a
 582+ A0F8 28 06            jr z,1F
 583+ A0FA
 584+ A0FA FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 585+ A0FE 0C               inc c
 586+ A0FF C9               ret
 587+ A100
 588+ A100 CB 7F        1 bit 7,a
 589+ A102 28 F6            jr z,2B
 590+ A104
 591+ A104 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 592+ A108 0D               dec c
 593+ A109
 594+ A109 C9               ret
 595+ A10A
 596+ A10A              ; --------------------------------------------------------------------------------------
 597+ A10A              ;
 598+ A10A              ;   31/08/24
 599+ A10A              ;
 600+ A10A
 601+ A10A              Compara_con_coordenadas_de_disparo
 602+ A10A
 603+ A10A 3A B5 8B         ld a,(Coordenada_y)
 604+ A10D 47               ld b,a
 605+ A10E 3A 32 8C         ld a,(Coordenadas_disparo_certero)
 606+ A111 90               sub b
 607+ A112
 608+ A112              ; A = "0" ok
 609+ A112              ; A = "1" ok
 610+ A112
 611+ A112 28 08            jr z,Comprueba_coordenada_X
 612+ A114 3D               dec a
 613+ A115 28 05            jr z,Comprueba_coordenada_X
 614+ A117
 615+ A117              ; A = "$ff" ok
 616+ A117
 617+ A117 FE FE            cp $fe
 618+ A119 28 01            jr z,Comprueba_coordenada_X
 619+ A11B
 620+ A11B C9               ret
 621+ A11C
 622+ A11C              Comprueba_coordenada_X
 623+ A11C
 624+ A11C 3A B4 8B         ld a,(Coordenada_X)
 625+ A11F 47               ld b,a
 626+ A120 21 33 8C         ld hl,Coordenadas_disparo_certero+1
 627+ A123 7E               ld a,(hl)
 628+ A124 90               sub b
 629+ A125
 630+ A125              ; A = "0" ok
 631+ A125              ; A = "1" ok
 632+ A125
 633+ A125 28 09            jr z,Activa_Impacto_en_entidad
 634+ A127 3D               dec a
 635+ A128 28 06            jr z,Activa_Impacto_en_entidad
 636+ A12A
 637+ A12A              ; A = "2" ok
 638+ A12A
 639+ A12A 3D               dec a
 640+ A12B 28 03            jr z,Activa_Impacto_en_entidad
 641+ A12D
 642+ A12D              ; A = "$ff"
 643+ A12D
 644+ A12D FE FD            cp $fd
 645+ A12F C0               ret nz
 646+ A130
 647+ A130              Activa_Impacto_en_entidad
 648+ A130
 649+ A130              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 650+ A130
 651+ A130 3E 02            ld a,2
 652+ A132 32 B7 8B         ld (Impacto),a
 653+ A135
 654+ A135              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 655+ A135
 656+ A135 11 C0 87         ld de,Indice_Explosion_entidades
 657+ A138 21 BA 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 658+ A13B
 659+ A13B 73               ld (hl),e
 660+ A13C 23               inc hl
 661+ A13D 72               ld (hl),d
 662+ A13E
 663+ A13E              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 664+ A13E
 665+ A13E 21 2F 8C         ld hl,Impacto2
 666+ A141 CB 9E            res 3,(hl)
 667+ A143
 668+ A143 C9               ret
 669+ A144
 670+ A144              ; --------------------------------------------------------------------------------------
 671+ A144              ;
 672+ A144              ;   13/10/24
 673+ A144              ;
 674+ A144
 675+ A144              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 676+ A144
 677+ A144              Limpia_album_de_pintado_disparos_Amadeus
 678+ A144
 679+ A144 2A 0C 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 680+ A147 06 06            ld b,6
 681+ A149 AF               xor a
 682+ A14A 77           1 ld (hl),a
 683+ A14B 2C               inc l
 684+ A14C 10 FC            djnz 1B
 685+ A14E
 686+ A14E C9               ret
 687+ A14F
 688+ A14F              ; --------------------------------------------------------------------------------------
 689+ A14F              ;
 690+ A14F              ;   29/09/24
 691+ A14F              ;
 692+ A14F
 693+ A14F              Calcula_bytes_pintado_disparos
 694+ A14F
 695+ A14F 2A 10 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 696+ A152 45               ld b,l
 697+ A153 2A 14 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 698+ A156 7D               ld a,l
 699+ A157
 700+ A157 90               sub b
 701+ A158 32 16 8C         ld (Num_de_bytes_album_de_disparos),a
 702+ A15B
 703+ A15B C9               ret
 704+ A15C
 705+ A15C              ; --------------------------------------------------------------------------------------
 706+ A15C              ;
 707+ A15C              ;   26/10/24
 708+ A15C              ;
 709+ A15C              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 710+ A15C              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 711+ A15C              ;   _disparos que el álbum del FRAME actual).
 712+ A15C
 713+ A15C              Limpia_album_de_pintado_disparos_entidades
 714+ A15C
 715+ A15C 21 17 8C         ld hl,Num_de_bytes_album_de_disparos+1
 716+ A15F 7E               ld a,(hl)
 717+ A160 2D               dec l
 718+ A161 46               ld b,(hl)
 719+ A162 90               sub b
 720+ A163
 721+ A163 D8               ret c
 722+ A164 C8               ret z
 723+ A165
 724+ A165 F5               push af
 725+ A166 80               add b
 726+ A167 77               ld (hl),a
 727+ A168 F1               pop af
 728+ A169
 729+ A169              ; Clean.
 730+ A169
 731+ A169 47           2 ld b,a
 732+ A16A AF               xor a
 733+ A16B 2A 14 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 734+ A16E 77           1 ld (hl),a
 735+ A16F 23               inc hl
 736+ A170 10 FC            djnz 1B
 737+ A172
 738+ A172 C9               ret
 739+ A173
 740+ A173              ; --------------------------------------------------------------------------------------
 741+ A173              ;
 742+ A173              ;   29/09/24
 743+ A173              ;
 744+ A173
 745+ A173              Motor_Disparos_Amadeus
 746+ A173
 747+ A173 21 20 89         ld hl,Disparo_Amad+1
 748+ A176
 749+ A176 34               inc (hl)
 750+ A177 35               dec (hl)
 751+ A178
 752+ A178 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 753+ A179
 754+ A179              ;   Esta caja contiene un disparo.
 755+ A179
 756+ A179 CD 80 A1         call Consulta_Impacto
 757+ A17C CC 99 A1         call z,Mueve_disparo_Amadeus
 758+ A17F
 759+ A17F C9               ret
 760+ A180
 761+ A180              ; ----------------------
 762+ A180              ;
 763+ A180              ;
 764+ A180              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 765+ A180              ;
 766+ A180              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 767+ A180
 768+ A180
 769+ A180              Consulta_Impacto
 770+ A180
 771+ A180              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 772+ A180              ;   _sea lo más coherente posible.
 773+ A180
 774+ A180 E5               push hl
 775+ A181 2B               dec hl
 776+ A182 CD 75 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 777+ A185 E1               pop hl
 778+ A186 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 779+ A187
 780+ A187 C8               ret z
 781+ A188
 782+ A188 3A 2F 8C         ld a,(Impacto2)
 783+ A18B CB DF            set 3,a
 784+ A18D 32 2F 8C         ld (Impacto2),a
 785+ A190
 786+ A190 E5               push hl
 787+ A191 CD 62 A2         call Genera_coordenadas_de_disparo_Amadeus
 788+ A194 E1               pop hl
 789+ A195 CD B2 A1         call Elimina_disparo_Amadeus
 790+ A198
 791+ A198 C9               ret
 792+ A199
 793+ A199              ; ----------------------
 794+ A199              ;
 795+ A199              ;
 796+ A199              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 797+ A199
 798+ A199              Mueve_disparo_Amadeus
 799+ A199
 800+ A199 CD B6 90         call Extrae_address
 801+ A19C
 802+ A19C CD DE 99         call PreviousScan
 803+ A19F CD DE 99         call PreviousScan
 804+ A1A2 CD DE 99         call PreviousScan
 805+ A1A5 CD DE 99         call PreviousScan
 806+ A1A8
 807+ A1A8              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 808+ A1A8
 809+ A1A8 7C               ld a,h
 810+ A1A9 D6 40            sub $40
 811+ A1AB EB               ex de,hl
 812+ A1AC 38 04            jr c,Elimina_disparo_Amadeus
 813+ A1AE
 814+ A1AE               ; Introduce nuevo puntero_de_impresión en la caja.
 815+ A1AE
 816+ A1AE 73               ld (hl),e
 817+ A1AF 23               inc hl
 818+ A1B0 72               ld (hl),d
 819+ A1B1
 820+ A1B1 C9               ret
 821+ A1B2
 822+ A1B2              ; ----------------------
 823+ A1B2              ;
 824+ A1B2              ;   29/9/24
 825+ A1B2
 826+ A1B2              Elimina_disparo_Amadeus
 827+ A1B2
 828+ A1B2              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 829+ A1B2              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 830+ A1B2
 831+ A1B2              ;   Disparo_1A defw 0									; Puntero objeto.
 832+ A1B2              ;   	defw 0											; Puntero de impresión.
 833+ A1B2
 834+ A1B2 2B               dec hl
 835+ A1B3 2B               dec hl
 836+ A1B4
 837+ A1B4 AF               xor a
 838+ A1B5 77               ld (hl),a
 839+ A1B6 23               inc hl
 840+ A1B7 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 841+ A1B8
 842+ A1B8 23               inc hl
 843+ A1B9 77               ld (hl),a
 844+ A1BA 23               inc hl
 845+ A1BB 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 846+ A1BC
 847+ A1BC 3E 01            ld a,1
 848+ A1BE 32 19 8C         ld (Permiso_de_disparo_Amadeus),a
 849+ A1C1
 850+ A1C1 CD 44 A1         call Limpia_album_de_pintado_disparos_Amadeus
 851+ A1C4
 852+ A1C4 AF               xor a
 853+ A1C5 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 854+ A1C6
 855+ A1C6 C9               ret
 856+ A1C7
 857+ A1C7              ; --------------------------------------------------------------------------------------
 858+ A1C7              ;
 859+ A1C7              ;   13/10/24
 860+ A1C7              ;
 861+ A1C7
 862+ A1C7              Pinta_disparos_Amadeus
 863+ A1C7
 864+ A1C7 06 02            ld b,2
 865+ A1C9 ED 73 00 8C      ld (Stack),sp
 866+ A1CD ED 7B 0E 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 867+ A1D1 D1           3 pop de
 868+ A1D2 14               inc d
 869+ A1D3 15               dec d
 870+ A1D4 28 1C            jr z,1F
 871+ A1D6 E1               pop hl
 872+ A1D7
 873+ A1D7              Imprime_scanlines_en_pantalla
 874+ A1D7
 875+ A1D7              ; 1er scanline
 876+ A1D7
 877+ A1D7 1A               ld a,(de)
 878+ A1D8 AE               xor (hl)
 879+ A1D9 77               ld (hl),a
 880+ A1DA
 881+ A1DA 1C               inc e
 882+ A1DB 2C               inc l
 883+ A1DC
 884+ A1DC 1A               ld a,(de)
 885+ A1DD AE               xor (hl)
 886+ A1DE 77               ld (hl),a
 887+ A1DF
 888+ A1DF 1D               dec e
 889+ A1E0 E1               pop hl
 890+ A1E1
 891+ A1E1              ; 2º scanline
 892+ A1E1
 893+ A1E1 1A               ld a,(de)
 894+ A1E2 AE               xor (hl)
 895+ A1E3 77               ld (hl),a
 896+ A1E4
 897+ A1E4 1C               inc e
 898+ A1E5 2C               inc l
 899+ A1E6
 900+ A1E6 1A               ld a,(de)
 901+ A1E7 AE               xor (hl)
 902+ A1E8 77               ld (hl),a
 903+ A1E9
 904+ A1E9 1D               dec e
 905+ A1EA
 906+ A1EA 18 06            jr 1F
 907+ A1EC
 908+ A1EC ED 7B 0C 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 909+ A1F0 18 DF            jr 3B
 910+ A1F2 10 F8        1 djnz 2B
 911+ A1F4 ED 7B 00 8C      ld sp,(Stack)
 912+ A1F8 C9               ret
 913+ A1F9
 914+ A1F9              ; --------------------------------------------------------------------------------------
 915+ A1F9              ;
 916+ A1F9              ;   13/10/24
 917+ A1F9              ;
 918+ A1F9              ;   Modifica: HL,BC y DE.
 919+ A1F9
 920+ A1F9
 921+ A1F9              Genera_datos_de_impresion_disparos_Amadeus
 922+ A1F9
 923+ A1F9 ED 73 00 8C      ld (Stack),sp
 924+ A1FD 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 925+ A200 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 926+ A201
 927+ A201 14               inc d                                                     ;? Salimos si no hay disparo.
 928+ A202 15               dec d
 929+ A203
 930+ A203 28 0E            jr z,Salida
 931+ A205
 932+ A205              Genera_scanlines_de_disparo_Amadeus
 933+ A205
 934+ A205 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 935+ A206              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 936+ A206 ED 7B 0C 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 937+ A20A
 938+ A20A C1               pop bc
 939+ A20B C1               pop bc
 940+ A20C C1               pop bc
 941+ A20D
 942+ A20D E5               push hl                                                   ;? Sube 2º scanline al álbum.
 943+ A20E CD DE 99         call PreviousScan
 944+ A211 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 945+ A212 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 946+ A213
 947+ A213              Salida
 948+ A213
 949+ A213 ED 7B 00 8C      ld sp,(Stack)
 950+ A217
 951+ A217 C9               ret
 952+ A218
 953+ A218              ; --------------------------------------------------------------------------------------
 954+ A218              ;
 955+ A218              ;   12/09/24
 956+ A218              ;
 957+ A218
 958+ A218              Genera_disparo_Amadeus
 959+ A218
 960+ A218              ;*  Exclusiones.
 961+ A218
 962+ A218 3A 19 8C         ld a,(Permiso_de_disparo_Amadeus)
 963+ A21B A7               and a
 964+ A21C C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 965+ A21D
 966+ A21D 3D               dec a
 967+ A21E 32 19 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 968+ A221
 969+ A221              Define_puntero_objeto_disparo
 970+ A221
 971+ A221              ;   Inicializamos contador.
 972+ A221
 973+ A221 06 00            ld b,0
 974+ A223
 975+ A223 2A 72 89         ld hl,(p.imp.amadeus)
 976+ A226 2C               inc l
 977+ A227
 978+ A227 3E 80            ld a,$80
 979+ A229 BE               cp (hl)
 980+ A22A 28 0D            jr z,1F
 981+ A22C
 982+ A22C 04               inc b
 983+ A22D
 984+ A22D 3E 60            ld a,$60
 985+ A22F BE               cp (hl)
 986+ A230 28 07            jr z,1F
 987+ A232
 988+ A232
 989+ A232 04               inc b
 990+ A233
 991+ A233 3E 18            ld a,$18
 992+ A235 BE               cp (hl)
 993+ A236 28 01            jr z,1F
 994+ A238
 995+ A238 04               inc b
 996+ A239
 997+ A239              ;   Calcula el Puntero_de_impresión del disparo.
 998+ A239
 999+ A239              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1000+ A239
1001+ A239 CD DE 99     1 call PreviousScan
1002+ A23C
1003+ A23C 78               ld a,b
1004+ A23D CB 3F            srl a
1005+ A23F 28 03            jr z,4F
1006+ A241
1007+ A241              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1008+ A241 E5               push hl
1009+ A242 18 02            jr 5F
1010+ A244 2D           4 dec l
1011+ A245 E5               push hl
1012+ A246              ; ---
1013+ A246
1014+ A246              ;   Calcula el Puntero_objeto del disparo.
1015+ A246
1016+ A246 21 76 83     5 ld hl,Indice_disparo_Amadeus
1017+ A249 04               inc b
1018+ A24A 05               dec b
1019+ A24B 28 04            jr z,2F
1020+ A24D
1021+ A24D              ;   Nos desplazamos por el índice de disparos.
1022+ A24D
1023+ A24D 2C           3 inc l
1024+ A24E 2C               inc l
1025+ A24F 10 FC            djnz 3B
1026+ A251
1027+ A251              ; --- Guarda el Puntero_objeto del disparo en la pila.
1028+ A251 CD B6 90     2 call Extrae_address
1029+ A254 E5               push hl
1030+ A255              ; ---
1031+ A255
1032+ A255              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1033+ A255              ; HL en el 1er .db de la caja.
1034+ A255
1035+ A255 21 1F 89         ld hl,Disparo_Amad
1036+ A258
1037+ A258 06 02            ld b,2
1038+ A25A
1039+ A25A D1           6 pop de
1040+ A25B 73               ld (hl),e
1041+ A25C 23               inc hl
1042+ A25D 72               ld (hl),d
1043+ A25E 23               inc hl
1044+ A25F
1045+ A25F 10 F9            djnz 6B
1046+ A261
1047+ A261 C9               ret
1048+ A262
1049+ A262              Genera_coordenadas_de_disparo_Amadeus
1050+ A262
1051+ A262              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1052+ A262              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1053+ A262              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1054+ A262
1055+ A262 CD B6 90         call Extrae_address
1056+ A265 CD D5 94         call Genera_coordenadas
1057+ A268
1058+ A268 3D               dec a
1059+ A269
1060+ A269 21 32 8C         ld hl,Coordenadas_disparo_certero
1061+ A26C 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1062+ A26D 23               inc hl
1063+ A26E 3A B4 8B         ld a,(Coordenada_X)
1064+ A271 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1065+ A272
1066+ A272 AF               xor a
1067+ A273 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1068+ A274
1069+ A274 C9               ret
1070+ A275
1071+ A275              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1072+ A275              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1073+ A275              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1074+ A275
1075+ A275              ; ----------------------------------------------
1076+ A275              ;
1077+ A275              ;   27/08/24
1078+ A275              ;
1079+ A275              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1080+ A275              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1081+ A275
1082+ A275              Detecta_impacto_en_disparo_de_Amadeus
1083+ A275
1084+ A275              Extraccion_de_datos
1085+ A275
1086+ A275 13               inc de
1087+ A276 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1088+ A277
1089+ A277 5E               ld e,(hl)
1090+ A278 23               inc hl
1091+ A279 56               ld d,(hl)
1092+ A27A
1093+ A27A 23               inc hl
1094+ A27B
1095+ A27B 4E               ld c,(hl)
1096+ A27C 23               inc hl
1097+ A27D 46               ld b,(hl)
1098+ A27E
1099+ A27E C5               push bc
1100+ A27F E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1101+ A280
1102+ A280              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1103+ A280
1104+ A280 CD DE 99         call PreviousScan
1105+ A283 CD DE 99         call PreviousScan
1106+ A286
1107+ A286              Detecta_impacto_
1108+ A286
1109+ A286 1A               ld a,(de)
1110+ A287 A6               and (hl)
1111+ A288 C0               ret nz
1112+ A289
1113+ A289 13               inc de
1114+ A28A 23               inc hl
1115+ A28B
1116+ A28B 1A               ld a,(de)
1117+ A28C A6               and (hl)
1118+ A28D C9               ret
1119+ A28E
1120+ A28E              ; -------------------------------------------------------------------------------------------------------------
1121+ A28E              ;
1122+ A28E              ;   8/8/24
1123+ A28E              ;
1124+ A28E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1125+ A28E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1126+ A28E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1127+ A28E              ;
1128+ A28E              ;   MODIFICA: HL,DE,BC y A.
1129+ A28E              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1130+ A28E              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1131+ A28E
1132+ A28E              Colision_Entidad_Amadeus
1133+ A28E
1134+ A28E              ; Posible contacto de entidad con Amadeus. ?????
1135+ A28E
1136+ A28E              ; Exclusiones:
1137+ A28E
1138+ A28E 3A 52 8C         ld a,(Shield)
1139+ A291 A7               and a
1140+ A292 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1141+ A293
1142+ A293 21 28 8C         ld hl,Ctrl_3
1143+ A296 CB 76            bit 6,(hl)
1144+ A298 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1145+ A299
1146+ A299 21 2F 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1147+ A29C CB 56            bit 2,(hl)
1148+ A29E C0               ret nz
1149+ A29F
1150+ A29F 3A B5 8B     	ld a,(Coordenada_y)
1151+ A2A2 FE 14        	cp $14
1152+ A2A4 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1153+ A2A5
1154+ A2A5 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1155+ A2A8 A7               and a
1156+ A2A9 C0               ret nz
1157+ A2AA
1158+ A2AA              Genera_coordenadas_X
1159+ A2AA
1160+ A2AA              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1161+ A2AA              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1162+ A2AA
1163+ A2AA              ;   Limpiamos almacenes.
1164+ A2AA
1165+ A2AA              ;    call Limpia_Coordenadas_X
1166+ A2AA
1167+ A2AA              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1168+ A2AA
1169+ A2AA 21 34 8C         ld hl,Coordenadas_X_Entidad
1170+ A2AD 3A B4 8B         ld a,(Coordenada_X)
1171+ A2B0 CD D2 A2         call Guarda_coordenadas_X
1172+ A2B3
1173+ A2B3              ;   Almacenamos las coordenadas X de Amadeus.
1174+ A2B3
1175+ A2B3 3A 6E 89         ld a,(CX_Amadeus)
1176+ A2B6 CD D2 A2         call Guarda_coordenadas_X
1177+ A2B9 CD E6 A2         call Compara_coordenadas_X
1178+ A2BC C0               ret nz
1179+ A2BD
1180+ A2BD 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1181+ A2BF 32 B7 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1182+ A2C2
1183+ A2C2 2A F3 8B         ld hl,(Puntero_store_caja)
1184+ A2C5 2C               inc l
1185+ A2C6 2C               inc l
1186+ A2C7 2C               inc l
1187+ A2C8 2C               inc l
1188+ A2C9 22 30 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1189+ A2CC
1190+ A2CC 21 2F 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1191+ A2CF CB D6            set 2,(hl)
1192+ A2D1
1193+ A2D1 C9               ret
1194+ A2D2
1195+ A2D2               ; ----- ----- ----- ----- -----
1196+ A2D2
1197+ A2D2 77           Guarda_coordenadas_X ld (hl),a
1198+ A2D3 3C               inc a
1199+ A2D4 2C               inc l
1200+ A2D5 77               ld (hl),a
1201+ A2D6 3C               inc a
1202+ A2D7 2C               inc l
1203+ A2D8 77               ld (hl),a
1204+ A2D9 2C               inc l
1205+ A2DA C9               ret
1206+ A2DB
1207+ A2DB AF           Limpia_Coordenadas_X xor a
1208+ A2DC 06 06            ld b,6
1209+ A2DE 21 37 8C         ld hl,Coordenadas_X_Amadeus
1210+ A2E1 77           1 ld (hl),a
1211+ A2E2 23               inc hl
1212+ A2E3 10 FC            djnz 1B
1213+ A2E5 C9               ret
1214+ A2E6
1215+ A2E6              ; ----- ----- ----- ----- -----
1216+ A2E6
1217+ A2E6              Compara_coordenadas_X
1218+ A2E6
1219+ A2E6 DD 21 34 8C      ld ix,Coordenadas_X_Entidad
1220+ A2EA DD 7E 00         ld a,(ix+0)
1221+ A2ED CD FB A2         call Comparando
1222+ A2F0 C8               ret z
1223+ A2F1
1224+ A2F1 3C               inc a
1225+ A2F2 CD 0A A3         call Comparando_1
1226+ A2F5 C8               ret z
1227+ A2F6
1228+ A2F6 3C               inc a
1229+ A2F7 CD 0A A3         call Comparando_1
1230+ A2FA C9               ret
1231+ A2FB
1232+ A2FB              ; ----- ----- ----- ----- -----
1233+ A2FB              ;
1234+ A2FB              ;   4/12/23
1235+ A2FB              ;
1236+ A2FB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1237+ A2FB
1238+ A2FB              Comparando
1239+ A2FB
1240+ A2FB DD 2C            inc ixl
1241+ A2FD DD 2C            inc ixl
1242+ A2FF DD 2C            inc ixl
1243+ A301
1244+ A301 DD 46 00         ld b,(ix+0)
1245+ A304 DD 4E 01         ld c,(ix+1)
1246+ A307 DD 56 02         ld d,(ix+2)
1247+ A30A
1248+ A30A B8           Comparando_1 cp b
1249+ A30B C8               ret z
1250+ A30C B9               cp c
1251+ A30D C8               ret z
1252+ A30E BA               cp d
1253+ A30F C9               ret
1254+ A310
1255+ A310              ; -----------------------------------------------------------------------
1256+ A310              ;
1257+ A310              ;   04/7/24
1258+ A310              ;
1259+ A310
1260+ A310              Detecta_colision_nave_entidad
1261+ A310
1262+ A310              ; Exclusiones:
1263+ A310
1264+ A310              ; Salimos de la rutina si no hay advertencia de posible colisión.
1265+ A310
1266+ A310 21 2F 8C     	ld hl,Impacto2
1267+ A313 CB 56        	bit 2,(hl)
1268+ A315 C8           	ret z
1269+ A316
1270+ A316              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1271+ A316
1272+ A316 2A 74 89         ld hl,(Pamm_Amadeus)
1273+ A319 CD B6 90         call Extrae_address
1274+ A31C 54               ld d,h
1275+ A31D 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1276+ A31E
1277+ A31E 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1278+ A321 06 10            ld b,16                                        ; Contador de scanlines en B.
1279+ A323 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1280+ A326
1281+ A326 C5           1 push bc
1282+ A327 06 03            ld b,3
1283+ A329 E5               push hl
1284+ A32A
1285+ A32A              ; .db
1286+ A32A
1287+ A32A 1A           3 ld a,(de)
1288+ A32B A7               and a
1289+ A32C 20 03            jr nz,4F
1290+ A32E
1291+ A32E 2C               inc l
1292+ A32F 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1293+ A331
1294+ A331 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1295+ A333 28 04            jr z,2F
1296+ A335
1297+ A335              ; Impacto.
1298+ A335 FD 2D            dec iyl
1299+ A337 28 22            jr z,5F
1300+ A339
1301+ A339 1C           2 inc e
1302+ A33A 10 EE            djnz 3B
1303+ A33C
1304+ A33C E1               pop hl
1305+ A33D
1306+ A33D              ; Hay salto de línea en el puntero de impresión ???
1307+ A33D
1308+ A33D 7C               ld a,h
1309+ A33E D6 57            sub $57
1310+ A340 20 0A            jr nz,6F
1311+ A342
1312+ A342              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1313+ A342
1314+ A342 2A 72 89         ld hl,(p.imp.amadeus)
1315+ A345 3E 20            ld a,$20
1316+ A347 A7               and a
1317+ A348 85               add l
1318+ A349 6F               ld l,a
1319+ A34A 18 01            jr 7F
1320+ A34C
1321+ A34C 24           6 inc h
1322+ A34D
1323+ A34D C1           7 pop bc
1324+ A34E 10 D6            djnz 1B
1325+ A350
1326+ A350              ;   Fin de la comparativa.
1327+ A350
1328+ A350              ;   NO HAY COLISIÓN !!!!!.
1329+ A350              ;
1330+ A350              ;   .db (Impacto) de Amadeus a "0".
1331+ A350              ;   RES el bit2 de (Impacto2).
1332+ A350              ;
1333+ A350              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1334+ A350              ;   Lo colocamos a "0".
1335+ A350
1336+ A350 21 2F 8C         ld hl,Impacto2
1337+ A353 CB 96            res 2,(hl)
1338+ A355 2A 30 8C         ld hl,(Entidad_sospechosa_de_colision)
1339+ A358 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1340+ A35A C9               ret
1341+ A35B
1342+ A35B              ;   COLISIÓN !!!!!.
1343+ A35B              ;
1344+ A35B              ;   .db (Impacto) de Amadeus a "1".
1345+ A35B              ;   SET el bit3 de (Impacto2).
1346+ A35B              ;
1347+ A35B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1348+ A35B
1349+ A35B E1           5 pop hl
1350+ A35C C1               pop bc
1351+ A35D
1352+ A35D 21 71 89         ld hl,Impacto_Amadeus
1353+ A360 36 01            ld (hl),1
1354+ A362 21 2F 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1355+ A365 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1356+ A367
1357+ A367 11 C0 87         ld de,Indice_Explosion_entidades
1358+ A36A 2A 30 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1359+ A36D
1360+ A36D 23               inc hl
1361+ A36E 23               inc hl
1362+ A36F 23               inc hl
1363+ A370
1364+ A370 73               ld (hl),e
1365+ A371 23               inc hl
1366+ A372 72               ld (hl),d
1367+ A373
1368+ A373              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1369+ A373
1370+ A373 11 60 88         ld de,Indice_Explosion_Amadeus
1371+ A376 21 74 89         ld hl,Pamm_Amadeus
1372+ A379
1373+ A379 73               ld (hl),e
1374+ A37A 23               inc hl
1375+ A37B 72               ld (hl),d
1376+ A37C
1377+ A37C C9               ret
1378+ A37D
1379+ A37D
1380+ A37D
# file closed: Disparo.asm
2054  A37D
2055  A37D              	SAVESNA "Pruebas.sna", START
2056  A37D
2057  A37D
2058  A37D
2059  A37D
# file closed: Banco_de_pruebas.asm
