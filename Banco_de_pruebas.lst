# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 8B 87  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD BE 8C     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD CE 8C     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 95 87     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B 8B 87  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC B9 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 C5 85        	defw Caja_2
 110+ 8574 D2 85        	defw Caja_3
 111+ 8576 DF 85        	defw Caja_4
 112+ 8578 EC 85        	defw Caja_5
 113+ 857A F9 85        	defw Caja_6
 114+ 857C 06 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8
 152+ 85B8              ; Cada caja tiene 19 bytes !!!
 153+ 85B8
 154+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 155+ 85BA 00           	db %00000000										; (Attr).
 156+ 85BB 00           	db 0												; (Cuad_objeto).
 157+ 85BC 00           	db 0												; (Impacto).
 158+ 85BD 00 00        	defw 0												; (Puntero_de_impresion).
 159+ 85BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 160+ 85C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 161+ 85C3 00           	db 0												; (Ctrl_0).
 162+ 85C4 00           	db 0												; (Ctrl_2).
 163+ 85C5
 164+ 85C5              ; ---------- ---------- ---------- ---------- ----------
 165+ 85C5
 166+ 85C5 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 167+ 85C7 00           	db %00000000										; (Attr).
 168+ 85C8 00           	db 0												; (Cuad_objeto).
 169+ 85C9 00           	db 0												; (Impacto).
 170+ 85CA 00 00        	defw 0												; (Puntero_de_impresion).
 171+ 85CC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 172+ 85CE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 173+ 85D0 00           	db 0												; (Ctrl_0).
 174+ 85D1 00           	db 0												; (Ctrl_2).
 175+ 85D2
 176+ 85D2              ; ---------- ---------- ---------- ---------- ----------
 177+ 85D2
 178+ 85D2 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 179+ 85D4 00           	db %00000000										; (Attr).
 180+ 85D5 00           	db 0												; (Cuad_objeto).
 181+ 85D6 00           	db 0												; (Impacto).
 182+ 85D7 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 85D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 85DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 85DD 00           	db 0												; (Ctrl_0).
 186+ 85DE 00           	db 0												; (Ctrl_2).
 187+ 85DF
 188+ 85DF              ; ---------- ---------- ---------- ---------- ----------
 189+ 85DF
 190+ 85DF 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 191+ 85E1 00           	db %00000000										; (Attr).
 192+ 85E2 00           	db 0												; (Cuad_objeto).
 193+ 85E3 00           	db 0												; (Impacto).
 194+ 85E4 00 00        	defw 0												; (Puntero_de_impresion).
 195+ 85E6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 196+ 85E8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 197+ 85EA 00           	db 0												; (Ctrl_0).
 198+ 85EB 00           	db 0												; (Ctrl_2).
 199+ 85EC
 200+ 85EC              ; ---------- ---------- ---------- ---------- ----------
 201+ 85EC
 202+ 85EC 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 203+ 85EE 00           	db %00000000										; (Attr).
 204+ 85EF 00           	db 0												; (Cuad_objeto).
 205+ 85F0 00           	db 0												; (Impacto).
 206+ 85F1 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 85F3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 85F5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 85F7 00           	db 0												; (Ctrl_0).
 210+ 85F8 00           	db 0												; (Ctrl_2).
 211+ 85F9
 212+ 85F9              ; ---------- ---------- ---------- ---------- ----------
 213+ 85F9
 214+ 85F9 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 215+ 85FB 00           	db %00000000										; (Attr).
 216+ 85FC 00           	db 0												; (Cuad_objeto).
 217+ 85FD 00           	db 0												; (Impacto).
 218+ 85FE 00 00        	defw 0												; (Puntero_de_impresion).
 219+ 8600 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 220+ 8602 00 00        	defw 0 												; (Contador_de_mov_masticados).
 221+ 8604 00           	db 0												; (Ctrl_0).
 222+ 8605 00           	db 0												; (Ctrl_2).
 223+ 8606
 224+ 8606              ; ---------- ---------- ---------- ---------- ----------
 225+ 8606
 226+ 8606 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 227+ 8608 00           	db %00000000										; (Attr).
 228+ 8609 00           	db 0												; (Cuad_objeto).
 229+ 860A 00           	db 0												; (Impacto).
 230+ 860B 00 00        	defw 0												; (Puntero_de_impresion).
 231+ 860D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 232+ 860F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 233+ 8611 00           	db 0												; (Ctrl_0).
 234+ 8612 00           	db 0												; (Ctrl_2).
 235+ 8613
 236+ 8613              ; -------------------------------------------------------------------------------------
 237+ 8613              ;
 238+ 8613              ;	11/1/24
 239+ 8613              ;
 240+ 8613              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 241+ 8613              ;
 242+ 8613              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 243+ 8613              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 244+ 8613              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 245+ 8613              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 246+ 8613
 247+ 8613              Indice_de_definiciones_de_entidades
 248+ 8613
 249+ 8613 17 86        	defw Entidad_1
 250+ 8615 24 86        	defw Entidad_2
 251+ 8617
 252+ 8617              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 253+ 8617
 254+ 8617              ;	BADSAT, (Satélite malvado).
 255+ 8617
 256+ 8617 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 257+ 861A 04           	db %00000100										; (Attr).
 258+ 861B A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 259+ 861D 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 260+ 861F 03 40        	defw $4003                                      	; (Posicion_inicio).
 261+ 8621 01           	db 1												; (Cuad_objeto).
 262+ 8622 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 263+ 8624
 264+ 8624 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 265+ 8627 02           	db %00000010										; (Attr).
 266+ 8628 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 267+ 862A 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 268+ 862C 40 50        	defw $5040                                      	; (Posicion_inicio).
 269+ 862E 01           	db 1												; (Cuad_objeto).
 270+ 862F 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 271+ 8631
# file closed: Cajas_y_disparos.asm
 105  8631              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8631              ; 19/1/24
   2+ 8631
   3+ 8631              Indice_de_niveles
   4+ 8631
   5+ 8631 39 86        	defw Nivel_1
   6+ 8633 3F 86        	defw Nivel_2
   7+ 8635
   8+ 8635              ;	...
   9+ 8635              ;	...
  10+ 8635              ;	+ Niveles ...
  11+ 8635
  12+ 8635 00 00        	defw 0
  13+ 8637 00 00        	defw 0
  14+ 8639
  15+ 8639 01           Nivel_1 db 1									; Nº de entidades.
  16+ 863A 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 863E 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 863F
  19+ 863F 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8640 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8644 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8648 01 02
  22+ 864A 02 01 01 01  	db 2,1,1,1,1,2
  22+ 864E 01 02
  23+ 8650
  24+ 8650              ;---------------------------------------------------------------------------------------------------------------
  25+ 8650              ;
  26+ 8650              ;   19/1/24
  27+ 8650              ;
  28+ 8650              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 8650              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 8650              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 8650              ;	_ de la 1ª entidad del Nivel.
  32+ 8650              ;
  33+ 8650              ;	MODIFICA: HL,DE y A.
  34+ 8650              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 8650
  36+ 8650              Inicializa_Nivel
  37+ 8650
  38+ 8650 2A B4 87     	ld hl,(Puntero_indice_NIVELES)
  39+ 8653 CD 50 8B     	call Extrae_address
  40+ 8656 7E           	ld a,(hl)
  41+ 8657 32 7F 87     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 865A 23           	inc hl
  43+ 865B CD 65 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 865E 22 B6 87     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 8661 CD 6E 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 8664 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 8665
  48+ 8665              ; ----------------------
  49+ 8665
  50+ 8665 11 5E 87     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8668 01 04 00     	ld bc,4
  52+ 866B ED B0        	ldir
  53+ 866D C9           	ret
  54+ 866E
  55+ 866E 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 866F CD C2 86         call Calcula_salto_en_BC
  57+ 8672 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 8675 A7               and a
  59+ 8676 ED 4A            adc hl,bc
  60+ 8678 CD 50 8B         call Extrae_address
  61+ 867B 22 6A 87         ld (Puntero_indice_mov),hl
  62+ 867E C9               ret
  63+ 867F
  64+ 867F              ;---------------------------------------------------------------------------------------------------------------
  65+ 867F              ;
  66+ 867F              ;   5/1/24
  67+ 867F              ;
  68+ 867F              ;	Destruye A,BC,HL,DE
  69+ 867F
  70+ 867F              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 867F              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 867F
  73+ 867F              Prepara_cajas_de_entidades
  74+ 867F
  75+ 867F              ; Preparamos los punteros de las cajas de entidades:
  76+ 867F
  77+ 867F 21 70 85     	ld hl,Indice_de_cajas_de_entidades
  78+ 8682 CD 50 8B     	call Extrae_address
  79+ 8685 CD D4 86     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  80+ 8688              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  81+ 8688 CD 17 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  82+ 868B
  83+ 868B              ;	TIPO DE ENTIDAD.
  84+ 868B
  85+ 868B 2A B6 87     	ld hl,(Datos_de_nivel)
  86+ 868E 7E           	ld a,(hl)
  87+ 868F 3D           	dec a
  88+ 8690 20 FE        	jr nz,$														; STOP si no es una entidad de tipo 1.
  89+ 8692
  90+ 8692 21 96 87     	ld hl,Ctrl_4
  91+ 8695 CB 46        	bit 0,(hl)
  92+ 8697 20 FE        	jr nz,$														; STOP si ya hemos generado todos los movimientos masticados de una entidad Tipo 1.
  93+ 8699 CB E6        	set 4,(hl)													; FLAG que indica que hemos completado todos los movimientos masticados de una entidad tipo 1.
  94+ 869B
  95+ 869B              ;	La 1ª entidad del Nivel es una Entidad de tipo 1.
  96+ 869B              ;	Vamos a cargar la definición de una entidad de tipo 1 en DRAW para poder generar todos sus movimientos masticados.
  97+ 869B
  98+ 869B 2A B6 87     	ld hl,(Datos_de_nivel)
  99+ 869E
 100+ 869E              ; En este punto:
 101+ 869E              ;
 102+ 869E              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
 103+ 869E              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 104+ 869E
 105+ 869E C5           1 push bc 										; Guardo el nº de cajas a rellenar.
 106+ 869F
 107+ 869F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 108+ 86A0 CD C2 86     	call Calcula_salto_en_BC					; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 109+ 86A3
 110+ 86A3 21 13 86     	ld hl,Indice_de_definiciones_de_entidades
 111+ 86A6 CD CA 86     	call Situa_en_datos_de_definicion			; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 112+ 86A9              ;
 113+ 86A9 CD DE 86     	call Definicion_de_entidad_a_bandeja_DRAW	; Vuelca los datos de la definición en DRAW.
 114+ 86AC
 115+ 86AC 18 FE        	jr $
 116+ 86AE
 117+ 86AE 2A 7D 87     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
 118+ 86B1 CD 50 8B     	call Extrae_address
 119+ 86B4 CD D4 86     	call Avanza_caja_de_entidades
 120+ 86B7
 121+ 86B7 2A B6 87     	ld hl,(Datos_de_nivel)
 122+ 86BA 23           	inc hl
 123+ 86BB 22 B6 87     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 124+ 86BE
 125+ 86BE C1           	pop bc
 126+ 86BF 10 DD        	djnz 1B
 127+ 86C1
 128+ 86C1 C9           	ret
 129+ 86C2
 130+ 86C2              ;	------------------------------------------------------------------------------------
 131+ 86C2              ;
 132+ 86C2              ;	12/01/24
 133+ 86C2              ;
 134+ 86C2              ;	INPUTS:	A contiene el (Tipo) de entidad.
 135+ 86C2              ;
 136+ 86C2              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 137+ 86C2              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 138+ 86C2
 139+ 86C2 CB 27        Calcula_salto_en_BC sla a
 140+ 86C4 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 141+ 86C6 4F           	ld c,a
 142+ 86C7 06 00        	ld b,0
 143+ 86C9 C9           	ret
 144+ 86CA
 145+ 86CA              ; ------------------------------------------------------------------
 146+ 86CA              ;
 147+ 86CA              ;	19/1/24
 148+ 86CA              ;
 149+ 86CA              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 150+ 86CA              ;	Actualiza (Datos_de_entidad) con esa dirección.
 151+ 86CA
 152+ 86CA A7           Situa_en_datos_de_definicion and a
 153+ 86CB ED 4A        	adc hl,bc
 154+ 86CD CD 50 8B     	call Extrae_address
 155+ 86D0 22 85 87         ld (Datos_de_entidad),hl
 156+ 86D3 C9           	ret
 157+ 86D4
 158+ 86D4              ; ------------------------------------------------------------------
 159+ 86D4
 160+ 86D4 22 79 87     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 161+ 86D7 13           	inc de
 162+ 86D8 13           	inc de
 163+ 86D9 EB           	ex de,hl
 164+ 86DA 22 7D 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 165+ 86DD C9           	ret
 166+ 86DE
 167+ 86DE              ; ----------------------------------------------------------------------------------------------------------
 168+ 86DE              ;
 169+ 86DE              ;	19/1/24
 170+ 86DE              ;
 171+ 86DE              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 172+ 86DE              ;	_ de entidad.
 173+ 86DE              ;
 174+ 86DE              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 175+ 86DE              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 176+ 86DE              ;
 177+ 86DE              ;	MODIFICA: HL,DE y BC
 178+ 86DE
 179+ 86DE
 180+ 86DE              Definicion_de_entidad_a_bandeja_DRAW
 181+ 86DE
 182+ 86DE 11 34 87     	ld de,Variables_DRAW	 					; DE apunta al 1er .db de las variables DRAW
 183+ 86E1
 184+ 86E1 01 03 00     	ld bc,3
 185+ 86E4 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 186+ 86E6              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 187+ 86E6 01 07 00     	ld bc,7
 188+ 86E9 CD 11 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 189+ 86EC
 190+ 86EC 01 05 00     	ld bc,5
 191+ 86EF ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 192+ 86F1              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 193+ 86F1 01 04 00     	ld bc,4
 194+ 86F4 CD 11 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 195+ 86F7
 196+ 86F7 01 03 00     	ld bc,3
 197+ 86FA ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 198+ 86FC              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 199+ 86FC
 200+ 86FC 01 09 00     	ld bc,9
 201+ 86FF CD 11 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 202+ 8702
 203+ 8702 01 02 00     	ld bc,2
 204+ 8705 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 205+ 8707
 206+ 8707 01 08 00     	ld bc,8
 207+ 870A CD 11 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 208+ 870D
 209+ 870D 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 210+ 870F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 211+ 8710
 212+ 8710 C9           	ret
 213+ 8711
 214+ 8711              ; ---------- -------------- ----------------
 215+ 8711
 216+ 8711 EB           Situa_DE ex de,hl
 217+ 8712 A7           	and a
 218+ 8713 ED 4A        	adc hl,bc
 219+ 8715 EB           	ex de,hl
 220+ 8716 C9           	ret
 221+ 8717
 222+ 8717              ;---------------------------------------------------------------------------------------------------------------
 223+ 8717              ;
 224+ 8717              ;	5/1/24
 225+ 8717              ;
 226+ 8717              ;	INICIALIZA (Numero_parcial_de_entidades).
 227+ 8717              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 228+ 8717              ;
 229+ 8717              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 230+ 8717              ;
 231+ 8717              ;	(Numero_parcial_de_entidades)="7".
 232+ 8717              ;
 233+ 8717              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 234+ 8717              ;
 235+ 8717              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 236+ 8717              ;
 237+ 8717              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 238+ 8717              ;	MODIFICA: A y B.
 239+ 8717              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 240+ 8717
 241+ 8717              Inicializa_Numero_parcial_de_entidades
 242+ 8717
 243+ 8717              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 244+ 8717
 245+ 8717 3A 7F 87     	ld a,(Numero_de_entidades)
 246+ 871A A7           	and a
 247+ 871B
 248+ 871B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 249+ 871B              ;	jr z,$
 250+ 871B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 251+ 871B
 252+ 871B 20 03        	jr nz,3F
 253+ 871D
 254+ 871D              ; ---------- ---------- ----------
 255+ 871D
 256+ 871D              ;! RESET para pruebas. Omitir esta línea en modo normal.
 257+ 871D              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 258+ 871D
 259+ 871D CD 50 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 260+ 8720
 261+ 8720              ; ---------- ---------- ----------
 262+ 8720
 263+ 8720 3A 7F 87     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 264+ 8723 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 265+ 8725 38 08        	jr c,1F
 266+ 8727
 267+ 8727              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 268+ 8727              ; Actualizamos variables.
 269+ 8727
 270+ 8727 3E 07        	ld a,7
 271+ 8729 32 80 87     	ld (Numero_parcial_de_entidades),a
 272+ 872C 47           	ld b,a
 273+ 872D 18 04        	jr 2F
 274+ 872F
 275+ 872F              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 276+ 872F              ; (Numero_de_entidades)="0".
 277+ 872F
 278+ 872F 32 80 87     1 ld (Numero_parcial_de_entidades),a
 279+ 8732 47           	ld b,a
 280+ 8733 C9           2 ret
# file closed: Niveles.asm
 106  8734
 107  8734              ; ******************************************************************************************************************************************************************************************
 108  8734              ; Constantes.
 109  8734              ; ******************************************************************************************************************************************************************************************
 110  8734              ;
 111  8734              ; 25/12/23
 112  8734
 113  8734              ;
 114  8734              ; Constantes.
 115  8734              ;
 116  8734
 117  8734              Sprite_vacio equ $f000
 118  8734              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  8734              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  8734              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  8734              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  8734
 123  8734              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  8734              ;														;
 125  8734              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  8734
 127  8734              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  8734              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  8734              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  8734              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  8734              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  8734
 133  8734              ;														; 55 Bytes.
 134  8734              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  8734              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  8734
 137  8734              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  8734
 139  8734              ; ******************************************************************************************************************************************************************************************
 140  8734              ; Variables.
 141  8734              ; ******************************************************************************************************************************************************************************************
 142  8734              ;
 143  8734              ; 18/01/24
 144  8734              ;
 145  8734              ; Variables de DRAW. (Motor principal).	42 Bytes.
 146  8734              ;
 147  8734
 148  8734              Variables_DRAW ; -----------------------------------------------------------------------------------------------
 149  8734
 150  8734 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  8735              ;															- Patrón de movimiento.
 152  8735              ;															- Aspecto
 153  8735 00           Filas db 0												; Filas. [DRAW]
 154  8736 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  8737 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  8739 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  873B 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  873C 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  873D
 160  873D              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  873D
 162  873D 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  873E              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  873E              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  873E 00           Attr db 0												; Atributos de la entidad:
 166  873F
 167  873F              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  873F              ;
 169  873F              ;	COLORES: 0 ..... NEGRO
 170  873F              ;    		 1 ..... AZUL
 171  873F              ; 			 2 ..... ROJO
 172  873F              ;			 3 ..... MAGENTA
 173  873F              ; 			 4 ..... VERDE
 174  873F              ; 			 5 ..... CIAN
 175  873F              ;			 6 ..... AMARILLO
 176  873F              ; 			 7 ..... BLANCO
 177  873F
 178  873F 00 00        Indice_Sprite_der defw 0
 179  8741 00 00        Indice_Sprite_izq defw 0
 180  8743 00 00        Puntero_DESPLZ_der defw 0
 181  8745 00 00        Puntero_DESPLZ_izq defw 0
 182  8747
 183  8747 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  8749 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  874A
 186  874A              ; Variables de objeto. (Características).
 187  874A
 188  874A 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 189  874B              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 190  874B              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 191  874B 00 00 00...  Variables_de_borrado ds 6
 192  8751
 193  8751 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 194  8753              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 195  8753
 196  8753 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 197  8755
 198  8755              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 199  8755              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 200  8755
 201  8755 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 202  8757              ;														; _palabras que componen el "movimiento_masticado".
 203  8757
 204  8757              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 205  8757
 206  8757 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 207  8758              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 208  8758              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 209  8758              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 210  8758              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 211  8758              ;
 212  8758              ; 														DESCRIPCIÖN:
 213  8758              ;
 214  8758              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 215  8758              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 216  8758              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 217  8758              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 218  8758              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 219  8758              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 220  8758              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 221  8758              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 222  8758              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 223  8758              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 224  8758              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 225  8758              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 226  8758              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 227  8758              ;
 228  8758              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 229  8758              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 230  8758              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 231  8758
 232  8758              ; Variables de funcionamiento. [DRAW].
 233  8758
 234  8758 00           Columnas db 0
 235  8759 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 236  875B              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 237  875B 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  875C
 239  875C              ; variables de control general.
 240  875C
 241  875C 00           Ctrl_2 db 0
 242  875D              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 243  875D              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 244  875D              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 245  875D              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 246  875D              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 247  875D              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 248  875D              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 249  875D              ;
 250  875D              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 251  875D              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 252  875D              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 253  875D              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 254  875D              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 255  875D              ;														BIT 4, ???
 256  875D              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 257  875D
 258  875D 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 259  875E
 260  875E              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 261  875E
 262  875E              ;					         		---------;      ;---------
 263  875E
 264  875E              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 265  875E
 266  875E              Perfiles_de_velocidad
 267  875E
 268  875E 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 269  875F 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 270  8760 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 271  8761 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 272  8762
 273  8762              ; Contadores de 16 bits.
 274  8762
 275  8762 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 276  8764 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 277  8766 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 278  8768 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 279  876A
 280  876A              ; Movimiento. ------------------------------------------------------------------------------------------------------
 281  876A
 282  876A 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 283  876C 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 284  876E 00 00        Puntero_indice_mov_bucle defw 0							;
 285  8770              ;
 286  8770              ;
 287  8770 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 288  8771              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 289  8771              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 290  8771 00           Incrementa_puntero_backup db 0
 291  8772 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 292  8773              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 293  8773 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 294  8774 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 295  8775 00           Cola_de_desplazamiento db 0								; Este byte indica:
 296  8776              ;
 297  8776              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 298  8776              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 299  8776              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 300  8776              ;
 301  8776              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 302  8776              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 303  8776              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 304  8776              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 305  8776              ;
 306  8776              ;														;	"$ff" ..... Bucle infinito de repetición.
 307  8776              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 308  8776              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 309  8776              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  8776
 311  8776 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  8777
 313  8777              ;														DESCRIPCIÓN:
 314  8777              ;
 315  8777              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  8777              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  8777              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  8777              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  8777              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  8777              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  8777
 322  8777              ;														BIT 3, Recarga de nueva oleada.
 323  8777              ;														BIT 4, Recarga de nueva oleada.
 324  8777              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  8777              ;														BIT 6, **** Frame completo.
 326  8777              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  8777
 328  8777 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  8779              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  8779              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  8779              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  8779
 333  8779              ; Gestión de ENTIDADES y CAJAS.
 334  8779
 335  8779 00 00        Puntero_store_caja defw 0
 336  877B 00 00        Puntero_restore_caja defw 0
 337  877D 00 00        Indice_restore_caja defw 0
 338  877F 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  8780 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  8781 00           Entidades_en_curso db 0									; ..... ..... .....
 341  8782 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  8783              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  8783              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  8783              ;														; _ (Numero_de_malotes)="0".
 345  8783 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  8785 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  8787              ;														; _ puntero (Indice_entidades).
 348  8787
 349  8787              ;---------------------------------------------------------------------------------------------------------------
 350  8787              ;
 351  8787              ;	11/01/24
 352  8787              ;
 353  8787              ;	Álbumes.
 354  8787
 355  8787 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  8789              ;														; _variable para almacenar lo posición del puntero_
 357  8789              ; 														; _de pila, SP.
 358  8789 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  878B              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  878B 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  878D 00 70        Stack_snapshot defw Album_de_fotos
 362  878F 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  8791
 364  8791              ;End_Snapshot defw Album_de_fotos
 365  8791              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  8791 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  8793              ;														; _el snapshot de los registros del siguiente disparo.
 368  8793              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  8793 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  8795
 371  8795 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  8796              ;
 373  8796              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  8796              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 375  8796              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 376  8796
 377  8796 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 378  8797              ;
 379  8797              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 380  8797
 381  8797              ; Gestión de Disparos.
 382  8797
 383  8797 00           Numero_de_disparotes db 0
 384  8798 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 385  879A 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 386  879C 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 387  879D              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 388  879D              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 389  879D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 390  879F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 391  879F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 392  879F              ;														; _produzca colisión.
 393  879F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 394  87A1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 395  87A1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 396  87A4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 397  87A4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 398  87A7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 399  87A7 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 400  87A8
 401  87A8              ;---------------------------------------------------------------------------------------------------------------
 402  87A8
 403  87A8              ; Relojes y temporizaciones.
 404  87A8
 405  87A8 00           Contador_de_frames db 0
 406  87A9 00           Contador_de_frames_2 db 0
 407  87AA
 408  87AA 04           Clock_explosion db 4
 409  87AB 14           Clock_Entidades_en_curso db 20
 410  87AC 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 411  87AD              ;														; Repite la oleada de entidades.
 412  87AD 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 413  87AE 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 414  87AF 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 415  87B0
 416  87B0 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 417  87B1 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 418  87B2 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 419  87B3
 420  87B3              ;---------------------------------------------------------------------------------------------------------------
 421  87B3
 422  87B3              ; Gestión de NIVELES.
 423  87B3
 424  87B3 00           Nivel db 0												; Nivel actual del juego.
 425  87B4 00 00        Puntero_indice_NIVELES defw 0
 426  87B6 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 427  87B8              ; 														; _ que definen el NIVEL.
 428  87B8              ; Y todo comienza aquí .....
 429  87B8              ;
 430  87B8              ; 	INICIO  *************************************************************************************************************************************************************************
 431  87B8              ;
 432  87B8              ;	5/1/24
 433  87B8
 434  87B8              START
 435  87B8
 436  87B8 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 437  87BB 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 438  87BD ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 439  87BF ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 440  87C1 F3           	DI
 441  87C2
 442  87C2 3E 07        	ld a,%00000111
 443  87C4 CD D9 97     	call Cls
 444  87C7 CD 2D 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 445  87CA
 446  87CA              ; INICIALIZACIÓN.
 447  87CA
 448  87CA              ;	Inicializa 1er Nivel.
 449  87CA
 450  87CA 21 31 86     	ld hl,Indice_de_niveles
 451  87CD 22 B4 87     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 452  87D0 CD 50 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 453  87D3              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 454  87D3              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 455  87D3              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 456  87D3
 457  87D3 CD 7F 86     4 call Prepara_cajas_de_entidades
 458  87D6
 459  87D6 CD B8 8A     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 460  87D9              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 461  87D9 CD DD 8B     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 462  87DC
 463  87DC 21 80 87     	ld hl,Numero_parcial_de_entidades
 464  87DF 46           	ld b,(hl)
 465  87E0              ;	inc b
 466  87E0              ;	dec b
 467  87E0              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 468  87E0
 469  87E0              ;	INICIA ENTIDADES !!!!!
 470  87E0
 471  87E0              ;1 push bc  												; Guardo el contador de entidades.
 472  87E0              ;	call Inicia_entidad
 473  87E0
 474  87E0              ;	pop bc
 475  87E0              ;	djnz 1B  											; Decremento el contador de entidades.
 476  87E0
 477  87E0              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 478  87E0              ; (Esto se dá cuando se inicia una nueva oleada).
 479  87E0
 480  87E0              ;	ld a,(Ctrl_1)
 481  87E0              ;	bit 3,a
 482  87E0              ;	jr nz,5F											; Loop
 483  87E0
 484  87E0              ; 	INICIA AMADEUS !!!!!
 485  87E0
 486  87E0              ;3 call Restore_Amadeus
 487  87E0              ;	call Inicia_Puntero_objeto
 488  87E0              ;	call Draw
 489  87E0
 490  87E0              ;	call Guarda_movimiento_masticado	;! Provisional
 491  87E0
 492  87E0              ;	call Guarda_foto_registros
 493  87E0              ;	call Guarda_datos_de_borrado_Amadeus
 494  87E0
 495  87E0              ;	ld de,Amadeus_db
 496  87E0              ;	call Store_Amadeus
 497  87E0
 498  87E0              ; 	INICIA DISPAROS !!!!!
 499  87E0
 500  87E0              ;	call Inicia_Puntero_Disparo_Entidades
 501  87E0              ;	call Inicia_Puntero_Disparo_Amadeus
 502  87E0
 503  87E0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 504  87E0
 505  87E0 CD B8 8A     5 call Inicia_punteros_de_cajas
 506  87E3 CD DD 8B     	call Restore_entidad
 507  87E6
 508  87E6 3A 76 87     	ld a,(Ctrl_1)
 509  87E9 CB 5F        	bit 3,a
 510  87EB 28 07        	jr z,6F
 511  87ED
 512  87ED              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 513  87ED
 514  87ED 21 76 87     	ld hl,Ctrl_1
 515  87F0 CB 9E        	res 3,(hl)
 516  87F2 18 07        	jr Main
 517  87F4
 518  87F4              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 519  87F4
 520  87F4 21 95 87     6 ld hl,Ctrl_3
 521  87F7 CB C6        	set 0,(hl)											; Frame completo.
 522  87F9 FB           	ei
 523  87FA 76           	halt
 524  87FB
 525  87FB              ; ------------------------------------
 526  87FB
 527  87FB              Main
 528  87FB              ;
 529  87FB              ;	11/12/23
 530  87FB
 531  87FB              ; Aparece nueva entidad ???
 532  87FB
 533  87FB              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 534  87FB              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 535  87FB              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 536  87FB              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 537  87FB              ;														; _un 2º bloque.
 538  87FB
 539  87FB 3E 01        	ld a,1
 540  87FD D3 FE        	out ($fe),a
 541  87FF
 542  87FF 3A AB 87     	ld a,(Clock_Entidades_en_curso)
 543  8802 47           	ld b,a
 544  8803 3A A8 87     	ld a,(Contador_de_frames)
 545  8806 B8           	cp b
 546  8807 20 18        	jr nz,13F
 547  8809
 548  8809              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 549  8809              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 550  8809
 551  8809 3A 80 87     21 ld a,(Numero_parcial_de_entidades)
 552  880C 47           	ld b,a
 553  880D 3A 81 87     	ld a,(Entidades_en_curso)
 554  8810 B8           	cp b
 555  8811 28 0E        	jr z,13F
 556  8813 30 0C        	jr nc,13F
 557  8815
 558  8815 3C           	inc a
 559  8816 32 81 87     	ld (Entidades_en_curso),a
 560  8819
 561  8819              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 562  8819
 563  8819 3A AB 87     	ld a,(Clock_Entidades_en_curso)
 564  881C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 565  881C              ;! _ IMPREDECIBLE !!!!
 566  881C C6 64        	add 100
 567  881E 32 AB 87     	ld (Clock_Entidades_en_curso),a
 568  8821
 569  8821              ; -------------------------------------------------------------------------------------------------------------
 570  8821
 571  8821              ; Habilita disparos.
 572  8821
 573  8821 21 AD 87     13 ld hl,Disparo_Amadeus
 574  8824 11 AF 87     	ld de,CLOCK_repone_disparo_Amadeus
 575  8827 CD AA 9B     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 576  882A
 577  882A 21 B0 87     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 578  882D 11 B2 87     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 579  8830 CD AA 9B     	call Habilita_disparos
 580  8833
 581  8833              ; COLISIONES.
 582  8833
 583  8833 CD CC 90     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 584  8836
 585  8836              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 586  8836              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 587  8836              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 588  8836
 589  8836 AF           	xor a
 590  8837 32 9C 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 591  883A
 592  883A CD B8 8A     	call Inicia_punteros_de_cajas
 593  883D CD DD 8B     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 594  8840              ; 														; _ en DRAW.
 595  8840 3A 35 87     	ld a,(Filas)
 596  8843 A7           	and a
 597  8844 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 598  8846 CD EF 8B     	call Incrementa_punteros_de_cajas
 599  8849 18 F2        	jr 12B
 600  884B
 601  884B              ; ---------------------------------------------------------------------------------------
 602  884B
 603  884B 3A 80 87     10 ld a,(Numero_parcial_de_entidades)
 604  884E 47               ld b,a
 605  884F A7           	and a
 606  8850 20 14        	jr nz,11F
 607  8852
 608  8852 21 76 87     	ld hl,Ctrl_1
 609  8855 CB 66        	bit 4,(hl)
 610  8857 C2 FF 88     	jp nz,16F
 611  885A
 612  885A              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 613  885A
 614  885A 21 76 87     	ld hl,Ctrl_1
 615  885D CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 616  885F
 617  885F 3A A8 87     	ld a,(Contador_de_frames)
 618  8862 3C           	inc a
 619  8863 32 AC 87     	ld (Activa_recarga_cajas),a
 620  8866
 621  8866              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 622  8866
 623  8866 3A 81 87     11 ld a,(Entidades_en_curso)
 624  8869 A7           	and a
 625  886A CA FF 88     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 626  886D 47           	ld b,a												; No hay entidades que gestionar.
 627  886E
 628  886E              ; ( Código que ejecutamos con cada entidad: ).
 629  886E
 630  886E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 631  886E
 632  886E C5           15 push bc 												; Nº de entidades en curso.
 633  886F
 634  886F              ; Existe "Entidad_guía" ???.
 635  886F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 636  886F
 637  886F 3A 95 87     	ld a,(Ctrl_3)
 638  8872 CB 4F        	bit 1,a
 639  8874 20 11        	jr nz,22F
 640  8876
 641  8876              ; Almacén de "Movimientos_masticados" lleno ???
 642  8876              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 643  8876              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 644  8876
 645  8876 3A 95 87     	ld a,(Ctrl_3)
 646  8879 CB 5F        	bit 3,a
 647  887B 20 0A        	jr nz,22F
 648  887D
 649  887D              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 650  887D
 651  887D 21 5C 87     	ld hl,Ctrl_2
 652  8880 CB EE        	set 5,(hl)
 653  8882 21 95 87     	ld hl,Ctrl_3
 654  8885 CB CE        	set 1,(hl)
 655  8887
 656  8887              ; Impacto ???
 657  8887
 658  8887 3A 4A 87     22 ld a,(Impacto)
 659  888A A7           	and a
 660  888B 28 31        	jr z,8F
 661  888D
 662  888D              ; Hay Impacto en esta entidad.
 663  888D
 664  888D 21 AA 87     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 665  8890 35           	dec (hl)
 666  8891 C2 F2 88     	jp nz,17F
 667  8894
 668  8894              ;! Velocidad de la animación de la explosión.
 669  8894
 670  8894 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 671  8896              ;														; _,(velocidad de la explosión).
 672  8896              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 673  8896
 674  8896 CD A1 8C     	call Repone_datos_de_borrado
 675  8899 CD F6 8A     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 676  889C
 677  889C              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 678  889C
 679  889C 3A 5C 87     	ld a,(Ctrl_2)
 680  889F CB 4F        	bit 1,a
 681  88A1 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 682  88A3
 683  88A3              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 684  88A3
 685  88A3 3A 3D 87     	ld a,(CTRL_DESPLZ)
 686  88A6 A7           	and a
 687  88A7 20 08        	jr nz,18F
 688  88A9
 689  88A9 21 84 84     	ld hl,Indice_Explosion_2x2-2
 690  88AC 22 43 87     	ld (Puntero_DESPLZ_der),hl
 691  88AF 18 06        	jr 19F
 692  88B1
 693  88B1 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 694  88B4 22 43 87     	ld (Puntero_DESPLZ_der),hl
 695  88B7
 696  88B7 21 5C 87     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 697  88BA CB CE        	set 1,(hl)
 698  88BC 18 22        	jr 7F
 699  88BE
 700  88BE              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 701  88BE              ; _con las coordenadas de la entidad almacenada en DRAW.
 702  88BE
 703  88BE 3A 76 87     8 ld a,(Ctrl_1)
 704  88C1 CB 57        	bit 2,a
 705  88C3 28 1B        	jr z,7F
 706  88C5
 707  88C5 2A 9F 87     	ld hl,(Coordenadas_disparo_certero)
 708  88C8 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 709  88C9              ;														; E contiene la coordenada_X del disparo.
 710  88C9 2A 3B 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 711  88CC              ;														; H FILA, (Coordenada_y de la entidad).
 712  88CC A7           	and a
 713  88CD ED 52        	sbc hl,de
 714  88CF
 715  88CF CD E5 90     	call Determina_resultado_comparativa
 716  88D2
 717  88D2 78           	ld a,b
 718  88D3 A7           	and a
 719  88D4 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 720  88D6
 721  88D6              ; ----- ----- -----
 722  88D6
 723  88D6 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 724  88D8 32 4A 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 725  88DB
 726  88DB 21 76 87     	ld hl,Ctrl_1
 727  88DE CB 96        	res 2,(hl)
 728  88E0
 729  88E0 CD 50 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 730  88E3
 731  88E3 3A 57 87     	ld a,(Ctrl_0)
 732  88E6 CB 67        	bit 4,a
 733  88E8 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 734  88EA
 735  88EA              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 736  88EA              ; [[[
 737  88EA              ;	call Detecta_disparo_entidad
 738  88EA              ; ]]]
 739  88EA
 740  88EA CD 39 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 741  88ED
 742  88ED 21 57 87     	ld hl,Ctrl_0
 743  88F0 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 744  88F2
 745  88F2 CD 9E 8B     17 call Store_Restore_cajas
 746  88F5
 747  88F5 C1           	pop bc
 748  88F6
 749  88F6 05           	dec b
 750  88F7 C2 6E 88     	jp nz,15B
 751  88FA
 752  88FA              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 753  88FA              ; Hemos gestionado todas las unidades.
 754  88FA              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 755  88FA
 756  88FA 21 76 87     	ld hl,Ctrl_1
 757  88FD CB 96        	res 2,(hl)
 758  88FF
 759  88FF 21 95 87     16 ld hl,Ctrl_3
 760  8902 CB C6        	set 0,(hl)											; Frame completo.
 761  8904
 762  8904 AF           	xor a
 763  8905 D3 FE        	out ($fe),a
 764  8907
 765  8907 FB           	ei
 766  8908 76           	halt
 767  8909
 768  8909              ; ----------------------------------------
 769  8909
 770  8909 3A 76 87     	ld a,(Ctrl_1) 										; Existe Loop?
 771  890C CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 772  890E CA FB 87     	jp z,Main
 773  8911
 774  8911              ; RECARGA DE NUEVA OLEADA.
 775  8911
 776  8911 3A A8 87     	ld a,(Contador_de_frames)
 777  8914 47           	ld b,a
 778  8915 3A AC 87     	ld a,(Activa_recarga_cajas)
 779  8918 B8           	cp b
 780  8919 28 08        	jr z,20F
 781  891B
 782  891B 21 76 87     	ld hl,Ctrl_1
 783  891E CB E6        	set 4,(hl)
 784  8920 C3 FB 87     	jp Main
 785  8923
 786  8923 21 76 87     20 ld hl,Ctrl_1
 787  8926 CB A6        	res 4,(hl)
 788  8928
 789  8928 3A A8 87     	ld a,(Contador_de_frames)
 790  892B
 791  892B              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 792  892B              ;! _ IMPREDECIBLE !!!!
 793  892B
 794  892B C6 0A        	add 10
 795  892D 32 AB 87     	ld (Clock_Entidades_en_curso),a
 796  8930
 797  8930 C3 D3 87     	jp 4B
 798  8933
 799  8933 C9           	ret
 800  8934
 801  8934              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 802  8934              ;
 803  8934              ;	16/11/23
 804  8934
 805  8934              Gestiona_Amadeus
 806  8934
 807  8934              ;! Activa/desactiva impacto con Amadeus.
 808  8934
 809  8934              ;	ld a,(Impacto)
 810  8934              ;	and a
 811  8934              ;	jr nz,2F
 812  8934
 813  8934 CD AD 89     	call Mov_Amadeus
 814  8937
 815  8937 3A 57 87     2 ld a,(Ctrl_0)
 816  893A CB 67        	bit 4,a
 817  893C 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 818  893E
 819  893E CD 39 8A     	call Guarda_foto_entidad_a_pintar
 820  8941 CD 81 8C     	call Guarda_datos_de_borrado_Amadeus
 821  8944
 822  8944 21 57 87     1 ld hl,Ctrl_0
 823  8947 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 824  8949
 825  8949 CD 70 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 826  894C
 827  894C              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 828  894C
 829  894C CD 38 8B     	call Calcula_numero_de_disparotes
 830  894F
 831  894F C9           	ret
 832  8950
 833  8950              ; --------------------------------------------------------------------------------------------------------------
 834  8950              ;
 835  8950              ;	15/12/23
 836  8950
 837  8950              Mov_obj
 838  8950
 839  8950 3A 5C 87     	ld a,(Ctrl_2)
 840  8953 CB 4F        	bit 1,a
 841  8955 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 842  8957
 843  8957              ; Explosión:
 844  8957
 845  8957 3A 5D 87     	ld a,(Frames_explosion)
 846  895A A7           	and a
 847  895B 20 1D        	jr nz,4F
 848  895D
 849  895D              ;!  Una alimaña menos!!!!!!!!!1
 850  895D
 851  895D              ; Se trataba de una Entidad_guía ???
 852  895D
 853  895D 3A 5C 87     	ld a,(Ctrl_2)
 854  8960 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 855  8962 28 05        	jr z,5F
 856  8964
 857  8964 21 95 87     	ld hl,Ctrl_3
 858  8967 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 859  8969
 860  8969              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 861  8969              ;!! _generado puede ser distinto, (aletoriedad).
 862  8969
 863  8969 CD 1F 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 864  896C 21 80 87     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 865  896F 35           	dec (hl)
 866  8970 21 81 87     	ld hl,Entidades_en_curso
 867  8973 35           	dec (hl)
 868  8974 21 7F 87     	ld hl,Numero_de_entidades
 869  8977 35           	dec (hl)
 870  8978 18 32        	jr 3F
 871  897A
 872  897A              ; -----
 873  897A
 874  897A              ;	`Movemos´ la explosión.
 875  897A
 876  897A 2A 43 87     4 ld hl,(Puntero_DESPLZ_der)
 877  897D 23           	inc hl
 878  897E 23           	inc hl
 879  897F 22 43 87     	ld (Puntero_DESPLZ_der),hl
 880  8982 CD 50 8B     	call Extrae_address
 881  8985 22 39 87     	ld (Puntero_objeto),hl
 882  8988
 883  8988 21 5D 87     	ld hl,Frames_explosion
 884  898B 35           	dec (hl)
 885  898C
 886  898C 21 57 87     	ld hl,Ctrl_0
 887  898F CB E6        	set 4,(hl)
 888  8991
 889  8991 18 19        	jr 3F
 890  8993
 891  8993              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 892  8993
 893  8993 AF           2 xor a
 894  8994 32 57 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 895  8997
 896  8997              ; Movemos Entidades malignas.
 897  8997              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 898  8997
 899  8997              ;	ld a,(Ctrl_2)
 900  8997              ;	bit 5,a
 901  8997              ;	jr nz,8F
 902  8997
 903  8997              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 904  8997              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 905  8997              ;	jr 7F
 906  8997
 907  8997              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 908  8997
 909  8997              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 910  8997              ;	bit 4,a
 911  8997              ;	ret z
 912  8997
 913  8997              ; Ha habido desplazamiento de la entidad maligna.
 914  8997              ; Ha llegado a zona de AMADEUS ???
 915  8997
 916  8997 3A 3C 87     7 ld a,(Coordenada_y)
 917  899A FE 14        	cp $14
 918  899C 38 08        	jr c,1F
 919  899E
 920  899E              ; ---------
 921  899E
 922  899E              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 923  899E              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 924  899E
 925  899E F3           	di
 926  899F CD 95 8E     	call Genera_coordenadas_X
 927  89A2 CD D1 8E     	call Compara_coordenadas_X
 928  89A5 FB           	ei
 929  89A6
 930  89A6              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 931  89A6
 932  89A6              ; ---------
 933  89A6
 934  89A6              1
 935  89A6
 936  89A6              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 937  89A6 CD A1 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 938  89A9 CD F6 8A     	call Limpia_Variables_de_borrado
 939  89AC
 940  89AC C9           3 ret
 941  89AD
 942  89AD              ; --------------------------------------------------------------------------------------------------------------
 943  89AD              ;
 944  89AD              ;	29/1/23
 945  89AD
 946  89AD              Mov_Amadeus
 947  89AD
 948  89AD              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 949  89AD
 950  89AD CD 91 98     	call Mov_right
 951  89B0
 952  89B0 3A 57 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 953  89B3 CB 67        	bit 4,a
 954  89B5 C8           	ret z
 955  89B6
 956  89B6              ; ---------
 957  89B6
 958  89B6              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 959  89B6 CD 91 8C     	call Repone_datos_de_borrado_Amadeus
 960  89B9 CD F6 8A     	call Limpia_Variables_de_borrado
 961  89BC
 962  89BC C9           	ret
 963  89BD
 964  89BD              ; -----------------------------------------------------------------------------------
 965  89BD              ;
 966  89BD              ;	12/12/23
 967  89BD              ;
 968  89BD              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 969  89BD
 970  89BD              ;	Inicia_entidad
 971  89BD
 972  89BD              ; Inicializa el puntero (Puntero_indice_mov).
 973  89BD
 974  89BD CD 6E 86     	call Inicializa_Puntero_indice_mov
 975  89C0
 976  89C0              ; Construimos los movimientos masticados de este tipo de entidad.
 977  89C0
 978  89C0 CD CE 89     	call Construye_movimientos_masticados_entidad
 979  89C3
 980  89C3              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 981  89C3              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 982  89C3              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 983  89C3              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 984  89C3
 985  89C3 CD 23 8A     	call Cargamos_registros_con_mov_masticado
 986  89C6 CD 16 71     	call Guarda_foto_registros
 987  89C9
 988  89C9 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 989  89CA              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 990  89CA              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 991  89CA CD 9E 8B     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 992  89CD C9           	ret
 993  89CE
 994  89CE              ; -----------------------------------------------------------------------------------
 995  89CE              ;
 996  89CE              ;	10/01/24
 997  89CE              ;
 998  89CE              ;
 999  89CE
1000  89CE              Construye_movimientos_masticados_entidad
1001  89CE
1002  89CE 2A 53 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1003  89D1 E5           	push hl
1004  89D2
1005  89D2 CD 16 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1006  89D5              ;															; _ el (Contador_de_mov_masticados).
1007  89D5 CD 56 8B     	call Inicia_Puntero_objeto
1008  89D8 CD ED 97     	call Recompone_posicion_inicio
1009  89DB CD CC 91     1 call Draw
1010  89DE CD FA 89     	call Guarda_movimiento_masticado
1011  89E1 CD 55 9D     	call Movimiento
1012  89E4
1013  89E4 3A 95 87     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1014  89E7 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1015  89E9 28 F0        	jr z,1B
1016  89EB
1017  89EB              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1018  89EB              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1019  89EB
1020  89EB E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1021  89EC 22 53 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1022  89EF
1023  89EF
1024  89EF              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1025  89EF
1026  89EF CD C6 9E     	call Situa_en_Contador_general_de_mov_masticados
1027  89F2
1028  89F2              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1029  89F2              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1030  89F2
1031  89F2 ED 4B 55 87  	ld bc,(Contador_de_mov_masticados)
1032  89F6 71           	ld (hl),c
1033  89F7 23           	inc hl
1034  89F8 70           	ld (hl),b
1035  89F9
1036  89F9 C9           	ret
1037  89FA
1038  89FA              ; -----------------------------------------------------------------------------------
1039  89FA              ;
1040  89FA              ;	28/12/23
1041  89FA              ;
1042  89FA              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1043  89FA              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1044  89FA
1045  89FA              Guarda_movimiento_masticado
1046  89FA
1047  89FA ED 73 87 87  	ld (Stack),sp
1048  89FE ED 7B 53 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1049  8A02
1050  8A02 E5           	push hl
1051  8A03 DD E5            push ix
1052  8A05 FD E5            push iy
1053  8A07
1054  8A07 ED 7B 87 87      ld sp,(Stack)
1055  8A0B
1056  8A0B              ;    push hl
1057  8A0B
1058  8A0B 2A 55 87        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1059  8A0E 23           	inc hl
1060  8A0F 22 55 87     	ld (Contador_de_mov_masticados),hl
1061  8A12
1062  8A12              ;	pop hl
1063  8A12
1064  8A12 CD 16 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1065  8A15              ;															; _ el (Contador_de_mov_masticados).
1066  8A15 C9               ret
1067  8A16
1068  8A16              ; --------------------------------------------------------------------------------------------------------------
1069  8A16              ;
1070  8A16              ;	12/1/24
1071  8A16              ;
1072  8A16              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1073  8A16
1074  8A16              Actualiza_Puntero_de_almacen_de_mov_masticados
1075  8A16
1076  8A16              ;	push hl
1077  8A16              ;	push bc
1078  8A16
1079  8A16 2A 53 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1080  8A19 01 06 00     	ld bc,6
1081  8A1C A7           	and a
1082  8A1D ED 4A        	adc hl,bc
1083  8A1F 22 53 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1084  8A22
1085  8A22              ;	pop bc
1086  8A22              ;	pop hl
1087  8A22
1088  8A22 C9           	ret
1089  8A23
1090  8A23              ; --------------------------------------------------------------------------------------------------------------
1091  8A23              ;
1092  8A23              ;	15/01/24
1093  8A23              ;
1094  8A23              ;	Cargamos los registros_
1095  8A23              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1096  8A23              ;
1097  8A23              ;	HL contiene la dirección de la rutina de impresión.
1098  8A23              ;	IX contiene el puntero de impresión.
1099  8A23              ;	IY contiene (Puntero_objeto).
1100  8A23
1101  8A23
1102  8A23 ED 73 87 87  Cargamos_registros_con_mov_masticado ld (Stack),sp
1103  8A27 ED 7B 53 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1104  8A2B
1105  8A2B FD E1        	pop iy
1106  8A2D DD E1        	pop ix
1107  8A2F E1           	pop hl
1108  8A30
1109  8A30 ED 73 53 87  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1110  8A34
1111  8A34 ED 7B 87 87  	ld sp,(Stack)
1112  8A38
1113  8A38 C9           	ret
1114  8A39
1115  8A39              ; --------------------------------------------------------------------------------------------------------------
1116  8A39              ;
1117  8A39              ;	28/12/23
1118  8A39              ;
1119  8A39              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1120  8A39              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1121  8A39
1122  8A39              Guarda_foto_entidad_a_pintar
1123  8A39
1124  8A39 3A 57 87     	ld a,(Ctrl_0)
1125  8A3C CB 77        	bit 6,a
1126  8A3E 28 0A        	jr z,5F
1127  8A40
1128  8A40              ; Guarda la foto de Amadeus.
1129  8A40
1130  8A40 CD CC 91     	call Draw
1131  8A43
1132  8A43 CD FA 89     	call Guarda_movimiento_masticado	;! Provisional
1133  8A46
1134  8A46 CD 16 71     	call Guarda_foto_registros
1135  8A49
1136  8A49              ;	di
1137  8A49              ;	jr $
1138  8A49              ;	ei
1139  8A49
1140  8A49 C9           	ret
1141  8A4A
1142  8A4A              ; ENTIDADES!
1143  8A4A              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1144  8A4A
1145  8A4A 3A 95 87     5 ld a,(Ctrl_3)
1146  8A4D CB 5F        	bit 3,a
1147  8A4F 28 04        	jr z,1F
1148  8A51
1149  8A51              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1150  8A51
1151  8A51 CD 8C 8A     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1152  8A54 C9           	ret
1153  8A55
1154  8A55              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1155  8A55
1156  8A55 3A 95 87     1 ld a,(Ctrl_3)
1157  8A58 CB 57        	bit 2,a
1158  8A5A 20 10        	jr nz,6F
1159  8A5C
1160  8A5C              ; Entidad guía o fantasma ???
1161  8A5C
1162  8A5C 3A 5C 87     	ld a,(Ctrl_2)
1163  8A5F CB 6F        	bit 5,a
1164  8A61 20 10        	jr nz,3F
1165  8A63
1166  8A63              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1167  8A63
1168  8A63 18 EC        	jr 4B
1169  8A65
1170  8A65              ; ENTIDAD_GUÍA:
1171  8A65              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1172  8A65              ; _guardando "movimientos_masticados".
1173  8A65
1174  8A65 3A 95 87     2 ld a,(Ctrl_3)
1175  8A68 CB 57        	bit 2,a
1176  8A6A 28 07        	jr z,3F
1177  8A6C
1178  8A6C              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1179  8A6C              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1180  8A6C
1181  8A6C CB 97        6 res 2,a
1182  8A6E CB DF        	set 3,a
1183  8A70 32 95 87     	ld (Ctrl_3),a
1184  8A73
1185  8A73
1186  8A73              ;	Esto sólo lo ejecuta una entidad guía.
1187  8A73
1188  8A73 CD CC 91     3 	call Draw
1189  8A76 CD FA 89     	call Guarda_movimiento_masticado
1190  8A79 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1191  8A7C
1192  8A7C              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1193  8A7C              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1194  8A7C
1195  8A7C CD 80 8A     	call Convierte_guia_en_fantasma
1196  8A7F C9           	ret
1197  8A80
1198  8A80              ; --------------------------------------------------------------------------------------------------------------
1199  8A80              ;
1200  8A80              ;	28/12/23
1201  8A80              ;
1202  8A80
1203  8A80 3A 95 87     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1204  8A83 CB 5F        	bit 3,a
1205  8A85 C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1206  8A86
1207  8A86              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1208  8A86
1209  8A86 21 5C 87     	ld hl,Ctrl_2
1210  8A89 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1211  8A8B
1212  8A8B C9           	ret
1213  8A8C
1214  8A8C              ; --------------------------------------------------------------------------------------------------------------
1215  8A8C              ;
1216  8A8C              ;	21/12/23
1217  8A8C              ;
1218  8A8C              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1219  8A8C              ;
1220  8A8C              ;		IY contiene (Puntero_objeto).
1221  8A8C              ;		IX contiene el puntero de impresión.
1222  8A8C              ;		HL contiene la dirección de la rutina de impresión.
1223  8A8C              ;
1224  8A8C              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1225  8A8C              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1226  8A8C              ;	Decrementa el (Contador_de_mov_masticados)
1227  8A8C              ;
1228  8A8C              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1229  8A8C              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1230  8A8C              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1231  8A8C
1232  8A8C
1233  8A8C ED 73 87 87  Prepara_registros_con_mov_masticados ld (Stack),sp
1234  8A90 ED 7B 53 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1235  8A94
1236  8A94 FD E1        	pop iy
1237  8A96 DD E1        	pop ix
1238  8A98 E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1239  8A99
1240  8A99 ED 73 53 87  	ld (Puntero_de_almacen_de_mov_masticados),sp
1241  8A9D ED 7B 87 87  	ld sp,(Stack)
1242  8AA1
1243  8AA1 CD 16 71     	call Guarda_foto_registros
1244  8AA4
1245  8AA4 E5           	push hl
1246  8AA5
1247  8AA5 2A 55 87     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1248  8AA8 23           	inc hl
1249  8AA9 22 55 87     	ld (Contador_de_mov_masticados),hl
1250  8AAC
1251  8AAC              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1252  8AAC
1253  8AAC ED 4B 62 87  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1254  8AB0 A7           	and a
1255  8AB1 ED 42        	sbc hl,bc
1256  8AB3 CC 80 8A     	call z,Convierte_guia_en_fantasma
1257  8AB6
1258  8AB6 E1           	pop hl
1259  8AB7
1260  8AB7 C9           	ret
1261  8AB8
1262  8AB8              ; --------------------------------------------------------------------------------------------------------------
1263  8AB8              ;
1264  8AB8              ;	19/9/23
1265  8AB8
1266  8AB8              ;Prepara_var_pintado
1267  8AB8
1268  8AB8              ;	ld hl,Filas
1269  8AB8              ;	ld de,Variables_de_pintado
1270  8AB8              ;	ld bc,8
1271  8AB8              ;	ldir
1272  8AB8              ;	ret
1273  8AB8
1274  8AB8              ; --------------------------------------------------------------------------------------------------------------
1275  8AB8
1276  8AB8              ;Repone_pintar
1277  8AB8
1278  8AB8              ;	ld hl,Variables_de_pintado
1279  8AB8              ;	ld de,Filas
1280  8AB8              ;	ld bc,8
1281  8AB8              ;	ldir
1282  8AB8              ;	ret
1283  8AB8
1284  8AB8              ; *************************************************************************************************************************************************************
1285  8AB8              ;
1286  8AB8              ; 8/1/23
1287  8AB8              ;
1288  8AB8              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1289  8AB8              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1290  8AB8              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1291  8AB8
1292  8AB8              ; Destruye HL y DE !!!!!
1293  8AB8
1294  8AB8              Inicia_punteros_de_cajas
1295  8AB8
1296  8AB8 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1297  8ABB CD 50 8B         call Extrae_address
1298  8ABE 22 79 87         ld (Puntero_store_caja),hl
1299  8AC1 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1300  8AC4 22 7D 87     	ld (Indice_restore_caja),hl
1301  8AC7 CD 50 8B     	call Extrae_address
1302  8ACA 22 7B 87     	ld (Puntero_restore_caja),hl
1303  8ACD C9               ret
1304  8ACE
1305  8ACE              ; *************************************************************************************************************************************************************
1306  8ACE              ;
1307  8ACE              ; 8/1/23
1308  8ACE              ;
1309  8ACE              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1310  8ACE
1311  8ACE 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1312  8AD1 22 98 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1313  8AD4 C9           	ret
1314  8AD5 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1315  8AD8 22 9A 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1316  8ADB C9           	ret
1317  8ADC
1318  8ADC              ; -------------------------------------------------------------------------------------------------------------
1319  8ADC              ;
1320  8ADC              ; 21/9/23
1321  8ADC              ;
1322  8ADC
1323  8ADC              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1324  8ADC
1325  8ADC              Limpia_album_Amadeus
1326  8ADC
1327  8ADC 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1328  8ADF 7E           	ld a,(hl)
1329  8AE0 A7           	and a
1330  8AE1 C8           	ret z
1331  8AE2
1332  8AE2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1333  8AE5 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1334  8AE8 01 0B 00     	ld bc,11
1335  8AEB AF           	xor a
1336  8AEC 77           	ld (hl),a
1337  8AED ED B0        	ldir
1338  8AEF
1339  8AEF 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1340  8AF2 22 93 87     	ld (End_Snapshot_Amadeus),hl
1341  8AF5
1342  8AF5 C9           	ret
1343  8AF6
1344  8AF6 21 4B 87     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1345  8AF9 11 4C 87     	ld de,Variables_de_borrado+1
1346  8AFC 01 05 00     	ld bc,5
1347  8AFF AF           	xor a
1348  8B00 77           	ld (hl),a
1349  8B01 ED B0        	ldir
1350  8B03 C9           	ret
1351  8B04
1352  8B04              ; -------------------------------------------------------------------------------------------------------------
1353  8B04              ;
1354  8B04              ; 8/9/23
1355  8B04              ;
1356  8B04
1357  8B04              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1358  8B04              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1359  8B04
1360  8B04              Calcula_numero_de_malotes
1361  8B04
1362  8B04 21 00 70     	ld hl,Album_de_fotos
1363  8B07 EB           	ex de,hl
1364  8B08 2A 8D 87     	ld hl,(Stack_snapshot)
1365  8B0B
1366  8B0B 06 00        	ld b,0
1367  8B0D 7D           	ld a,l
1368  8B0E 93           	sub e
1369  8B0F 28 07        	jr z,1F
1370  8B11
1371  8B11              ; Nº de malotes no es "0".
1372  8B11
1373  8B11 D6 06        2 sub 6
1374  8B13 04           	inc b
1375  8B14 A7           	and a
1376  8B15 20 FA        	jr nz,2B
1377  8B17 78           	ld a,b
1378  8B18
1379  8B18 32 82 87     1 ld (Numero_de_malotes),a
1380  8B1B C9           	ret
1381  8B1C
1382  8B1C              ; -------------------------------------------------------------------------------------------------------------
1383  8B1C              ;
1384  8B1C              ; 8/9/23
1385  8B1C              ;
1386  8B1C
1387  8B1C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1388  8B1C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1389  8B1C
1390  8B1C              Calcula_malotes_Amadeus
1391  8B1C
1392  8B1C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1393  8B1F EB           	ex de,hl
1394  8B20 2A 93 87     	ld hl,(End_Snapshot_Amadeus)
1395  8B23
1396  8B23 7C           	ld a,h
1397  8B24 A7           	and a
1398  8B25 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1399  8B27
1400  8B27 06 00        	ld b,0
1401  8B29 7D           	ld a,l
1402  8B2A 93           	sub e
1403  8B2B 28 07        	jr z,1F
1404  8B2D
1405  8B2D              ; Nº de malotes no es "0".
1406  8B2D
1407  8B2D D6 06        2 sub 6
1408  8B2F 04           	inc b
1409  8B30 A7           	and a
1410  8B31 20 FA        	jr nz,2B
1411  8B33 78           	ld a,b
1412  8B34
1413  8B34 32 82 87     1 ld (Numero_de_malotes),a
1414  8B37 C9           	ret
1415  8B38
1416  8B38              ; -------------------------------------------------------------------------------------------------------------
1417  8B38              ;
1418  8B38              ; 28/2/23
1419  8B38              ;
1420  8B38
1421  8B38              Calcula_numero_de_disparotes
1422  8B38
1423  8B38 21 56 70     	ld hl,Album_de_fotos_disparos
1424  8B3B EB           	ex de,hl
1425  8B3C 2A 91 87     	ld hl,(End_Snapshot_disparos)
1426  8B3F
1427  8B3F 06 00        	ld b,0
1428  8B41 7D           	ld a,l
1429  8B42 93           	sub e
1430  8B43 28 07        	jr z,1F
1431  8B45
1432  8B45              ; Nº de malotes no es "0".
1433  8B45
1434  8B45 D6 06        2 sub 6
1435  8B47 04           	inc b
1436  8B48 A7           	and a
1437  8B49 20 FA        	jr nz,2B
1438  8B4B 78           	ld a,b
1439  8B4C
1440  8B4C 32 97 87     1 ld (Numero_de_disparotes),a
1441  8B4F C9           	ret
1442  8B50
1443  8B50              ; *************************************************************************************************************************************************************
1444  8B50              ;
1445  8B50              ; 20/10/22
1446  8B50              ;
1447  8B50              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1448  8B50              ;
1449  8B50              ; Destruye el puntero y DE !!!!!
1450  8B50
1451  8B50 5E           Extrae_address ld e,(hl)
1452  8B51 23           	inc hl
1453  8B52 56           	ld d,(hl)
1454  8B53 2B           	dec hl
1455  8B54 EB           	ex de,hl
1456  8B55 C9           	ret
1457  8B56
1458  8B56              ; *************************************************************************************************************************************************************
1459  8B56              ;
1460  8B56              ;	7/2/23
1461  8B56              ;
1462  8B56              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1463  8B56              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1464  8B56              ;
1465  8B56              ;   Destruye HL y BC !!!!!,
1466  8B56              ;
1467  8B56              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1468  8B56              ;					"0" ..... Izquierda.
1469  8B56
1470  8B56              Inicia_Puntero_objeto
1471  8B56
1472  8B56 3A 49 87     	ld a,(Cuad_objeto)
1473  8B59 E6 01        	and 1
1474  8B5B F5           	push af
1475  8B5C CC 7A 8B     	call z,Inicia_puntero_objeto_izq
1476  8B5F F1           	pop af
1477  8B60 28 2B        	jr z,1F
1478  8B62 CD 67 8B     	call Inicia_puntero_objeto_der
1479  8B65 18 26        	jr 1F
1480  8B67
1481  8B67              ; Arrancamos desde la parte izquierda de la pantalla.
1482  8B67              ; Iniciamos (Indice_Sprite_der).
1483  8B67
1484  8B67 2A 3F 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1485  8B6A 22 43 87     	ld (Puntero_DESPLZ_der),hl
1486  8B6D CD 50 8B     	call Extrae_address
1487  8B70 22 39 87     	ld (Puntero_objeto),hl
1488  8B73
1489  8B73 2A 41 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1490  8B76 22 45 87     	ld (Puntero_DESPLZ_izq),hl
1491  8B79 C9           	ret
1492  8B7A
1493  8B7A              ; Arrancamos desde la parte derecha de la pantalla.
1494  8B7A              ; Iniciamos (Indice_Sprite_izq).
1495  8B7A
1496  8B7A 2A 41 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1497  8B7D 22 45 87     	ld (Puntero_DESPLZ_izq),hl
1498  8B80 CD 50 8B     	call Extrae_address
1499  8B83 22 39 87     	ld (Puntero_objeto),hl
1500  8B86
1501  8B86 2A 3F 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1502  8B89 22 43 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1503  8B8C C9           	ret
1504  8B8D
1505  8B8D              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1506  8B8D
1507  8B8D 21 40 83     1 ld hl,Amadeus
1508  8B90 ED 4B 39 87  	ld bc,(Puntero_objeto)
1509  8B94 B7 ED 42     	sub hl,bc
1510  8B97 C0           	ret nz
1511  8B98 21 57 87     	ld hl,Ctrl_0
1512  8B9B CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1513  8B9D C9           	ret 												; _de nuestra nave en los extremos.
1514  8B9E
1515  8B9E              ; *************************************************************************************************************************************************************
1516  8B9E              ;
1517  8B9E              ;	21/12/23
1518  8B9E              ;
1519  8B9E              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1520  8B9E              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1521  8B9E
1522  8B9E              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1523  8B9E              ;	_de la 2ª y 3ª entidad respectivamente.
1524  8B9E
1525  8B9E              Store_Restore_cajas
1526  8B9E
1527  8B9E              ;	push hl
1528  8B9E              ;	push de
1529  8B9E              ; 	push bc
1530  8B9E
1531  8B9E              ;	STORE !!!!!
1532  8B9E              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1533  8B9E
1534  8B9E
1535  8B9E F3           	di
1536  8B9F 21 34 87     	ld hl,Variables_DRAW
1537  8BA2 ED 5B 79 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1538  8BA6 01 2A 00     	ld bc,42
1539  8BA9 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1540  8BAB FB           	ei
1541  8BAC
1542  8BAC 18 FE        	jr $
1543  8BAE
1544  8BAE              ; 	Entidad_sospechosa. 20/4/23
1545  8BAE
1546  8BAE 3A 4A 87     	ld a,(Impacto)
1547  8BB1 A7           	and a
1548  8BB2 28 0C        	jr z,1F
1549  8BB4
1550  8BB4 2A 79 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1551  8BB7 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1552  8BBA A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1553  8BBB ED 4A        	adc hl,bc 											; _ "0" más adelante.
1554  8BBD 22 9D 87     	ld (Entidad_sospechosa_de_colision),hl
1555  8BC0
1556  8BC0              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1557  8BC0
1558  8BC0 2A 7B 87     1 ld hl,(Puntero_restore_caja)
1559  8BC3 7E           	ld a,(hl)
1560  8BC4 A7           	and a
1561  8BC5 F5           	push af
1562  8BC6 28 0E        	jr z,2F
1563  8BC8
1564  8BC8 F3           	di
1565  8BC9 18 FE        	jr $
1566  8BCB FB           	ei
1567  8BCC
1568  8BCC F3           	di
1569  8BCD 11 34 87     	ld de,Variables_DRAW
1570  8BD0 01 2A 00     	ld bc,42
1571  8BD3 ED B0        	ldir
1572  8BD5 FB           	ei
1573  8BD6
1574  8BD6 CD EF 8B     2 call Incrementa_punteros_de_cajas
1575  8BD9
1576  8BD9 F1           	pop af
1577  8BDA 28 E4        	jr z,1B
1578  8BDC
1579  8BDC              ;	pop bc
1580  8BDC              ;	pop de
1581  8BDC              ;	pop hl
1582  8BDC
1583  8BDC C9           	ret
1584  8BDD
1585  8BDD              ; **************************************************************************************************
1586  8BDD              ;
1587  8BDD              ;	21/12/23
1588  8BDD              ;
1589  8BDD              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1590  8BDD
1591  8BDD E5           Restore_entidad push hl
1592  8BDE D5           	push de
1593  8BDF C5            	push bc
1594  8BE0
1595  8BE0 2A 79 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1596  8BE3 11 34 87     	ld de,Variables_DRAW
1597  8BE6 01 2A 00     	ld bc,42
1598  8BE9 ED B0        	ldir
1599  8BEB
1600  8BEB C1           	pop bc
1601  8BEC D1           	pop de
1602  8BED E1           	pop hl
1603  8BEE C9           	ret
1604  8BEF
1605  8BEF              ; **************************************************************************************************
1606  8BEF              ;
1607  8BEF              ;	08/05/23
1608  8BEF              ;
1609  8BEF              ;	Incrementamos los dos punteros de entidades. (+1).
1610  8BEF
1611  8BEF              Incrementa_punteros_de_cajas
1612  8BEF
1613  8BEF 2A 7B 87     	ld hl,(Puntero_restore_caja)
1614  8BF2 22 79 87     	ld (Puntero_store_caja),hl
1615  8BF5 2A 7D 87     	ld hl,(Indice_restore_caja)
1616  8BF8 23           	inc hl
1617  8BF9 23           	inc hl
1618  8BFA 22 7D 87     	ld (Indice_restore_caja),hl
1619  8BFD CD 50 8B         call Extrae_address
1620  8C00 22 7B 87         ld (Puntero_restore_caja),hl
1621  8C03 C9               ret
1622  8C04
1623  8C04              ; **************************************************************************************************
1624  8C04              ;
1625  8C04              ;	21/12/23
1626  8C04              ;
1627  8C04              ;	Restore_Amadeus
1628  8C04              ;
1629  8C04              ;	Cargamos en DRAW los parámetros de Amadeus.
1630  8C04              ;
1631  8C04
1632  8C04 E5           Restore_Amadeus	push hl
1633  8C05 D5           	push de
1634  8C06 C5            	push bc
1635  8C07 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1636  8C0A 11 34 87     	ld de,Variables_DRAW
1637  8C0D 01 2A 00     	ld bc,42
1638  8C10 ED B0        	ldir
1639  8C12 C1           	pop bc
1640  8C13 D1           	pop de
1641  8C14 E1           	pop hl
1642  8C15 C9           	ret
1643  8C16
1644  8C16              ; *************************************************************************************************************************************************************
1645  8C16              ;
1646  8C16              ;	21/12/23
1647  8C16              ;
1648  8C16              ;	Store_Amadeus
1649  8C16              ;
1650  8C16              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1651  8C16              ;
1652  8C16              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1653  8C16              ;
1654  8C16              ;	DESTRUYE: HL y BC y DE.
1655  8C16
1656  8C16 21 34 87     Store_Amadeus ld hl,Variables_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1657  8C19 01 2A 00     	ld bc,42
1658  8C1C ED B0        	ldir
1659  8C1E C9           	ret
1660  8C1F
1661  8C1F              ; -----------------------------------------------------------
1662  8C1F              ;
1663  8C1F              ;	21/12/23
1664  8C1F              ;
1665  8C1F              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1666  8C1F              ;
1667  8C1F              ;	Destruye: HL,BC,DE,A
1668  8C1F
1669  8C1F 21 34 87     Borra_datos_entidad ld hl,Variables_DRAW
1670  8C22 01 29 00     	ld bc,41
1671  8C25 AF           	xor a
1672  8C26 77           	ld (hl),a
1673  8C27 11 35 87     	ld de,Variables_DRAW+1
1674  8C2A ED B0        	ldir
1675  8C2C C9           	ret
1676  8C2D
1677  8C2D              ; -----------------------------------------------------------
1678  8C2D
1679  8C2D              ; Teclado.
1680  8C2D
1681  8C2D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1682  8C2F DB FE        	in a,($fe)
1683  8C31 E6 01        	and $01
1684  8C33 28 02        	jr z,1f
1685  8C35 18 F6        	jr Pulsa_ENTER
1686  8C37 C9           1 ret
1687  8C38
1688  8C38              ; **************************************************************************************************
1689  8C38              ;
1690  8C38              ; Temporización.
1691  8C38
1692  8C38              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1693  8C38              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1694  8C38              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1695  8C38              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1696  8C38
1697  8C38              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1698  8C38              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1699  8C38              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1700  8C38
1701  8C38              ; A partir de $4f61 no hace falta DELAY.
1702  8C38
1703  8C38              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1704  8C38
1705  8C38 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1706  8C3B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1707  8C3C 78           	LD A,B
1708  8C3D A7           	AND A
1709  8C3E 20 FB        	JR NZ,wait
1710  8C40 C9           	RET
1711  8C41
1712  8C41              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1713  8C41              ;
1714  8C41              ;	5/3/23
1715  8C41              ;
1716  8C41              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1717  8C41
1718  8C41              Movimiento_Amadeus
1719  8C41
1720  8C41              ; Disparo.
1721  8C41
1722  8C41 3A AD 87     	ld a,(Disparo_Amadeus)
1723  8C44 A7           	and a
1724  8C45 20 02        	jr nz,1F
1725  8C47 18 15        	jr 2F
1726  8C49
1727  8C49 3E F7        1 ld a,$f7													; "5" para disparar.
1728  8C4B DB FE        	in a,($fe)
1729  8C4D E6 10        	and $10
1730  8C4F
1731  8C4F F5           	push af
1732  8C50 CC F8 8C     	call z,Genera_disparo
1733  8C53 F1           	pop af
1734  8C54 20 08        	jr nz,2F
1735  8C56
1736  8C56 3A AD 87     	ld a,(Disparo_Amadeus)
1737  8C59 EE 01        	xor 1
1738  8C5B 32 AD 87     	ld (Disparo_Amadeus),a
1739  8C5E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1740  8C60 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1741  8C62 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1742  8C64 CC B4 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1743  8C67
1744  8C67 3E F7        	ld a,$f7
1745  8C69 DB FE        	in a,($fe)
1746  8C6B E6 01        	and $01
1747  8C6D C8           	ret z
1748  8C6E
1749  8C6E 3E F7        	ld a,$f7
1750  8C70 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1751  8C72 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1752  8C74 CC 91 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1753  8C77 C9           	ret
1754  8C78
1755  8C78              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1756  8C78              ;
1757  8C78              ;	Rutina provisional para que los malotes cagen balas.
1758  8C78
1759  8C78              Detecta_disparo_entidad
1760  8C78
1761  8C78 3A B0 87     	ld a,(Disparo_entidad)
1762  8C7B A7           	and a
1763  8C7C C8           	ret z
1764  8C7D
1765  8C7D              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1766  8C7D
1767  8C7D              ;	ld a,$7f				; Detecta SPACE.
1768  8C7D              ;	in a,($fe)
1769  8C7D              ;	and 1
1770  8C7D              ;	ret nz
1771  8C7D
1772  8C7D CD F8 8C     	call Genera_disparo
1773  8C80 C9           	ret
1774  8C81
1775  8C81              ; ----------------------------------------------------------------------
1776  8C81              ;
1777  8C81              ;	8/9/23
1778  8C81
1779  8C81 2A 93 87     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1780  8C84 2B            	dec hl
1781  8C85 7E           	ld a,(hl)
1782  8C86 A7           	and a
1783  8C87 C8           	ret z										; Salimos si es álbum está vacío.
1784  8C88
1785  8C88 11 50 87     	ld de,Variables_de_borrado+5
1786  8C8B 01 06 00     	ld bc,6
1787  8C8E ED B8        	lddr
1788  8C90 C9           	ret
1789  8C91
1790  8C91              ; ----------------------------------------------------------------------
1791  8C91              ;
1792  8C91              ;	9/9/23
1793  8C91
1794  8C91              Repone_datos_de_borrado_Amadeus
1795  8C91
1796  8C91 21 4B 87     	ld hl,Variables_de_borrado
1797  8C94 11 AC 70     	ld de,Album_de_fotos_Amadeus
1798  8C97 01 06 00     	ld bc,6
1799  8C9A ED B0        	ldir
1800  8C9C
1801  8C9C EB           	ex de,hl
1802  8C9D 22 93 87     	ld (End_Snapshot_Amadeus),hl
1803  8CA0
1804  8CA0 C9           	ret
1805  8CA1
1806  8CA1              ; ----------------------------------------------------------------------
1807  8CA1              ;
1808  8CA1              ;	27/10/23
1809  8CA1              ;
1810  8CA1
1811  8CA1              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1812  8CA1              ;	_ Album_de_fotos correspondiente.
1813  8CA1
1814  8CA1              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1815  8CA1              ;	_ durante el proceso de escritura.
1816  8CA1
1817  8CA1              Repone_datos_de_borrado
1818  8CA1
1819  8CA1 F3           	di
1820  8CA2 ED 5B 8D 87  	ld de,(Stack_snapshot)
1821  8CA6 21 4B 87     	ld hl,Variables_de_borrado
1822  8CA9 01 06 00     	ld bc,6
1823  8CAC ED B0        	ldir
1824  8CAE FB           	ei
1825  8CAF
1826  8CAF EB           	ex de,hl
1827  8CB0 22 8D 87     	ld (Stack_snapshot),hl
1828  8CB3
1829  8CB3 C9           	ret
1830  8CB4
1831  8CB4              ; --------------------------------------------------------------------------------------
1832  8CB4
1833  8CB4              Pinta_Amadeus
1834  8CB4
1835  8CB4 CD 1C 8B        	call Calcula_malotes_Amadeus
1836  8CB7 CD 5C 95     	call Extrae_foto_Amadeus
1837  8CBA CD DC 8A     	call Limpia_album_Amadeus
1838  8CBD
1839  8CBD C9           	ret
1840  8CBE
1841  8CBE              Pinta_entidades
1842  8CBE
1843  8CBE              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1844  8CBE
1845  8CBE 3A 95 87     	ld a,(Ctrl_3)
1846  8CC1 CB 47        	bit 0,a
1847  8CC3 C8           	ret z
1848  8CC4
1849  8CC4 CD 04 8B     	call Calcula_numero_de_malotes
1850  8CC7 CD DA 94     	call Extrae_foto_entidades
1851  8CCA CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1852  8CCD
1853  8CCD C9           	ret
1854  8CCE
1855  8CCE              ; -----------------------------------------------------------------------------------
1856  8CCE              ;
1857  8CCE              ;	10/12/23
1858  8CCE              ;
1859  8CCE              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1860  8CCE
1861  8CCE              Actualiza_relojes
1862  8CCE
1863  8CCE 3A 95 87     	ld a,(Ctrl_3)
1864  8CD1 CB 47        	bit 0,a
1865  8CD3 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1866  8CD4
1867  8CD4 21 A8 87     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1868  8CD7 34           	inc (hl)
1869  8CD8
1870  8CD8 34           	inc (hl)
1871  8CD9 35           	dec (hl)
1872  8CDA C0           	ret nz
1873  8CDB
1874  8CDB 21 A9 87     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1875  8CDE 34           	inc (hl)
1876  8CDF C9           	ret
1877  8CE0
1878  8CE0              ; ---------------------------------------------------------------
1879  8CE0              ;
1880  8CE0              ;	21/12/23
1881  8CE0
1882  8CE0              Guarda_parametros_DRAW
1883  8CE0
1884  8CE0 21 34 87     	ld hl,Variables_DRAW
1885  8CE3 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1886  8CE6 01 2A 00     	ld bc,42
1887  8CE9 ED B0        	ldir
1888  8CEB C9           	ret
1889  8CEC
1890  8CEC              Recupera_parametros_DRAW
1891  8CEC
1892  8CEC 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1893  8CEF 11 34 87     	ld de,Variables_DRAW
1894  8CF2 01 2A 00     	ld bc,42
1895  8CF5 ED B0        	ldir
1896  8CF7 C9           	ret
1897  8CF8
1898  8CF8              ; ---------------------------------------------------------------
1899  8CF8
1900  8CF8              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8CF8              ; ******************************************************************************************************************************************************************************************
   2+ 8CF8              ;
   3+ 8CF8              ;   21/07/23
   4+ 8CF8              ;
   5+ 8CF8              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8CF8              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8CF8              ;
   8+ 8CF8              ;
   9+ 8CF8              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8CF8              ;
  11+ 8CF8              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8CF8              ;               _ hacen las entidades hacia abajo.
  13+ 8CF8              ;
  14+ 8CF8              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8CF8              ;
  16+ 8CF8              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8CF8              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8CF8              ;
  19+ 8CF8              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8CF8              ;           _ la bala.
  21+ 8CF8              ;
  22+ 8CF8              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8CF8              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8CF8              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8CF8              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8CF8              ;           _ en el momento de generarse la bala)).
  27+ 8CF8
  28+ 8CF8              Genera_disparo
  29+ 8CF8
  30+ 8CF8              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8CF8              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8CF8              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8CF8              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8CF8              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8CF8              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8CF8              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8CF8
  38+ 8CF8              ; Exclusiones:
  39+ 8CF8
  40+ 8CF8 3A 61 87         ld a,(Vel_down)
  41+ 8CFB 47               ld b,a
  42+ 8CFC 3A A7 87         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8CFF B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D00 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D01 3A 58 87         ld a,(Columnas)
  46+ 8D04 47               ld b,a
  47+ 8D05 3A 36 87         ld a,(Columns)
  48+ 8D08 B8               cp b
  49+ 8D09 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D0A
  51+ 8D0A              ; ----- ----- -----
  52+ 8D0A
  53+ 8D0A 3A 57 87         ld a,(Ctrl_0)
  54+ 8D0D CB 77            bit 6,a
  55+ 8D0F 20 06            jr nz,14F
  56+ 8D11
  57+ 8D11 3A 3C 87         ld a,(Coordenada_y)
  58+ 8D14 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D16 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D17
  61+ 8D17 21 00 80     14 ld hl,Indice_disparo
  62+ 8D1A 3A 3D 87         ld a,(CTRL_DESPLZ)
  63+ 8D1D 4F               ld c,a
  64+ 8D1E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D20              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D20              ;                                            ""        ""       "f9", B="1"
  67+ 8D20              ;                                            ""        ""       "fb", B="2"
  68+ 8D20              ;                                            ""        ""       "fb", B="3"
  69+ 8D20 A7               and a
  70+ 8D21 28 10            jr z,1F
  71+ 8D23 E6 01            and 1
  72+ 8D25 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D26
  74+ 8D26 79               ld a,c
  75+ 8D27 16 F9            ld d,$f9
  76+ 8D29 23           2 inc hl
  77+ 8D2A 23               inc hl
  78+ 8D2B 04               inc b
  79+ 8D2C BA               cp d
  80+ 8D2D 28 04            jr z,1F
  81+ 8D2F 14               inc d
  82+ 8D30 14               inc d
  83+ 8D31 18 F6            jr 2B
  84+ 8D33
  85+ 8D33 CD 50 8B     1 call Extrae_address
  86+ 8D36 E5               push hl
  87+ 8D37 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D39 DD 21 A2 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D3D
  90+ 8D3D              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D3D              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D3D
  93+ 8D3D 3A 57 87         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D40 CB 77            bit 6,a
  95+ 8D42 20 04            jr nz,19F
  96+ 8D44
  97+ 8D44 AF               xor a
  98+ 8D45 32 B0 87         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D48
 100+ 8D48 3A 49 87     19 ld a,(Cuad_objeto)
 101+ 8D4B FE 02            cp 2
 102+ 8D4D 38 66            jr c,3F
 103+ 8D4F 28 64            jr z,3F
 104+ 8D51
 105+ 8D51              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D51
 107+ 8D51 E6 01            and 1
 108+ 8D53 28 30            jr z,4F
 109+ 8D55
 110+ 8D55              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D55              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D55              ;
 113+ 8D55              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D55              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D55              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D55
 117+ 8D55 2A 37 87     	ld hl,(Posicion_actual)
 118+ 8D58
 119+ 8D58              ;   Amadeus o entidad ???.
 120+ 8D58
 121+ 8D58 3A 57 87         ld a,(Ctrl_0)
 122+ 8D5B CB 77            bit 6,a
 123+ 8D5D 28 0A            jr z,8F
 124+ 8D5F
 125+ 8D5F              ; 	Dispara Amadeus.
 126+ 8D5F
 127+ 8D5F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D61 CD CB 94         call PreviousScan
 129+ 8D64 CD CB 94         call PreviousScan
 130+ 8D67
 131+ 8D67              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D67              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D67              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D67              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D67
 136+ 8D67 18 11            jr 10F
 137+ 8D69
 138+ 8D69              ; 	Dispara Entidad.
 139+ 8D69
 140+ 8D69 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D6C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D6C
 143+ 8D6C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D6C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D6C
 146+ 8D6C C5               push bc
 147+ 8D6D 06 10            ld b,16
 148+ 8D6F CD BC 94     9 call NextScan
 149+ 8D72 10 FB            djnz 9B
 150+ 8D74 C1               pop bc
 151+ 8D75 CD DF 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D78 18 06            jr 17F
 153+ 8D7A
 154+ 8D7A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D7A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D7A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D7A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D7A
 159+ 8D7A CD DF 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D7D CD 54 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8D80              ;                                                      ; _al generar el disparo.
 162+ 8D80
 163+ 8D80              ; 	LLegados a este punto tendremos:
 164+ 8D80              ;
 165+ 8D80              ;       Puntero_objeto_disparo en IY.
 166+ 8D80              ;       Rutinas_de_impresion en IX.
 167+ 8D80              ;       Puntero_de_impresion en HL.
 168+ 8D80              ;       Impacto/Dirección en BC.
 169+ 8D80
 170+ 8D80 CD E7 8D     17 call Almacena_disparo
 171+ 8D83 18 52            jr 6F                                             ; RET.
 172+ 8D85
 173+ 8D85              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8D85              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8D85              ;
 176+ 8D85              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8D85              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8D85              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8D85
 180+ 8D85 2A 37 87     4 ld hl,(Posicion_actual)
 181+ 8D88
 182+ 8D88              ;   Amadeus o entidad ???.
 183+ 8D88
 184+ 8D88 3A 57 87         ld a,(Ctrl_0)
 185+ 8D8B CB 77            bit 6,a
 186+ 8D8D 28 0A            jr z,11F
 187+ 8D8F
 188+ 8D8F              ; 	Dispara Amadeus.
 189+ 8D8F
 190+ 8D8F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8D91 CD CB 94         call PreviousScan
 192+ 8D94 CD CB 94         call PreviousScan
 193+ 8D97
 194+ 8D97              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8D97              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8D97              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8D97              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8D97
 199+ 8D97 18 11            jr 13F
 200+ 8D99
 201+ 8D99              ; 	Dispara Entidad.
 202+ 8D99
 203+ 8D99 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8D9C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8D9C
 206+ 8D9C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8D9C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8D9C
 209+ 8D9C C5               push bc
 210+ 8D9D 06 10            ld b,16
 211+ 8D9F CD BC 94     12 call NextScan
 212+ 8DA2 10 FB            djnz 12B
 213+ 8DA4 C1               pop bc
 214+ 8DA5
 215+ 8DA5 CD D8 8D         call Ajusta_disparo_parte_derecha
 216+ 8DA8 18 06            jr 18F
 217+ 8DAA
 218+ 8DAA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DAA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DAA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DAA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DAA
 223+ 8DAA CD D8 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8DAD CD 54 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DB0              ;                                                       ; _al generar el disparo.
 226+ 8DB0
 227+ 8DB0              ; LLegados a este punto tendremos:
 228+ 8DB0              ;
 229+ 8DB0              ;       Puntero_objeto_disparo en IY.
 230+ 8DB0              ;       Rutinas_de_impresion en IX.
 231+ 8DB0              ;       Puntero_de_impresion en HL.
 232+ 8DB0              ;       Impacto/Dirección en BC.
 233+ 8DB0
 234+ 8DB0 CD E7 8D     18 call Almacena_disparo
 235+ 8DB3 18 22            jr 6F                                               ; RET.
 236+ 8DB5
 237+ 8DB5              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DB5
 239+ 8DB5 28 11        3 jr z,5F
 240+ 8DB7
 241+ 8DB7              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DB7              ;
 243+ 8DB7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DB7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DB7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DB7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DB7
 248+ 8DB7              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DB7              ;	   ""        ""       "f9", B="1"
 250+ 8DB7              ;	   ""        ""       "fb", B="2"
 251+ 8DB7              ; 	   ""        ""       "fb", B="3"
 252+ 8DB7
 253+ 8DB7 2A 37 87     	ld hl,(Posicion_actual)
 254+ 8DBA CD BC 94     	call NextScan
 255+ 8DBD
 256+ 8DBD              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DBD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DBD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DBD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DBD
 261+ 8DBD CD DF 8D         call Ajusta_disparo_parte_izquierda
 262+ 8DC0
 263+ 8DC0              ; 	No se produce impacto. B="$80"
 264+ 8DC0              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DC0
 266+ 8DC0 01 80 80         ld bc,$8080
 267+ 8DC3
 268+ 8DC3              ; 	LLegados a este punto tendremos:
 269+ 8DC3              ;
 270+ 8DC3              ;       Puntero_objeto_disparo en IY.
 271+ 8DC3              ;       Rutinas_de_impresion en IX.
 272+ 8DC3              ;       Puntero_de_impresion en HL.
 273+ 8DC3              ;       Impacto/Dirección en BC.
 274+ 8DC3
 275+ 8DC3 CD E7 8D         call Almacena_disparo
 276+ 8DC6 18 0F            jr 6F                                           ; RET.
 277+ 8DC8
 278+ 8DC8              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DC8              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DC8              ;
 281+ 8DC8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DC8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DC8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DC8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DC8
 286+ 8DC8 2A 37 87     5 ld hl,(Posicion_actual)
 287+ 8DCB CD BC 94     	call NextScan
 288+ 8DCE
 289+ 8DCE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DCE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DCE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DCE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DCE
 294+ 8DCE CD D8 8D         call Ajusta_disparo_parte_derecha
 295+ 8DD1
 296+ 8DD1              ; 	No se produce impacto. B="$80"
 297+ 8DD1              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8DD1
 299+ 8DD1 01 80 80     15 ld bc,$8080
 300+ 8DD4
 301+ 8DD4              ; 	LLegados a este punto tendremos:
 302+ 8DD4              ;
 303+ 8DD4              ;       Puntero_objeto_disparo en IY.
 304+ 8DD4              ;       Rutinas_de_impresion en IX.
 305+ 8DD4              ;       Puntero_de_impresion en HL.
 306+ 8DD4              ;       Impacto/Dirección en BC.
 307+ 8DD4
 308+ 8DD4 CD E7 8D         call Almacena_disparo
 309+ 8DD7
 310+ 8DD7 C9           6 ret
 311+ 8DD8
 312+ 8DD8              ; ----------------------------------------------------------------
 313+ 8DD8              ;
 314+ 8DD8              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8DD8              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8DD8              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8DD8
 318+ 8DD8 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8DD9 FE 02            cp 2
 320+ 8DDB 38 01            jr c,1F
 321+ 8DDD 23               inc hl
 322+ 8DDE C9           1 ret
 323+ 8DDF
 324+ 8DDF 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8DE0 FE 01        	cp 1
 326+ 8DE2 20 01        	jr nz,1F
 327+ 8DE4 2B           	dec hl
 328+ 8DE5 2B           1 dec hl
 329+ 8DE6 C9               ret
 330+ 8DE7
 331+ 8DE7              ; ----------------------------------------------------------------
 332+ 8DE7              ;
 333+ 8DE7              ;   25/02/23
 334+ 8DE7              ;
 335+ 8DE7              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8DE7              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8DE7              ;
 338+ 8DE7              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8DE7              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8DE7
 341+ 8DE7              Almacena_disparo
 342+ 8DE7
 343+ 8DE7 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8DE8 F1               pop af
 345+ 8DE9 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8DEA
 347+ 8DEA 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8DEB E6 01            and 1
 349+ 8DED 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8DEF              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8DEF              ; 	Dispara AMADEUS.
 352+ 8DEF
 353+ 8DEF              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8DEF              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8DEF              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8DEF              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8DEF
 358+ 8DEF C5               push bc
 359+ 8DF0 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8DF3 2A 9A 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8DF6 A7               and a
 362+ 8DF7 ED 42            sbc hl,bc
 363+ 8DF9 CC D5 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8DFC C1               pop bc
 365+ 8DFD 28 54            jr z,4F
 366+ 8DFF
 367+ 8DFF 2A 9A 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E02 23               inc hl
 369+ 8E03 23               inc hl
 370+ 8E04 22 9A 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E07              ;                                                   ; _ Disparo_(+1).
 372+ 8E07 18 18            jr 2F
 373+ 8E09
 374+ 8E09              ; Dispara una entidad.
 375+ 8E09
 376+ 8E09 C5           1 push bc
 377+ 8E0A 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E0D 2A 98 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E10 A7               and a
 380+ 8E11 ED 42            sbc hl,bc
 381+ 8E13 CC CE 8A         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E16 C1               pop bc
 383+ 8E17 28 3A            jr z,4F
 384+ 8E19
 385+ 8E19 2A 98 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E1C 23               inc hl
 387+ 8E1D 23               inc hl
 388+ 8E1E 22 98 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E21              ;                                                   ; _ Disparo_(+1).
 390+ 8E21 CD 50 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E24              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E24              ;
 393+ 8E24              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E24              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E24              ;                                                     Puntero_de_impresion en HL.
 396+ 8E24              ;                                                     Impacto/Dirección en BC.
 397+ 8E24
 398+ 8E24 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E25 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E26 23               inc hl                                          ; _ al siguiente.
 401+ 8E27 A7               and a
 402+ 8E28 20 C0            jr nz,3B
 403+ 8E2A
 404+ 8E2A 08               ex af,af
 405+ 8E2B ED 73 87 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E2F F9               ld sp,hl
 407+ 8E30
 408+ 8E30 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E32 F5               push af                                         ; Puntero de impresión.
 410+ 8E33 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E35 C5               push bc                                         ; Control.
 412+ 8E36
 413+ 8E36 ED 7B 87 87      ld sp,(Stack)
 414+ 8E3A
 415+ 8E3A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E3A
 417+ 8E3A 21 76 87     	ld hl,Ctrl_1
 418+ 8E3D CB C6        	set 0,(hl)
 419+ 8E3F
 420+ 8E3F DD E5        	push ix
 421+ 8E41 E1               pop hl
 422+ 8E42 F5               push af
 423+ 8E43 DD E1            pop ix
 424+ 8E45
 425+ 8E45 CD 16 71     	call Guarda_foto_registros
 426+ 8E48
 427+ 8E48 21 76 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E4B CB 86        	res 0,(hl)
 429+ 8E4D
 430+ 8E4D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E4D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E4D
 433+ 8E4D CD D5 8A         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E50 CD CE 8A         call Inicia_Puntero_Disparo_Entidades
 435+ 8E53
 436+ 8E53 C9           4 ret
 437+ 8E54
 438+ 8E54              ; ----------------------------------------------------------------
 439+ 8E54              ;
 440+ 8E54              ;   4/3/23
 441+ 8E54              ;
 442+ 8E54              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E54              ;   _ al generarse el disparo.
 444+ 8E54              ;
 445+ 8E54              ;       "$80" ..... No se produce colisión.
 446+ 8E54              ;       "$81" ..... Se produce colisión.
 447+ 8E54              ;
 448+ 8E54              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E54              ;         _ que forman el disparo.
 450+ 8E54
 451+ 8E54
 452+ 8E54              Comprueba_Colision
 453+ 8E54
 454+ 8E54              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E54
 456+ 8E54 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E56 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E57
 459+ 8E57 CD 8D 8E         call Modifica_H_Velocidad_disparo
 460+ 8E5A
 461+ 8E5A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E5B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E5D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E5F
 465+ 8E5F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E61 CD 7D 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E64
 468+ 8E64 7B               ld a,e
 469+ 8E65 E6 01            and 1
 470+ 8E67 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E69              ;                                                  ; _ para activar IMPACTO.
 472+ 8E69 E1               pop hl
 473+ 8E6A E5               push hl
 474+ 8E6B CD BC 94         call NextScan
 475+ 8E6E
 476+ 8E6E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E6F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E71 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E73              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E73 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E75 CD 7D 8E         call Bucle_2
 482+ 8E78
 483+ 8E78 43           1 ld b,e
 484+ 8E79 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E7A FD E1            pop iy
 486+ 8E7C C9               ret
 487+ 8E7D
 488+ 8E7D              ; ---------- ----------
 489+ 8E7D
 490+ 8E7D 06 02        Bucle_2 ld b,2
 491+ 8E7F FD 7E 00     2 ld a,(iy)
 492+ 8E82 A6               and (hl)
 493+ 8E83 28 02            jr z,1F
 494+ 8E85 1E 81            ld e,$81
 495+ 8E87 23           1 inc hl
 496+ 8E88 FD 23            inc iy
 497+ 8E8A 10 F3            djnz 2B
 498+ 8E8C C9               ret
 499+ 8E8D
 500+ 8E8D              ; ---------- ----------
 501+ 8E8D              ;
 502+ 8E8D              ;   21/7/23
 503+ 8E8D
 504+ 8E8D              Modifica_H_Velocidad_disparo
 505+ 8E8D
 506+ 8E8D 3A A7 87         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8E90 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8E92 D0               ret nc                                         ; _ incrementamos H.
 509+ 8E93 24               inc h
 510+ 8E94
 511+ 8E94 C9               ret
 512+ 8E95
 513+ 8E95              ; -------------------------------------------------------------------------------------------------------------
 514+ 8E95              ;
 515+ 8E95              ;   04/12/23
 516+ 8E95              ;
 517+ 8E95              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8E95              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8E95              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8E95              ;
 521+ 8E95              ;   MODIFICA: HL,DE,B y A.
 522+ 8E95
 523+ 8E95              Genera_coordenadas_X
 524+ 8E95
 525+ 8E95              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8E95              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8E95
 528+ 8E95              ;   Limpiamos almacenes.
 529+ 8E95
 530+ 8E95 CD C6 8E         call Limpia_Coordenadas_X
 531+ 8E98
 532+ 8E98              ;   Almacenamos coordenadas X.
 533+ 8E98
 534+ 8E98              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8E98
 536+ 8E98 2A 51 87         ld hl,(Puntero_de_impresion)
 537+ 8E9B 11 A4 87         ld de,Coordenadas_X_Entidad
 538+ 8E9E 06 02            ld b,2
 539+ 8EA0
 540+ 8EA0 3A 3D 87         ld a,(CTRL_DESPLZ)
 541+ 8EA3 A7               and a
 542+ 8EA4 28 01            jr z,1F
 543+ 8EA6 04               inc b
 544+ 8EA7
 545+ 8EA7 CD BD 8E     1 call Guarda_coordenadas_X
 546+ 8EAA
 547+ 8EAA              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8EAA
 549+ 8EAA 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8EAD 11 A1 87         ld de,Coordenadas_X_Amadeus
 551+ 8EB0 06 02            ld b,2
 552+ 8EB2
 553+ 8EB2 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8EB5 A7               and a
 555+ 8EB6 28 01            jr z,2F
 556+ 8EB8 04               inc b
 557+ 8EB9
 558+ 8EB9 CD BD 8E     2 call Guarda_coordenadas_X
 559+ 8EBC
 560+ 8EBC              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8EBC
 562+ 8EBC C9               ret
 563+ 8EBD
 564+ 8EBD              ; ----- ----- ----- ----- -----
 565+ 8EBD
 566+ 8EBD 7D           Guarda_coordenadas_X  ld a,l
 567+ 8EBE E6 1F            and $1f
 568+ 8EC0 12           1 ld (de),a
 569+ 8EC1 3C               inc a
 570+ 8EC2 13               inc de
 571+ 8EC3 10 FB            djnz 1B
 572+ 8EC5 C9               ret
 573+ 8EC6
 574+ 8EC6 AF           Limpia_Coordenadas_X xor a
 575+ 8EC7 06 06            ld b,6
 576+ 8EC9 21 A1 87         ld hl,Coordenadas_X_Amadeus
 577+ 8ECC 77           1 ld (hl),a
 578+ 8ECD 23               inc hl
 579+ 8ECE 10 FC            djnz 1B
 580+ 8ED0 C9               ret
 581+ 8ED1
 582+ 8ED1              ; ----- ----- ----- ----- -----
 583+ 8ED1
 584+ 8ED1              Compara_coordenadas_X
 585+ 8ED1
 586+ 8ED1 06 03            ld b,3
 587+ 8ED3 11 A6 87         ld de,Coordenadas_X_Entidad+2
 588+ 8ED6
 589+ 8ED6 1A               ld a,(de)
 590+ 8ED7 A7               and a
 591+ 8ED8 20 01            jr nz,2F
 592+ 8EDA 05               dec b
 593+ 8EDB
 594+ 8EDB 1B           2 dec de
 595+ 8EDC 1B               dec de
 596+ 8EDD 21 A1 87         ld hl,Coordenadas_X_Amadeus
 597+ 8EE0
 598+ 8EE0 D5           1 push de
 599+ 8EE1 E5               push hl
 600+ 8EE2 C5               push bc
 601+ 8EE3
 602+ 8EE3 CD ED 8E         call Comparando
 603+ 8EE6
 604+ 8EE6 C1               pop bc
 605+ 8EE7 E1               pop hl
 606+ 8EE8 D1               pop de
 607+ 8EE9
 608+ 8EE9 13               inc de
 609+ 8EEA 10 F4            djnz 1B
 610+ 8EEC
 611+ 8EEC C9               ret
 612+ 8EED
 613+ 8EED              ; ----- ----- ----- ----- -----
 614+ 8EED              ;
 615+ 8EED              ;   4/12/23
 616+ 8EED              ;
 617+ 8EED              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8EED
 619+ 8EED 06 03        Comparando ld b,3
 620+ 8EEF 1A               ld a,(de)
 621+ 8EF0 4E           2 ld c,(hl)
 622+ 8EF1 B9               cp c
 623+ 8EF2 28 04            jr z,1F
 624+ 8EF4 23               inc hl
 625+ 8EF5 10 F9            djnz 2B
 626+ 8EF7 C9               ret
 627+ 8EF8
 628+ 8EF8 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8EFA 32 4A 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8EFD 21 9C 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F00 CB D6            set 2,(hl)
 632+ 8F02 C9               ret
 633+ 8F03
 634+ 8F03              ; -----------------------------------------------------------------------
 635+ 8F03              ;
 636+ 8F03              ;   7/12/23
 637+ 8F03              ;
 638+ 8F03
 639+ 8F03              Detecta_colision_nave_entidad
 640+ 8F03
 641+ 8F03              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F03
 643+ 8F03 FD 2A 39 87      ld iy,(Puntero_objeto)
 644+ 8F07 2A 51 87         ld hl,(Puntero_de_impresion)
 645+ 8F0A
 646+ 8F0A E5               push hl
 647+ 8F0B
 648+ 8F0B              ; ----- ----- -----
 649+ 8F0B 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F0D 06 0A            ld b,10
 651+ 8F0F CD 3F 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F12 7B               ld a,e
 653+ 8F13 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F15 38 0E            jr c,3F
 655+ 8F17
 656+ 8F17              ; LLegados a este punto:
 657+ 8F17              ;
 658+ 8F17              ;   HAY COLISIÓN !!!!!.
 659+ 8F17              ;
 660+ 8F17              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F17              ;   SET el bit3 de (Impacto2).
 662+ 8F17              ;
 663+ 8F17              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F17
 665+ 8F17 21 4A 87         ld hl,Impacto
 666+ 8F1A 36 01            ld (hl),1
 667+ 8F1C 21 9C 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F1F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F21 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F23
 671+ 8F23 18 18            jr 1F
 672+ 8F25
 673+ 8F25              ; -----
 674+ 8F25
 675+ 8F25 E1           3 pop hl
 676+ 8F26 CD BC 94         call NextScan
 677+ 8F29 E5               push hl
 678+ 8F2A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F2B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F2D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F2F 30 0C            jr nc,1F
 682+ 8F31              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F31 10 DC            djnz 2B
 684+ 8F33
 685+ 8F33              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F33
 687+ 8F33              ; LLegados a este punto:
 688+ 8F33              ;
 689+ 8F33              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F33              ;
 691+ 8F33              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F33              ;   RES el bit2 de (Impacto2).
 693+ 8F33              ;
 694+ 8F33              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F33              ;   Lo colocamos a "0".
 696+ 8F33
 697+ 8F33 21 9C 87         ld hl,Impacto2
 698+ 8F36 CB 96            res 2,(hl)
 699+ 8F38 2A 9D 87         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F3B 36 00            ld (hl),0
 701+ 8F3D
 702+ 8F3D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F3E C9               ret
 704+ 8F3F
 705+ 8F3F               ; ---------- ----------
 706+ 8F3F
 707+ 8F3F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F40 3A 36 87         ld a,(Columns)
 709+ 8F43 47               ld b,a
 710+ 8F44 FD 7E 00     2 ld a,(iy)
 711+ 8F47 BE               cp (hl)
 712+ 8F48 28 01            jr z,1F
 713+ 8F4A
 714+ 8F4A 1C               inc e
 715+ 8F4B
 716+ 8F4B 23           1 inc hl
 717+ 8F4C FD 23            inc iy
 718+ 8F4E 10 F4            djnz 2B
 719+ 8F50 C1               pop bc
 720+ 8F51 C9               ret
 721+ 8F52
 722+ 8F52              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F52              ;
 724+ 8F52              ;   13/03/23
 725+ 8F52              ;
 726+ 8F52              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F52              ;
 728+ 8F52              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F52
 730+ 8F52 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F55 7E               ld a,(hl)
 732+ 8F56 A7               and a
 733+ 8F57 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F58
 735+ 8F58 44               ld b,h
 736+ 8F59 4D               ld c,l
 737+ 8F5A 2A 8F 87         ld hl,(Stack_snapshot_disparos)
 738+ 8F5D E5               push hl
 739+ 8F5E A7               and a
 740+ 8F5F ED 42            sbc hl,bc
 741+ 8F61 E5               push hl
 742+ 8F62 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F63
 744+ 8F63 E1               pop hl
 745+ 8F64 54               ld d,h
 746+ 8F65 5D               ld e,l
 747+ 8F66 1B               dec de
 748+ 8F67 ED B8            lddr                                                ; Limpiamos.
 749+ 8F69
 750+ 8F69 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8F6C 22 8F 87         ld (Stack_snapshot_disparos),hl
 752+ 8F6F
 753+ 8F6F C9               ret
 754+ 8F70
 755+ 8F70              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F70              ;
 757+ 8F70              ;   18/07/23
 758+ 8F70              ;
 759+ 8F70
 760+ 8F70              Motor_de_disparos
 761+ 8F70
 762+ 8F70              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F70
 764+ 8F70 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F73 2A 9A 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F76
 767+ 8F76 CD 50 8B     2 call Extrae_address
 768+ 8F79 7E               ld a,(hl)
 769+ 8F7A A7               and a
 770+ 8F7B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F7D
 772+ 8F7D              ; ----- ----- ----- ----- ----- -----
 773+ 8F7D
 774+ 8F7D C5               push bc
 775+ 8F7E CD 42 90         call foto_disparo_a_borrar
 776+ 8F81
 777+ 8F81              ; Existe colisión con este disparo???
 778+ 8F81
 779+ 8F81 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8F82 7E               ld a,(hl)
 781+ 8F83 2B               dec hl
 782+ 8F84 E6 01            and 1
 783+ 8F86 28 1D            jr z,9F
 784+ 8F88
 785+ 8F88              ;   En este punto:
 786+ 8F88              ;
 787+ 8F88              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8F88              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8F88              ;   _con la entidad).
 790+ 8F88              ;
 791+ 8F88              ;   Disparo_2A defw 0                                ; Control.
 792+ 8F88              ;    defw 0                                          ; Puntero objeto.
 793+ 8F88              ;    defw 0                                          ; Puntero de impresión.
 794+ 8F88              ;    defw 0                                          ; Rutina de impresión.
 795+ 8F88
 796+ 8F88 E5               push hl
 797+ 8F89
 798+ 8F89 06 04            ld b,4
 799+ 8F8B 23           19 inc hl
 800+ 8F8C 10 FD            djnz 19B
 801+ 8F8E
 802+ 8F8E CD 50 8B         call Extrae_address
 803+ 8F91 CD 92 9B         call Genera_coordenadas_disparo
 804+ 8F94
 805+ 8F94              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8F94
 807+ 8F94 21 9F 87         ld hl,Coordenadas_disparo_certero
 808+ 8F97 72               ld (hl),d
 809+ 8F98 23               inc hl
 810+ 8F99 73               ld (hl),e
 811+ 8F9A
 812+ 8F9A              ; Elimino el disparo de la base de datos.
 813+ 8F9A
 814+ 8F9A E1               pop hl
 815+ 8F9B CD C1 90         call Elimina_disparo_de_base_de_datos
 816+ 8F9E 21 9C 87         ld hl,Impacto2
 817+ 8FA1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FA3
 819+ 8FA3 18 06            jr 11F
 820+ 8FA5
 821+ 8FA5 CD 6B 90     9 call Mueve_disparo
 822+ 8FA8 CD 42 90         call foto_disparo_a_borrar
 823+ 8FAB
 824+ 8FAB C1           11 pop bc
 825+ 8FAC 18 04            jr 7F
 826+ 8FAE
 827+ 8FAE              ; ----- ----- ----- ----- ----- -----
 828+ 8FAE
 829+ 8FAE ED 42        1 sbc hl,bc
 830+ 8FB0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FB2
 832+ 8FB2 2A 9A 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FB5 23               inc hl
 834+ 8FB6 23               inc hl
 835+ 8FB7 22 9A 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FBA 18 BA            jr 2B
 837+ 8FBC
 838+ 8FBC CD D5 8A     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FBF              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FBF
 841+ 8FBF              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FBF
 843+ 8FBF 01 6E 85         ld bc,Disparo_11
 844+ 8FC2 2A 98 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FC5
 846+ 8FC5 CD 50 8B     5 call Extrae_address
 847+ 8FC8 7E               ld a,(hl)
 848+ 8FC9 A7               and a
 849+ 8FCA 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FCC
 851+ 8FCC              ; ----- ----- ----- ----- ----- -----
 852+ 8FCC
 853+ 8FCC C5               push bc
 854+ 8FCD CD 42 90         call foto_disparo_a_borrar
 855+ 8FD0
 856+ 8FD0              ; Existe colisión con este disparo???
 857+ 8FD0
 858+ 8FD0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8FD1 7E               ld a,(hl)
 860+ 8FD2 2B               dec hl
 861+ 8FD3 E6 01            and 1
 862+ 8FD5 28 4D            jr z,10F
 863+ 8FD7
 864+ 8FD7              ;! La colisión se produce con Amadeus???
 865+ 8FD7              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8FD7
 867+ 8FD7 E5               push hl
 868+ 8FD8
 869+ 8FD8 06 04            ld b,4
 870+ 8FDA 23           16 inc hl
 871+ 8FDB 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8FDD
 873+ 8FDD CD 50 8B         call Extrae_address
 874+ 8FE0 CD 92 9B         call Genera_coordenadas_disparo
 875+ 8FE3
 876+ 8FE3 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8FE4 FE 16            cp $16
 878+ 8FE6 38 2A            jr c,15F
 879+ 8FE8
 880+ 8FE8
 881+ 8FE8              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8FE8
 883+ 8FE8 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8FE9
 885+ 8FE9              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8FE9
 887+ 8FE9 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 8FEC
 889+ 8FEC              ; Coordenada X de Amadeus en D.
 890+ 8FEC
 891+ 8FEC 7D               ld a,l
 892+ 8FED E6 1F            and $1F
 893+ 8FEF 57               ld d,a
 894+ 8FF0
 895+ 8FF0 21 8A 85         ld hl,Amadeus_db+8
 896+ 8FF3 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 8FF4
 898+ 8FF4 21 A1 87         ld hl,Coordenadas_X_Amadeus
 899+ 8FF7 CD BD 8E         call Guarda_coordenadas_X
 900+ 8FFA
 901+ 8FFA D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 8FFB
 903+ 8FFB              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 8FFB
 905+ 8FFB 06 02            ld b,2
 906+ 8FFD C5           20 push bc
 907+ 8FFE
 908+ 8FFE 06 03            ld b,3
 909+ 9000 21 A1 87         ld hl,Coordenadas_X_Amadeus
 910+ 9003 7E           18 ld a,(hl)
 911+ 9004 BA               cp d
 912+ 9005 20 04            jr nz,17F
 913+ 9007
 914+ 9007              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9007
 916+ 9007 C1               pop bc
 917+ 9008 E1               pop hl
 918+ 9009 18 0D            jr 14F
 919+ 900B
 920+ 900B 23           17 inc hl
 921+ 900C 10 F5            djnz 18B
 922+ 900E
 923+ 900E 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 900F
 925+ 900F C1               pop bc
 926+ 9010 10 EB            djnz 20B
 927+ 9012
 928+ 9012
 929+ 9012              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9012              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9012
 932+ 9012 E1           15 pop hl
 933+ 9013 23               inc hl
 934+ 9014 35               dec (hl)
 935+ 9015 2B               dec hl
 936+ 9016 18 0C            jr 10F
 937+ 9018
 938+ 9018              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9018              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9018
 941+ 9018 E5           14 push hl
 942+ 9019 CD C1 90         call Elimina_disparo_de_base_de_datos
 943+ 901C 21 9C 87         ld hl,Impacto2
 944+ 901F CB CE            set 1,(hl)
 945+ 9021 E1               pop hl
 946+ 9022 18 06            jr 12F
 947+ 9024
 948+ 9024              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9024
 950+ 9024 CD 6B 90     10 call Mueve_disparo
 951+ 9027 CD 42 90         call foto_disparo_a_borrar
 952+ 902A C1           12 pop bc
 953+ 902B
 954+ 902B 18 04            jr 8F
 955+ 902D
 956+ 902D              ; ----- ----- ----- ----- ----- -----
 957+ 902D
 958+ 902D ED 42        4 sbc hl,bc
 959+ 902F 28 0A            jr z,6F
 960+ 9031
 961+ 9031 2A 98 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9034 23               inc hl
 963+ 9035 23               inc hl
 964+ 9036 22 98 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9039 18 8A            jr 5B
 966+ 903B
 967+ 903B CD CE 8A     6 call Inicia_Puntero_Disparo_Entidades
 968+ 903E CD C6 8E         call Limpia_Coordenadas_X
 969+ 9041 C9               ret
 970+ 9042
 971+ 9042              ; ------------------------------------------------------------------
 972+ 9042
 973+ 9042              foto_disparo_a_borrar
 974+ 9042
 975+ 9042 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9043 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9044 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9045
 979+ 9045 E5               push hl
 980+ 9046 23               inc hl
 981+ 9047 23               inc hl
 982+ 9048 ED 73 87 87      ld (Stack),sp
 983+ 904C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 904D FD E1            pop iy
 985+ 904F DD E1            pop ix
 986+ 9051 E1               pop hl
 987+ 9052 ED 7B 87 87      ld sp,(Stack)
 988+ 9056 3A 76 87         ld a,(Ctrl_1)
 989+ 9059 CB C7            set 0,a
 990+ 905B 32 76 87         ld (Ctrl_1),a
 991+ 905E CD 16 71         call Guarda_foto_registros
 992+ 9061 3A 76 87         ld a,(Ctrl_1)
 993+ 9064 CB 87            res 0,a
 994+ 9066 32 76 87         ld (Ctrl_1),a
 995+ 9069 E1               pop hl
 996+ 906A C9               ret
 997+ 906B
 998+ 906B              ;---------------------------------------------------
 999+ 906B              ;
1000+ 906B              ;   18/07/23
1001+ 906B              ;
1002+ 906B
1003+ 906B              Mueve_disparo
1004+ 906B
1005+ 906B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 906B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 906B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 906B
1009+ 906B E5               push hl
1010+ 906C
1011+ 906C 7E               ld a,(hl)
1012+ 906D
1013+ 906D 06 04            ld b,4
1014+ 906F 23           1 inc hl
1015+ 9070 10 FD            djnz 1B
1016+ 9072
1017+ 9072              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9072
1019+ 9072 CD 50 8B         call Extrae_address
1020+ 9075
1021+ 9075 E6 01            and 1
1022+ 9077 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9079
1024+ 9079              ; Disparo hacia arriba, (Amadeus).
1025+ 9079
1026+ 9079              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9079              ; _ de la dificultad.
1028+ 9079
1029+ 9079 CD CB 94         call PreviousScan
1030+ 907C CD CB 94         call PreviousScan
1031+ 907F CD CB 94         call PreviousScan
1032+ 9082 CD CB 94         call PreviousScan
1033+ 9085
1034+ 9085              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9085
1036+ 9085 7C               ld a,h
1037+ 9086 FE 40            cp $40
1038+ 9088 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 908A
1040+ 908A              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 908A
1042+ 908A EB               ex de,hl
1043+ 908B 06 04            ld b,4
1044+ 908D 2B           6 dec hl
1045+ 908E 10 FD            djnz 6B
1046+ 9090
1047+ 9090 CD C1 90         call Elimina_disparo_de_base_de_datos
1048+ 9093 E1               pop hl
1049+ 9094 18 10            jr 7F
1050+ 9096
1051+ 9096              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9096              ; HL contiene el puntero de impresión del disparo.
1053+ 9096              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9096
1055+ 9096 D5           3 push de
1056+ 9097 C5               push bc
1057+ 9098
1058+ 9098 CD 54 8E         call Comprueba_Colision
1059+ 909B
1060+ 909B              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 909B
1062+ 909B 78               ld a,b
1063+ 909C
1064+ 909C C1               pop bc
1065+ 909D D1               pop de
1066+ 909E
1067+ 909E EB               ex de,hl
1068+ 909F
1069+ 909F 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90A0 23               inc hl                                      ; _ movimiento.
1071+ 90A1 72               ld (hl),d
1072+ 90A2
1073+ 90A2 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90A3
1075+ 90A3 23               inc hl                                      ; _ en curso.
1076+ 90A4 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90A5 2B               dec hl
1078+ 90A6
1079+ 90A6 C9           7 ret
1080+ 90A7
1081+ 90A7              ; Disparo hacia abajo, (Entidad).
1082+ 90A7
1083+ 90A7 3A A7 87     2 ld a,(Velocidad_disparo_entidades)
1084+ 90AA 47               ld b,a
1085+ 90AB
1086+ 90AB CD BC 94     4 call NextScan
1087+ 90AE 10 FB            djnz 4B
1088+ 90B0
1089+ 90B0              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90B0
1091+ 90B0 7C               ld a,h
1092+ 90B1 FE 58            cp $58
1093+ 90B3 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90B5
1095+ 90B5 EB               ex de,hl
1096+ 90B6 06 04            ld b,4
1097+ 90B8 2B           5 dec hl
1098+ 90B9 10 FD            djnz 5B
1099+ 90BB
1100+ 90BB CD C1 90         call Elimina_disparo_de_base_de_datos
1101+ 90BE E1               pop hl
1102+ 90BF 18 E5            jr 7B
1103+ 90C1
1104+ 90C1              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90C1
1106+ 90C1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90C4 AF               xor a
1108+ 90C5 77               ld (hl),a
1109+ 90C6 54               ld d,h
1110+ 90C7 5D               ld e,l
1111+ 90C8 13               inc de
1112+ 90C9 ED B0            ldir
1113+ 90CB C9               ret
1114+ 90CC
1115+ 90CC              ; -----------------------------------------------------------------
1116+ 90CC              ;
1117+ 90CC              ;   7/12/23
1118+ 90CC              ;
1119+ 90CC
1120+ 90CC 3A 9C 87     Selector_de_impactos ld a,(Impacto2)
1121+ 90CF A7               and a
1122+ 90D0 C8               ret z
1123+ 90D1
1124+ 90D1              ; Analizamos si hay impacto por disparos.
1125+ 90D1
1126+ 90D1              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 90D1
1128+ 90D1 CB 4F            bit 1,a
1129+ 90D3 28 07            jr z,1F
1130+ 90D5
1131+ 90D5 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 90D8 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 90DA 18 08            jr 2F
1134+ 90DC
1135+ 90DC CB 47        1 bit 0,a
1136+ 90DE C8               ret z
1137+ 90DF
1138+ 90DF              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 90DF
1140+ 90DF 21 76 87         ld hl,Ctrl_1
1141+ 90E2 CB D6            set 2,(hl)
1142+ 90E4
1143+ 90E4 C9           2 ret
1144+ 90E5
1145+ 90E5              ; -----------------------------------------------------------------
1146+ 90E5              ;
1147+ 90E5              ;   25/04/23
1148+ 90E5              ;
1149+ 90E5
1150+ 90E5              Determina_resultado_comparativa
1151+ 90E5
1152+ 90E5              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 90E5              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 90E5              ;
1155+ 90E5              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 90E5              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 90E5              ;
1158+ 90E5              ;   SBC HL,DE
1159+ 90E5
1160+ 90E5              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 90E5              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 90E5
1163+ 90E5              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 90E5              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 90E5
1166+ 90E5
1167+ 90E5 3A 49 87         ld a,(Cuad_objeto)
1168+ 90E8 FE 02            cp 2
1169+ 90EA 28 26            jr z,2F
1170+ 90EC 38 24            jr c,2F
1171+ 90EE
1172+ 90EE              ; Cuadrantes 3º y 4º
1173+ 90EE
1174+ 90EE E6 01            and 1
1175+ 90F0 28 10            jr z,4F
1176+ 90F2
1177+ 90F2              ; Cuadrante 3º
1178+ 90F2
1179+ 90F2 7C               ld a,h
1180+ 90F3 06 00            ld b,0
1181+ 90F5
1182+ 90F5 CD 80 91         call Compara_cositas_H3
1183+ 90F8
1184+ 90F8 04               inc b
1185+ 90F9 05               dec b
1186+ 90FA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 90FB
1188+ 90FB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 90FC 06 00            ld b,0
1190+ 90FE
1191+ 90FE CD 92 91         call Compara_cositas_L3
1192+ 9101 C9               ret
1193+ 9102
1194+ 9102              ; Cuadrante 4º
1195+ 9102
1196+ 9102 7C           4 ld a,h
1197+ 9103 06 00            ld b,0
1198+ 9105
1199+ 9105 CD A4 91         call Compara_cositas_H4
1200+ 9108
1201+ 9108 04               inc b
1202+ 9109 05               dec b
1203+ 910A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 910B
1205+ 910B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 910C 06 00            ld b,0
1207+ 910E
1208+ 910E CD BA 91         call Compara_cositas_L4
1209+ 9111 C9               ret
1210+ 9112
1211+ 9112              ; Cuadrantes 1º y 2º.
1212+ 9112
1213+ 9112 28 10        2 jr z,3F
1214+ 9114
1215+ 9114              ; 1er Cuadrante
1216+ 9114
1217+ 9114 7C               ld a,h
1218+ 9115 06 00            ld b,0
1219+ 9117
1220+ 9117 CD 58 91         call Compara_cositas_H1
1221+ 911A
1222+ 911A 04               inc b
1223+ 911B 05               dec b
1224+ 911C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 911D
1226+ 911D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 911E 06 00            ld b,0
1228+ 9120
1229+ 9120 CD 6E 91         call Compara_cositas_L1
1230+ 9123 C9               ret
1231+ 9124
1232+ 9124
1233+ 9124              ; 2º Cuadrante
1234+ 9124
1235+ 9124 7C           3 ld a,h
1236+ 9125 06 00            ld b,0
1237+ 9127
1238+ 9127 CD 34 91         call Compara_cositas_H2
1239+ 912A
1240+ 912A 04               inc b
1241+ 912B 05               dec b
1242+ 912C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 912D
1244+ 912D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 912E 06 00            ld b,0
1246+ 9130
1247+ 9130 CD 46 91         call Compara_cositas_L2
1248+ 9133 C9               ret
1249+ 9134
1250+ 9134 A7           Compara_cositas_H2 and a
1251+ 9135 28 0D            jr z,1F
1252+ 9137              ;    cp $fd
1253+ 9137              ;    jr z,1F
1254+ 9137              ;    cp $fe
1255+ 9137              ;    jr z,1F
1256+ 9137 FE FF            cp $ff
1257+ 9139 28 09            jr z,1F
1258+ 913B FE 01            cp $01
1259+ 913D 28 05            jr z,1F
1260+ 913F FE 02            cp $02
1261+ 9141 28 01            jr z,1F
1262+ 9143 C0               ret nz
1263+ 9144 04           1 inc b
1264+ 9145 C9               ret
1265+ 9146
1266+ 9146 A7           Compara_cositas_L2 and a
1267+ 9147 28 0D            jr z,1F
1268+ 9149              ;    cp $fd
1269+ 9149              ;    jr z,1F
1270+ 9149 FE FE            cp $fe
1271+ 914B 28 09            jr z,1F
1272+ 914D FE FF            cp $ff
1273+ 914F 28 05            jr z,1F
1274+ 9151 FE 01            cp $01
1275+ 9153 28 01            jr z,1F
1276+ 9155              ;    cp $02
1277+ 9155              ;    jr z,1F
1278+ 9155 C0               ret nz
1279+ 9156 04           1 inc b
1280+ 9157 C9               ret
1281+ 9158
1282+ 9158 A7           Compara_cositas_H1 and a
1283+ 9159 28 11            jr z,1F
1284+ 915B              ;    cp $fd
1285+ 915B              ;    jr z,1F
1286+ 915B              ;    cp $fe
1287+ 915B              ;    jr z,1F
1288+ 915B FE FF            cp $ff
1289+ 915D 28 0D            jr z,1F
1290+ 915F FE 01            cp $01
1291+ 9161 28 09            jr z,1F
1292+ 9163 FE 02            cp $02
1293+ 9165 28 05            jr z,1F
1294+ 9167 FE 03            cp $03
1295+ 9169 28 01            jr z,1F
1296+ 916B C0               ret nz
1297+ 916C 04           1 inc b
1298+ 916D C9               ret
1299+ 916E
1300+ 916E A7           Compara_cositas_L1 and a
1301+ 916F 28 0D            jr z,1F
1302+ 9171              ;    cp $fd
1303+ 9171              ;    jr z,1F
1304+ 9171              ;    cp $fe
1305+ 9171              ;    jr z,1F
1306+ 9171              ;    cp $ff
1307+ 9171              ;    jr z,1F
1308+ 9171 FE 01            cp $01
1309+ 9173 28 09            jr z,1F
1310+ 9175 FE 02            cp $02
1311+ 9177 28 05            jr z,1F
1312+ 9179 FE 03            cp $03
1313+ 917B 28 01            jr z,1F
1314+ 917D C0               ret nz
1315+ 917E 04           1 inc b
1316+ 917F C9               ret
1317+ 9180
1318+ 9180 A7           Compara_cositas_H3 and a
1319+ 9181 28 0D            jr z,1F
1320+ 9183              ;    cp $fd
1321+ 9183              ;    jr z,1F
1322+ 9183 FE FE            cp $fe
1323+ 9185 28 09            jr z,1F
1324+ 9187 FE FF            cp $ff
1325+ 9189 28 05            jr z,1F
1326+ 918B FE 01            cp $01
1327+ 918D 28 01            jr z,1F
1328+ 918F              ;    cp $02
1329+ 918F              ;    jr z,1F
1330+ 918F              ;    cp $03
1331+ 918F              ;    jr z,1F
1332+ 918F C0               ret nz
1333+ 9190 04           1 inc b
1334+ 9191 C9               ret
1335+ 9192
1336+ 9192 A7           Compara_cositas_L3 and a
1337+ 9193 28 0D            jr z,1F
1338+ 9195              ;    cp $fd
1339+ 9195              ;    jr z,1F
1340+ 9195              ;    cp $fe
1341+ 9195              ;    jr z,1F
1342+ 9195              ;    cp $ff
1343+ 9195              ;    jr z,1F
1344+ 9195 FE 01            cp $01
1345+ 9197 28 09            jr z,1F
1346+ 9199 FE 02            cp $02
1347+ 919B 28 05            jr z,1F
1348+ 919D FE 03            cp $03
1349+ 919F 28 01            jr z,1F
1350+ 91A1 C0               ret nz
1351+ 91A2 04           1 inc b
1352+ 91A3 C9               ret
1353+ 91A4
1354+ 91A4 A7           Compara_cositas_H4 and a
1355+ 91A5 28 11            jr z,1F
1356+ 91A7 FE FD            cp $fd
1357+ 91A9 28 0D            jr z,1F
1358+ 91AB FE FE            cp $fe
1359+ 91AD 28 09            jr z,1F
1360+ 91AF FE FF            cp $ff
1361+ 91B1 28 05            jr z,1F
1362+ 91B3 FE 01            cp $01
1363+ 91B5 28 01            jr z,1F
1364+ 91B7              ;    cp $02
1365+ 91B7              ;    jr z,1F
1366+ 91B7              ;    cp $03
1367+ 91B7              ;    jr z,1F
1368+ 91B7 C0               ret nz
1369+ 91B8 04           1 inc b
1370+ 91B9 C9               ret
1371+ 91BA
1372+ 91BA A7           Compara_cositas_L4 and a
1373+ 91BB 28 0D            jr z,1F
1374+ 91BD              ;    cp $fd
1375+ 91BD              ;    jr z,1F
1376+ 91BD FE FE            cp $fe
1377+ 91BF 28 09            jr z,1F
1378+ 91C1 FE FF            cp $ff
1379+ 91C3 28 05            jr z,1F
1380+ 91C5 FE 01            cp $01
1381+ 91C7 28 01            jr z,1F
1382+ 91C9              ;    cp $02
1383+ 91C9              ;    jr z,1F
1384+ 91C9              ;    cp $03
1385+ 91C9              ;    jr z,1F
1386+ 91C9 C0               ret nz
1387+ 91CA 04           1 inc b
1388+ 91CB C9               ret
# file closed: Disparo.asm
1901  91CC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91CC              ; ******************************************************************************************************************************************************************************************
   2+ 91CC              ;
   3+ 91CC              ; 26/06/23
   4+ 91CC              ;
   5+ 91CC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91CC
   7+ 91CC              Draw
   8+ 91CC
   9+ 91CC CD B0 94     	call Prepara_draw
  10+ 91CF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 91D0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 91D1 28 05        	jr z,2F
  13+ 91D3
  14+ 91D3 3A 49 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 91D6 18 0C        	jr 1F
  16+ 91D8
  17+ 91D8 2A 47 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 91DB 22 37 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 91DE CD 6D 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 91E1              ;													; _la esquina superior izquierda de la pantalla.
  21+ 91E1 CD 23 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 91E4
  23+ 91E4 3A 57 87     1 ld a,(Ctrl_0)
  24+ 91E7 CB 6F        	bit 5,a
  25+ 91E9 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 91EB
  27+ 91EB CD 03 92     	call Comprueba_limite_horizontal
  28+ 91EE CD 93 92     	call Comprueba_limite_vertical
  29+ 91F1
  30+ 91F1              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 91F1              ; -----------------------
  32+ 91F1              ; -----------------------
  33+ 91F1              ; -----------------------
  34+ 91F1
  35+ 91F1 CD E0 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 91F4 CD 17 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 91F7 CD 76 94     	call Define_rutina_de_impresion
  38+ 91FA
  39+ 91FA 3A 57 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 91FD CB AF        	res 5,a											; _a ser de utilidad.
  41+ 91FF 32 57 87     	ld (Ctrl_0),a
  42+ 9202
  43+ 9202 C9           	ret
  44+ 9203
  45+ 9203              ; *******************************************************************************************************************************************************************************************
  46+ 9203              ;	21/01/23
  47+ 9203              ;
  48+ 9203              ; 	Comprueba_limite_horizontal.
  49+ 9203              ;
  50+ 9203              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9203              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9203              ;
  53+ 9203              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9203              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9203              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9203              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9203
  58+ 9203
  59+ 9203
  60+ 9203 3A 57 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9206 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9208 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 920A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 920C 32 57 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 920F 18 09            jr 6F
  66+ 9211 CB 5F        1 bit 3,a
  67+ 9213 28 0A            jr z,2F
  68+ 9215 E6 F7            and $f7
  69+ 9217 32 57 87         ld (Ctrl_0),a
  70+ 921A CD 6D 93     6 call Inicializacion
  71+ 921D 18 5B            jr 5F
  72+ 921F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9220
  74+ 9220              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9220              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9220
  77+ 9220 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9221 2A 59 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9224 CD CF 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9227 67           	ld h,a
  81+ 9228 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9229 CD CF 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 922C 67           	ld h,a
  84+ 922D A7           	and a
  85+ 922E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9230 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9231 3A 49 87     	ld a,(Cuad_objeto)
  88+ 9234 FE 02        	cp 2
  89+ 9236 38 1E        	jr c,3F
  90+ 9238 28 1C        	jr z,3F
  91+ 923A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 923B 28 23            jr z,7F
  93+ 923D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 923F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9241 E1           	pop hl
  96+ 9242
  97+ 9242              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9242              ; _para indicar con E="2" en caso necesario.
  99+ 9242
 100+ 9242 E5               push hl
 101+ 9243 C5               push bc
 102+ 9244 CD CF 97     	call calcula_tercio
 103+ 9247 FE 01        	cp 1
 104+ 9249 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 924B CD 7B 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 924E 28 26            jr z,9F
 107+ 9250 38 24            jr c,9F
 108+ 9252 1E 00        11 ld e,0
 109+ 9254 18 22            jr 8F
 110+ 9256 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9257 28 07        	jr z, 7F
 112+ 9259 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 925B 1E 00         	ld e,0
 114+ 925D E1           	pop hl
 115+ 925E 18 04        	jr 4F
 116+ 9260 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9262 18 15            jr 10F
 118+ 9264
 119+ 9264              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9264              ; _para indicar con E="2" en caso necesario.
 121+ 9264
 122+ 9264 E5           4 push hl
 123+ 9265 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9266 CD CF 97     	call calcula_tercio
 125+ 9269 FE 01        	cp 1
 126+ 926B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 926D CD 7B 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9270 28 04            jr z,9F
 129+ 9272 30 02            jr nc,9F
 130+ 9274 18 02        	jr 8F
 131+ 9276 1E 02        9 ld e,2
 132+ 9278 C1           8 pop bc
 133+ 9279 E1           10 pop hl
 134+ 927A C9           5 ret
 135+ 927B
 136+ 927B              ; --------------------
 137+ 927B              ;
 138+ 927B              ; 25/08/22
 139+ 927B
 140+ 927B CD CF 97     Comprueba_centro call calcula_tercio
 141+ 927E 67               ld h,a
 142+ 927F 08           	ex af,af
 143+ 9280 FE 02        	cp 2
 144+ 9282 38 07        	jr c,1F
 145+ 9284 28 05        	jr z,1F
 146+ 9286 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9289 18 03        	jr 2F
 148+ 928B 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 928E 08           2 ex af,af
 150+ 928F A7               and a
 151+ 9290 ED 42            sbc hl,bc
 152+ 9292 C9               ret
 153+ 9293
 154+ 9293              ; *********************************************************************************************************************************************************************************************
 155+ 9293              ;
 156+ 9293              ;   16/8/22
 157+ 9293              ;
 158+ 9293              ;	Comprueba_limite_vertical
 159+ 9293              ;
 160+ 9293              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9293              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9293              ;
 163+ 9293
 164+ 9293 2A 37 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9296 7D           	ld a,l
 166+ 9297 E6 1F        	and $1F
 167+ 9299 57           	ld d,a
 168+ 929A 3A 5B 87     	ld a,(Limite_vertical)
 169+ 929D BA           	cp d 											; Límite - Posición.
 170+ 929E 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 929F 3A 49 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 92A2 CB 47        	bit 0,a
 173+ 92A4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 92A6
 175+ 92A6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 92A6
 177+ 92A6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 92A7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 92A9
 180+ 92A9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 92A9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 92A9
 183+ 92A9 3A 3B 87         ld a,(Coordenada_X)
 184+ 92AC 16 0F            ld d,Centro_izquierda
 185+ 92AE A7               and a
 186+ 92AF 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 92B0 28 1E            jr z,3F
 188+ 92B2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 92B4              ;                                                    ; _salimos sin modificar nada.
 190+ 92B4 18 0E            jr 2F
 191+ 92B6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 92B7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 92B9
 194+ 92B9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 92B9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 92B9
 197+ 92B9 3A 3B 87         ld a,(Coordenada_X)
 198+ 92BC 16 10            ld d,Centro_derecha
 199+ 92BE A7               and a
 200+ 92BF 92               sub d
 201+ 92C0 28 0E            jr z,3F
 202+ 92C2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 92C4              ;                                                    ; _salimos sin modificar nada.
 204+ 92C4 CB 43        2 bit 0,e
 205+ 92C6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 92C8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 92C9 CD 5D 93         call Modificaccionne
 208+ 92CC C1           	pop bc
 209+ 92CD CD 6D 93         call Inicializacion
 210+ 92D0 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 92D1
 212+ 92D1              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 92D1
 214+ 92D1 C5           4 push bc
 215+ 92D2 01 36 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 92D5 0A           	ld a,(bc)
 217+ 92D6 3D           	dec a
 218+ 92D7 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 92D8 7D           	ld a,l
 220+ 92D9 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 92DA CB 47        	bit 0,a
 222+ 92DC 28 03        	jr z,5F
 223+ 92DE 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 92DF 18 2E        	jr 7F
 225+ 92E1
 226+ 92E1              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 92E1
 228+ 92E1 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 92E2 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 92E3 3A 57 87     	ld a,(Ctrl_0)
 231+ 92E6 CB 4F        	bit 1,a
 232+ 92E8 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 92EA F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 92EB
 235+ 92EB              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 92EB
 237+ 92EB 1C               inc e
 238+ 92EC 1D               dec e
 239+ 92ED 20 07            jr nz,12F
 240+ 92EF 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 92F0 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 92F1 22 37 87     	ld (Posicion_actual),hl
 243+ 92F4 18 44        13 jr 9F
 244+ 92F6 CB 43        12 bit 0,e
 245+ 92F8 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 92FA              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 92FA C1           	pop bc
 248+ 92FB 18 D3        	jr 3B
 249+ 92FD 80           14 add b
 250+ 92FE 6F               ld l,a
 251+ 92FF 22 37 87     	ld (Posicion_actual),hl
 252+ 9302 CD 5D 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9305 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9307 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9309 32 57 87         ld (Ctrl_0),a
 256+ 930C F1           	pop af
 257+ 930D 18 2B        	jr 9F
 258+ 930F
 259+ 930F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 930F
 261+ 930F F5           7 push af
 262+ 9310 3A 57 87     	ld a,(Ctrl_0)
 263+ 9313 CB 47        	bit 0,a
 264+ 9315 20 1D        	jr nz,8F
 265+ 9317 F1           	pop af
 266+ 9318
 267+ 9318              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9318
 269+ 9318 1C           	inc e
 270+ 9319 1D               dec e
 271+ 931A 20 07            jr nz,10F
 272+ 931C 90           	sub b
 273+ 931D 6F               ld l,a
 274+ 931E 22 37 87     	ld (Posicion_actual),hl
 275+ 9321 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9323              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9323 CB 43        10 bit 0,e
 278+ 9325 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9327              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9327 C1           	pop bc
 281+ 9328 18 A6        	jr 3B
 282+ 932A 90           16 sub b
 283+ 932B 6F               ld l,a
 284+ 932C 22 37 87     	ld (Posicion_actual),hl
 285+ 932F CD 5D 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9332 18 06            jr 9F
 287+ 9334 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9336 32 57 87         ld (Ctrl_0),a
 289+ 9339 F1           	pop af
 290+ 933A C1           9 pop bc
 291+ 933B 1E 00        	ld e,0
 292+ 933D CD 6D 93         call Inicializacion
 293+ 9340 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9341 08           	ex af,af
 295+ 9342 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9343 18 8B            jr 3B
 297+ 9345
 298+ 9345              ; --------------------
 299+ 9345
 300+ 9345 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9347 CD CB 94     1 call PreviousScan
 302+ 934A 10 FB            djnz 1B
 303+ 934C 22 37 87     	ld (Posicion_actual),hl
 304+ 934F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9350 C9           	ret
 306+ 9351
 307+ 9351              ; --------------------
 308+ 9351
 309+ 9351 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9353 CD BC 94     1 call NextScan
 311+ 9356 10 FB            djnz 1B
 312+ 9358 22 37 87     	ld (Posicion_actual),hl
 313+ 935B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 935C C9           	ret
 315+ 935D
 316+ 935D              ; --------------------
 317+ 935D              ;
 318+ 935D              ;	22/01/23
 319+ 935D              ;
 320+ 935D              ;	E="1". Hemos cambiado de cuadrante.
 321+ 935D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 935D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 935D
 324+ 935D
 325+ 935D              Modificaccionne
 326+ 935D
 327+ 935D 3A 49 87     	ld a,(Cuad_objeto)
 328+ 9360 FE 02        	cp 2
 329+ 9362 CC 45 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9365 DC 45 93         call c,Modifica_Pos_actual
 331+ 9368 C8           	ret z
 332+ 9369 CD 51 93         call Modifica_Pos_actual2
 333+ 936C C9               ret
 334+ 936D
 335+ 936D              ; *************************************************************************************************************************************************************************************************
 336+ 936D              ;
 337+ 936D              ;	13/8/22
 338+ 936D              ;
 339+ 936D              ;	Inicializacion
 340+ 936D              ;
 341+ 936D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 936D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 936D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 936D              ;
 345+ 936D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 936D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 936D              ;	_ desaparece/aparece.
 348+ 936D
 349+ 936D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 936D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 936D              ;
 352+ 936D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 936D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 936D              ; 		   [E] ="0"
 355+ 936D
 356+ 936D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 936D
 358+ 936D CD CF 97     Inicializacion call calcula_tercio
 359+ 9370 28 36        	jr z,primit
 360+ 9372 E6 02        	and 2
 361+ 9374 20 07        	jr nz,segmit
 362+ 9376 7D           	ld a,l
 363+ 9377 FE 7F        	cp $7f
 364+ 9379 38 2D        	jr c,primit
 365+ 937B 28 2B        	jr z,primit
 366+ 937D CD DA 93     segmit call column
 367+ 9380 38 13        	jr c,tercuad
 368+ 9382 3E 04        cuarcuad ld a,4
 369+ 9384 32 49 87     	ld (Cuad_objeto),a
 370+ 9387 21 20 48     	ld hl,$4820
 371+ 938A 22 59 87     	ld (Limite_horizontal),hl
 372+ 938D 21 5B 87     	ld hl,Limite_vertical
 373+ 9390 36 0D        	ld (hl),$0d
 374+ 9392 08           	ex af,af
 375+ 9393 18 3C        	jr 1F
 376+ 9395              tercuad
 377+ 9395 3E 03        	ld a,3
 378+ 9397 32 49 87     	ld (Cuad_objeto),a
 379+ 939A 21 20 48     	ld hl,$4820
 380+ 939D 22 59 87     	ld (Limite_horizontal),hl
 381+ 93A0 21 5B 87     	ld hl,Limite_vertical
 382+ 93A3 36 12        	ld (hl),$12
 383+ 93A5 08           	ex af,af
 384+ 93A6 18 29        	jr 1F
 385+ 93A8 CD DA 93     primit call column
 386+ 93AB 38 13        	jr c, primcuad
 387+ 93AD              segcuad
 388+ 93AD 3E 02        	ld a,2
 389+ 93AF 32 49 87     	ld (Cuad_objeto),a
 390+ 93B2 21 C0 4F     	ld hl,$4fc0
 391+ 93B5 22 59 87     	ld (Limite_horizontal),hl
 392+ 93B8 21 5B 87     	ld hl,Limite_vertical
 393+ 93BB 36 0D        	ld (hl),$0d
 394+ 93BD 08           	ex af,af
 395+ 93BE 18 11        	jr 1F
 396+ 93C0              primcuad
 397+ 93C0 3E 01        	ld a,1
 398+ 93C2 32 49 87     	ld (Cuad_objeto),a
 399+ 93C5 21 C0 4F     	ld hl,$4fc0
 400+ 93C8 22 59 87     	ld (Limite_horizontal),hl
 401+ 93CB 21 5B 87     	ld hl,Limite_vertical
 402+ 93CE 36 12        	ld (hl),$12
 403+ 93D0 08           	ex af,af
 404+ 93D1 CD 67 9B     1 call Genera_coordenadas
 405+ 93D4 21 57 87     	ld hl,Ctrl_0
 406+ 93D7 CB EE        	set 5,(hl)
 407+ 93D9 C9           	ret
 408+ 93DA
 409+ 93DA              ; ------------------------------------------------------------------------------------------------------------------
 410+ 93DA
 411+ 93DA              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 93DA              ;
 413+ 93DA              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 93DA
 415+ 93DA 7D           column ld a,l
 416+ 93DB E6 1F        	and $1f
 417+ 93DD FE 10         	cp $10
 418+ 93DF C9            	ret
 419+ 93E0
 420+ 93E0              ; --------------------------------------------------------------------------------------------------------------------
 421+ 93E0              ;
 422+ 93E0              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 93E0              ;
 424+ 93E0              ; 14/12/22
 425+ 93E0              ;
 426+ 93E0              ;	Modifica: A y BC.
 427+ 93E0
 428+ 93E0 3A 49 87     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 93E3 E6 01        	and 1
 430+ 93E5 28 17        	jr z,1F
 431+ 93E7
 432+ 93E7              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 93E7
 434+ 93E7 3A 3B 87     	ld a,(Coordenada_X)
 435+ 93EA 47           	ld b,a
 436+ 93EB 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 93EC 79           	ld a,c
 438+ 93ED 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 93EE 38 08        	jr c,2F
 440+ 93F0 47           	ld b,a
 441+ 93F1 79           	ld a,c
 442+ 93F2 90           	sub b
 443+ 93F3 32 58 87     	ld (Columnas),a
 444+ 93F6 18 1B        	jr 4F
 445+ 93F8 79           2 ld a,c
 446+ 93F9 32 58 87     	ld (Columnas),a
 447+ 93FC 18 15        	jr 4F
 448+ 93FE
 449+ 93FE              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 93FE
 451+ 93FE 3A 3B 87     1 ld a,(Coordenada_X)
 452+ 9401 81           	add c
 453+ 9402 3D           	dec a
 454+ 9403 D6 1F        	sub $1f
 455+ 9405 38 08        	jr c,3F
 456+ 9407 47           	ld b,a
 457+ 9408 79           	ld a,c
 458+ 9409 90           	sub b
 459+ 940A 32 58 87     	ld (Columnas),a
 460+ 940D 18 04        	jr 4F
 461+ 940F 79           3 ld a,c
 462+ 9410 32 58 87     	ld (Columnas),a
 463+ 9413 D9           4 exx
 464+ 9414 4F           	ld c,a
 465+ 9415 D9           	exx
 466+ 9416 C9            ret
 467+ 9417
 468+ 9417              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9417              ;
 470+ 9417              ;   19/7/23
 471+ 9417              ;
 472+ 9417              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9417              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9417              ;
 475+ 9417              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9417              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9417              ;
 478+ 9417              ;	DESTRUYE: HL,B Y A.
 479+ 9417
 480+ 9417 3A 49 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 941A FE 02        	cp 2
 482+ 941C 38 18        	jr c,1F
 483+ 941E 28 16        	jr z,1F
 484+ 9420 E6 01        	and 1
 485+ 9422 28 0D        	jr z,3F
 486+ 9424
 487+ 9424              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 9424
 489+ 9424 CD 6A 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9427
 491+ 9427 7D           9 ld a,l
 492+ 9428 E6 1F        	and $1f
 493+ 942A 28 2A        	jr z,7F
 494+ 942C 2B           	dec hl
 495+ 942D 10 F8        	djnz 9B
 496+ 942F 18 25        	jr 7F
 497+ 9431
 498+ 9431              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 9431
 500+ 9431 2A 37 87     3 ld hl,(Posicion_actual)
 501+ 9434 18 20        	jr 7F
 502+ 9436
 503+ 9436 28 14        1 jr z,2F
 504+ 9438
 505+ 9438              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9438
 507+ 9438 CD 6A 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 943B
 509+ 943B 7D           4 ld a,l
 510+ 943C E6 1F        	and $1f
 511+ 943E 28 03        	jr z,6F
 512+ 9440 2B           	dec hl
 513+ 9441 10 F8        	djnz 4B
 514+ 9443 06 0F        6 ld b,15
 515+ 9445 CD CB 94     5 call PreviousScan
 516+ 9448 10 FB        	djnz 5B
 517+ 944A 18 0A        	jr 7F
 518+ 944C
 519+ 944C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 944C
 521+ 944C CD 6A 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 944F 06 0F        	ld b,15
 523+ 9451 CD CB 94     8 call PreviousScan
 524+ 9454 10 FB        	djnz 8B
 525+ 9456
 526+ 9456 E5           7 push hl
 527+ 9457 DD E1        	pop ix
 528+ 9459
 529+ 9459 2A 39 87     	ld hl,(Puntero_objeto)
 530+ 945C E5           	push hl
 531+ 945D FD E1        	pop iy
 532+ 945F
 533+ 945F              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 945F
 535+ 945F 3A 57 87     	ld a,(Ctrl_0)
 536+ 9462 CB 77        	bit 6,a
 537+ 9464 C8           	ret z
 538+ 9465
 539+ 9465              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9465              ; _ entidad / Amadeus´.
 541+ 9465
 542+ 9465 DD 22 9F 85  	ld (p.imp.amadeus),ix
 543+ 9469
 544+ 9469 C9           	ret
 545+ 946A
 546+ 946A              ; --------------------------------------------------------------------------------------------------------------------
 547+ 946A              ;
 548+ 946A              ;	2/1/23
 549+ 946A              ;
 550+ 946A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 946A              ;
 552+ 946A              ;	Tras esta rutina tenemos:
 553+ 946A              ;
 554+ 946A              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 946A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 946A              ;
 557+ 946A              ;	DESTRUYE!!!!! HL,B y A.
 558+ 946A
 559+ 946A 2A 37 87     Operandos ld hl,(Posicion_actual)
 560+ 946D 3A 58 87     	ld a,(Columnas)
 561+ 9470 3D           	dec a
 562+ 9471 20 01        	jr nz,1F
 563+ 9473 3C           	inc a
 564+ 9474 47           1 ld b,a
 565+ 9475 C9           	ret
 566+ 9476
 567+ 9476              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9476              ;
 569+ 9476              ;	3/1/23
 570+ 9476              ;
 571+ 9476              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9476              ;
 573+ 9476              ;	Destruye: A,B,HL y DE.
 574+ 9476
 575+ 9476              Define_rutina_de_impresion
 576+ 9476
 577+ 9476 3A 36 87     	ld a,(Columns)
 578+ 9479 47           	ld b,a
 579+ 947A 3A 58 87     	ld a,(Columnas)
 580+ 947D B8           	cp b
 581+ 947E 20 0D        	jr nz,2f
 582+ 9480
 583+ 9480              ;	La entidad se imprime entera.
 584+ 9480
 585+ 9480 21 9F 95     	ld hl, Indice_entidades_completas
 586+ 9483 E6 01        	and 1
 587+ 9485 28 02        	jr z,1F
 588+ 9487
 589+ 9487 23           	inc hl
 590+ 9488 23           	inc hl
 591+ 9489
 592+ 9489 CD 50 8B     1 call Extrae_address
 593+ 948C C9           	ret		;	ret
 594+ 948D
 595+ 948D              ;	La entidad no se imprime entera en pantalla.
 596+ 948D
 597+ 948D 3A 49 87     2 ld a,(Cuad_objeto)
 598+ 9490 E6 01        	and 1
 599+ 9492 28 17        	jr z,3F
 600+ 9494
 601+ 9494              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 9494
 603+ 9494 21 A3 95     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9497 3A 36 87     4 ld a,(Columns)
 605+ 949A E6 01        	and 1
 606+ 949C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 949E
 608+ 949E 23           	inc hl
 609+ 949F 23           	inc hl
 610+ 94A0
 611+ 94A0 3A 58 87     	ld a,(Columnas)
 612+ 94A3 E6 01        	and 1
 613+ 94A5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 94A7
 615+ 94A7 23           	inc hl
 616+ 94A8 23           	inc hl
 617+ 94A9
 618+ 94A9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 94AB
 620+ 94AB 21 A9 95     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 94AE 18 E7        	jr 4B
 622+ 94B0
 623+ 94B0              ; --------------------------------------------------------------------------------------------------------------------
 624+ 94B0              ;
 625+ 94B0              ;	Prepara_draw
 626+ 94B0              ;
 627+ 94B0              ;	Es una rutina de carga.
 628+ 94B0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 94B0              ;
 630+ 94B0              ;	FUNCIONAMIENTO:
 631+ 94B0              ;
 632+ 94B0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 94B0              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 94B0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 94B0              ;
 636+ 94B0              ;	DESTRUYE:
 637+ 94B0              ;
 638+ 94B0              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 94B0
 640+ 94B0 21 35 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 94B3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 94B4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 94B5 4E           	ld c,(hl)
 644+ 94B6 2A 37 87     	ld hl,(Posicion_actual)
 645+ 94B9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 94BB C9           	ret
 647+ 94BC
 648+ 94BC              ;----------------------------------------------------------------------------------------------------------------
 649+ 94BC              ;
 650+ 94BC              ;	5/08/22
 651+ 94BC              ;
 652+ 94BC              ;   NextScan.
 653+ 94BC              ;
 654+ 94BC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 94BC              ;
 656+ 94BC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 94BC              ;
 658+ 94BC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 94BC              ;
 660+ 94BC              ;       DESTRUIDOS: AF y HL !!!
 661+ 94BC              ;
 662+ 94BC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 94BC              ;
 664+ 94BC
 665+ 94BC 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 94BD 7C               ld a,h
 667+ 94BE E6 07            and 7
 668+ 94C0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 94C1
 670+ 94C1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 94C2 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 94C4 6F               ld l,a
 673+ 94C5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 94C6
 675+ 94C6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 94C7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 94C9 67               ld h,a
 678+ 94CA C9               ret
 679+ 94CB
 680+ 94CB              ;----------------------------------------------------------------------------------------------------------------
 681+ 94CB              ;
 682+ 94CB              ;	5/08/22
 683+ 94CB              ;
 684+ 94CB              ;   PreviousScan.
 685+ 94CB              ;
 686+ 94CB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 94CB              ;
 688+ 94CB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 94CB              ;
 690+ 94CB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 94CB              ;
 692+ 94CB              ;       DESTRUIDOS: AF y HL !!!
 693+ 94CB              ;
 694+ 94CB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 94CB              ;
 696+ 94CB
 697+ 94CB 7C           PreviousScan ld a,h
 698+ 94CC 25               dec h               ; Dec H.
 699+ 94CD E6 07            and 7
 700+ 94CF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 94D0
 702+ 94D0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 94D1 D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 94D3 6F               ld l,a
 705+ 94D4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 94D5
 707+ 94D5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 94D6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 94D8 67               ld h,a
 710+ 94D9 C9               ret
 711+ 94DA
 712+ 94DA              ; -----------------------------------------------------------------------------------
 713+ 94DA              ;
 714+ 94DA              ;	31/7/23
 715+ 94DA              ;
 716+ 94DA              ;	Rutina principal de pintado de entidades.
 717+ 94DA              ;	Extrae la foto del frame, (entidades).
 718+ 94DA
 719+ 94DA              Extrae_foto_entidades
 720+ 94DA
 721+ 94DA 21 01 70     	ld hl,Album_de_fotos+1
 722+ 94DD 7E           	ld a,(hl)
 723+ 94DE A7           	and a
 724+ 94DF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 94E0
 726+ 94E0              ;	No hay datos, (entidades para pintar en este frame).
 727+ 94E0
 728+ 94E0 3A 82 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 94E3 A7           	and a
 730+ 94E4 C8           	ret z
 731+ 94E5
 732+ 94E5              ; -----------------------------------
 733+ 94E5
 734+ 94E5 ED 73 87 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 94E9 31 00 70     	ld sp,Album_de_fotos
 736+ 94EC
 737+ 94EC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 94EE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 94EF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 94F0
 741+ 94F0 ED 73 89 87  	ld (Stack_2),sp
 742+ 94F4 ED 7B 87 87  	ld sp,(Stack)
 743+ 94F8
 744+ 94F8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 94F8
 746+ 94F8 3E CD        	ld a,$cd
 747+ 94FA 32 02 95     	ld (Imprime),a
 748+ 94FD EB           	ex de,hl
 749+ 94FE 22 03 95     	ld (Imprime+1),hl
 750+ 9501 EB           	ex de,hl
 751+ 9502
 752+ 9502              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 9502
 754+ 9502 00 00 00     Imprime db 0,0,0
 755+ 9505
 756+ 9505 ED 73 87 87  	ld (Stack),sp
 757+ 9509
 758+ 9509 3A 82 87     	ld a,(Numero_de_malotes)
 759+ 950C 3D           	dec a
 760+ 950D 28 09        	jr z,1F
 761+ 950F 32 82 87      	ld (Numero_de_malotes),a
 762+ 9512
 763+ 9512 ED 7B 89 87  	ld sp,(Stack_2)
 764+ 9516 18 D4        	jr 2B
 765+ 9518
 766+ 9518 AF           1 xor a
 767+ 9519 32 89 87     	ld (Stack_2),a
 768+ 951C
 769+ 951C C9           	ret
 770+ 951D
 771+ 951D              ; -----------------------------------------------------------------------------------
 772+ 951D              ;
 773+ 951D              ;	28/2/23
 774+ 951D              ;
 775+ 951D              ;	Pinta los disparos generados.
 776+ 951D
 777+ 951D              Extrae_foto_disparos
 778+ 951D
 779+ 951D 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 9520 7E               ld a,(hl)
 781+ 9521 A7               and a
 782+ 9522 C8               ret z
 783+ 9523
 784+ 9523 3A 97 87     	ld a,(Numero_de_disparotes)
 785+ 9526 A7           	and a
 786+ 9527 C8           	ret z
 787+ 9528 ED 73 87 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 952C 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 952F
 790+ 952F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 9531 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 9532 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9533
 794+ 9533 ED 73 89 87  	ld (Stack_2),sp
 795+ 9537 ED 7B 87 87  	ld sp,(Stack)
 796+ 953B
 797+ 953B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 953B
 799+ 953B 3E CD        	ld a,$cd
 800+ 953D 32 45 95     	ld (Imprime2),a
 801+ 9540 EB           	ex de,hl
 802+ 9541 22 46 95     	ld (Imprime2+1),hl
 803+ 9544 EB           	ex de,hl
 804+ 9545
 805+ 9545              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9545
 807+ 9545 00 00 00     Imprime2 db 0,0,0
 808+ 9548
 809+ 9548 3A 97 87     	ld a,(Numero_de_disparotes)
 810+ 954B 3D           	dec a
 811+ 954C 28 09        	jr z,1F
 812+ 954E 32 97 87      	ld (Numero_de_disparotes),a
 813+ 9551
 814+ 9551 ED 7B 89 87  	ld sp,(Stack_2)
 815+ 9555 18 D8        	jr 2B
 816+ 9557
 817+ 9557 AF           1 xor a
 818+ 9558 32 89 87     	ld (Stack_2),a
 819+ 955B C9           	ret
 820+ 955C
 821+ 955C              ; -----------------------------------------------------------------------------------
 822+ 955C              ;
 823+ 955C              ;	4/9/23
 824+ 955C              ;
 825+ 955C              ;	Rutina principal de pintado de Amadeus.
 826+ 955C              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 955C
 828+ 955C 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 955F 7E           	ld a,(hl)
 830+ 9560 A7           	and a
 831+ 9561 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 9562
 833+ 9562 3A 82 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9565 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9566 C8           	ret z
 836+ 9567
 837+ 9567              ; -----------------------------------
 838+ 9567
 839+ 9567 ED 73 87 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 956B 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 956E
 842+ 956E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 9570 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 9571 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 9572
 846+ 9572 ED 73 89 87  	ld (Stack_2),sp
 847+ 9576 ED 7B 87 87  	ld sp,(Stack)
 848+ 957A
 849+ 957A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 957A
 851+ 957A 3E CD        	ld a,$cd
 852+ 957C 32 84 95     	ld (Imprime_Amadeus),a
 853+ 957F EB           	ex de,hl
 854+ 9580 22 85 95     	ld (Imprime_Amadeus+1),hl
 855+ 9583 EB           	ex de,hl
 856+ 9584
 857+ 9584              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9584
 859+ 9584 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9587
 861+ 9587 ED 73 87 87  	ld (Stack),sp
 862+ 958B
 863+ 958B 3A 82 87     	ld a,(Numero_de_malotes)
 864+ 958E 3D           	dec a
 865+ 958F 28 09        	jr z,1F
 866+ 9591 32 82 87      	ld (Numero_de_malotes),a
 867+ 9594
 868+ 9594 ED 7B 89 87  	ld sp,(Stack_2)
 869+ 9598 18 D4        	jr 2B
 870+ 959A
 871+ 959A AF           1 xor a
 872+ 959B 32 89 87     	ld (Stack_2),a
 873+ 959E
 874+ 959E C9           	ret
# file closed: Draw_XOR.asm
1902  959F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 959F              ;   índices de Rutinas de impresión.
   2+ 959F
   3+ 959F AF 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95A1 DC 95            defw Pinta_Amadeus_3x2
   5+ 95A3
   6+ 95A3 32 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95A5 D2 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95A7 86 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95A9
  10+ 95A9 5C 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95AB 60 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95AD 14 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95AF
  14+ 95AF
  15+ 95AF              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95AF              ;
  17+ 95AF              ;   12/12/22
  18+ 95AF              ;
  19+ 95AF              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95AF              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95AF              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95AF              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95AF              ;
  24+ 95AF              ;   Modifica: DE y HL.
  25+ 95AF
  26+ 95AF ED 73 87 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95B3 FD F9        	ld sp,iy
  28+ 95B5 06 10            ld b,16
  29+ 95B7 D1           1 pop de
  30+ 95B8 7B               ld a,e
  31+ 95B9 AE               xor (hl)
  32+ 95BA 77           	ld (hl),a
  33+ 95BB 23           	inc hl
  34+ 95BC 7A               ld a,d
  35+ 95BD AE               xor (hl)
  36+ 95BE 77           	ld (hl),a
  37+ 95BF 2B           	dec hl
  38+ 95C0 24           	inc h
  39+ 95C1 7C               ld a,h
  40+ 95C2 E6 07            and 7
  41+ 95C4 20 0A            jr nz,2F
  42+ 95C6 7D               ld a,l
  43+ 95C7 C6 20            add a,$20
  44+ 95C9 6F               ld l,a
  45+ 95CA 38 04            jr c,2F
  46+ 95CC 7C               ld a,h
  47+ 95CD D6 08            sub 8
  48+ 95CF 67               ld h,a
  49+ 95D0 7C           2 ld a,h
  50+ 95D1 FE 58            cp $58
  51+ 95D3 28 02            jr z,3F
  52+ 95D5 10 E0            djnz 1B
  53+ 95D7 ED 7B 87 87  3 ld sp,(Stack)
  54+ 95DB C9           	ret
  55+ 95DC
  56+ 95DC ED 73 87 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95E0 FD F9        	ld sp,iy
  58+ 95E2 06 08            ld b,8
  59+ 95E4 D1           1 pop de
  60+ 95E5 7B               ld a,e
  61+ 95E6 AE               xor (hl)
  62+ 95E7 77           	ld (hl),a
  63+ 95E8 23           	inc hl
  64+ 95E9 7A               ld a,d
  65+ 95EA AE               xor (hl)
  66+ 95EB 77           	ld (hl),a
  67+ 95EC 23           	inc hl
  68+ 95ED D1           	pop de
  69+ 95EE 7B               ld a,e
  70+ 95EF AE               xor (hl)
  71+ 95F0 77           	ld (hl),a
  72+ 95F1 2B           	dec hl
  73+ 95F2 2B           	dec hl
  74+ 95F3 24           	inc h
  75+ 95F4 7C               ld a,h
  76+ 95F5 E6 07            and 7
  77+ 95F7 20 0A            jr nz,2F
  78+ 95F9 7D               ld a,l
  79+ 95FA C6 20            add a,$20
  80+ 95FC 6F               ld l,a
  81+ 95FD 38 04            jr c,2F
  82+ 95FF 7C               ld a,h
  83+ 9600 D6 08            sub 8
  84+ 9602 67               ld h,a
  85+ 9603 7C           2 ld a,h
  86+ 9604 FE 58            cp $58
  87+ 9606 28 25            jr z,4F
  88+ 9608 7A               ld a,d
  89+ 9609 AE               xor (hl)
  90+ 960A 77               ld (hl),a
  91+ 960B D1           	pop de
  92+ 960C 23           	inc hl
  93+ 960D 7B               ld a,e
  94+ 960E AE               xor (hl)
  95+ 960F 77           	ld (hl),a
  96+ 9610 23           	inc hl
  97+ 9611 7A               ld a,d
  98+ 9612 AE               xor (hl)
  99+ 9613 77           	ld (hl),a
 100+ 9614 2B           	dec hl
 101+ 9615 2B           	dec hl
 102+ 9616 24           	inc h
 103+ 9617 7C               ld a,h
 104+ 9618 E6 07            and 7
 105+ 961A 20 0A            jr nz,3F
 106+ 961C 7D               ld a,l
 107+ 961D C6 20            add a,$20
 108+ 961F 6F               ld l,a
 109+ 9620 38 04            jr c,3F
 110+ 9622 7C               ld a,h
 111+ 9623 D6 08            sub 8
 112+ 9625 67               ld h,a
 113+ 9626 7C           3 ld a,h
 114+ 9627 FE 58            cp $58
 115+ 9629 28 02            jr z,4F
 116+ 962B 10 B7            djnz 1B
 117+ 962D ED 7B 87 87  4 ld sp,(Stack)
 118+ 9631 C9           	ret
 119+ 9632
 120+ 9632              ; ---------------------------------------------------
 121+ 9632
 122+ 9632 ED 73 87 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9636 FD F9        	ld sp,iy
 124+ 9638
 125+ 9638              ; >>>
 126+ 9638
 127+ 9638 06 10            ld b,16
 128+ 963A D1           1 pop de
 129+ 963B 7A           	ld a,d
 130+ 963C AE           	xor (hl)
 131+ 963D 77           	ld (hl),a
 132+ 963E 24           	inc h
 133+ 963F 7C               ld a,h
 134+ 9640 E6 07            and 7
 135+ 9642 20 0C            jr nz,2F
 136+ 9644 7D               ld a,l
 137+ 9645 C6 20            add a,$20
 138+ 9647 6F               ld l,a
 139+ 9648 38 06            jr c,2F
 140+ 964A 7C               ld a,h
 141+ 964B D6 08            sub 8
 142+ 964D 67               ld h,a
 143+ 964E 18 00            jr 2F
 144+ 9650 7C           2 ld a,h
 145+ 9651 FE 58            cp $58
 146+ 9653 28 02            jr z,3F
 147+ 9655 10 E3            djnz 1B
 148+ 9657 ED 7B 87 87  3 ld sp,(Stack)
 149+ 965B C9           	ret
 150+ 965C
 151+ 965C ED 73 87 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9660 FD F9        	ld sp,iy
 153+ 9662
 154+ 9662              ; >>>
 155+ 9662
 156+ 9662 06 10            ld b,16
 157+ 9664 D1           1 pop de
 158+ 9665 7B           	ld a,e
 159+ 9666 AE           	xor (hl)
 160+ 9667 77           	ld (hl),a
 161+ 9668 24           	inc h
 162+ 9669 7C               ld a,h
 163+ 966A E6 07            and 7
 164+ 966C 20 0C            jr nz,2F
 165+ 966E 7D               ld a,l
 166+ 966F C6 20            add a,$20
 167+ 9671 6F               ld l,a
 168+ 9672 38 06            jr c,2F
 169+ 9674 7C               ld a,h
 170+ 9675 D6 08            sub 8
 171+ 9677 67               ld h,a
 172+ 9678 18 00            jr 2F
 173+ 967A 7C           2 ld a,h
 174+ 967B FE 58            cp $58
 175+ 967D 28 02            jr z,3F
 176+ 967F 10 E3            djnz 1B
 177+ 9681 ED 7B 87 87  3 ld sp,(Stack)
 178+ 9685 C9           	ret
 179+ 9686
 180+ 9686              ; ---------------------------------------------------
 181+ 9686
 182+ 9686 ED 73 87 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 968A FD F9        	ld sp,iy
 184+ 968C 06 08            ld b,8
 185+ 968E D1           1 pop de
 186+ 968F 7A           	ld a,d
 187+ 9690 AE           	xor (hl)
 188+ 9691 77           	ld (hl),a
 189+ 9692 23           	inc hl
 190+ 9693 D1           	pop de
 191+ 9694 7B           	ld a,e
 192+ 9695 AE           	xor (hl)
 193+ 9696 77           	ld (hl),a
 194+ 9697 2B           	dec hl
 195+ 9698 24            	inc h
 196+ 9699 7C               ld a,h
 197+ 969A E6 07            and 7
 198+ 969C 20 0A            jr nz,2F
 199+ 969E 7D               ld a,l
 200+ 969F C6 20            add a,$20
 201+ 96A1 6F               ld l,a
 202+ 96A2 38 04            jr c,2F
 203+ 96A4 7C               ld a,h
 204+ 96A5 D6 08            sub 8
 205+ 96A7 67               ld h,a
 206+ 96A8 7C           2 ld a,h
 207+ 96A9 FE 58            cp $58
 208+ 96AB 28 20            jr z,4F
 209+ 96AD D1               pop de
 210+ 96AE 7B           	ld a,e
 211+ 96AF AE           	xor (hl)
 212+ 96B0 77           	ld (hl),a
 213+ 96B1 23           	inc hl
 214+ 96B2 7A           	ld a,d
 215+ 96B3 AE           	xor (hl)
 216+ 96B4 77           	ld (hl),a
 217+ 96B5 2B           	dec hl
 218+ 96B6 24           	inc h
 219+ 96B7 7C               ld a,h
 220+ 96B8 E6 07            and 7
 221+ 96BA 20 0A            jr nz,3F
 222+ 96BC 7D               ld a,l
 223+ 96BD C6 20            add a,$20
 224+ 96BF 6F               ld l,a
 225+ 96C0 38 04            jr c,3F
 226+ 96C2 7C               ld a,h
 227+ 96C3 D6 08            sub 8
 228+ 96C5 67               ld h,a
 229+ 96C6 7C           3 ld a,h
 230+ 96C7 FE 58            cp $58
 231+ 96C9 28 02            jr z,4F
 232+ 96CB 10 C1            djnz 1B
 233+ 96CD ED 7B 87 87  4 ld sp,(Stack)
 234+ 96D1 C9           	ret
 235+ 96D2
 236+ 96D2 ED 73 87 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96D6 FD F9        	ld sp,iy
 238+ 96D8 06 08            ld b,8
 239+ 96DA D1           1 pop de
 240+ 96DB D1           	pop de
 241+ 96DC 7B           	ld a,e
 242+ 96DD AE           	xor (hl)
 243+ 96DE 77           	ld (hl),a
 244+ 96DF 24            	inc h
 245+ 96E0 7C               ld a,h
 246+ 96E1 E6 07            and 7
 247+ 96E3 20 0A            jr nz,2F
 248+ 96E5 7D               ld a,l
 249+ 96E6 C6 20            add a,$20
 250+ 96E8 6F               ld l,a
 251+ 96E9 38 04            jr c,2F
 252+ 96EB 7C               ld a,h
 253+ 96EC D6 08            sub 8
 254+ 96EE 67               ld h,a
 255+ 96EF 7C           2 ld a,h
 256+ 96F0 FE 58            cp $58
 257+ 96F2 28 1B            jr z,4F
 258+ 96F4 D1               pop de
 259+ 96F5 7A           	ld a,d
 260+ 96F6 AE           	xor (hl)
 261+ 96F7 77           	ld (hl),a
 262+ 96F8 24           	inc h
 263+ 96F9 7C               ld a,h
 264+ 96FA E6 07            and 7
 265+ 96FC 20 0A            jr nz,3F
 266+ 96FE 7D               ld a,l
 267+ 96FF C6 20            add a,$20
 268+ 9701 6F               ld l,a
 269+ 9702 38 04            jr c,3F
 270+ 9704 7C               ld a,h
 271+ 9705 D6 08            sub 8
 272+ 9707 67               ld h,a
 273+ 9708 7C           3 ld a,h
 274+ 9709 FE 58            cp $58
 275+ 970B 28 02            jr z,4F
 276+ 970D 10 CB            djnz 1B
 277+ 970F ED 7B 87 87  4 ld sp,(Stack)
 278+ 9713 C9           	ret
 279+ 9714
 280+ 9714 ED 73 87 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9718 FD F9        	ld sp,iy
 282+ 971A 06 08            ld b,8
 283+ 971C D1           1 pop de
 284+ 971D 7B           	ld a,e
 285+ 971E AE           	xor (hl)
 286+ 971F 77           	ld (hl),a
 287+ 9720 23           	inc hl
 288+ 9721 7A           	ld a,d
 289+ 9722 AE           	xor (hl)
 290+ 9723 77           	ld (hl),a
 291+ 9724 2B           	dec hl
 292+ 9725 24             	inc h
 293+ 9726 7C               ld a,h
 294+ 9727 E6 07            and 7
 295+ 9729 20 0A            jr nz,2F
 296+ 972B 7D               ld a,l
 297+ 972C C6 20            add a,$20
 298+ 972E 6F               ld l,a
 299+ 972F 38 04            jr c,2F
 300+ 9731 7C               ld a,h
 301+ 9732 D6 08            sub 8
 302+ 9734 67               ld h,a
 303+ 9735 7C           2 ld a,h
 304+ 9736 FE 58            cp $58
 305+ 9738 28 21            jr z,4F
 306+ 973A D1               pop de
 307+ 973B 7A           	ld a,d
 308+ 973C AE           	xor (hl)
 309+ 973D 77           	ld (hl),a
 310+ 973E 23           	inc hl
 311+ 973F D1               pop de
 312+ 9740 7B           	ld a,e
 313+ 9741 AE           	xor (hl)
 314+ 9742 77           	ld (hl),a
 315+ 9743 2B           	dec hl
 316+ 9744 24           	inc h
 317+ 9745 7C               ld a,h
 318+ 9746 E6 07            and 7
 319+ 9748 20 0A            jr nz,3F
 320+ 974A 7D               ld a,l
 321+ 974B C6 20            add a,$20
 322+ 974D 6F               ld l,a
 323+ 974E 38 04            jr c,3F
 324+ 9750 7C               ld a,h
 325+ 9751 D6 08            sub 8
 326+ 9753 67               ld h,a
 327+ 9754 7C           3 ld a,h
 328+ 9755 FE 58            cp $58
 329+ 9757 28 02            jr z,4F
 330+ 9759 10 C1            djnz 1B
 331+ 975B ED 7B 87 87  4 ld sp,(Stack)
 332+ 975F C9           	ret
 333+ 9760
 334+ 9760 ED 73 87 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9764 FD F9        	ld sp,iy
 336+ 9766 06 08            ld b,8
 337+ 9768 D1           1 pop de
 338+ 9769 7B           	ld a,e
 339+ 976A AE           	xor (hl)
 340+ 976B 77           	ld (hl),a
 341+ 976C 24            	inc h
 342+ 976D 7C               ld a,h
 343+ 976E E6 07            and 7
 344+ 9770 20 0A            jr nz,2F
 345+ 9772 7D               ld a,l
 346+ 9773 C6 20            add a,$20
 347+ 9775 6F               ld l,a
 348+ 9776 38 04            jr c,2F
 349+ 9778 7C               ld a,h
 350+ 9779 D6 08            sub 8
 351+ 977B 67               ld h,a
 352+ 977C 7C           2 ld a,h
 353+ 977D FE 58            cp $58
 354+ 977F 28 1C            jr z,4F
 355+ 9781 D1               pop de
 356+ 9782 7A           	ld a,d
 357+ 9783 AE           	xor (hl)
 358+ 9784 77           	ld (hl),a
 359+ 9785 24           	inc h
 360+ 9786 7C               ld a,h
 361+ 9787 E6 07            and 7
 362+ 9789 20 0A            jr nz,3F
 363+ 978B 7D               ld a,l
 364+ 978C C6 20            add a,$20
 365+ 978E 6F               ld l,a
 366+ 978F 38 04            jr c,3F
 367+ 9791 7C               ld a,h
 368+ 9792 D6 08            sub 8
 369+ 9794 67               ld h,a
 370+ 9795 7C           3 ld a,h
 371+ 9796 FE 58            cp $58
 372+ 9798 28 03            jr z,4F
 373+ 979A D1               pop de
 374+ 979B 10 CB            djnz 1B
 375+ 979D ED 7B 87 87  4 ld sp,(Stack)
 376+ 97A1 C9           	ret
 377+ 97A2
 378+ 97A2              ; ---------------------------------------------------
 379+ 97A2              ;
 380+ 97A2              ;   27/02/23
 381+ 97A2              ;
 382+ 97A2              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97A2              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97A2              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97A2
 386+ 97A2 ED 73 87 87  Pinta_Disparo ld (Stack),sp
 387+ 97A6 FD F9            ld sp,iy
 388+ 97A8 06 03            ld b,3
 389+ 97AA D1           1 pop de
 390+ 97AB 7B               ld a,e
 391+ 97AC AE               xor (hl)
 392+ 97AD 77               ld (hl),a
 393+ 97AE 23               inc hl
 394+ 97AF 7A               ld a,d
 395+ 97B0 AE               xor (hl)
 396+ 97B1 77               ld (hl),a
 397+ 97B2 2B               dec hl
 398+ 97B3
 399+ 97B3 24               inc h
 400+ 97B4 7C               ld a,h
 401+ 97B5 E6 07            and 7
 402+ 97B7 20 0A            jr nz,2F
 403+ 97B9 7D               ld a,l
 404+ 97BA C6 20            add a,$20
 405+ 97BC 6F               ld l,a
 406+ 97BD 38 04            jr c,2F
 407+ 97BF 7C               ld a,h
 408+ 97C0 D6 08            sub 8
 409+ 97C2 67               ld h,a
 410+ 97C3 7C           2 ld a,h
 411+ 97C4 FE 58            cp $58
 412+ 97C6 28 02            jr z,3F
 413+ 97C8
 414+ 97C8 10 E0            djnz 1B
 415+ 97CA ED 7B 87 87  3 ld sp,(Stack)
 416+ 97CE C9               ret
 417+ 97CF
# file closed: Rutinas_de_impresion_sprites.asm
1903  97CF              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97CF              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97CF              ;
   3+ 97CF              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97CF              ;
   5+ 97CF              ; *****************************************************************************************************************************************************************************************
   6+ 97CF              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97CF
   8+ 97CF 7C           calcula_tercio ld a,h
   9+ 97D0 E6 18        	and $18
  10+ 97D2 CB 2F        	sra a
  11+ 97D4 CB 2F        	sra a
  12+ 97D6 CB 2F        	sra a
  13+ 97D8 C9           	ret
  14+ 97D9
# file closed: calcula_tercio.asm
1904  97D9              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97D9              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97D9              ;
   3+ 97D9              ;
   4+ 97D9              ;	CLS.
   5+ 97D9              ;
   6+ 97D9              ;	Limpia la pantalla y define sus atributos.
   7+ 97D9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97D9              ;
   9+ 97D9              ;	COLORES: 0 ..... NEGRO
  10+ 97D9              ;    		 1 ..... AZUL
  11+ 97D9              ; 			 2 ..... ROJO
  12+ 97D9              ;			 3 ..... MAGENTA
  13+ 97D9              ; 			 4 ..... VERDE
  14+ 97D9              ; 			 5 ..... CIAN
  15+ 97D9              ;			 6 ..... AMARILLO
  16+ 97D9              ; 			 7 ..... BLANCO
  17+ 97D9              ;
  18+ 97D9              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97D9              ;
  20+ 97D9              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97D9
  22+ 97D9
  23+ 97D9 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97DC 11 01 40     	LD DE,$4001
  25+ 97DF 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97E2 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97E4 ED B0        	LDIR
  28+ 97E6 01 FF 02     	LD BC,767
  29+ 97E9 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 97EA ED B0        	LDIR
  31+ 97EC C9           	ret
  32+ 97ED
# file closed: Cls.asm
1905  97ED              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 97ED
   2+ 97ED              ; ******************************************************************************************************************************************************************************************
   3+ 97ED              ;
   4+ 97ED              ;   20/05/23
   5+ 97ED              ;
   6+ 97ED              ;	Recompone_posicion_inicio
   7+ 97ED              ;
   8+ 97ED              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 97ED              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 97ED              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 97ED              ;	_ a una u otra rutina.
  12+ 97ED
  13+ 97ED              Recompone_posicion_inicio
  14+ 97ED
  15+ 97ED 2A 47 87     	ld hl,(Posicion_inicio)
  16+ 97F0 7D           	ld a,l
  17+ 97F1 E6 1F        	and $1f
  18+ 97F3 28 16        	jr z,1F
  19+ 97F5
  20+ 97F5 FE 1F        	cp $1f
  21+ 97F7 28 0D        	jr z,3F
  22+ 97F9
  23+ 97F9 21 5C 87     	ld hl,Ctrl_2
  24+ 97FC CB C6        	set 0,(hl)
  25+ 97FE 2A 39 87     	ld hl,(Puntero_objeto)
  26+ 9801 22 77 87     	ld (Repone_puntero_objeto),hl
  27+ 9804 18 08        	jr 2F
  28+ 9806
  29+ 9806 CD B4 99     3 call Mov_left
  30+ 9809 18 03        	jr 2F
  31+ 980B
  32+ 980B CD 91 98     1 call Mov_right
  33+ 980E 21 00 F0     2 ld hl,Sprite_vacio
  34+ 9811 22 39 87     	ld (Puntero_objeto),hl
  35+ 9814 C9           	ret
  36+ 9815
  37+ 9815              ; ******************************************************************************************************************************************************************************************
  38+ 9815              ;
  39+ 9815              ;   27/05/23
  40+ 9815              ;
  41+ 9815              ;	Mov_down
  42+ 9815              ;
  43+ 9815              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9815              ;
  45+ 9815              ;
  46+ 9815              Mov_down
  47+ 9815
  48+ 9815 CD 7F 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9818              ;																	; _ repone (Puntero_objeto).
  50+ 9818 21 57 87     	ld hl,Ctrl_0
  51+ 981B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 981D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 981D              ; 																	; _ en el caso de que no lo haya.
  54+ 981D 3A 61 87     	ld a,(Vel_down)
  55+ 9820 47           	ld b,a
  56+ 9821 2A 37 87         ld hl,(Posicion_actual)
  57+ 9824 CD CF 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9827 E6 02        	and 2
  59+ 9829 28 17        	jr z,1F
  60+ 982B
  61+ 982B              ; Nos encontramos en el último tercio de pantalla.
  62+ 982B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 982B
  64+ 982B 7C           	ld a,h
  65+ 982C FE 57        	cp $57
  66+ 982E 20 12        	jr nz,1F
  67+ 9830
  68+ 9830 7D           	ld a,l
  69+ 9831 C6 20        	add $20
  70+ 9833 30 0D        	jr nc,1F
  71+ 9835
  72+ 9835              ; ------------------------------
  73+ 9835              ;
  74+ 9835              ;	12/01/24
  75+ 9835
  76+ 9835              ;	call Reaparece_arriba
  77+ 9835 CD 41 9B     	call Reinicio
  78+ 9838
  79+ 9838              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9838
  81+ 9838 3A 95 87     	ld a,(Ctrl_3)
  82+ 983B CB CF        	set 1,a
  83+ 983D 32 95 87     	ld (Ctrl_3),a
  84+ 9840
  85+ 9840 18 08        	jr 3F
  86+ 9842              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9842              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9842              ; ------------------------------
  89+ 9842
  90+ 9842 CD BC 94     1 call NextScan
  91+ 9845 22 37 87     	ld (Posicion_actual),hl
  92+ 9848 10 DA            djnz 2B
  93+ 984A CD 67 9B     3 call Genera_coordenadas
  94+ 984D C9           	ret
  95+ 984E
  96+ 984E              ; ******************************************************************************************************************************************************************************************
  97+ 984E              ;
  98+ 984E              ;   27/05/23
  99+ 984E              ;
 100+ 984E              ;	Mov_up
 101+ 984E              ;
 102+ 984E              ; 	Mueve el Sprite hacia arriba.
 103+ 984E              ;
 104+ 984E              ;
 105+ 984E              Mov_up
 106+ 984E
 107+ 984E CD 7F 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9851              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9851 21 57 87     	ld hl,Ctrl_0
 110+ 9854 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9856              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9856              ; 																		; _ en el caso de que no lo haya.
 113+ 9856 3A 60 87     	ld a,(Vel_up)
 114+ 9859 47           	ld b,a
 115+ 985A 2A 37 87     	ld hl,(Posicion_actual)
 116+ 985D CD CF 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9860 A7           	and a
 118+ 9861 20 10        	jr nz,1F
 119+ 9863
 120+ 9863              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9863              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9863
 123+ 9863 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9864 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9866 20 0B            jr nz,1F
 126+ 9868 7D               ld a,l
 127+ 9869 D6 20            sub $20
 128+ 986B 30 06            jr nc,1F
 129+ 986D 25               dec h
 130+ 986E
 131+ 986E              ; -----------------------------
 132+ 986E CD 22 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9871              ;	call Reinicio
 134+ 9871              ; -----------------------------
 135+ 9871
 136+ 9871 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9873 CD CB 94     1 call PreviousScan
 138+ 9876 22 37 87     	ld (Posicion_actual),hl
 139+ 9879 10 E2            djnz 3B
 140+ 987B CD 67 9B     2 call Genera_coordenadas
 141+ 987E C9           	ret
 142+ 987F
 143+ 987F              ; -----------------------------
 144+ 987F              ;
 145+ 987F              ;	27/5/23
 146+ 987F              ;
 147+ 987F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 987F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 987F              ;
 150+ 987F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 987F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 987F              ;
 153+ 987F              ;	Modifica: A y (Puntero_objeto).
 154+ 987F
 155+ 987F 3A 5C 87     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9882 CB 47        	bit 0,a
 157+ 9884 C8           	ret z
 158+ 9885 CB 87        	res 0,a
 159+ 9887 32 5C 87     	ld (Ctrl_2),a
 160+ 988A 2A 77 87     	ld hl,(Repone_puntero_objeto)
 161+ 988D 22 39 87     	ld (Puntero_objeto),hl
 162+ 9890 C9           	ret
 163+ 9891
 164+ 9891              ; ******************************************************************************************************************************************************************************************
 165+ 9891              ;
 166+ 9891              ;	19/10/22
 167+ 9891              ;
 168+ 9891              ;	Mov_right.
 169+ 9891              ;
 170+ 9891              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9891              ;
 172+ 9891
 173+ 9891 3A 57 87     Mov_right ld a,(Ctrl_0)
 174+ 9894 CB 77        	bit 6,a
 175+ 9896 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9898
 177+ 9898 CD D0 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 989B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 989C
 180+ 989C 21 57 87     	ld hl,Ctrl_0
 181+ 989F CB E6        	set 4,(hl)
 182+ 98A1 18 52        	jr 8F
 183+ 98A3
 184+ 98A3 21 57 87     10 ld hl,Ctrl_0
 185+ 98A6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 98A8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 98A8              ; 																	; _ en el caso de que no lo haya.
 188+ 98A8 3A 3B 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 98AB FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 98AD 20 46        	jr nz,8F
 191+ 98AF
 192+ 98AF 3A 3D 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 98B2 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 98B3 28 40        	jr z,8F
 195+ 98B5
 196+ 98B5              ; ---------- ---------- ----------
 197+ 98B5              ;
 198+ 98B5              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98B5
 200+ 98B5 3A 5F 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 98B8 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98BA 28 11        	jr z,1F
 203+ 98BC 38 06        	jr c,6F
 204+ 98BE FE 04        	cp 4
 205+ 98C0 28 14        	jr z,7F
 206+ 98C2 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 98C4
 208+ 98C4              ; ---------- ---------- ----------
 209+ 98C4              ;
 210+ 98C4              ; Perfiles de velocidad
 211+ 98C4              ;
 212+ 98C4
 213+ 98C4 3A 3D 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 98C7 FE FE        	cp $fe
 215+ 98C9 20 2A        	jr nz,8F
 216+ 98CB 18 10        	jr 3F
 217+ 98CD 3A 3D 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 98D0 FE FD        	cp $fd
 219+ 98D2 20 21        	jr nz,8F
 220+ 98D4 18 07        	jr 3F
 221+ 98D6 3A 3D 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 98D9 FE FB        	cp $fb
 223+ 98DB 20 18        	jr nz,8F
 224+ 98DD
 225+ 98DD              ; ---------- ---------- ----------
 226+ 98DD
 227+ 98DD              3
 228+ 98DD CD 10 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 98E0              ;	call Reinicio
 230+ 98E0
 231+ 98E0              ; ---------- ---------- ----------
 232+ 98E0              ;
 233+ 98E0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 98E0
 235+ 98E0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 98E2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 98E3 CD FC 98     	call DESPLZ_DER
 238+ 98E6 C1           	pop bc
 239+ 98E7 10 F9        	djnz 5B
 240+ 98E9 2A 37 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 98EC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 98ED 22 37 87     	ld (Posicion_actual),hl
 243+ 98F0 CD 67 9B     	call Genera_coordenadas
 244+ 98F3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 98F5
 246+ 98F5              ; ---------- ---------- ----------
 247+ 98F5
 248+ 98F5 2A 37 87     8 ld hl,(Posicion_actual)
 249+ 98F8 CD FC 98     	call DESPLZ_DER
 250+ 98FB C9           2 ret
 251+ 98FC
 252+ 98FC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 98FC              ;
 254+ 98FC              ;	22/9/22
 255+ 98FC              ;
 256+ 98FC
 257+ 98FC CD 0B 99     DESPLZ_DER call Desplaza_derecha
 258+ 98FF CD 57 99         call modifica_parametros_1er_DESPLZ_2
 259+ 9902 CD 80 99         call Ciclo_completo
 260+ 9905 21 57 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9908 CB FE        	set 7,(hl)
 262+ 990A C9           	ret
 263+ 990B
 264+ 990B              ; ******************************************************************************************************************************************************************************************
 265+ 990B              ;	15/02/23
 266+ 990B              ;
 267+ 990B
 268+ 990B 3A 5F 87     Desplaza_derecha ld a,(Vel_right)
 269+ 990E 47           	ld b,a
 270+ 990F 2A 43 87     	ld hl,(Puntero_DESPLZ_der)
 271+ 9912 23           1 inc hl
 272+ 9913 23           	inc hl
 273+ 9914 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9916 22 43 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9919 CD 50 8B     	call Extrae_address
 276+ 991C 22 39 87     	ld (Puntero_objeto),hl
 277+ 991F
 278+ 991F              ; Modifica (Puntero_DESPLZ_izq).
 279+ 991F
 280+ 991F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 991F              ; Cuántos movimientos hemos hecho ??
 282+ 991F              ; DE contiene (Puntero_DESPLZ_der).
 283+ 991F
 284+ 991F 2A 3F 87     7 ld hl,(Indice_Sprite_der)
 285+ 9922 EB           	ex de,hl
 286+ 9923 A7           	and a
 287+ 9924 ED 52        	sbc hl,de
 288+ 9926 CB 3D        	srl l
 289+ 9928 3E 08        6 ld a,8
 290+ 992A 95           	sub l
 291+ 992B 30 1E        	jr nc,3F
 292+ 992D
 293+ 992D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 992D              ; B="0".
 295+ 992D
 296+ 992D 04           4 inc b
 297+ 992E 3C           	inc a
 298+ 992F 20 FC        	jr nz,4B
 299+ 9931 78           	ld a,b
 300+ 9932 08           	ex af,af
 301+ 9933 2A 3F 87     	ld hl,(Indice_Sprite_der)
 302+ 9936 23           5 inc hl
 303+ 9937 23           	inc hl
 304+ 9938 10 FC        	djnz 5B
 305+ 993A 22 43 87     	ld (Puntero_DESPLZ_der),hl
 306+ 993D CD 50 8B     	call Extrae_address
 307+ 9940 22 39 87     	ld (Puntero_objeto),hl
 308+ 9943
 309+ 9943              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9943              ; _(Posicion_actual).
 311+ 9943
 312+ 9943 21 37 87     	ld hl,Posicion_actual
 313+ 9946 34           	inc (hl)
 314+ 9947 08               ex af,af
 315+ 9948 6F           	ld l,a
 316+ 9949 18 DD        	jr 6B
 317+ 994B
 318+ 994B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 994B
 320+ 994B 47           3 ld b,a
 321+ 994C 2A 41 87     	ld hl,(Indice_Sprite_izq)
 322+ 994F 23           2 inc hl
 323+ 9950 23           	inc hl
 324+ 9951 10 FC        	djnz 2B
 325+ 9953 22 45 87     	ld (Puntero_DESPLZ_izq),hl
 326+ 9956 C9           8 ret
 327+ 9957
 328+ 9957              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9957              ;
 330+ 9957              ;	24/7/22
 331+ 9957              ;
 332+ 9957              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9957              ;
 334+ 9957              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9957              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9957              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9957
 338+ 9957 3A 3D 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 995A A7           	and a
 340+ 995B 20 1F        	jr nz,1F
 341+ 995D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 995F 32 3D 87         ld (CTRL_DESPLZ),a
 343+ 9962
 344+ 9962 21 36 87     	ld hl,Columns
 345+ 9965 34           	inc (hl)
 346+ 9966 3A 49 87     	ld a,(Cuad_objeto)
 347+ 9969 E6 01        	and 1
 348+ 996B 28 0F        	jr z,1F
 349+ 996D 2A 37 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9970 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9971 22 37 87     	ld (Posicion_actual),hl
 352+ 9974 CD 67 9B     	call Genera_coordenadas
 353+ 9977 CD DC 9A     	call Inc_CTRL_DESPLZ
 354+ 997A 18 03        	jr 2F
 355+ 997C CD DC 9A     1 call Inc_CTRL_DESPLZ
 356+ 997F C9           2 ret
 357+ 9980
 358+ 9980              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9980              ;
 360+ 9980              ;	24/7/22
 361+ 9980              ;
 362+ 9980              ;	Ciclo_completo.
 363+ 9980              ;
 364+ 9980              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9980              ;
 366+ 9980              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9980              ; 	Decrementamos (Columns).
 368+ 9980              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9980              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9980
 371+ 9980
 372+ 9980 3A 3D 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9983 FE FF        	cp $ff
 374+ 9985 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9987 E6 F0        	and $f0
 376+ 9989 20 28        	jr nz,3F
 377+ 998B
 378+ 998B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 998B
 380+ 998B 3A 3D 87     	ld a,(CTRL_DESPLZ)
 381+ 998E 47           	ld b,a
 382+ 998F 3E F8        	ld a,$f8
 383+ 9991 80           	add b
 384+ 9992 32 3D 87     	ld (CTRL_DESPLZ),a
 385+ 9995 18 1C        	jr 3F
 386+ 9997 21 36 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 999A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 999B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 999C 32 3D 87     	ld (CTRL_DESPLZ),a
 390+ 999F 3A 49 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 99A2 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 99A4 20 0A        	jr nz,2F
 393+ 99A6 2A 37 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 99A9 23           	inc hl
 395+ 99AA 22 37 87     	ld (Posicion_actual),hl
 396+ 99AD CD 67 9B     	call Genera_coordenadas
 397+ 99B0
 398+ 99B0              ; Inicia el puntero de Sprite.
 399+ 99B0
 400+ 99B0 CD 67 8B     2 call Inicia_puntero_objeto_der
 401+ 99B3 C9           3 ret
 402+ 99B4
 403+ 99B4              ; ******************************************************************************************************************************************************************************************
 404+ 99B4              ;
 405+ 99B4              ;	15/02/23
 406+ 99B4              ;
 407+ 99B4              ;	Mov_left.
 408+ 99B4              ;
 409+ 99B4              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 99B4              ;
 411+ 99B4              Mov_left
 412+ 99B4
 413+ 99B4 21 57 87     	ld hl,Ctrl_0
 414+ 99B7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99B9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99B9              ; 																	; _ en el caso de que no lo haya.
 417+ 99B9 3A 57 87     	ld a,(Ctrl_0)
 418+ 99BC CB 77        	bit 6,a
 419+ 99BE 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 99C0
 421+ 99C0 CD D6 9A     	call Stop_Amadeus_left
 422+ 99C3 C8           	ret z
 423+ 99C4 20 4A        	jr nz,8F
 424+ 99C6
 425+ 99C6 3A 3B 87     11 ld a,(Coordenada_X)
 426+ 99C9 A7           	and a
 427+ 99CA 20 44        	jr nz,8F
 428+ 99CC
 429+ 99CC 3A 3D 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 99CF A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 99D0 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 99D2
 433+ 99D2              ; ---------- ---------- ----------
 434+ 99D2
 435+ 99D2 3A 5E 87     	ld a,(Vel_left)
 436+ 99D5 FE 02        	cp 2
 437+ 99D7 28 0F        	jr z,1F
 438+ 99D9 38 04        	jr c,6F
 439+ 99DB FE 04        	cp 4
 440+ 99DD 28 12        	jr z,7F
 441+ 99DF
 442+ 99DF              ; ---------- ---------- ----------
 443+ 99DF
 444+ 99DF 3A 3D 87     6 ld a,(CTRL_DESPLZ)
 445+ 99E2 FE F8        	cp $f8
 446+ 99E4 20 2A        	jr nz,8F
 447+ 99E6 18 10        	jr 4F
 448+ 99E8 3A 3D 87     1 ld a,(CTRL_DESPLZ)
 449+ 99EB FE F9        	cp $f9
 450+ 99ED 20 21        	jr nz,8F
 451+ 99EF 18 07        	jr 4F
 452+ 99F1 3A 3D 87     7 ld a,(CTRL_DESPLZ)
 453+ 99F4 FE FB        	cp $fb
 454+ 99F6 20 18        	jr nz,8F
 455+ 99F8
 456+ 99F8              ; ---------- ---------- ----------
 457+ 99F8
 458+ 99F8              4
 459+ 99F8 CD FE 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 99FB              ;	call Reinicio
 461+ 99FB
 462+ 99FB              ; ---------- ---------- ----------
 463+ 99FB
 464+ 99FB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 99FD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 99FE
 467+ 99FE              ;	ld hl,(Indice_Sprite_izq)
 468+ 99FE              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 99FE
 470+ 99FE CD 17 9A     	call DESPLZ_IZQ
 471+ 9A01 C1           	pop bc
 472+ 9A02 10 F9        	djnz 5B
 473+ 9A04 2A 37 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9A07 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9A08 22 37 87     	ld (Posicion_actual),hl
 476+ 9A0B CD 67 9B     	call Genera_coordenadas
 477+ 9A0E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9A10
 479+ 9A10              ; ---------- ---------- ----------
 480+ 9A10
 481+ 9A10              ; Movemos, no hay recolocación.
 482+ 9A10
 483+ 9A10 2A 37 87     8 ld hl,(Posicion_actual)
 484+ 9A13 CD 17 9A     	call DESPLZ_IZQ
 485+ 9A16 C9           2 ret
 486+ 9A17
 487+ 9A17              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A17              ;
 489+ 9A17              ;	22/9/22
 490+ 9A17
 491+ 9A17              DESPLZ_IZQ
 492+ 9A17
 493+ 9A17 CD 26 9A     	call Desplaza_izquierda
 494+ 9A1A CD 72 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A1D CD 9A 9A     	call Ciclo_completo_2
 496+ 9A20 21 57 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A23 CB BE        	res 7,(hl)
 498+ 9A25 C9           	ret
 499+ 9A26
 500+ 9A26              Desplaza_izquierda
 501+ 9A26
 502+ 9A26 3A 5E 87     	ld a,(Vel_left)
 503+ 9A29 47           	ld b,a
 504+ 9A2A 2A 45 87     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A2D 23           1 inc hl
 506+ 9A2E 23           	inc hl
 507+ 9A2F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A31 22 45 87     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A34 CD 50 8B     	call Extrae_address
 510+ 9A37 22 39 87     	ld (Puntero_objeto),hl
 511+ 9A3A
 512+ 9A3A              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A3A
 514+ 9A3A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A3A              ; Cuántos movimientos hemos hecho ??
 516+ 9A3A              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A3A
 518+ 9A3A 2A 41 87     7 ld hl,(Indice_Sprite_izq)
 519+ 9A3D EB           	ex de,hl
 520+ 9A3E A7           	and a
 521+ 9A3F ED 52        	sbc hl,de
 522+ 9A41 CB 3D        	srl l
 523+ 9A43 3E 08        6 ld a,8
 524+ 9A45 95           	sub l
 525+ 9A46 30 1E        	jr nc,3F
 526+ 9A48
 527+ 9A48              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A48              ; B="0".
 529+ 9A48
 530+ 9A48 04           4 inc b
 531+ 9A49 3C           	inc a
 532+ 9A4A 20 FC        	jr nz,4B
 533+ 9A4C 78           	ld a,b
 534+ 9A4D 08           	ex af,af
 535+ 9A4E 2A 41 87     	ld hl,(Indice_Sprite_izq)
 536+ 9A51 23           5 inc hl
 537+ 9A52 23           	inc hl
 538+ 9A53 10 FC        	djnz 5B
 539+ 9A55 22 45 87     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A58 CD 50 8B     	call Extrae_address
 541+ 9A5B 22 39 87     	ld (Puntero_objeto),hl
 542+ 9A5E
 543+ 9A5E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A5E              ; _(Posicion_actual).
 545+ 9A5E
 546+ 9A5E 21 37 87     	ld hl,Posicion_actual
 547+ 9A61 35           	dec (hl)
 548+ 9A62 08           	ex af,af
 549+ 9A63 6F           	ld l,a
 550+ 9A64 18 DD        	jr 6B
 551+ 9A66
 552+ 9A66              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A66
 554+ 9A66 47           3 ld b,a
 555+ 9A67 2A 3F 87     	ld hl,(Indice_Sprite_der)
 556+ 9A6A 23           2 inc hl
 557+ 9A6B 23           	inc hl
 558+ 9A6C 10 FC        	djnz 2B
 559+ 9A6E 22 43 87     	ld (Puntero_DESPLZ_der),hl
 560+ 9A71 C9           8 ret
 561+ 9A72
 562+ 9A72              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A72              ;
 564+ 9A72              ;	modifica_parametros_1er_DESPLZ
 565+ 9A72              ;
 566+ 9A72              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A72              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A72              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A72
 570+ 9A72 3A 3D 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A75 A7           	and a
 572+ 9A76 20 1E        	jr nz,1F
 573+ 9A78 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9A79 32 3D 87         ld (CTRL_DESPLZ),a
 575+ 9A7C 21 36 87     	ld hl,Columns
 576+ 9A7F 34           	inc (hl)
 577+ 9A80 3A 49 87     	ld a,(Cuad_objeto)
 578+ 9A83 E6 01        	and 1
 579+ 9A85 20 0F        	jr nz,1F
 580+ 9A87 2A 37 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9A8A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9A8B 22 37 87     	ld (Posicion_actual),hl
 583+ 9A8E CD 67 9B     	call Genera_coordenadas
 584+ 9A91 CD ED 9A     	call Dec_CTRL_DESPLZ
 585+ 9A94 18 03        	jr 2F
 586+ 9A96 CD ED 9A     1 call Dec_CTRL_DESPLZ
 587+ 9A99 C9           2 ret
 588+ 9A9A
 589+ 9A9A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9A9A
 591+ 9A9A 3A 3D 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9A9D FE F7        	cp $f7
 593+ 9A9F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9AA1 30 2C        	jr nc,3F
 595+ 9AA3
 596+ 9AA3              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9AA3
 598+ 9AA3 06 00        	ld b,0
 599+ 9AA5 04           4 inc b
 600+ 9AA6 3C           	inc a
 601+ 9AA7 FE F7        	cp $f7
 602+ 9AA9 20 FA        	jr nz,4B
 603+ 9AAB 3E FF        	ld a,$ff
 604+ 9AAD 90           	sub b
 605+ 9AAE 32 3D 87     	ld (CTRL_DESPLZ),a
 606+ 9AB1 18 1C        	jr 3F
 607+ 9AB3
 608+ 9AB3              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9AB3
 610+ 9AB3 21 36 87     1 ld hl,Columns
 611+ 9AB6 35           	dec (hl)
 612+ 9AB7 AF           	xor a
 613+ 9AB8 32 3D 87     	ld (CTRL_DESPLZ),a
 614+ 9ABB 3A 49 87     	ld a,(Cuad_objeto)
 615+ 9ABE E6 01        	and 1
 616+ 9AC0 28 0A        	jr z,2F
 617+ 9AC2 2A 37 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9AC5 2B           	dec hl
 619+ 9AC6 22 37 87     	ld (Posicion_actual),hl
 620+ 9AC9 CD 67 9B     	call Genera_coordenadas
 621+ 9ACC
 622+ 9ACC              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9ACC
 624+ 9ACC CD 7A 8B     2 call Inicia_puntero_objeto_izq
 625+ 9ACF C9           3 ret
 626+ 9AD0
 627+ 9AD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9AD0              ;
 629+ 9AD0              ;	19/10/22
 630+ 9AD0              ;
 631+ 9AD0              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9AD0              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9AD0
 634+ 9AD0 3A 3B 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9AD3 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9AD5 C9           	ret
 637+ 9AD6
 638+ 9AD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9AD6              ;
 640+ 9AD6              ;	19/10/22
 641+ 9AD6              ;
 642+ 9AD6              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9AD6              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9AD6
 645+ 9AD6 3A 3B 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9AD9 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9ADB C9           	ret
 648+ 9ADC
 649+ 9ADC              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9ADC              ;
 651+ 9ADC              ;	24/7/22
 652+ 9ADC              ;
 653+ 9ADC              ;	Inc_CTRL_DESPLZ
 654+ 9ADC              ;
 655+ 9ADC              ;
 656+ 9ADC              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9ADC
 658+ 9ADC 21 3D 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9ADF 3A 5F 87     	ld a,(Vel_right)
 660+ 9AE2 A7           	and a
 661+ 9AE3 28 06        	jr z,1F
 662+ 9AE5 47           	ld b,a
 663+ 9AE6 34           3 inc (hl)
 664+ 9AE7 10 FD        	djnz 3B
 665+ 9AE9 18 01        	jr 2F
 666+ 9AEB 34           1 inc (hl)
 667+ 9AEC C9           2 ret
 668+ 9AED
 669+ 9AED              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9AED              ;
 671+ 9AED              ;	5/2/23
 672+ 9AED              ;
 673+ 9AED              ;	Dec_CTRL_DESPLZ
 674+ 9AED              ;
 675+ 9AED              ;
 676+ 9AED              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9AED
 678+ 9AED 21 3D 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9AF0 3A 5E 87     	ld a,(Vel_left)
 680+ 9AF3 A7           	and a
 681+ 9AF4 28 06        	jr z,1F
 682+ 9AF6 47           	ld b,a
 683+ 9AF7 35           3 dec (hl)
 684+ 9AF8 10 FD        	djnz 3B
 685+ 9AFA 18 01        	jr 2F
 686+ 9AFC 35           1 dec (hl)
 687+ 9AFD C9           2 ret
 688+ 9AFE
 689+ 9AFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9AFE
 691+ 9AFE 2A 37 87     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9B01 01 1F 00     	ld bc,31
 693+ 9B04 A7           	and a
 694+ 9B05 ED 4A        	adc hl,bc
 695+ 9B07 22 37 87     	ld (Posicion_actual),hl
 696+ 9B0A 21 57 87     	ld hl,Ctrl_0														; $xxx1
 697+ 9B0D CB C6        	set 0,(hl)
 698+ 9B0F C9           	ret
 699+ 9B10
 700+ 9B10              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9B10
 702+ 9B10 2A 37 87     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9B13 01 1F 00     	ld bc,31
 704+ 9B16 A7           	and a
 705+ 9B17 ED 42        	sbc hl,bc
 706+ 9B19 22 37 87     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B1C 21 57 87     	ld hl,Ctrl_0
 708+ 9B1F CB CE        	set 1,(hl)
 709+ 9B21 C9           	ret
 710+ 9B22
 711+ 9B22              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B22
 713+ 9B22 24           Reaparece_abajo inc h
 714+ 9B23 01 E0 17     	ld bc,$17e0
 715+ 9B26 A7           	and a
 716+ 9B27 ED 4A        	adc hl,bc
 717+ 9B29 22 37 87     	ld (Posicion_actual),hl
 718+ 9B2C 21 57 87     	ld hl,Ctrl_0
 719+ 9B2F CB D6        	set 2,(hl)
 720+ 9B31 C9           	ret
 721+ 9B32
 722+ 9B32              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B32
 724+ 9B32 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B35 A7           	and a
 726+ 9B36 ED 42        	sbc hl,bc
 727+ 9B38 22 37 87     	ld (Posicion_actual),hl
 728+ 9B3B 21 57 87     	ld hl,Ctrl_0
 729+ 9B3E CB DE        	set 3,(hl)
 730+ 9B40 C9           	ret
 731+ 9B41
 732+ 9B41              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B41              ;
 734+ 9B41              ;	15/07/23
 735+ 9B41
 736+ 9B41              Reinicio
 737+ 9B41
 738+ 9B41              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B41
 740+ 9B41 AF           	xor a
 741+ 9B42 21 6E 87     	ld hl,Puntero_indice_mov_bucle
 742+ 9B45 CD 63 9B     	call Limpia_contenido_hl
 743+ 9B48
 744+ 9B48 21 37 87     	ld hl,Posicion_actual
 745+ 9B4B CD 63 9B     	call Limpia_contenido_hl
 746+ 9B4E
 747+ 9B4E CD 6E 86     	call Inicializa_Puntero_indice_mov
 748+ 9B51 CD 23 9E     	call Inicia_Puntero_mov
 749+ 9B54
 750+ 9B54 21 70 87     	ld hl,Incrementa_puntero
 751+ 9B57 06 05        	ld b,5
 752+ 9B59 77           1 ld (hl),a
 753+ 9B5A 23           	inc hl
 754+ 9B5B 10 FC        	djnz 1B
 755+ 9B5D
 756+ 9B5D 21 5C 87     	ld hl,Ctrl_2
 757+ 9B60 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B62
 759+ 9B62 C9           	ret
 760+ 9B63
 761+ 9B63 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B64 23           	inc hl
 763+ 9B65 77           	ld (hl),a
 764+ 9B66 C9           	ret
 765+ 9B67
 766+ 9B67
# file closed: Direcciones.asm
1906  9B67              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B67              ; ------------------------------------------------------------------------
   2+ 9B67              ;
   3+ 9B67              ;	02/04/23
   4+ 9B67              ;
   5+ 9B67              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B67              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B67              ;
   8+ 9B67              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B67              ;
  10+ 9B67              ;	Modifica: A,BC y DE.
  11+ 9B67
  12+ 9B67 C5           Genera_coordenadas push bc
  13+ 9B68 E5           	push hl
  14+ 9B69 D5           	push de
  15+ 9B6A
  16+ 9B6A 2A 37 87     	ld hl,(Posicion_actual)
  17+ 9B6D
  18+ 9B6D 7D           	ld a,l
  19+ 9B6E E6 1F        	and $1f
  20+ 9B70 32 3B 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9B73
  22+ 9B73 CD CF 97     	call calcula_tercio
  23+ 9B76 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9B77
  25+ 9B77 1E 00        	ld e,0
  26+ 9B79 7D           	ld a,l
  27+ 9B7A E6 E0        	and $e0
  28+ 9B7C 28 01        	jr z,1F
  29+ 9B7E 04           	inc b
  30+ 9B7F
  31+ 9B7F 04           1 inc b
  32+ 9B80 05           	dec b
  33+ 9B81 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9B83              ;														; _ , salimos.
  35+ 9B83 1C           3 inc e
  36+ 9B84 D6 20        	sub 32
  37+ 9B86 20 FB        	jr nz,3B
  38+ 9B88 10 F5        	djnz 1B
  39+ 9B8A
  40+ 9B8A 7B           2 ld a,e
  41+ 9B8B 32 3C 87     	ld (Coordenada_y),a
  42+ 9B8E
  43+ 9B8E D1           	pop de
  44+ 9B8F E1           	pop hl
  45+ 9B90 C1           	pop bc
  46+ 9B91
  47+ 9B91 C9           	ret
  48+ 9B92
  49+ 9B92              ; ------------------------------------------------------------------------
  50+ 9B92              ;	28/05/23
  51+ 9B92              ;
  52+ 9B92              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9B92              ;	Fila superior "0", Columna izquierda "0".
  54+ 9B92              ;
  55+ 9B92              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9B92              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9B92              ;
  58+ 9B92              ;		DE="$120d"
  59+ 9B92              ;
  60+ 9B92              ;		D, (Coordenada_X), Columnas, $12
  61+ 9B92              ;		E, (Coordenada_y), Filas, $0d
  62+ 9B92              ;
  63+ 9B92              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9B92
  65+ 9B92              ;	Modifica: A,BC y DE.
  66+ 9B92
  67+ 9B92
  68+ 9B92              Genera_coordenadas_disparo
  69+ 9B92
  70+ 9B92              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9B92
  72+ 9B92 7D           	ld a,l
  73+ 9B93 E6 1F        	and $1f
  74+ 9B95 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9B96 CD CF 97     	call calcula_tercio
  76+ 9B99 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9B9A 1E 00        	ld e,0
  78+ 9B9C 7D           	ld a,l
  79+ 9B9D E6 E0        	and $e0
  80+ 9B9F 28 01        	jr z,1F
  81+ 9BA1 04           	inc b
  82+ 9BA2 1C           1 inc e
  83+ 9BA3 D6 20        	sub 32
  84+ 9BA5 20 FB        	jr nz,1B
  85+ 9BA7 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9BA9 C9           	ret
  87+ 9BAA
# file closed: Genera_coordenadas.asm
1907  9BAA              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BAA              ; Relojes y temporizaciones.
   2+ 9BAA
   3+ 9BAA              ; ------------------------------------------------------
   4+ 9BAA              ;
   5+ 9BAA              ;	16/7/23
   6+ 9BAA              ;
   7+ 9BAA              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BAA              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BAA              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BAA              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BAA              ;
  12+ 9BAA              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BAA              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BAA
  15+ 9BAA              ; Disparo_entidad db 1
  16+ 9BAA              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BAA              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BAA
  19+ 9BAA              Habilita_disparos
  20+ 9BAA
  21+ 9BAA 7E           	ld a,(hl)
  22+ 9BAB A7           	and a
  23+ 9BAC C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BAD
  25+ 9BAD EB           	ex de,hl
  26+ 9BAE
  27+ 9BAE 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BAF C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BB0
  30+ 9BB0              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BB0
  32+ 9BB0 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BB1 7E           	ld a,(hl)
  34+ 9BB2 23           	inc hl
  35+ 9BB3 77           	ld (hl),a
  36+ 9BB4
  37+ 9BB4 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BB5 3E 01        	ld a,1
  39+ 9BB7 77           	ld (hl),a
  40+ 9BB8 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1908  9BB9              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BB9
   2+ 9BB9
   3+ 9BB9              ;   07/07/23
   4+ 9BB9              ;
   5+ 9BB9              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BB9              ;
   7+ 9BB9              ;   Codificación:
   8+ 9BB9              ;
   9+ 9BB9              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BB9              ;
  11+ 9BB9              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BB9              ;
  13+ 9BB9              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BB9              ;
  15+ 9BB9              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BB9              ;
  17+ 9BB9              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BB9              ;                               ..... %01000010 Vel_up 4
  19+ 9BB9              ;                                               Vel_down 2
  20+ 9BB9              ;                               ..... $42
  21+ 9BB9              ;
  22+ 9BB9              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BB9              ;
  24+ 9BB9              ;                               ..... %01000010 Vel_left 4
  25+ 9BB9              ;                                               Vel_right 2
  26+ 9BB9              ;                               ..... $42
  27+ 9BB9              ;
  28+ 9BB9              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BB9              ;
  30+ 9BB9              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BB9              ;
  32+ 9BB9              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BB9              ;
  34+ 9BB9              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BB9              ;                                     $53
  36+ 9BB9              ;
  37+ 9BB9              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BB9              ;
  39+ 9BB9              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BB9              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BB9              ;
  42+ 9BB9              ;                       Arriba ..... $81
  43+ 9BB9              ;                       Arriba - izquierda ..... $a1
  44+ 9BB9              ;                       Arriba - derecha ..... $91
  45+ 9BB9              ;
  46+ 9BB9              ;                       Abajo ..... $41
  47+ 9BB9              ;                       Abajo - izquierda ..... $61
  48+ 9BB9              ;                       Abajo - derecha ..... $51
  49+ 9BB9              ;
  50+ 9BB9              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BB9              ;
  52+ 9BB9              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BB9              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BB9              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BB9              ;
  56+ 9BB9              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BB9              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BB9              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BB9              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BB9              ;
  61+ 9BB9              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BB9              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BB9              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BB9              ;
  65+ 9BB9              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BB9              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BB9              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BB9              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BB9
  70+ 9BB9              ; ----- ----- ----- ----- -----
  71+ 9BB9
  72+ 9BB9 E5 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BBB ED 9B            defw F_1
  74+ 9BBD F7 9B            defw F_2
  75+ 9BBF 01 9C            defw Codo_abajo_derecha
  76+ 9BC1 35 9C            defw Derecha_y_subiendo
  77+ 9BC3 3F 9C            defw Derecha_y_subiendo_1
  78+ 9BC5 49 9C            defw F_3
  79+ 9BC7 53 9C            defw F_4
  80+ 9BC9 5D 9C            defw Derecha_y_bajando
  81+ 9BCB 67 9C            defw Derecha_y_bajando_1
  82+ 9BCD 71 9C            defw Derecha_y_bajando_2
  83+ 9BCF 7B 9C            defw Codo_derecha_abajo
  84+ 9BD1 AB 9C            defw Codo_abajo_izq.
  85+ 9BD3 DF 9C            defw Izquierda_y_subiendo
  86+ 9BD5 E9 9C            defw Izquierda_y_subiendo_1
  87+ 9BD7 F3 9C            defw F_5
  88+ 9BD9 FD 9C            defw F_6
  89+ 9BDB 07 9D            defw Izquierda_y_bajando
  90+ 9BDD 11 9D            defw Izquierda_y_bajando_1
  91+ 9BDF 1B 9D            defw Izquierda_y_bajando_2
  92+ 9BE1 25 9D            defw Codo_izquierda_abajo
  93+ 9BE3 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9BE5
  95+ 9BE5 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9BE9 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9BED
  98+ 9BED 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9BF1 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9BF5 08 00
 100+ 9BF7 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9BFB 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9BFF 0F FE
 102+ 9C01
 103+ 9C01 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C05 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C0D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C15 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C1D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C25 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C29 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C2D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C31 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C35
 117+ 9C35 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C39 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C3D 06 00
 119+ 9C3F
 120+ 9C3F 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C43 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C47 02 00
 122+ 9C49
 123+ 9C49 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C4D 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C51 04 00
 125+ 9C53 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C57 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C5B 08 00
 127+ 9C5D
 128+ 9C5D 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C61 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C65 02 00
 130+ 9C67
 131+ 9C67 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9C6B 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9C6F 06 00
 133+ 9C71
 134+ 9C71 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9C75 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9C79 06 00
 136+ 9C7B
 137+ 9C7B              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9C7B
 139+ 9C7B 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9C7F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9C83 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9C87 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9C8B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9C8F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9C93 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9C97 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9C9B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9C9F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CA3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9CA7 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9CAB
 152+ 9CAB 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9CAF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9CB3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9CB7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9CBB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9CBF 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9CC3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CC7 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9CCB 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9CCF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9CD3 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9CD7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9CDB 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9CDF
 166+ 9CDF 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9CE3 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9CE7 06 00
 168+ 9CE9
 169+ 9CE9 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9CED 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9CF1 02 00
 171+ 9CF3
 172+ 9CF3 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9CF7 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9CFB 04 00
 174+ 9CFD 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D01 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D05 08 00
 176+ 9D07
 177+ 9D07 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D0B 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D0F 02 00
 179+ 9D11
 180+ 9D11 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D15 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D19 06 00
 182+ 9D1B
 183+ 9D1B 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D1F 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D23 06 00
 185+ 9D25
 186+ 9D25 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D29 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D2D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D31 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D35 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D39 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D3D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D41 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D45 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D49 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D4D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D51 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D55
 199+ 9D55              ; ----- ----- ----- ----- -----
 200+ 9D55              ;
 201+ 9D55              ;   28/12/23
 202+ 9D55
 203+ 9D55              Movimiento
 204+ 9D55
 205+ 9D55              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D55
 207+ 9D55 3A 5C 87         ld a,(Ctrl_2)
 208+ 9D58 CB 57            bit 2,a
 209+ 9D5A 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D5C
 211+ 9D5C 2A 6C 87         ld hl,(Puntero_mov)
 212+ 9D5F 7E               ld a,(hl)
 213+ 9D60
 214+ 9D60              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D60
 216+ 9D60              Inicia_desplazamiento.
 217+ 9D60
 218+ 9D60              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D60
 220+ 9D60 CD 60 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D63
 222+ 9D63              ; Iniciamos (Repetimos_mov).
 223+ 9D63
 224+ 9D63 7E               ld a,(hl)
 225+ 9D64 E6 0F            and $0f
 226+ 9D66 32 72 87         ld (Repetimos_desplazamiento),a
 227+ 9D69 32 73 87         ld (Repetimos_desplazamiento_backup),a
 228+ 9D6C
 229+ 9D6C              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9D6C
 231+ 9D6C 23               inc hl
 232+ 9D6D 7E               ld a,(hl)
 233+ 9D6E 32 75 87         ld (Cola_de_desplazamiento),a
 234+ 9D71 2B               dec hl
 235+ 9D72
 236+ 9D72 21 5C 87         ld hl,Ctrl_2
 237+ 9D75 CB D6            set 2,(hl)
 238+ 9D77
 239+ 9D77              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9D77              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9D77
 242+ 9D77              Desplazamiento_iniciado
 243+ 9D77
 244+ 9D77 CD 2E 9E         call Aplica_desplazamiento
 245+ 9D7A
 246+ 9D7A              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9D7A
 248+ 9D7A 3A 95 87         ld a,(Ctrl_3)
 249+ 9D7D CB 57            bit 2,a
 250+ 9D7F C0               ret nz
 251+ 9D80
 252+ 9D80 3A 5C 87         ld a,(Ctrl_2)
 253+ 9D83 CB 67            bit 4,a
 254+ 9D85 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9D86
 256+ 9D86 21 72 87     3 ld hl,Repetimos_desplazamiento
 257+ 9D89 35               dec (hl)
 258+ 9D8A C0               ret nz
 259+ 9D8B
 260+ 9D8B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9D8B              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9D8B              ; Analiza (Cola_de_desplazamiento).
 263+ 9D8B
 264+ 9D8B 3A 75 87     Cola ld a,(Cola_de_desplazamiento)
 265+ 9D8E A7               and a
 266+ 9D8F CC 89 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9D92 28 30            jr z,Reinicia_el_movimiento
 268+ 9D94
 269+ 9D94 FE FF            cp $ff
 270+ 9D96 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9D98
 272+ 9D98 FE FE            cp $fe
 273+ 9D9A CC 07 9E         call z,Fijamos_bucle
 274+ 9D9D 28 25            jr z,Reinicia_el_movimiento
 275+ 9D9F
 276+ 9D9F FE FD            cp $fd
 277+ 9DA1 20 11            jr nz,1F
 278+ 9DA3
 279+ 9DA3              ; ---
 280+ 9DA3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DA3
 282+ 9DA3 3A 5C 87         ld a,(Ctrl_2)
 283+ 9DA6 CB 5F            bit 3,a
 284+ 9DA8 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9DAA
 286+ 9DAA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9DAA
 288+ 9DAA 21 5C 87         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9DAD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9DAF
 291+ 9DAF CD 18 9E         call Inicia_Repetimos_movimiento
 292+ 9DB2 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9DB4              ; ---
 294+ 9DB4
 295+ 9DB4 FE 01        1 cp 1
 296+ 9DB6 CA F1 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9DB9
 298+ 9DB9 3D               dec a
 299+ 9DBA 32 75 87         ld (Cola_de_desplazamiento),a
 300+ 9DBD
 301+ 9DBD 3A 73 87         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9DC0 32 72 87         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9DC3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9DC3 C9               ret
 305+ 9DC4
 306+ 9DC4              Reinicia_el_movimiento
 307+ 9DC4
 308+ 9DC4 3A 5C 87         ld a,(Ctrl_2)
 309+ 9DC7 CB 5F            bit 3,a
 310+ 9DC9 28 1B            jr z,2F
 311+ 9DCB
 312+ 9DCB              ; (Cola_de_desplazamiento)="254".
 313+ 9DCB
 314+ 9DCB 21 74 87         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9DCE 35               dec (hl)
 316+ 9DCF 20 15            jr nz,2F
 317+ 9DD1
 318+ 9DD1              ; Fin de las repeticiones del último movimiento.
 319+ 9DD1
 320+ 9DD1 21 5C 87         ld hl,Ctrl_2
 321+ 9DD4 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9DD6
 323+ 9DD6 2A 6C 87         ld hl,(Puntero_mov)
 324+ 9DD9 23               inc hl
 325+ 9DDA 23               inc hl
 326+ 9DDB 23               inc hl
 327+ 9DDC 22 6C 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9DDF              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9DDF 7E               ld a,(hl)
 330+ 9DE0 32 75 87         ld (Cola_de_desplazamiento),a
 331+ 9DE3
 332+ 9DE3 C3 8B 9D         jp Cola
 333+ 9DE6
 334+ 9DE6 CD 23 9E     2 call Inicia_Puntero_mov
 335+ 9DE9
 336+ 9DE9 21 5C 87         ld hl,Ctrl_2
 337+ 9DEC CB 96            res 2,(hl)
 338+ 9DEE
 339+ 9DEE C3 55 9D         jp Movimiento
 340+ 9DF1
 341+ 9DF1              Siguiente_desplazamiento
 342+ 9DF1
 343+ 9DF1              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9DF1              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9DF1
 346+ 9DF1 21 5C 87         ld hl,Ctrl_2
 347+ 9DF4 CB 96            res 2,(hl)
 348+ 9DF6
 349+ 9DF6 2A 6C 87         ld hl,(Puntero_mov)
 350+ 9DF9 23               inc hl
 351+ 9DFA 23               inc hl
 352+ 9DFB 22 6C 87         ld (Puntero_mov),hl
 353+ 9DFE
 354+ 9DFE 7E               ld a,(hl)
 355+ 9DFF A7               and a
 356+ 9E00 CC 89 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E03 CA C4 9D         jp z,Reinicia_el_movimiento
 358+ 9E06
 359+ 9E06 C9               ret
 360+ 9E07
 361+ 9E07              ; Subrutinas -----------------------------------------
 362+ 9E07              ; ---------- --------- --------- ---------- ----------
 363+ 9E07              ;
 364+ 9E07              ;   24/07/23
 365+ 9E07              ;
 366+ 9E07              ;   Fijamos_bucle
 367+ 9E07              ;
 368+ 9E07              ;
 369+ 9E07
 370+ 9E07              Fijamos_bucle
 371+ 9E07
 372+ 9E07 3A 70 87         ld a,(Incrementa_puntero)
 373+ 9E0A 3C               inc a
 374+ 9E0B 32 71 87         ld (Incrementa_puntero_backup),a
 375+ 9E0E
 376+ 9E0E CD 89 9E         call Incrementa_Puntero_indice_mov
 377+ 9E11 2A 6A 87         ld hl,(Puntero_indice_mov)
 378+ 9E14 22 6E 87         ld (Puntero_indice_mov_bucle),hl
 379+ 9E17 C9               ret
 380+ 9E18
 381+ 9E18              ; ---------- --------- --------- ---------- ----------
 382+ 9E18              ;
 383+ 9E18              ;   07/7/23
 384+ 9E18              ;
 385+ 9E18              ;   Inicia_Repetimos_movimiento
 386+ 9E18              ;
 387+ 9E18              ;
 388+ 9E18
 389+ 9E18              Inicia_Repetimos_movimiento
 390+ 9E18
 391+ 9E18              ; Iniciamos (Repetimos_movimiento).
 392+ 9E18
 393+ 9E18 DD 2A 6C 87      ld ix,(Puntero_mov)
 394+ 9E1C DD 7E 02         ld a,(ix+2)
 395+ 9E1F 32 74 87         ld (Repetimos_movimiento),a
 396+ 9E22
 397+ 9E22 C9               ret
 398+ 9E23
 399+ 9E23              ; ---------- --------- --------- ---------- ----------
 400+ 9E23              ;
 401+ 9E23              ;   26/6/23
 402+ 9E23              ;
 403+ 9E23              ;   Inicia_Puntero_mov
 404+ 9E23              ;
 405+ 9E23              ;
 406+ 9E23
 407+ 9E23 2A 6A 87     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E26 5E               ld e,(hl)
 409+ 9E27 23               inc hl
 410+ 9E28 56               ld d,(hl)
 411+ 9E29 EB               ex de,hl
 412+ 9E2A 22 6C 87         ld (Puntero_mov),hl
 413+ 9E2D C9               ret
 414+ 9E2E
 415+ 9E2E              ; ---------- --------- --------- ---------- ----------
 416+ 9E2E              ;
 417+ 9E2E              ;   27/06/23
 418+ 9E2E              ;
 419+ 9E2E              ;   Aplica_movimiento.
 420+ 9E2E
 421+ 9E2E              Aplica_desplazamiento
 422+ 9E2E
 423+ 9E2E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E2E
 425+ 9E2E 2A 6C 87         ld hl, (Puntero_mov)
 426+ 9E31
 427+ 9E31 7E               ld a,(hl)
 428+ 9E32 E6 F0            and $f0
 429+ 9E34 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E35
 431+ 9E35 CB 7E            bit 7,(hl)
 432+ 9E37 28 03            jr z,1F
 433+ 9E39 CD 4E 98         call Mov_up
 434+ 9E3C 2A 6C 87     1 ld hl, (Puntero_mov)
 435+ 9E3F CB 76            bit 6,(hl)
 436+ 9E41 28 09            jr z,2F
 437+ 9E43 CD 15 98         call Mov_down
 438+ 9E46
 439+ 9E46              ; Se ha aplicado reinicio ???
 440+ 9E46              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E46
 442+ 9E46 3A 95 87         ld a,(Ctrl_3)
 443+ 9E49 CB 57            bit 2,a
 444+ 9E4B C0               ret nz
 445+ 9E4C
 446+ 9E4C 2A 6C 87     2 ld hl, (Puntero_mov)
 447+ 9E4F CB 6E            bit 5,(hl)
 448+ 9E51 28 03            jr z,3F
 449+ 9E53 CD B4 99         call Mov_left
 450+ 9E56 2A 6C 87     3 ld hl, (Puntero_mov)
 451+ 9E59 CB 66            bit 4,(hl)
 452+ 9E5B C8               ret z
 453+ 9E5C CD 91 98         call Mov_right
 454+ 9E5F C9               ret
 455+ 9E60
 456+ 9E60              ; ---------- --------- --------- ---------- ----------
 457+ 9E60              ;
 458+ 9E60              ;   26/06/23
 459+ 9E60              ;
 460+ 9E60              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E60
 462+ 9E60              Ajusta_velocidad_desplazamiento
 463+ 9E60
 464+ 9E60              ; 1er byte de la cadena de movimiento.
 465+ 9E60              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E60
 467+ 9E60 CD 7E 9E         call Extrae_nibble_alto
 468+ 9E63
 469+ 9E63 32 60 87         ld (Vel_up),a
 470+ 9E66 79               ld a,c
 471+ 9E67 E6 0F            and $0f
 472+ 9E69 32 61 87         ld (Vel_down),a
 473+ 9E6C
 474+ 9E6C              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9E6C              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9E6C
 477+ 9E6C 23               inc hl
 478+ 9E6D CD 7E 9E         call Extrae_nibble_alto
 479+ 9E70
 480+ 9E70 32 5E 87         ld (Vel_left),a
 481+ 9E73 79               ld a,c
 482+ 9E74 E6 0F            and $0f
 483+ 9E76 32 5F 87         ld (Vel_right),a
 484+ 9E79
 485+ 9E79              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9E79
 487+ 9E79 23               inc hl
 488+ 9E7A 22 6C 87         ld (Puntero_mov),hl
 489+ 9E7D C9               ret
 490+ 9E7E
 491+ 9E7E 06 04        Extrae_nibble_alto ld b,4
 492+ 9E80 7E               ld a,(hl)
 493+ 9E81 4F               ld c,a
 494+ 9E82 E6 F0            and $f0
 495+ 9E84 CB 3F        1 srl a
 496+ 9E86 10 FC            djnz 1B
 497+ 9E88 C9               ret
 498+ 9E89
 499+ 9E89              ; ---------- --------- --------- ---------- ----------
 500+ 9E89              ;
 501+ 9E89              ;   5/7/23
 502+ 9E89              ;
 503+ 9E89              ;   Incrementa_Puntero_indice_mov
 504+ 9E89
 505+ 9E89              Incrementa_Puntero_indice_mov
 506+ 9E89
 507+ 9E89 21 70 87         ld hl,Incrementa_puntero
 508+ 9E8C 34               inc (hl)
 509+ 9E8D
 510+ 9E8D 2A 6A 87         ld hl,(Puntero_indice_mov)
 511+ 9E90 01 02 00         ld bc,2
 512+ 9E93 A7               and a
 513+ 9E94 09               add hl,bc
 514+ 9E95 22 6A 87         ld (Puntero_indice_mov),hl
 515+ 9E98
 516+ 9E98 7E               ld a,(hl)
 517+ 9E99 A7               and a
 518+ 9E9A
 519+ 9E9A              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9E9A
 521+ 9E9A              ;    jr z,$
 522+ 9E9A
 523+ 9E9A              ;! Reinicia el Patrón de movimiento.
 524+ 9E9A
 525+ 9E9A CC 9F 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9E9D
 527+ 9E9D AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9E9E
 529+ 9E9E C9               ret
 530+ 9E9F
 531+ 9E9F              ; ---------- --------- --------- ---------- ----------
 532+ 9E9F              ;
 533+ 9E9F              ;   15/01/24
 534+ 9E9F              ;
 535+ 9E9F              ;   Inicializa_Puntero_indice_mov
 536+ 9E9F
 537+ 9E9F              Inicializa_Puntero_indice_mov_2
 538+ 9E9F
 539+ 9E9F              ; Existe etiqueta de bucle principal???
 540+ 9E9F
 541+ 9E9F 2A 6E 87         ld hl,(Puntero_indice_mov_bucle)
 542+ 9EA2 24               inc h
 543+ 9EA3 25               dec h
 544+ 9EA4 28 05            jr z,2F
 545+ 9EA6
 546+ 9EA6 22 6A 87         ld (Puntero_indice_mov),hl
 547+ 9EA9 18 14            jr 3F
 548+ 9EAB
 549+ 9EAB              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9EAB
 551+ 9EAB 3A 70 87     2 ld a,(Incrementa_puntero)
 552+ 9EAE 47               ld b,a
 553+ 9EAF
 554+ 9EAF 2A 6A 87         ld hl,(Puntero_indice_mov)
 555+ 9EB2 2B           1 dec hl
 556+ 9EB3 2B               dec hl
 557+ 9EB4 10 FC            djnz 1B
 558+ 9EB6 22 6A 87         ld (Puntero_indice_mov),hl
 559+ 9EB9
 560+ 9EB9 AF               xor a
 561+ 9EBA 32 70 87         ld (Incrementa_puntero),a
 562+ 9EBD 18 06            jr 4F
 563+ 9EBF
 564+ 9EBF 3A 71 87     3 ld a,(Incrementa_puntero_backup)
 565+ 9EC2 32 70 87         ld (Incrementa_puntero),a
 566+ 9EC5 C9           4 ret
 567+ 9EC6
 568+ 9EC6 3A 34 87     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 569+ 9EC9 CD C2 86         call Calcula_salto_en_BC
 570+ 9ECC 21 62 87         ld hl,Contador_general_de_mov_masticados_Entidad_1
 571+ 9ECF A7               and a
 572+ 9ED0 ED 4A            adc hl,bc
 573+ 9ED2 C9               ret
 574+ 9ED3
 575+ 9ED3
# file closed: Patrones_de_mov.asm
1909  9ED3              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9ED3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9ED3              ;
   3+ 9ED3              ;	12/12/23
   4+ 9ED3              ;
   5+ 9ED3              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9ED3
   7+ 9ED3              ;	ADC HL,SP	LD (addr),SP
   8+ 9ED3              ;	ADD HL,SP	LD SP,(addr)
   9+ 9ED3              ;	ADD IX,SP	LD SP,nn
  10+ 9ED3              ; 	ADD IY,SP	LD SP,HL
  11+ 9ED3              ;				LD SP,IX
  12+ 9ED3              ;	DEC SP		LD SP,IY
  13+ 9ED3
  14+ 9ED3              ;	EX (SP),HL
  15+ 9ED3              ;	EX (SP),IX
  16+ 9ED3              ;	EX (SP),IY
  17+ 9ED3
  18+ 9ED3              ;	INC SP
  19+ 9ED3
  20+ 9ED3                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 87 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 51 87         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 53 87         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 76 87         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 8F 87         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 57 87     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 93 87         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 8D 87     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 76 87         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 8F 87         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 57 87     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 93 87         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 87 87      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 8D 87     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 87 87  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 8D 87         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 8D 87         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1910  718B
1911  718B              	SAVESNA "Pruebas.sna", START
1912  718B
1913  718B
1914  718B
1915  718B
# file closed: Banco_de_pruebas.asm
