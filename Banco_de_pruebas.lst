# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 92 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 B1 84        	defw Entidad_1
  98+ 846A EC 84        	defw Entidad_2
  99+ 846C 27 85        	defw Entidad_3
 100+ 846E 62 85        	defw Entidad_4
 101+ 8470 9D 85        	defw Entidad_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480
 119+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 120+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B
 127+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 128+ 848F
 129+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 130+ 8490
 131+ 8490 00 00        	db 0,0											; Variables_de_borrado
 132+ 8492 00 00        	defw 0											;	" " " " " " "
 133+ 8494 00 00        	defw 0											;	" " " " " " "
 134+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 135+ 849A
 136+ 849A 00 00        	db 0,0											; Variables_de_pintado
 137+ 849C 00 00        	defw 0											;	" " " " " " "
 138+ 849E 00 00        	defw 0											;	" " " " " " "
 139+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 140+ 84A4
 141+ 84A4 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 142+ 84A6
 143+ 84A6 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 144+ 84AA 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 145+ 84AD
 146+ 84AD 00           	db 0 											; (Columnas).
 147+ 84AE 00 00        	defw 0											; (Limite_horizontal).
 148+ 84B0 00           	db 0											; (Limite_vertical).
 149+ 84B1
 150+ 84B1              ; ---------- ---------- ---------- ---------- ----------
 151+ 84B1
 152+ 84B1 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 153+ 84B3 00 00        	defw 0											; (Posicion_actual).
 154+ 84B5 00 00        	defw 0 											; (Puntero_objeto).
 155+ 84B7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 84BA
 157+ 84BA 00           	db %00000000 									; (Attr).
 158+ 84BB
 159+ 84BB 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 84BD 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 84C3
 164+ 84C3 00 00        	defw 0											; (Posicion_inicio).
 165+ 84C5 00           	db 0											; (Cuad_objeto).
 166+ 84C6
 167+ 84C6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 84CA
 169+ 84CA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 84CB
 171+ 84CB 00 00        	db 0,0										    ; Variables_de_borrado
 172+ 84CD 00 00        	defw 0											;	" " " " " " "
 173+ 84CF 00 00        	defw 0											;	" " " " " " "
 174+ 84D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 84D5
 176+ 84D5 00 00        	db 0,0											; Variables_de_pintado
 177+ 84D7 00 00        	defw 0											;	" " " " " " "
 178+ 84D9 00 00        	defw 0											;	" " " " " " "
 179+ 84DB 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 84DF
 181+ 84DF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 182+ 84E1
 183+ 84E1 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 184+ 84E5 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 185+ 84E8
 186+ 84E8 00           	db 0 											; (Columnas).
 187+ 84E9 00 00        	defw 0											; (Limite_horizontal).
 188+ 84EB 00           	db 0											; (Limite_vertical).
 189+ 84EC
 190+ 84EC              ; ---------- ---------- ---------- ---------- ----------
 191+ 84EC
 192+ 84EC 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 193+ 84EE 00 00        	defw 0                                          ; (Posicion_actual).
 194+ 84F0 00 00        	defw 0											; (Puntero_objeto).
 195+ 84F2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 196+ 84F5
 197+ 84F5 02           	db %00000010									; (Attr).
 198+ 84F6
 199+ 84F6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 200+ 84F8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 201+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 202+ 84FC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 203+ 84FE
 204+ 84FE 5E 48        	defw $485e                                      ; (Posicion_inicio).
 205+ 8500 02           	db 2											; (Cuad_objeto).
 206+ 8501
 207+ 8501 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 208+ 8505
 209+ 8505 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 210+ 8506
 211+ 8506 00 00        	db 0,0											; Variables_de_borrado
 212+ 8508 00 00        	defw 0										 	;	" " " " " " "
 213+ 850A 00 00        	defw 0											;	" " " " " " "
 214+ 850C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 215+ 8510
 216+ 8510 00 00        	db 0,0											; Variables_de_pintado
 217+ 8512 00 00        	defw 0											;	" " " " " " "
 218+ 8514 00 00        	defw 0											;	" " " " " " "
 219+ 8516 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 851A
 221+ 851A 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 222+ 851C
 223+ 851C 56 97 00 00  	defw Indice_mov_Izquierda_y_derecha,0			; (Puntero_indice_mov) / (Puntero_mov).
 224+ 8520
 225+ 8520 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 226+ 8523
 227+ 8523 00           	db 0 											; (Columnas).
 228+ 8524 00 00        	defw 0											; (Limite_horizontal).
 229+ 8526 00           	db 0											; (Limite_vertical).
 230+ 8527
 231+ 8527              ; ---------- ---------- ---------- ---------- ----------
 232+ 8527
 233+ 8527 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 234+ 8529 00 00        	defw 0                                          ; (Posicion_actual).
 235+ 852B 00 00        	defw 0											; (Puntero_objeto).
 236+ 852D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 237+ 8530
 238+ 8530 04           	db %00000100									; (Attr).
 239+ 8531
 240+ 8531 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 241+ 8533 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 242+ 8535
 243+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8537 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8539
 246+ 8539 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 247+ 853B 01           	db 1											; (Cuad_objeto).
 248+ 853C
 249+ 853C 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8540
 251+ 8540 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8541
 253+ 8541 00 00        	db 0,0											; Variables_de_borrado
 254+ 8543 00 00        	defw 0										 	;	" " " " " " "
 255+ 8545 00 00        	defw 0											;	" " " " " " "
 256+ 8547 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 854B
 258+ 854B 00 00        	db 0,0											; Variables_de_pintado
 259+ 854D 00 00        	defw 0											;	" " " " " " "
 260+ 854F 00 00        	defw 0											;	" " " " " " "
 261+ 8551 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8555
 263+ 8555 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 264+ 8557
 265+ 8557 5C 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 266+ 855B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 855E
 268+ 855E 00           	db 0 											; (Columnas).
 269+ 855F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8561 00           	db 0											; (Limite_vertical).
 271+ 8562
 272+ 8562              ; ---------- ---------- ---------- ---------- ----------
 273+ 8562
 274+ 8562 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 275+ 8564 00 00        	defw 0                                          ; (Posicion_actual).
 276+ 8566 00 00        	defw 0 											; (Puntero_objeto).
 277+ 8568 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 856B
 279+ 856B 01           	db %00000001									; (Attr).
 280+ 856C
 281+ 856C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 282+ 856E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 283+ 8570
 284+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 8572 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 8574
 287+ 8574 BE 47        	defw $47be                                      ; (Posicion_inicio).
 288+ 8576 00           	db 0											; (Cuad_objeto).
 289+ 8577
 290+ 8577 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 857B
 292+ 857B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 857C
 294+ 857C 00 00        	db 0,0											; Variables_de_borrado
 295+ 857E 00 00        	defw 0										 	;	" " " " " " "
 296+ 8580 00 00        	defw 0											;	" " " " " " "
 297+ 8582 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 8586
 299+ 8586 00 00        	db 0,0											; Variables_de_pintado
 300+ 8588 00 00        	defw 0											;	" " " " " " "
 301+ 858A 00 00        	defw 0											;	" " " " " " "
 302+ 858C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 303+ 8590
 304+ 8590 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 305+ 8592
 306+ 8592 5A 97 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 307+ 8596 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 308+ 8599
 309+ 8599 00           	db 0 											; (Columnas).
 310+ 859A 00 00        	defw 0											; (Limite_horizontal).
 311+ 859C 00           	db 0											; (Limite_vertical).
 312+ 859D
 313+ 859D              ; ---------- ---------- ---------- ---------- ----------
 314+ 859D
 315+ 859D 02 02        Entidad_5 db 2,2                                  	; (Filas) / (Columns).
 316+ 859F 00 00        	defw 0                                          ; (Posicion_actual).
 317+ 85A1 00 00        	defw 0 											; (Puntero_objeto).
 318+ 85A3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 319+ 85A6
 320+ 85A6 01           	db %00000001									; (Attr).
 321+ 85A7
 322+ 85A7 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 323+ 85A9 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 324+ 85AB
 325+ 85AB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 85AD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 85AF
 328+ 85AF 00 40        	defw $4000                                      ; (Posicion_inicio).
 329+ 85B1 01           	db 1											; (Cuad_objeto).
 330+ 85B2
 331+ 85B2 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 85B6
 333+ 85B6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 85B7
 335+ 85B7 00 00        	db 0,0											; Variables_de_borrado
 336+ 85B9 00 00        	defw 0										 	;	" " " " " " "
 337+ 85BB 00 00        	defw 0											;	" " " " " " "
 338+ 85BD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 85C1
 340+ 85C1 00 00        	db 0,0											; Variables_de_pintado
 341+ 85C3 00 00        	defw 0											;	" " " " " " "
 342+ 85C5 00 00        	defw 0											;	" " " " " " "
 343+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 344+ 85CB
 345+ 85CB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 346+ 85CD
 347+ 85CD 5E 97 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 348+ 85D1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 349+ 85D4
 350+ 85D4 00           	db 0 											; (Columnas).
 351+ 85D5 00 00        	defw 0											; (Limite_horizontal).
 352+ 85D7 00           	db 0											; (Limite_vertical).
# file closed: Entidades_y_disparos.asm
  21  85D8
  22  85D8              ; ******************************************************************************************************************************************************************************************
  23  85D8              ; Constantes.
  24  85D8              ; ******************************************************************************************************************************************************************************************
  25  85D8              ;
  26  85D8              ; 8/11/22
  27  85D8              ;
  28  85D8              ; Constantes generales.
  29  85D8              ;
  30  85D8
  31  85D8              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  85D8              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  85D8              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  85D8              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  85D8
  36  85D8              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  85D8              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  85D8              ;                               				        ; De momento situamos este almacén en $7000.
  39  85D8              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  85D8              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  85D8              ;                               				        ; De momento situamos este almacén en $7060.
  42  85D8
  43  85D8              ; ******************************************************************************************************************************************************************************************
  44  85D8              ; Variables.
  45  85D8              ; ******************************************************************************************************************************************************************************************
  46  85D8              ;
  47  85D8              ; 10/11/22
  48  85D8              ;
  49  85D8              ; Variables de DRAW. (Motor principal).
  50  85D8              ;
  51  85D8              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  85D8
  53  85D8 02           Filas db 2												; Filas. [DRAW]
  54  85D9 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  85DA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  85DC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85DE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85DF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85E0
  60  85E0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85E0
  62  85E0 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85E1              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85E1              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85E1 04           Attr db %00000100										; Atributos de la entidad:
  66  85E2
  67  85E2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85E2              ;
  69  85E2              ;	COLORES: 0 ..... NEGRO
  70  85E2              ;    		 1 ..... AZUL
  71  85E2              ; 			 2 ..... ROJO
  72  85E2              ;			 3 ..... MAGENTA
  73  85E2              ; 			 4 ..... VERDE
  74  85E2              ; 			 5 ..... CIAN
  75  85E2              ;			 6 ..... AMARILLO
  76  85E2              ; 			 7 ..... BLANCO
  77  85E2
  78  85E2 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85E4 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85E6 00 00        Puntero_DESPLZ_der defw 0
  81  85E8 00 00        Puntero_DESPLZ_izq defw 0
  82  85EA
  83  85EA 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85EC 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85ED
  86  85ED              ; Variables de objeto. (Características).
  87  85ED
  88  85ED 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85EE 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85EF 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85F0 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85F1
  93  85F1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85F2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85F2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85F2 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85F4 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85F6 00 00        	defw 0
  99  85F8 00 00 00 00  	db 0,0,0,0
 100  85FC
 101  85FC 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85FE 00 00        	defw 0
 103  8600 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  8602 00 00 00 00  	db 0,0,0,0
 105  8606
 106  8606              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  8606
 108  8606 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  8607              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  8607              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  8607              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  8607              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  8607              ;
 114  8607              ; 														DESCRIPCIÖN:
 115  8607              ;
 116  8607              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  8607              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  8607              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  8607              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  8607              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  8607              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  8607              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  8607              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  8607              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  8607              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  8607              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  8607              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  8607              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  8607              ;
 130  8607              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  8607              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  8607              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  8607
 134  8607 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  8608
 136  8608              ; Movimiento.
 137  8608
 138  8608 6A 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  860A 00 00        Puntero_mov defw 0
 140  860C 00           Contador_db_mov db 0
 141  860D 00           Incrementa_puntero db 0
 142  860E 00           Repetimos_db db 0
 143  860F
 144  860F              ; Variables de funcionamiento. [DRAW].
 145  860F
 146  860F 00           Columnas db 0
 147  8610 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  8612              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  8612 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  8613
 151  8613              ; 59 Bytes por entidad.
 152  8613              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  8613              ;					         		---------;      ;---------
 154  8613
 155  8613
 156  8613              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  8613
 158  8613 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  8614
 160  8614              ;														DESCRIPCIÓN:
 161  8614              ;
 162  8614              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  8614              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  8614              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  8614              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  8614              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad, hay que confirmarlo_
 167  8614              ; 															_ comparando las coordenadas del disparo con las de la entidad almacenada en DRAW.
 168  8614
 169  8614              ; Gestión de ENTIDADES.
 170  8614
 171  8614 00 00        Puntero_store_entidades defw 0
 172  8616 00 00        Puntero_restore_entidades defw 0
 173  8618 00 00        Indice_restore defw 0
 174  861A 03           Numero_de_entidades db 3								; Nº de entidades en pantalla, (contando con Amadeus).
 175  861B 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 176  861C              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 177  861C              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 178  861C              ;														; _ (Numero_de_malotes)="0".
 179  861C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 180  861E              ;														; _variable para almacenar lo posición del puntero_
 181  861E              ; 														; _de pila, SP.
 182  861E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 183  8620              ;														; La utiliza la rutina [Extrae_foto_registros].
 184  8620 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 185  8622              ;														; _el snapshot de los registros de la siguiente entidad.
 186  8622              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 187  8622 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 188  8624              ;														; _el snapshot de los registros del siguiente disparo.
 189  8624              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 190  8624
 191  8624              ;---------------------------------------------------------------------------------------------------------------
 192  8624
 193  8624              ; Gestión de Disparos.
 194  8624
 195  8624 00           Numero_de_disparotes db 0
 196  8625 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 197  8627 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 198  8629 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 199  862A              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 200  862A              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 201  862A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 202  862C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 203  862C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 204  862C              ;														; _produzca colisión.
 205  862C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 206  862E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 207  862E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 208  8631              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 209  8631 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 210  8634              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 211  8634
 212  8634              ;---------------------------------------------------------------------------------------------------------------
 213  8634
 214  8634              ; Relojes y temporizaciones.
 215  8634
 216  8634 01           Habilita_disparo_Amadeus db 1
 217  8635 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 218  8636 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 219  8637
 220  8637 01           Habilita_disparo_entidad db 1
 221  8638 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 222  8639 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 223  863A
 224  863A              ;---------------------------------------------------------------------------------------------------------------
 225  863A
 226  863A              ; Gestión de FRAMES.
 227  863A
 228  863A 00           Switch db 0
 229  863B
 230  863B              ; Variables de Raster y localización en pantalla.
 231  863B
 232  863B 00 FF        Temp_Raster defw $ff00
 233  863D
 234  863D              ; Rutina principal *************************************************************************************************************************************************************************
 235  863D              ;
 236  863D              ;	14/11/22
 237  863D
 238  863D 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 239  8640
 240  8640 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 241  8642 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 242  8644 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 243  8646 F3           	DI
 244  8647
 245  8647 3E 07        	ld a,%00000111
 246  8649 CD 7E 93     	call Cls
 247  864C
 248  864C              ;	call Pinta_FILAS
 249  864C
 250  864C CD 2E 89     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 251  864F
 252  864F 21 1A 86     	ld hl,Numero_de_entidades
 253  8652 46           	ld b,(hl)
 254  8653 04           	inc b
 255  8654 05           	dec b
 256  8655 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 257  8657
 258  8657 CD FC 87     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 259  865A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 260  865A
 261  865A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 262  865A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 263  865A              ;	Pintamos el resto de entidades:
 264  865A
 265  865A              ;	INICIA ENTIDADES !!!!!
 266  865A
 267  865A C5           1 push bc  												; Guardo el contador de entidades.
 268  865B CD 56 88      	call Inicia_Puntero_objeto
 269  865E CD CE 8D     	call Draw
 270  8661 CD A0 7F     	call Guarda_foto_registros
 271  8664 CD 9E 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 272  8667 C1           	pop bc
 273  8668 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 274  866A
 275  866A              ; 	INICIA AMADEUS !!!!!
 276  866A
 277  866A CD 05 89     3 call Restore_Amadeus
 278  866D CD 56 88     	call Inicia_Puntero_objeto
 279  8670 CD CE 8D     	call Draw
 280  8673 CD A0 7F     	call Guarda_foto_registros
 281  8676
 282  8676 11 76 84     	ld de,Amadeus_db
 283  8679 CD 17 89     	call Store_Amadeus
 284  867C
 285  867C              ; 	INICIA DISPAROS !!!!!
 286  867C
 287  867C CD 12 88     	call Inicia_Puntero_Disparo_Entidades
 288  867F CD 19 88     	call Inicia_Puntero_Disparo_Amadeus
 289  8682
 290  8682              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 291  8682
 292  8682 CD FC 87     	call Inicia_punteros_de_entidades
 293  8685 CD DE 88     	call Restore_Primera_entidad
 294  8688
 295  8688 3A 1A 86     	ld a,(Numero_de_entidades)
 296  868B 3C           	inc a
 297  868C 32 1B 86     	ld (Numero_de_malotes),a
 298  868F
 299  868F FB           2 ei
 300  8690 18 FD        	jr 2B
 301  8692
 302  8692              ; -----------------------------------------------------------------------------------
 303  8692
 304  8692              Frame
 305  8692
 306  8692              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 307  8692              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 308  8692
 309  8692              ; PINTAMOS.
 310  8692
 311  8692 3E 02            ld a,2
 312  8694 D3 FE            out ($fe),a
 313  8696 CD D2 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 314  8699 CD 0B 91     	call Extrae_foto_disparos
 315  869C 3E 01            ld a,1
 316  869E D3 FE            out ($fe),a
 317  86A0
 318  86A0              ; ----------------------------------------------------------------------
 319  86A0
 320  86A0              ; RELOJES.
 321  86A0
 322  86A0 21 34 86     	ld hl,Habilita_disparo_Amadeus
 323  86A3 11 36 86     	ld de,Temporiza_disparo_Amadeus
 324  86A6 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 325  86A9
 326  86A9 21 37 86     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 327  86AC 11 39 86     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 328  86AF CD D5 7F     	call Habilita_disparos
 329  86B2
 330  86B2              ; COLISIONES.
 331  86B2
 332  86B2 CD 70 8D     	call Selector_de_impactos
 333  86B5
 334  86B5              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 335  86B5              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 336  86B5              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 337  86B5
 338  86B5 AF           	xor a
 339  86B6 32 29 86     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 340  86B9
 341  86B9 CD FC 87     	call Inicia_punteros_de_entidades
 342  86BC CD DE 88     12 call Restore_Primera_entidad
 343  86BF
 344  86BF 3A D8 85     	ld a,(Filas)
 345  86C2 A7           	and a
 346  86C3 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 347  86C5 CD F0 88     	call Incrementa_punteros_entidades
 348  86C8 18 F2        	jr 12B
 349  86CA
 350  86CA              ; ---------------------------------------------------------------------------------------
 351  86CA
 352  86CA CD F0 8B     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 353  86CD 21 00 70     	ld hl,Album_de_fotos
 354  86D0 22 20 86         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 355  86D3              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 356  86D3 3A 1A 86     	ld a,(Numero_de_entidades)
 357  86D6 47               ld b,a
 358  86D7 A7           	and a
 359  86D8 28 57        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 360  86DA
 361  86DA              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 362  86DA
 363  86DA              ; Código que ejecutamos con cada entidad:
 364  86DA
 365  86DA              ; Impacto ???
 366  86DA
 367  86DA 3A F1 85     2 ld a,(Impacto)
 368  86DD A7           	and a
 369  86DE 28 0D        	jr z,8F
 370  86E0
 371  86E0              ; Hay Impacto en esta entidad.
 372  86E0
 373  86E0 C5           	push bc 											; Guardo el nº de entidades.
 374  86E1
 375  86E1 CD B3 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 376  86E4 CD 20 89     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 377  86E7 21 1A 86     	ld hl,Numero_de_entidades							; Una alimaña menos.
 378  86EA 35           	dec (hl)
 379  86EB
 380  86EB 18 3E        	jr 6F
 381  86ED
 382  86ED              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 383  86ED              ; _con las coordenadas de la entidad almacenada en DRAW.
 384  86ED
 385  86ED 3A 13 86     8 ld a,(Ctrl_1)
 386  86F0 CB 57        	bit 2,a
 387  86F2 28 1D        	jr z,7F
 388  86F4
 389  86F4 C5           	push bc 											; Guardo el nº de entidades.
 390  86F5
 391  86F5 2A 2C 86     	ld hl,(Coordenadas_disparo_certero)
 392  86F8 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 393  86F9              ;														; E contiene la coordenada_X del disparo.
 394  86F9 2A DE 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 395  86FC              ;														; H Coordenado_y de la entidad.
 396  86FC A7           	and a
 397  86FD ED 52        	sbc hl,de
 398  86FF CD A7 8D     	call Determina_resultado_comparativa
 399  8702 04           	inc b
 400  8703 05           	dec b
 401  8704 28 0A        	jr z,11F
 402  8706
 403  8706              ; ----- ----- -----
 404  8706
 405  8706 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 406  8708 32 F1 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 407  870B 21 13 86     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 408  870E CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 409  8710
 410  8710 C1           11 pop bc
 411  8711 C5           7 push bc
 412  8712
 413  8712 CD 64 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 414  8715
 415  8715 3A 06 86     	ld a,(Ctrl_0)
 416  8718 CB 67        	bit 4,a
 417  871A 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 418  871C
 419  871C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 420  871C              ; [[[
 421  871C CD 79 89     	call Detecta_disparo_entidad
 422  871F              ; ]]]
 423  871F CD C3 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 424  8722
 425  8722 21 06 86     	ld hl,Ctrl_0
 426  8725 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 427  8727 AF           	xor a
 428  8728 32 07 86     	ld (Obj_dibujado),a
 429  872B
 430  872B CD 9E 88     6 call Store_Restore_entidades
 431  872E
 432  872E C1           	pop bc
 433  872F 10 A9        	djnz 2B
 434  8731
 435  8731              ; Tras la gestión de las entidades, ... AMADEUS.
 436  8731
 437  8731 CD 05 89     4 call Restore_Amadeus
 438  8734
 439  8734 3A F1 85     	ld a,(Impacto)
 440  8737 A7           	and a
 441  8738 20 FE        	jr nz,$
 442  873A
 443  873A              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 444  873A
 445  873A CD 94 87     	call Mov_Amadeus
 446  873D
 447  873D 3A 06 86     	ld a,(Ctrl_0)
 448  8740 CB 67        	bit 4,a
 449  8742 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 450  8744
 451  8744 CD C3 87     	call Guarda_foto_entidad_a_pintar
 452  8747
 453  8747 21 06 86     3 ld hl,Ctrl_0
 454  874A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 455  874C AF           	xor a
 456  874D 32 07 86     	ld (Obj_dibujado),a
 457  8750
 458  8750 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 459  8753 CD 17 89     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 460  8756
 461  8756 CD 0E 8C     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 462  8759
 463  8759              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 464  8759
 465  8759 CD 38 88     	call Calcula_numero_de_disparotes
 466  875C CD 20 88     9 call Calcula_numero_de_malotes
 467  875F
 468  875F 3E 04        	ld a,4
 469  8761 D3 FE        	out ($fe),a
 470  8763
 471  8763 C9           	ret
 472  8764
 473  8764              ; --------------------------------------------------------------------------------------------------------------
 474  8764              ;
 475  8764              ;	27/03/23
 476  8764
 477  8764              Mov_obj
 478  8764
 479  8764              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 480  8764
 481  8764 AF           	xor a
 482  8765 32 07 86     	ld (Obj_dibujado),a
 483  8768 32 06 86     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 484  876B              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 485  876B              ; 														; _de la entidad.
 486  876B CD CD 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 487  876E              ;														; Obj_dibujado="0".
 488  876E              ; Movemos Entidades malignas.
 489  876E
 490  876E 2A 08 86     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 491  8771 24           	inc h                                               ; Salimos de la rutina.
 492  8772 25           	dec h
 493  8773 C8           	ret z
 494  8774
 495  8774 CD 6C 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 496  8777
 497  8777 3A 06 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 498  877A CB 67        	bit 4,a
 499  877C C8           	ret z
 500  877D
 501  877D              ; Ha habido desplazamiento de la entidad maligna.
 502  877D              ; Ha llegado a zona de AMADEUS ???
 503  877D
 504  877D 3A DF 85     	ld a,(Coordenada_y)
 505  8780 FE 14        	cp $14
 506  8782 D4 3F 8B     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 507  8785              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 508  8785              ; ---------
 509  8785
 510  8785 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 511  8787 32 07 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 512  878A CD CD 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 513  878D CD E4 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 514  8790 CD B3 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 515  8793 C9           	ret													; _de la misma.
 516  8794
 517  8794              ; --------------------------------------------------------------------------------------------------------------
 518  8794              ;
 519  8794              ;	29/1/23
 520  8794
 521  8794              Mov_Amadeus
 522  8794
 523  8794 AF           	xor a
 524  8795 32 07 86     	ld (Obj_dibujado),a
 525  8798 CD CD 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 526  879B              ;														; Obj_dibujado="0".
 527  879B              ; Movemos Amadeus.
 528  879B
 529  879B CD 42 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 530  879E 3A 06 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 531  87A1 CB 67        	bit 4,a
 532  87A3 C8           	ret z
 533  87A4
 534  87A4              ; ---------
 535  87A4
 536  87A4 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 537  87A6 32 07 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 538  87A9 CD CD 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 539  87AC CD E4 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 540  87AF CD B3 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 541  87B2 C9           	ret													; _de la nave.
 542  87B3
 543  87B3              ; --------------------------------------------------------------------------------------------------------------
 544  87B3              ;
 545  87B3              ;	31/01/23
 546  87B3              ;
 547  87B3              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 548  87B3
 549  87B3              Guarda_foto_entidad_a_borrar
 550  87B3
 551  87B3 CD A8 90     	call Prepara_draw
 552  87B6 CD E2 8F     	call calcula_CColumnass
 553  87B9 CD 19 90     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 554  87BC CD 6E 90     	call Define_rutina_de_impresion
 555  87BF CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 556  87C2 C9           	ret
 557  87C3
 558  87C3              ; --------------------------------------------------------------------------------------------------------------
 559  87C3              ;
 560  87C3              ;	31/01/23
 561  87C3              ;
 562  87C3              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 563  87C3              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 564  87C3
 565  87C3              Guarda_foto_entidad_a_pintar
 566  87C3
 567  87C3 CD F0 87     	call Repone_pintar
 568  87C6 CD CE 8D     	call Draw
 569  87C9 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 570  87CC C9           	ret
 571  87CD
 572  87CD              ; --------------------------------------------------------------------------------------------------------------
 573  87CD              ;
 574  87CD              ;
 575  87CD
 576  87CD 21 D8 85     Prepara_var_pintado_borrado	ld hl,Filas
 577  87D0 3A 07 86     	ld a,(Obj_dibujado)
 578  87D3 A7           	and a
 579  87D4 28 05        	jr z,1F
 580  87D6 11 FC 85     	ld de,Variables_de_pintado
 581  87D9 18 03        	jr 2F
 582  87DB 11 F2 85     1 ld de,Variables_de_borrado
 583  87DE 01 08 00     2 ld bc,8
 584  87E1 ED B0        	ldir
 585  87E3 C9           	ret
 586  87E4
 587  87E4              ; --------------------------------------------------------------------------------------------------------------
 588  87E4
 589  87E4 21 F2 85     Repone_borrar ld hl,Variables_de_borrado
 590  87E7 11 D8 85     	ld de,Filas
 591  87EA 01 08 00     	ld bc,8
 592  87ED ED B0        	ldir
 593  87EF C9           	ret
 594  87F0
 595  87F0 21 FC 85     Repone_pintar ld hl,Variables_de_pintado
 596  87F3 11 D8 85     	ld de,Filas
 597  87F6 01 08 00     	ld bc,8
 598  87F9 ED B0        	ldir
 599  87FB C9           	ret
 600  87FC
 601  87FC              ; *************************************************************************************************************************************************************
 602  87FC              ;
 603  87FC              ; 8/1/23
 604  87FC              ;
 605  87FC              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 606  87FC              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 607  87FC              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 608  87FC
 609  87FC              ; Destruye HL y DE !!!!!
 610  87FC
 611  87FC              Inicia_punteros_de_entidades
 612  87FC
 613  87FC 21 68 84     	ld hl,Indice_de_entidades
 614  87FF CD 50 88         call Extrae_address
 615  8802 22 14 86         ld (Puntero_store_entidades),hl
 616  8805 21 6A 84     	ld hl,Indice_de_entidades+2
 617  8808 22 18 86     	ld (Indice_restore),hl
 618  880B CD 50 88     	call Extrae_address
 619  880E 22 16 86     	ld (Puntero_restore_entidades),hl
 620  8811 C9               ret
 621  8812
 622  8812              ; *************************************************************************************************************************************************************
 623  8812              ;
 624  8812              ; 8/1/23
 625  8812              ;
 626  8812              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 627  8812
 628  8812 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 629  8815 22 25 86     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 630  8818 C9           	ret
 631  8819 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 632  881C 22 27 86     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 633  881F C9           	ret
 634  8820
 635  8820              ; -------------------------------------------------------------------------------------------------------------
 636  8820              ;
 637  8820              ; 28/2/23
 638  8820              ;
 639  8820
 640  8820              Calcula_numero_de_malotes
 641  8820
 642  8820 21 00 70     	ld hl,Album_de_fotos
 643  8823 EB           	ex de,hl
 644  8824 2A 20 86     	ld hl,(Stack_snapshot)
 645  8827
 646  8827 06 00        	ld b,0
 647  8829 7D           	ld a,l
 648  882A 93           	sub e
 649  882B 28 07        	jr z,1F
 650  882D
 651  882D              ; Nº de malotes no es "0".
 652  882D
 653  882D D6 06        2 sub 6
 654  882F 04           	inc b
 655  8830 A7           	and a
 656  8831 20 FA        	jr nz,2B
 657  8833 78           	ld a,b
 658  8834
 659  8834 32 1B 86     1 ld (Numero_de_malotes),a
 660  8837 C9           	ret
 661  8838
 662  8838              ; -------------------------------------------------------------------------------------------------------------
 663  8838              ;
 664  8838              ; 28/2/23
 665  8838              ;
 666  8838
 667  8838              Calcula_numero_de_disparotes
 668  8838
 669  8838 21 60 70     	ld hl,Album_de_fotos_disparos
 670  883B EB           	ex de,hl
 671  883C 2A 22 86     	ld hl,(Stack_snapshot_disparos)
 672  883F
 673  883F 06 00        	ld b,0
 674  8841 7D           	ld a,l
 675  8842 93           	sub e
 676  8843 28 07        	jr z,1F
 677  8845
 678  8845              ; Nº de malotes no es "0".
 679  8845
 680  8845 D6 06        2 sub 6
 681  8847 04           	inc b
 682  8848 A7           	and a
 683  8849 20 FA        	jr nz,2B
 684  884B 78           	ld a,b
 685  884C
 686  884C 32 24 86     1 ld (Numero_de_disparotes),a
 687  884F C9           	ret
 688  8850              ; *************************************************************************************************************************************************************
 689  8850              ;
 690  8850              ; 20/10/22
 691  8850              ;
 692  8850              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 693  8850              ;
 694  8850              ; Destruye el puntero y DE !!!!!
 695  8850
 696  8850 5E           Extrae_address ld e,(hl)
 697  8851 23           	inc hl
 698  8852 56           	ld d,(hl)
 699  8853 2B           	dec hl
 700  8854 EB           	ex de,hl
 701  8855 C9           	ret
 702  8856
 703  8856              ; *************************************************************************************************************************************************************
 704  8856              ;
 705  8856              ;	7/2/23
 706  8856              ;
 707  8856              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 708  8856              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 709  8856              ;
 710  8856              ;   Destruye HL y BC !!!!!,
 711  8856              ;
 712  8856              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 713  8856              ;					"0" ..... Izquierda.
 714  8856
 715  8856              Inicia_Puntero_objeto
 716  8856
 717  8856 3A EC 85     	ld a,(Cuad_objeto)
 718  8859 E6 01        	and 1
 719  885B F5           	push af
 720  885C CC 7A 88     	call z,Inicia_puntero_objeto_izq
 721  885F F1           	pop af
 722  8860 28 2B        	jr z,1F
 723  8862 CD 67 88     	call Inicia_puntero_objeto_der
 724  8865 18 26        	jr 1F
 725  8867
 726  8867              ; Arrancamos desde la parte izquierda de la pantalla.
 727  8867              ; Iniciamos (Indice_Sprite_der).
 728  8867
 729  8867 2A E2 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 730  886A 22 E6 85     	ld (Puntero_DESPLZ_der),hl
 731  886D CD 50 88     	call Extrae_address
 732  8870 22 DC 85     	ld (Puntero_objeto),hl
 733  8873
 734  8873 2A E4 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 735  8876 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 736  8879 C9           	ret
 737  887A
 738  887A              ; Arrancamos desde la parte derecha de la pantalla.
 739  887A              ; Iniciamos (Indice_Sprite_izq).
 740  887A
 741  887A 2A E4 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 742  887D 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 743  8880 CD 50 88     	call Extrae_address
 744  8883 22 DC 85     	ld (Puntero_objeto),hl
 745  8886
 746  8886 2A E2 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 747  8889 22 E6 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 748  888C C9           	ret
 749  888D
 750  888D              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 751  888D
 752  888D 21 38 83     1 ld hl,Amadeus
 753  8890 ED 4B DC 85  	ld bc,(Puntero_objeto)
 754  8894 B7 ED 42     	sub hl,bc
 755  8897 C0           	ret nz
 756  8898 21 06 86     	ld hl,Ctrl_0
 757  889B CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 758  889D C9           	ret 												; _de nuestra nave en los extremos.
 759  889E
 760  889E              ; *************************************************************************************************************************************************************
 761  889E              ;
 762  889E              ;	8/1/23
 763  889E              ;
 764  889E              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 765  889E              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 766  889E
 767  889E              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 768  889E              ;	_de la 2ª y 3ª entidad respectivamente.
 769  889E
 770  889E              Store_Restore_entidades
 771  889E
 772  889E 3A 1A 86     	ld a,(Numero_de_entidades)
 773  88A1 A7           	and a
 774  88A2 C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 775  88A3
 776  88A3 E5           	push hl
 777  88A4 D5           	push de
 778  88A5 C5            	push bc
 779  88A6
 780  88A6              ;	STORE !!!!!
 781  88A6              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 782  88A6
 783  88A6 21 D8 85     	ld hl,Filas
 784  88A9 ED 5B 14 86  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 785  88AD 01 3B 00     	ld bc,59
 786  88B0 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 787  88B2
 788  88B2              ; 	Entidad_sospechosa. 20/4/23
 789  88B2
 790  88B2 3A F1 85     	ld a,(Impacto)
 791  88B5 A7           	and a
 792  88B6 28 0C        	jr z,1F
 793  88B8
 794  88B8 2A 14 86     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 795  88BB 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 796  88BE A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 797  88BF ED 4A        	adc hl,bc 											; _ "0" más adelante.
 798  88C1 22 2A 86     	ld (Entidad_sospechosa_de_colision),hl
 799  88C4
 800  88C4              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 801  88C4
 802  88C4 2A 16 86     1 ld hl,(Puntero_restore_entidades)
 803  88C7 7E           	ld a,(hl)
 804  88C8 A7           	and a
 805  88C9 F5           	push af
 806  88CA 28 08        	jr z,2F
 807  88CC
 808  88CC 11 D8 85     	ld de,Filas
 809  88CF 01 3B 00     	ld bc,59
 810  88D2 ED B0        	ldir
 811  88D4
 812  88D4 CD F0 88     2 call Incrementa_punteros_entidades
 813  88D7 F1           	pop af
 814  88D8 28 EA        	jr z,1B
 815  88DA
 816  88DA C1           	pop bc
 817  88DB D1           	pop de
 818  88DC E1           	pop hl
 819  88DD
 820  88DD C9           	ret
 821  88DE
 822  88DE              ; **************************************************************************************************
 823  88DE              ;
 824  88DE              ;	29/10/22
 825  88DE              ;
 826  88DE              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 827  88DE
 828  88DE E5           Restore_Primera_entidad push hl
 829  88DF D5           	push de
 830  88E0 C5            	push bc
 831  88E1 2A 14 86     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 832  88E4 11 D8 85     	ld de,Filas
 833  88E7 01 3B 00     	ld bc,59
 834  88EA ED B0        	ldir
 835  88EC C1           	pop bc
 836  88ED D1           	pop de
 837  88EE E1           	pop hl
 838  88EF C9           	ret
 839  88F0
 840  88F0
 841  88F0              ; **************************************************************************************************
 842  88F0              ;
 843  88F0              ;	08/05/23
 844  88F0              ;
 845  88F0              ;	Incrementamos los dos punteros de entidades. (+1).
 846  88F0
 847  88F0 2A 16 86     Incrementa_punteros_entidades ld hl,(Puntero_restore_entidades)
 848  88F3 22 14 86     	ld (Puntero_store_entidades),hl
 849  88F6 2A 18 86     	ld hl,(Indice_restore)
 850  88F9 23           	inc hl
 851  88FA 23           	inc hl
 852  88FB 22 18 86     	ld (Indice_restore),hl
 853  88FE CD 50 88         call Extrae_address
 854  8901 22 16 86         ld (Puntero_restore_entidades),hl
 855  8904 C9               ret
 856  8905
 857  8905              ; **************************************************************************************************
 858  8905              ;
 859  8905              ;	25/01/23
 860  8905              ;
 861  8905              ;	Restore_Amadeus
 862  8905              ;
 863  8905              ;	Cargamos en DRAW los parámetros de Amadeus.
 864  8905              ;
 865  8905
 866  8905 E5           Restore_Amadeus	push hl
 867  8906 D5           	push de
 868  8907 C5            	push bc
 869  8908 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 870  890B 11 D8 85     	ld de,Filas
 871  890E 01 3B 00     	ld bc,59
 872  8911 ED B0        	ldir
 873  8913 C1           	pop bc
 874  8914 D1           	pop de
 875  8915 E1           	pop hl
 876  8916 C9           	ret
 877  8917
 878  8917              ; *************************************************************************************************************************************************************
 879  8917              ;
 880  8917              ;	29/04/23
 881  8917              ;
 882  8917              ;	Store_Amadeus
 883  8917              ;
 884  8917              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 885  8917              ;
 886  8917              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 887  8917              ;
 888  8917              ;	DESTRUYE: HL y BC y DE.
 889  8917
 890  8917 21 D8 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 891  891A 01 3B 00     	ld bc,59
 892  891D ED B0        	ldir
 893  891F C9           	ret
 894  8920
 895  8920              ; -----------------------------------------------------------
 896  8920              ;
 897  8920              ;	27/04/23
 898  8920              ;
 899  8920              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 900  8920              ;
 901  8920              ;	Destruye: HL,BC,DE,A
 902  8920
 903  8920 21 D8 85     Borra_datos_entidad ld hl,Filas
 904  8923 01 3A 00     	ld bc,58
 905  8926 AF           	xor a
 906  8927 77           	ld (hl),a
 907  8928 11 D9 85     	ld de,Filas+1
 908  892B ED B0        	ldir
 909  892D C9           	ret
 910  892E
 911  892E              ; -----------------------------------------------------------
 912  892E
 913  892E              ; Teclado.
 914  892E
 915  892E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 916  8930 DB FE        	in a,($fe)
 917  8932 E6 01        	and $01
 918  8934 28 02        	jr z,1f
 919  8936 18 F6        	jr Pulsa_ENTER
 920  8938 C9           1 ret
 921  8939
 922  8939              ; **************************************************************************************************
 923  8939              ;
 924  8939              ; Temporización.
 925  8939
 926  8939              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 927  8939              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 928  8939              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 929  8939              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 930  8939
 931  8939              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 932  8939              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 933  8939              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 934  8939
 935  8939              ; A partir de $4f61 no hace falta DELAY.
 936  8939
 937  8939              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 938  8939
 939  8939 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 940  893C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 941  893D 78           	LD A,B
 942  893E A7           	AND A
 943  893F 20 FB        	JR NZ,wait
 944  8941 C9           	RET
 945  8942
 946  8942              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 947  8942              ;
 948  8942              ;	5/3/23
 949  8942              ;
 950  8942              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 951  8942
 952  8942              Movimiento_Amadeus
 953  8942
 954  8942              ; Disparo.
 955  8942
 956  8942 3A 34 86     	ld a,(Habilita_disparo_Amadeus)
 957  8945 A7           	and a
 958  8946 20 02        	jr nz,1F
 959  8948 18 15        	jr 2F
 960  894A
 961  894A 3E F7        1 ld a,$f7													; "5" para disparar.
 962  894C DB FE        	in a,($fe)
 963  894E E6 10        	and $10
 964  8950
 965  8950 F5           	push af
 966  8951 CC BB 89     	call z,Genera_disparo
 967  8954 F1           	pop af
 968  8955 20 08        	jr nz,2F
 969  8957
 970  8957 3A 34 86     	ld a,(Habilita_disparo_Amadeus)
 971  895A EE 01        	xor 1
 972  895C 32 34 86     	ld (Habilita_disparo_Amadeus),a
 973  895F
 974  895F 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 975  8961 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 976  8963 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 977  8965 CC 0C 95         call z,Mov_left											;			"			"			"			"			"			"			"			"
 978  8968 3E F7        	ld a,$f7
 979  896A DB FE        	in a,($fe)
 980  896C E6 01        	and $01
 981  896E C8           	ret z
 982  896F
 983  896F 3E F7        	ld a,$f7
 984  8971 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 985  8973 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 986  8975 CC EE 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 987  8978 C9           	ret
 988  8979
 989  8979              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 990  8979              ;
 991  8979              ;	Rutina provisional para que los malotes cagen balas.
 992  8979
 993  8979              Detecta_disparo_entidad
 994  8979
 995  8979 3A 37 86     	ld a,(Habilita_disparo_entidad)
 996  897C A7           	and a
 997  897D C8           	ret z
 998  897E 3E 7F        	ld a,$7f
 999  8980 DB FE        	in a,($fe)
1000  8982 E6 01        	and 1
1001  8984 C0           	ret nz
1002  8985 CD BB 89     	call Genera_disparo
1003  8988 C9           	ret
1004  8989
1005  8989              ; Pinta indicadores de FILAS. ------------------------------------------------------
1006  8989
1007  8989 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1008  898C
1009  898C              ; ----------
1010  898C 06 20        	ld b,32
1011  898E E5           2 push hl
1012  898F C5           	push bc
1013  8990              ; ----------
1014  8990
1015  8990 06 BF        	ld b,$bf
1016  8992 36 80        1 ld (hl),%10000000
1017  8994 CD B4 90     	call NextScan
1018  8997 10 F9        	djnz 1B
1019  8999
1020  8999              ; ----------
1021  8999 C1           	pop bc
1022  899A E1           	pop hl
1023  899B 2C           	inc l
1024  899C 10 F0        	djnz 2B
1025  899E              ; ----------
1026  899E
1027  899E 06 03        	ld b,3
1028  89A0 21 00 47         ld hl,$4700
1029  89A3 CD A9 89     3 call Bucle_1
1030  89A6 10 FB            djnz 3B
1031  89A8 C9               ret
1032  89A9
1033  89A9 C5           Bucle_1 push bc
1034  89AA E5                   push hl
1035  89AB D1                   pop de
1036  89AC 13                   inc de
1037  89AD 01 FF 00             ld bc,255
1038  89B0 36 FF                ld (hl),255
1039  89B2 ED B0                ldir
1040  89B4 23                   inc hl
1041  89B5 3E 07                ld a,7
1042  89B7 84                   add a,h
1043  89B8 67                   ld h,a
1044  89B9 C1                   pop bc
1045  89BA C9                   ret
1046  89BB
1047  89BB              ; ---------------------------------------------------------------
1048  89BB
1049  89BB              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 89BB              ; ******************************************************************************************************************************************************************************************
   2+ 89BB              ;
   3+ 89BB              ;   17/04/23
   4+ 89BB              ;
   5+ 89BB              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 89BB              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 89BB              ;
   8+ 89BB              ;
   9+ 89BB              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 89BB              ;
  11+ 89BB              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 89BB              ;               _ hacen las entidades hacia abajo.
  13+ 89BB              ;
  14+ 89BB              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 89BB              ;
  16+ 89BB              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 89BB              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 89BB              ;
  19+ 89BB              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 89BB              ;           _ la bala.
  21+ 89BB              ;
  22+ 89BB              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 89BB              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 89BB              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 89BB              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 89BB              ;           _ en el momento de generarse la bala)).
  27+ 89BB
  28+ 89BB              Genera_disparo
  29+ 89BB
  30+ 89BB              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 89BB              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 89BB              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 89BB              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 89BB              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 89BB              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 89BB              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 89BB
  38+ 89BB              ; Exclusiones:
  39+ 89BB
  40+ 89BB 3A 0F 86         ld a,(Columnas)
  41+ 89BE 47               ld b,a
  42+ 89BF 3A D9 85         ld a,(Columns)
  43+ 89C2 B8               cp b
  44+ 89C3 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 89C4
  46+ 89C4              ; ----- ----- -----
  47+ 89C4
  48+ 89C4 3A 06 86         ld a,(Ctrl_0)
  49+ 89C7 CB 77            bit 6,a
  50+ 89C9 20 06            jr nz,14F
  51+ 89CB
  52+ 89CB 3A DF 85         ld a,(Coordenada_y)
  53+ 89CE FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 89D0 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 89D1
  56+ 89D1 21 00 80     14 ld hl,Indice_disparo
  57+ 89D4 3A E0 85         ld a,(CTRL_DESPLZ)
  58+ 89D7 4F               ld c,a
  59+ 89D8 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 89DA              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 89DA              ;                                            ""        ""       "f9", B="1"
  62+ 89DA              ;                                            ""        ""       "fb", B="2"
  63+ 89DA              ;                                            ""        ""       "fb", B="3"
  64+ 89DA A7               and a
  65+ 89DB 28 10            jr z,1F
  66+ 89DD E6 01            and 1
  67+ 89DF C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 89E0
  69+ 89E0 79               ld a,c
  70+ 89E1 16 F9            ld d,$f9
  71+ 89E3 23           2 inc hl
  72+ 89E4 23               inc hl
  73+ 89E5 04               inc b
  74+ 89E6 BA               cp d
  75+ 89E7 28 04            jr z,1F
  76+ 89E9 14               inc d
  77+ 89EA 14               inc d
  78+ 89EB 18 F6            jr 2B
  79+ 89ED
  80+ 89ED CD 50 88     1 call Extrae_address
  81+ 89F0 E5               push hl
  82+ 89F1 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 89F3 DD 21 47 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 89F7
  85+ 89F7              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 89F7              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 89F7
  88+ 89F7 3A 06 86         ld a,(Ctrl_0)
  89+ 89FA CB 77            bit 6,a
  90+ 89FC 20 04            jr nz,19F
  91+ 89FE
  92+ 89FE AF               xor a
  93+ 89FF 32 37 86         ld (Habilita_disparo_entidad),a
  94+ 8A02
  95+ 8A02 3A EC 85     19 ld a,(Cuad_objeto)
  96+ 8A05 FE 02            cp 2
  97+ 8A07 38 66            jr c,3F
  98+ 8A09 28 64            jr z,3F
  99+ 8A0B
 100+ 8A0B              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8A0B
 102+ 8A0B E6 01            and 1
 103+ 8A0D 28 30            jr z,4F
 104+ 8A0F
 105+ 8A0F              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8A0F              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8A0F              ;
 108+ 8A0F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8A0F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8A0F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8A0F
 112+ 8A0F 2A DA 85     	ld hl,(Posicion_actual)
 113+ 8A12
 114+ 8A12              ;   Amadeus o entidad ???.
 115+ 8A12
 116+ 8A12 3A 06 86         ld a,(Ctrl_0)
 117+ 8A15 CB 77            bit 6,a
 118+ 8A17 28 0A            jr z,8F
 119+ 8A19
 120+ 8A19              ; 	Dispara Amadeus.
 121+ 8A19
 122+ 8A19 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8A1B CD C3 90         call PreviousScan
 124+ 8A1E CD C3 90         call PreviousScan
 125+ 8A21
 126+ 8A21              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8A21              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8A21              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8A21              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8A21
 131+ 8A21 18 11            jr 10F
 132+ 8A23
 133+ 8A23              ; 	Dispara Entidad.
 134+ 8A23
 135+ 8A23 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8A26              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8A26
 138+ 8A26              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8A26              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8A26
 141+ 8A26 C5               push bc
 142+ 8A27 06 10            ld b,16
 143+ 8A29 CD B4 90     9 call NextScan
 144+ 8A2C 10 FB            djnz 9B
 145+ 8A2E C1               pop bc
 146+ 8A2F CD 99 8A         call Ajusta_disparo_parte_izquierda
 147+ 8A32 18 06            jr 17F
 148+ 8A34
 149+ 8A34              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8A34              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8A34              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8A34              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8A34
 154+ 8A34 CD 99 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 8A37 CD 0E 8B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8A3A              ;                                                      ; _al generar el disparo.
 157+ 8A3A
 158+ 8A3A              ; 	LLegados a este punto tendremos:
 159+ 8A3A              ;
 160+ 8A3A              ;       Puntero_objeto_disparo en IY.
 161+ 8A3A              ;       Rutinas_de_impresion en IX.
 162+ 8A3A              ;       Puntero_de_impresion en HL.
 163+ 8A3A              ;       Impacto/Dirección en BC.
 164+ 8A3A
 165+ 8A3A CD A1 8A     17 call Almacena_disparo
 166+ 8A3D 18 52            jr 6F                                             ; RET.
 167+ 8A3F
 168+ 8A3F              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8A3F              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8A3F              ;
 171+ 8A3F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8A3F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8A3F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8A3F
 175+ 8A3F 2A DA 85     4 ld hl,(Posicion_actual)
 176+ 8A42
 177+ 8A42              ;   Amadeus o entidad ???.
 178+ 8A42
 179+ 8A42 3A 06 86         ld a,(Ctrl_0)
 180+ 8A45 CB 77            bit 6,a
 181+ 8A47 28 0A            jr z,11F
 182+ 8A49
 183+ 8A49              ; 	Dispara Amadeus.
 184+ 8A49
 185+ 8A49 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A4B CD C3 90         call PreviousScan
 187+ 8A4E CD C3 90         call PreviousScan
 188+ 8A51
 189+ 8A51              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A51              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A51              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A51              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A51
 194+ 8A51 18 11            jr 13F
 195+ 8A53
 196+ 8A53              ; 	Dispara Entidad.
 197+ 8A53
 198+ 8A53 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A56              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A56
 201+ 8A56              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A56              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A56
 204+ 8A56 C5               push bc
 205+ 8A57 06 10            ld b,16
 206+ 8A59 CD B4 90     12 call NextScan
 207+ 8A5C 10 FB            djnz 12B
 208+ 8A5E C1               pop bc
 209+ 8A5F
 210+ 8A5F CD 92 8A         call Ajusta_disparo_parte_derecha
 211+ 8A62 18 06            jr 18F
 212+ 8A64
 213+ 8A64              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A64              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A64              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A64              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A64
 218+ 8A64 CD 92 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A67 CD 0E 8B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A6A              ;                                                       ; _al generar el disparo.
 221+ 8A6A
 222+ 8A6A              ; LLegados a este punto tendremos:
 223+ 8A6A              ;
 224+ 8A6A              ;       Puntero_objeto_disparo en IY.
 225+ 8A6A              ;       Rutinas_de_impresion en IX.
 226+ 8A6A              ;       Puntero_de_impresion en HL.
 227+ 8A6A              ;       Impacto/Dirección en BC.
 228+ 8A6A
 229+ 8A6A CD A1 8A     18 call Almacena_disparo
 230+ 8A6D 18 22            jr 6F                                               ; RET.
 231+ 8A6F
 232+ 8A6F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A6F
 234+ 8A6F 28 11        3 jr z,5F
 235+ 8A71
 236+ 8A71              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A71              ;
 238+ 8A71              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A71              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A71              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A71              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A71
 243+ 8A71              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A71              ;	   ""        ""       "f9", B="1"
 245+ 8A71              ;	   ""        ""       "fb", B="2"
 246+ 8A71              ; 	   ""        ""       "fb", B="3"
 247+ 8A71
 248+ 8A71 2A DA 85     	ld hl,(Posicion_actual)
 249+ 8A74 CD B4 90     	call NextScan
 250+ 8A77
 251+ 8A77              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A77              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A77              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A77              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A77
 256+ 8A77 CD 99 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A7A
 258+ 8A7A              ; 	No se produce impacto. B="$80"
 259+ 8A7A              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A7A
 261+ 8A7A 01 80 80         ld bc,$8080
 262+ 8A7D
 263+ 8A7D              ; 	LLegados a este punto tendremos:
 264+ 8A7D              ;
 265+ 8A7D              ;       Puntero_objeto_disparo en IY.
 266+ 8A7D              ;       Rutinas_de_impresion en IX.
 267+ 8A7D              ;       Puntero_de_impresion en HL.
 268+ 8A7D              ;       Impacto/Dirección en BC.
 269+ 8A7D
 270+ 8A7D CD A1 8A         call Almacena_disparo
 271+ 8A80 18 0F            jr 6F                                           ; RET.
 272+ 8A82
 273+ 8A82              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A82              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A82              ;
 276+ 8A82              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A82              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A82              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A82              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A82
 281+ 8A82 2A DA 85     5 ld hl,(Posicion_actual)
 282+ 8A85 CD B4 90     	call NextScan
 283+ 8A88
 284+ 8A88              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A88              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A88              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A88              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A88
 289+ 8A88 CD 92 8A         call Ajusta_disparo_parte_derecha
 290+ 8A8B
 291+ 8A8B              ; 	No se produce impacto. B="$80"
 292+ 8A8B              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A8B
 294+ 8A8B 01 80 80     15 ld bc,$8080
 295+ 8A8E
 296+ 8A8E              ; 	LLegados a este punto tendremos:
 297+ 8A8E              ;
 298+ 8A8E              ;       Puntero_objeto_disparo en IY.
 299+ 8A8E              ;       Rutinas_de_impresion en IX.
 300+ 8A8E              ;       Puntero_de_impresion en HL.
 301+ 8A8E              ;       Impacto/Dirección en BC.
 302+ 8A8E
 303+ 8A8E CD A1 8A         call Almacena_disparo
 304+ 8A91
 305+ 8A91 C9           6 ret
 306+ 8A92
 307+ 8A92              ; ----------------------------------------------------------------
 308+ 8A92              ;
 309+ 8A92              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A92              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A92              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A92
 313+ 8A92 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A93 FE 02            cp 2
 315+ 8A95 38 01            jr c,1F
 316+ 8A97 23               inc hl
 317+ 8A98 C9           1 ret
 318+ 8A99
 319+ 8A99 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A9A FE 01        	cp 1
 321+ 8A9C 20 01        	jr nz,1F
 322+ 8A9E 2B           	dec hl
 323+ 8A9F 2B           1 dec hl
 324+ 8AA0 C9               ret
 325+ 8AA1
 326+ 8AA1              ; ----------------------------------------------------------------
 327+ 8AA1              ;
 328+ 8AA1              ;   25/02/23
 329+ 8AA1              ;
 330+ 8AA1              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8AA1              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8AA1              ;
 333+ 8AA1              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8AA1              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8AA1
 336+ 8AA1              Almacena_disparo
 337+ 8AA1
 338+ 8AA1 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8AA2 F1               pop af
 340+ 8AA3 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8AA4
 342+ 8AA4 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8AA5 E6 01            and 1
 344+ 8AA7 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8AA9              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8AA9              ; 	Dispara AMADEUS.
 347+ 8AA9
 348+ 8AA9              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8AA9              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8AA9              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8AA9              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8AA9
 353+ 8AA9 C5               push bc
 354+ 8AAA 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8AAD 2A 27 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8AB0 A7               and a
 357+ 8AB1 ED 42            sbc hl,bc
 358+ 8AB3 CC 19 88         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8AB6 C1               pop bc
 360+ 8AB7 28 54            jr z,4F
 361+ 8AB9
 362+ 8AB9 2A 27 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8ABC 23               inc hl
 364+ 8ABD 23               inc hl
 365+ 8ABE 22 27 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8AC1              ;                                                   ; _ Disparo_(+1).
 367+ 8AC1 18 18            jr 2F
 368+ 8AC3
 369+ 8AC3              ; Dispara una entidad.
 370+ 8AC3
 371+ 8AC3 C5           1 push bc
 372+ 8AC4 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8AC7 2A 25 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8ACA A7               and a
 375+ 8ACB ED 42            sbc hl,bc
 376+ 8ACD CC 12 88         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8AD0 C1               pop bc
 378+ 8AD1 28 3A            jr z,4F
 379+ 8AD3
 380+ 8AD3 2A 25 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8AD6 23               inc hl
 382+ 8AD7 23               inc hl
 383+ 8AD8 22 25 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8ADB              ;                                                   ; _ Disparo_(+1).
 385+ 8ADB CD 50 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8ADE              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8ADE              ;
 388+ 8ADE              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8ADE              ;                                                     Rutinas_de_impresion en IX.
 390+ 8ADE              ;                                                     Puntero_de_impresion en HL.
 391+ 8ADE              ;                                                     Impacto/Dirección en BC.
 392+ 8ADE
 393+ 8ADE 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8ADF 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8AE0 23               inc hl                                          ; _ al siguiente.
 396+ 8AE1 A7               and a
 397+ 8AE2 20 C0            jr nz,3B
 398+ 8AE4
 399+ 8AE4 08               ex af,af
 400+ 8AE5 ED 73 1C 86      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AE9 F9               ld sp,hl
 402+ 8AEA
 403+ 8AEA DD E5            push ix                                         ; Rutina de impresión.
 404+ 8AEC F5               push af                                         ; Puntero de impresión.
 405+ 8AED FD E5            push iy                                         ; Puntero objeto.
 406+ 8AEF C5               push bc                                         ; Control.
 407+ 8AF0
 408+ 8AF0 ED 7B 1C 86      ld sp,(Stack)
 409+ 8AF4
 410+ 8AF4              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AF4
 412+ 8AF4 21 13 86     	ld hl,Ctrl_1
 413+ 8AF7 CB C6        	set 0,(hl)
 414+ 8AF9
 415+ 8AF9 DD E5        	push ix
 416+ 8AFB E1               pop hl
 417+ 8AFC F5               push af
 418+ 8AFD DD E1            pop ix
 419+ 8AFF
 420+ 8AFF CD A0 7F     	call Guarda_foto_registros
 421+ 8B02
 422+ 8B02 21 13 86     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8B05 CB 86        	res 0,(hl)
 424+ 8B07
 425+ 8B07              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8B07              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8B07
 428+ 8B07 CD 19 88         call Inicia_Puntero_Disparo_Amadeus
 429+ 8B0A CD 12 88         call Inicia_Puntero_Disparo_Entidades
 430+ 8B0D
 431+ 8B0D C9           4 ret
 432+ 8B0E
 433+ 8B0E              ; ----------------------------------------------------------------
 434+ 8B0E              ;
 435+ 8B0E              ;   4/3/23
 436+ 8B0E              ;
 437+ 8B0E              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8B0E              ;   _ al generarse el disparo.
 439+ 8B0E              ;
 440+ 8B0E              ;       "$80" ..... No se produce colisión.
 441+ 8B0E              ;       "$81" ..... Se produce colisión.
 442+ 8B0E
 443+ 8B0E              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8B0E              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8B0E
 446+ 8B0E
 447+ 8B0E FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8B10 E5               push hl                                        ; Puntero de impresión.
 449+ 8B11 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8B13 CD 2F 8B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8B16
 452+ 8B16 7B               ld a,e
 453+ 8B17 E6 01            and 1
 454+ 8B19 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8B1B
 456+ 8B1B E1               pop hl
 457+ 8B1C E5               push hl
 458+ 8B1D CD B4 90         call NextScan
 459+ 8B20
 460+ 8B20 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8B21 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8B23 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8B25              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8B25 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8B27 CD 2F 8B         call Bucle_2
 466+ 8B2A
 467+ 8B2A 43           2 ld b,e
 468+ 8B2B E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8B2C FD E1            pop iy
 470+ 8B2E C9               ret
 471+ 8B2F
 472+ 8B2F               ; ---------- ----------
 473+ 8B2F
 474+ 8B2F 06 02        Bucle_2 ld b,2
 475+ 8B31 FD 7E 00     2 ld a,(iy)
 476+ 8B34 A6               and (hl)
 477+ 8B35 28 02            jr z,1F
 478+ 8B37 1E 81            ld e,$81
 479+ 8B39 23           1 inc hl
 480+ 8B3A FD 23            inc iy
 481+ 8B3C 10 F3            djnz 2B
 482+ 8B3E C9               ret
 483+ 8B3F
 484+ 8B3F              ; -------------------------------------------------------------------------------------------------------------
 485+ 8B3F              ;
 486+ 8B3F              ;   11/04/23
 487+ 8B3F              ;
 488+ 8B3F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8B3F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8B3F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8B3F              ;
 492+ 8B3F              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8B3F
 494+ 8B3F              Compara_coordenadas_X
 495+ 8B3F
 496+ 8B3F              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8B3F              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8B3F
 499+ 8B3F              ; Preparamos registros:
 500+ 8B3F
 501+ 8B3F 21 DE 85         ld hl,Filas+6
 502+ 8B42 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8B43 23               inc hl
 504+ 8B44 23               inc hl
 505+ 8B45 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8B46 43               ld b,e
 507+ 8B47 21 EC 85         ld hl,Filas+20
 508+ 8B4A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8B4B 21 31 86         ld hl,Coordenadas_X_Entidad
 510+ 8B4E CD 5D 8D         call Guarda_coordenadas_X
 511+ 8B51
 512+ 8B51              ; Preparamos registros:
 513+ 8B51
 514+ 8B51 21 7C 84         ld hl,Amadeus_db+6
 515+ 8B54 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B55 23               inc hl
 517+ 8B56 23               inc hl
 518+ 8B57 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B58 7B               ld a,e
 520+ 8B59 08               ex af,af'
 521+ 8B5A 21 8A 84         ld hl,Amadeus_db+20
 522+ 8B5D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B5E 21 2E 86         ld hl,Coordenadas_X_Amadeus
 524+ 8B61 CD 5D 8D         call Guarda_coordenadas_X
 525+ 8B64
 526+ 8B64              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B64              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B64
 529+ 8B64 04               inc b
 530+ 8B65 05               dec b
 531+ 8B66 28 04            jr z,1F
 532+ 8B68 06 03            ld b,3
 533+ 8B6A 18 02            jr 2F
 534+ 8B6C 06 02        1 ld b,2
 535+ 8B6E 08           2 ex af,af'
 536+ 8B6F 3C               inc a
 537+ 8B70 3D               dec a
 538+ 8B71 28 04            jr z,5F
 539+ 8B73 0E 03            ld c,3
 540+ 8B75 18 02            jr 6F
 541+ 8B77 0E 02        5 ld c,2
 542+ 8B79 79           6 ld a,c
 543+ 8B7A 08               ex af,af'
 544+ 8B7B 11 31 86         ld de,Coordenadas_X_Entidad
 545+ 8B7E 1A           4 ld a,(de)
 546+ 8B7F 21 2E 86         ld hl,Coordenadas_X_Amadeus
 547+ 8B82 BE           3 cp (hl)
 548+ 8B83 28 0E            jr z,7F
 549+ 8B85 23               inc hl
 550+ 8B86 0D               dec c
 551+ 8B87 20 F9            jr nz,3B
 552+ 8B89 13               inc de
 553+ 8B8A 08               ex af,af'
 554+ 8B8B 4F               ld c,a
 555+ 8B8C 08               ex af,af'
 556+ 8B8D 10 EF            djnz 4B
 557+ 8B8F
 558+ 8B8F              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B8F
 560+ 8B8F CD 9C 8D     8 call Limpia_Coordenadas_X
 561+ 8B92 C9               ret
 562+ 8B93
 563+ 8B93              7
 564+ 8B93 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 565+ 8B95 32 F1 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 566+ 8B98 21 29 86         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 567+ 8B9B CB D6            set 2,(hl)
 568+ 8B9D 18 F0            jr 8B
 569+ 8B9F
 570+ 8B9F              ; -----------------------------------------------------------------------
 571+ 8B9F              ;
 572+ 8B9F              ;   17/04/23
 573+ 8B9F              ;
 574+ 8B9F
 575+ 8B9F              Detecta_colision_nave_entidad
 576+ 8B9F
 577+ 8B9F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8B9F
 579+ 8B9F 2A DA 85         ld hl,(Posicion_actual)
 580+ 8BA2 CD 19 90         call Calcula_puntero_de_impresion
 581+ 8BA5
 582+ 8BA5              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 583+ 8BA5              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 584+ 8BA5
 585+ 8BA5 DD E5            push ix
 586+ 8BA7 E1               pop hl
 587+ 8BA8 E5               push hl
 588+ 8BA9
 589+ 8BA9              ; ----- ----- -----
 590+ 8BA9 1E 00            ld e,0                                         ; Indica impacto.
 591+ 8BAB 06 0A            ld b,10
 592+ 8BAD CD DD 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 593+ 8BB0 7B               ld a,e
 594+ 8BB1 FE 05            cp 5
 595+ 8BB3 38 0E            jr c,3F
 596+ 8BB5
 597+ 8BB5              ; LLegados a este punto:
 598+ 8BB5              ;
 599+ 8BB5              ;   HAY COLISIÓN !!!!!.
 600+ 8BB5              ;
 601+ 8BB5              ;   .db (Impacto) de Amadeus a "1".
 602+ 8BB5              ;   SET el bit3 de (Impacto2).
 603+ 8BB5              ;
 604+ 8BB5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 605+ 8BB5
 606+ 8BB5 21 8F 84         ld hl,Amadeus_db+25
 607+ 8BB8 36 01            ld (hl),1
 608+ 8BBA 21 29 86         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 609+ 8BBD CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 610+ 8BBF CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 611+ 8BC1 18 18            jr 1F
 612+ 8BC3
 613+ 8BC3              ; -----
 614+ 8BC3
 615+ 8BC3 E1           3 pop hl
 616+ 8BC4 CD B4 90         call NextScan
 617+ 8BC7 E5               push hl
 618+ 8BC8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 619+ 8BC9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 620+ 8BCB 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 621+ 8BCD 30 0C            jr nc,1F
 622+ 8BCF              ;                                                  ; _ 2º scanline si esto es así.
 623+ 8BCF 10 DC            djnz 2B
 624+ 8BD1
 625+ 8BD1              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 626+ 8BD1
 627+ 8BD1              ; LLegados a este punto:
 628+ 8BD1              ;
 629+ 8BD1              ;   NO HAY COLISIÓN !!!!!.
 630+ 8BD1              ;
 631+ 8BD1              ;   .db (Impacto) de Amadeus a "0".
 632+ 8BD1              ;   RES el bit2 de (Impacto2).
 633+ 8BD1              ;
 634+ 8BD1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 635+ 8BD1              ;   Lo colocamos a "0".
 636+ 8BD1
 637+ 8BD1 21 29 86         ld hl,Impacto2
 638+ 8BD4 CB 96            res 2,(hl)
 639+ 8BD6 2A 2A 86         ld hl,(Entidad_sospechosa_de_colision)
 640+ 8BD9 36 00            ld (hl),0
 641+ 8BDB
 642+ 8BDB E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8BDC C9               ret
 644+ 8BDD
 645+ 8BDD               ; ---------- ----------
 646+ 8BDD
 647+ 8BDD C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 648+ 8BDE 3A D9 85         ld a,(Columns)
 649+ 8BE1 47               ld b,a
 650+ 8BE2 FD 7E 00     2 ld a,(iy)
 651+ 8BE5 BE               cp (hl)
 652+ 8BE6 28 01            jr z,1F
 653+ 8BE8
 654+ 8BE8 1C               inc e
 655+ 8BE9
 656+ 8BE9 23           1 inc hl
 657+ 8BEA FD 23            inc iy
 658+ 8BEC 10 F4            djnz 2B
 659+ 8BEE C1               pop bc
 660+ 8BEF C9               ret
 661+ 8BF0
 662+ 8BF0              ; -------------------------------------------------------------------------------------------------------------
 663+ 8BF0              ;
 664+ 8BF0              ;   13/03/23
 665+ 8BF0              ;
 666+ 8BF0              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 667+ 8BF0              ;
 668+ 8BF0              ;   DESTRUYE: HL,BC,DE y A.
 669+ 8BF0
 670+ 8BF0 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 671+ 8BF3 7E               ld a,(hl)
 672+ 8BF4 A7               and a
 673+ 8BF5 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 674+ 8BF6
 675+ 8BF6 44               ld b,h
 676+ 8BF7 4D               ld c,l
 677+ 8BF8 2A 22 86         ld hl,(Stack_snapshot_disparos)
 678+ 8BFB E5               push hl
 679+ 8BFC A7               and a
 680+ 8BFD ED 42            sbc hl,bc
 681+ 8BFF E5               push hl
 682+ 8C00 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 683+ 8C01
 684+ 8C01 E1               pop hl
 685+ 8C02 54               ld d,h
 686+ 8C03 5D               ld e,l
 687+ 8C04 1B               dec de
 688+ 8C05 ED B8            lddr                                                ; Limpiamos.
 689+ 8C07
 690+ 8C07 21 60 70         ld hl,Album_de_fotos_disparos
 691+ 8C0A 22 22 86         ld (Stack_snapshot_disparos),hl
 692+ 8C0D
 693+ 8C0D C9               ret
 694+ 8C0E
 695+ 8C0E              ; -------------------------------------------------------------------------------------------------------------
 696+ 8C0E              ;
 697+ 8C0E              ;   28/03/23
 698+ 8C0E              ;
 699+ 8C0E
 700+ 8C0E 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 701+ 8C11 2A 27 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 702+ 8C14
 703+ 8C14 CD 50 88     2 call Extrae_address
 704+ 8C17 7E               ld a,(hl)
 705+ 8C18 A7               and a
 706+ 8C19 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 707+ 8C1B
 708+ 8C1B              ; ----- ----- ----- ----- ----- -----
 709+ 8C1B
 710+ 8C1B C5               push bc
 711+ 8C1C CD D8 8C         call foto_disparo_a_borrar
 712+ 8C1F
 713+ 8C1F              ; Existe colisión con este disparo???
 714+ 8C1F
 715+ 8C1F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 716+ 8C20 7E               ld a,(hl)
 717+ 8C21 2B               dec hl
 718+ 8C22 E6 01            and 1
 719+ 8C24 28 1D            jr z,9F
 720+ 8C26
 721+ 8C26              ;   En este punto:
 722+ 8C26              ;
 723+ 8C26              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 724+ 8C26              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 725+ 8C26              ;   _con la entidad).
 726+ 8C26              ;
 727+ 8C26              ;   Disparo_2A defw 0                                ; Control.
 728+ 8C26              ;    defw 0                                          ; Puntero objeto.
 729+ 8C26              ;    defw 0                                          ; Puntero de impresión.
 730+ 8C26              ;    defw 0                                          ; Rutina de impresión.
 731+ 8C26
 732+ 8C26 E5               push hl
 733+ 8C27
 734+ 8C27 06 04            ld b,4
 735+ 8C29 23           19 inc hl
 736+ 8C2A 10 FD            djnz 19B
 737+ 8C2C
 738+ 8C2C CD 50 88         call Extrae_address
 739+ 8C2F CD CB 96         call Genera_coordenadas_disparo
 740+ 8C32
 741+ 8C32              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 742+ 8C32
 743+ 8C32 21 2C 86         ld hl,Coordenadas_disparo_certero
 744+ 8C35 72               ld (hl),d
 745+ 8C36 23               inc hl
 746+ 8C37 73               ld (hl),e
 747+ 8C38
 748+ 8C38              ; Elimino el disparo de la base de datos.
 749+ 8C38
 750+ 8C38 E1               pop hl
 751+ 8C39 CD 52 8D         call Elimina_disparo_de_base_de_datos
 752+ 8C3C 21 29 86         ld hl,Impacto2
 753+ 8C3F CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 754+ 8C41
 755+ 8C41 18 06            jr 11F
 756+ 8C43
 757+ 8C43 CD 01 8D     9 call Mueve_disparo
 758+ 8C46 CD D8 8C         call foto_disparo_a_borrar
 759+ 8C49
 760+ 8C49 C1           11 pop bc
 761+ 8C4A 18 04            jr 7F
 762+ 8C4C
 763+ 8C4C              ; ----- ----- ----- ----- ----- -----
 764+ 8C4C
 765+ 8C4C ED 42        1 sbc hl,bc
 766+ 8C4E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 767+ 8C50
 768+ 8C50 2A 27 86     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C53 23               inc hl
 770+ 8C54 23               inc hl
 771+ 8C55 22 27 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C58 18 BA            jr 2B
 773+ 8C5A
 774+ 8C5A CD 19 88     3 call Inicia_Puntero_Disparo_Amadeus
 775+ 8C5D 01 66 84         ld bc,Disparo_11
 776+ 8C60 2A 25 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C63
 778+ 8C63 CD 50 88     5 call Extrae_address
 779+ 8C66 7E               ld a,(hl)
 780+ 8C67 A7               and a
 781+ 8C68 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C6A
 783+ 8C6A              ; ----- ----- ----- ----- ----- -----
 784+ 8C6A
 785+ 8C6A C5               push bc
 786+ 8C6B CD D8 8C         call foto_disparo_a_borrar
 787+ 8C6E
 788+ 8C6E              ; Existe colisión con este disparo???
 789+ 8C6E
 790+ 8C6E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C6F 7E               ld a,(hl)
 792+ 8C70 2B               dec hl
 793+ 8C71 E6 01            and 1
 794+ 8C73 28 48            jr z,10F
 795+ 8C75
 796+ 8C75              ; La colisión se produce con Amadeus???
 797+ 8C75              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C75
 799+ 8C75 E5               push hl
 800+ 8C76
 801+ 8C76 06 04            ld b,4
 802+ 8C78 23           16 inc hl
 803+ 8C79 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C7B CD 50 88         call Extrae_address
 805+ 8C7E CD CB 96         call Genera_coordenadas_disparo
 806+ 8C81
 807+ 8C81 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C82 FE 16            cp $16
 809+ 8C84 38 22            jr c,15F
 810+ 8C86
 811+ 8C86              ; (Colisiones en filas 16 y 17).
 812+ 8C86
 813+ 8C86 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C87
 815+ 8C87              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C87
 817+ 8C87 21 7C 84         ld hl,Amadeus_db+6
 818+ 8C8A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C8B 23               inc hl
 820+ 8C8C 23               inc hl
 821+ 8C8D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8C8E 21 8A 84         ld hl,Amadeus_db+20
 823+ 8C91 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8C92 21 2E 86         ld hl,Coordenadas_X_Amadeus
 825+ 8C95 CD 5D 8D         call Guarda_coordenadas_X
 826+ 8C98
 827+ 8C98 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8C99
 829+ 8C99              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8C99
 831+ 8C99 06 03            ld b,3
 832+ 8C9B 21 2E 86         ld hl,Coordenadas_X_Amadeus
 833+ 8C9E 7E           18 ld a,(hl)
 834+ 8C9F BA               cp d
 835+ 8CA0 20 03            jr nz,17F
 836+ 8CA2
 837+ 8CA2              ; Colisión Amadeus !!!!!!!!!!
 838+ 8CA2
 839+ 8CA2 E1               pop hl
 840+ 8CA3 18 09            jr 14F
 841+ 8CA5
 842+ 8CA5 23           17 inc hl
 843+ 8CA6 10 F6            djnz 18B
 844+ 8CA8
 845+ 8CA8              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8CA8              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8CA8
 848+ 8CA8 E1           15 pop hl
 849+ 8CA9 23               inc hl
 850+ 8CAA 35               dec (hl)
 851+ 8CAB 2B               dec hl
 852+ 8CAC 18 0F            jr 10F
 853+ 8CAE
 854+ 8CAE              ; -----------------------debug
 855+ 8CAE
 856+ 8CAE              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8CAE              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8CAE
 859+ 8CAE E5           14 push hl
 860+ 8CAF CD 52 8D         call Elimina_disparo_de_base_de_datos
 861+ 8CB2 21 29 86         ld hl,Impacto2
 862+ 8CB5 CB CE            set 1,(hl)
 863+ 8CB7 CD 9C 8D         call Limpia_Coordenadas_X
 864+ 8CBA
 865+ 8CBA E1               pop hl
 866+ 8CBB 18 06            jr 12F
 867+ 8CBD
 868+ 8CBD CD 01 8D     10 call Mueve_disparo
 869+ 8CC0 CD D8 8C         call foto_disparo_a_borrar
 870+ 8CC3 C1           12 pop bc
 871+ 8CC4
 872+ 8CC4 18 04            jr 8F
 873+ 8CC6
 874+ 8CC6              ; ----- ----- ----- ----- ----- -----
 875+ 8CC6
 876+ 8CC6 ED 42        4 sbc hl,bc
 877+ 8CC8 28 0A            jr z,6F
 878+ 8CCA
 879+ 8CCA 2A 25 86     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8CCD 23               inc hl
 881+ 8CCE 23               inc hl
 882+ 8CCF 22 25 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8CD2 18 8F            jr 5B
 884+ 8CD4
 885+ 8CD4 CD 12 88     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8CD7 C9               ret
 887+ 8CD8
 888+ 8CD8              ; ------------------------------------------------------------------
 889+ 8CD8
 890+ 8CD8              foto_disparo_a_borrar
 891+ 8CD8
 892+ 8CD8 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8CD9 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8CDA C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8CDB
 896+ 8CDB E5               push hl
 897+ 8CDC 23               inc hl
 898+ 8CDD 23               inc hl
 899+ 8CDE ED 73 1C 86      ld (Stack),sp
 900+ 8CE2 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8CE3 FD E1            pop iy
 902+ 8CE5 DD E1            pop ix
 903+ 8CE7 E1               pop hl
 904+ 8CE8 ED 7B 1C 86      ld sp,(Stack)
 905+ 8CEC 3A 13 86         ld a,(Ctrl_1)
 906+ 8CEF CB C7            set 0,a
 907+ 8CF1 32 13 86         ld (Ctrl_1),a
 908+ 8CF4 CD A0 7F         call Guarda_foto_registros
 909+ 8CF7 3A 13 86         ld a,(Ctrl_1)
 910+ 8CFA CB 87            res 0,a
 911+ 8CFC 32 13 86         ld (Ctrl_1),a
 912+ 8CFF E1               pop hl
 913+ 8D00 C9               ret
 914+ 8D01
 915+ 8D01 E5           Mueve_disparo push hl
 916+ 8D02 7E               ld a,(hl)
 917+ 8D03 06 04            ld b,4
 918+ 8D05 23           1 inc hl
 919+ 8D06 10 FD            djnz 1B
 920+ 8D08
 921+ 8D08              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8D08
 923+ 8D08 CD 50 88         call Extrae_address
 924+ 8D0B
 925+ 8D0B E6 01            and 1
 926+ 8D0D 28 2A            jr z,2F
 927+ 8D0F
 928+ 8D0F              ; Disparo hacia arriba, (Amadeus).
 929+ 8D0F
 930+ 8D0F              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8D0F              ; _ de la dificultad.
 932+ 8D0F
 933+ 8D0F CD C3 90         call PreviousScan
 934+ 8D12 CD C3 90         call PreviousScan
 935+ 8D15 CD C3 90         call PreviousScan
 936+ 8D18
 937+ 8D18              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8D18
 939+ 8D18 7C               ld a,h
 940+ 8D19 FE 40            cp $40
 941+ 8D1B 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8D1D
 943+ 8D1D              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8D1D
 945+ 8D1D EB               ex de,hl
 946+ 8D1E 06 04            ld b,4
 947+ 8D20 2B           6 dec hl
 948+ 8D21 10 FD            djnz 6B
 949+ 8D23
 950+ 8D23 CD 52 8D         call Elimina_disparo_de_base_de_datos
 951+ 8D26
 952+ 8D26 18 0C            jr 4F
 953+ 8D28
 954+ 8D28              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8D28
 956+ 8D28 D5           3 push de
 957+ 8D29 C5               push bc
 958+ 8D2A CD 0E 8B         call Comprueba_Colision
 959+ 8D2D 78               ld a,b
 960+ 8D2E C1               pop bc
 961+ 8D2F D1               pop de
 962+ 8D30
 963+ 8D30 EB               ex de,hl
 964+ 8D31
 965+ 8D31 73               ld (hl),e
 966+ 8D32 23               inc hl
 967+ 8D33 72               ld (hl),d
 968+ 8D34
 969+ 8D34 E1           4 pop hl
 970+ 8D35 23               inc hl
 971+ 8D36 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 972+ 8D37 2B               dec hl
 973+ 8D38 C9               ret
 974+ 8D39
 975+ 8D39              ; Disparo hacia abajo, (Entidad).
 976+ 8D39
 977+ 8D39              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 8D39              ; _ de la dificultad.
 979+ 8D39
 980+ 8D39 CD B4 90     2 call NextScan
 981+ 8D3C CD B4 90         call NextScan
 982+ 8D3F CD B4 90         call NextScan
 983+ 8D42
 984+ 8D42              ; Detecta si el disparo de la entidad sale de la pantalla.
 985+ 8D42
 986+ 8D42 7C               ld a,h
 987+ 8D43 FE 58            cp $58
 988+ 8D45 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 989+ 8D47
 990+ 8D47 EB               ex de,hl
 991+ 8D48 06 04            ld b,4
 992+ 8D4A 2B           5 dec hl
 993+ 8D4B 10 FD            djnz 5B
 994+ 8D4D
 995+ 8D4D CD 52 8D         call Elimina_disparo_de_base_de_datos
 996+ 8D50
 997+ 8D50 18 E2            jr 4B
 998+ 8D52
 999+ 8D52              ; HL apunta al primer byte de la base de datos del disparo.
1000+ 8D52
1001+ 8D52 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1002+ 8D55 AF               xor a
1003+ 8D56 77               ld (hl),a
1004+ 8D57 54               ld d,h
1005+ 8D58 5D               ld e,l
1006+ 8D59 13               inc de
1007+ 8D5A ED B0            ldir
1008+ 8D5C C9               ret
1009+ 8D5D
1010+ 8D5D              ; -----------------------------------------------------------------
1011+ 8D5D              ;
1012+ 8D5D              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1013+ 8D5D              ;
1014+ 8D5D              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1015+ 8D5D              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1016+ 8D5D              ;
1017+ 8D5D              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1018+ 8D5D              ;
1019+ 8D5D              ;   INPUTS:
1020+ 8D5D              ;
1021+ 8D5D              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1022+ 8D5D              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1023+ 8D5D              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1024+ 8D5D
1025+ 8D5D              ;   MODIFICA: A, HL, DE y C
1026+ 8D5D
1027+ 8D5D 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1028+ 8D5E 79               ld a,c
1029+ 8D5F E6 01            and 1
1030+ 8D61 20 03            jr nz,1F
1031+ 8D63 14               inc d
1032+ 8D64 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1033+ 8D66
1034+ 8D66              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D66              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1036+ 8D66
1037+ 8D66 15           1 dec d
1038+ 8D67 23           2 inc hl
1039+ 8D68 72               ld (hl),d
1040+ 8D69
1041+ 8D69 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1042+ 8D6A A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1043+ 8D6B C8               ret z
1044+ 8D6C
1045+ 8D6C AF               xor a
1046+ 8D6D 5F               ld e,a
1047+ 8D6E 18 ED            jr Guarda_coordenadas_X
1048+ 8D70
1049+ 8D70              ; -----------------------------------------------------------------
1050+ 8D70              ;
1051+ 8D70              ;   12/04/23
1052+ 8D70              ;
1053+ 8D70
1054+ 8D70 3A 29 86     Selector_de_impactos ld a,(Impacto2)
1055+ 8D73 A7               and a
1056+ 8D74 C8               ret z
1057+ 8D75
1058+ 8D75 FE 04            cp 4
1059+ 8D77 20 09            jr nz,1F
1060+ 8D79
1061+ 8D79
1062+ 8D79              ; La colisión se produce por contacto entre Amadeus y una entidad.
1063+ 8D79
1064+ 8D79 CD 9F 8B         call Detecta_colision_nave_entidad
1065+ 8D7C
1066+ 8D7C 21 29 86         ld hl,Impacto2
1067+ 8D7F CB 5E            bit 3,(hl)
1068+ 8D81 C0               ret nz                                               ; Existe colisión, RET.
1069+ 8D82
1070+ 8D82              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1071+ 8D82              ; Primero analizamos si algún disparo impacta en Amadeus.
1072+ 8D82
1073+ 8D82 21 29 86     1 ld hl,Impacto2
1074+ 8D85 CB 4E            bit 1,(hl)
1075+ 8D87 28 07            jr z,2F
1076+ 8D89
1077+ 8D89 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1078+ 8D8C 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1079+ 8D8E 18 0B            jr 3F
1080+ 8D90
1081+ 8D90 21 29 86     2 ld hl,Impacto2
1082+ 8D93 CB 46            bit 0,(hl)
1083+ 8D95 C8               ret z
1084+ 8D96
1085+ 8D96              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1086+ 8D96
1087+ 8D96 21 13 86         ld hl,Ctrl_1
1088+ 8D99 CB D6            set 2,(hl)
1089+ 8D9B
1090+ 8D9B C9           3 ret
1091+ 8D9C
1092+ 8D9C              ; -----------------------------------------------------------------
1093+ 8D9C              ;
1094+ 8D9C              ;   16/04/23
1095+ 8D9C              ;
1096+ 8D9C
1097+ 8D9C AF           Limpia_Coordenadas_X xor a
1098+ 8D9D 06 06            ld b,6
1099+ 8D9F 21 2E 86         ld hl,Coordenadas_X_Amadeus
1100+ 8DA2 77           1 ld (hl),a
1101+ 8DA3 23               inc hl
1102+ 8DA4 10 FC            djnz 1B
1103+ 8DA6 C9               ret
1104+ 8DA7
1105+ 8DA7              ; -----------------------------------------------------------------
1106+ 8DA7              ;
1107+ 8DA7              ;   25/04/23
1108+ 8DA7              ;
1109+ 8DA7
1110+ 8DA7              Determina_resultado_comparativa
1111+ 8DA7
1112+ 8DA7 7C               ld a,h
1113+ 8DA8 06 00            ld b,0
1114+ 8DAA
1115+ 8DAA CD C2 8D         call Compara_cositas
1116+ 8DAD 04               inc b
1117+ 8DAE 05               dec b
1118+ 8DAF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1119+ 8DB0
1120+ 8DB0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1121+ 8DB1 06 00            ld b,0
1122+ 8DB3 FE 02            cp $02
1123+ 8DB5 28 09            jr z,1F
1124+ 8DB7 FE FE            cp $fe
1125+ 8DB9 28 05            jr z,1F
1126+ 8DBB
1127+ 8DBB CD C2 8D         call Compara_cositas
1128+ 8DBE 18 01            jr 2F
1129+ 8DC0
1130+ 8DC0 04           1 inc b
1131+ 8DC1 C9           2 ret
1132+ 8DC2
1133+ 8DC2 A7           Compara_cositas and a
1134+ 8DC3 28 07            jr z,1F
1135+ 8DC5 FE FF            cp $ff
1136+ 8DC7 28 03            jr z,1F
1137+ 8DC9 FE 01            cp $01
1138+ 8DCB C0               ret nz
1139+ 8DCC 04           1 inc b
1140+ 8DCD C9               ret
1141+ 8DCE
# file closed: Disparo.asm
1050  8DCE              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DCE              ; ******************************************************************************************************************************************************************************************
   2+ 8DCE              ;
   3+ 8DCE              ; 01/23
   4+ 8DCE              ;
   5+ 8DCE              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DCE
   7+ 8DCE CD A8 90     Draw call Prepara_draw
   8+ 8DD1 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8DD2 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8DD3 28 05        	jr z,2F
  11+ 8DD5
  12+ 8DD5 3A EC 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8DD8 18 0C        	jr 1F
  14+ 8DDA 2A EA 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8DDD 22 DA 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8DE0 CD 6F 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8DE3              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8DE3 CD EE 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8DE6 3A 06 86     1 ld a,(Ctrl_0)
  20+ 8DE9 CB 6F        	bit 5,a
  21+ 8DEB 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8DED
  23+ 8DED CD 05 8E     	call Comprueba_limite_horizontal
  24+ 8DF0 CD 95 8E     	call Comprueba_limite_vertical
  25+ 8DF3
  26+ 8DF3              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8DF3
  28+ 8DF3 CD E2 8F     3 call calcula_CColumnass
  29+ 8DF6 CD 19 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8DF9 CD 6E 90     	call Define_rutina_de_impresion
  31+ 8DFC
  32+ 8DFC 3A 06 86     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8DFF CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8E01 32 06 86     	ld (Ctrl_0),a
  35+ 8E04
  36+ 8E04 C9           	ret
  37+ 8E05
  38+ 8E05              ; *******************************************************************************************************************************************************************************************
  39+ 8E05              ;	21/01/23
  40+ 8E05              ;
  41+ 8E05              ; 	Comprueba_limite_horizontal.
  42+ 8E05              ;
  43+ 8E05              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8E05              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8E05              ;
  46+ 8E05              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8E05              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8E05              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8E05              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8E05
  51+ 8E05
  52+ 8E05
  53+ 8E05 3A 06 86     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8E08 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8E0A 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8E0C E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8E0E 32 06 86     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8E11 18 09            jr 6F
  59+ 8E13 CB 5F        1 bit 3,a
  60+ 8E15 28 0A            jr z,2F
  61+ 8E17 E6 F7            and $f7
  62+ 8E19 32 06 86         ld (Ctrl_0),a
  63+ 8E1C CD 6F 8F     6 call Inicializacion
  64+ 8E1F 18 5B            jr 5F
  65+ 8E21 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8E22
  67+ 8E22              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8E22              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8E22
  70+ 8E22 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8E23 2A 10 86     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8E26 CD 74 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8E29 67           	ld h,a
  74+ 8E2A EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8E2B CD 74 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8E2E 67           	ld h,a
  77+ 8E2F A7           	and a
  78+ 8E30 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8E32 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8E33 3A EC 85     	ld a,(Cuad_objeto)
  81+ 8E36 FE 02        	cp 2
  82+ 8E38 38 1E        	jr c,3F
  83+ 8E3A 28 1C        	jr z,3F
  84+ 8E3C 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8E3D 28 23            jr z,7F
  86+ 8E3F 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8E41 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E43 E1           	pop hl
  89+ 8E44
  90+ 8E44              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E44              ; _para indicar con E="2" en caso necesario.
  92+ 8E44
  93+ 8E44 E5               push hl
  94+ 8E45 C5               push bc
  95+ 8E46 CD 74 93     	call calcula_tercio
  96+ 8E49 FE 01        	cp 1
  97+ 8E4B 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E4D CD 7D 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E50 28 26            jr z,9F
 100+ 8E52 38 24            jr c,9F
 101+ 8E54 1E 00        11 ld e,0
 102+ 8E56 18 22            jr 8F
 103+ 8E58 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E59 28 07        	jr z, 7F
 105+ 8E5B 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E5D 1E 00         	ld e,0
 107+ 8E5F E1           	pop hl
 108+ 8E60 18 04        	jr 4F
 109+ 8E62 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E64 18 15            jr 10F
 111+ 8E66
 112+ 8E66              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E66              ; _para indicar con E="2" en caso necesario.
 114+ 8E66
 115+ 8E66 E5           4 push hl
 116+ 8E67 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E68 CD 74 93     	call calcula_tercio
 118+ 8E6B FE 01        	cp 1
 119+ 8E6D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E6F CD 7D 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E72 28 04            jr z,9F
 122+ 8E74 30 02            jr nc,9F
 123+ 8E76 18 02        	jr 8F
 124+ 8E78 1E 02        9 ld e,2
 125+ 8E7A C1           8 pop bc
 126+ 8E7B E1           10 pop hl
 127+ 8E7C C9           5 ret
 128+ 8E7D
 129+ 8E7D              ; --------------------
 130+ 8E7D              ;
 131+ 8E7D              ; 25/08/22
 132+ 8E7D
 133+ 8E7D CD 74 93     Comprueba_centro call calcula_tercio
 134+ 8E80 67               ld h,a
 135+ 8E81 08           	ex af,af
 136+ 8E82 FE 02        	cp 2
 137+ 8E84 38 07        	jr c,1F
 138+ 8E86 28 05        	jr z,1F
 139+ 8E88 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E8B 18 03        	jr 2F
 141+ 8E8D 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E90 08           2 ex af,af
 143+ 8E91 A7               and a
 144+ 8E92 ED 42            sbc hl,bc
 145+ 8E94 C9               ret
 146+ 8E95
 147+ 8E95              ; *********************************************************************************************************************************************************************************************
 148+ 8E95              ;
 149+ 8E95              ;   16/8/22
 150+ 8E95              ;
 151+ 8E95              ;	Comprueba_limite_vertical
 152+ 8E95              ;
 153+ 8E95              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E95              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E95              ;
 156+ 8E95
 157+ 8E95 2A DA 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E98 7D           	ld a,l
 159+ 8E99 E6 1F        	and $1F
 160+ 8E9B 57           	ld d,a
 161+ 8E9C 3A 12 86     	ld a,(Limite_vertical)
 162+ 8E9F BA           	cp d 											; Límite - Posición.
 163+ 8EA0 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8EA1 3A EC 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8EA4 CB 47        	bit 0,a
 166+ 8EA6 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8EA8
 168+ 8EA8              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8EA8
 170+ 8EA8 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8EA9 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8EAB
 173+ 8EAB              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8EAB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8EAB
 176+ 8EAB 3A DE 85         ld a,(Coordenada_X)
 177+ 8EAE 16 0F            ld d,Centro_izquierda
 178+ 8EB0 A7               and a
 179+ 8EB1 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8EB2 28 1E            jr z,3F
 181+ 8EB4 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8EB6              ;                                                    ; _salimos sin modificar nada.
 183+ 8EB6 18 0E            jr 2F
 184+ 8EB8 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8EB9 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8EBB
 187+ 8EBB              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8EBB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8EBB
 190+ 8EBB 3A DE 85         ld a,(Coordenada_X)
 191+ 8EBE 16 10            ld d,Centro_derecha
 192+ 8EC0 A7               and a
 193+ 8EC1 92               sub d
 194+ 8EC2 28 0E            jr z,3F
 195+ 8EC4 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8EC6              ;                                                    ; _salimos sin modificar nada.
 197+ 8EC6 CB 43        2 bit 0,e
 198+ 8EC8 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8ECA C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8ECB CD 5F 8F         call Modificaccionne
 201+ 8ECE C1           	pop bc
 202+ 8ECF CD 6F 8F         call Inicializacion
 203+ 8ED2 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8ED3
 205+ 8ED3              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8ED3
 207+ 8ED3 C5           4 push bc
 208+ 8ED4 01 D9 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8ED7 0A           	ld a,(bc)
 210+ 8ED8 3D           	dec a
 211+ 8ED9 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8EDA 7D           	ld a,l
 213+ 8EDB 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8EDC CB 47        	bit 0,a
 215+ 8EDE 28 03        	jr z,5F
 216+ 8EE0 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8EE1 18 2E        	jr 7F
 218+ 8EE3
 219+ 8EE3              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8EE3
 221+ 8EE3 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8EE4 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8EE5 3A 06 86     	ld a,(Ctrl_0)
 224+ 8EE8 CB 4F        	bit 1,a
 225+ 8EEA 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8EEC F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8EED
 228+ 8EED              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8EED
 230+ 8EED 1C               inc e
 231+ 8EEE 1D               dec e
 232+ 8EEF 20 07            jr nz,12F
 233+ 8EF1 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8EF2 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8EF3 22 DA 85     	ld (Posicion_actual),hl
 236+ 8EF6 18 44        13 jr 9F
 237+ 8EF8 CB 43        12 bit 0,e
 238+ 8EFA 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8EFC              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8EFC C1           	pop bc
 241+ 8EFD 18 D3        	jr 3B
 242+ 8EFF 80           14 add b
 243+ 8F00 6F               ld l,a
 244+ 8F01 22 DA 85     	ld (Posicion_actual),hl
 245+ 8F04 CD 5F 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8F07 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8F09 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8F0B 32 06 86         ld (Ctrl_0),a
 249+ 8F0E F1           	pop af
 250+ 8F0F 18 2B        	jr 9F
 251+ 8F11
 252+ 8F11              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8F11
 254+ 8F11 F5           7 push af
 255+ 8F12 3A 06 86     	ld a,(Ctrl_0)
 256+ 8F15 CB 47        	bit 0,a
 257+ 8F17 20 1D        	jr nz,8F
 258+ 8F19 F1           	pop af
 259+ 8F1A
 260+ 8F1A              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8F1A
 262+ 8F1A 1C           	inc e
 263+ 8F1B 1D               dec e
 264+ 8F1C 20 07            jr nz,10F
 265+ 8F1E 90           	sub b
 266+ 8F1F 6F               ld l,a
 267+ 8F20 22 DA 85     	ld (Posicion_actual),hl
 268+ 8F23 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8F25              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8F25 CB 43        10 bit 0,e
 271+ 8F27 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8F29              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8F29 C1           	pop bc
 274+ 8F2A 18 A6        	jr 3B
 275+ 8F2C 90           16 sub b
 276+ 8F2D 6F               ld l,a
 277+ 8F2E 22 DA 85     	ld (Posicion_actual),hl
 278+ 8F31 CD 5F 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8F34 18 06            jr 9F
 280+ 8F36 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8F38 32 06 86         ld (Ctrl_0),a
 282+ 8F3B F1           	pop af
 283+ 8F3C C1           9 pop bc
 284+ 8F3D 1E 00        	ld e,0
 285+ 8F3F CD 6F 8F         call Inicializacion
 286+ 8F42 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F43 08           	ex af,af
 288+ 8F44 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F45 18 8B            jr 3B
 290+ 8F47
 291+ 8F47              ; --------------------
 292+ 8F47
 293+ 8F47 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F49 CD C3 90     1 call PreviousScan
 295+ 8F4C 10 FB            djnz 1B
 296+ 8F4E 22 DA 85     	ld (Posicion_actual),hl
 297+ 8F51 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F52 C9           	ret
 299+ 8F53
 300+ 8F53              ; --------------------
 301+ 8F53
 302+ 8F53 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F55 CD B4 90     1 call NextScan
 304+ 8F58 10 FB            djnz 1B
 305+ 8F5A 22 DA 85     	ld (Posicion_actual),hl
 306+ 8F5D AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F5E C9           	ret
 308+ 8F5F
 309+ 8F5F              ; --------------------
 310+ 8F5F              ;
 311+ 8F5F              ;	22/01/23
 312+ 8F5F              ;
 313+ 8F5F              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F5F              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F5F              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F5F
 317+ 8F5F
 318+ 8F5F              Modificaccionne
 319+ 8F5F
 320+ 8F5F 3A EC 85     	ld a,(Cuad_objeto)
 321+ 8F62 FE 02        	cp 2
 322+ 8F64 CC 47 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F67 DC 47 8F         call c,Modifica_Pos_actual
 324+ 8F6A C8           	ret z
 325+ 8F6B CD 53 8F         call Modifica_Pos_actual2
 326+ 8F6E C9               ret
 327+ 8F6F
 328+ 8F6F              ; *************************************************************************************************************************************************************************************************
 329+ 8F6F              ;
 330+ 8F6F              ;	13/8/22
 331+ 8F6F              ;
 332+ 8F6F              ;	Inicializacion
 333+ 8F6F              ;
 334+ 8F6F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F6F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F6F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F6F              ;
 338+ 8F6F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F6F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F6F              ;	_ desaparece/aparece.
 341+ 8F6F
 342+ 8F6F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F6F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F6F              ;
 345+ 8F6F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F6F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F6F              ; 		   [E] ="0"
 348+ 8F6F
 349+ 8F6F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F6F
 351+ 8F6F CD 74 93     Inicializacion call calcula_tercio
 352+ 8F72 28 36        	jr z,primit
 353+ 8F74 E6 02        	and 2
 354+ 8F76 20 07        	jr nz,segmit
 355+ 8F78 7D           	ld a,l
 356+ 8F79 FE 7F        	cp $7f
 357+ 8F7B 38 2D        	jr c,primit
 358+ 8F7D 28 2B        	jr z,primit
 359+ 8F7F CD DC 8F     segmit call column
 360+ 8F82 38 13        	jr c,tercuad
 361+ 8F84 3E 04        cuarcuad ld a,4
 362+ 8F86 32 EC 85     	ld (Cuad_objeto),a
 363+ 8F89 21 20 48     	ld hl,$4820
 364+ 8F8C 22 10 86     	ld (Limite_horizontal),hl
 365+ 8F8F 21 12 86     	ld hl,Limite_vertical
 366+ 8F92 36 0D        	ld (hl),$0d
 367+ 8F94 08           	ex af,af
 368+ 8F95 18 3C        	jr 1F
 369+ 8F97              tercuad
 370+ 8F97 3E 03        	ld a,3
 371+ 8F99 32 EC 85     	ld (Cuad_objeto),a
 372+ 8F9C 21 20 48     	ld hl,$4820
 373+ 8F9F 22 10 86     	ld (Limite_horizontal),hl
 374+ 8FA2 21 12 86     	ld hl,Limite_vertical
 375+ 8FA5 36 12        	ld (hl),$12
 376+ 8FA7 08           	ex af,af
 377+ 8FA8 18 29        	jr 1F
 378+ 8FAA CD DC 8F     primit call column
 379+ 8FAD 38 13        	jr c, primcuad
 380+ 8FAF              segcuad
 381+ 8FAF 3E 02        	ld a,2
 382+ 8FB1 32 EC 85     	ld (Cuad_objeto),a
 383+ 8FB4 21 C0 4F     	ld hl,$4fc0
 384+ 8FB7 22 10 86     	ld (Limite_horizontal),hl
 385+ 8FBA 21 12 86     	ld hl,Limite_vertical
 386+ 8FBD 36 0D        	ld (hl),$0d
 387+ 8FBF 08           	ex af,af
 388+ 8FC0 18 11        	jr 1F
 389+ 8FC2              primcuad
 390+ 8FC2 3E 01        	ld a,1
 391+ 8FC4 32 EC 85     	ld (Cuad_objeto),a
 392+ 8FC7 21 C0 4F     	ld hl,$4fc0
 393+ 8FCA 22 10 86     	ld (Limite_horizontal),hl
 394+ 8FCD 21 12 86     	ld hl,Limite_vertical
 395+ 8FD0 36 12        	ld (hl),$12
 396+ 8FD2 08           	ex af,af
 397+ 8FD3 CD A0 96     1 call Genera_coordenadas
 398+ 8FD6 21 06 86     	ld hl,Ctrl_0
 399+ 8FD9 CB EE        	set 5,(hl)
 400+ 8FDB C9           	ret
 401+ 8FDC
 402+ 8FDC              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8FDC
 404+ 8FDC              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8FDC              ;
 406+ 8FDC              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8FDC
 408+ 8FDC 7D           column ld a,l
 409+ 8FDD E6 1F        	and $1f
 410+ 8FDF FE 10         	cp $10
 411+ 8FE1 C9            	ret
 412+ 8FE2
 413+ 8FE2              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8FE2              ;
 415+ 8FE2              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8FE2              ;
 417+ 8FE2              ; 14/12/22
 418+ 8FE2              ;
 419+ 8FE2              ;	Modifica: A y BC.
 420+ 8FE2
 421+ 8FE2 3A EC 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8FE5 E6 01        	and 1
 423+ 8FE7 28 17        	jr z,1F
 424+ 8FE9
 425+ 8FE9              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FE9
 427+ 8FE9 3A DE 85     	ld a,(Coordenada_X)
 428+ 8FEC 47           	ld b,a
 429+ 8FED 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8FEE 79           	ld a,c
 431+ 8FEF 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8FF0 38 08        	jr c,2F
 433+ 8FF2 47           	ld b,a
 434+ 8FF3 79           	ld a,c
 435+ 8FF4 90           	sub b
 436+ 8FF5 32 0F 86     	ld (Columnas),a
 437+ 8FF8 18 1B        	jr 4F
 438+ 8FFA 79           2 ld a,c
 439+ 8FFB 32 0F 86     	ld (Columnas),a
 440+ 8FFE 18 15        	jr 4F
 441+ 9000
 442+ 9000              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9000
 444+ 9000 3A DE 85     1 ld a,(Coordenada_X)
 445+ 9003 81           	add c
 446+ 9004 3D           	dec a
 447+ 9005 D6 1F        	sub $1f
 448+ 9007 38 08        	jr c,3F
 449+ 9009 47           	ld b,a
 450+ 900A 79           	ld a,c
 451+ 900B 90           	sub b
 452+ 900C 32 0F 86     	ld (Columnas),a
 453+ 900F 18 04        	jr 4F
 454+ 9011 79           3 ld a,c
 455+ 9012 32 0F 86     	ld (Columnas),a
 456+ 9015 D9           4 exx
 457+ 9016 4F           	ld c,a
 458+ 9017 D9           	exx
 459+ 9018 C9            ret
 460+ 9019
 461+ 9019              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9019              ;
 463+ 9019              ; 7/1/23
 464+ 9019              ;
 465+ 9019              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9019              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9019              ;
 468+ 9019              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9019              ;	DESTRUYE: HL,B Y A.
 470+ 9019
 471+ 9019 3A EC 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 901C FE 02        	cp 2
 473+ 901E 38 18        	jr c,1F
 474+ 9020 28 16        	jr z,1F
 475+ 9022 E6 01        	and 1
 476+ 9024 28 0D        	jr z,3F
 477+ 9026
 478+ 9026              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9026
 480+ 9026 CD 62 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9029
 482+ 9029 7D           9 ld a,l
 483+ 902A E6 1F        	and $1f
 484+ 902C 28 2A        	jr z,7F
 485+ 902E 2B           	dec hl
 486+ 902F 10 F8        	djnz 9B
 487+ 9031 18 25        	jr 7F
 488+ 9033
 489+ 9033              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9033
 491+ 9033 2A DA 85     3 ld hl,(Posicion_actual)
 492+ 9036 18 20        	jr 7F
 493+ 9038
 494+ 9038 28 14        1 jr z,2F
 495+ 903A
 496+ 903A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 903A
 498+ 903A CD 62 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 903D 7D           4 ld a,l
 500+ 903E E6 1F        	and $1f
 501+ 9040 28 03        	jr z,6F
 502+ 9042 2B           	dec hl
 503+ 9043 10 F8        	djnz 4B
 504+ 9045 06 0F        6 ld b,15
 505+ 9047 CD C3 90     5 call PreviousScan
 506+ 904A 10 FB        	djnz 5B
 507+ 904C 18 0A        	jr 7F
 508+ 904E
 509+ 904E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 904E
 511+ 904E CD 62 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9051 06 0F        	ld b,15
 513+ 9053 CD C3 90     8 call PreviousScan
 514+ 9056 10 FB        	djnz 8B
 515+ 9058
 516+ 9058 E5           7 push hl
 517+ 9059 DD E1        	pop ix
 518+ 905B
 519+ 905B 2A DC 85     	ld hl,(Puntero_objeto)
 520+ 905E E5           	push hl
 521+ 905F FD E1        	pop iy
 522+ 9061
 523+ 9061 C9           	ret
 524+ 9062
 525+ 9062              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9062              ;
 527+ 9062              ;	2/1/23
 528+ 9062              ;
 529+ 9062              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9062              ;
 531+ 9062              ;	Tras esta rutina tenemos:
 532+ 9062              ;
 533+ 9062              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9062              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9062              ;
 536+ 9062              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9062
 538+ 9062 2A DA 85     Operandos ld hl,(Posicion_actual)
 539+ 9065 3A 0F 86     	ld a,(Columnas)
 540+ 9068 3D           	dec a
 541+ 9069 20 01        	jr nz,1F
 542+ 906B 3C           	inc a
 543+ 906C 47           1 ld b,a
 544+ 906D C9           	ret
 545+ 906E
 546+ 906E              ; --------------------------------------------------------------------------------------------------------------------
 547+ 906E              ;
 548+ 906E              ;	3/1/23
 549+ 906E              ;
 550+ 906E              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 906E              ;
 552+ 906E              ;	Destruye: A,B,HL y DE.
 553+ 906E
 554+ 906E              Define_rutina_de_impresion
 555+ 906E
 556+ 906E 3A D9 85     	ld a,(Columns)
 557+ 9071 47           	ld b,a
 558+ 9072 3A 0F 86     	ld a,(Columnas)
 559+ 9075 B8           	cp b
 560+ 9076 20 0D        	jr nz,2f
 561+ 9078
 562+ 9078              ;	La entidad se imprime entera.
 563+ 9078
 564+ 9078 21 44 91     	ld hl, Indice_entidades_completas
 565+ 907B E6 01        	and 1
 566+ 907D 28 02        	jr z,1F
 567+ 907F
 568+ 907F 23           	inc hl
 569+ 9080 23           	inc hl
 570+ 9081
 571+ 9081 CD 50 88     1 call Extrae_address
 572+ 9084 C9           	ret		;	ret
 573+ 9085
 574+ 9085              ;	La entidad no se imprime entera en pantalla.
 575+ 9085
 576+ 9085 3A EC 85     2 ld a,(Cuad_objeto)
 577+ 9088 E6 01        	and 1
 578+ 908A 28 17        	jr z,3F
 579+ 908C
 580+ 908C              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 908C
 582+ 908C 21 48 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 908F 3A D9 85     4 ld a,(Columns)
 584+ 9092 E6 01        	and 1
 585+ 9094 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9096
 587+ 9096 23           	inc hl
 588+ 9097 23           	inc hl
 589+ 9098
 590+ 9098 3A 0F 86     	ld a,(Columnas)
 591+ 909B E6 01        	and 1
 592+ 909D 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 909F
 594+ 909F 23           	inc hl
 595+ 90A0 23           	inc hl
 596+ 90A1
 597+ 90A1 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 90A3
 599+ 90A3 21 4E 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 90A6 18 E7        	jr 4B
 601+ 90A8
 602+ 90A8              ; --------------------------------------------------------------------------------------------------------------------
 603+ 90A8              ;
 604+ 90A8              ;	Prepara_draw
 605+ 90A8              ;
 606+ 90A8              ;	Es una rutina de carga.
 607+ 90A8              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 90A8              ;
 609+ 90A8              ;	FUNCIONAMIENTO:
 610+ 90A8              ;
 611+ 90A8              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 90A8              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 90A8              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 90A8              ;
 615+ 90A8              ;	DESTRUYE:
 616+ 90A8              ;
 617+ 90A8              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 90A8
 619+ 90A8 21 D8 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 90AB 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 90AC 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 90AD 4E           	ld c,(hl)
 623+ 90AE 2A DA 85     	ld hl,(Posicion_actual)
 624+ 90B1 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 90B3 C9           	ret
 626+ 90B4
 627+ 90B4              ;----------------------------------------------------------------------------------------------------------------
 628+ 90B4              ;
 629+ 90B4              ;	5/08/22
 630+ 90B4              ;
 631+ 90B4              ;   NextScan.
 632+ 90B4              ;
 633+ 90B4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 90B4              ;
 635+ 90B4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 90B4              ;
 637+ 90B4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 90B4              ;
 639+ 90B4              ;       DESTRUIDOS: AF y HL !!!
 640+ 90B4              ;
 641+ 90B4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 90B4              ;
 643+ 90B4
 644+ 90B4 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 90B5 7C               ld a,h
 646+ 90B6 E6 07            and 7
 647+ 90B8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 90B9
 649+ 90B9 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 90BA C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 90BC 6F               ld l,a
 652+ 90BD D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 90BE
 654+ 90BE 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 90BF D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 90C1 67               ld h,a
 657+ 90C2 C9               ret
 658+ 90C3
 659+ 90C3              ;----------------------------------------------------------------------------------------------------------------
 660+ 90C3              ;
 661+ 90C3              ;	5/08/22
 662+ 90C3              ;
 663+ 90C3              ;   PreviousScan.
 664+ 90C3              ;
 665+ 90C3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 90C3              ;
 667+ 90C3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 90C3              ;
 669+ 90C3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 90C3              ;
 671+ 90C3              ;       DESTRUIDOS: AF y HL !!!
 672+ 90C3              ;
 673+ 90C3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 90C3              ;
 675+ 90C3
 676+ 90C3 7C           PreviousScan ld a,h
 677+ 90C4 25               dec h               ; Dec H.
 678+ 90C5 E6 07            and 7
 679+ 90C7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 90C8
 681+ 90C8 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 90C9 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 90CB 6F               ld l,a
 684+ 90CC D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 90CD
 686+ 90CD 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 90CE C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 90D0 67               ld h,a
 689+ 90D1 C9               ret
 690+ 90D2
 691+ 90D2              ; -----------------------------------------------------------------------------------
 692+ 90D2              ;
 693+ 90D2              ;	28/2/23
 694+ 90D2              ;
 695+ 90D2              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 90D2              ;	Extrae fotos de Album_de_fotos.
 697+ 90D2
 698+ 90D2              Extrae_foto_entidades
 699+ 90D2
 700+ 90D2 3A 1B 86     	ld a,(Numero_de_malotes)
 701+ 90D5 A7           	and a
 702+ 90D6 C8           	ret z
 703+ 90D7 ED 73 1C 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 90DB 31 00 70     	ld sp,Album_de_fotos
 705+ 90DE
 706+ 90DE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 90E0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 90E1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 90E2
 710+ 90E2 ED 73 1E 86  	ld (Stack_2),sp
 711+ 90E6 ED 7B 1C 86  	ld sp,(Stack)
 712+ 90EA
 713+ 90EA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 90EA
 715+ 90EA 3E CD        	ld a,$cd
 716+ 90EC 32 F4 90     	ld (Imprime),a
 717+ 90EF EB           	ex de,hl
 718+ 90F0 22 F5 90     	ld (Imprime+1),hl
 719+ 90F3 EB           	ex de,hl
 720+ 90F4
 721+ 90F4              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 90F4
 723+ 90F4 00 00 00     Imprime db 0,0,0
 724+ 90F7
 725+ 90F7 3A 1B 86     	ld a,(Numero_de_malotes)
 726+ 90FA 3D           	dec a
 727+ 90FB 28 09        	jr z,1F
 728+ 90FD 32 1B 86      	ld (Numero_de_malotes),a
 729+ 9100
 730+ 9100 ED 7B 1E 86   	ld sp,(Stack_2)
 731+ 9104 18 D8        	jr 2B
 732+ 9106
 733+ 9106 AF           1 xor a
 734+ 9107 32 1E 86     	ld (Stack_2),a
 735+ 910A C9           	ret
 736+ 910B
 737+ 910B              ; -----------------------------------------------------------------------------------
 738+ 910B              ;
 739+ 910B              ;	28/2/23
 740+ 910B              ;
 741+ 910B              ;	Pinta los disparos generados.
 742+ 910B
 743+ 910B              Extrae_foto_disparos
 744+ 910B
 745+ 910B 3A 24 86     	ld a,(Numero_de_disparotes)
 746+ 910E A7           	and a
 747+ 910F C8           	ret z
 748+ 9110 ED 73 1C 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 9114 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 9117
 751+ 9117 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9119 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 911A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 911B
 755+ 911B ED 73 1E 86  	ld (Stack_2),sp
 756+ 911F ED 7B 1C 86  	ld sp,(Stack)
 757+ 9123
 758+ 9123              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 9123
 760+ 9123 3E CD        	ld a,$cd
 761+ 9125 32 2D 91     	ld (Imprime2),a
 762+ 9128 EB           	ex de,hl
 763+ 9129 22 2E 91     	ld (Imprime2+1),hl
 764+ 912C EB           	ex de,hl
 765+ 912D
 766+ 912D              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 912D
 768+ 912D 00 00 00     Imprime2 db 0,0,0
 769+ 9130
 770+ 9130 3A 24 86     	ld a,(Numero_de_disparotes)
 771+ 9133 3D           	dec a
 772+ 9134 28 09        	jr z,1F
 773+ 9136 32 24 86      	ld (Numero_de_disparotes),a
 774+ 9139
 775+ 9139 ED 7B 1E 86  	ld sp,(Stack_2)
 776+ 913D 18 D8        	jr 2B
 777+ 913F
 778+ 913F AF           1 xor a
 779+ 9140 32 1E 86     	ld (Stack_2),a
 780+ 9143 C9           	ret
 781+ 9144
# file closed: Draw_XOR.asm
1051  9144              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9144              ;   índices de Rutinas de impresión.
   2+ 9144
   3+ 9144 54 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9146 81 91            defw Pinta_Amadeus_3x2
   5+ 9148
   6+ 9148 D7 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 914A 77 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 914C 2B 92            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 914E
  10+ 914E 01 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9150 05 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9152 B9 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9154
  14+ 9154
  15+ 9154              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9154              ;
  17+ 9154              ;   12/12/22
  18+ 9154              ;
  19+ 9154              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9154              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9154              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9154              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9154              ;
  24+ 9154              ;   Modifica: DE y HL.
  25+ 9154
  26+ 9154 ED 73 1C 86  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9158 FD F9        	ld sp,iy
  28+ 915A 06 10            ld b,16
  29+ 915C D1           1 pop de
  30+ 915D 7B               ld a,e
  31+ 915E AE               xor (hl)
  32+ 915F 77           	ld (hl),a
  33+ 9160 23           	inc hl
  34+ 9161 7A               ld a,d
  35+ 9162 AE               xor (hl)
  36+ 9163 77           	ld (hl),a
  37+ 9164 2B           	dec hl
  38+ 9165 24           	inc h
  39+ 9166 7C               ld a,h
  40+ 9167 E6 07            and 7
  41+ 9169 20 0A            jr nz,2F
  42+ 916B 7D               ld a,l
  43+ 916C C6 20            add a,$20
  44+ 916E 6F               ld l,a
  45+ 916F 38 04            jr c,2F
  46+ 9171 7C               ld a,h
  47+ 9172 D6 08            sub 8
  48+ 9174 67               ld h,a
  49+ 9175 7C           2 ld a,h
  50+ 9176 FE 58            cp $58
  51+ 9178 28 02            jr z,3F
  52+ 917A 10 E0            djnz 1B
  53+ 917C ED 7B 1C 86  3 ld sp,(Stack)
  54+ 9180 C9           	ret
  55+ 9181
  56+ 9181 ED 73 1C 86  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9185 FD F9        	ld sp,iy
  58+ 9187 06 08            ld b,8
  59+ 9189 D1           1 pop de
  60+ 918A 7B               ld a,e
  61+ 918B AE               xor (hl)
  62+ 918C 77           	ld (hl),a
  63+ 918D 23           	inc hl
  64+ 918E 7A               ld a,d
  65+ 918F AE               xor (hl)
  66+ 9190 77           	ld (hl),a
  67+ 9191 23           	inc hl
  68+ 9192 D1           	pop de
  69+ 9193 7B               ld a,e
  70+ 9194 AE               xor (hl)
  71+ 9195 77           	ld (hl),a
  72+ 9196 2B           	dec hl
  73+ 9197 2B           	dec hl
  74+ 9198 24           	inc h
  75+ 9199 7C               ld a,h
  76+ 919A E6 07            and 7
  77+ 919C 20 0A            jr nz,2F
  78+ 919E 7D               ld a,l
  79+ 919F C6 20            add a,$20
  80+ 91A1 6F               ld l,a
  81+ 91A2 38 04            jr c,2F
  82+ 91A4 7C               ld a,h
  83+ 91A5 D6 08            sub 8
  84+ 91A7 67               ld h,a
  85+ 91A8 7C           2 ld a,h
  86+ 91A9 FE 58            cp $58
  87+ 91AB 28 25            jr z,4F
  88+ 91AD 7A               ld a,d
  89+ 91AE AE               xor (hl)
  90+ 91AF 77               ld (hl),a
  91+ 91B0 D1           	pop de
  92+ 91B1 23           	inc hl
  93+ 91B2 7B               ld a,e
  94+ 91B3 AE               xor (hl)
  95+ 91B4 77           	ld (hl),a
  96+ 91B5 23           	inc hl
  97+ 91B6 7A               ld a,d
  98+ 91B7 AE               xor (hl)
  99+ 91B8 77           	ld (hl),a
 100+ 91B9 2B           	dec hl
 101+ 91BA 2B           	dec hl
 102+ 91BB 24           	inc h
 103+ 91BC 7C               ld a,h
 104+ 91BD E6 07            and 7
 105+ 91BF 20 0A            jr nz,3F
 106+ 91C1 7D               ld a,l
 107+ 91C2 C6 20            add a,$20
 108+ 91C4 6F               ld l,a
 109+ 91C5 38 04            jr c,3F
 110+ 91C7 7C               ld a,h
 111+ 91C8 D6 08            sub 8
 112+ 91CA 67               ld h,a
 113+ 91CB 7C           3 ld a,h
 114+ 91CC FE 58            cp $58
 115+ 91CE 28 02            jr z,4F
 116+ 91D0 10 B7            djnz 1B
 117+ 91D2 ED 7B 1C 86  4 ld sp,(Stack)
 118+ 91D6 C9           	ret
 119+ 91D7
 120+ 91D7              ; ---------------------------------------------------
 121+ 91D7
 122+ 91D7 ED 73 1C 86  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 91DB FD F9        	ld sp,iy
 124+ 91DD
 125+ 91DD              ; >>>
 126+ 91DD
 127+ 91DD 06 10            ld b,16
 128+ 91DF D1           1 pop de
 129+ 91E0 7A           	ld a,d
 130+ 91E1 AE           	xor (hl)
 131+ 91E2 77           	ld (hl),a
 132+ 91E3 24           	inc h
 133+ 91E4 7C               ld a,h
 134+ 91E5 E6 07            and 7
 135+ 91E7 20 0C            jr nz,2F
 136+ 91E9 7D               ld a,l
 137+ 91EA C6 20            add a,$20
 138+ 91EC 6F               ld l,a
 139+ 91ED 38 06            jr c,2F
 140+ 91EF 7C               ld a,h
 141+ 91F0 D6 08            sub 8
 142+ 91F2 67               ld h,a
 143+ 91F3 18 00            jr 2F
 144+ 91F5 7C           2 ld a,h
 145+ 91F6 FE 58            cp $58
 146+ 91F8 28 02            jr z,3F
 147+ 91FA 10 E3            djnz 1B
 148+ 91FC ED 7B 1C 86  3 ld sp,(Stack)
 149+ 9200 C9           	ret
 150+ 9201
 151+ 9201 ED 73 1C 86  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9205 FD F9        	ld sp,iy
 153+ 9207
 154+ 9207              ; >>>
 155+ 9207
 156+ 9207 06 10            ld b,16
 157+ 9209 D1           1 pop de
 158+ 920A 7B           	ld a,e
 159+ 920B AE           	xor (hl)
 160+ 920C 77           	ld (hl),a
 161+ 920D 24           	inc h
 162+ 920E 7C               ld a,h
 163+ 920F E6 07            and 7
 164+ 9211 20 0C            jr nz,2F
 165+ 9213 7D               ld a,l
 166+ 9214 C6 20            add a,$20
 167+ 9216 6F               ld l,a
 168+ 9217 38 06            jr c,2F
 169+ 9219 7C               ld a,h
 170+ 921A D6 08            sub 8
 171+ 921C 67               ld h,a
 172+ 921D 18 00            jr 2F
 173+ 921F 7C           2 ld a,h
 174+ 9220 FE 58            cp $58
 175+ 9222 28 02            jr z,3F
 176+ 9224 10 E3            djnz 1B
 177+ 9226 ED 7B 1C 86  3 ld sp,(Stack)
 178+ 922A C9           	ret
 179+ 922B
 180+ 922B              ; ---------------------------------------------------
 181+ 922B
 182+ 922B ED 73 1C 86  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 922F FD F9        	ld sp,iy
 184+ 9231 06 08            ld b,8
 185+ 9233 D1           1 pop de
 186+ 9234 7A           	ld a,d
 187+ 9235 AE           	xor (hl)
 188+ 9236 77           	ld (hl),a
 189+ 9237 23           	inc hl
 190+ 9238 D1           	pop de
 191+ 9239 7B           	ld a,e
 192+ 923A AE           	xor (hl)
 193+ 923B 77           	ld (hl),a
 194+ 923C 2B           	dec hl
 195+ 923D 24            	inc h
 196+ 923E 7C               ld a,h
 197+ 923F E6 07            and 7
 198+ 9241 20 0A            jr nz,2F
 199+ 9243 7D               ld a,l
 200+ 9244 C6 20            add a,$20
 201+ 9246 6F               ld l,a
 202+ 9247 38 04            jr c,2F
 203+ 9249 7C               ld a,h
 204+ 924A D6 08            sub 8
 205+ 924C 67               ld h,a
 206+ 924D 7C           2 ld a,h
 207+ 924E FE 58            cp $58
 208+ 9250 28 20            jr z,4F
 209+ 9252 D1               pop de
 210+ 9253 7B           	ld a,e
 211+ 9254 AE           	xor (hl)
 212+ 9255 77           	ld (hl),a
 213+ 9256 23           	inc hl
 214+ 9257 7A           	ld a,d
 215+ 9258 AE           	xor (hl)
 216+ 9259 77           	ld (hl),a
 217+ 925A 2B           	dec hl
 218+ 925B 24           	inc h
 219+ 925C 7C               ld a,h
 220+ 925D E6 07            and 7
 221+ 925F 20 0A            jr nz,3F
 222+ 9261 7D               ld a,l
 223+ 9262 C6 20            add a,$20
 224+ 9264 6F               ld l,a
 225+ 9265 38 04            jr c,3F
 226+ 9267 7C               ld a,h
 227+ 9268 D6 08            sub 8
 228+ 926A 67               ld h,a
 229+ 926B 7C           3 ld a,h
 230+ 926C FE 58            cp $58
 231+ 926E 28 02            jr z,4F
 232+ 9270 10 C1            djnz 1B
 233+ 9272 ED 7B 1C 86  4 ld sp,(Stack)
 234+ 9276 C9           	ret
 235+ 9277
 236+ 9277 ED 73 1C 86  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 927B FD F9        	ld sp,iy
 238+ 927D 06 08            ld b,8
 239+ 927F D1           1 pop de
 240+ 9280 D1           	pop de
 241+ 9281 7B           	ld a,e
 242+ 9282 AE           	xor (hl)
 243+ 9283 77           	ld (hl),a
 244+ 9284 24            	inc h
 245+ 9285 7C               ld a,h
 246+ 9286 E6 07            and 7
 247+ 9288 20 0A            jr nz,2F
 248+ 928A 7D               ld a,l
 249+ 928B C6 20            add a,$20
 250+ 928D 6F               ld l,a
 251+ 928E 38 04            jr c,2F
 252+ 9290 7C               ld a,h
 253+ 9291 D6 08            sub 8
 254+ 9293 67               ld h,a
 255+ 9294 7C           2 ld a,h
 256+ 9295 FE 58            cp $58
 257+ 9297 28 1B            jr z,4F
 258+ 9299 D1               pop de
 259+ 929A 7A           	ld a,d
 260+ 929B AE           	xor (hl)
 261+ 929C 77           	ld (hl),a
 262+ 929D 24           	inc h
 263+ 929E 7C               ld a,h
 264+ 929F E6 07            and 7
 265+ 92A1 20 0A            jr nz,3F
 266+ 92A3 7D               ld a,l
 267+ 92A4 C6 20            add a,$20
 268+ 92A6 6F               ld l,a
 269+ 92A7 38 04            jr c,3F
 270+ 92A9 7C               ld a,h
 271+ 92AA D6 08            sub 8
 272+ 92AC 67               ld h,a
 273+ 92AD 7C           3 ld a,h
 274+ 92AE FE 58            cp $58
 275+ 92B0 28 02            jr z,4F
 276+ 92B2 10 CB            djnz 1B
 277+ 92B4 ED 7B 1C 86  4 ld sp,(Stack)
 278+ 92B8 C9           	ret
 279+ 92B9
 280+ 92B9 ED 73 1C 86  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 92BD FD F9        	ld sp,iy
 282+ 92BF 06 08            ld b,8
 283+ 92C1 D1           1 pop de
 284+ 92C2 7B           	ld a,e
 285+ 92C3 AE           	xor (hl)
 286+ 92C4 77           	ld (hl),a
 287+ 92C5 23           	inc hl
 288+ 92C6 7A           	ld a,d
 289+ 92C7 AE           	xor (hl)
 290+ 92C8 77           	ld (hl),a
 291+ 92C9 2B           	dec hl
 292+ 92CA 24             	inc h
 293+ 92CB 7C               ld a,h
 294+ 92CC E6 07            and 7
 295+ 92CE 20 0A            jr nz,2F
 296+ 92D0 7D               ld a,l
 297+ 92D1 C6 20            add a,$20
 298+ 92D3 6F               ld l,a
 299+ 92D4 38 04            jr c,2F
 300+ 92D6 7C               ld a,h
 301+ 92D7 D6 08            sub 8
 302+ 92D9 67               ld h,a
 303+ 92DA 7C           2 ld a,h
 304+ 92DB FE 58            cp $58
 305+ 92DD 28 21            jr z,4F
 306+ 92DF D1               pop de
 307+ 92E0 7A           	ld a,d
 308+ 92E1 AE           	xor (hl)
 309+ 92E2 77           	ld (hl),a
 310+ 92E3 23           	inc hl
 311+ 92E4 D1               pop de
 312+ 92E5 7B           	ld a,e
 313+ 92E6 AE           	xor (hl)
 314+ 92E7 77           	ld (hl),a
 315+ 92E8 2B           	dec hl
 316+ 92E9 24           	inc h
 317+ 92EA 7C               ld a,h
 318+ 92EB E6 07            and 7
 319+ 92ED 20 0A            jr nz,3F
 320+ 92EF 7D               ld a,l
 321+ 92F0 C6 20            add a,$20
 322+ 92F2 6F               ld l,a
 323+ 92F3 38 04            jr c,3F
 324+ 92F5 7C               ld a,h
 325+ 92F6 D6 08            sub 8
 326+ 92F8 67               ld h,a
 327+ 92F9 7C           3 ld a,h
 328+ 92FA FE 58            cp $58
 329+ 92FC 28 02            jr z,4F
 330+ 92FE 10 C1            djnz 1B
 331+ 9300 ED 7B 1C 86  4 ld sp,(Stack)
 332+ 9304 C9           	ret
 333+ 9305
 334+ 9305 ED 73 1C 86  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9309 FD F9        	ld sp,iy
 336+ 930B 06 08            ld b,8
 337+ 930D D1           1 pop de
 338+ 930E 7B           	ld a,e
 339+ 930F AE           	xor (hl)
 340+ 9310 77           	ld (hl),a
 341+ 9311 24            	inc h
 342+ 9312 7C               ld a,h
 343+ 9313 E6 07            and 7
 344+ 9315 20 0A            jr nz,2F
 345+ 9317 7D               ld a,l
 346+ 9318 C6 20            add a,$20
 347+ 931A 6F               ld l,a
 348+ 931B 38 04            jr c,2F
 349+ 931D 7C               ld a,h
 350+ 931E D6 08            sub 8
 351+ 9320 67               ld h,a
 352+ 9321 7C           2 ld a,h
 353+ 9322 FE 58            cp $58
 354+ 9324 28 1C            jr z,4F
 355+ 9326 D1               pop de
 356+ 9327 7A           	ld a,d
 357+ 9328 AE           	xor (hl)
 358+ 9329 77           	ld (hl),a
 359+ 932A 24           	inc h
 360+ 932B 7C               ld a,h
 361+ 932C E6 07            and 7
 362+ 932E 20 0A            jr nz,3F
 363+ 9330 7D               ld a,l
 364+ 9331 C6 20            add a,$20
 365+ 9333 6F               ld l,a
 366+ 9334 38 04            jr c,3F
 367+ 9336 7C               ld a,h
 368+ 9337 D6 08            sub 8
 369+ 9339 67               ld h,a
 370+ 933A 7C           3 ld a,h
 371+ 933B FE 58            cp $58
 372+ 933D 28 03            jr z,4F
 373+ 933F D1               pop de
 374+ 9340 10 CB            djnz 1B
 375+ 9342 ED 7B 1C 86  4 ld sp,(Stack)
 376+ 9346 C9           	ret
 377+ 9347
 378+ 9347              ; ---------------------------------------------------
 379+ 9347              ;
 380+ 9347              ;   27/02/23
 381+ 9347              ;
 382+ 9347              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9347              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9347              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9347
 386+ 9347 ED 73 1C 86  Pinta_Disparo ld (Stack),sp
 387+ 934B FD F9            ld sp,iy
 388+ 934D 06 02            ld b,2
 389+ 934F D1           1 pop de
 390+ 9350 7B               ld a,e
 391+ 9351 AE               xor (hl)
 392+ 9352 77               ld (hl),a
 393+ 9353 23               inc hl
 394+ 9354 7A               ld a,d
 395+ 9355 AE               xor (hl)
 396+ 9356 77               ld (hl),a
 397+ 9357 2B               dec hl
 398+ 9358
 399+ 9358 24               inc h
 400+ 9359 7C               ld a,h
 401+ 935A E6 07            and 7
 402+ 935C 20 0A            jr nz,2F
 403+ 935E 7D               ld a,l
 404+ 935F C6 20            add a,$20
 405+ 9361 6F               ld l,a
 406+ 9362 38 04            jr c,2F
 407+ 9364 7C               ld a,h
 408+ 9365 D6 08            sub 8
 409+ 9367 67               ld h,a
 410+ 9368 7C           2 ld a,h
 411+ 9369 FE 58            cp $58
 412+ 936B 28 02            jr z,3F
 413+ 936D
 414+ 936D 10 E0            djnz 1B
 415+ 936F ED 7B 1C 86  3 ld sp,(Stack)
 416+ 9373 C9               ret
 417+ 9374
# file closed: Rutinas_de_impresion_sprites.asm
1052  9374              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9374              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9374              ;
   3+ 9374              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9374              ;
   5+ 9374              ; *****************************************************************************************************************************************************************************************
   6+ 9374              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9374
   8+ 9374 7C           calcula_tercio ld a,h
   9+ 9375 E6 18        	and $18
  10+ 9377 CB 2F        	sra a
  11+ 9379 CB 2F        	sra a
  12+ 937B CB 2F        	sra a
  13+ 937D C9           	ret
  14+ 937E
# file closed: calcula_tercio.asm
1053  937E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 937E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 937E              ;
   3+ 937E              ;
   4+ 937E              ;	CLS.
   5+ 937E              ;
   6+ 937E              ;	Limpia la pantalla y define sus atributos.
   7+ 937E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 937E              ;
   9+ 937E              ;	COLORES: 0 ..... NEGRO
  10+ 937E              ;    		 1 ..... AZUL
  11+ 937E              ; 			 2 ..... ROJO
  12+ 937E              ;			 3 ..... MAGENTA
  13+ 937E              ; 			 4 ..... VERDE
  14+ 937E              ; 			 5 ..... CIAN
  15+ 937E              ;			 6 ..... AMARILLO
  16+ 937E              ; 			 7 ..... BLANCO
  17+ 937E              ;
  18+ 937E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 937E              ;
  20+ 937E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 937E
  22+ 937E
  23+ 937E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9381 11 01 40     	LD DE,$4001
  25+ 9384 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9387 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9389 ED B0        	LDIR
  28+ 938B 01 FF 02     	LD BC,767
  29+ 938E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 938F ED B0        	LDIR
  31+ 9391 C9           	ret
  32+ 9392
# file closed: Cls.asm
1054  9392              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9392              ; ******************************************************************************************************************************************************************************************
   2+ 9392              ;
   3+ 9392              ;   22/01/23
   4+ 9392              ;
   5+ 9392              ;	Mov_down
   6+ 9392              ;
   7+ 9392              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9392              ;
   9+ 9392              ;
  10+ 9392 21 06 86     Mov_down ld hl,Ctrl_0
  11+ 9395 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9397              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9397              ; 																	; _ en el caso de que no lo haya.
  14+ 9397 3A F0 85     	ld a,(Vel_down)
  15+ 939A 47           	ld b,a
  16+ 939B 2A DA 85         ld hl,(Posicion_actual)
  17+ 939E CD 74 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 93A1 E6 02        	and 2
  19+ 93A3 28 0F        	jr z,1F
  20+ 93A5
  21+ 93A5              ; Nos encontramos en el último tercio de pantalla.
  22+ 93A5              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 93A5
  24+ 93A5 7C           	ld a,h
  25+ 93A6 FE 57        	cp $57
  26+ 93A8 20 0A        	jr nz,1F
  27+ 93AA 7D           	ld a,l
  28+ 93AB C6 20        	add $20
  29+ 93AD 30 05        	jr nc,1F
  30+ 93AF
  31+ 93AF              ; ------------------------------
  32+ 93AF CD 8A 96     	call Reaparece_arriba
  33+ 93B2              ;	call Reinicio
  34+ 93B2              ; ------------------------------
  35+ 93B2
  36+ 93B2 18 08        	jr 3F
  37+ 93B4 CD B4 90     1 call NextScan
  38+ 93B7 22 DA 85     	ld (Posicion_actual),hl
  39+ 93BA 10 E2            djnz 2B
  40+ 93BC CD A0 96     3 call Genera_coordenadas
  41+ 93BF C9           	ret
  42+ 93C0
  43+ 93C0              ; ******************************************************************************************************************************************************************************************
  44+ 93C0              ;
  45+ 93C0              ;   22/01/23
  46+ 93C0              ;
  47+ 93C0              ;	Mov_up
  48+ 93C0              ;
  49+ 93C0              ; 	Mueve el Sprite hacia arriba.
  50+ 93C0              ;
  51+ 93C0              ;
  52+ 93C0 21 06 86     Mov_up ld hl,Ctrl_0
  53+ 93C3 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 93C5              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 93C5              ; 																		; _ en el caso de que no lo haya.
  56+ 93C5 3A EF 85     	ld a,(Vel_up)
  57+ 93C8 47           	ld b,a
  58+ 93C9 2A DA 85     	ld hl,(Posicion_actual)
  59+ 93CC CD 74 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 93CF A7           	and a
  61+ 93D0 20 10        	jr nz,1F
  62+ 93D2
  63+ 93D2              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 93D2              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 93D2
  66+ 93D2 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 93D3 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 93D5 20 0B            jr nz,1F
  69+ 93D7 7D               ld a,l
  70+ 93D8 D6 20            sub $20
  71+ 93DA 30 06            jr nc,1F
  72+ 93DC 25               dec h
  73+ 93DD
  74+ 93DD              ; -----------------------------
  75+ 93DD CD 7A 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 93E0              ;	call Reinicio
  77+ 93E0              ; -----------------------------
  78+ 93E0
  79+ 93E0 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 93E2 CD C3 90     1 call PreviousScan
  81+ 93E5 22 DA 85     	ld (Posicion_actual),hl
  82+ 93E8 10 E2            djnz 3B
  83+ 93EA CD A0 96     2 call Genera_coordenadas
  84+ 93ED C9           	ret
  85+ 93EE
  86+ 93EE              ; ******************************************************************************************************************************************************************************************
  87+ 93EE              ;
  88+ 93EE              ;	19/10/22
  89+ 93EE              ;
  90+ 93EE              ;	Mov_right.
  91+ 93EE              ;
  92+ 93EE              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 93EE              ;
  94+ 93EE
  95+ 93EE 21 06 86     Mov_right ld hl,Ctrl_0
  96+ 93F1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 93F3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 93F3              ; 																	; _ en el caso de que no lo haya.
  99+ 93F3 3A 06 86     	ld a,(Ctrl_0)
 100+ 93F6 CB 77        	bit 6,a
 101+ 93F8 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 93FA
 103+ 93FA CD 28 96     	call Stop_Amadeus_right
 104+ 93FD C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 93FE 18 4D        	jr 8F
 106+ 9400
 107+ 9400 3A DE 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9403 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9405 20 46        	jr nz,8F
 110+ 9407
 111+ 9407 3A E0 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 940A A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 940B 28 40        	jr z,8F
 114+ 940D
 115+ 940D              ; ---------- ---------- ----------
 116+ 940D              ;
 117+ 940D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 940D
 119+ 940D 3A EE 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 9410 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 9412 28 11        	jr z,1F
 122+ 9414 38 06        	jr c,6F
 123+ 9416 FE 04        	cp 4
 124+ 9418 28 14        	jr z,7F
 125+ 941A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 941C
 127+ 941C              ; ---------- ---------- ----------
 128+ 941C              ;
 129+ 941C              ; Perfiles de velocidad
 130+ 941C              ;
 131+ 941C
 132+ 941C 3A E0 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 941F FE FE        	cp $fe
 134+ 9421 20 2A        	jr nz,8F
 135+ 9423 18 10        	jr 3F
 136+ 9425 3A E0 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9428 FE FD        	cp $fd
 138+ 942A 20 21        	jr nz,8F
 139+ 942C 18 07        	jr 3F
 140+ 942E 3A E0 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 9431 FE FB        	cp $fb
 142+ 9433 20 18        	jr nz,8F
 143+ 9435
 144+ 9435              ; ---------- ---------- ----------
 145+ 9435
 146+ 9435              3
 147+ 9435 CD 68 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9438              ;	call Reinicio
 149+ 9438
 150+ 9438              ; ---------- ---------- ----------
 151+ 9438              ;
 152+ 9438              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9438
 154+ 9438 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 943A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 943B CD 54 94     	call DESPLZ_DER
 157+ 943E C1           	pop bc
 158+ 943F 10 F9        	djnz 5B
 159+ 9441 2A DA 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9444 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9445 22 DA 85     	ld (Posicion_actual),hl
 162+ 9448 CD A0 96     	call Genera_coordenadas
 163+ 944B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 944D
 165+ 944D              ; ---------- ---------- ----------
 166+ 944D
 167+ 944D 2A DA 85     8 ld hl,(Posicion_actual)
 168+ 9450 CD 54 94     	call DESPLZ_DER
 169+ 9453 C9           2 ret
 170+ 9454
 171+ 9454              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9454              ;
 173+ 9454              ;	22/9/22
 174+ 9454              ;
 175+ 9454
 176+ 9454 CD 63 94     DESPLZ_DER call Desplaza_derecha
 177+ 9457 CD AF 94         call modifica_parametros_1er_DESPLZ_2
 178+ 945A CD D8 94         call Ciclo_completo
 179+ 945D 21 06 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9460 CB FE        	set 7,(hl)
 181+ 9462 C9           	ret
 182+ 9463
 183+ 9463              ; ******************************************************************************************************************************************************************************************
 184+ 9463              ;	15/02/23
 185+ 9463              ;
 186+ 9463
 187+ 9463 3A EE 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9466 47           	ld b,a
 189+ 9467 2A E6 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 946A 23           1 inc hl
 191+ 946B 23           	inc hl
 192+ 946C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 946E 22 E6 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9471 CD 50 88     	call Extrae_address
 195+ 9474 22 DC 85     	ld (Puntero_objeto),hl
 196+ 9477
 197+ 9477              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9477
 199+ 9477              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9477              ; Cuántos movimientos hemos hecho ??
 201+ 9477              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9477
 203+ 9477 2A E2 85     7 ld hl,(Indice_Sprite_der)
 204+ 947A EB           	ex de,hl
 205+ 947B A7           	and a
 206+ 947C ED 52        	sbc hl,de
 207+ 947E CB 3D        	srl l
 208+ 9480 3E 08        6 ld a,8
 209+ 9482 95           	sub l
 210+ 9483 30 1E        	jr nc,3F
 211+ 9485
 212+ 9485              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9485              ; B="0".
 214+ 9485
 215+ 9485 04           4 inc b
 216+ 9486 3C           	inc a
 217+ 9487 20 FC        	jr nz,4B
 218+ 9489 78           	ld a,b
 219+ 948A 08           	ex af,af
 220+ 948B 2A E2 85     	ld hl,(Indice_Sprite_der)
 221+ 948E 23           5 inc hl
 222+ 948F 23           	inc hl
 223+ 9490 10 FC        	djnz 5B
 224+ 9492 22 E6 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9495 CD 50 88     	call Extrae_address
 226+ 9498 22 DC 85     	ld (Puntero_objeto),hl
 227+ 949B
 228+ 949B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 949B              ; _(Posicion_actual).
 230+ 949B
 231+ 949B 21 DA 85     	ld hl,Posicion_actual
 232+ 949E 34           	inc (hl)
 233+ 949F 08               ex af,af
 234+ 94A0 6F           	ld l,a
 235+ 94A1 18 DD        	jr 6B
 236+ 94A3
 237+ 94A3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 94A3
 239+ 94A3 47           3 ld b,a
 240+ 94A4 2A E4 85     	ld hl,(Indice_Sprite_izq)
 241+ 94A7 23           2 inc hl
 242+ 94A8 23           	inc hl
 243+ 94A9 10 FC        	djnz 2B
 244+ 94AB 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 94AE C9           8 ret
 246+ 94AF
 247+ 94AF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 94AF              ;
 249+ 94AF              ;	24/7/22
 250+ 94AF              ;
 251+ 94AF              ;	modifica_parametros_1er_DESPLZ_2
 252+ 94AF              ;
 253+ 94AF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 94AF              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 94AF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 94AF
 257+ 94AF 3A E0 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 94B2 A7           	and a
 259+ 94B3 20 1F        	jr nz,1F
 260+ 94B5 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 94B7 32 E0 85         ld (CTRL_DESPLZ),a
 262+ 94BA
 263+ 94BA 21 D9 85     	ld hl,Columns
 264+ 94BD 34           	inc (hl)
 265+ 94BE 3A EC 85     	ld a,(Cuad_objeto)
 266+ 94C1 E6 01        	and 1
 267+ 94C3 28 0F        	jr z,1F
 268+ 94C5 2A DA 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 94C8 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 94C9 22 DA 85     	ld (Posicion_actual),hl
 271+ 94CC CD A0 96     	call Genera_coordenadas
 272+ 94CF CD 34 96     	call Inc_CTRL_DESPLZ
 273+ 94D2 18 03        	jr 2F
 274+ 94D4 CD 34 96     1 call Inc_CTRL_DESPLZ
 275+ 94D7 C9           2 ret
 276+ 94D8
 277+ 94D8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 94D8              ;
 279+ 94D8              ;	24/7/22
 280+ 94D8              ;
 281+ 94D8              ;	Ciclo_completo.
 282+ 94D8              ;
 283+ 94D8              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 94D8              ;
 285+ 94D8              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 94D8              ; 	Decrementamos (Columns).
 287+ 94D8              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 94D8              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 94D8
 290+ 94D8
 291+ 94D8 3A E0 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 94DB FE FF        	cp $ff
 293+ 94DD 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 94DF E6 F0        	and $f0
 295+ 94E1 20 28        	jr nz,3F
 296+ 94E3
 297+ 94E3              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 94E3
 299+ 94E3 3A E0 85     	ld a,(CTRL_DESPLZ)
 300+ 94E6 47           	ld b,a
 301+ 94E7 3E F8        	ld a,$f8
 302+ 94E9 80           	add b
 303+ 94EA 32 E0 85     	ld (CTRL_DESPLZ),a
 304+ 94ED 18 1C        	jr 3F
 305+ 94EF 21 D9 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 94F2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 94F3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 94F4 32 E0 85     	ld (CTRL_DESPLZ),a
 309+ 94F7 3A EC 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 94FA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 94FC 20 0A        	jr nz,2F
 312+ 94FE 2A DA 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 9501 23           	inc hl
 314+ 9502 22 DA 85     	ld (Posicion_actual),hl
 315+ 9505 CD A0 96     	call Genera_coordenadas
 316+ 9508
 317+ 9508              ; Inicia el puntero de Sprite.
 318+ 9508
 319+ 9508 CD 67 88     2 call Inicia_puntero_objeto_der
 320+ 950B C9           3 ret
 321+ 950C
 322+ 950C              ; ******************************************************************************************************************************************************************************************
 323+ 950C              ;
 324+ 950C              ;	15/02/23
 325+ 950C              ;
 326+ 950C              ;	Mov_left.
 327+ 950C              ;
 328+ 950C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 950C              ;
 330+ 950C              Mov_left
 331+ 950C
 332+ 950C 21 06 86     	ld hl,Ctrl_0
 333+ 950F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 9511              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 9511              ; 																	; _ en el caso de que no lo haya.
 336+ 9511 3A 06 86     	ld a,(Ctrl_0)
 337+ 9514 CB 77        	bit 6,a
 338+ 9516 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9518
 340+ 9518 CD 2E 96     	call Stop_Amadeus_left
 341+ 951B C8           	ret z
 342+ 951C 20 4A        	jr nz,8F
 343+ 951E
 344+ 951E 3A DE 85     11 ld a,(Coordenada_X)
 345+ 9521 A7           	and a
 346+ 9522 20 44        	jr nz,8F
 347+ 9524
 348+ 9524 3A E0 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 9527 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9528 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 952A
 352+ 952A              ; ---------- ---------- ----------
 353+ 952A
 354+ 952A 3A ED 85     	ld a,(Vel_left)
 355+ 952D FE 02        	cp 2
 356+ 952F 28 0F        	jr z,1F
 357+ 9531 38 04        	jr c,6F
 358+ 9533 FE 04        	cp 4
 359+ 9535 28 12        	jr z,7F
 360+ 9537
 361+ 9537              ; ---------- ---------- ----------
 362+ 9537
 363+ 9537 3A E0 85     6 ld a,(CTRL_DESPLZ)
 364+ 953A FE F8        	cp $f8
 365+ 953C 20 2A        	jr nz,8F
 366+ 953E 18 10        	jr 4F
 367+ 9540 3A E0 85     1 ld a,(CTRL_DESPLZ)
 368+ 9543 FE F9        	cp $f9
 369+ 9545 20 21        	jr nz,8F
 370+ 9547 18 07        	jr 4F
 371+ 9549 3A E0 85     7 ld a,(CTRL_DESPLZ)
 372+ 954C FE FB        	cp $fb
 373+ 954E 20 18        	jr nz,8F
 374+ 9550
 375+ 9550              ; ---------- ---------- ----------
 376+ 9550
 377+ 9550              4
 378+ 9550 CD 56 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9553              ;	call Reinicio
 380+ 9553
 381+ 9553              ; ---------- ---------- ----------
 382+ 9553
 383+ 9553 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9555 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9556
 386+ 9556              ;	ld hl,(Indice_Sprite_izq)
 387+ 9556              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9556
 389+ 9556 CD 6F 95     	call DESPLZ_IZQ
 390+ 9559 C1           	pop bc
 391+ 955A 10 F9        	djnz 5B
 392+ 955C 2A DA 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 955F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9560 22 DA 85     	ld (Posicion_actual),hl
 395+ 9563 CD A0 96     	call Genera_coordenadas
 396+ 9566 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9568
 398+ 9568              ; ---------- ---------- ----------
 399+ 9568
 400+ 9568              ; Movemos, no hay recolocación.
 401+ 9568
 402+ 9568 2A DA 85     8 ld hl,(Posicion_actual)
 403+ 956B CD 6F 95     	call DESPLZ_IZQ
 404+ 956E C9           2 ret
 405+ 956F
 406+ 956F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 956F              ;
 408+ 956F              ;	22/9/22
 409+ 956F
 410+ 956F              DESPLZ_IZQ
 411+ 956F
 412+ 956F CD 7E 95     	call Desplaza_izquierda
 413+ 9572 CD CA 95         call modifica_parametros_1er_DESPLZ
 414+ 9575 CD F2 95     	call Ciclo_completo_2
 415+ 9578 21 06 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 957B CB BE        	res 7,(hl)
 417+ 957D C9           	ret
 418+ 957E
 419+ 957E              Desplaza_izquierda
 420+ 957E
 421+ 957E 3A ED 85     	ld a,(Vel_left)
 422+ 9581 47           	ld b,a
 423+ 9582 2A E8 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9585 23           1 inc hl
 425+ 9586 23           	inc hl
 426+ 9587 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9589 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 958C CD 50 88     	call Extrae_address
 429+ 958F 22 DC 85     	ld (Puntero_objeto),hl
 430+ 9592
 431+ 9592              ; Modifica (Puntero_DESPLZ_der).
 432+ 9592
 433+ 9592              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9592              ; Cuántos movimientos hemos hecho ??
 435+ 9592              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9592
 437+ 9592 2A E4 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9595 EB           	ex de,hl
 439+ 9596 A7           	and a
 440+ 9597 ED 52        	sbc hl,de
 441+ 9599 CB 3D        	srl l
 442+ 959B 3E 08        6 ld a,8
 443+ 959D 95           	sub l
 444+ 959E 30 1E        	jr nc,3F
 445+ 95A0
 446+ 95A0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 95A0              ; B="0".
 448+ 95A0
 449+ 95A0 04           4 inc b
 450+ 95A1 3C           	inc a
 451+ 95A2 20 FC        	jr nz,4B
 452+ 95A4 78           	ld a,b
 453+ 95A5 08           	ex af,af
 454+ 95A6 2A E4 85     	ld hl,(Indice_Sprite_izq)
 455+ 95A9 23           5 inc hl
 456+ 95AA 23           	inc hl
 457+ 95AB 10 FC        	djnz 5B
 458+ 95AD 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 95B0 CD 50 88     	call Extrae_address
 460+ 95B3 22 DC 85     	ld (Puntero_objeto),hl
 461+ 95B6
 462+ 95B6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 95B6              ; _(Posicion_actual).
 464+ 95B6
 465+ 95B6 21 DA 85     	ld hl,Posicion_actual
 466+ 95B9 35           	dec (hl)
 467+ 95BA 08           	ex af,af
 468+ 95BB 6F           	ld l,a
 469+ 95BC 18 DD        	jr 6B
 470+ 95BE
 471+ 95BE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 95BE
 473+ 95BE 47           3 ld b,a
 474+ 95BF 2A E2 85     	ld hl,(Indice_Sprite_der)
 475+ 95C2 23           2 inc hl
 476+ 95C3 23           	inc hl
 477+ 95C4 10 FC        	djnz 2B
 478+ 95C6 22 E6 85     	ld (Puntero_DESPLZ_der),hl
 479+ 95C9 C9           8 ret
 480+ 95CA
 481+ 95CA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 95CA              ;
 483+ 95CA              ;	modifica_parametros_1er_DESPLZ
 484+ 95CA              ;
 485+ 95CA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 95CA              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 95CA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 95CA
 489+ 95CA 3A E0 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 95CD A7           	and a
 491+ 95CE 20 1E        	jr nz,1F
 492+ 95D0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 95D1 32 E0 85         ld (CTRL_DESPLZ),a
 494+ 95D4 21 D9 85     	ld hl,Columns
 495+ 95D7 34           	inc (hl)
 496+ 95D8 3A EC 85     	ld a,(Cuad_objeto)
 497+ 95DB E6 01        	and 1
 498+ 95DD 20 0F        	jr nz,1F
 499+ 95DF 2A DA 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 95E2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 95E3 22 DA 85     	ld (Posicion_actual),hl
 502+ 95E6 CD A0 96     	call Genera_coordenadas
 503+ 95E9 CD 45 96     	call Dec_CTRL_DESPLZ
 504+ 95EC 18 03        	jr 2F
 505+ 95EE CD 45 96     1 call Dec_CTRL_DESPLZ
 506+ 95F1 C9           2 ret
 507+ 95F2
 508+ 95F2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 95F2
 510+ 95F2 3A E0 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 95F5 FE F7        	cp $f7
 512+ 95F7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 95F9 30 2C        	jr nc,3F
 514+ 95FB
 515+ 95FB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 95FB
 517+ 95FB 06 00        	ld b,0
 518+ 95FD 04           4 inc b
 519+ 95FE 3C           	inc a
 520+ 95FF FE F7        	cp $f7
 521+ 9601 20 FA        	jr nz,4B
 522+ 9603 3E FF        	ld a,$ff
 523+ 9605 90           	sub b
 524+ 9606 32 E0 85     	ld (CTRL_DESPLZ),a
 525+ 9609 18 1C        	jr 3F
 526+ 960B
 527+ 960B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 960B
 529+ 960B 21 D9 85     1 ld hl,Columns
 530+ 960E 35           	dec (hl)
 531+ 960F AF           	xor a
 532+ 9610 32 E0 85     	ld (CTRL_DESPLZ),a
 533+ 9613 3A EC 85     	ld a,(Cuad_objeto)
 534+ 9616 E6 01        	and 1
 535+ 9618 28 0A        	jr z,2F
 536+ 961A 2A DA 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 961D 2B           	dec hl
 538+ 961E 22 DA 85     	ld (Posicion_actual),hl
 539+ 9621 CD A0 96     	call Genera_coordenadas
 540+ 9624
 541+ 9624              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9624
 543+ 9624 CD 7A 88     2 call Inicia_puntero_objeto_izq
 544+ 9627 C9           3 ret
 545+ 9628
 546+ 9628              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9628              ;
 548+ 9628              ;	19/10/22
 549+ 9628              ;
 550+ 9628              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9628              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9628
 553+ 9628 3A DE 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 962B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 962D C9           	ret
 556+ 962E
 557+ 962E              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 962E              ;
 559+ 962E              ;	19/10/22
 560+ 962E              ;
 561+ 962E              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 962E              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 962E
 564+ 962E 3A DE 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 9631 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 9633 C9           	ret
 567+ 9634
 568+ 9634              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 9634              ;
 570+ 9634              ;	24/7/22
 571+ 9634              ;
 572+ 9634              ;	Inc_CTRL_DESPLZ
 573+ 9634              ;
 574+ 9634              ;
 575+ 9634              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 9634
 577+ 9634 21 E0 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 9637 3A EE 85     	ld a,(Vel_right)
 579+ 963A A7           	and a
 580+ 963B 28 06        	jr z,1F
 581+ 963D 47           	ld b,a
 582+ 963E 34           3 inc (hl)
 583+ 963F 10 FD        	djnz 3B
 584+ 9641 18 01        	jr 2F
 585+ 9643 34           1 inc (hl)
 586+ 9644 C9           2 ret
 587+ 9645
 588+ 9645              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9645              ;
 590+ 9645              ;	5/2/23
 591+ 9645              ;
 592+ 9645              ;	Dec_CTRL_DESPLZ
 593+ 9645              ;
 594+ 9645              ;
 595+ 9645              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9645
 597+ 9645 21 E0 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9648 3A ED 85     	ld a,(Vel_left)
 599+ 964B A7           	and a
 600+ 964C 28 06        	jr z,1F
 601+ 964E 47           	ld b,a
 602+ 964F 35           3 dec (hl)
 603+ 9650 10 FD        	djnz 3B
 604+ 9652 18 01        	jr 2F
 605+ 9654 35           1 dec (hl)
 606+ 9655 C9           2 ret
 607+ 9656
 608+ 9656              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9656
 610+ 9656 2A DA 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9659 01 1F 00     	ld bc,31
 612+ 965C A7           	and a
 613+ 965D ED 4A        	adc hl,bc
 614+ 965F 22 DA 85     	ld (Posicion_actual),hl
 615+ 9662 21 06 86     	ld hl,Ctrl_0														; $xxx1
 616+ 9665 CB C6        	set 0,(hl)
 617+ 9667 C9           	ret
 618+ 9668
 619+ 9668              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9668
 621+ 9668 2A DA 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 966B 01 1F 00     	ld bc,31
 623+ 966E A7           	and a
 624+ 966F ED 42        	sbc hl,bc
 625+ 9671 22 DA 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9674 21 06 86     	ld hl,Ctrl_0
 627+ 9677 CB CE        	set 1,(hl)
 628+ 9679 C9           	ret
 629+ 967A
 630+ 967A              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 967A
 632+ 967A 24           Reaparece_abajo inc h
 633+ 967B 01 E0 17     	ld bc,$17e0
 634+ 967E A7           	and a
 635+ 967F ED 4A        	adc hl,bc
 636+ 9681 22 DA 85     	ld (Posicion_actual),hl
 637+ 9684 21 06 86     	ld hl,Ctrl_0
 638+ 9687 CB D6        	set 2,(hl)
 639+ 9689 C9           	ret
 640+ 968A
 641+ 968A              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 968A
 643+ 968A 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 968D A7           	and a
 645+ 968E ED 42        	sbc hl,bc
 646+ 9690 22 DA 85     	ld (Posicion_actual),hl
 647+ 9693 21 06 86     	ld hl,Ctrl_0
 648+ 9696 CB DE        	set 3,(hl)
 649+ 9698 C9           	ret
 650+ 9699
 651+ 9699              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9699
 653+ 9699 2A EA 85     Reinicio ld hl,(Posicion_inicio)
 654+ 969C 22 DA 85     	ld (Posicion_actual),hl
 655+ 969F C9           	ret
# file closed: Direcciones.asm
1055  96A0              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 96A0              ; ------------------------------------------------------------------------
   2+ 96A0              ;
   3+ 96A0              ;	02/04/23
   4+ 96A0              ;
   5+ 96A0              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 96A0              ;	Fila superior "0", Columna izquierda "0".
   7+ 96A0              ;
   8+ 96A0              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 96A0              ;
  10+ 96A0              ;	Modifica: A,BC y DE.
  11+ 96A0
  12+ 96A0 C5           Genera_coordenadas push bc
  13+ 96A1 E5           	push hl
  14+ 96A2 D5           	push de
  15+ 96A3
  16+ 96A3 2A DA 85     	ld hl,(Posicion_actual)
  17+ 96A6
  18+ 96A6 7D           	ld a,l
  19+ 96A7 E6 1F        	and $1f
  20+ 96A9 32 DE 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 96AC
  22+ 96AC CD 74 93     	call calcula_tercio
  23+ 96AF 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 96B0
  25+ 96B0 1E 00        	ld e,0
  26+ 96B2 7D           	ld a,l
  27+ 96B3 E6 E0        	and $e0
  28+ 96B5 28 01        	jr z,1F
  29+ 96B7 04           	inc b
  30+ 96B8
  31+ 96B8 04           1 inc b
  32+ 96B9 05           	dec b
  33+ 96BA 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 96BC              ;														; _ , salimos.
  35+ 96BC 1C           3 inc e
  36+ 96BD D6 20        	sub 32
  37+ 96BF 20 FB        	jr nz,3B
  38+ 96C1 10 F5        	djnz 1B
  39+ 96C3
  40+ 96C3 7B           2 ld a,e
  41+ 96C4 32 DF 85     	ld (Coordenada_y),a
  42+ 96C7
  43+ 96C7 D1           	pop de
  44+ 96C8 E1           	pop hl
  45+ 96C9 C1           	pop bc
  46+ 96CA
  47+ 96CA C9           	ret
  48+ 96CB
  49+ 96CB              ; ------------------------------------------------------------------------
  50+ 96CB              ;	28/03/23
  51+ 96CB              ;
  52+ 96CB              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 96CB              ;	Fila superior "0", Columna izquierda "0".
  54+ 96CB              ;
  55+ 96CB              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 96CB              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 96CB              ;
  58+ 96CB              ;		DE="$120d"
  59+ 96CB              ;
  60+ 96CB              ;		D, (Coordenada_X), Columnas, $12
  61+ 96CB              ;		E, (Coordenada_y), Filas, $0d
  62+ 96CB              ;
  63+ 96CB              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 96CB
  65+ 96CB              ;	Modifica: A,BC y DE.
  66+ 96CB
  67+ 96CB
  68+ 96CB              Genera_coordenadas_disparo
  69+ 96CB
  70+ 96CB              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 96CB
  72+ 96CB 7D           	ld a,l
  73+ 96CC E6 1F        	and $1f
  74+ 96CE 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 96CF CD 74 93     	call calcula_tercio
  76+ 96D2 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 96D3 1E 00        	ld e,0
  78+ 96D5 7D           	ld a,l
  79+ 96D6 E6 E0        	and $e0
  80+ 96D8 28 01        	jr z,1F
  81+ 96DA 04           	inc b
  82+ 96DB 1C           1 inc e
  83+ 96DC D6 20        	sub 32
  84+ 96DE 20 FB        	jr nz,1B
  85+ 96E0 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 96E2 C9           	ret
  87+ 96E3
# file closed: Genera_coordenadas.asm
1056  96E3              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 96E3
   2+ 96E3
   3+ 96E3              ;   11/8/22
   4+ 96E3              ;
   5+ 96E3              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 96E3              ;
   7+ 96E3              ;   Mov_obj.asm
   8+ 96E3              ;
   9+ 96E3              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 96E3              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 96E3              ;
  12+ 96E3              ;   Codificación:
  13+ 96E3              ;
  14+ 96E3              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 96E3
  16+ 96E3              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 96E3
  18+ 96E3 02 40 00     Arriba db 2,%01000000,0
  19+ 96E6 02 80 00     Abajo db 2,%10000000,0
  20+ 96E9 02 20 00     Derecha db 2,%00100000,0
  21+ 96EC 02 10 00     Izquierda db 2,%00010000,0
  22+ 96EF 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 96F3 60 42 60 40
  22+ 96F7 63
  23+ 96F8 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 96FC 22 A3 80 A0
  24+ 9700 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9704 84 A0 83 A0
  25+ 9708 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 970C 80 A3 22 A0
  26+ 9710 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9714 40 60 42 60
  27+ 9718 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 971C
  29+ 971C 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9720 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9724 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9728 84 00
  32+ 972A 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 972E 84 00
  33+ 9730 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9734 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9738 1F 1F 1F 1F
  35+ 973C 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9740 1F 1F 1F 1F
  35+ 9744 1F
  36+ 9745 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9749 2F 2F 2F 2F
  36+ 974D 2F 2F
  37+ 974F 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9753 2F 2F 00
  38+ 9756
  39+ 9756              ; ----- ----- ----- ----- -----
  40+ 9756
  41+ 9756 34 97        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9758 30 97        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 975A EC 96        Indice_mov_Izquierda defw Izquierda
  44+ 975C E9 96        Indice_mov_Derecha defw Derecha
  45+ 975E E6 96        Indice_mov_Abajo defw Abajo
  46+ 9760 E3 96        Indice_mov_Arriba defw Arriba
  47+ 9762 20 97        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9764 24 97        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9766 1C 97        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9768 2A 97        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 976A EF 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 976C              ; ----- ----- ----- ----- -----
  53+ 976C
  54+ 976C 3A 0C 86     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 976F A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9770 28 02            jr z,1F
  57+ 9772 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9774 3A 0D 86     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9777 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9779 32 0D 86         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 977C              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 977C 2A 0A 86         ld hl,(Puntero_mov)
  63+ 977F 7E               ld a,(hl)
  64+ 9780 32 0C 86         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9783 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9784 22 0A 86         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9787
  68+ 9787 3A 0E 86     Decoder ld a,(Repetimos_db)
  69+ 978A A7               and a
  70+ 978B 20 0C            jr nz,12F
  71+ 978D 2A 0A 86         ld hl,(Puntero_mov)
  72+ 9790 7E               ld a,(hl)
  73+ 9791 A7               and a
  74+ 9792 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9794 E6 0F            and $0f
  76+ 9796 32 0E 86         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9799              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9799 2A 0A 86     12 ld hl,(Puntero_mov)
  79+ 979C CB 7E            bit 7,(hl)
  80+ 979E 28 03            jr z,2F
  81+ 97A0 CD 92 93         call Mov_down
  82+ 97A3 2A 0A 86     2 ld hl, (Puntero_mov)
  83+ 97A6 CB 76            bit 6,(hl)
  84+ 97A8 28 03            jr z,3F
  85+ 97AA CD C0 93         call Mov_up
  86+ 97AD 2A 0A 86     3 ld hl, (Puntero_mov)
  87+ 97B0 CB 6E            bit 5,(hl)
  88+ 97B2 28 03            jr z,4F
  89+ 97B4 CD EE 93         call Mov_right
  90+ 97B7 2A 0A 86     4 ld hl, (Puntero_mov)
  91+ 97BA CB 66            bit 4,(hl)
  92+ 97BC 28 03            jr z,5F
  93+ 97BE CD 0C 95         call Mov_left
  94+ 97C1
  95+ 97C1              ; ---------- --------- --------- ---------- ----------
  96+ 97C1
  97+ 97C1 3A 0E 86     5 ld a,(Repetimos_db)
  98+ 97C4 A7               and a
  99+ 97C5 28 07            jr z,6F
 100+ 97C7 3D               dec a
 101+ 97C8 32 0E 86         ld (Repetimos_db),a
 102+ 97CB 28 01            jr z,6f
 103+ 97CD C9           11 ret
 104+ 97CE 21 0C 86     6 ld hl,Contador_db_mov
 105+ 97D1 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 97D2 2A 0A 86         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 97D5 23               inc hl
 108+ 97D6 22 0A 86         ld (Puntero_mov),hl
 109+ 97D9 18 F2            jr 11B
 110+ 97DB 2A 08 86     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 97DE 3A 0D 86         ld a,(Incrementa_puntero)
 112+ 97E1 47               ld b,a
 113+ 97E2 23           8 inc hl
 114+ 97E3 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 97E5 5E               ld e,(hl)
 116+ 97E6 23               inc hl
 117+ 97E7 56               ld d,(hl)
 118+ 97E8 EB               ex de,hl
 119+ 97E9 22 0A 86         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 97EC 18 DF            jr 11B
 121+ 97EE
 122+ 97EE              ; ---------- --------- --------- ---------- ----------
 123+ 97EE              ;
 124+ 97EE              ;   11/8/22
 125+ 97EE              ;
 126+ 97EE              ;   Prepara_Puntero_mov
 127+ 97EE
 128+ 97EE E5           Prepara_Puntero_mov push hl
 129+ 97EF D5               push de
 130+ 97F0 2A 08 86         ld hl,(Puntero_indice_mov)
 131+ 97F3 5E               ld e,(hl)
 132+ 97F4 23               inc hl
 133+ 97F5 56               ld d,(hl)
 134+ 97F6 EB               ex de,hl
 135+ 97F7 22 0A 86         ld (Puntero_mov),hl
 136+ 97FA D1               pop de
 137+ 97FB E1               pop hl
 138+ 97FC C9               ret
 139+ 97FD
 140+ 97FD              ; ---------- --------- --------- ---------- ----------
 141+ 97FD              ;
 142+ 97FD              ;   11/8/22
 143+ 97FD              ;
 144+ 97FD              ;   Reinicia_el_movimiento
 145+ 97FD
 146+ 97FD CD EE 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9800 AF               xor a
 148+ 9801 32 0C 86         ld (Contador_db_mov),a
 149+ 9804 32 0D 86         ld (Incrementa_puntero),a
 150+ 9807 C3 6C 97         jp Movimiento
 151+ 980A C9               ret
 152+ 980B              ; ---------- --------- --------- ---------- ----------
 153+ 980B
 154+ 980B
 155+ 980B
 156+ 980B
 157+ 980B
 158+ 980B
 159+ 980B
 160+ 980B
 161+ 980B
 162+ 980B
 163+ 980B
 164+ 980B
 165+ 980B
 166+ 980B
 167+ 980B
 168+ 980B
 169+ 980B
 170+ 980B
# file closed: Patrones_de_mov.asm
1057  980B              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 980B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 980B              ;
   3+ 980B              ;	3/1/23
   4+ 980B              ;
   5+ 980B              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 980B
   7+ 980B              ;	ADC HL,SP	LD (addr),SP
   8+ 980B              ;	ADD HL,SP	LD SP,(addr)
   9+ 980B              ;	ADD IX,SP	LD SP,nn
  10+ 980B              ; 	ADD IY,SP	LD SP,HL
  11+ 980B              ;				LD SP,IX
  12+ 980B              ;	DEC SP		LD SP,IY
  13+ 980B
  14+ 980B              ;	EX (SP),HL
  15+ 980B              ;	EX (SP),IX
  16+ 980B              ;	EX (SP),IY
  17+ 980B
  18+ 980B              ;	INC SP
  19+ 980B
  20+ 980B
  21+ 980B                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 1C 86      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 13 86         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 22 86         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 20 86     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 22 86         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 20 86     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 1C 86  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1058  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1059  7FE6
1060  7FE6              	SAVESNA "Pruebas.sna", START
1061  7FE6
1062  7FE6
1063  7FE6
# file closed: Banco_de_pruebas.asm
