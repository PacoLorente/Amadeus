# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82ea
  60  82EA
  61  82EA F5           	push af
  62  82EB E5           	push hl
  63  82EC
  64  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82EC 21 2F 8C     	ld hl,Ctrl_3
  66  82EF CB 46        	bit 0,(hl)
  67  82F1 28 FE        	jr z,$
  68  82F3              ;! -------------------
  69  82F3
  70  82F3              ; Disparos.
  71  82F3
  72  82F3 CD 8D A1     	call Pinta_disparos_Amadeus
  73  82F6 CD 20 9F     	call Pinta_disparos_Entidades
  74  82F9
  75  82F9              ; Shield -----------------------
  76  82F9
  77  82F9              Temporizacion_shield
  78  82F9
  79  82F9 21 59 8C     	ld hl,Shield
  80  82FC 7E           	ld a,(hl)
  81  82FD A7           	and a
  82  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8300
  84  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8301
  86  8301 23           	inc hl
  87  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  8303
  89  8303 20 17        	jr nz,Incrementa_FRAMES
  90  8305
  91  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  8305
  93  8305              Cambio_de_estado
  94  8305
  95  8305              ;	Indica cambio de estado.
  96  8305
  97  8305 23           	inc hl						;	Sitúa en (Shield_3).
  98  8306
  99  8306 CB 5E        	bit 3,(hl)
 100  8308 28 05        	jr z,2F
 101  830A
 102  830A CD 30 91     	call Inicia_Shield
 103  830D
 104  830D 18 0D        	jr Incrementa_FRAMES
 105  830F
 106  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8311
 108  8311              ;	Carga en (Shield_2) la siguiente temporización.
 109  8311
 110  8311 2A 57 8C     	ld hl,(Puntero_datos_shield)
 111  8314 23           	inc hl
 112  8315 22 57 8C     	ld (Puntero_datos_shield),hl
 113  8318 7E           	ld a,(hl)
 114  8319 32 5A 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  831C
 116  831C              Incrementa_FRAMES
 117  831C
 118  831C 2A 78 5C     	ld hl,(FRAMES)
 119  831F 23           	inc hl
 120  8320 22 78 5C     	ld (FRAMES),hl
 121  8323
 122  8323 7C           	ld a,h
 123  8324 B5           	or l
 124  8325 20 04        	jr nz,1F
 125  8327
 126  8327 21 7A 5C     	ld hl,FRAMES_3
 127  832A 34           	inc (hl)
 128  832B
 129  832B D5           1 push de
 130  832C C5           	push bc
 131  832D
 132  832D CD 40 91     	call Actualiza_pantalla
 133  8330
 134  8330 C1           	pop bc
 135  8331 D1           	pop de
 136  8332 E1           	pop hl
 137  8333 F1           	pop af
 138  8334
 139  8334 FB           	ei
 140  8335
 141  8335 C9           	ret
 142  8336
 143  8336              ; --------------------------------------------------------------------------------
 144  8336
 145  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 148  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D A9 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA9
  19+ 8BA9 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAA 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB2 01 02
  22+ 8BB4 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB8 01 02
  23+ 8BBA
# file closed: Niveles.asm
 149  8BBA
 150  8BBA              ; --------------------------------------------------------------------------------
 151  8BBA              ;
 152  8BBA              ; 12/05/24
 153  8BBA              ;
 154  8BBA              ; Parámetros DRAW.
 155  8BBA              ;
 156  8BBA
 157  8BBA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BBA
 159  8BBA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BBB              ;															- Patrón de movimiento.
 161  8BBB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BBC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BBD
 164  8BBD 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BBE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BBE
 167  8BBE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BBE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BBE              ; Ejemplos.
 170  8BBE
 171  8BBE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BBE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BBE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BBE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BBE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BBE
 177  8BBE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BBF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BBF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BBF
 181  8BBF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BC1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BC1
 184  8BC1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC3
 186  8BC3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC3
 188  8BC3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BC5              ;														; _palabras que componen el "movimiento_masticado".
 190  8BC5
 191  8BC5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BC5
 193  8BC5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BC6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BC6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BC6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BC6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BC6
 199  8BC6 00           Ctrl_2 db 0
 200  8BC7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BC7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BC7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BC7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BC7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BC7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BC7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BC7              ;
 208  8BC7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BC7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BC7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BC7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BC7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BC7              ;														BIT 4, ???
 214  8BC7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BC7
 216  8BC7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BC8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BC8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BC8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BC8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BC8              ;
 222  8BC8              ; 														DESCRIPCIÖN:
 223  8BC8              ;
 224  8BC8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BC8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BC8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BC8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BC8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BC8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BC8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BC8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BC8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BC8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BC8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BC8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BC8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BC8              ;
 238  8BC8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BC8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BC8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BC8
 242  8BC8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BC8
 244  8BC8 00           Filas db 0												; Filas. [DRAW]
 245  8BC9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BCA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BCC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BCE
 249  8BCE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BCE
 251  8BCE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BCF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BCF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BCF
 255  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BCF
 257  8BCF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BCF              ;
 259  8BCF              ;	COLORES: 0 ..... NEGRO
 260  8BCF              ;    		 1 ..... AZUL
 261  8BCF              ; 			 2 ..... ROJO
 262  8BCF              ;			 3 ..... MAGENTA
 263  8BCF              ; 			 4 ..... VERDE
 264  8BCF              ; 			 5 ..... CIAN
 265  8BCF              ;			 6 ..... AMARILLO
 266  8BCF              ; 			 7 ..... BLANCO
 267  8BCF
 268  8BCF 00 00        Indice_Sprite_der defw 0
 269  8BD1 00 00        Indice_Sprite_izq defw 0
 270  8BD3 00 00        Puntero_DESPLZ_der defw 0
 271  8BD5 00 00        Puntero_DESPLZ_izq defw 0
 272  8BD7
 273  8BD7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BD9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BDA 00           Columnas db 0
 276  8BDB 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BDD              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BDD 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BDE
 280  8BDE              ; variables de control general.
 281  8BDE
 282  8BDE 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BDF
 284  8BDF              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BDF
 286  8BDF              Perfiles_de_velocidad
 287  8BDF
 288  8BDF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BE0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BE1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE3
 293  8BE3              ; Contadores de 16 bits.
 294  8BE3
 295  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BE7 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BE9 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BEB
 300  8BEB              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BEB
 302  8BEB 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BED 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BEF 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BF1              ;
 306  8BF1              ;
 307  8BF1 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF2              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF2              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF2 00           Incrementa_puntero_backup db 0
 311  8BF3 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF4              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF4 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BF5 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BF6 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BF7              ;
 317  8BF7              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BF7              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BF7              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BF7              ;
 321  8BF7              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BF7              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BF7              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BF7              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BF7              ;
 326  8BF7              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BF7              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BF7              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BF7
 330  8BF7 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BF8
 332  8BF8              ;														DESCRIPCIÓN:
 333  8BF8              ;
 334  8BF8              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BF8              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BF8              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BF8              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BF8              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BF8              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BF8
 341  8BF8              ;														BIT 3, Recarga de nueva oleada.
 342  8BF8              ;														BIT 4, Recarga de nueva oleada.
 343  8BF8              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BF8              ;														BIT 6, **** Frame completo.
 345  8BF8              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BF8
 347  8BF8 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BFA              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BFA              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BFA              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BFA
 352  8BFA              ; Gestión de ENTIDADES y CAJAS.
 353  8BFA
 354  8BFA 00 00        Puntero_store_caja defw 0
 355  8BFC 00 00        Puntero_restore_caja defw 0
 356  8BFE 00 00        Indice_restore_caja defw 0
 357  8C00 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8C01 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C02 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C03
 361  8C03 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C05 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C07              ;														; _ puntero (Indice_entidades).
 364  8C07
 365  8C07              ;---------------------------------------------------------------------------------------------------------------
 366  8C07              ;
 367  8C07              ;	13/10/24
 368  8C07              ;
 369  8C07              ;	Álbumes.
 370  8C07
 371  8C07 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C09              ;														; _variable para almacenar lo posición del puntero_
 373  8C09              ; 														; _de pila, SP.
 374  8C09 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C0B              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C0B
 377  8C0B              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C0B
 379  8C0B 00 00        Album_de_pintado defw 0
 380  8C0D 00 00        Album_de_borrado defw 0
 381  8C0F 00 00        Album_de_pintado_Amadeus defw 0
 382  8C11 00 00        Album_de_borrado_Amadeus defw 0
 383  8C13
 384  8C13 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C15 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C17
 387  8C17 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C19 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C1B
 390  8C1B
 391  8C1B 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C1D
 393  8C1D 00           Num_de_bytes_album_de_disparos db 0
 394  8C1E 00           Num_de_bytes_album_de_disparos_borrado db 0
 395  8C1F
 396  8C1F 07           Numero_de_disparos_de_entidades db 7
 397  8C20
 398  8C20 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 399  8C21 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 400  8C22
 401  8C22 00 00        Techo_Scanlines_album defw 0
 402  8C24 00 00        Techo_Scanlines_album_2 defw 0
 403  8C26 00           Switch db 0
 404  8C27 00 00        Techo defw 0
 405  8C29 00 00        Scanlines_album_SP defw 0
 406  8C2B 00 89        India_SP defw Tabla_de_pintado
 407  8C2D 03 89        India_2_SP defw Tabla_de_pintado+3
 408  8C2F
 409  8C2F 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 410  8C30              ;
 411  8C30              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 412  8C30              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 413  8C30              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 414  8C30              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 415  8C30              ;																Habilita el borrado/pintado de sprites.
 416  8C30              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 417  8C30              ;																_ a la baja.
 418  8C30              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 419  8C30              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 420  8C30              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 421  8C30              ; 																_ el último frame de la explosión de nuestra nave.
 422  8C30              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 423  8C30              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 424  8C30
 425  8C30 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8C31              ;
 427  8C31              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8C31              ;
 429  8C31              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8C31              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8C31              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8C31              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8C31              ;
 434  8C31              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8C31              ;															_ masticados ya generados.
 436  8C31              ;
 437  8C31              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8C31              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8C31              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8C31              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8C31
 442  8C31 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 443  8C32
 444  8C32
 445  8C32              ; Gestión de Disparos.
 446  8C32
 447  8C32 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 448  8C34 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 449  8C36 00           Impacto2 db 0											; Byte de control de impactos.
 450  8C37
 451  8C37              ;
 452  8C37              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 453  8C37              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 454  8C37              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 455  8C37              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 456  8C37
 457  8C37
 458  8C37
 459  8C37
 460  8C37
 461  8C37
 462  8C37
 463  8C37 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 464  8C39              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 465  8C39              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 466  8C39
 467  8C39 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 468  8C3B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 469  8C3B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 470  8C3E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 471  8C3E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 472  8C41              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 473  8C41
 474  8C41              ;---------------------------------------------------------------------------------------------------------------
 475  8C41
 476  8C41              ; Relojes y temporizaciones.
 477  8C41
 478  8C41 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 479  8C42 05           Clock_explosion_Amadeus db 5
 480  8C43 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 481  8C44
 482  8C44 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 483  8C46 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 484  8C48 00           Numero_rnd_disparos db 0
 485  8C49
 486  8C49 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 487  8C4B 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 488  8C4C              ;														; Repite la oleada de entidades.
 489  8C4C A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 490  8C4D A0           CLOCK_disparos_de_entidades db $a0
 491  8C4E
 492  8C4E              ;---------------------------------------------------------------------------------------------------------------
 493  8C4E
 494  8C4E              ; Gestión de NIVELES.
 495  8C4E
 496  8C4E 00           Nivel db 0												; Nivel actual del juego.
 497  8C4F 00 00        Puntero_indice_NIVELES defw 0
 498  8C51 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 499  8C53              ; 														; _ que definen el NIVEL.
 500  8C53
 501  8C53              ; ---------------------------------------------------------------------------------------------------------------
 502  8C53
 503  8C53              ; Temporizaciones Shield.
 504  8C53
 505  8C53 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 506  8C57 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 507  8C59 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 508  8C5A 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 509  8C5B 00           Shield_3 db 0
 510  8C5C
 511  8C5C 06           Lives db 6
 512  8C5D
 513  8C5D              ; 	INICIO  *************************************************************************************************************************************************************************
 514  8C5D              ;
 515  8C5D              ;	5/1/24
 516  8C5D
 517  8C5D              START
 518  8C5D
 519  8C5D 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 520  8C60 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 521  8C62 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 522  8C64 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 523  8C66 F3           	DI
 524  8C67
 525  8C67              ; Limpiamos pantalla.
 526  8C67
 527  8C67 3E 07        	ld a,%00000111
 528  8C69 CD CD 94     	call Cls
 529  8C6C CD 25 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 530  8C6F
 531  8C6F              ; INICIALIZACIÓN.
 532  8C6F
 533  8C6F 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 534  8C71 CD 72 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 535  8C74
 536  8C74 CD BA 8E     	call Extrae_numero_aleatorio_y_avanza
 537  8C77
 538  8C77 6F           	ld l,a
 539  8C78 26 00        	ld h,0
 540  8C7A 22 49 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 541  8C7D
 542  8C7D              ;	Inicializa 1er Nivel.
 543  8C7D
 544  8C7D 21 9B 8B     	ld hl,Indice_de_niveles
 545  8C80 22 4F 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 546  8C83 CD A2 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 547  8C86              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 548  8C86              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 549  8C86              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 550  8C86
 551  8C86              ;	Inicia los álbumes de líneas.
 552  8C86
 553  8C86 CD 73 90     	call Inicia_albumes_de_lineas
 554  8C89              ;
 555  8C89 CD 83 90     	call Inicia_albumes_de_lineas_Amadeus
 556  8C8C CD 90 90     	call Inicia_albumes_de_disparos
 557  8C8F
 558  8C8F CD E7 92     4 call Inicia_Entidades
 559  8C92 CD 4A 93     	call Inicia_Amadeus
 560  8C95
 561  8C95              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 562  8C95              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 563  8C95              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 564  8C95
 565  8C95 11 74 89     	ld de,Amadeus_BOX
 566  8C98 CD 9D 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 567  8C9B CD 8D 93     	call Limpiamos_bandeja_DRAW
 568  8C9E
 569  8C9E              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 570  8C9E
 571  8C9E 06 3C        	ld b,60
 572  8CA0 CD 73 9D     2 call Amadeus_a_izquierda
 573  8CA3 10 FB        	djnz 2B
 574  8CA5
 575  8CA5 CD 51 90     	call Genera_datos_de_impresion_Amadeus
 576  8CA8
 577  8CA8              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 578  8CA8
 579  8CA8 CD AC 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 580  8CAB
 581  8CAB CD 30 91     	call Inicia_Shield
 582  8CAE
 583  8CAE 2A 29 8C     6 ld hl,(Scanlines_album_SP)
 584  8CB1 22 22 8C     	ld (Techo_Scanlines_album),hl
 585  8CB4
 586  8CB4 2A 0D 8C     	ld hl,(Album_de_borrado)
 587  8CB7 22 29 8C     	ld (Scanlines_album_SP),hl
 588  8CBA
 589  8CBA 21 00 89     	ld hl,Tabla_de_pintado
 590  8CBD 22 2B 8C     	ld (India_SP),hl
 591  8CC0
 592  8CC0 21 2F 8C     	ld hl,Ctrl_3
 593  8CC3 CB C6        	set 0,(hl) 											; Indica Frame completo.
 594  8CC5 CB D6        	set 2,(hl)
 595  8CC7 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 596  8CC9
 597  8CC9 FB           	ei 													; Ha de apuntar a $5c3a.
 598  8CCA
 599  8CCA 76           	halt
 600  8CCB
 601  8CCB              ; ------------------------------------
 602  8CCB
 603  8CCB              Main
 604  8CCB              ;
 605  8CCB              ; 25/10/24
 606  8CCB
 607  8CCB              ; Gestión de disparos.
 608  8CCB
 609  8CCB CD 8F 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 610  8CCE CD 66 9F     	call Motor_de_disparos_entidades
 611  8CD1 CD 39 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 612  8CD4
 613  8CD4              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 614  8CD4              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 615  8CD4              ; Este hecho lo indica el bit2 de (Impacto2).
 616  8CD4
 617  8CD4 CD D6 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 618  8CD7
 619  8CD7              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 620  8CD7
 621  8CD7 21 4D 8C     	ld hl,CLOCK_disparos_de_entidades
 622  8CDA 35           	dec (hl)
 623  8CDB CC D8 8D     	call z,Autoriza_disparo_de_entidades
 624  8CDE
 625  8CDE 2A 49 8C     	ld hl,(Clock_next_entity)
 626  8CE1 ED 4B 78 5C  	ld bc,(FRAMES)
 627  8CE5 A7           	and a
 628  8CE6 ED 42        	sbc hl,bc
 629  8CE8 20 16        	jr nz,1F
 630  8CEA
 631  8CEA              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 632  8CEA              ; _ (Clock_next_entity) para la siguiente entidad.
 633  8CEA
 634  8CEA 3A 01 8C     	ld a,(Numero_parcial_de_entidades)
 635  8CED 47           	ld b,a
 636  8CEE 3A 02 8C     	ld a,(Entidades_en_curso)
 637  8CF1 B8           	cp b
 638  8CF2 28 0C        	jr z,1F
 639  8CF4 30 0A        	jr nc,1F
 640  8CF6
 641  8CF6 3C           	inc a
 642  8CF7 32 02 8C     	ld (Entidades_en_curso),a
 643  8CFA
 644  8CFA              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 645  8CFA
 646  8CFA CD BA 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 647  8CFD CD D6 8E     	call Define_Clock_next_entity
 648  8D00
 649  8D00 3A 02 8C     1 ld a,(Entidades_en_curso)
 650  8D03 A7           	and a
 651  8D04 CA 7E 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 652  8D07 47           	ld b,a												; No hay entidades que gestionar.
 653  8D08
 654  8D08              ; ( Código que ejecutamos con cada entidad: ).
 655  8D08
 656  8D08              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 657  8D08              ;
 658  8D08              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 659  8D08
 660  8D08 21 00 89     	ld hl,Tabla_de_pintado
 661  8D0B 22 2B 8C     	ld (India_SP),hl
 662  8D0E
 663  8D0E 21 2F 8C     	ld hl,Ctrl_3
 664  8D11 CB D6        	set 2,(hl)
 665  8D13 CD 64 8E     	call Change
 666  8D16
 667  8D16 C5           2 push bc 												; Nº de entidades en curso.
 668  8D17
 669  8D17 CD FD 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 670  8D1A ED 5B 29 8C  	ld de,(Scanlines_album_SP)
 671  8D1E
 672  8D1E              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 673  8D1E
 674  8D1E              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 675  8D1E              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 676  8D1E
 677  8D1E 3A 36 8C     	ld a,(Impacto2)
 678  8D21 CB 5F        	bit 3,a
 679  8D23 C4 D0 A0     	call nz,Compara_con_coordenadas_de_disparo
 680  8D26
 681  8D26 3A BE 8B     	ld a,(Impacto)
 682  8D29 CB 4F        	bit 1,a
 683  8D2B C4 0D 92     	call nz,Genera_explosion
 684  8D2E 20 31        	jr nz,Gestiona_siguiente_entidad
 685  8D30
 686  8D30 3A BE 8B     	ld a,(Impacto)
 687  8D33 A7           	and a
 688  8D34 28 0C        	jr z,3F
 689  8D36
 690  8D36              ; IMPACTO en entidad por colisión con Amadeus.
 691  8D36
 692  8D36              ; 5/7/24
 693  8D36              ; Nota importante:
 694  8D36              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 695  8D36              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 696  8D36              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 697  8D36
 698  8D36 3A 78 89     	ld a,(Impacto_Amadeus)
 699  8D39 A7           	and a
 700  8D3A C4 0D 92     	call nz,Genera_explosion
 701  8D3D 20 22        	jr nz,Gestiona_siguiente_entidad
 702  8D3F
 703  8D3F              ; Falsa colisión !!!
 704  8D3F
 705  8D3F 32 BE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 706  8D42
 707  8D42              ; -------------------------------------------
 708  8D42
 709  8D42 CD 1A 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 710  8D45 CD 44 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 711  8D48 CD 0A 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 712  8D4B CD 0D 95     	call Genera_datos_de_impresion
 713  8D4E CD B0 93     	call Decrementa_Contador_de_mov_masticados
 714  8D51
 715  8D51              ; -------------------------------------------
 716  8D51
 717  8D51              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 718  8D51
 719  8D51 2A BF 8B     	ld hl,(Puntero_de_impresion)
 720  8D54 CD E1 94     	call Genera_coordenadas
 721  8D57
 722  8D57              ; TODO: Generamos disparo ???
 723  8D57
 724  8D57 3A 21 8C     	ld a,(Permiso_de_disparo_Entidades)
 725  8D5A A7           	and a
 726  8D5B C4 ED 8D     	call nz,Entidad_genera_disparo_si_procede
 727  8D5E
 728  8D5E CD 54 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 729  8D61
 730  8D61              Gestiona_siguiente_entidad
 731  8D61
 732  8D61 CD 82 93      	call Store_Restore_cajas
 733  8D64 C1           	pop bc
 734  8D65 10 AF        	djnz 2B
 735  8D67
 736  8D67              ; Hemos gestionado todas las entidades.
 737  8D67              ; ----- ----- -----
 738  8D67
 739  8D67 CD 2E 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 740  8D6A CD 45 8F     	call Ordena_tabla_de_impresion
 741  8D6D CD AC 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 742  8D70
 743  8D70 CD EB 8E     	call Borra_diferencia
 744  8D73
 745  8D73 3A 2F 8C     	ld a,(Ctrl_3)
 746  8D76 CB 5F        	bit 3,a
 747  8D78 20 04        	jr nz,Gestion_de_Amadeus
 748  8D7A
 749  8D7A EB           	ex de,hl
 750  8D7B 71           	ld (hl),c
 751  8D7C 2C           	inc l
 752  8D7D 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 753  8D7E
 754  8D7E              ;! GESTIONA AMADEUS !!!!!!!!!!
 755  8D7E
 756  8D7E              Gestion_de_Amadeus
 757  8D7E
 758  8D7E 21 2F 8C     	ld hl,Ctrl_3
 759  8D81 CB 76        	bit 6,(hl)
 760  8D83 28 13        	jr z,Amadeus_vivo
 761  8D85
 762  8D85              ; Amadeus ha sido destruido.
 763  8D85              ; Decrementa (Temp_new_live).
 764  8D85
 765  8D85 21 43 8C     	ld hl,Temp_new_live
 766  8D88 35           	dec (hl)
 767  8D89 20 26        	jr nz,End_frame
 768  8D8B
 769  8D8B              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 770  8D8B
 771  8D8B 21 5C 8C     	ld hl,Lives
 772  8D8E 35           	dec (hl)
 773  8D8F
 774  8D8F              ;! Fin del juego
 775  8D8F
 776  8D8F F3           	di
 777  8D90 28 FE        	jr z,$
 778  8D92 FB           	ei
 779  8D93
 780  8D93              ; Nueva nave.
 781  8D93
 782  8D93 CD 0A 8E     	call Reinicia_Amadeus
 783  8D96 18 19        	jr End_frame
 784  8D98
 785  8D98              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 786  8D98
 787  8D98              Amadeus_vivo
 788  8D98
 789  8D98 3A 78 89     	ld a,(Impacto_Amadeus)
 790  8D9B A7           	and a
 791  8D9C C4 3D 92     	call nz, Genera_explosion_Amadeus
 792  8D9F 20 10        	jr nz, End_frame
 793  8DA1
 794  8DA1 CD EA 91     	call Teclado
 795  8DA4 21 2F 8C     	ld hl,Ctrl_3
 796  8DA7
 797  8DA7 CB 6E        	bit 5,(hl)
 798  8DA9 28 06        	jr z,End_frame
 799  8DAB
 800  8DAB              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 801  8DAB
 802  8DAB CD 7F 8E     	call Change_Amadeus
 803  8DAE CD 51 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 804  8DB1
 805  8DB1              End_frame
 806  8DB1
 807  8DB1              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 808  8DB1              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 809  8DB1
 810  8DB1 CD F3 9F     	call Genera_datos_de_impresion_disparos_Entidades
 811  8DB4 CD BF A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 812  8DB7 CD 15 A1     	call Calcula_bytes_pintado_disparos
 813  8DBA CD 22 A1     	call Limpia_album_de_pintado_disparos_entidades
 814  8DBD
 815  8DBD              ; ------------ ------------- --------------
 816  8DBD
 817  8DBD 2A 0D 8C     	ld hl,(Album_de_borrado)
 818  8DC0 22 29 8C     	ld (Scanlines_album_SP),hl
 819  8DC3
 820  8DC3 21 2F 8C     	ld hl,Ctrl_3
 821  8DC6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 822  8DC8 CB 9E        	res 3,(hl)
 823  8DCA CB A6        	res 4,(hl)
 824  8DCC
 825  8DCC 21 31 8C     	ld hl,Ctrl_5
 826  8DCF CB 96        	res 2,(hl)
 827  8DD1
 828  8DD1 AF           	xor a
 829  8DD2 D3 FE        	out ($fe),a
 830  8DD4
 831  8DD4 76           	halt
 832  8DD5
 833  8DD5              ; ----------------------------------------
 834  8DD5
 835  8DD5              ;	ld a,(Ctrl_1) 										; Existe Loop?
 836  8DD5              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 837  8DD5 CA CB 8C     	jp z,Main
 838  8DD8
 839  8DD8              ;------------------------------------------
 840  8DD8              ;
 841  8DD8              ;	2/10/24
 842  8DD8
 843  8DD8              Autoriza_disparo_de_entidades
 844  8DD8
 845  8DD8 3E 01        	ld a,1
 846  8DDA 32 21 8C     	ld (Permiso_de_disparo_Entidades),a
 847  8DDD
 848  8DDD 3A 4C 8C     	ld a,(Repone_CLOCK_disparos)
 849  8DE0 FE 19        	cp 25
 850  8DE2 38 02        	jr c,1F
 851  8DE4
 852  8DE4 D6 05        	sub 5
 853  8DE6
 854  8DE6 32 4C 8C     1 ld (Repone_CLOCK_disparos),a
 855  8DE9 32 4D 8C     	ld (CLOCK_disparos_de_entidades),a
 856  8DEC
 857  8DEC C9           	ret
 858  8DED
 859  8DED              ;------------------------------------------
 860  8DED              ;
 861  8DED              ;	14/09/24
 862  8DED              ;
 863  8DED              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 864  8DED
 865  8DED              Entidad_genera_disparo_si_procede
 866  8DED
 867  8DED 2A 46 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 868  8DF0 CB 06        	rlc (hl)
 869  8DF2
 870  8DF2 DC 45 A0     	call c,Genera_disparo_de_entidad_maldosa
 871  8DF5
 872  8DF5 C9           	ret
 873  8DF6
 874  8DF6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 875  8DF6              ;
 876  8DF6              ;	30/09/24
 877  8DF6
 878  8DF6              Actuaiza_sp_de_disparos_de_entidades
 879  8DF6
 880  8DF6 2A 46 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 881  8DF9 23           	inc hl
 882  8DFA 22 46 8C     	ld (Puntero_num_aleatorios_disparos),hl
 883  8DFD
 884  8DFD 11 FD 88     	ld de,Numeros_aleatorios+7
 885  8E00 7B           	ld a,e
 886  8E01 95           	sub l
 887  8E02 C0           	ret nz
 888  8E03
 889  8E03 21 F6 88     1 ld hl,Numeros_aleatorios
 890  8E06 22 46 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 891  8E09 C9           	ret
 892  8E0A
 893  8E0A              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 894  8E0A              ;
 895  8E0A              ;	24/07/24
 896  8E0A
 897  8E0A              Reinicia_Amadeus
 898  8E0A
 899  8E0A              ;	Reinicia posición y estado.
 900  8E0A
 901  8E0A 21 CF 50     	ld hl,$50cf
 902  8E0D 22 79 89     	ld (p.imp.amadeus),hl
 903  8E10 21 F0 E0     	ld hl,$e0f0
 904  8E13 22 7B 89     	ld (Pamm_Amadeus),hl
 905  8E16 21 3D 00     	ld hl,$003d
 906  8E19 22 7D 89     	ld (Comm_Amadeus),hl
 907  8E1C
 908  8E1C              ;	limpiamos el álbum de borrado.
 909  8E1C
 910  8E1C 2A 11 8C     	ld hl,(Album_de_borrado_Amadeus)
 911  8E1F
 912  8E1F AF           	xor a
 913  8E20 77           	ld (hl),a
 914  8E21
 915  8E21 E5           	push hl
 916  8E22 D1           	pop de
 917  8E23 13           	inc de
 918  8E24
 919  8E24 01 23 00     	ld bc,35
 920  8E27 ED B0        	ldir
 921  8E29
 922  8E29 CD 51 90     	call Genera_datos_de_impresion_Amadeus
 923  8E2C
 924  8E2C              ;	Reinicia temporizaciones.
 925  8E2C
 926  8E2C CD 30 91     	call Inicia_Shield
 927  8E2F
 928  8E2F 3E 5A        	ld a,90
 929  8E31 32 59 8C     	ld (Shield),a
 930  8E34
 931  8E34 3E 64        	ld a,100
 932  8E36 32 43 8C     	ld (Temp_new_live),a
 933  8E39
 934  8E39              ; 	Restauramos el FLAG: Amadeus vivo.
 935  8E39
 936  8E39 21 2F 8C     	ld hl,Ctrl_3
 937  8E3C CB B6        	res 6,(hl)
 938  8E3E
 939  8E3E              ;	Fuerza la impresión de la nave en el siguiente frame.
 940  8E3E
 941  8E3E 21 2F 8C      	ld hl,Ctrl_3
 942  8E41 CB EE        	set 5,(hl)
 943  8E43
 944  8E43 C9           	ret
 945  8E44
 946  8E44              ; --------------------------------------------------------------------------------------------------------------
 947  8E44              ;
 948  8E44              ;	12/05/24
 949  8E44
 950  8E44 3A C5 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 951  8E47 CB 27        	sla a
 952  8E49 32 C5 8B     	ld (Velocidad),a
 953  8E4C E6 10        	and $10
 954  8E4E C8           	ret z
 955  8E4F
 956  8E4F              ; Restaura (Velocidad) a razón del nº de vueltas.
 957  8E4F
 958  8E4F 3A BD 8B     	ld a,(Contador_de_vueltas)
 959  8E52 CB 2F        	sra a
 960  8E54 CB 2F        	sra a
 961  8E56 32 C5 8B     	ld (Velocidad),a
 962  8E59
 963  8E59 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 964  8E5C 23           	inc hl
 965  8E5D 23           	inc hl
 966  8E5E 23           	inc hl
 967  8E5F 23           	inc hl
 968  8E60 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 969  8E63
 970  8E63 C9           	ret
 971  8E64
 972  8E64              ; --------------------------------------------------------------------------------------------------------------
 973  8E64              ;
 974  8E64              ;	25/08/24
 975  8E64
 976  8E64              Change
 977  8E64
 978  8E64 3A 26 8C     	ld a,(Switch)
 979  8E67 EE 01        	xor 1
 980  8E69 32 26 8C     	ld (Switch),a
 981  8E6C 2A 0B 8C     	ld hl,(Album_de_pintado)
 982  8E6F ED 5B 0D 8C  	ld de,(Album_de_borrado)
 983  8E73 EB           	ex de,hl
 984  8E74 22 0B 8C     	ld (Album_de_pintado),hl
 985  8E77 22 29 8C     	ld (Scanlines_album_SP),hl
 986  8E7A ED 53 0D 8C  	ld (Album_de_borrado),de
 987  8E7E C9           	ret
 988  8E7F
 989  8E7F              Change_Amadeus
 990  8E7F
 991  8E7F 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
 992  8E82 ED 5B 11 8C  	ld de,(Album_de_borrado_Amadeus)
 993  8E86 EB           	ex de,hl
 994  8E87 22 0F 8C     	ld (Album_de_pintado_Amadeus),hl
 995  8E8A ED 53 11 8C  	ld (Album_de_borrado_Amadeus),de
 996  8E8E C9           	ret
 997  8E8F
 998  8E8F              Change_Disparos
 999  8E8F
1000  8E8F              ; Álbumes de Amadeus.
1001  8E8F
1002  8E8F 2A 13 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1003  8E92 ED 5B 15 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1004  8E96 EB           	ex de,hl
1005  8E97 22 13 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1006  8E9A ED 53 15 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1007  8E9E CD 0A A1     	call Limpia_album_de_pintado_disparos_Amadeus
1008  8EA1
1009  8EA1              ; Álbumes de entidades.
1010  8EA1
1011  8EA1 2A 17 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1012  8EA4 ED 5B 19 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1013  8EA8 EB           	ex de,hl
1014  8EA9 22 17 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1015  8EAC ED 53 19 8C  	ld (Album_de_borrado_disparos_Entidades),de
1016  8EB0 22 1B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1017  8EB3
1018  8EB3 3A 1D 8C     	ld a,(Num_de_bytes_album_de_disparos)
1019  8EB6 32 1E 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1020  8EB9
1021  8EB9 C9           	ret
1022  8EBA
1023  8EBA              ; ------------------------------------
1024  8EBA              ;
1025  8EBA              ; 1/05/24
1026  8EBA
1027  8EBA              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1028  8EBA              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1029  8EBA
1030  8EBA              ;	DESTRUYE: HL,DE,A
1031  8EBA              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1032  8EBA
1033  8EBA              ;	Variables implicadas: (RND_SP).
1034  8EBA
1035  8EBA              Extrae_numero_aleatorio_y_avanza
1036  8EBA
1037  8EBA 21 00 89     	ld hl,Tabla_de_pintado
1038  8EBD EB           	ex de,hl
1039  8EBE 2A 44 8C     	ld hl,(RND_SP)
1040  8EC1 EB           	ex de,hl
1041  8EC2 A7           	and a
1042  8EC3 ED 52        	sbc hl,de
1043  8EC5
1044  8EC5 2A 44 8C     	ld hl,(RND_SP)
1045  8EC8 20 06        	jr nz,1F
1046  8ECA
1047  8ECA              ; Sitúa HL al principio de la tabla de nº aleatorios.
1048  8ECA
1049  8ECA 21 F6 88     	ld hl,Numeros_aleatorios
1050  8ECD 22 44 8C     	ld (RND_SP),HL
1051  8ED0
1052  8ED0              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1053  8ED0
1054  8ED0 7E           1 ld a,(hl)
1055  8ED1 23           	inc hl
1056  8ED2 22 44 8C     	ld (RND_SP),hl
1057  8ED5 C9           	ret
1058  8ED6
1059  8ED6              ; ------------------------------------
1060  8ED6              ;
1061  8ED6              ; 1/05/24
1062  8ED6
1063  8ED6              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1064  8ED6              ; (1 a 4 segundos).
1065  8ED6              ; Actualizamos (Clock_next_entity) con A.
1066  8ED6
1067  8ED6              ;	DESTRUYE: A y B.
1068  8ED6              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1069  8ED6              ;			 Actualiza (Clock_next_entity) con A.
1070  8ED6
1071  8ED6              ;	Variables implicadas: (Clock_next_entity).
1072  8ED6
1073  8ED6              ; Notas:
1074  8ED6
1075  8ED6              ; 	$32 1 seg.
1076  8ED6              ; 	$64 2 seg.
1077  8ED6              ; 	$96 3 seg.
1078  8ED6              ; 	$c8 4 seg.
1079  8ED6              ; 	$fa 5 seg.
1080  8ED6
1081  8ED6              ; $ffff 1310,7 seg, 22 minutos.
1082  8ED6
1083  8ED6              ;	$0100  5 seg. aproximadamente.
1084  8ED6              ;	$0200 10 seg. aproximadamente.
1085  8ED6              ;	$0300 15 seg. aproximadamente.
1086  8ED6              ;	$0400 20 seg. aproximadamente.
1087  8ED6              ;	$0500 25 seg. aproximadamente.
1088  8ED6              ;	$0600 30 seg. aproximadamente.
1089  8ED6
1090  8ED6              Define_Clock_next_entity
1091  8ED6
1092  8ED6 FE 34        	cp $34
1093  8ED8 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1094  8EDA
1095  8EDA              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1096  8EDA
1097  8EDA 4F           3 ld c,a
1098  8EDB 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1099  8EDD 2A 78 5C     	ld hl,(FRAMES)
1100  8EE0 A7           	and a
1101  8EE1 ED 4A        	adc hl,bc
1102  8EE3 22 49 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1103  8EE6 C9           	ret
1104  8EE7
1105  8EE7 3E 34        1 ld a,$34
1106  8EE9 18 EF        	jr 3B
1107  8EEB
1108  8EEB              ; ------------------------------------
1109  8EEB              ;
1110  8EEB              ; 18/03/24
1111  8EEB
1112  8EEB              Borra_diferencia
1113  8EEB
1114  8EEB ED 4B 29 8C  	ld bc,(Scanlines_album_SP)
1115  8EEF
1116  8EEF 3A 26 8C     	ld a,(Switch)
1117  8EF2 A7           	and a
1118  8EF3 28 08        	jr z,2F
1119  8EF5
1120  8EF5 2A 24 8C     	ld hl,(Techo_Scanlines_album_2)
1121  8EF8 11 24 8C     	ld de,Techo_Scanlines_album_2
1122  8EFB 18 06        	jr 3F
1123  8EFD
1124  8EFD 2A 22 8C     2 ld hl,(Techo_Scanlines_album)
1125  8F00 11 22 8C     	ld de,Techo_Scanlines_album
1126  8F03
1127  8F03              ; Diferencia.
1128  8F03
1129  8F03 ED 42        3 sbc hl,bc
1130  8F05
1131  8F05 C8           	ret z
1132  8F06 D8           	ret c
1133  8F07
1134  8F07              ; Nuevo techo, (más bajo que el anterior).
1135  8F07              ; Fijamos nuevo techo y borramos bytes sobrantes.
1136  8F07
1137  8F07 EB           	ex de,hl
1138  8F08
1139  8F08 71           	ld (hl),c
1140  8F09 2C           	inc l
1141  8F0A 70           	ld (hl),b
1142  8F0B
1143  8F0B AF           	xor a
1144  8F0C 43           	ld b,e
1145  8F0D
1146  8F0D 2A 29 8C     	ld hl,(Scanlines_album_SP)
1147  8F10
1148  8F10 77           1 ld (hl),a
1149  8F11 23           	inc hl
1150  8F12 10 FC        	djnz 1B
1151  8F14
1152  8F14              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1153  8F14
1154  8F14 21 2F 8C     	ld hl,Ctrl_3
1155  8F17 CB DE        	set 3,(hl)
1156  8F19
1157  8F19 C9           	ret
1158  8F1A
1159  8F1A              ; --------------------------------------------------------------------------------------------------------------
1160  8F1A              ;
1161  8F1A              ;	26/3/24
1162  8F1A
1163  8F1A              Recauda_informacion_de_entidad_en_curso
1164  8F1A
1165  8F1A              ; Almacena la Coordenada Y de la entidad en curso.
1166  8F1A
1167  8F1A              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1168  8F1A
1169  8F1A 3A BC 8B     	ld a,(Coordenada_y)
1170  8F1D 2A 2B 8C     	ld hl,(India_SP)
1171  8F20 77           	ld (hl),a
1172  8F21 2C           	inc l
1173  8F22
1174  8F22              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1175  8F22
1176  8F22 ED 5B 29 8C  	ld de,(Scanlines_album_SP)
1177  8F26
1178  8F26 73           	ld (hl),e
1179  8F27 2C           	inc l
1180  8F28 72           	ld (hl),d
1181  8F29 2C           	inc l
1182  8F2A
1183  8F2A 22 2B 8C     	ld (India_SP),hl
1184  8F2D
1185  8F2D C9           	ret
1186  8F2E
1187  8F2E              ; --------------------------------------------------------------------------------------------------------------
1188  8F2E              ;
1189  8F2E              ;	27/03/24
1190  8F2E              ;
1191  8F2E
1192  8F2E              Inicializa_India_y_limpia_Tabla_de_impresion
1193  8F2E
1194  8F2E 2A 2B 8C     	ld hl,(India_SP)
1195  8F31 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1196  8F34
1197  8F34 79           	ld a,c
1198  8F35 95           	sub l
1199  8F36 28 06        	jr z,2F
1200  8F38 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1201  8F39              ;														; _ y pasamos a inicializar (India_SP).
1202  8F39 AF           	xor a
1203  8F3A
1204  8F3A 77           1 ld (hl),a
1205  8F3B 2C           	inc l
1206  8F3C 10 FC        	djnz 1B												; Limpia Tabla.
1207  8F3E
1208  8F3E 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1209  8F41 22 2B 8C     	ld (India_SP),hl
1210  8F44
1211  8F44 C9           	ret
1212  8F45
1213  8F45              ; --------------------------------------------------------------------------------------------------------------
1214  8F45              ;
1215  8F45              ;	31/3/24
1216  8F45
1217  8F45              Ordena_tabla_de_impresion
1218  8F45
1219  8F45              ; 5794 T/states.
1220  8F45              ; 6278 T/states.
1221  8F45              ; 5310 T/states.
1222  8F45
1223  8F45              ; Inicializamos punteros (India_SP) e (India_2_SP).
1224  8F45              ; Inicializamos contador de comparaciones, [C].
1225  8F45              ; Cargamos los registros A y B para efectuar comparación.
1226  8F45
1227  8F45 FD 2E 00     	ld iyl,0
1228  8F48
1229  8F48 3A 02 8C     	ld a,(Entidades_en_curso)
1230  8F4B FE 04        	cp 4 	;	4
1231  8F4D D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1232  8F4E
1233  8F4E 3D           	dec a
1234  8F4F 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1235  8F50 51           	ld d,c 										; Copia de respaldo.
1236  8F51
1237  8F51 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1238  8F52
1239  8F52 21 03 89     	ld hl,Tabla_de_pintado+3
1240  8F55 46           	ld b,(hl)
1241  8F56 22 2D 8C     	ld (India_2_SP),hl
1242  8F59
1243  8F59 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1244  8F5A DC 82 8F     	call c, Avanza_India_2_SP
1245  8F5D CC 82 8F     	call z, Avanza_India_2_SP
1246  8F60
1247  8F60 FD 2D        	dec iyl
1248  8F62 28 18        	jr z,2F
1249  8F64
1250  8F64
1251  8F64              ; --------------------------------------------------------------------------------------------------------------
1252  8F64              ;
1253  8F64              ;	7/4/24
1254  8F64
1255  8F64              Trueque
1256  8F64
1257  8F64              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1258  8F64              ;  			A contiene en nº de fila de (India_SP).
1259  8F64              ;			HL contiene (India_2_SP).
1260  8F64
1261  8F64 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1262  8F65 E5           	push hl										; Preservo (India_2_SP).
1263  8F66
1264  8F66 ED 5B 2B 8C  	ld de,(India_SP)
1265  8F6A EB           	ex de,hl
1266  8F6B 70           	ld (hl),b
1267  8F6C 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1268  8F6D
1269  8F6D CD AE 8F     	call Intercambia_1_byte
1270  8F70 CD AE 8F     	call Intercambia_1_byte
1271  8F73
1272  8F73
1273  8F73              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1274  8F73              ; Recuperamos (India_2_SP) en HL.
1275  8F73
1276  8F73 2A 2B 8C     	ld hl,(India_SP)
1277  8F76 7E           	ld a,(hl)
1278  8F77
1279  8F77 E1           	pop hl
1280  8F78 D1           	pop de
1281  8F79
1282  8F79              ; --------------------------------------------------------------------------------------------------------------
1283  8F79
1284  8F79 CD 82 8F     	call Avanza_India_2_SP
1285  8F7C
1286  8F7C 14           2 inc d
1287  8F7D 15           	dec d
1288  8F7E C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1289  8F7F 18 D8        	jr 1B
1290  8F81
1291  8F81 C9           	ret
1292  8F82
1293  8F82              ; ----- ----- ----- ----- -----
1294  8F82
1295  8F82              Avanza_India_2_SP
1296  8F82
1297  8F82 0D           	dec c
1298  8F83 28 0A        	jr z,Avanza_punteros_indios
1299  8F85
1300  8F85 FD 2C        	inc iyl
1301  8F87
1302  8F87 2C           	inc l
1303  8F88 2C           	inc l
1304  8F89 2C           	inc l
1305  8F8A
1306  8F8A 46           	ld b,(hl)
1307  8F8B 22 2D 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1308  8F8E
1309  8F8E C9           	ret
1310  8F8F
1311  8F8F              ; ----- ----- ----- ----- -----
1312  8F8F
1313  8F8F              Avanza_punteros_indios
1314  8F8F
1315  8F8F 15           	dec d
1316  8F90 28 15        	jr z,Prepara_salida
1317  8F92
1318  8F92 4A           	ld c,d
1319  8F93
1320  8F93 2A 2B 8C     	ld hl,(India_SP)
1321  8F96 2C           	inc l
1322  8F97 2C           	inc l
1323  8F98 2C           	inc l
1324  8F99 7E           	ld a,(hl)
1325  8F9A 22 2B 8C     	ld (India_SP),hl
1326  8F9D
1327  8F9D 2C           	inc l
1328  8F9E 2C           	inc l
1329  8F9F 2C           	inc l
1330  8FA0 46           	ld b,(hl)
1331  8FA1 22 2D 8C     	ld (India_2_SP),hl
1332  8FA4
1333  8FA4 FD 2C        	inc iyl
1334  8FA6
1335  8FA6 C9           	ret
1336  8FA7
1337  8FA7              Prepara_salida
1338  8FA7
1339  8FA7 21 00 89     	ld hl,Tabla_de_pintado
1340  8FAA 22 2B 8C     	ld (India_SP),hl
1341  8FAD C9           	ret
1342  8FAE
1343  8FAE
1344  8FAE 2C           Intercambia_1_byte inc l
1345  8FAF 1C           	inc e
1346  8FB0 46           	ld b,(hl)
1347  8FB1 1A           	ld a,(de)
1348  8FB2 EB           	ex de,hl
1349  8FB3 70           	ld (hl),b
1350  8FB4 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1351  8FB5 C9           	ret
1352  8FB6
1353  8FB6              ; -----------------------------------------------------------------------------------
1354  8FB6              ;
1355  8FB6              ;	20/01/24
1356  8FB6              ;
1357  8FB6              ;
1358  8FB6
1359  8FB6              Construye_movimientos_masticados_entidad
1360  8FB6
1361  8FB6 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1362  8FB9 E5           	push hl
1363  8FBA CD FD 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1364  8FBD              ;															; _ el (Contador_de_mov_masticados).
1365  8FBD CD C8 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1366  8FC0              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1367  8FC0 CD F9 99     	call Recompone_posicion_inicio
1368  8FC3
1369  8FC3 CD 29 97     1 call Draw
1370  8FC6 CD E2 8F     	call Guarda_movimiento_masticado
1371  8FC9
1372  8FC9 CD A6 9D     	call Movimiento
1373  8FCC
1374  8FCC 3A 2F 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1375  8FCF CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1376  8FD1 28 F0        	jr z,1B
1377  8FD3
1378  8FD3              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1379  8FD3              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1380  8FD3
1381  8FD3 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1382  8FD4 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1383  8FD7
1384  8FD7              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1385  8FD7
1386  8FD7 CD 0A 9F     	call Situa_en_contador_general_de_mov_masticados
1387  8FDA
1388  8FDA              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1389  8FDA              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1390  8FDA
1391  8FDA ED 4B C3 8B  	ld bc,(Contador_de_mov_masticados)
1392  8FDE
1393  8FDE 71           	ld (hl),c
1394  8FDF 23           	inc hl
1395  8FE0 70           	ld (hl),b
1396  8FE1
1397  8FE1 C9           	ret
1398  8FE2
1399  8FE2              ; -----------------------------------------------------------------------------------
1400  8FE2              ;
1401  8FE2              ;	28/12/23
1402  8FE2              ;
1403  8FE2              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1404  8FE2              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1405  8FE2
1406  8FE2              Guarda_movimiento_masticado
1407  8FE2
1408  8FE2 ED 73 07 8C  	ld (Stack),sp
1409  8FE6 ED 7B C1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1410  8FEA
1411  8FEA DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1412  8FEC FD E5            push iy 												; Pushea Puntero_objeto.
1413  8FEE
1414  8FEE ED 7B 07 8C      ld sp,(Stack)
1415  8FF2
1416  8FF2 2A C3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1417  8FF5 23           	inc hl
1418  8FF6 22 C3 8B     	ld (Contador_de_mov_masticados),hl
1419  8FF9
1420  8FF9 CD FD 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1421  8FFC              ;															; _ el (Contador_de_mov_masticados).
1422  8FFC C9               ret
1423  8FFD
1424  8FFD              ; --------------------------------------------------------------------------------------------------------------
1425  8FFD              ;
1426  8FFD              ;	12/1/24
1427  8FFD              ;
1428  8FFD              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1429  8FFD
1430  8FFD              Actualiza_Puntero_de_almacen_de_mov_masticados
1431  8FFD
1432  8FFD 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1433  9000 01 04 00     	ld bc,4
1434  9003 A7           	and a
1435  9004 ED 4A        	adc hl,bc
1436  9006 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1437  9009 C9           	ret
1438  900A
1439  900A              ; --------------------------------------------------------------------------------------------------------------
1440  900A              ;
1441  900A              ;	24/03/24
1442  900A              ;
1443  900A              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1444  900A              ;
1445  900A              ;	IX contiene el puntero de impresión.
1446  900A              ;	DE contiene (Puntero_objeto).
1447  900A
1448  900A
1449  900A              Cargamos_registros_con_mov_masticado
1450  900A
1451  900A ED 73 07 8C  	ld (Stack),sp
1452  900E ED 7B C1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1453  9012
1454  9012 D1           	pop de 															; DE contiene Puntero_objeto
1455  9013 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1456  9015
1457  9015 ED 73 C1 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1458  9019 ED 7B 07 8C  	ld sp,(Stack)
1459  901D
1460  901D 7B           	ld a,e
1461  901E 82           	add d															; Comprueba si ya no hay datos en el almacén.
1462  901F
1463  901F CC B8 93     	call z,Reinicia_entidad_maliciosa
1464  9022
1465  9022 C9           	ret
1466  9023
1467  9023              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1468  9023              ;
1469  9023              ;	22/7/24
1470  9023
1471  9023              Cargamos_registros_con_explosion
1472  9023
1473  9023
1474  9023 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1475  9026 CD C2 90     	call Extrae_address
1476  9029
1477  9029 5D           	ld e,l
1478  902A 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1479  902B
1480  902B DD 2A BF 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1481  902F
1482  902F C9           	ret
1483  9030
1484  9030
1485  9030              Cargamos_registros_con_explosion_Amadeus
1486  9030
1487  9030 2A 7B 89     	ld hl,(Pamm_Amadeus)
1488  9033 CD C2 90     	call Extrae_address
1489  9036
1490  9036 5D           	ld e,l
1491  9037 54           	ld d,h
1492  9038
1493  9038 DD 2A 79 89  	ld ix,(p.imp.amadeus)
1494  903C
1495  903C C9           	ret
1496  903D
1497  903D              ; --------------------------------------------------------------------------------------------------------------
1498  903D              ;
1499  903D              ;	17/06/24
1500  903D              ;
1501  903D              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1502  903D              ;
1503  903D              ;	IX contiene el puntero de impresión.
1504  903D              ;	DE contiene (Puntero_objeto).
1505  903D
1506  903D
1507  903D              Cargamos_registros_con_mov_masticado_Amadeus
1508  903D
1509  903D ED 73 07 8C  	ld (Stack),sp
1510  9041 ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1511  9045 D1           	pop de 															; DE contiene Puntero_objeto
1512  9046 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1513  9048 DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1514  904C ED 7B 07 8C  	ld sp,(Stack)
1515  9050 C9           	ret
1516  9051
1517  9051              ; ---------------------------------------------------------------------------------------------------------------------
1518  9051              ;
1519  9051              ;	18/6/24
1520  9051              ;
1521  9051              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1522  9051
1523  9051              Genera_datos_de_impresion_Amadeus
1524  9051
1525  9051 3A 78 89     	ld a,(Impacto_Amadeus)
1526  9054 A7           	and a
1527  9055 20 03        	jr nz,1F
1528  9057
1529  9057              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1530  9057              ; _apuntando a la correspondiente explosión.
1531  9057
1532  9057 CD 3D 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1533  905A
1534  905A DD 7D        1 ld a,ixl
1535  905C E6 1F        	and $1f
1536  905E 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1537  9061
1538  9061 2A 29 8C     	ld hl,(Scanlines_album_SP)
1539  9064 E5           	push hl
1540  9065
1541  9065 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1542  9068 22 29 8C     	ld (Scanlines_album_SP),hl
1543  906B
1544  906B CD 0D 95     	call Genera_datos_de_impresion
1545  906E
1546  906E E1           	pop hl
1547  906F 22 29 8C     	ld (Scanlines_album_SP),hl
1548  9072
1549  9072 C9           	ret
1550  9073
1551  9073              ; ---------------------------------------------------------------------------------------------------------------------
1552  9073              ;
1553  9073              ;	13/03/24
1554  9073              ;
1555  9073              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1556  9073
1557  9073              Inicia_albumes_de_lineas
1558  9073
1559  9073 21 00 80     	ld hl,Scanlines_album
1560  9076 22 0B 8C     	ld (Album_de_pintado),hl
1561  9079 22 29 8C     	ld (Scanlines_album_SP),hl
1562  907C
1563  907C 21 1A 81     	ld hl,Scanlines_album_2
1564  907F 22 0D 8C     	ld (Album_de_borrado),hl
1565  9082
1566  9082 C9           	ret
1567  9083
1568  9083              Inicia_albumes_de_lineas_Amadeus
1569  9083
1570  9083 21 34 82     	ld hl,Amadeus_scanlines_album
1571  9086 22 0F 8C     	ld (Album_de_pintado_Amadeus),hl
1572  9089 21 58 82     	ld hl,Amadeus_scanlines_album_2
1573  908C 22 11 8C     	ld (Album_de_borrado_Amadeus),hl
1574  908F
1575  908F C9           	ret
1576  9090
1577  9090              Inicia_albumes_de_disparos
1578  9090
1579  9090 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1580  9093 22 13 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1581  9096 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1582  9099 22 15 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1583  909C
1584  909C 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1585  909F 22 17 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1586  90A2 22 1B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1587  90A5
1588  90A5 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1589  90A8 22 19 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1590  90AB
1591  90AB C9           	ret
1592  90AC
1593  90AC              ; ---------------------------------------------------------------------------------------------------------------------
1594  90AC              ;
1595  90AC              ; 8/1/23
1596  90AC              ;
1597  90AC              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1598  90AC              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1599  90AC              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1600  90AC
1601  90AC              ; Destruye HL y DE !!!!!
1602  90AC
1603  90AC              Inicia_punteros_de_cajas
1604  90AC
1605  90AC 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1606  90AF CD C2 90         call Extrae_address
1607  90B2 22 FA 8B         ld (Puntero_store_caja),hl
1608  90B5 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1609  90B8 22 FE 8B     	ld (Indice_restore_caja),hl
1610  90BB CD C2 90     	call Extrae_address
1611  90BE 22 FC 8B     	ld (Puntero_restore_caja),hl
1612  90C1 C9               ret
1613  90C2
1614  90C2              ; *************************************************************************************************************************************************************
1615  90C2
1616  90C2              ;
1617  90C2              ; 20/10/22
1618  90C2              ;
1619  90C2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1620  90C2              ;
1621  90C2              ; Destruye el puntero y DE !!!!!
1622  90C2
1623  90C2 5E           Extrae_address ld e,(hl)
1624  90C3 23           	inc hl
1625  90C4 56           	ld d,(hl)
1626  90C5 2B           	dec hl
1627  90C6 EB           	ex de,hl
1628  90C7 C9           	ret
1629  90C8
1630  90C8              ; *************************************************************************************************************************************************************
1631  90C8              ;
1632  90C8              ;	20/1/24
1633  90C8              ;
1634  90C8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1635  90C8              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1636  90C8              ;
1637  90C8              ;   Destruye HL y BC !!!!!,
1638  90C8              ;
1639  90C8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1640  90C8              ;					"0" ..... Izquierda.
1641  90C8
1642  90C8              Inicia_Puntero_objeto
1643  90C8
1644  90C8 3A D9 8B     	ld a,(Cuad_objeto)
1645  90CB E6 01        	and 1
1646  90CD F5           	push af
1647  90CE CC EA 90     	call z,Inicia_puntero_objeto_izq
1648  90D1 F1           	pop af
1649  90D2 C8           	ret z
1650  90D3 CD D7 90     	call Inicia_puntero_objeto_der
1651  90D6 C9           	ret
1652  90D7
1653  90D7              ; Arrancamos desde la parte izquierda de la pantalla.
1654  90D7              ; Iniciamos (Indice_Sprite_der).
1655  90D7
1656  90D7 2A CF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1657  90DA 22 D3 8B     	ld (Puntero_DESPLZ_der),hl
1658  90DD CD C2 90     	call Extrae_address
1659  90E0 22 CC 8B     	ld (Puntero_objeto),hl
1660  90E3
1661  90E3 2A D1 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1662  90E6 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
1663  90E9 C9           	ret
1664  90EA
1665  90EA              ; Arrancamos desde la parte derecha de la pantalla.
1666  90EA              ; Iniciamos (Indice_Sprite_izq).
1667  90EA
1668  90EA 2A D1 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1669  90ED 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
1670  90F0 CD C2 90     	call Extrae_address
1671  90F3 22 CC 8B     	ld (Puntero_objeto),hl
1672  90F6
1673  90F6 2A CF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1674  90F9 22 D3 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1675  90FC C9           	ret
1676  90FD
1677  90FD              ; **************************************************************************************************
1678  90FD              ;
1679  90FD              ;	06/07/24
1680  90FD              ;
1681  90FD              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1682  90FD
1683  90FD              Restore_entidad
1684  90FD
1685  90FD 2A FA 8B     	ld hl,(Puntero_store_caja)
1686  9100 7E           	ld a,(hl)
1687  9101 A7           	and a
1688  9102 CC 10 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1689  9105 28 F6        	jr z,Restore_entidad
1690  9107
1691  9107 11 BA 8B     	ld de,Bandeja_DRAW
1692  910A 01 0C 00     	ld bc,12
1693  910D ED B0        	ldir
1694  910F C9           	ret
1695  9110
1696  9110              ; **************************************************************************************************
1697  9110              ;
1698  9110              ;	08/05/23
1699  9110              ;
1700  9110              ;	Incrementamos los dos punteros de entidades. (+1).
1701  9110
1702  9110              Incrementa_punteros_de_cajas
1703  9110
1704  9110 2A FC 8B     	ld hl,(Puntero_restore_caja)
1705  9113 22 FA 8B     	ld (Puntero_store_caja),hl
1706  9116 2A FE 8B     	ld hl,(Indice_restore_caja)
1707  9119 23           	inc hl
1708  911A 23           	inc hl
1709  911B 22 FE 8B     	ld (Indice_restore_caja),hl
1710  911E CD C2 90         call Extrae_address
1711  9121 22 FC 8B         ld (Puntero_restore_caja),hl
1712  9124 C9               ret
1713  9125
1714  9125              ; -----------------------------------------------------------
1715  9125
1716  9125              ; Teclado.
1717  9125
1718  9125 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1719  9127 DB FE        	in a,($fe)
1720  9129 E6 01        	and $01
1721  912B 28 02        	jr z,1f
1722  912D 18 F6        	jr Pulsa_ENTER
1723  912F C9           1 ret
1724  9130
1725  9130              ; **************************************************************************************************
1726  9130              ;
1727  9130              ; Temporización.
1728  9130
1729  9130              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1730  9130              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1731  9130              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1732  9130              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1733  9130
1734  9130              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1735  9130              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1736  9130              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1737  9130
1738  9130              ; A partir de $4f61 no hace falta DELAY.
1739  9130
1740  9130              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1741  9130
1742  9130              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1743  9130              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1744  9130              ;	LD A,B
1745  9130              ;	AND A
1746  9130              ;	JR NZ,wait
1747  9130              ;	RET
1748  9130
1749  9130              ; ---------------------------------------------------------------------------------------------------------------
1750  9130              ;
1751  9130              ;	13/07/24
1752  9130              ;
1753  9130
1754  9130              Inicia_Shield
1755  9130
1756  9130 21 53 8C     	ld hl,Datos_Shield
1757  9133 22 57 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1758  9136
1759  9136 7E           	ld a,(hl)
1760  9137 32 5A 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1761  913A
1762  913A 3E 01        	ld a,1
1763  913C 32 5B 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1764  913F
1765  913F C9           	ret
1766  9140
1767  9140              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1768  9140              ;
1769  9140              ;	4/6/24
1770  9140              ;
1771  9140              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1772  9140              ;
1773  9140              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1774  9140              ;
1775  9140
1776  9140              Actualiza_pantalla
1777  9140
1778  9140 3E 02        	ld a,2
1779  9142 D3 FE        	out ($fe),a
1780  9144
1781  9144 3A 2F 8C     	ld a,(Ctrl_3)
1782  9147 CB 57        	bit 2,a
1783  9149 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1784  914B
1785  914B              Borrando_entidades
1786  914B
1787  914B 2A 29 8C     	ld hl,(Scanlines_album_SP)
1788  914E CD C2 90     	call Extrae_address
1789  9151 24           	inc h
1790  9152 25           	dec h
1791  9153 28 05        	jr z,Pintando_entidades
1792  9155 CD 06 96     	call Pinta_Sprites
1793  9158 18 F1        	jr Borrando_entidades
1794  915A
1795  915A              Pintando_entidades
1796  915A
1797  915A 2A 2B 8C     	ld hl,(India_SP)
1798  915D 2C           	inc l
1799  915E CD C2 90     	call Extrae_address
1800  9161 24           	inc h
1801  9162 25           	dec h
1802  9163 28 0E        	jr z,Ejecuta_escudo
1803  9165 1C           	inc e
1804  9166 1C           	inc e
1805  9167 ED 53 2B 8C  	ld (India_SP),de
1806  916B CD C2 90     	call Extrae_address
1807  916E CD 06 96     	call Pinta_Sprites
1808  9171 18 E7        	jr Pintando_entidades
1809  9173
1810  9173              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1811  9173
1812  9173              Ejecuta_escudo
1813  9173
1814  9173 3A 59 8C     	ld a,(Shield)
1815  9176 A7           	and a
1816  9177 20 2F        	jr nz,Aplica_Shield
1817  9179
1818  9179              Borrando_Amadeus
1819  9179
1820  9179 21 2F 8C     	ld hl,Ctrl_3
1821  917C CB 6E        	bit 5,(hl)
1822  917E 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1823  9180
1824  9180 2A 11 8C     	ld hl,(Album_de_borrado_Amadeus)
1825  9183 CD C2 90     	call Extrae_address
1826  9186 24           	inc h
1827  9187 25           	dec h
1828  9188 28 03        	jr z,Pintando_Amadeus
1829  918A CD 06 96     	call Pinta_Sprites
1830  918D
1831  918D              Pintando_Amadeus
1832  918D
1833  918D 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1834  9190 CD C2 90     	call Extrae_address
1835  9193 24           	inc h
1836  9194 25           	dec h
1837  9195 28 03        	jr z,1F
1838  9197 CD 06 96     	call Pinta_Sprites
1839  919A
1840  919A              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1841  919A
1842  919A 21 2F 8C     1 ld hl,Ctrl_3
1843  919D CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1844  919F CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1845  91A1 CB AE        	res 5,(hl)
1846  91A3
1847  91A3 3E 01        	ld a,1												; Borde azul.
1848  91A5 D3 FE        	out ($fe),a
1849  91A7
1850  91A7 C9           	ret
1851  91A8
1852  91A8              Aplica_Shield
1853  91A8
1854  91A8              ;	Bit 1 "1" (Shield_3) Sólo borra.
1855  91A8              ;		  "0"     ""     Borra/Pinta.
1856  91A8              ;	Bit 2    ""  RET.	 No borra, no pinta.
1857  91A8
1858  91A8 21 5B 8C     	ld hl,Shield_3
1859  91AB
1860  91AB CB 5E        	bit 3,(hl)
1861  91AD 20 DE        	jr nz,Pintando_Amadeus
1862  91AF
1863  91AF CB 56        	bit 2,(hl)
1864  91B1 20 E7        	jr nz,1B
1865  91B3
1866  91B3 CB 4E        	bit 1,(hl)
1867  91B5 C4 BC 91     	call nz,Borra_Amadeus_shield
1868  91B8
1869  91B8 28 BF        	jr z,Borrando_Amadeus
1870  91BA 18 DE        	jr 1B
1871  91BC
1872  91BC              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1873  91BC
1874  91BC              Borra_Amadeus_shield
1875  91BC
1876  91BC 3A 2F 8C     	ld a,(Ctrl_3)
1877  91BF CB 6F        	bit 5,a
1878  91C1 28 08        	jr z,1F
1879  91C3
1880  91C3 2A 11 8C     	ld hl,(Album_de_borrado_Amadeus)
1881  91C6 CD C2 90     	call Extrae_address
1882  91C9 18 06        	jr 2F
1883  91CB
1884  91CB 2A 0F 8C     1 ld hl,(Album_de_pintado_Amadeus)
1885  91CE CD C2 90     	call Extrae_address
1886  91D1
1887  91D1 CD 06 96     2 call Pinta_Sprites
1888  91D4
1889  91D4 AF           	xor a
1890  91D5 3C           	inc a											; Asegura NZ en la salida de la rutina.
1891  91D6
1892  91D6 C9           	ret
1893  91D7
1894  91D7              Pinta_Amadeus_shield
1895  91D7
1896  91D7 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1897  91DA CD C2 90     	call Extrae_address
1898  91DD CD 06 96     	call Pinta_Sprites
1899  91E0
1900  91E0 AF           	xor a
1901  91E1 3C           	inc a											; Asegura NZ en la salida de la rutina.
1902  91E2
1903  91E2 C9           	ret
1904  91E3
1905  91E3              Borra_Pinta_Amadeus_shield
1906  91E3
1907  91E3 CD BC 91     	call Borra_Amadeus_shield
1908  91E6 CD D7 91     	call Pinta_Amadeus_shield
1909  91E9 C9           	ret
1910  91EA
1911  91EA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1912  91EA              ;
1913  91EA              ;	19/6/24
1914  91EA              ;
1915  91EA
1916  91EA              Teclado
1917  91EA
1918  91EA              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1919  91EA
1920  91EA 3E F7        	ld a,$f7												; "5" para disparar.
1921  91EC DB FE        	in a,($fe)
1922  91EE E6 10        	and $10
1923  91F0
1924  91F0 CC DE A1     	call z,Genera_disparo_Amadeus
1925  91F3
1926  91F3 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1927  91F5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1928  91F7 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1929  91F9 CC 73 9D         call z,Amadeus_a_izquierda
1930  91FC
1931  91FC 3E F7        	ld a,$f7
1932  91FE DB FE        	in a,($fe)
1933  9200 E6 01        	and $01
1934  9202 C8           	ret z
1935  9203
1936  9203 3E F7        	ld a,$f7
1937  9205 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1938  9207 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1939  9209 CC 8B 9D     	call z,Amadeus_a_derecha
1940  920C
1941  920C C9           	ret
1942  920D
1943  920D              ; ------------------------------------------------------------------------------------------------------------------------
1944  920D              ;
1945  920D              ;	06/07/24
1946  920D              ;
1947  920D
1948  920D              Genera_explosion
1949  920D
1950  920D 21 41 8C     	ld hl,Clock_explosion
1951  9210 35           	dec (hl)
1952  9211 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1953  9213
1954  9213              Borra_entidad_colisionada
1955  9213
1956  9213 CD 1A 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1957  9216 CD 23 90     	call Cargamos_registros_con_explosion
1958  9219 CD 0D 95     	call Genera_datos_de_impresion
1959  921C
1960  921C AF           	xor a
1961  921D 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1962  921E
1963  921E C9           	ret
1964  921F
1965  921F              Siguiente_frame_explosion
1966  921F
1967  921F 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1968  9221
1969  9221              ; Avanza Frame de explosión.
1970  9221
1971  9221 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1972  9224 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1973  9227
1974  9227 79           	ld a,c
1975  9228 95           	sub l
1976  9229 20 0B        	jr nz,1F
1977  922B
1978  922B              ; Fín de la entidad !!!!!!!!!!!!!
1979  922B
1980  922B 21 01 8C     	ld hl,Numero_parcial_de_entidades
1981  922E 35           	dec (hl)
1982  922F 23           	inc hl
1983  9230 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1984  9231
1985  9231 CD 8D 93     	call Limpiamos_bandeja_DRAW
1986  9234 18 DD        	jr Borra_entidad_colisionada
1987  9236
1988  9236 23           1 inc hl
1989  9237 23           	inc hl
1990  9238 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1991  923B 18 D6        	jr Borra_entidad_colisionada
1992  923D
1993  923D              ; ----- ----- ----- ----- -----
1994  923D
1995  923D              Genera_explosion_Amadeus
1996  923D
1997  923D 21 42 8C     	ld hl,Clock_explosion_Amadeus
1998  9240 35           	dec (hl)
1999  9241 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2000  9243
2001  9243              Borra_Amadeus_impactado
2002  9243
2003  9243 CD 7F 8E     	call Change_Amadeus
2004  9246 CD 30 90     	call Cargamos_registros_con_explosion_Amadeus
2005  9249 CD 51 90     	call Genera_datos_de_impresion_Amadeus
2006  924C
2007  924C 21 2F 8C     	ld hl,Ctrl_3
2008  924F CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2009  9251
2010  9251 AF           	xor a
2011  9252 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2012  9253
2013  9253 C9           	ret
2014  9254
2015  9254              Siguiente_frame_explosion_Amadeus
2016  9254
2017  9254 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2018  9256
2019  9256              ; Avanza Frame de explosión.
2020  9256
2021  9256 2A 7B 89     	ld hl,(Pamm_Amadeus)
2022  9259 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2023  925C
2024  925C 79           	ld a,c
2025  925D 95           	sub l
2026  925E 20 0B        	jr nz,1F
2027  9260
2028  9260              ; Fín de Amadeus !!!!!!!!!!!!!
2029  9260              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2030  9260
2031  9260 AF           	xor a
2032  9261 32 78 89     	ld (Impacto_Amadeus),a
2033  9264 21 2F 8C     	ld hl,Ctrl_3
2034  9267 CB F6        	set 6,(hl)
2035  9269
2036  9269 18 D8        	jr Borra_Amadeus_impactado
2037  926B
2038  926B 23           1 inc hl
2039  926C 23           	inc hl
2040  926D 22 7B 89     	ld (Pamm_Amadeus),hl
2041  9270 18 D1        	jr Borra_Amadeus_impactado
2042  9272
2043  9272              ; ---------------------------------------------------------------
2044  9272
2045  9272              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9272              ; ******************************************************************************************************************************************************************************************
   2+ 9272              ;
   3+ 9272              ;   21/04/24
   4+ 9272              ;
   5+ 9272              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9272              ;   (XOR) bit a bit.
   7+ 9272              ;
   8+ 9272              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9272
  10+ 9272              Derivando_RND
  11+ 9272
  12+ 9272 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9275
  14+ 9275 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9277 C5               push bc
  16+ 9278              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9278 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 927B              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 927B
  20+ 927B A7           6 and a                                 ; Carry a "0".
  21+ 927C CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 927E 30 02            jr nc,1F
  23+ 9280
  24+ 9280 CB C1            set 0,c
  25+ 9282
  26+ 9282 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9283 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9285 5F               ld e,a
  29+ 9286
  30+ 9286 7A               ld a,d
  31+ 9287 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9289 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 928B
  34+ 928B CB 3F            srl a
  35+ 928D
  36+ 928D AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 928E
  38+ 928E 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 928F 28 04            jr z,4F
  40+ 9291
  41+ 9291 CB FF            set 7,a
  42+ 9293 18 02            jr 5F
  43+ 9295
  44+ 9295 CB BF        4 res 7,a
  45+ 9297
  46+ 9297 CB 21        5 sla c
  47+ 9299 10 E0            djnz 6B
  48+ 929B
  49+ 929B 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 929C
  51+ 929C 77               ld (hl),a
  52+ 929D 23               inc hl
  53+ 929E C1               pop bc
  54+ 929F 10 D4            djnz 3B
  55+ 92A1
  56+ 92A1 C9               ret
  57+ 92A2
  58+ 92A2
  59+ 92A2
# file closed: RND_Derivando.asm
2046  92A2              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92A2              ;---------------------------------------------------------------------------------------------------------------
   2+ 92A2              ;
   3+ 92A2              ;   8/3/24
   4+ 92A2              ;
   5+ 92A2              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 92A2              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 92A2              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 92A2              ;	_ de la 1ª entidad del Nivel.
   9+ 92A2              ;
  10+ 92A2              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 92A2
  12+ 92A2              ;	MODIFICA: HL,DE y A.
  13+ 92A2              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 92A2
  15+ 92A2              Inicializa_Nivel
  16+ 92A2
  17+ 92A2 2A 4F 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 92A5 CD C2 90     	call Extrae_address
  19+ 92A8 7E           	ld a,(hl)
  20+ 92A9 32 00 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92AC 23           	inc hl
  22+ 92AD CD BA 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92B0 22 51 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92B3 CD C3 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92B6
  26+ 92B6 CD D4 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92B9 C9           	ret
  28+ 92BA
  29+ 92BA              ; ----------------------
  30+ 92BA
  31+ 92BA 11 DF 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92BD 01 04 00     	ld bc,4
  33+ 92C0 ED B0        	ldir
  34+ 92C2 C9           	ret
  35+ 92C3
  36+ 92C3 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92C4 CD 5E 94         call Calcula_salto_en_BC
  38+ 92C7 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92CA A7               and a
  40+ 92CB ED 4A            adc hl,bc
  41+ 92CD CD C2 90         call Extrae_address
  42+ 92D0 22 EB 8B         ld (Puntero_indice_mov),hl
  43+ 92D3 C9               ret
  44+ 92D4
  45+ 92D4 3A BA 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92D7 CD 5E 94     	call Calcula_salto_en_BC
  47+ 92DA 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92DD A7               and a
  49+ 92DE ED 4A            adc hl,bc
  50+ 92E0 CD C2 90         call Extrae_address
  51+ 92E3 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92E6 C9           	ret
  53+ 92E7
  54+ 92E7              ;---------------------------------------------------------------------------------------------------------------
  55+ 92E7              ;
  56+ 92E7              ;   5/1/24
  57+ 92E7              ;
  58+ 92E7              ;	Destruye A,BC,HL,DE
  59+ 92E7
  60+ 92E7              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92E7              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92E7
  63+ 92E7              Inicia_Entidades
  64+ 92E7
  65+ 92E7              ; Preparamos los punteros de las cajas de entidades:
  66+ 92E7
  67+ 92E7 CD AC 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92EA              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92EA CD A6 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92ED
  71+ 92ED 2A 51 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92F0
  73+ 92F0 22 51 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92F3
  75+ 92F3 CD 0C 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92F6
  77+ 92F6 2A 51 8C     	ld hl,(Datos_de_nivel)
  78+ 92F9
  79+ 92F9              ; En este punto:
  80+ 92F9              ;
  81+ 92F9              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92F9              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92F9
  84+ 92F9 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92FA
  86+ 92FA 7E           	ld a,(hl)
  87+ 92FB CD 78 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92FE
  89+ 92FE CD 70 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9301
  91+ 9301              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9301
  93+ 9301 CD 2E 94     	call Busca_mov_masticados_segun_tipo
  94+ 9304
  95+ 9304 A7           	and a
  96+ 9305 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9307
  98+ 9307              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9307
 100+ 9307              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9307              ;	_ de este tipo de entidad.
 102+ 9307
 103+ 9307 CD 0A 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 930A CD 17 9F     	call Transfiere_datos_de_contadores
 105+ 930D
 106+ 930D 18 06        	jr 4F
 107+ 930F
 108+ 930F CD B6 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9312
 110+ 9312              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9312              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9312              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9312              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9312              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9312
 116+ 9312 CD EC 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9315              ;																; _ Mov_masticados ya generados.
 118+ 9315
 119+ 9315 CD 0A 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9318
 121+ 9318 DD E5        	push ix
 122+ 931A E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 931B
 124+ 931B D5           	push de
 125+ 931C CD E1 94     	call Genera_coordenadas
 126+ 931F
 127+ 931F ED 5B 29 8C  	ld de,(Scanlines_album_SP)
 128+ 9323 CD 1A 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9326 D1           	pop de
 130+ 9327
 131+ 9327 CD 0D 95     	call Genera_datos_de_impresion
 132+ 932A              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 932A              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 932A              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 932A              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 932A
 137+ 932A CD B0 93     	call Decrementa_Contador_de_mov_masticados
 138+ 932D
 139+ 932D              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 932D
 141+ 932D ED 5B FA 8B  	ld de,(Puntero_store_caja)
 142+ 9331 CD 9D 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9334
 144+ 9334 CD 8D 93     	call Limpiamos_bandeja_DRAW
 145+ 9337 CD 10 91     	call Incrementa_punteros_de_cajas
 146+ 933A
 147+ 933A              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 933A              ; _ entidad del Nivel.
 149+ 933A
 150+ 933A 3A 30 8C     	ld a,(Ctrl_4)
 151+ 933D E6 F0        	and $f0
 152+ 933F 32 30 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9342
 154+ 9342              ; Siguiente entidad del Nivel.
 155+ 9342
 156+ 9342 2A 51 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9345 23           	inc hl 														; _ entidad del Nivel.
 158+ 9346
 159+ 9346 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9347
 161+ 9347 10 A7        	djnz 2B
 162+ 9349
 163+ 9349 C9           	ret
 164+ 934A
 165+ 934A              ; -------------------------------------------------------------------------------------------------------------------
 166+ 934A              ;
 167+ 934A              ;	27/5/24
 168+ 934A              ;
 169+ 934A              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 934A              ;
 171+ 934A
 172+ 934A              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 934A              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 934A
 175+ 934A 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 934D CD 70 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9350
 178+ 9350
 179+ 9350              Construye_movimientos_masticados_Amadeus
 180+ 9350
 181+ 9350 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9353 CD FD 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9356              ;															; _ el (Contador_de_mov_masticados).
 184+ 9356 CD C8 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9359              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9359
 187+ 9359              ; Generamos movimientos masticados de Amadeus.
 188+ 9359
 189+ 9359 06 79        	ld b,121												; $0079, 121d.
 190+ 935B
 191+ 935B C5           1 push bc
 192+ 935C CD 29 97     	call Draw
 193+ 935F CD E2 8F     	call Guarda_movimiento_masticado
 194+ 9362
 195+ 9362 CD 9D 9A     	call Mov_right
 196+ 9365 CD 9D 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9368
 198+ 9368 C1           	pop bc
 199+ 9369 10 F0        	djnz 1B
 200+ 936B
 201+ 936B              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 936B
 203+ 936B              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 936B              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 936B
 206+ 936B 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 936E 01 08 00     	ld bc,8
 208+ 9371 A7           	and a
 209+ 9372 ED 42        	sbc hl,bc
 210+ 9374 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9377
 212+ 9377 C9           	ret
 213+ 9378
 214+ 9378              ; ---------------------------------------------------------------------
 215+ 9378              ;
 216+ 9378              ;	10/02/24
 217+ 9378              ;
 218+ 9378              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9378              ;
 220+ 9378              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9378
 222+ 9378              Definicion_segun_tipo
 223+ 9378
 224+ 9378 CD 5E 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 937B 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 937E CD 66 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9381 C9           	ret
 228+ 9382
 229+ 9382              ; ---------------------------------------------------------------------
 230+ 9382              ;
 231+ 9382              ;	6/7/24
 232+ 9382
 233+ 9382
 234+ 9382              Store_Restore_cajas
 235+ 9382
 236+ 9382 ED 5B FA 8B  	ld de,(Puntero_store_caja)
 237+ 9386 CD 9D 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9389 CD 10 91     	call Incrementa_punteros_de_cajas
 239+ 938C C9           	ret
 240+ 938D
 241+ 938D              ; ---------------------------------------------------------------------
 242+ 938D              ;
 243+ 938D              ;	23/6/24
 244+ 938D              ;
 245+ 938D              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 938D              ;
 247+ 938D              ;	MODIFY: HL
 248+ 938D
 249+ 938D              Limpiamos_bandeja_DRAW
 250+ 938D
 251+ 938D ED 73 07 8C  	ld (Stack),sp
 252+ 9391 31 DF 8B     	ld sp,Vel_left
 253+ 9394
 254+ 9394 AF           	xor a
 255+ 9395 67           	ld h,a
 256+ 9396 6F           	ld l,a
 257+ 9397
 258+ 9397 E5           	push hl
 259+ 9398 E5           	push hl
 260+ 9399 E5           	push hl
 261+ 939A E5           	push hl
 262+ 939B E5           	push hl
 263+ 939C E5           	push hl
 264+ 939D E5           	push hl
 265+ 939E E5           	push hl
 266+ 939F E5           	push hl
 267+ 93A0 E5           	push hl
 268+ 93A1 E5           	push hl
 269+ 93A2 E5           	push hl
 270+ 93A3 E5           	push hl
 271+ 93A4 E5           	push hl
 272+ 93A5 E5           	push hl
 273+ 93A6 E5           	push hl
 274+ 93A7 E5           	push hl
 275+ 93A8 E5           	push hl
 276+ 93A9
 277+ 93A9 33           	inc sp
 278+ 93AA
 279+ 93AA E5           	push hl
 280+ 93AB ED 7B 07 8C  	ld sp,(Stack)
 281+ 93AF
 282+ 93AF C9           	ret
 283+ 93B0
 284+ 93B0              ; ---------------------------------------------------------------------
 285+ 93B0              ;
 286+ 93B0              ;	24/03/24
 287+ 93B0
 288+ 93B0 2A C3 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93B3 2B           	dec hl
 290+ 93B4 22 C3 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93B7 C9           	ret
 292+ 93B8
 293+ 93B8              ; ---------------------------------------------------------------------
 294+ 93B8              ;
 295+ 93B8              ;	8/5/24
 296+ 93B8
 297+ 93B8              Reinicia_entidad_maliciosa
 298+ 93B8
 299+ 93B8              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93B8
 301+ 93B8 CD 0A 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93BB CD 17 9F     	call Transfiere_datos_de_contadores
 303+ 93BE
 304+ 93BE              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93BE
 306+ 93BE 3A BA 8B     	ld a,(Tipo)
 307+ 93C1 CD 78 93     	call Definicion_segun_tipo
 308+ 93C4
 309+ 93C4 E5           	push hl
 310+ 93C5 DD E1        	pop ix
 311+ 93C7
 312+ 93C7 DD 6E 0B     	ld l,(ix+11)
 313+ 93CA DD 66 0C     	ld h,(ix+12)
 314+ 93CD
 315+ 93CD 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93D0
 317+ 93D0 CD 0A 90     	call Cargamos_registros_con_mov_masticado
 318+ 93D3
 319+ 93D3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93D3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93D3              ; Ejemplos.
 322+ 93D3
 323+ 93D3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93D3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93D3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93D3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93D3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93D3
 329+ 93D3 21 BD 8B     	ld hl,Contador_de_vueltas
 330+ 93D6 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93D8
 332+ 93D8 7E           	ld a,(hl)
 333+ 93D9 CB 2F        	sra a
 334+ 93DB CB 2F        	sra a
 335+ 93DD
 336+ 93DD 32 C5 8B     	ld (Velocidad),a
 337+ 93E0
 338+ 93E0 3E 40        	ld a,$40
 339+ 93E2 BE           	cp (hl)
 340+ 93E3 C0           	ret nz
 341+ 93E4
 342+ 93E4              ; Límitador.
 343+ 93E4
 344+ 93E4              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93E4
 346+ 93E4 CB 2E        	sra (hl)
 347+ 93E6 21 C5 8B     	ld hl,Velocidad
 348+ 93E9 CB 2E        	sra (hl)
 349+ 93EB
 350+ 93EB C9           	ret
 351+ 93EC
 352+ 93EC              ; ---------------------------------------------------------------------
 353+ 93EC              ;
 354+ 93EC              ;	22/01/24
 355+ 93EC
 356+ 93EC 21 30 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93EF CB 46        	bit 0,(hl)
 358+ 93F1 20 0D        	jr nz,1F
 359+ 93F3 CB 4E        	bit 1,(hl)
 360+ 93F5 20 0C        	jr nz,2F
 361+ 93F7 CB 56        	bit 2,(hl)
 362+ 93F9 20 0B        	jr nz,3F
 363+ 93FB CB 5E        	bit 3,(hl)
 364+ 93FD 20 0A        	jr nz,4F
 365+ 93FF C9           	ret
 366+ 9400
 367+ 9400 CB E6        1 set 4,(hl)
 368+ 9402 C9           	ret
 369+ 9403 CB EE        2 set 5,(hl)
 370+ 9405 C9           	ret
 371+ 9406 CB F6        3 set 6,(hl)
 372+ 9408 C9           	ret
 373+ 9409 CB FE        4 set 7,(hl)
 374+ 940B C9           	ret
 375+ 940C
 376+ 940C              ; ---------------------------------------------------------------------
 377+ 940C              ;
 378+ 940C              ;	23/01/24
 379+ 940C              ;
 380+ 940C              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 940C              ;
 382+ 940C              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 940C              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 940C              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 940C              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 940C
 387+ 940C              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 940C
 389+ 940C 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 940D 3D           	dec a
 391+ 940E 20 06        	jr nz,1F
 392+ 9410
 393+ 9410              ; --- Tipo_1
 394+ 9410
 395+ 9410 21 30 8C     	ld hl,Ctrl_4
 396+ 9413 CB C6        	set 0,(hl)
 397+ 9415 C9           	ret
 398+ 9416
 399+ 9416 3D           1 dec a
 400+ 9417 20 06        	jr nz,2F
 401+ 9419
 402+ 9419              ; --- Tipo_2
 403+ 9419
 404+ 9419 21 30 8C     	ld hl,Ctrl_4
 405+ 941C CB CE        	set 1,(hl)
 406+ 941E C9           	ret
 407+ 941F
 408+ 941F 3D           2 dec a
 409+ 9420 20 06        	jr nz,3F
 410+ 9422
 411+ 9422              ; --- Tipo_3
 412+ 9422
 413+ 9422 21 30 8C     	ld hl,Ctrl_4
 414+ 9425 CB D6        	set 2,(hl)
 415+ 9427 C9           	ret
 416+ 9428
 417+ 9428              ; --- Tipo_3
 418+ 9428
 419+ 9428 21 30 8C     3 ld hl,Ctrl_4
 420+ 942B CB D6        	set 2,(hl)
 421+ 942D C9           	ret
 422+ 942E
 423+ 942E              ; ---------------------------------------------------------------------
 424+ 942E              ;
 425+ 942E              ;	22/01/24
 426+ 942E
 427+ 942E 21 30 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9431 CB 46        	bit 0,(hl)
 429+ 9433 20 0E        	jr nz,1F
 430+ 9435
 431+ 9435 CB 4E        	bit 1,(hl)
 432+ 9437 20 10        	jr nz,2F
 433+ 9439
 434+ 9439 CB 56        	bit 2,(hl)
 435+ 943B 20 12        	jr nz,3F
 436+ 943D
 437+ 943D CB 5E        	bit 3,(hl)
 438+ 943F 20 14        	jr nz,4F
 439+ 9441 18 19        	jr 6F
 440+ 9443
 441+ 9443              ; Entidad_de_Tipo_1.
 442+ 9443
 443+ 9443 CB 66        1 bit 4,(hl)
 444+ 9445 28 15        	jr z,6F
 445+ 9447 18 10        	jr 5F
 446+ 9449
 447+ 9449              ; Entidad_de_Tipo_2.
 448+ 9449
 449+ 9449 CB 6E        2 bit 5,(hl)
 450+ 944B 28 0F        	jr z,6F
 451+ 944D 18 0A        	jr 5F
 452+ 944F
 453+ 944F              ; Entidad_de_Tipo_3.
 454+ 944F
 455+ 944F CB 76        3 bit 6,(hl)
 456+ 9451 28 09        	jr z,6F
 457+ 9453 18 04        	jr 5F
 458+ 9455
 459+ 9455              ; Entidad_de_Tipo_4.
 460+ 9455
 461+ 9455 CB 7E        4 bit 7,(hl)
 462+ 9457 28 03        	jr z,6F
 463+ 9459
 464+ 9459              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9459
 466+ 9459 AF           5 xor a
 467+ 945A 3C           	inc a
 468+ 945B C9           	ret
 469+ 945C
 470+ 945C              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 945C
 472+ 945C AF           6 xor a
 473+ 945D C9           	ret
 474+ 945E
 475+ 945E              ;	------------------------------------------------------------------------------------
 476+ 945E              ;
 477+ 945E              ;	12/01/24
 478+ 945E              ;
 479+ 945E              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 945E              ;
 481+ 945E              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 945E              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 945E
 484+ 945E CB 27        Calcula_salto_en_BC sla a
 485+ 9460 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9462 4F           	ld c,a
 487+ 9463 06 00        	ld b,0
 488+ 9465 C9           	ret
 489+ 9466
 490+ 9466              ; ------------------------------------------------------------------
 491+ 9466              ;
 492+ 9466              ;	19/1/24
 493+ 9466              ;
 494+ 9466              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9466              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9466
 497+ 9466 A7           Situa_en_datos_de_definicion and a
 498+ 9467 ED 4A        	adc hl,bc
 499+ 9469 CD C2 90     	call Extrae_address
 500+ 946C 22 05 8C         ld (Datos_de_entidad),hl
 501+ 946F C9           	ret
 502+ 9470
 503+ 9470              ; ------------------------------------------------------------------
 504+ 9470
 505+ 9470              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9470              ; 	inc de
 507+ 9470              ; 	inc de
 508+ 9470              ; 	ex de,hl
 509+ 9470              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9470              ; 	ret
 511+ 9470
 512+ 9470              ; ----------------------------------------------------------------------------------------------------------
 513+ 9470              ;
 514+ 9470              ;	24/6/24
 515+ 9470              ;
 516+ 9470              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9470              ;	_ de entidad.
 518+ 9470              ;
 519+ 9470              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9470              ;
 521+ 9470              ;
 522+ 9470              ;	MODIFICA: HL,DE y BC
 523+ 9470
 524+ 9470
 525+ 9470              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9470
 527+ 9470 11 BA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9473 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9474 12           	ld (de),a
 530+ 9475 23           	inc hl
 531+ 9476              ;
 532+ 9476 11 C8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9479 01 02 00     	ld bc,2
 534+ 947C ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 947E              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 947E 11 BD 8B     	ld de,Contador_de_vueltas
 537+ 9481 7E           	ld a,(hl)
 538+ 9482 12           	ld (de),a
 539+ 9483 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9484
 541+ 9484 11 CF 8B     	ld de,Indice_Sprite_der
 542+ 9487 01 04 00     	ld bc,4
 543+ 948A ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 948C
 545+ 948C 11 D7 8B     	ld de,Posicion_inicio
 546+ 948F 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9492 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9494
 549+ 9494 11 C1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9497 01 02 00     	ld bc,2
 551+ 949A ED B0        	ldir
 552+ 949C
 553+ 949C C9           	ret
 554+ 949D
 555+ 949D              ; ----------------------------------------------------------------------------------------------------------
 556+ 949D              ;
 557+ 949D              ;	1/8/24
 558+ 949D              ;
 559+ 949D
 560+ 949D              Parametros_de_bandeja_DRAW_a_caja
 561+ 949D
 562+ 949D 21 BA 8B     	ld hl,Bandeja_DRAW
 563+ 94A0 01 0C 00     	ld bc,12
 564+ 94A3 ED B0        	ldir
 565+ 94A5 C9           	ret
 566+ 94A6
 567+ 94A6              ;---------------------------------------------------------------------------------------------------------------
 568+ 94A6              ;
 569+ 94A6              ;	5/1/24
 570+ 94A6              ;
 571+ 94A6              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 94A6              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 94A6              ;
 574+ 94A6              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 94A6              ;
 576+ 94A6              ;	(Numero_parcial_de_entidades)="7".
 577+ 94A6              ;
 578+ 94A6              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 94A6              ;
 580+ 94A6              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 94A6              ;
 582+ 94A6              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 94A6              ;	MODIFICA: A y B.
 584+ 94A6              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 94A6
 586+ 94A6              Inicializa_Numero_parcial_de_entidades
 587+ 94A6
 588+ 94A6              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 94A6
 590+ 94A6 3A 00 8C     	ld a,(Numero_de_entidades)
 591+ 94A9 A7           	and a
 592+ 94AA
 593+ 94AA              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94AA              ;	jr z,$
 595+ 94AA              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94AA
 597+ 94AA 20 03        	jr nz,3F
 598+ 94AC
 599+ 94AC              ; ---------- ---------- ----------
 600+ 94AC
 601+ 94AC              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94AC              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94AC
 604+ 94AC CD A2 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94AF
 606+ 94AF              ; ---------- ---------- ----------
 607+ 94AF
 608+ 94AF 3A 00 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94B2 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94B4 38 08        	jr c,1F
 611+ 94B6
 612+ 94B6              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94B6              ; Actualizamos variables.
 614+ 94B6
 615+ 94B6 3E 07        	ld a,7
 616+ 94B8 32 01 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94BB 47           	ld b,a
 618+ 94BC 18 04        	jr 2F
 619+ 94BE
 620+ 94BE              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94BE              ; (Numero_de_entidades)="0".
 622+ 94BE
 623+ 94BE 32 01 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94C1 47           	ld b,a
 625+ 94C2 C9           2 ret
 626+ 94C3
# file closed: Rutinas_de_inicio_y_niveles.asm
2047  94C3              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94C3              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94C3              ;
   3+ 94C3              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94C3              ;
   5+ 94C3              ; *****************************************************************************************************************************************************************************************
   6+ 94C3              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94C3
   8+ 94C3 7C           calcula_tercio ld a,h
   9+ 94C4 E6 18        	and $18
  10+ 94C6 CB 2F        	sra a
  11+ 94C8 CB 2F        	sra a
  12+ 94CA CB 2F        	sra a
  13+ 94CC C9           	ret
  14+ 94CD
# file closed: calcula_tercio.asm
2048  94CD              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94CD              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94CD              ;
   3+ 94CD              ;
   4+ 94CD              ;	CLS.
   5+ 94CD              ;
   6+ 94CD              ;	Limpia la pantalla y define sus atributos.
   7+ 94CD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94CD              ;
   9+ 94CD              ;	COLORES: 0 ..... NEGRO
  10+ 94CD              ;    		 1 ..... AZUL
  11+ 94CD              ; 			 2 ..... ROJO
  12+ 94CD              ;			 3 ..... MAGENTA
  13+ 94CD              ; 			 4 ..... VERDE
  14+ 94CD              ; 			 5 ..... CIAN
  15+ 94CD              ;			 6 ..... AMARILLO
  16+ 94CD              ; 			 7 ..... BLANCO
  17+ 94CD              ;
  18+ 94CD              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94CD              ;
  20+ 94CD              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94CD
  22+ 94CD
  23+ 94CD 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94D0 11 01 40     	LD DE,$4001
  25+ 94D3 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D6 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94D8 ED B0        	LDIR
  28+ 94DA 01 FF 02     	LD BC,767
  29+ 94DD 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94DE ED B0        	LDIR
  31+ 94E0 C9           	ret
  32+ 94E1
# file closed: Cls.asm
2049  94E1              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94E1              ; ------------------------------------------------------------------------
   2+ 94E1              ;
   3+ 94E1              ;	30/1/24
   4+ 94E1              ;
   5+ 94E1              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94E1              ;	Fila superior "0", Columna izquierda "0".
   7+ 94E1              ;
   8+ 94E1              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94E1              ;
  10+ 94E1              ;	Modifica: A,BC y DE.
  11+ 94E1
  12+ 94E1 7D           Genera_coordenadas ld a,l
  13+ 94E2 E6 1F        	and $1f
  14+ 94E4 32 BB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94E7
  16+ 94E7 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94E8 FE 40        	cp $40
  18+ 94EA 38 1C        	jr c,4F
  19+ 94EC
  20+ 94EC CD C3 94     	call calcula_tercio
  21+ 94EF 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94F0
  23+ 94F0 1E 00        	ld e,0
  24+ 94F2 7D           	ld a,l
  25+ 94F3 E6 E0        	and $e0
  26+ 94F5 28 01        	jr z,1F
  27+ 94F7 04           	inc b
  28+ 94F8
  29+ 94F8 04           1 inc b
  30+ 94F9 05           	dec b
  31+ 94FA 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94FC              ;														; _ , salimos.
  33+ 94FC 1C           3 inc e
  34+ 94FD D6 20        	sub 32
  35+ 94FF 20 FB        	jr nz,3B
  36+ 9501 10 F5        	djnz 1B
  37+ 9503
  38+ 9503 7B           2 ld a,e
  39+ 9504 32 BC 8B     	ld (Coordenada_y),a
  40+ 9507 C9           	ret
  41+ 9508
  42+ 9508 AF           4 xor a
  43+ 9509 32 BC 8B     	ld (Coordenada_y),a
  44+ 950C C9           	ret
  45+ 950D
# file closed: Genera_coordenadas.asm
2050  950D              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 950D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 950D              ;
   3+ 950D              ;	20/09/24
   4+ 950D              ;
   5+ 950D              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 950D              ;   DE contiene Puntero_objeto.
   7+ 950D              ;   IX contiene el Puntero de impresión.
   8+ 950D
   9+ 950D              Genera_datos_de_impresion
  10+ 950D
  11+ 950D ED 73 07 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9511
  13+ 9511 31 C1 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9514 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9516
  16+ 9516 2A 29 8C         ld hl,(Scanlines_album_SP)
  17+ 9519
  18+ 9519 3E 05            ld a,5
  19+ 951B 85               add l
  20+ 951C 6F               ld l,a
  21+ 951D
  22+ 951D F9               ld sp,hl
  23+ 951E 22 29 8C         ld (Scanlines_album_SP),hl
  24+ 9521
  25+ 9521 21 00 00         ld hl,0
  26+ 9524
  27+ 9524 DD E5            push ix
  28+ 9526 3B               dec sp
  29+ 9527 ED 7A            adc hl,sp
  30+ 9529 D5               push de
  31+ 952A
  32+ 952A              ; Recuperamos SP.
  33+ 952A
  34+ 952A ED 7B 07 8C      ld sp,(Stack)
  35+ 952E
  36+ 952E E5               push hl
  37+ 952F F1               pop af
  38+ 9530 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9531
  40+ 9531              ; Tenemos el encabezado listo.
  41+ 9531              ; Preparamos registros para generar los scanlines.
  42+ 9531
  43+ 9531 DD E5            push ix
  44+ 9533 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9534
  46+ 9534 ED 5B 29 8C      ld de,(Scanlines_album_SP)
  47+ 9538
  48+ 9538              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9538              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9538
  51+ 9538 7C               ld a,h
  52+ 9539 FE 50            cp $50
  53+ 953B 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 953D
  55+ 953D 20 05            jr nz,2F
  56+ 953F
  57+ 953F 7D               ld a,l
  58+ 9540 FE E0            cp $e0
  59+ 9542 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9544
  61+ 9544 7D           2 ld a,l
  62+ 9545 FE C0            cp $c0
  63+ 9547 D2 DD 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 954A
  65+ 954A              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 954A
  67+ 954A CD DB 99         call NextScan
  68+ 954D EB               ex de,hl
  69+ 954E
  70+ 954E 73               ld (hl),e
  71+ 954F 23               inc hl
  72+ 9550 72               ld (hl),d
  73+ 9551 23               inc hl
  74+ 9552
  75+ 9552 EB               ex de,hl
  76+ 9553
  77+ 9553 CD DB 99         call NextScan
  78+ 9556 EB               ex de,hl
  79+ 9557
  80+ 9557 73               ld (hl),e
  81+ 9558 23               inc hl
  82+ 9559 72               ld (hl),d
  83+ 955A 23               inc hl
  84+ 955B
  85+ 955B EB               ex de,hl
  86+ 955C
  87+ 955C CD DB 99         call NextScan
  88+ 955F EB               ex de,hl
  89+ 9560
  90+ 9560 73               ld (hl),e
  91+ 9561 23               inc hl
  92+ 9562 72               ld (hl),d
  93+ 9563 23               inc hl
  94+ 9564
  95+ 9564 EB               ex de,hl
  96+ 9565
  97+ 9565 CD DB 99         call NextScan
  98+ 9568 EB               ex de,hl
  99+ 9569
 100+ 9569 73               ld (hl),e
 101+ 956A 23               inc hl
 102+ 956B 72               ld (hl),d
 103+ 956C 23               inc hl
 104+ 956D
 105+ 956D EB               ex de,hl
 106+ 956E
 107+ 956E CD DB 99         call NextScan
 108+ 9571 EB               ex de,hl
 109+ 9572
 110+ 9572 73               ld (hl),e
 111+ 9573 23               inc hl
 112+ 9574 72               ld (hl),d
 113+ 9575 23               inc hl
 114+ 9576
 115+ 9576 EB               ex de,hl
 116+ 9577
 117+ 9577 CD DB 99         call NextScan
 118+ 957A EB               ex de,hl
 119+ 957B
 120+ 957B 73               ld (hl),e
 121+ 957C 23               inc hl
 122+ 957D 72               ld (hl),d
 123+ 957E 23               inc hl
 124+ 957F
 125+ 957F EB               ex de,hl
 126+ 9580
 127+ 9580 CD DB 99         call NextScan
 128+ 9583 EB               ex de,hl
 129+ 9584
 130+ 9584 73               ld (hl),e
 131+ 9585 23               inc hl
 132+ 9586 72               ld (hl),d
 133+ 9587 23               inc hl
 134+ 9588
 135+ 9588 EB               ex de,hl
 136+ 9589
 137+ 9589 CD DB 99         call NextScan
 138+ 958C EB               ex de,hl
 139+ 958D
 140+ 958D 73               ld (hl),e
 141+ 958E 23               inc hl
 142+ 958F 72               ld (hl),d
 143+ 9590 23               inc hl
 144+ 9591
 145+ 9591 EB               ex de,hl
 146+ 9592
 147+ 9592 CD DB 99         call NextScan
 148+ 9595 EB               ex de,hl
 149+ 9596
 150+ 9596 73               ld (hl),e
 151+ 9597 23               inc hl
 152+ 9598 72               ld (hl),d
 153+ 9599 23               inc hl
 154+ 959A
 155+ 959A EB               ex de,hl
 156+ 959B
 157+ 959B CD DB 99         call NextScan
 158+ 959E EB               ex de,hl
 159+ 959F
 160+ 959F 73               ld (hl),e
 161+ 95A0 23               inc hl
 162+ 95A1 72               ld (hl),d
 163+ 95A2 23               inc hl
 164+ 95A3
 165+ 95A3 EB               ex de,hl
 166+ 95A4
 167+ 95A4 CD DB 99         call NextScan
 168+ 95A7 EB               ex de,hl
 169+ 95A8
 170+ 95A8 73               ld (hl),e
 171+ 95A9 23               inc hl
 172+ 95AA 72               ld (hl),d
 173+ 95AB 23               inc hl
 174+ 95AC
 175+ 95AC EB               ex de,hl
 176+ 95AD
 177+ 95AD CD DB 99         call NextScan
 178+ 95B0 EB               ex de,hl
 179+ 95B1
 180+ 95B1 73               ld (hl),e
 181+ 95B2 23               inc hl
 182+ 95B3 72               ld (hl),d
 183+ 95B4 23               inc hl
 184+ 95B5
 185+ 95B5 EB               ex de,hl
 186+ 95B6
 187+ 95B6 CD DB 99         call NextScan
 188+ 95B9 EB               ex de,hl
 189+ 95BA
 190+ 95BA 73               ld (hl),e
 191+ 95BB 23               inc hl
 192+ 95BC 72               ld (hl),d
 193+ 95BD 23               inc hl
 194+ 95BE
 195+ 95BE EB               ex de,hl
 196+ 95BF
 197+ 95BF CD DB 99         call NextScan
 198+ 95C2 EB               ex de,hl
 199+ 95C3
 200+ 95C3 73               ld (hl),e
 201+ 95C4 23               inc hl
 202+ 95C5 72               ld (hl),d
 203+ 95C6 23               inc hl
 204+ 95C7
 205+ 95C7 EB               ex de,hl
 206+ 95C8
 207+ 95C8 CD DB 99         call NextScan
 208+ 95CB EB               ex de,hl
 209+ 95CC
 210+ 95CC              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95CC              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95CC              ;   _ generar sus scanlines.
 213+ 95CC
 214+ 95CC              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95CC
 216+ 95CC 73               ld (hl),e
 217+ 95CD 23               inc hl
 218+ 95CE 72               ld (hl),d
 219+ 95CF 23               inc hl
 220+ 95D0
 221+ 95D0              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95D0
 223+ 95D0 22 29 8C         ld (Scanlines_album_SP),hl
 224+ 95D3
 225+ 95D3 EB               ex de,hl
 226+ 95D4
 227+ 95D4              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95D4
 229+ 95D4              ;    call NextScan
 230+ 95D4              ;    call NextScan
 231+ 95D4
 232+ 95D4 22 34 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D7
 234+ 95D7              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D7
 236+ 95D7 08               ex af,af
 237+ 95D8
 238+ 95D8 F5               push af
 239+ 95D9 E1               pop hl
 240+ 95DA
 241+ 95DA 36 10            ld (hl),16
 242+ 95DC
 243+ 95DC C9               ret
 244+ 95DD
 245+ 95DD              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95DD
 247+ 95DD              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95DD
 249+ 95DD 3E 57            ld a,$57
 250+ 95DF 94               sub h
 251+ 95E0 47               ld b,a
 252+ 95E1
 253+ 95E1 3E DF            ld a,$df
 254+ 95E3 BD               cp l
 255+ 95E4 38 04            jr c,1F
 256+ 95E6
 257+ 95E6 3E 08            ld a,8
 258+ 95E8 80               add b
 259+ 95E9 47               ld b,a
 260+ 95EA
 261+ 95EA              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95EA              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95EA
 264+ 95EA 48           1 ld c,b
 265+ 95EB 0C               inc c
 266+ 95EC
 267+ 95EC 04               inc b
 268+ 95ED 05               dec b
 269+ 95EE 20 02            jr nz,3F
 270+ 95F0
 271+ 95F0 18 0B            jr 6F
 272+ 95F2
 273+ 95F2 CD DB 99     3 call NextScan
 274+ 95F5 EB               ex de,hl
 275+ 95F6
 276+ 95F6 73               ld (hl),e
 277+ 95F7 23               inc hl
 278+ 95F8 72               ld (hl),d
 279+ 95F9 23               inc hl
 280+ 95FA
 281+ 95FA EB               ex de,hl
 282+ 95FB 10 F5            djnz 3B
 283+ 95FD
 284+ 95FD ED 53 29 8C  6 ld (Scanlines_album_SP),de
 285+ 9601
 286+ 9601 08           5 ex af,af
 287+ 9602 F5               push af
 288+ 9603 E1               pop hl
 289+ 9604
 290+ 9604 71               ld (hl),c
 291+ 9605
 292+ 9605 C9               ret
 293+ 9606
# file closed: Genera_datos_de_impresion.asm
2051  9606              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9606              ; -----------------------------------------------------------------------------
   2+ 9606              ;
   3+ 9606              ;   11/03/24
   4+ 9606              ;
   5+ 9606
   6+ 9606              Pinta_Sprites
   7+ 9606
   8+ 9606              ;    ld hl,(Scanlines_album_SP)
   9+ 9606              ;    call Extrae_address
  10+ 9606
  11+ 9606              ;    inc h
  12+ 9606              ;    dec h
  13+ 9606              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9606
  15+ 9606 ED 73 07 8C      ld (Stack),sp
  16+ 960A
  17+ 960A EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 960B              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 960B 2C               inc l
  20+ 960C 2C               inc l
  21+ 960D
  22+ 960D 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 960E
  24+ 960E 2C               inc l
  25+ 960F F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9610
  27+ 9610              ;   Seleccionamos rutina de impresión:
  28+ 9610
  29+ 9610 3E 10            ld a,16
  30+ 9612 B8               cp b
  31+ 9613 C2 0F 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9616
  33+ 9616              ;   Rutinas:
  34+ 9616
  35+ 9616              Pinta_rapido    ;   1520 t/states.
  36+ 9616
  37+ 9616 E1               pop hl
  38+ 9617
  39+ 9617 1A               ld a,(de)
  40+ 9618 AE               xor (hl)
  41+ 9619 77               ld (hl),a
  42+ 961A 2C               inc l
  43+ 961B 1C               inc e
  44+ 961C 1A               ld a,(de)
  45+ 961D AE               xor (hl)
  46+ 961E 77               ld (hl),a
  47+ 961F 2C               inc l
  48+ 9620 1C               inc e
  49+ 9621 1A               ld a,(de)
  50+ 9622 AE               xor (hl)
  51+ 9623 77               ld (hl),a
  52+ 9624 13               inc de
  53+ 9625
  54+ 9625 E1               pop hl
  55+ 9626
  56+ 9626 1A               ld a,(de)
  57+ 9627 AE               xor (hl)
  58+ 9628 77               ld (hl),a
  59+ 9629 2C               inc l
  60+ 962A 1C               inc e
  61+ 962B 1A               ld a,(de)
  62+ 962C AE               xor (hl)
  63+ 962D 77               ld (hl),a
  64+ 962E 2C               inc l
  65+ 962F 1C               inc e
  66+ 9630 1A               ld a,(de)
  67+ 9631 AE               xor (hl)
  68+ 9632 77               ld (hl),a
  69+ 9633 13               inc de
  70+ 9634
  71+ 9634 E1               pop hl
  72+ 9635
  73+ 9635 1A               ld a,(de)
  74+ 9636 AE               xor (hl)
  75+ 9637 77               ld (hl),a
  76+ 9638 2C               inc l
  77+ 9639 1C               inc e
  78+ 963A 1A               ld a,(de)
  79+ 963B AE               xor (hl)
  80+ 963C 77               ld (hl),a
  81+ 963D 2C               inc l
  82+ 963E 1C               inc e
  83+ 963F 1A               ld a,(de)
  84+ 9640 AE               xor (hl)
  85+ 9641 77               ld (hl),a
  86+ 9642 13               inc de
  87+ 9643
  88+ 9643 E1               pop hl
  89+ 9644
  90+ 9644 1A               ld a,(de)
  91+ 9645 AE               xor (hl)
  92+ 9646 77               ld (hl),a
  93+ 9647 2C               inc l
  94+ 9648 1C               inc e
  95+ 9649 1A               ld a,(de)
  96+ 964A AE               xor (hl)
  97+ 964B 77               ld (hl),a
  98+ 964C 2C               inc l
  99+ 964D 1C               inc e
 100+ 964E 1A               ld a,(de)
 101+ 964F AE               xor (hl)
 102+ 9650 77               ld (hl),a
 103+ 9651 13               inc de
 104+ 9652
 105+ 9652 E1               pop hl
 106+ 9653
 107+ 9653 1A               ld a,(de)
 108+ 9654 AE               xor (hl)
 109+ 9655 77               ld (hl),a
 110+ 9656 2C               inc l
 111+ 9657 1C               inc e
 112+ 9658 1A               ld a,(de)
 113+ 9659 AE               xor (hl)
 114+ 965A 77               ld (hl),a
 115+ 965B 2C               inc l
 116+ 965C 1C               inc e
 117+ 965D 1A               ld a,(de)
 118+ 965E AE               xor (hl)
 119+ 965F 77               ld (hl),a
 120+ 9660 13               inc de
 121+ 9661
 122+ 9661 E1               pop hl
 123+ 9662
 124+ 9662 1A               ld a,(de)
 125+ 9663 AE               xor (hl)
 126+ 9664 77               ld (hl),a
 127+ 9665 2C               inc l
 128+ 9666 1C               inc e
 129+ 9667 1A               ld a,(de)
 130+ 9668 AE               xor (hl)
 131+ 9669 77               ld (hl),a
 132+ 966A 2C               inc l
 133+ 966B 1C               inc e
 134+ 966C 1A               ld a,(de)
 135+ 966D AE               xor (hl)
 136+ 966E 77               ld (hl),a
 137+ 966F 13               inc de
 138+ 9670
 139+ 9670 E1               pop hl
 140+ 9671
 141+ 9671 1A               ld a,(de)
 142+ 9672 AE               xor (hl)
 143+ 9673 77               ld (hl),a
 144+ 9674 2C               inc l
 145+ 9675 1C               inc e
 146+ 9676 1A               ld a,(de)
 147+ 9677 AE               xor (hl)
 148+ 9678 77               ld (hl),a
 149+ 9679 2C               inc l
 150+ 967A 1C               inc e
 151+ 967B 1A               ld a,(de)
 152+ 967C AE               xor (hl)
 153+ 967D 77               ld (hl),a
 154+ 967E 13               inc de
 155+ 967F
 156+ 967F E1               pop hl
 157+ 9680
 158+ 9680 1A               ld a,(de)
 159+ 9681 AE               xor (hl)
 160+ 9682 77               ld (hl),a
 161+ 9683 2C               inc l
 162+ 9684 1C               inc e
 163+ 9685 1A               ld a,(de)
 164+ 9686 AE               xor (hl)
 165+ 9687 77               ld (hl),a
 166+ 9688 2C               inc l
 167+ 9689 1C               inc e
 168+ 968A 1A               ld a,(de)
 169+ 968B AE               xor (hl)
 170+ 968C 77               ld (hl),a
 171+ 968D 13               inc de
 172+ 968E
 173+ 968E E1               pop hl
 174+ 968F
 175+ 968F 1A               ld a,(de)
 176+ 9690 AE               xor (hl)
 177+ 9691 77               ld (hl),a
 178+ 9692 2C               inc l
 179+ 9693 1C               inc e
 180+ 9694 1A               ld a,(de)
 181+ 9695 AE               xor (hl)
 182+ 9696 77               ld (hl),a
 183+ 9697 2C               inc l
 184+ 9698 1C               inc e
 185+ 9699 1A               ld a,(de)
 186+ 969A AE               xor (hl)
 187+ 969B 77               ld (hl),a
 188+ 969C 13               inc de
 189+ 969D
 190+ 969D E1               pop hl
 191+ 969E
 192+ 969E 1A               ld a,(de)
 193+ 969F AE               xor (hl)
 194+ 96A0 77               ld (hl),a
 195+ 96A1 2C               inc l
 196+ 96A2 1C               inc e
 197+ 96A3 1A               ld a,(de)
 198+ 96A4 AE               xor (hl)
 199+ 96A5 77               ld (hl),a
 200+ 96A6 2C               inc l
 201+ 96A7 1C               inc e
 202+ 96A8 1A               ld a,(de)
 203+ 96A9 AE               xor (hl)
 204+ 96AA 77               ld (hl),a
 205+ 96AB 13               inc de
 206+ 96AC
 207+ 96AC E1               pop hl
 208+ 96AD
 209+ 96AD 1A               ld a,(de)
 210+ 96AE AE               xor (hl)
 211+ 96AF 77               ld (hl),a
 212+ 96B0 2C               inc l
 213+ 96B1 1C               inc e
 214+ 96B2 1A               ld a,(de)
 215+ 96B3 AE               xor (hl)
 216+ 96B4 77               ld (hl),a
 217+ 96B5 2C               inc l
 218+ 96B6 1C               inc e
 219+ 96B7 1A               ld a,(de)
 220+ 96B8 AE               xor (hl)
 221+ 96B9 77               ld (hl),a
 222+ 96BA 13               inc de
 223+ 96BB
 224+ 96BB E1               pop hl
 225+ 96BC
 226+ 96BC 1A               ld a,(de)
 227+ 96BD AE               xor (hl)
 228+ 96BE 77               ld (hl),a
 229+ 96BF 2C               inc l
 230+ 96C0 1C               inc e
 231+ 96C1 1A               ld a,(de)
 232+ 96C2 AE               xor (hl)
 233+ 96C3 77               ld (hl),a
 234+ 96C4 2C               inc l
 235+ 96C5 1C               inc e
 236+ 96C6 1A               ld a,(de)
 237+ 96C7 AE               xor (hl)
 238+ 96C8 77               ld (hl),a
 239+ 96C9 13               inc de
 240+ 96CA
 241+ 96CA E1               pop hl
 242+ 96CB
 243+ 96CB 1A               ld a,(de)
 244+ 96CC AE               xor (hl)
 245+ 96CD 77               ld (hl),a
 246+ 96CE 2C               inc l
 247+ 96CF 1C               inc e
 248+ 96D0 1A               ld a,(de)
 249+ 96D1 AE               xor (hl)
 250+ 96D2 77               ld (hl),a
 251+ 96D3 2C               inc l
 252+ 96D4 1C               inc e
 253+ 96D5 1A               ld a,(de)
 254+ 96D6 AE               xor (hl)
 255+ 96D7 77               ld (hl),a
 256+ 96D8 13               inc de
 257+ 96D9
 258+ 96D9 E1               pop hl
 259+ 96DA
 260+ 96DA 1A               ld a,(de)
 261+ 96DB AE               xor (hl)
 262+ 96DC 77               ld (hl),a
 263+ 96DD 2C               inc l
 264+ 96DE 1C               inc e
 265+ 96DF 1A               ld a,(de)
 266+ 96E0 AE               xor (hl)
 267+ 96E1 77               ld (hl),a
 268+ 96E2 2C               inc l
 269+ 96E3 1C               inc e
 270+ 96E4 1A               ld a,(de)
 271+ 96E5 AE               xor (hl)
 272+ 96E6 77               ld (hl),a
 273+ 96E7 13               inc de
 274+ 96E8
 275+ 96E8 E1               pop hl
 276+ 96E9
 277+ 96E9 1A               ld a,(de)
 278+ 96EA AE               xor (hl)
 279+ 96EB 77               ld (hl),a
 280+ 96EC 2C               inc l
 281+ 96ED 1C               inc e
 282+ 96EE 1A               ld a,(de)
 283+ 96EF AE               xor (hl)
 284+ 96F0 77               ld (hl),a
 285+ 96F1 2C               inc l
 286+ 96F2 1C               inc e
 287+ 96F3 1A               ld a,(de)
 288+ 96F4 AE               xor (hl)
 289+ 96F5 77               ld (hl),a
 290+ 96F6 13               inc de
 291+ 96F7
 292+ 96F7 E1               pop hl
 293+ 96F8
 294+ 96F8 1A               ld a,(de)
 295+ 96F9 AE               xor (hl)
 296+ 96FA 77               ld (hl),a
 297+ 96FB 2C               inc l
 298+ 96FC 1C               inc e
 299+ 96FD 1A               ld a,(de)
 300+ 96FE AE               xor (hl)
 301+ 96FF 77               ld (hl),a
 302+ 9700 2C               inc l
 303+ 9701 1C               inc e
 304+ 9702 1A               ld a,(de)
 305+ 9703 AE               xor (hl)
 306+ 9704 77               ld (hl),a
 307+ 9705 13               inc de
 308+ 9706
 309+ 9706 ED 73 29 8C      ld (Scanlines_album_SP),sp
 310+ 970A ED 7B 07 8C      ld sp,(Stack)
 311+ 970E C9               ret
 312+ 970F
 313+ 970F              Pinta_lento
 314+ 970F
 315+ 970F E1           1 pop hl
 316+ 9710
 317+ 9710 1A               ld a,(de)
 318+ 9711 AE               xor (hl)
 319+ 9712 77               ld (hl),a
 320+ 9713 2C               inc l
 321+ 9714 1C               inc e
 322+ 9715 1A               ld a,(de)
 323+ 9716 AE               xor (hl)
 324+ 9717 77               ld (hl),a
 325+ 9718 2C               inc l
 326+ 9719 1C               inc e
 327+ 971A 1A               ld a,(de)
 328+ 971B AE               xor (hl)
 329+ 971C 77               ld (hl),a
 330+ 971D 13               inc de
 331+ 971E
 332+ 971E 10 EF            djnz 1B
 333+ 9720
 334+ 9720 ED 73 29 8C      ld (Scanlines_album_SP),sp
 335+ 9724 ED 7B 07 8C      ld sp,(Stack)
 336+ 9728 C9               ret
# file closed: Pinta_Sprites.asm
2052  9729              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9729              ; ******************************************************************************************************************************************************************************************
   2+ 9729              ;
   3+ 9729              ; 26/06/23
   4+ 9729              ;
   5+ 9729              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9729
   7+ 9729              Draw
   8+ 9729
   9+ 9729 CD CF 99     	call Prepara_draw
  10+ 972C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 972D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 972E 28 05        	jr z,2F
  13+ 9730
  14+ 9730 3A D9 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9733 18 0C        	jr 1F
  16+ 9735
  17+ 9735 2A D7 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9738 22 CA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 973B CD C7 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 973E              ;													; _la esquina superior izquierda de la pantalla.
  21+ 973E
  22+ 973E CD 6E 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9741
  24+ 9741 3A C7 8B     1 ld a,(Ctrl_0)
  25+ 9744 CB 6F        	bit 5,a
  26+ 9746 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9748
  28+ 9748 CD 5D 97     	call Comprueba_limite_horizontal
  29+ 974B CD ED 97     	call Comprueba_limite_vertical
  30+ 974E
  31+ 974E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 974E              ; -----------------------
  33+ 974E              ; -----------------------
  34+ 974E              ; -----------------------
  35+ 974E
  36+ 974E CD 43 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9751 CD 7A 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9754
  39+ 9754 3A C7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9757 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9759 32 C7 8B     	ld (Ctrl_0),a
  42+ 975C
  43+ 975C C9           	ret
  44+ 975D
  45+ 975D              ; *******************************************************************************************************************************************************************************************
  46+ 975D              ;	21/01/23
  47+ 975D              ;
  48+ 975D              ; 	Comprueba_limite_horizontal.
  49+ 975D              ;
  50+ 975D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 975D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 975D              ;
  53+ 975D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 975D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 975D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 975D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 975D
  58+ 975D
  59+ 975D
  60+ 975D 3A C7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9760 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9762 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9764 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9766 32 C7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9769 18 09            jr 6F
  66+ 976B CB 5F        1 bit 3,a
  67+ 976D 28 0A            jr z,2F
  68+ 976F E6 F7            and $f7
  69+ 9771 32 C7 8B         ld (Ctrl_0),a
  70+ 9774 CD C7 98     6 call Inicializacion
  71+ 9777 18 5B            jr 5F
  72+ 9779 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 977A
  74+ 977A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 977A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 977A
  77+ 977A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 977B 2A DB 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 977E CD C3 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9781 67           	ld h,a
  81+ 9782 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9783 CD C3 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9786 67           	ld h,a
  84+ 9787 A7           	and a
  85+ 9788 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 978A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 978B 3A D9 8B     	ld a,(Cuad_objeto)
  88+ 978E FE 02        	cp 2
  89+ 9790 38 1E        	jr c,3F
  90+ 9792 28 1C        	jr z,3F
  91+ 9794 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9795 28 23            jr z,7F
  93+ 9797 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9799 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 979B E1           	pop hl
  96+ 979C
  97+ 979C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 979C              ; _para indicar con E="2" en caso necesario.
  99+ 979C
 100+ 979C E5               push hl
 101+ 979D C5               push bc
 102+ 979E CD C3 94     	call calcula_tercio
 103+ 97A1 FE 01        	cp 1
 104+ 97A3 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A5 CD D5 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A8 28 26            jr z,9F
 107+ 97AA 38 24            jr c,9F
 108+ 97AC 1E 00        11 ld e,0
 109+ 97AE 18 22            jr 8F
 110+ 97B0 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97B1 28 07        	jr z, 7F
 112+ 97B3 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B5 1E 00         	ld e,0
 114+ 97B7 E1           	pop hl
 115+ 97B8 18 04        	jr 4F
 116+ 97BA 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97BC 18 15            jr 10F
 118+ 97BE
 119+ 97BE              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97BE              ; _para indicar con E="2" en caso necesario.
 121+ 97BE
 122+ 97BE E5           4 push hl
 123+ 97BF C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97C0 CD C3 94     	call calcula_tercio
 125+ 97C3 FE 01        	cp 1
 126+ 97C5 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C7 CD D5 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97CA 28 04            jr z,9F
 129+ 97CC 30 02            jr nc,9F
 130+ 97CE 18 02        	jr 8F
 131+ 97D0 1E 02        9 ld e,2
 132+ 97D2 C1           8 pop bc
 133+ 97D3 E1           10 pop hl
 134+ 97D4 C9           5 ret
 135+ 97D5
 136+ 97D5              ; --------------------
 137+ 97D5              ;
 138+ 97D5              ; 25/08/22
 139+ 97D5
 140+ 97D5 CD C3 94     Comprueba_centro call calcula_tercio
 141+ 97D8 67               ld h,a
 142+ 97D9 08           	ex af,af
 143+ 97DA FE 02        	cp 2
 144+ 97DC 38 07        	jr c,1F
 145+ 97DE 28 05        	jr z,1F
 146+ 97E0 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97E3 18 03        	jr 2F
 148+ 97E5 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E8 08           2 ex af,af
 150+ 97E9 A7               and a
 151+ 97EA ED 42            sbc hl,bc
 152+ 97EC C9               ret
 153+ 97ED
 154+ 97ED              ; *********************************************************************************************************************************************************************************************
 155+ 97ED              ;
 156+ 97ED              ;   16/8/22
 157+ 97ED              ;
 158+ 97ED              ;	Comprueba_limite_vertical
 159+ 97ED              ;
 160+ 97ED              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97ED              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97ED              ;
 163+ 97ED
 164+ 97ED 2A CA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97F0 7D           	ld a,l
 166+ 97F1 E6 1F        	and $1F
 167+ 97F3 57           	ld d,a
 168+ 97F4 3A DD 8B     	ld a,(Limite_vertical)
 169+ 97F7 BA           	cp d 											; Límite - Posición.
 170+ 97F8 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F9 3A D9 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97FC CB 47        	bit 0,a
 173+ 97FE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9800
 175+ 9800              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9800
 177+ 9800 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9801 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9803
 180+ 9803              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9803              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9803
 183+ 9803 3A BB 8B         ld a,(Coordenada_X)
 184+ 9806 16 0F            ld d,Centro_izquierda
 185+ 9808 A7               and a
 186+ 9809 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 980A 28 1E            jr z,3F
 188+ 980C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 980E              ;                                                    ; _salimos sin modificar nada.
 190+ 980E 18 0E            jr 2F
 191+ 9810 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9811 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9813
 194+ 9813              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9813              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9813
 197+ 9813 3A BB 8B         ld a,(Coordenada_X)
 198+ 9816 16 10            ld d,Centro_derecha
 199+ 9818 A7               and a
 200+ 9819 92               sub d
 201+ 981A 28 0E            jr z,3F
 202+ 981C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 981E              ;                                                    ; _salimos sin modificar nada.
 204+ 981E CB 43        2 bit 0,e
 205+ 9820 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9822 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9823 CD B7 98         call Modificaccionne
 208+ 9826 C1           	pop bc
 209+ 9827 CD C7 98         call Inicializacion
 210+ 982A C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 982B
 212+ 982B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 982B
 214+ 982B C5           4 push bc
 215+ 982C 01 C9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 982F 0A           	ld a,(bc)
 217+ 9830 3D           	dec a
 218+ 9831 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9832 7D           	ld a,l
 220+ 9833 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9834 CB 47        	bit 0,a
 222+ 9836 28 03        	jr z,5F
 223+ 9838 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9839 18 2E        	jr 7F
 225+ 983B
 226+ 983B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 983B
 228+ 983B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 983C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 983D 3A C7 8B     	ld a,(Ctrl_0)
 231+ 9840 CB 4F        	bit 1,a
 232+ 9842 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9844 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9845
 235+ 9845              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9845
 237+ 9845 1C               inc e
 238+ 9846 1D               dec e
 239+ 9847 20 07            jr nz,12F
 240+ 9849 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 984A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 984B 22 CA 8B     	ld (Posicion_actual),hl
 243+ 984E 18 44        13 jr 9F
 244+ 9850 CB 43        12 bit 0,e
 245+ 9852 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9854              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9854 C1           	pop bc
 248+ 9855 18 D3        	jr 3B
 249+ 9857 80           14 add b
 250+ 9858 6F               ld l,a
 251+ 9859 22 CA 8B     	ld (Posicion_actual),hl
 252+ 985C CD B7 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 985F 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9861 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9863 32 C7 8B         ld (Ctrl_0),a
 256+ 9866 F1           	pop af
 257+ 9867 18 2B        	jr 9F
 258+ 9869
 259+ 9869              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9869
 261+ 9869 F5           7 push af
 262+ 986A 3A C7 8B     	ld a,(Ctrl_0)
 263+ 986D CB 47        	bit 0,a
 264+ 986F 20 1D        	jr nz,8F
 265+ 9871 F1           	pop af
 266+ 9872
 267+ 9872              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9872
 269+ 9872 1C           	inc e
 270+ 9873 1D               dec e
 271+ 9874 20 07            jr nz,10F
 272+ 9876 90           	sub b
 273+ 9877 6F               ld l,a
 274+ 9878 22 CA 8B     	ld (Posicion_actual),hl
 275+ 987B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 987D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 987D CB 43        10 bit 0,e
 278+ 987F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9881              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9881 C1           	pop bc
 281+ 9882 18 A6        	jr 3B
 282+ 9884 90           16 sub b
 283+ 9885 6F               ld l,a
 284+ 9886 22 CA 8B     	ld (Posicion_actual),hl
 285+ 9889 CD B7 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 988C 18 06            jr 9F
 287+ 988E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9890 32 C7 8B         ld (Ctrl_0),a
 289+ 9893 F1           	pop af
 290+ 9894 C1           9 pop bc
 291+ 9895 1E 00        	ld e,0
 292+ 9897 CD C7 98         call Inicializacion
 293+ 989A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 989B 08           	ex af,af
 295+ 989C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 989D 18 8B            jr 3B
 297+ 989F
 298+ 989F              ; --------------------
 299+ 989F
 300+ 989F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98A1 CD EA 99     1 call PreviousScan
 302+ 98A4 10 FB            djnz 1B
 303+ 98A6 22 CA 8B     	ld (Posicion_actual),hl
 304+ 98A9 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98AA C9           	ret
 306+ 98AB
 307+ 98AB              ; --------------------
 308+ 98AB
 309+ 98AB 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98AD CD DB 99     1 call NextScan
 311+ 98B0 10 FB            djnz 1B
 312+ 98B2 22 CA 8B     	ld (Posicion_actual),hl
 313+ 98B5 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B6 C9           	ret
 315+ 98B7
 316+ 98B7              ; --------------------
 317+ 98B7              ;
 318+ 98B7              ;	22/01/23
 319+ 98B7              ;
 320+ 98B7              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B7              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B7              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B7
 324+ 98B7
 325+ 98B7              Modificaccionne
 326+ 98B7
 327+ 98B7 3A D9 8B     	ld a,(Cuad_objeto)
 328+ 98BA FE 02        	cp 2
 329+ 98BC CC 9F 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98BF DC 9F 98         call c,Modifica_Pos_actual
 331+ 98C2 C8           	ret z
 332+ 98C3 CD AB 98         call Modifica_Pos_actual2
 333+ 98C6 C9               ret
 334+ 98C7
 335+ 98C7              ; *************************************************************************************************************************************************************************************************
 336+ 98C7              ;
 337+ 98C7              ;	13/8/22
 338+ 98C7              ;
 339+ 98C7              ;	Inicializacion
 340+ 98C7              ;
 341+ 98C7              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C7              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C7              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C7              ;
 345+ 98C7              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C7              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C7              ;	_ desaparece/aparece.
 348+ 98C7
 349+ 98C7              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C7              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C7              ;
 352+ 98C7              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C7              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C7              ; 		   [E] ="0"
 355+ 98C7
 356+ 98C7              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C7
 358+ 98C7 CD C3 94     Inicializacion call calcula_tercio
 359+ 98CA 28 36        	jr z,primit
 360+ 98CC E6 02        	and 2
 361+ 98CE 20 07        	jr nz,segmit
 362+ 98D0 7D           	ld a,l
 363+ 98D1 FE 7F        	cp $7f
 364+ 98D3 38 2D        	jr c,primit
 365+ 98D5 28 2B        	jr z,primit
 366+ 98D7 CD 3D 99     segmit call column
 367+ 98DA 38 13        	jr c,tercuad
 368+ 98DC 3E 04        cuarcuad ld a,4
 369+ 98DE 32 D9 8B     	ld (Cuad_objeto),a
 370+ 98E1 21 20 48     	ld hl,$4820
 371+ 98E4 22 DB 8B     	ld (Limite_horizontal),hl
 372+ 98E7 21 DD 8B     	ld hl,Limite_vertical
 373+ 98EA 36 0D        	ld (hl),$0d
 374+ 98EC 08           	ex af,af
 375+ 98ED 18 3C        	jr 1F
 376+ 98EF              tercuad
 377+ 98EF 3E 03        	ld a,3
 378+ 98F1 32 D9 8B     	ld (Cuad_objeto),a
 379+ 98F4 21 20 48     	ld hl,$4820
 380+ 98F7 22 DB 8B     	ld (Limite_horizontal),hl
 381+ 98FA 21 DD 8B     	ld hl,Limite_vertical
 382+ 98FD 36 12        	ld (hl),$12
 383+ 98FF 08           	ex af,af
 384+ 9900 18 29        	jr 1F
 385+ 9902 CD 3D 99     primit call column
 386+ 9905 38 13        	jr c, primcuad
 387+ 9907              segcuad
 388+ 9907 3E 02        	ld a,2
 389+ 9909 32 D9 8B     	ld (Cuad_objeto),a
 390+ 990C 21 C0 4F     	ld hl,$4fc0
 391+ 990F 22 DB 8B     	ld (Limite_horizontal),hl
 392+ 9912 21 DD 8B     	ld hl,Limite_vertical
 393+ 9915 36 0D        	ld (hl),$0d
 394+ 9917 08           	ex af,af
 395+ 9918 18 11        	jr 1F
 396+ 991A              primcuad
 397+ 991A 3E 01        	ld a,1
 398+ 991C 32 D9 8B     	ld (Cuad_objeto),a
 399+ 991F 21 C0 4F     	ld hl,$4fc0
 400+ 9922 22 DB 8B     	ld (Limite_horizontal),hl
 401+ 9925 21 DD 8B     	ld hl,Limite_vertical
 402+ 9928 36 12        	ld (hl),$12
 403+ 992A 08           	ex af,af
 404+ 992B
 405+ 992B C5           1 push bc
 406+ 992C E5           	push hl
 407+ 992D D5           	push de
 408+ 992E
 409+ 992E 2A CA 8B     	ld hl,(Posicion_actual)
 410+ 9931 CD E1 94     	call Genera_coordenadas
 411+ 9934
 412+ 9934 D1           	pop de
 413+ 9935 E1           	pop hl
 414+ 9936 C1           	pop bc
 415+ 9937
 416+ 9937 21 C7 8B     	ld hl,Ctrl_0
 417+ 993A CB EE        	set 5,(hl)
 418+ 993C C9           	ret
 419+ 993D
 420+ 993D              ; ------------------------------------------------------------------------------------------------------------------
 421+ 993D
 422+ 993D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 993D              ;
 424+ 993D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 993D
 426+ 993D 7D           column ld a,l
 427+ 993E E6 1F        	and $1f
 428+ 9940 FE 10         	cp $10
 429+ 9942 C9            	ret
 430+ 9943
 431+ 9943              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9943              ;
 433+ 9943              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9943              ;
 435+ 9943              ; 14/12/22
 436+ 9943              ;
 437+ 9943              ;	Modifica: A y BC.
 438+ 9943
 439+ 9943 3A D9 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9946 E6 01        	and 1
 441+ 9948 28 17        	jr z,1F
 442+ 994A
 443+ 994A              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 994A
 445+ 994A 3A BB 8B     	ld a,(Coordenada_X)
 446+ 994D 47           	ld b,a
 447+ 994E 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 994F 79           	ld a,c
 449+ 9950 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9951 38 08        	jr c,2F
 451+ 9953 47           	ld b,a
 452+ 9954 79           	ld a,c
 453+ 9955 90           	sub b
 454+ 9956 32 DA 8B     	ld (Columnas),a
 455+ 9959 18 1B        	jr 4F
 456+ 995B 79           2 ld a,c
 457+ 995C 32 DA 8B     	ld (Columnas),a
 458+ 995F 18 15        	jr 4F
 459+ 9961
 460+ 9961              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9961
 462+ 9961 3A BB 8B     1 ld a,(Coordenada_X)
 463+ 9964 81           	add c
 464+ 9965 3D           	dec a
 465+ 9966 D6 1F        	sub $1f
 466+ 9968 38 08        	jr c,3F
 467+ 996A 47           	ld b,a
 468+ 996B 79           	ld a,c
 469+ 996C 90           	sub b
 470+ 996D 32 DA 8B     	ld (Columnas),a
 471+ 9970 18 04        	jr 4F
 472+ 9972 79           3 ld a,c
 473+ 9973 32 DA 8B     	ld (Columnas),a
 474+ 9976 D9           4 exx
 475+ 9977 4F           	ld c,a
 476+ 9978 D9           	exx
 477+ 9979 C9            ret
 478+ 997A
 479+ 997A              ; --------------------------------------------------------------------------------------------------------------------
 480+ 997A              ;
 481+ 997A              ;   19/7/23
 482+ 997A              ;
 483+ 997A              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 997A              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 997A              ;
 486+ 997A              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 997A              ;			HL e IY Contienen (Puntero_objeto).
 488+ 997A              ;
 489+ 997A              ;	DESTRUYE: HL,B Y A.
 490+ 997A
 491+ 997A 3A D9 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 997D FE 02        	cp 2
 493+ 997F 38 18        	jr c,1F
 494+ 9981 28 16        	jr z,1F
 495+ 9983 E6 01        	and 1
 496+ 9985 28 0D        	jr z,3F
 497+ 9987
 498+ 9987              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9987
 500+ 9987 CD C3 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 998A
 502+ 998A 7D           9 ld a,l
 503+ 998B E6 1F        	and $1f
 504+ 998D 28 2A        	jr z,7F
 505+ 998F 2B           	dec hl
 506+ 9990 10 F8        	djnz 9B
 507+ 9992 18 25        	jr 7F
 508+ 9994
 509+ 9994              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9994
 511+ 9994 2A CA 8B     3 ld hl,(Posicion_actual)
 512+ 9997 18 20        	jr 7F
 513+ 9999
 514+ 9999 28 14        1 jr z,2F
 515+ 999B
 516+ 999B              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 999B
 518+ 999B CD C3 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 999E
 520+ 999E 7D           4 ld a,l
 521+ 999F E6 1F        	and $1f
 522+ 99A1 28 03        	jr z,6F
 523+ 99A3 2B           	dec hl
 524+ 99A4 10 F8        	djnz 4B
 525+ 99A6 06 0F        6 ld b,15
 526+ 99A8 CD EA 99     5 call PreviousScan
 527+ 99AB 10 FB        	djnz 5B
 528+ 99AD 18 0A        	jr 7F
 529+ 99AF
 530+ 99AF              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99AF
 532+ 99AF CD C3 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99B2 06 0F        	ld b,15
 534+ 99B4 CD EA 99     8 call PreviousScan
 535+ 99B7 10 FB        	djnz 8B
 536+ 99B9
 537+ 99B9 E5           7 push hl
 538+ 99BA DD E1        	pop ix
 539+ 99BC
 540+ 99BC 2A CC 8B     	ld hl,(Puntero_objeto)
 541+ 99BF E5           	push hl
 542+ 99C0 FD E1        	pop iy
 543+ 99C2
 544+ 99C2 C9           	ret
 545+ 99C3
 546+ 99C3              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99C3              ;
 548+ 99C3              ;	2/1/23
 549+ 99C3              ;
 550+ 99C3              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99C3              ;
 552+ 99C3              ;	Tras esta rutina tenemos:
 553+ 99C3              ;
 554+ 99C3              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99C3              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99C3              ;
 557+ 99C3              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99C3
 559+ 99C3 2A CA 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C6 3A DA 8B     	ld a,(Columnas)
 561+ 99C9 3D           	dec a
 562+ 99CA 20 01        	jr nz,1F
 563+ 99CC 3C           	inc a
 564+ 99CD 47           1 ld b,a
 565+ 99CE C9           	ret
 566+ 99CF
 567+ 99CF              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99CF              ;
 569+ 99CF              ;	Prepara_draw
 570+ 99CF              ;
 571+ 99CF              ;	Es una rutina de carga.
 572+ 99CF              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99CF              ;
 574+ 99CF              ;	FUNCIONAMIENTO:
 575+ 99CF              ;
 576+ 99CF              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99CF              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99CF              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99CF              ;
 580+ 99CF              ;	DESTRUYE:
 581+ 99CF              ;
 582+ 99CF              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99CF
 584+ 99CF 21 C8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99D2 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99D3 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99D4 4E           	ld c,(hl)
 588+ 99D5 2A CA 8B     	ld hl,(Posicion_actual)
 589+ 99D8 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99DA C9           	ret
 591+ 99DB
 592+ 99DB              ;----------------------------------------------------------------------------------------------------------------
 593+ 99DB              ;
 594+ 99DB              ;	5/08/22
 595+ 99DB              ;
 596+ 99DB              ;   NextScan.
 597+ 99DB              ;
 598+ 99DB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99DB              ;
 600+ 99DB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99DB              ;
 602+ 99DB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99DB              ;
 604+ 99DB              ;       DESTRUIDOS: AF y HL !!!
 605+ 99DB              ;
 606+ 99DB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99DB              ;
 608+ 99DB
 609+ 99DB 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99DC 7C               ld a,h
 611+ 99DD E6 07            and 7
 612+ 99DF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99E0
 614+ 99E0 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99E1 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99E3 6F               ld l,a
 617+ 99E4 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E5
 619+ 99E5 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E6 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E8 67               ld h,a
 622+ 99E9 C9               ret
 623+ 99EA
 624+ 99EA              ;----------------------------------------------------------------------------------------------------------------
 625+ 99EA              ;
 626+ 99EA              ;	5/08/22
 627+ 99EA              ;
 628+ 99EA              ;   PreviousScan.
 629+ 99EA              ;
 630+ 99EA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99EA              ;
 632+ 99EA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99EA              ;
 634+ 99EA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99EA              ;
 636+ 99EA              ;       DESTRUIDOS: AF y HL !!!
 637+ 99EA              ;
 638+ 99EA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99EA              ;
 640+ 99EA
 641+ 99EA 7C           PreviousScan ld a,h
 642+ 99EB 25               dec h               ; Dec H.
 643+ 99EC E6 07            and 7
 644+ 99EE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99EF
 646+ 99EF 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99F0 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99F2 6F               ld l,a
 649+ 99F3 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99F4
 651+ 99F4 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F5 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F7 67               ld h,a
 654+ 99F8 C9               ret
 655+ 99F9
 656+ 99F9
 657+ 99F9
 658+ 99F9
 659+ 99F9
 660+ 99F9
 661+ 99F9
 662+ 99F9
 663+ 99F9
 664+ 99F9
 665+ 99F9
 666+ 99F9
# file closed: Draw_XOR.asm
2053  99F9              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F9
   2+ 99F9              ; ******************************************************************************************************************************************************************************************
   3+ 99F9              ;
   4+ 99F9              ;   20/05/23
   5+ 99F9              ;
   6+ 99F9              ;	Recompone_posicion_inicio
   7+ 99F9              ;
   8+ 99F9              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F9              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F9              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F9              ;	_ a una u otra rutina.
  12+ 99F9
  13+ 99F9              Recompone_posicion_inicio
  14+ 99F9
  15+ 99F9 2A D7 8B     	ld hl,(Posicion_inicio)
  16+ 99FC 7D           	ld a,l
  17+ 99FD E6 1F        	and $1f
  18+ 99FF 28 16        	jr z,1F
  19+ 9A01
  20+ 9A01 FE 1F        	cp $1f
  21+ 9A03 28 0D        	jr z,3F
  22+ 9A05
  23+ 9A05 21 C6 8B     	ld hl,Ctrl_2
  24+ 9A08 CB C6        	set 0,(hl)
  25+ 9A0A 2A CC 8B     	ld hl,(Puntero_objeto)
  26+ 9A0D 22 F8 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A10 18 08        	jr 2F
  28+ 9A12
  29+ 9A12 CD C0 9B     3 call Mov_left
  30+ 9A15 18 03        	jr 2F
  31+ 9A17
  32+ 9A17 CD 9D 9A     1 call Mov_right
  33+ 9A1A 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A1D 22 CC 8B     	ld (Puntero_objeto),hl
  35+ 9A20 C9           	ret
  36+ 9A21
  37+ 9A21              ; ******************************************************************************************************************************************************************************************
  38+ 9A21              ;
  39+ 9A21              ;   27/05/23
  40+ 9A21              ;
  41+ 9A21              ;	Mov_down
  42+ 9A21              ;
  43+ 9A21              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A21              ;
  45+ 9A21              ;
  46+ 9A21              Mov_down
  47+ 9A21
  48+ 9A21 CD 8B 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A24              ;																	; _ repone (Puntero_objeto).
  50+ 9A24 21 C7 8B     	ld hl,Ctrl_0
  51+ 9A27 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A29              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A29              ; 																	; _ en el caso de que no lo haya.
  54+ 9A29 3A E2 8B     	ld a,(Vel_down)
  55+ 9A2C 47           	ld b,a
  56+ 9A2D 2A CA 8B         ld hl,(Posicion_actual)
  57+ 9A30 CD C3 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A33 E6 02        	and 2
  59+ 9A35 28 17        	jr z,1F
  60+ 9A37
  61+ 9A37              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A37              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A37
  64+ 9A37 7C           	ld a,h
  65+ 9A38 FE 57        	cp $57
  66+ 9A3A 20 12        	jr nz,1F
  67+ 9A3C
  68+ 9A3C 7D           	ld a,l
  69+ 9A3D C6 20        	add $20
  70+ 9A3F 30 0D        	jr nc,1F
  71+ 9A41
  72+ 9A41              ; ------------------------------
  73+ 9A41              ;
  74+ 9A41              ;	12/01/24
  75+ 9A41
  76+ 9A41              ;	call Reaparece_arriba
  77+ 9A41 CD 4D 9D     	call Reinicio
  78+ 9A44
  79+ 9A44              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A44
  81+ 9A44 3A 2F 8C     	ld a,(Ctrl_3)
  82+ 9A47 CB CF        	set 1,a
  83+ 9A49 32 2F 8C     	ld (Ctrl_3),a
  84+ 9A4C
  85+ 9A4C 18 08        	jr 3F
  86+ 9A4E              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A4E              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A4E              ; ------------------------------
  89+ 9A4E
  90+ 9A4E CD DB 99     1 call NextScan
  91+ 9A51 22 CA 8B     	ld (Posicion_actual),hl
  92+ 9A54 10 DA            djnz 2B
  93+ 9A56 CD E1 94     3 call Genera_coordenadas
  94+ 9A59 C9           	ret
  95+ 9A5A
  96+ 9A5A              ; ******************************************************************************************************************************************************************************************
  97+ 9A5A              ;
  98+ 9A5A              ;   27/05/23
  99+ 9A5A              ;
 100+ 9A5A              ;	Mov_up
 101+ 9A5A              ;
 102+ 9A5A              ; 	Mueve el Sprite hacia arriba.
 103+ 9A5A              ;
 104+ 9A5A              ;
 105+ 9A5A              Mov_up
 106+ 9A5A
 107+ 9A5A CD 8B 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A5D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A5D 21 C7 8B     	ld hl,Ctrl_0
 110+ 9A60 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A62              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A62              ; 																		; _ en el caso de que no lo haya.
 113+ 9A62 3A E1 8B     	ld a,(Vel_up)
 114+ 9A65 47           	ld b,a
 115+ 9A66 2A CA 8B     	ld hl,(Posicion_actual)
 116+ 9A69 CD C3 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A6C A7           	and a
 118+ 9A6D 20 10        	jr nz,1F
 119+ 9A6F
 120+ 9A6F              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A6F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A6F
 123+ 9A6F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A70 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A72 20 0B            jr nz,1F
 126+ 9A74 7D               ld a,l
 127+ 9A75 D6 20            sub $20
 128+ 9A77 30 06            jr nc,1F
 129+ 9A79 25               dec h
 130+ 9A7A
 131+ 9A7A              ; -----------------------------
 132+ 9A7A CD 2E 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A7D              ;	call Reinicio
 134+ 9A7D              ; -----------------------------
 135+ 9A7D
 136+ 9A7D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A7F CD EA 99     1 call PreviousScan
 138+ 9A82 22 CA 8B     	ld (Posicion_actual),hl
 139+ 9A85 10 E2            djnz 3B
 140+ 9A87 CD E1 94     2 call Genera_coordenadas
 141+ 9A8A C9           	ret
 142+ 9A8B
 143+ 9A8B              ; -----------------------------
 144+ 9A8B              ;
 145+ 9A8B              ;	27/5/23
 146+ 9A8B              ;
 147+ 9A8B              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A8B              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A8B              ;
 150+ 9A8B              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A8B              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A8B              ;
 153+ 9A8B              ;	Modifica: A y (Puntero_objeto).
 154+ 9A8B
 155+ 9A8B 3A C6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A8E CB 47        	bit 0,a
 157+ 9A90 C8           	ret z
 158+ 9A91 CB 87        	res 0,a
 159+ 9A93 32 C6 8B     	ld (Ctrl_2),a
 160+ 9A96 2A F8 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A99 22 CC 8B     	ld (Puntero_objeto),hl
 162+ 9A9C C9           	ret
 163+ 9A9D
 164+ 9A9D              ; ******************************************************************************************************************************************************************************************
 165+ 9A9D              ;
 166+ 9A9D              ;	19/10/22
 167+ 9A9D              ;
 168+ 9A9D              ;	Mov_right.
 169+ 9A9D              ;
 170+ 9A9D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A9D              ;
 172+ 9A9D
 173+ 9A9D 3A C7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AA0 CB 77        	bit 6,a
 175+ 9AA2 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AA4
 177+ 9AA4 CD DC 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA7 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA8
 180+ 9AA8 21 C7 8B     	ld hl,Ctrl_0
 181+ 9AAB CB E6        	set 4,(hl)
 182+ 9AAD 18 52        	jr 8F
 183+ 9AAF
 184+ 9AAF 21 C7 8B     10 ld hl,Ctrl_0
 185+ 9AB2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AB4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AB4              ; 																	; _ en el caso de que no lo haya.
 188+ 9AB4 3A BB 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB7 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB9 20 46        	jr nz,8F
 191+ 9ABB
 192+ 9ABB 3A CE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9ABE A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9ABF 28 40        	jr z,8F
 195+ 9AC1
 196+ 9AC1              ; ---------- ---------- ----------
 197+ 9AC1              ;
 198+ 9AC1              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AC1
 200+ 9AC1 3A E0 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AC4 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC6 28 11        	jr z,1F
 203+ 9AC8 38 06        	jr c,6F
 204+ 9ACA FE 04        	cp 4
 205+ 9ACC 28 14        	jr z,7F
 206+ 9ACE 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AD0
 208+ 9AD0              ; ---------- ---------- ----------
 209+ 9AD0              ;
 210+ 9AD0              ; Perfiles de velocidad
 211+ 9AD0              ;
 212+ 9AD0
 213+ 9AD0 3A CE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AD3 FE FE        	cp $fe
 215+ 9AD5 20 2A        	jr nz,8F
 216+ 9AD7 18 10        	jr 3F
 217+ 9AD9 3A CE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ADC FE FD        	cp $fd
 219+ 9ADE 20 21        	jr nz,8F
 220+ 9AE0 18 07        	jr 3F
 221+ 9AE2 3A CE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE5 FE FB        	cp $fb
 223+ 9AE7 20 18        	jr nz,8F
 224+ 9AE9
 225+ 9AE9              ; ---------- ---------- ----------
 226+ 9AE9
 227+ 9AE9              3
 228+ 9AE9 CD 1C 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AEC              ;	call Reinicio
 230+ 9AEC
 231+ 9AEC              ; ---------- ---------- ----------
 232+ 9AEC              ;
 233+ 9AEC              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AEC
 235+ 9AEC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AEE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AEF CD 08 9B     	call DESPLZ_DER
 238+ 9AF2 C1           	pop bc
 239+ 9AF3 10 F9        	djnz 5B
 240+ 9AF5 2A CA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF9 22 CA 8B     	ld (Posicion_actual),hl
 243+ 9AFC CD E1 94     	call Genera_coordenadas
 244+ 9AFF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B01
 246+ 9B01              ; ---------- ---------- ----------
 247+ 9B01
 248+ 9B01 2A CA 8B     8 ld hl,(Posicion_actual)
 249+ 9B04 CD 08 9B     	call DESPLZ_DER
 250+ 9B07 C9           2 ret
 251+ 9B08
 252+ 9B08              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B08              ;
 254+ 9B08              ;	22/9/22
 255+ 9B08              ;
 256+ 9B08
 257+ 9B08 CD 17 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B0B CD 63 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B0E CD 8C 9B         call Ciclo_completo
 260+ 9B11 21 C7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B14 CB FE        	set 7,(hl)
 262+ 9B16 C9           	ret
 263+ 9B17
 264+ 9B17              ; ******************************************************************************************************************************************************************************************
 265+ 9B17              ;	15/02/23
 266+ 9B17              ;
 267+ 9B17
 268+ 9B17 3A E0 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B1A 47           	ld b,a
 270+ 9B1B 2A D3 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B1E 23           1 inc hl
 272+ 9B1F 23           	inc hl
 273+ 9B20 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B22 22 D3 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B25 CD C2 90     	call Extrae_address
 276+ 9B28 22 CC 8B     	ld (Puntero_objeto),hl
 277+ 9B2B
 278+ 9B2B              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B2B
 280+ 9B2B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B2B              ; Cuántos movimientos hemos hecho ??
 282+ 9B2B              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B2B
 284+ 9B2B 2A CF 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B2E EB           	ex de,hl
 286+ 9B2F A7           	and a
 287+ 9B30 ED 52        	sbc hl,de
 288+ 9B32 CB 3D        	srl l
 289+ 9B34 3E 08        6 ld a,8
 290+ 9B36 95           	sub l
 291+ 9B37 30 1E        	jr nc,3F
 292+ 9B39
 293+ 9B39              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B39              ; B="0".
 295+ 9B39
 296+ 9B39 04           4 inc b
 297+ 9B3A 3C           	inc a
 298+ 9B3B 20 FC        	jr nz,4B
 299+ 9B3D 78           	ld a,b
 300+ 9B3E 08           	ex af,af
 301+ 9B3F 2A CF 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B42 23           5 inc hl
 303+ 9B43 23           	inc hl
 304+ 9B44 10 FC        	djnz 5B
 305+ 9B46 22 D3 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B49 CD C2 90     	call Extrae_address
 307+ 9B4C 22 CC 8B     	ld (Puntero_objeto),hl
 308+ 9B4F
 309+ 9B4F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B4F              ; _(Posicion_actual).
 311+ 9B4F
 312+ 9B4F 21 CA 8B     	ld hl,Posicion_actual
 313+ 9B52 34           	inc (hl)
 314+ 9B53 08               ex af,af
 315+ 9B54 6F           	ld l,a
 316+ 9B55 18 DD        	jr 6B
 317+ 9B57
 318+ 9B57              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B57
 320+ 9B57 47           3 ld b,a
 321+ 9B58 2A D1 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B5B 23           2 inc hl
 323+ 9B5C 23           	inc hl
 324+ 9B5D 10 FC        	djnz 2B
 325+ 9B5F 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B62 C9           8 ret
 327+ 9B63
 328+ 9B63              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B63              ;
 330+ 9B63              ;	24/7/22
 331+ 9B63              ;
 332+ 9B63              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B63              ;
 334+ 9B63              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B63              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B63              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B63
 338+ 9B63 3A CE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B66 A7           	and a
 340+ 9B67 20 1F        	jr nz,1F
 341+ 9B69 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B6B 32 CE 8B         ld (CTRL_DESPLZ),a
 343+ 9B6E
 344+ 9B6E 21 C9 8B     	ld hl,Columns
 345+ 9B71 34           	inc (hl)
 346+ 9B72 3A D9 8B     	ld a,(Cuad_objeto)
 347+ 9B75 E6 01        	and 1
 348+ 9B77 28 0F        	jr z,1F
 349+ 9B79 2A CA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B7C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B7D 22 CA 8B     	ld (Posicion_actual),hl
 352+ 9B80 CD E1 94     	call Genera_coordenadas
 353+ 9B83 CD E8 9C     	call Inc_CTRL_DESPLZ
 354+ 9B86 18 03        	jr 2F
 355+ 9B88 CD E8 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B8B C9           2 ret
 357+ 9B8C
 358+ 9B8C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B8C              ;
 360+ 9B8C              ;	24/7/22
 361+ 9B8C              ;
 362+ 9B8C              ;	Ciclo_completo.
 363+ 9B8C              ;
 364+ 9B8C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B8C              ;
 366+ 9B8C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B8C              ; 	Decrementamos (Columns).
 368+ 9B8C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B8C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B8C
 371+ 9B8C
 372+ 9B8C 3A CE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B8F FE FF        	cp $ff
 374+ 9B91 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B93 E6 F0        	and $f0
 376+ 9B95 20 28        	jr nz,3F
 377+ 9B97
 378+ 9B97              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B97
 380+ 9B97 3A CE 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B9A 47           	ld b,a
 382+ 9B9B 3E F8        	ld a,$f8
 383+ 9B9D 80           	add b
 384+ 9B9E 32 CE 8B     	ld (CTRL_DESPLZ),a
 385+ 9BA1 18 1C        	jr 3F
 386+ 9BA3 21 C9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA6 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA7 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA8 32 CE 8B     	ld (CTRL_DESPLZ),a
 390+ 9BAB 3A D9 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BAE E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BB0 20 0A        	jr nz,2F
 393+ 9BB2 2A CA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB5 23           	inc hl
 395+ 9BB6 22 CA 8B     	ld (Posicion_actual),hl
 396+ 9BB9 CD E1 94     	call Genera_coordenadas
 397+ 9BBC
 398+ 9BBC              ; Inicia el puntero de Sprite.
 399+ 9BBC
 400+ 9BBC CD D7 90     2 call Inicia_puntero_objeto_der
 401+ 9BBF C9           3 ret
 402+ 9BC0
 403+ 9BC0              ; ******************************************************************************************************************************************************************************************
 404+ 9BC0              ;
 405+ 9BC0              ;	15/02/23
 406+ 9BC0              ;
 407+ 9BC0              ;	Mov_left.
 408+ 9BC0              ;
 409+ 9BC0              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BC0              ;
 411+ 9BC0              Mov_left
 412+ 9BC0
 413+ 9BC0 21 C7 8B     	ld hl,Ctrl_0
 414+ 9BC3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC5              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC5 3A C7 8B     	ld a,(Ctrl_0)
 418+ 9BC8 CB 77        	bit 6,a
 419+ 9BCA 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BCC
 421+ 9BCC CD E2 9C     	call Stop_Amadeus_left
 422+ 9BCF C8           	ret z
 423+ 9BD0 20 4A        	jr nz,8F
 424+ 9BD2
 425+ 9BD2 3A BB 8B     11 ld a,(Coordenada_X)
 426+ 9BD5 A7           	and a
 427+ 9BD6 20 44        	jr nz,8F
 428+ 9BD8
 429+ 9BD8 3A CE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BDB A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BDC 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BDE
 433+ 9BDE              ; ---------- ---------- ----------
 434+ 9BDE
 435+ 9BDE 3A DF 8B     	ld a,(Vel_left)
 436+ 9BE1 FE 02        	cp 2
 437+ 9BE3 28 0F        	jr z,1F
 438+ 9BE5 38 04        	jr c,6F
 439+ 9BE7 FE 04        	cp 4
 440+ 9BE9 28 12        	jr z,7F
 441+ 9BEB
 442+ 9BEB              ; ---------- ---------- ----------
 443+ 9BEB
 444+ 9BEB 3A CE 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BEE FE F8        	cp $f8
 446+ 9BF0 20 2A        	jr nz,8F
 447+ 9BF2 18 10        	jr 4F
 448+ 9BF4 3A CE 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BF7 FE F9        	cp $f9
 450+ 9BF9 20 21        	jr nz,8F
 451+ 9BFB 18 07        	jr 4F
 452+ 9BFD 3A CE 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9C00 FE FB        	cp $fb
 454+ 9C02 20 18        	jr nz,8F
 455+ 9C04
 456+ 9C04              ; ---------- ---------- ----------
 457+ 9C04
 458+ 9C04              4
 459+ 9C04 CD 0A 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C07              ;	call Reinicio
 461+ 9C07
 462+ 9C07              ; ---------- ---------- ----------
 463+ 9C07
 464+ 9C07 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C09 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C0A
 467+ 9C0A              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C0A              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C0A
 470+ 9C0A CD 23 9C     	call DESPLZ_IZQ
 471+ 9C0D C1           	pop bc
 472+ 9C0E 10 F9        	djnz 5B
 473+ 9C10 2A CA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C13 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C14 22 CA 8B     	ld (Posicion_actual),hl
 476+ 9C17 CD E1 94     	call Genera_coordenadas
 477+ 9C1A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C1C
 479+ 9C1C              ; ---------- ---------- ----------
 480+ 9C1C
 481+ 9C1C              ; Movemos, no hay recolocación.
 482+ 9C1C
 483+ 9C1C 2A CA 8B     8 ld hl,(Posicion_actual)
 484+ 9C1F CD 23 9C     	call DESPLZ_IZQ
 485+ 9C22 C9           2 ret
 486+ 9C23
 487+ 9C23              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C23              ;
 489+ 9C23              ;	22/9/22
 490+ 9C23
 491+ 9C23              DESPLZ_IZQ
 492+ 9C23
 493+ 9C23 CD 32 9C     	call Desplaza_izquierda
 494+ 9C26 CD 7E 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C29 CD A6 9C     	call Ciclo_completo_2
 496+ 9C2C 21 C7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C2F CB BE        	res 7,(hl)
 498+ 9C31 C9           	ret
 499+ 9C32
 500+ 9C32              Desplaza_izquierda
 501+ 9C32
 502+ 9C32 3A DF 8B     	ld a,(Vel_left)
 503+ 9C35 47           	ld b,a
 504+ 9C36 2A D5 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C39 23           1 inc hl
 506+ 9C3A 23           	inc hl
 507+ 9C3B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C3D 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C40 CD C2 90     	call Extrae_address
 510+ 9C43 22 CC 8B     	ld (Puntero_objeto),hl
 511+ 9C46
 512+ 9C46              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C46
 514+ 9C46              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C46              ; Cuántos movimientos hemos hecho ??
 516+ 9C46              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C46
 518+ 9C46 2A D1 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C49 EB           	ex de,hl
 520+ 9C4A A7           	and a
 521+ 9C4B ED 52        	sbc hl,de
 522+ 9C4D CB 3D        	srl l
 523+ 9C4F 3E 08        6 ld a,8
 524+ 9C51 95           	sub l
 525+ 9C52 30 1E        	jr nc,3F
 526+ 9C54
 527+ 9C54              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C54              ; B="0".
 529+ 9C54
 530+ 9C54 04           4 inc b
 531+ 9C55 3C           	inc a
 532+ 9C56 20 FC        	jr nz,4B
 533+ 9C58 78           	ld a,b
 534+ 9C59 08           	ex af,af
 535+ 9C5A 2A D1 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C5D 23           5 inc hl
 537+ 9C5E 23           	inc hl
 538+ 9C5F 10 FC        	djnz 5B
 539+ 9C61 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C64 CD C2 90     	call Extrae_address
 541+ 9C67 22 CC 8B     	ld (Puntero_objeto),hl
 542+ 9C6A
 543+ 9C6A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C6A              ; _(Posicion_actual).
 545+ 9C6A
 546+ 9C6A 21 CA 8B     	ld hl,Posicion_actual
 547+ 9C6D 35           	dec (hl)
 548+ 9C6E 08           	ex af,af
 549+ 9C6F 6F           	ld l,a
 550+ 9C70 18 DD        	jr 6B
 551+ 9C72
 552+ 9C72              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C72
 554+ 9C72 47           3 ld b,a
 555+ 9C73 2A CF 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C76 23           2 inc hl
 557+ 9C77 23           	inc hl
 558+ 9C78 10 FC        	djnz 2B
 559+ 9C7A 22 D3 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C7D C9           8 ret
 561+ 9C7E
 562+ 9C7E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C7E              ;
 564+ 9C7E              ;	modifica_parametros_1er_DESPLZ
 565+ 9C7E              ;
 566+ 9C7E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C7E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C7E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C7E
 570+ 9C7E 3A CE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C81 A7           	and a
 572+ 9C82 20 1E        	jr nz,1F
 573+ 9C84 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C85 32 CE 8B         ld (CTRL_DESPLZ),a
 575+ 9C88 21 C9 8B     	ld hl,Columns
 576+ 9C8B 34           	inc (hl)
 577+ 9C8C 3A D9 8B     	ld a,(Cuad_objeto)
 578+ 9C8F E6 01        	and 1
 579+ 9C91 20 0F        	jr nz,1F
 580+ 9C93 2A CA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C96 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C97 22 CA 8B     	ld (Posicion_actual),hl
 583+ 9C9A CD E1 94     	call Genera_coordenadas
 584+ 9C9D CD F9 9C     	call Dec_CTRL_DESPLZ
 585+ 9CA0 18 03        	jr 2F
 586+ 9CA2 CD F9 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA5 C9           2 ret
 588+ 9CA6
 589+ 9CA6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA6
 591+ 9CA6 3A CE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA9 FE F7        	cp $f7
 593+ 9CAB 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CAD 30 2C        	jr nc,3F
 595+ 9CAF
 596+ 9CAF              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CAF
 598+ 9CAF 06 00        	ld b,0
 599+ 9CB1 04           4 inc b
 600+ 9CB2 3C           	inc a
 601+ 9CB3 FE F7        	cp $f7
 602+ 9CB5 20 FA        	jr nz,4B
 603+ 9CB7 3E FF        	ld a,$ff
 604+ 9CB9 90           	sub b
 605+ 9CBA 32 CE 8B     	ld (CTRL_DESPLZ),a
 606+ 9CBD 18 1C        	jr 3F
 607+ 9CBF
 608+ 9CBF              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CBF
 610+ 9CBF 21 C9 8B     1 ld hl,Columns
 611+ 9CC2 35           	dec (hl)
 612+ 9CC3 AF           	xor a
 613+ 9CC4 32 CE 8B     	ld (CTRL_DESPLZ),a
 614+ 9CC7 3A D9 8B     	ld a,(Cuad_objeto)
 615+ 9CCA E6 01        	and 1
 616+ 9CCC 28 0A        	jr z,2F
 617+ 9CCE 2A CA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CD1 2B           	dec hl
 619+ 9CD2 22 CA 8B     	ld (Posicion_actual),hl
 620+ 9CD5 CD E1 94     	call Genera_coordenadas
 621+ 9CD8
 622+ 9CD8              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD8
 624+ 9CD8 CD EA 90     2 call Inicia_puntero_objeto_izq
 625+ 9CDB C9           3 ret
 626+ 9CDC
 627+ 9CDC              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CDC              ;
 629+ 9CDC              ;	19/10/22
 630+ 9CDC              ;
 631+ 9CDC              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CDC              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CDC
 634+ 9CDC 3A BB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CDF FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CE1 C9           	ret
 637+ 9CE2
 638+ 9CE2              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CE2              ;
 640+ 9CE2              ;	19/10/22
 641+ 9CE2              ;
 642+ 9CE2              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CE2              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CE2
 645+ 9CE2 3A BB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE5 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE7 C9           	ret
 648+ 9CE8
 649+ 9CE8              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE8              ;
 651+ 9CE8              ;	24/7/22
 652+ 9CE8              ;
 653+ 9CE8              ;	Inc_CTRL_DESPLZ
 654+ 9CE8              ;
 655+ 9CE8              ;
 656+ 9CE8              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE8
 658+ 9CE8 21 CE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CEB 3A E0 8B     	ld a,(Vel_right)
 660+ 9CEE A7           	and a
 661+ 9CEF 28 06        	jr z,1F
 662+ 9CF1 47           	ld b,a
 663+ 9CF2 34           3 inc (hl)
 664+ 9CF3 10 FD        	djnz 3B
 665+ 9CF5 18 01        	jr 2F
 666+ 9CF7 34           1 inc (hl)
 667+ 9CF8 C9           2 ret
 668+ 9CF9
 669+ 9CF9              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF9              ;
 671+ 9CF9              ;	5/2/23
 672+ 9CF9              ;
 673+ 9CF9              ;	Dec_CTRL_DESPLZ
 674+ 9CF9              ;
 675+ 9CF9              ;
 676+ 9CF9              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF9
 678+ 9CF9 21 CE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CFC 3A DF 8B     	ld a,(Vel_left)
 680+ 9CFF A7           	and a
 681+ 9D00 28 06        	jr z,1F
 682+ 9D02 47           	ld b,a
 683+ 9D03 35           3 dec (hl)
 684+ 9D04 10 FD        	djnz 3B
 685+ 9D06 18 01        	jr 2F
 686+ 9D08 35           1 dec (hl)
 687+ 9D09 C9           2 ret
 688+ 9D0A
 689+ 9D0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D0A
 691+ 9D0A 2A CA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D0D 01 1F 00     	ld bc,31
 693+ 9D10 A7           	and a
 694+ 9D11 ED 4A        	adc hl,bc
 695+ 9D13 22 CA 8B     	ld (Posicion_actual),hl
 696+ 9D16 21 C7 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D19 CB C6        	set 0,(hl)
 698+ 9D1B C9           	ret
 699+ 9D1C
 700+ 9D1C              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D1C
 702+ 9D1C 2A CA 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D1F 01 1F 00     	ld bc,31
 704+ 9D22 A7           	and a
 705+ 9D23 ED 42        	sbc hl,bc
 706+ 9D25 22 CA 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D28 21 C7 8B     	ld hl,Ctrl_0
 708+ 9D2B CB CE        	set 1,(hl)
 709+ 9D2D C9           	ret
 710+ 9D2E
 711+ 9D2E              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D2E
 713+ 9D2E 24           Reaparece_abajo inc h
 714+ 9D2F 01 E0 17     	ld bc,$17e0
 715+ 9D32 A7           	and a
 716+ 9D33 ED 4A        	adc hl,bc
 717+ 9D35 22 CA 8B     	ld (Posicion_actual),hl
 718+ 9D38 21 C7 8B     	ld hl,Ctrl_0
 719+ 9D3B CB D6        	set 2,(hl)
 720+ 9D3D C9           	ret
 721+ 9D3E
 722+ 9D3E              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D3E
 724+ 9D3E 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D41 A7           	and a
 726+ 9D42 ED 42        	sbc hl,bc
 727+ 9D44 22 CA 8B     	ld (Posicion_actual),hl
 728+ 9D47 21 C7 8B     	ld hl,Ctrl_0
 729+ 9D4A CB DE        	set 3,(hl)
 730+ 9D4C C9           	ret
 731+ 9D4D
 732+ 9D4D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D4D              ;
 734+ 9D4D              ;	15/07/23
 735+ 9D4D
 736+ 9D4D              Reinicio
 737+ 9D4D
 738+ 9D4D              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D4D
 740+ 9D4D AF           	xor a
 741+ 9D4E 21 EF 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D51 CD 6F 9D     	call Limpia_contenido_hl
 743+ 9D54
 744+ 9D54 21 CA 8B     	ld hl,Posicion_actual
 745+ 9D57 CD 6F 9D     	call Limpia_contenido_hl
 746+ 9D5A
 747+ 9D5A CD C3 92     	call Inicializa_Puntero_indice_mov
 748+ 9D5D CD 6E 9E     	call Inicia_Puntero_mov
 749+ 9D60
 750+ 9D60 21 F1 8B     	ld hl,Incrementa_puntero
 751+ 9D63 06 05        	ld b,5
 752+ 9D65 77           1 ld (hl),a
 753+ 9D66 23           	inc hl
 754+ 9D67 10 FC        	djnz 1B
 755+ 9D69
 756+ 9D69 21 C6 8B     	ld hl,Ctrl_2
 757+ 9D6C CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D6E
 759+ 9D6E C9           	ret
 760+ 9D6F
 761+ 9D6F 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D70 23           	inc hl
 763+ 9D71 77           	ld (hl),a
 764+ 9D72 C9           	ret
 765+ 9D73
 766+ 9D73              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D73              ;
 768+ 9D73              ;	18/6/24
 769+ 9D73              ;
 770+ 9D73
 771+ 9D73              Amadeus_a_izquierda
 772+ 9D73
 773+ 9D73              ;	Actualiza contador de movimientos.
 774+ 9D73
 775+ 9D73 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D76 35           	dec (hl)
 777+ 9D77 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D79
 779+ 9D79 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D7C 2B           	dec hl
 781+ 9D7D 2B           	dec hl
 782+ 9D7E 2B           	dec hl
 783+ 9D7F 2B           	dec hl
 784+ 9D80 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D83
 786+ 9D83 21 2F 8C     	ld hl,Ctrl_3
 787+ 9D86 CB EE        	set 5,(hl)
 788+ 9D88
 789+ 9D88 C9           	ret
 790+ 9D89
 791+ 9D89 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D8A C9           	ret
 793+ 9D8B
 794+ 9D8B
 795+ 9D8B              Amadeus_a_derecha
 796+ 9D8B
 797+ 9D8B              ;	Actualiza contador de movimientos.
 798+ 9D8B
 799+ 9D8B 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D8E 34           	inc (hl)
 801+ 9D8F 3E 7A        	ld a,$7a
 802+ 9D91 BE           	cp (hl)
 803+ 9D92 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D94
 805+ 9D94 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D97 23           	inc hl
 807+ 9D98 23           	inc hl
 808+ 9D99 23           	inc hl
 809+ 9D9A 23           	inc hl
 810+ 9D9B 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D9E
 812+ 9D9E 21 2F 8C     	ld hl,Ctrl_3
 813+ 9DA1 CB EE        	set 5,(hl)
 814+ 9DA3 C9           	ret
 815+ 9DA4
 816+ 9DA4 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA5 C9           	ret
# file closed: Direcciones.asm
2054  9DA6              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA6              ; ----- ----- ----- ----- -----
   2+ 9DA6              ;
   3+ 9DA6              ;   28/12/23
   4+ 9DA6
   5+ 9DA6              Movimiento
   6+ 9DA6
   7+ 9DA6              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA6
   9+ 9DA6 3A C6 8B         ld a,(Ctrl_2)
  10+ 9DA9 CB 57            bit 2,a
  11+ 9DAB 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DAD
  13+ 9DAD 2A ED 8B         ld hl,(Puntero_mov)
  14+ 9DB0 7E               ld a,(hl)
  15+ 9DB1
  16+ 9DB1              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DB1
  18+ 9DB1              Inicia_desplazamiento.
  19+ 9DB1
  20+ 9DB1              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DB1
  22+ 9DB1 CD A4 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DB4
  24+ 9DB4              ; Iniciamos (Repetimos_mov).
  25+ 9DB4
  26+ 9DB4 7E               ld a,(hl)
  27+ 9DB5 E6 0F            and $0f
  28+ 9DB7 32 F3 8B         ld (Repetimos_desplazamiento),a
  29+ 9DBA 32 F4 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DBD
  31+ 9DBD              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DBD
  33+ 9DBD 23               inc hl
  34+ 9DBE 7E               ld a,(hl)
  35+ 9DBF 32 F6 8B         ld (Cola_de_desplazamiento),a
  36+ 9DC2 2B               dec hl
  37+ 9DC3
  38+ 9DC3 21 C6 8B         ld hl,Ctrl_2
  39+ 9DC6 CB D6            set 2,(hl)
  40+ 9DC8
  41+ 9DC8              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC8              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC8
  44+ 9DC8              Desplazamiento_iniciado
  45+ 9DC8
  46+ 9DC8 CD 78 9E         call Aplica_desplazamiento
  47+ 9DCB
  48+ 9DCB              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DCB
  50+ 9DCB 3A 2F 8C         ld a,(Ctrl_3)
  51+ 9DCE CB 4F            bit 1,a
  52+ 9DD0 C0               ret nz
  53+ 9DD1
  54+ 9DD1 21 F3 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DD4 35               dec (hl)
  56+ 9DD5 C0               ret nz
  57+ 9DD6
  58+ 9DD6              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD6              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD6              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD6
  62+ 9DD6 3A F6 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD9 A7               and a
  64+ 9DDA CC CD 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DDD 28 30            jr z,Reinicia_el_movimiento
  66+ 9DDF
  67+ 9DDF FE FF            cp $ff
  68+ 9DE1 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DE3
  70+ 9DE3 FE FE            cp $fe
  71+ 9DE5 CC 52 9E         call z,Fijamos_bucle
  72+ 9DE8 28 25            jr z,Reinicia_el_movimiento
  73+ 9DEA
  74+ 9DEA FE FD            cp $fd
  75+ 9DEC 20 11            jr nz,1F
  76+ 9DEE
  77+ 9DEE              ; ---
  78+ 9DEE              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DEE
  80+ 9DEE 3A C6 8B         ld a,(Ctrl_2)
  81+ 9DF1 CB 5F            bit 3,a
  82+ 9DF3 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF5
  84+ 9DF5              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF5
  86+ 9DF5 21 C6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF8 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DFA
  89+ 9DFA CD 63 9E         call Inicia_Repetimos_movimiento
  90+ 9DFD 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DFF              ; ---
  92+ 9DFF
  93+ 9DFF FE 01        1 cp 1
  94+ 9E01 CA 3C 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E04
  96+ 9E04 3D               dec a
  97+ 9E05 32 F6 8B         ld (Cola_de_desplazamiento),a
  98+ 9E08
  99+ 9E08 3A F4 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E0B 32 F3 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E0E              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E0E C9               ret
 103+ 9E0F
 104+ 9E0F              Reinicia_el_movimiento
 105+ 9E0F
 106+ 9E0F 3A C6 8B         ld a,(Ctrl_2)
 107+ 9E12 CB 5F            bit 3,a
 108+ 9E14 28 1B            jr z,2F
 109+ 9E16
 110+ 9E16              ; (Cola_de_desplazamiento)="254".
 111+ 9E16
 112+ 9E16 21 F5 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E19 35               dec (hl)
 114+ 9E1A 20 15            jr nz,2F
 115+ 9E1C
 116+ 9E1C              ; Fin de las repeticiones del último movimiento.
 117+ 9E1C
 118+ 9E1C 21 C6 8B         ld hl,Ctrl_2
 119+ 9E1F CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E21
 121+ 9E21 2A ED 8B         ld hl,(Puntero_mov)
 122+ 9E24 23               inc hl
 123+ 9E25 23               inc hl
 124+ 9E26 23               inc hl
 125+ 9E27 22 ED 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E2A              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E2A 7E               ld a,(hl)
 128+ 9E2B 32 F6 8B         ld (Cola_de_desplazamiento),a
 129+ 9E2E
 130+ 9E2E C3 D6 9D         jp Cola
 131+ 9E31
 132+ 9E31 CD 6E 9E     2 call Inicia_Puntero_mov
 133+ 9E34
 134+ 9E34 21 C6 8B         ld hl,Ctrl_2
 135+ 9E37 CB 96            res 2,(hl)
 136+ 9E39
 137+ 9E39 C3 A6 9D         jp Movimiento
 138+ 9E3C
 139+ 9E3C              Siguiente_desplazamiento
 140+ 9E3C
 141+ 9E3C              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E3C              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E3C
 144+ 9E3C 21 C6 8B         ld hl,Ctrl_2
 145+ 9E3F CB 96            res 2,(hl)
 146+ 9E41
 147+ 9E41 2A ED 8B         ld hl,(Puntero_mov)
 148+ 9E44 23               inc hl
 149+ 9E45 23               inc hl
 150+ 9E46 22 ED 8B         ld (Puntero_mov),hl
 151+ 9E49
 152+ 9E49 7E               ld a,(hl)
 153+ 9E4A A7               and a
 154+ 9E4B CC CD 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E4E CA 0F 9E         jp z,Reinicia_el_movimiento
 156+ 9E51
 157+ 9E51 C9               ret
 158+ 9E52
 159+ 9E52              ; Subrutinas -----------------------------------------
 160+ 9E52              ; ---------- --------- --------- ---------- ----------
 161+ 9E52              ;
 162+ 9E52              ;   24/07/23
 163+ 9E52              ;
 164+ 9E52              ;   Fijamos_bucle
 165+ 9E52              ;
 166+ 9E52              ;
 167+ 9E52
 168+ 9E52              Fijamos_bucle
 169+ 9E52
 170+ 9E52 3A F1 8B         ld a,(Incrementa_puntero)
 171+ 9E55 3C               inc a
 172+ 9E56 32 F2 8B         ld (Incrementa_puntero_backup),a
 173+ 9E59
 174+ 9E59 CD CD 9E         call Incrementa_Puntero_indice_mov
 175+ 9E5C 2A EB 8B         ld hl,(Puntero_indice_mov)
 176+ 9E5F 22 EF 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E62 C9               ret
 178+ 9E63
 179+ 9E63              ; ---------- --------- --------- ---------- ----------
 180+ 9E63              ;
 181+ 9E63              ;   07/7/23
 182+ 9E63              ;
 183+ 9E63              ;   Inicia_Repetimos_movimiento
 184+ 9E63              ;
 185+ 9E63              ;
 186+ 9E63
 187+ 9E63              Inicia_Repetimos_movimiento
 188+ 9E63
 189+ 9E63              ; Iniciamos (Repetimos_movimiento).
 190+ 9E63
 191+ 9E63 DD 2A ED 8B      ld ix,(Puntero_mov)
 192+ 9E67 DD 7E 02         ld a,(ix+2)
 193+ 9E6A 32 F5 8B         ld (Repetimos_movimiento),a
 194+ 9E6D
 195+ 9E6D C9               ret
 196+ 9E6E
 197+ 9E6E              ; ---------- --------- --------- ---------- ----------
 198+ 9E6E              ;
 199+ 9E6E              ;   26/6/23
 200+ 9E6E              ;
 201+ 9E6E              ;   Inicia_Puntero_mov
 202+ 9E6E              ;
 203+ 9E6E              ;
 204+ 9E6E
 205+ 9E6E 2A EB 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E71 CD C2 90         call Extrae_address
 207+ 9E74 22 ED 8B         ld (Puntero_mov),hl
 208+ 9E77 C9               ret
 209+ 9E78
 210+ 9E78              ; ---------- --------- --------- ---------- ----------
 211+ 9E78              ;
 212+ 9E78              ;   27/06/23
 213+ 9E78              ;
 214+ 9E78              ;   Aplica_movimiento.
 215+ 9E78
 216+ 9E78              Aplica_desplazamiento
 217+ 9E78
 218+ 9E78              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E78
 220+ 9E78 2A ED 8B         ld hl, (Puntero_mov)
 221+ 9E7B
 222+ 9E7B 7E               ld a,(hl)
 223+ 9E7C E6 F0            and $f0
 224+ 9E7E C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E7F
 226+ 9E7F CB 7E            bit 7,(hl)
 227+ 9E81 28 03            jr z,1F
 228+ 9E83 CD 5A 9A         call Mov_up
 229+ 9E86 2A ED 8B     1 ld hl, (Puntero_mov)
 230+ 9E89 CB 76            bit 6,(hl)
 231+ 9E8B 28 03            jr z,2F
 232+ 9E8D CD 21 9A         call Mov_down
 233+ 9E90
 234+ 9E90              ; Se ha aplicado reinicio ???
 235+ 9E90              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E90
 237+ 9E90              ;    ld a,(Ctrl_3)
 238+ 9E90              ;    bit 1,a
 239+ 9E90              ;    ret nz
 240+ 9E90
 241+ 9E90 2A ED 8B     2 ld hl, (Puntero_mov)
 242+ 9E93 CB 6E            bit 5,(hl)
 243+ 9E95 28 03            jr z,3F
 244+ 9E97 CD C0 9B         call Mov_left
 245+ 9E9A 2A ED 8B     3 ld hl, (Puntero_mov)
 246+ 9E9D CB 66            bit 4,(hl)
 247+ 9E9F C8               ret z
 248+ 9EA0 CD 9D 9A         call Mov_right
 249+ 9EA3 C9               ret
 250+ 9EA4
 251+ 9EA4              ; ---------- --------- --------- ---------- ----------
 252+ 9EA4              ;
 253+ 9EA4              ;   26/06/23
 254+ 9EA4              ;
 255+ 9EA4              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EA4
 257+ 9EA4              Ajusta_velocidad_desplazamiento
 258+ 9EA4
 259+ 9EA4              ; 1er byte de la cadena de movimiento.
 260+ 9EA4              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EA4
 262+ 9EA4 CD C2 9E         call Extrae_nibble_alto
 263+ 9EA7
 264+ 9EA7 32 E1 8B         ld (Vel_up),a
 265+ 9EAA 79               ld a,c
 266+ 9EAB E6 0F            and $0f
 267+ 9EAD 32 E2 8B         ld (Vel_down),a
 268+ 9EB0
 269+ 9EB0              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EB0              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EB0
 272+ 9EB0 23               inc hl
 273+ 9EB1 CD C2 9E         call Extrae_nibble_alto
 274+ 9EB4
 275+ 9EB4 32 DF 8B         ld (Vel_left),a
 276+ 9EB7 79               ld a,c
 277+ 9EB8 E6 0F            and $0f
 278+ 9EBA 32 E0 8B         ld (Vel_right),a
 279+ 9EBD
 280+ 9EBD              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EBD
 282+ 9EBD 23               inc hl
 283+ 9EBE 22 ED 8B         ld (Puntero_mov),hl
 284+ 9EC1 C9               ret
 285+ 9EC2
 286+ 9EC2 06 04        Extrae_nibble_alto ld b,4
 287+ 9EC4 7E               ld a,(hl)
 288+ 9EC5 4F               ld c,a
 289+ 9EC6 E6 F0            and $f0
 290+ 9EC8 CB 3F        1 srl a
 291+ 9ECA 10 FC            djnz 1B
 292+ 9ECC C9               ret
 293+ 9ECD
 294+ 9ECD              ; ---------- --------- --------- ---------- ----------
 295+ 9ECD              ;
 296+ 9ECD              ;   5/7/23
 297+ 9ECD              ;
 298+ 9ECD              ;   Incrementa_Puntero_indice_mov
 299+ 9ECD
 300+ 9ECD              Incrementa_Puntero_indice_mov
 301+ 9ECD
 302+ 9ECD 21 F1 8B         ld hl,Incrementa_puntero
 303+ 9ED0 34               inc (hl)
 304+ 9ED1
 305+ 9ED1 2A EB 8B         ld hl,(Puntero_indice_mov)
 306+ 9ED4 01 02 00         ld bc,2
 307+ 9ED7 A7               and a
 308+ 9ED8 09               add hl,bc
 309+ 9ED9 22 EB 8B         ld (Puntero_indice_mov),hl
 310+ 9EDC
 311+ 9EDC 7E               ld a,(hl)
 312+ 9EDD A7               and a
 313+ 9EDE
 314+ 9EDE              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EDE
 316+ 9EDE              ;    jr z,$
 317+ 9EDE
 318+ 9EDE              ;! Reinicia el Patrón de movimiento.
 319+ 9EDE
 320+ 9EDE CC E3 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EE1
 322+ 9EE1 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EE2
 324+ 9EE2 C9               ret
 325+ 9EE3
 326+ 9EE3              ; ---------- --------- --------- ---------- ----------
 327+ 9EE3              ;
 328+ 9EE3              ;   15/01/24
 329+ 9EE3              ;
 330+ 9EE3              ;   Inicializa_Puntero_indice_mov
 331+ 9EE3
 332+ 9EE3              Inicializa_Puntero_indice_mov_2
 333+ 9EE3
 334+ 9EE3              ; Existe etiqueta de bucle principal???
 335+ 9EE3
 336+ 9EE3 2A EF 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE6 24               inc h
 338+ 9EE7 25               dec h
 339+ 9EE8 28 05            jr z,2F
 340+ 9EEA
 341+ 9EEA 22 EB 8B         ld (Puntero_indice_mov),hl
 342+ 9EED 18 14            jr 3F
 343+ 9EEF
 344+ 9EEF              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EEF
 346+ 9EEF 3A F1 8B     2 ld a,(Incrementa_puntero)
 347+ 9EF2 47               ld b,a
 348+ 9EF3
 349+ 9EF3 2A EB 8B         ld hl,(Puntero_indice_mov)
 350+ 9EF6 2B           1 dec hl
 351+ 9EF7 2B               dec hl
 352+ 9EF8 10 FC            djnz 1B
 353+ 9EFA 22 EB 8B         ld (Puntero_indice_mov),hl
 354+ 9EFD
 355+ 9EFD AF               xor a
 356+ 9EFE 32 F1 8B         ld (Incrementa_puntero),a
 357+ 9F01 18 06            jr 4F
 358+ 9F03
 359+ 9F03 3A F2 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F06 32 F1 8B         ld (Incrementa_puntero),a
 361+ 9F09 C9           4 ret
 362+ 9F0A
 363+ 9F0A              ; ----------------------------------------------------------------------
 364+ 9F0A              ;
 365+ 9F0A              ;   30/01/24
 366+ 9F0A              ;
 367+ 9F0A              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F0A
 369+ 9F0A 3A BA 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F0D CD 5E 94         call Calcula_salto_en_BC
 371+ 9F10 21 E3 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F13 A7               and a
 373+ 9F14 ED 4A            adc hl,bc
 374+ 9F16 C9               ret
 375+ 9F17
 376+ 9F17              ; ----------------------------------------------------------------------
 377+ 9F17              ;
 378+ 9F17              ;   30/01/24
 379+ 9F17              ;
 380+ 9F17              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F17              ;
 382+ 9F17              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F17
 384+ 9F17 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F18 23               inc hl
 386+ 9F19 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F1A 69               ld l,c
 388+ 9F1B 60               ld h,b
 389+ 9F1C 22 C3 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F1F C9               ret
 391+ 9F20
# file closed: Movimiento.asm
2055  9F20              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F20              ; --------------------------------------------------------------------------------------
   2+ 9F20              ;
   3+ 9F20              ;   25/10/24
   4+ 9F20              ;
   5+ 9F20
   6+ 9F20              Pinta_disparos_Entidades
   7+ 9F20
   8+ 9F20 ED 73 07 8C      ld (Stack),sp
   9+ 9F24 ED 7B 19 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F28
  11+ 9F28 3E 02            ld a,2
  12+ 9F2A 08               ex af,af
  13+ 9F2B
  14+ 9F2B 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F2D              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F2D              ;                                     _ No encontraría "0".
  17+ 9F2D FD E1        4 pop iy
  18+ 9F2F D1               pop de                          ; 1er .db IYL
  19+ 9F30              ;                                   ; 2º  .db IYH
  20+ 9F30              ;                                   ; 3er .db E.
  21+ 9F30              ;   Album vacío ???
  22+ 9F30
  23+ 9F30 FD 7D            ld a,iyl
  24+ 9F32 FD 84            add iyh
  25+ 9F34 83               add e
  26+ 9F35 28 1F            jr z,1F
  27+ 9F37
  28+ 9F37              ;   Imprime album, (contiene datos).
  29+ 9F37
  30+ 9F37 3B               dec sp
  31+ 9F38
  32+ 9F38 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F39
  34+ 9F39              ; Imprime el 1er scanline del disparo.
  35+ 9F39
  36+ 9F39 FD 7D            ld a,iyl
  37+ 9F3B AE               xor (hl)
  38+ 9F3C 77               ld (hl),a
  39+ 9F3D
  40+ 9F3D 2C               inc l
  41+ 9F3E
  42+ 9F3E FD 7C            ld a,iyh
  43+ 9F40 AE               xor (hl)
  44+ 9F41 77               ld (hl),a
  45+ 9F42
  46+ 9F42 2C               inc l
  47+ 9F43
  48+ 9F43 7B               ld a,e
  49+ 9F44 AE               xor (hl)
  50+ 9F45 77               ld (hl),a
  51+ 9F46
  52+ 9F46              ; Imprime el 2º scanline del disparo.
  53+ 9F46
  54+ 9F46 E1               pop hl
  55+ 9F47
  56+ 9F47 FD 7D            ld a,iyl
  57+ 9F49 AE               xor (hl)
  58+ 9F4A 77               ld (hl),a
  59+ 9F4B
  60+ 9F4B 2C               inc l
  61+ 9F4C
  62+ 9F4C FD 7C            ld a,iyh
  63+ 9F4E AE               xor (hl)
  64+ 9F4F 77               ld (hl),a
  65+ 9F50
  66+ 9F50 2C               inc l
  67+ 9F51
  68+ 9F51 7B               ld a,e
  69+ 9F52 AE               xor (hl)
  70+ 9F53 77               ld (hl),a
  71+ 9F54
  72+ 9F54 10 D7            djnz 4B
  73+ 9F56
  74+ 9F56 08           1 ex af,af
  75+ 9F57 3D               dec a
  76+ 9F58 20 05            jr nz,2F
  77+ 9F5A
  78+ 9F5A ED 7B 07 8C      ld sp,(Stack)
  79+ 9F5E C9               ret
  80+ 9F5F
  81+ 9F5F ED 7B 17 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F63 08               ex af,af
  83+ 9F64 18 C5            jr 3B
  84+ 9F66
  85+ 9F66              ; --------------------------------------------------------------------------------------
  86+ 9F66              ;
  87+ 9F66              ;   15/10/24
  88+ 9F66              ;
  89+ 9F66
  90+ 9F66              Motor_de_disparos_entidades
  91+ 9F66
  92+ 9F66 3A 1F 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F69 FE 07            cp 7
  94+ 9F6B C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F6C
  96+ 9F6C 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F6E 21 23 89         ld hl,Indice_de_disparos_entidades
  98+ 9F71
  99+ 9F71 CD C2 90     1 call Extrae_address
 100+ 9F74 1C               inc e
 101+ 9F75 1C               inc e
 102+ 9F76 ED 53 32 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F7A
 104+ 9F7A               ; Caja vacía ???
 105+ 9F7A
 106+ 9F7A 2C               inc l
 107+ 9F7B
 108+ 9F7B 7E               ld a,(hl)
 109+ 9F7C A7               and a
 110+ 9F7D 28 19            jr z,3F                                                              ; Caja vacía.
 111+ 9F7F
 112+ 9F7F              ; --- Trabajamos con caja:
 113+ 9F7F
 114+ 9F7F CD AE 9F         call Rota_disparo_si_procede
 115+ 9F82
 116+ 9F82              ; ------------------------------------------------------------
 117+ 9F82
 118+ 9F82 2D               dec l
 119+ 9F83 2D               dec l
 120+ 9F84 2D               dec l
 121+ 9F85
 122+ 9F85 CD C2 90         call Extrae_address
 123+ 9F88              ;   (Puntero_de_impresion) del disparo en HL.
 124+ 9F88
 125+ 9F88              ;! Velocidad del disparo de entidades.
 126+ 9F88
 127+ 9F88 CD DB 99         call NextScan
 128+ 9F8B
 129+ 9F8B              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 130+ 9F8B
 131+ 9F8B CD 9C 9F         call Fin_de_disparo_de_entidad
 132+ 9F8E
 133+ 9F8E EB               ex de,hl
 134+ 9F8F
 135+ 9F8F 73               ld (hl),e
 136+ 9F90 23               inc hl
 137+ 9F91 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 138+ 9F92
 139+ 9F92 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 140+ 9F95 18 02            jr 2F
 141+ 9F97
 142+ 9F97 C9               ret
 143+ 9F98
 144+ 9F98 EB           3 ex de,hl
 145+ 9F99 10 D6        2 djnz 1B
 146+ 9F9B
 147+ 9F9B C9               ret
 148+ 9F9C
 149+ 9F9C              ; ------------- ------------- ------------
 150+ 9F9C              ;
 151+ 9F9C              ;   25/9/24
 152+ 9F9C
 153+ 9F9C              Fin_de_disparo_de_entidad
 154+ 9F9C
 155+ 9F9C 7C               ld a,h
 156+ 9F9D FE 54            cp $54
 157+ 9F9F D8               ret c
 158+ 9FA0
 159+ 9FA0 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 160+ 9FA1
 161+ 9FA1 5D               ld e,l
 162+ 9FA2 54               ld d,h
 163+ 9FA3
 164+ 9FA3 21 E0 57         ld hl,$57e0
 165+ 9FA6 ED 52            sbc hl,de
 166+ 9FA8
 167+ 9FA8 38 2F            jr c,Elimina_disparo_entidad
 168+ 9FAA
 169+ 9FAA 6B               ld l,e
 170+ 9FAB 62               ld h,d
 171+ 9FAC
 172+ 9FAC D1               pop de
 173+ 9FAD
 174+ 9FAD C9               ret
 175+ 9FAE
 176+ 9FAE              ; ----------------------------------------------------------
 177+ 9FAE              ;
 178+ 9FAE              ;   08/10/24
 179+ 9FAE
 180+ 9FAE              ;   Estructura de un disparo de entidades.
 181+ 9FAE
 182+ 9FAE              ;   Disparo_1 defw 0								; Puntero objeto.
 183+ 9FAE              ; 	defw 0											; Puntero de impresión.
 184+ 9FAE              ;	defw 0											; Control.
 185+ 9FAE
 186+ 9FAE              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 187+ 9FAE              ;   _de la entidad en el momento de disparar.
 188+ 9FAE
 189+ 9FAE              ;   El byte alto muestra la siguiente información:
 190+ 9FAE              ;
 191+ 9FAE              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 192+ 9FAE              ;                        _antes de desplazarse a derecha/izquierda.
 193+ 9FAE              ;
 194+ 9FAE              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 195+ 9FAE              ;
 196+ 9FAE              ;                        10xx ..... Izquierda.
 197+ 9FAE              ;                        01xx ..... Derecha.
 198+ 9FAE              ;                        00xx ..... Recto.
 199+ 9FAE
 200+ 9FAE              Rota_disparo_si_procede
 201+ 9FAE
 202+ 9FAE              ;   Nos situamos en el byte alto de (Control).
 203+ 9FAE
 204+ 9FAE CB 76            bit 6,(hl)
 205+ 9FB0 20 03            jr nz,Decrementa_contador_de_control_de_disparo
 206+ 9FB2 CB 7E            bit 7,(hl)
 207+ 9FB4 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 208+ 9FB5
 209+ 9FB5              Decrementa_contador_de_control_de_disparo
 210+ 9FB5
 211+ 9FB5 35               dec (hl)
 212+ 9FB6 7E               ld a,(hl)
 213+ 9FB7 E6 07            and 7
 214+ 9FB9 C0               ret nz
 215+ 9FBA
 216+ 9FBA              Rotamos_disparo_segun_proceda
 217+ 9FBA
 218+ 9FBA              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 219+ 9FBA
 220+ 9FBA 3E 07            ld a,7
 221+ 9FBC 86               add (hl)
 222+ 9FBD 77               ld (hl),a                                                           ; Contador reinicializado.
 223+ 9FBE CB 76            bit 6,(hl)
 224+ 9FC0 20 09            jr nz,Rota_a_derecha
 225+ 9FC2
 226+ 9FC2              Rota_a_izq
 227+ 9FC2
 228+ 9FC2 7D               ld a,l
 229+ 9FC3 D6 06            sub 6
 230+ 9FC5 6F               ld l,a
 231+ 9FC6
 232+ 9FC6 F3               di
 233+ 9FC7 18 FE            jr $
 234+ 9FC9 FB               ei
 235+ 9FCA
 236+ 9FCA C9               ret
 237+ 9FCB
 238+ 9FCB              Rota_a_derecha
 239+ 9FCB
 240+ 9FCB 7D               ld a,l
 241+ 9FCC D6 06            sub 6
 242+ 9FCE 6F               ld l,a
 243+ 9FCF
 244+ 9FCF F3               di
 245+ 9FD0 18 FE            jr $
 246+ 9FD2 FB               ei
 247+ 9FD3
 248+ 9FD3              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 249+ 9FD3
 250+ 9FD3 C9               ret
 251+ 9FD4
 252+ 9FD4              ; ------------
 253+ 9FD4
 254+ 9FD4              Situa_en_puntero_objeto
 255+ 9FD4
 256+ 9FD4 3E 06            ld a,6
 257+ 9FD6 85               add l
 258+ 9FD7 6F               ld l,a
 259+ 9FD8
 260+ 9FD8
 261+ 9FD8
 262+ 9FD8
 263+ 9FD8
 264+ 9FD8 C9               ret
 265+ 9FD9
 266+ 9FD9              ; ------------ ----------- ------------
 267+ 9FD9              ;
 268+ 9FD9              ;   25/9/24
 269+ 9FD9
 270+ 9FD9              Elimina_disparo_entidad
 271+ 9FD9
 272+ 9FD9 21 1F 8C         ld hl,Numero_de_disparos_de_entidades
 273+ 9FDC 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 274+ 9FDD
 275+ 9FDD E1               pop hl
 276+ 9FDE E5               push hl
 277+ 9FDF
 278+ 9FDF 2C               inc l
 279+ 9FE0 2C               inc l
 280+ 9FE1 2C               inc l                                                               ; Sitúa en el 1er .db de la caja.
 281+ 9FE2
 282+ 9FE2 CD EA 9F         call Borra_7_bytes
 283+ 9FE5
 284+ 9FE5 D1               pop de
 285+ 9FE6
 286+ 9FE6 21 00 00         ld hl,0
 287+ 9FE9
 288+ 9FE9 C9               ret
 289+ 9FEA
 290+ 9FEA              ; ----- ----- ----- ----- -----
 291+ 9FEA
 292+ 9FEA 16 07        Borra_7_bytes ld d,7                                                    ; Contador
 293+ 9FEC AF               xor a                                                               ; Borrador
 294+ 9FED 77           1 ld (hl),a
 295+ 9FEE 2D               dec l
 296+ 9FEF 15               dec d
 297+ 9FF0 20 FB            jr nz,1B
 298+ 9FF2 C9               ret
 299+ 9FF3
 300+ 9FF3              ; --------------------------------------------------------------------------------------
 301+ 9FF3              ;
 302+ 9FF3              ;   12/10/24
 303+ 9FF3              ;
 304+ 9FF3
 305+ 9FF3              Genera_datos_de_impresion_disparos_Entidades
 306+ 9FF3
 307+ 9FF3 3E 07            ld a,7
 308+ 9FF5 08               ex af,af                                                  ;? Salimos. No hay disparos de entidades generados.                                                    ex af,af
 309+ 9FF6
 310+ 9FF6              ; ---------------
 311+ 9FF6
 312+ 9FF6              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 313+ 9FF6
 314+ 9FF6 21 23 89          ld hl,Indice_de_disparos_entidades
 315+ 9FF9
 316+ 9FF9 CD C2 90     1 call Extrae_address
 317+ 9FFC
 318+ 9FFC 13               inc de
 319+ 9FFD 13               inc de
 320+ 9FFE
 321+ 9FFE ED 53 32 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 322+ A002
 323+ A002 2C               inc l
 324+ A003
 325+ A003 7E               ld a,(hl)
 326+ A004 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 327+ A005 28 35            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 328+ A007
 329+ A007              ; ----- ----- ----- -----
 330+ A007
 331+ A007 2D               dec l
 332+ A008 2D               dec l
 333+ A009 2D               dec l
 334+ A00A
 335+ A00A CD C2 90         call Extrae_address
 336+ A00D E5               push hl
 337+ A00E
 338+ A00E 1D               dec e
 339+ A00F
 340+ A00F EB               ex de,hl
 341+ A010
 342+ A010 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 343+ A011 2D               dec l
 344+ A012 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 345+ A013 2D               dec l
 346+ A014 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 347+ A015
 348+ A015 E1               pop hl                                                    ;? Puntero de impresión en HL.
 349+ A016
 350+ A016              Genera_scanlines_de_los_disparos_de_entidades.
 351+ A016
 352+ A016 FD 2A 1B 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 353+ A01A FD 73 00         ld (iy+0),e
 354+ A01D FD 70 01         ld (iy+1),b
 355+ A020 FD 71 02         ld (iy+2),c
 356+ A023
 357+ A023 FD 75 03         ld (iy+3),l
 358+ A026 FD 74 04         ld (iy+4),h
 359+ A029
 360+ A029 CD DB 99         call NextScan
 361+ A02C
 362+ A02C FD 75 05         ld (iy+5),l
 363+ A02F FD 74 06         ld (iy+6),h
 364+ A032
 365+ A032 FD E5            push iy
 366+ A034 E1               pop hl
 367+ A035
 368+ A035 3E 07            ld a,7
 369+ A037 85               add l
 370+ A038 6F               ld l,a
 371+ A039
 372+ A039 22 1B 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 373+ A03C
 374+ A03C              ; ----- ----- ----- -----
 375+ A03C
 376+ A03C              Situa_en_siguiente_caja
 377+ A03C
 378+ A03C 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 379+ A03D 3D               dec a
 380+ A03E C8               ret z
 381+ A03F
 382+ A03F 08               ex af,af
 383+ A040 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 384+ A043 18 B4            jr 1B
 385+ A045
 386+ A045              ; --------------------------------------------------------------------------------------
 387+ A045              ;
 388+ A045              ;   12/10/24
 389+ A045              ;
 390+ A045
 391+ A045              Genera_disparo_de_entidad_maldosa
 392+ A045
 393+ A045              ;   Estructura de un disparo de entidades.
 394+ A045
 395+ A045              ;   Disparo_1 defw 0								; Puntero objeto.
 396+ A045              ; 	defw 0											; Puntero de impresión.
 397+ A045              ;	defw 0											; Control.
 398+ A045
 399+ A045              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 400+ A045              ;   _de la entidad en el momento de disparar.
 401+ A045
 402+ A045              ;   El byte alto muestra la siguiente información:
 403+ A045              ;
 404+ A045              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 405+ A045              ;                        _antes de desplazarse a derecha/izquierda.
 406+ A045              ;
 407+ A045              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 408+ A045              ;
 409+ A045              ;                        10xx ..... Izquierda.
 410+ A045              ;                        01xx ..... Derecha.
 411+ A045              ;                        00xx ..... Recto.
 412+ A045
 413+ A045              ;*  Exclusiones.
 414+ A045
 415+ A045              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 416+ A045              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 417+ A045
 418+ A045              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 419+ A045
 420+ A045 3A 1F 8C         ld a,(Numero_de_disparos_de_entidades)
 421+ A048 A7               and a
 422+ A049 C8               ret z
 423+ A04A
 424+ A04A 3A BC 8B         ld a,(Coordenada_y)
 425+ A04D A7               and a
 426+ A04E C8               ret z
 427+ A04F
 428+ A04F 3D               dec a
 429+ A050 C8               ret z
 430+ A051
 431+ A051 FE 10            cp 16
 432+ A053 D0               ret nc
 433+ A054
 434+ A054              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 435+ A054              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 436+ A054              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 437+ A054
 438+ A054 21 21 8C         ld hl,Permiso_de_disparo_Entidades
 439+ A057 35               dec (hl)                                            ; No más disparos en este FRAME.
 440+ A058
 441+ A058              ;   Decrementa el numero de disparos de entidades.
 442+ A058
 443+ A058 21 1F 8C         ld hl,Numero_de_disparos_de_entidades
 444+ A05B 35               dec (hl)
 445+ A05C
 446+ A05C 21 23 89         ld hl,Indice_de_disparos_entidades
 447+ A05F
 448+ A05F CD C2 90     1 call Extrae_address
 449+ A062
 450+ A062 13               inc de
 451+ A063 13               inc de
 452+ A064
 453+ A064 ED 53 32 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 454+ A068
 455+ A068              ;   Comprobamos si la caja está vacía.
 456+ A068
 457+ A068 2C               inc l
 458+ A069
 459+ A069 7E               ld a,(hl)
 460+ A06A A7               and a
 461+ A06B 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 462+ A06D
 463+ A06D              ;   Caja vacía, vamos a generar un disparo.
 464+ A06D              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 465+ A06D
 466+ A06D CD 93 A0         call Genera_byte_inclinacion
 467+ A070
 468+ A070 7E               ld a,(hl)
 469+ A071 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 470+ A072
 471+ A072 2D               dec l
 472+ A073
 473+ A073              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 474+ A073
 475+ A073 3A C5 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 476+ A076 77               ld (hl),a
 477+ A077
 478+ A077 2D               dec l
 479+ A078
 480+ A078 CD B1 A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 481+ A07B
 482+ A07B 70               ld (hl),b
 483+ A07C 2D               dec l
 484+ A07D 71               ld (hl),c
 485+ A07E
 486+ A07E 2D               dec l
 487+ A07F
 488+ A07F              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 489+ A07F
 490+ A07F FD 7E 02         ld a,(iy+02)
 491+ A082 77               ld (hl),a
 492+ A083 2D               dec l
 493+ A084
 494+ A084 FD 7E 01         ld a,(iy+01)
 495+ A087 77               ld (hl),a
 496+ A088 2D               dec l
 497+ A089
 498+ A089 FD 7E 00         ld a,(iy+00)
 499+ A08C 77               ld (hl),a
 500+ A08D
 501+ A08D C9               ret
 502+ A08E
 503+ A08E              ;   --- --- ---
 504+ A08E
 505+ A08E              Situa_en_siguiente_disparo
 506+ A08E
 507+ A08E 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 508+ A091 18 CC            jr 1B
 509+ A093
 510+ A093              ; --------------------------------------------------------------------------------------
 511+ A093              ;
 512+ A093              ;   09/10/24
 513+ A093              ;
 514+ A093
 515+ A093              Genera_byte_inclinacion
 516+ A093
 517+ A093 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 518+ A095
 519+ A095              ; Determina tendencia del disparo.
 520+ A095
 521+ A095 3A 75 89         ld a,(CX_Amadeus)
 522+ A098 47               ld b,a
 523+ A099 3A BB 8B         ld a,(Coordenada_X)
 524+ A09C 90               sub b
 525+ A09D 38 07            jr c,Disparo_a_derecha
 526+ A09F
 527+ A09F FE 04        Disparo_a_izquierda cp 4
 528+ A0A1
 529+ A0A1 D8               ret c
 530+ A0A2 C8               ret z
 531+ A0A3
 532+ A0A3 CB FE            set 7,(hl)
 533+ A0A5 C9               ret
 534+ A0A6
 535+ A0A6 47           Disparo_a_derecha ld b,a
 536+ A0A7 3E FF            ld a,$ff
 537+ A0A9 90               sub b
 538+ A0AA
 539+ A0AA FE 04            cp 4
 540+ A0AC
 541+ A0AC D8               ret c
 542+ A0AD C8               ret z
 543+ A0AE
 544+ A0AE CB F6            set 6,(hl)
 545+ A0B0 C9               ret
 546+ A0B1
 547+ A0B1              ; --------------------------------------------------------------------------------------
 548+ A0B1              ;
 549+ A0B1              ;   09/10/24
 550+ A0B1              ;
 551+ A0B1
 552+ A0B1              Modifica_puntero_de_impresion
 553+ A0B1
 554+ A0B1              ;   Puntero de impresión del disparo en BC.
 555+ A0B1
 556+ A0B1 E5               push hl
 557+ A0B2
 558+ A0B2 2A 34 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 559+ A0B5 CD DB 99         call NextScan
 560+ A0B8
 561+ A0B8 4D               ld c,l
 562+ A0B9 44               ld b,h
 563+ A0BA
 564+ A0BA E1               pop hl
 565+ A0BB
 566+ A0BB 08               ex af,af
 567+ A0BC CB 77            bit 6,a
 568+ A0BE 28 06            jr z,1F
 569+ A0C0
 570+ A0C0 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 571+ A0C4 0C               inc c
 572+ A0C5 C9               ret
 573+ A0C6
 574+ A0C6 CB 7F        1 bit 7,a
 575+ A0C8 28 F6            jr z,2B
 576+ A0CA
 577+ A0CA FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 578+ A0CE 0D               dec c
 579+ A0CF
 580+ A0CF C9               ret
 581+ A0D0
 582+ A0D0              ; --------------------------------------------------------------------------------------
 583+ A0D0              ;
 584+ A0D0              ;   31/08/24
 585+ A0D0              ;
 586+ A0D0
 587+ A0D0              Compara_con_coordenadas_de_disparo
 588+ A0D0
 589+ A0D0 3A BC 8B         ld a,(Coordenada_y)
 590+ A0D3 47               ld b,a
 591+ A0D4 3A 39 8C         ld a,(Coordenadas_disparo_certero)
 592+ A0D7 90               sub b
 593+ A0D8
 594+ A0D8              ; A = "0" ok
 595+ A0D8              ; A = "1" ok
 596+ A0D8
 597+ A0D8 28 08            jr z,Comprueba_coordenada_X
 598+ A0DA 3D               dec a
 599+ A0DB 28 05            jr z,Comprueba_coordenada_X
 600+ A0DD
 601+ A0DD              ; A = "$ff" ok
 602+ A0DD
 603+ A0DD FE FE            cp $fe
 604+ A0DF 28 01            jr z,Comprueba_coordenada_X
 605+ A0E1
 606+ A0E1 C9               ret
 607+ A0E2
 608+ A0E2              Comprueba_coordenada_X
 609+ A0E2
 610+ A0E2 3A BB 8B         ld a,(Coordenada_X)
 611+ A0E5 47               ld b,a
 612+ A0E6 21 3A 8C         ld hl,Coordenadas_disparo_certero+1
 613+ A0E9 7E               ld a,(hl)
 614+ A0EA 90               sub b
 615+ A0EB
 616+ A0EB              ; A = "0" ok
 617+ A0EB              ; A = "1" ok
 618+ A0EB
 619+ A0EB 28 09            jr z,Activa_Impacto_en_entidad
 620+ A0ED 3D               dec a
 621+ A0EE 28 06            jr z,Activa_Impacto_en_entidad
 622+ A0F0
 623+ A0F0              ; A = "2" ok
 624+ A0F0
 625+ A0F0 3D               dec a
 626+ A0F1 28 03            jr z,Activa_Impacto_en_entidad
 627+ A0F3
 628+ A0F3              ; A = "$ff"
 629+ A0F3
 630+ A0F3 FE FD            cp $fd
 631+ A0F5 C0               ret nz
 632+ A0F6
 633+ A0F6              Activa_Impacto_en_entidad
 634+ A0F6
 635+ A0F6              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 636+ A0F6
 637+ A0F6 3E 02            ld a,2
 638+ A0F8 32 BE 8B         ld (Impacto),a
 639+ A0FB
 640+ A0FB              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 641+ A0FB
 642+ A0FB 11 C0 87         ld de,Indice_Explosion_entidades
 643+ A0FE 21 C1 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 644+ A101
 645+ A101 73               ld (hl),e
 646+ A102 23               inc hl
 647+ A103 72               ld (hl),d
 648+ A104
 649+ A104              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 650+ A104
 651+ A104 21 36 8C         ld hl,Impacto2
 652+ A107 CB 9E            res 3,(hl)
 653+ A109
 654+ A109 C9               ret
 655+ A10A
 656+ A10A              ; --------------------------------------------------------------------------------------
 657+ A10A              ;
 658+ A10A              ;   13/10/24
 659+ A10A              ;
 660+ A10A
 661+ A10A              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 662+ A10A
 663+ A10A              Limpia_album_de_pintado_disparos_Amadeus
 664+ A10A
 665+ A10A 2A 13 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 666+ A10D 06 06            ld b,6
 667+ A10F AF               xor a
 668+ A110 77           1 ld (hl),a
 669+ A111 2C               inc l
 670+ A112 10 FC            djnz 1B
 671+ A114
 672+ A114 C9               ret
 673+ A115
 674+ A115              ; --------------------------------------------------------------------------------------
 675+ A115              ;
 676+ A115              ;   29/09/24
 677+ A115              ;
 678+ A115
 679+ A115              Calcula_bytes_pintado_disparos
 680+ A115
 681+ A115 2A 17 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 682+ A118 45               ld b,l
 683+ A119 2A 1B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 684+ A11C 7D               ld a,l
 685+ A11D
 686+ A11D 90               sub b
 687+ A11E 32 1D 8C         ld (Num_de_bytes_album_de_disparos),a
 688+ A121
 689+ A121 C9               ret
 690+ A122
 691+ A122              ; --------------------------------------------------------------------------------------
 692+ A122              ;
 693+ A122              ;   26/10/24
 694+ A122              ;
 695+ A122              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 696+ A122              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 697+ A122              ;   _disparos que el álbum del FRAME actual).
 698+ A122
 699+ A122              Limpia_album_de_pintado_disparos_entidades
 700+ A122
 701+ A122 21 1E 8C         ld hl,Num_de_bytes_album_de_disparos+1
 702+ A125 7E               ld a,(hl)
 703+ A126 2D               dec l
 704+ A127 46               ld b,(hl)
 705+ A128 90               sub b
 706+ A129
 707+ A129 D8               ret c
 708+ A12A C8               ret z
 709+ A12B
 710+ A12B F5               push af
 711+ A12C 80               add b
 712+ A12D 77               ld (hl),a
 713+ A12E F1               pop af
 714+ A12F
 715+ A12F              ; Clean.
 716+ A12F
 717+ A12F 47           2 ld b,a
 718+ A130 AF               xor a
 719+ A131 2A 1B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 720+ A134 77           1 ld (hl),a
 721+ A135 23               inc hl
 722+ A136 10 FC            djnz 1B
 723+ A138
 724+ A138 C9               ret
 725+ A139
 726+ A139              ; --------------------------------------------------------------------------------------
 727+ A139              ;
 728+ A139              ;   29/09/24
 729+ A139              ;
 730+ A139
 731+ A139              Motor_Disparos_Amadeus
 732+ A139
 733+ A139 21 20 89         ld hl,Disparo_Amad+1
 734+ A13C
 735+ A13C 34               inc (hl)
 736+ A13D 35               dec (hl)
 737+ A13E
 738+ A13E C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 739+ A13F
 740+ A13F              ;   Esta caja contiene un disparo.
 741+ A13F
 742+ A13F CD 46 A1         call Consulta_Impacto
 743+ A142 CC 5F A1         call z,Mueve_disparo_Amadeus
 744+ A145
 745+ A145 C9               ret
 746+ A146
 747+ A146              ; ----------------------
 748+ A146              ;
 749+ A146              ;
 750+ A146              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 751+ A146              ;
 752+ A146              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 753+ A146
 754+ A146
 755+ A146              Consulta_Impacto
 756+ A146
 757+ A146              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 758+ A146              ;   _sea lo más coherente posible.
 759+ A146
 760+ A146 E5               push hl
 761+ A147 2B               dec hl
 762+ A148 CD 3B A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 763+ A14B E1               pop hl
 764+ A14C 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 765+ A14D
 766+ A14D C8               ret z
 767+ A14E
 768+ A14E 3A 36 8C         ld a,(Impacto2)
 769+ A151 CB DF            set 3,a
 770+ A153 32 36 8C         ld (Impacto2),a
 771+ A156
 772+ A156 E5               push hl
 773+ A157 CD 28 A2         call Genera_coordenadas_de_disparo_Amadeus
 774+ A15A E1               pop hl
 775+ A15B CD 78 A1         call Elimina_disparo_Amadeus
 776+ A15E
 777+ A15E C9               ret
 778+ A15F
 779+ A15F              ; ----------------------
 780+ A15F              ;
 781+ A15F              ;
 782+ A15F              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 783+ A15F
 784+ A15F              Mueve_disparo_Amadeus
 785+ A15F
 786+ A15F CD C2 90         call Extrae_address
 787+ A162
 788+ A162 CD EA 99         call PreviousScan
 789+ A165 CD EA 99         call PreviousScan
 790+ A168 CD EA 99         call PreviousScan
 791+ A16B CD EA 99         call PreviousScan
 792+ A16E
 793+ A16E              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 794+ A16E
 795+ A16E 7C               ld a,h
 796+ A16F D6 40            sub $40
 797+ A171 EB               ex de,hl
 798+ A172 38 04            jr c,Elimina_disparo_Amadeus
 799+ A174
 800+ A174               ; Introduce nuevo puntero_de_impresión en la caja.
 801+ A174
 802+ A174 73               ld (hl),e
 803+ A175 23               inc hl
 804+ A176 72               ld (hl),d
 805+ A177
 806+ A177 C9               ret
 807+ A178
 808+ A178              ; ----------------------
 809+ A178              ;
 810+ A178              ;   29/9/24
 811+ A178
 812+ A178              Elimina_disparo_Amadeus
 813+ A178
 814+ A178              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 815+ A178              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 816+ A178
 817+ A178              ;   Disparo_1A defw 0									; Puntero objeto.
 818+ A178              ;   	defw 0											; Puntero de impresión.
 819+ A178
 820+ A178 2B               dec hl
 821+ A179 2B               dec hl
 822+ A17A
 823+ A17A AF               xor a
 824+ A17B 77               ld (hl),a
 825+ A17C 23               inc hl
 826+ A17D 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 827+ A17E
 828+ A17E 23               inc hl
 829+ A17F 77               ld (hl),a
 830+ A180 23               inc hl
 831+ A181 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 832+ A182
 833+ A182 3E 01            ld a,1
 834+ A184 32 20 8C         ld (Permiso_de_disparo_Amadeus),a
 835+ A187
 836+ A187 CD 0A A1         call Limpia_album_de_pintado_disparos_Amadeus
 837+ A18A
 838+ A18A AF               xor a
 839+ A18B 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 840+ A18C
 841+ A18C C9               ret
 842+ A18D
 843+ A18D              ; --------------------------------------------------------------------------------------
 844+ A18D              ;
 845+ A18D              ;   13/10/24
 846+ A18D              ;
 847+ A18D
 848+ A18D              Pinta_disparos_Amadeus
 849+ A18D
 850+ A18D 06 02            ld b,2
 851+ A18F ED 73 07 8C      ld (Stack),sp
 852+ A193 ED 7B 15 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 853+ A197 D1           3 pop de
 854+ A198 14               inc d
 855+ A199 15               dec d
 856+ A19A 28 1C            jr z,1F
 857+ A19C E1               pop hl
 858+ A19D
 859+ A19D              Imprime_scanlines_en_pantalla
 860+ A19D
 861+ A19D              ; 1er scanline
 862+ A19D
 863+ A19D 1A               ld a,(de)
 864+ A19E AE               xor (hl)
 865+ A19F 77               ld (hl),a
 866+ A1A0
 867+ A1A0 1C               inc e
 868+ A1A1 2C               inc l
 869+ A1A2
 870+ A1A2 1A               ld a,(de)
 871+ A1A3 AE               xor (hl)
 872+ A1A4 77               ld (hl),a
 873+ A1A5
 874+ A1A5 1D               dec e
 875+ A1A6 E1               pop hl
 876+ A1A7
 877+ A1A7              ; 2º scanline
 878+ A1A7
 879+ A1A7 1A               ld a,(de)
 880+ A1A8 AE               xor (hl)
 881+ A1A9 77               ld (hl),a
 882+ A1AA
 883+ A1AA 1C               inc e
 884+ A1AB 2C               inc l
 885+ A1AC
 886+ A1AC 1A               ld a,(de)
 887+ A1AD AE               xor (hl)
 888+ A1AE 77               ld (hl),a
 889+ A1AF
 890+ A1AF 1D               dec e
 891+ A1B0
 892+ A1B0 18 06            jr 1F
 893+ A1B2
 894+ A1B2 ED 7B 13 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 895+ A1B6 18 DF            jr 3B
 896+ A1B8 10 F8        1 djnz 2B
 897+ A1BA ED 7B 07 8C      ld sp,(Stack)
 898+ A1BE C9               ret
 899+ A1BF
 900+ A1BF              ; --------------------------------------------------------------------------------------
 901+ A1BF              ;
 902+ A1BF              ;   13/10/24
 903+ A1BF              ;
 904+ A1BF              ;   Modifica: HL,BC y DE.
 905+ A1BF
 906+ A1BF
 907+ A1BF              Genera_datos_de_impresion_disparos_Amadeus
 908+ A1BF
 909+ A1BF ED 73 07 8C      ld (Stack),sp
 910+ A1C3 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 911+ A1C6 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 912+ A1C7
 913+ A1C7 14               inc d                                                     ;? Salimos si no hay disparo.
 914+ A1C8 15               dec d
 915+ A1C9
 916+ A1C9 28 0E            jr z,Salida
 917+ A1CB
 918+ A1CB              Genera_scanlines_de_disparo_Amadeus
 919+ A1CB
 920+ A1CB E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 921+ A1CC              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 922+ A1CC ED 7B 13 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 923+ A1D0
 924+ A1D0 C1               pop bc
 925+ A1D1 C1               pop bc
 926+ A1D2 C1               pop bc
 927+ A1D3
 928+ A1D3 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 929+ A1D4 CD EA 99         call PreviousScan
 930+ A1D7 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 931+ A1D8 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 932+ A1D9
 933+ A1D9              Salida
 934+ A1D9
 935+ A1D9 ED 7B 07 8C      ld sp,(Stack)
 936+ A1DD
 937+ A1DD C9               ret
 938+ A1DE
 939+ A1DE              ; --------------------------------------------------------------------------------------
 940+ A1DE              ;
 941+ A1DE              ;   12/09/24
 942+ A1DE              ;
 943+ A1DE
 944+ A1DE              Genera_disparo_Amadeus
 945+ A1DE
 946+ A1DE              ;*  Exclusiones.
 947+ A1DE
 948+ A1DE 3A 20 8C         ld a,(Permiso_de_disparo_Amadeus)
 949+ A1E1 A7               and a
 950+ A1E2 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 951+ A1E3
 952+ A1E3 3D               dec a
 953+ A1E4 32 20 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 954+ A1E7
 955+ A1E7              Define_puntero_objeto_disparo
 956+ A1E7
 957+ A1E7              ;   Inicializamos contador.
 958+ A1E7
 959+ A1E7 06 00            ld b,0
 960+ A1E9
 961+ A1E9 2A 79 89         ld hl,(p.imp.amadeus)
 962+ A1EC 2C               inc l
 963+ A1ED
 964+ A1ED 3E 80            ld a,$80
 965+ A1EF BE               cp (hl)
 966+ A1F0 28 0D            jr z,1F
 967+ A1F2
 968+ A1F2 04               inc b
 969+ A1F3
 970+ A1F3 3E 60            ld a,$60
 971+ A1F5 BE               cp (hl)
 972+ A1F6 28 07            jr z,1F
 973+ A1F8
 974+ A1F8
 975+ A1F8 04               inc b
 976+ A1F9
 977+ A1F9 3E 18            ld a,$18
 978+ A1FB BE               cp (hl)
 979+ A1FC 28 01            jr z,1F
 980+ A1FE
 981+ A1FE 04               inc b
 982+ A1FF
 983+ A1FF              ;   Calcula el Puntero_de_impresión del disparo.
 984+ A1FF
 985+ A1FF              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 986+ A1FF
 987+ A1FF CD EA 99     1 call PreviousScan
 988+ A202
 989+ A202 78               ld a,b
 990+ A203 CB 3F            srl a
 991+ A205 28 03            jr z,4F
 992+ A207
 993+ A207              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 994+ A207 E5               push hl
 995+ A208 18 02            jr 5F
 996+ A20A 2D           4 dec l
 997+ A20B E5               push hl
 998+ A20C              ; ---
 999+ A20C
1000+ A20C              ;   Calcula el Puntero_objeto del disparo.
1001+ A20C
1002+ A20C 21 76 83     5 ld hl,Indice_disparo_Amadeus
1003+ A20F 04               inc b
1004+ A210 05               dec b
1005+ A211 28 04            jr z,2F
1006+ A213
1007+ A213              ;   Nos desplazamos por el índice de disparos.
1008+ A213
1009+ A213 2C           3 inc l
1010+ A214 2C               inc l
1011+ A215 10 FC            djnz 3B
1012+ A217
1013+ A217              ; --- Guarda el Puntero_objeto del disparo en la pila.
1014+ A217 CD C2 90     2 call Extrae_address
1015+ A21A E5               push hl
1016+ A21B              ; ---
1017+ A21B
1018+ A21B              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1019+ A21B              ; HL en el 1er .db de la caja.
1020+ A21B
1021+ A21B 21 1F 89         ld hl,Disparo_Amad
1022+ A21E
1023+ A21E 06 02            ld b,2
1024+ A220
1025+ A220 D1           6 pop de
1026+ A221 73               ld (hl),e
1027+ A222 23               inc hl
1028+ A223 72               ld (hl),d
1029+ A224 23               inc hl
1030+ A225
1031+ A225 10 F9            djnz 6B
1032+ A227
1033+ A227 C9               ret
1034+ A228
1035+ A228              Genera_coordenadas_de_disparo_Amadeus
1036+ A228
1037+ A228              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1038+ A228              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1039+ A228              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1040+ A228
1041+ A228 CD C2 90         call Extrae_address
1042+ A22B CD E1 94         call Genera_coordenadas
1043+ A22E
1044+ A22E 3D               dec a
1045+ A22F
1046+ A22F 21 39 8C         ld hl,Coordenadas_disparo_certero
1047+ A232 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1048+ A233 23               inc hl
1049+ A234 3A BB 8B         ld a,(Coordenada_X)
1050+ A237 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1051+ A238
1052+ A238 AF               xor a
1053+ A239 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1054+ A23A
1055+ A23A C9               ret
1056+ A23B
1057+ A23B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1058+ A23B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1059+ A23B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1060+ A23B
1061+ A23B              ; ----------------------------------------------
1062+ A23B              ;
1063+ A23B              ;   27/08/24
1064+ A23B              ;
1065+ A23B              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1066+ A23B              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1067+ A23B
1068+ A23B              Detecta_impacto_en_disparo_de_Amadeus
1069+ A23B
1070+ A23B              Extraccion_de_datos
1071+ A23B
1072+ A23B 13               inc de
1073+ A23C 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1074+ A23D
1075+ A23D 5E               ld e,(hl)
1076+ A23E 23               inc hl
1077+ A23F 56               ld d,(hl)
1078+ A240
1079+ A240 23               inc hl
1080+ A241
1081+ A241 4E               ld c,(hl)
1082+ A242 23               inc hl
1083+ A243 46               ld b,(hl)
1084+ A244
1085+ A244 C5               push bc
1086+ A245 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1087+ A246
1088+ A246              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1089+ A246
1090+ A246 CD EA 99         call PreviousScan
1091+ A249 CD EA 99         call PreviousScan
1092+ A24C
1093+ A24C              Detecta_impacto_
1094+ A24C
1095+ A24C 1A               ld a,(de)
1096+ A24D A6               and (hl)
1097+ A24E C0               ret nz
1098+ A24F
1099+ A24F 13               inc de
1100+ A250 23               inc hl
1101+ A251
1102+ A251 1A               ld a,(de)
1103+ A252 A6               and (hl)
1104+ A253 C9               ret
1105+ A254
1106+ A254              ; -------------------------------------------------------------------------------------------------------------
1107+ A254              ;
1108+ A254              ;   8/8/24
1109+ A254              ;
1110+ A254              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1111+ A254              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1112+ A254              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1113+ A254              ;
1114+ A254              ;   MODIFICA: HL,DE,BC y A.
1115+ A254              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1116+ A254              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1117+ A254
1118+ A254              Colision_Entidad_Amadeus
1119+ A254
1120+ A254              ; Posible contacto de entidad con Amadeus. ?????
1121+ A254
1122+ A254              ; Exclusiones:
1123+ A254
1124+ A254 3A 59 8C         ld a,(Shield)
1125+ A257 A7               and a
1126+ A258 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1127+ A259
1128+ A259 21 2F 8C         ld hl,Ctrl_3
1129+ A25C CB 76            bit 6,(hl)
1130+ A25E C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1131+ A25F
1132+ A25F 21 36 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1133+ A262 CB 56            bit 2,(hl)
1134+ A264 C0               ret nz
1135+ A265
1136+ A265 3A BC 8B     	ld a,(Coordenada_y)
1137+ A268 FE 14        	cp $14
1138+ A26A D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1139+ A26B
1140+ A26B 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1141+ A26E A7               and a
1142+ A26F C0               ret nz
1143+ A270
1144+ A270              Genera_coordenadas_X
1145+ A270
1146+ A270              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1147+ A270              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1148+ A270
1149+ A270              ;   Limpiamos almacenes.
1150+ A270
1151+ A270              ;    call Limpia_Coordenadas_X
1152+ A270
1153+ A270              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1154+ A270
1155+ A270 21 3B 8C         ld hl,Coordenadas_X_Entidad
1156+ A273 3A BB 8B         ld a,(Coordenada_X)
1157+ A276 CD 98 A2         call Guarda_coordenadas_X
1158+ A279
1159+ A279              ;   Almacenamos las coordenadas X de Amadeus.
1160+ A279
1161+ A279 3A 75 89         ld a,(CX_Amadeus)
1162+ A27C CD 98 A2         call Guarda_coordenadas_X
1163+ A27F CD AC A2         call Compara_coordenadas_X
1164+ A282 C0               ret nz
1165+ A283
1166+ A283 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1167+ A285 32 BE 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1168+ A288
1169+ A288 2A FA 8B         ld hl,(Puntero_store_caja)
1170+ A28B 2C               inc l
1171+ A28C 2C               inc l
1172+ A28D 2C               inc l
1173+ A28E 2C               inc l
1174+ A28F 22 37 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1175+ A292
1176+ A292 21 36 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1177+ A295 CB D6            set 2,(hl)
1178+ A297
1179+ A297 C9               ret
1180+ A298
1181+ A298               ; ----- ----- ----- ----- -----
1182+ A298
1183+ A298 77           Guarda_coordenadas_X ld (hl),a
1184+ A299 3C               inc a
1185+ A29A 2C               inc l
1186+ A29B 77               ld (hl),a
1187+ A29C 3C               inc a
1188+ A29D 2C               inc l
1189+ A29E 77               ld (hl),a
1190+ A29F 2C               inc l
1191+ A2A0 C9               ret
1192+ A2A1
1193+ A2A1 AF           Limpia_Coordenadas_X xor a
1194+ A2A2 06 06            ld b,6
1195+ A2A4 21 3E 8C         ld hl,Coordenadas_X_Amadeus
1196+ A2A7 77           1 ld (hl),a
1197+ A2A8 23               inc hl
1198+ A2A9 10 FC            djnz 1B
1199+ A2AB C9               ret
1200+ A2AC
1201+ A2AC              ; ----- ----- ----- ----- -----
1202+ A2AC
1203+ A2AC              Compara_coordenadas_X
1204+ A2AC
1205+ A2AC DD 21 3B 8C      ld ix,Coordenadas_X_Entidad
1206+ A2B0 DD 7E 00         ld a,(ix+0)
1207+ A2B3 CD C1 A2         call Comparando
1208+ A2B6 C8               ret z
1209+ A2B7
1210+ A2B7 3C               inc a
1211+ A2B8 CD D0 A2         call Comparando_1
1212+ A2BB C8               ret z
1213+ A2BC
1214+ A2BC 3C               inc a
1215+ A2BD CD D0 A2         call Comparando_1
1216+ A2C0 C9               ret
1217+ A2C1
1218+ A2C1              ; ----- ----- ----- ----- -----
1219+ A2C1              ;
1220+ A2C1              ;   4/12/23
1221+ A2C1              ;
1222+ A2C1              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1223+ A2C1
1224+ A2C1              Comparando
1225+ A2C1
1226+ A2C1 DD 2C            inc ixl
1227+ A2C3 DD 2C            inc ixl
1228+ A2C5 DD 2C            inc ixl
1229+ A2C7
1230+ A2C7 DD 46 00         ld b,(ix+0)
1231+ A2CA DD 4E 01         ld c,(ix+1)
1232+ A2CD DD 56 02         ld d,(ix+2)
1233+ A2D0
1234+ A2D0 B8           Comparando_1 cp b
1235+ A2D1 C8               ret z
1236+ A2D2 B9               cp c
1237+ A2D3 C8               ret z
1238+ A2D4 BA               cp d
1239+ A2D5 C9               ret
1240+ A2D6
1241+ A2D6              ; -----------------------------------------------------------------------
1242+ A2D6              ;
1243+ A2D6              ;   04/7/24
1244+ A2D6              ;
1245+ A2D6
1246+ A2D6              Detecta_colision_nave_entidad
1247+ A2D6
1248+ A2D6              ; Exclusiones:
1249+ A2D6
1250+ A2D6              ; Salimos de la rutina si no hay advertencia de posible colisión.
1251+ A2D6
1252+ A2D6 21 36 8C     	ld hl,Impacto2
1253+ A2D9 CB 56        	bit 2,(hl)
1254+ A2DB C8           	ret z
1255+ A2DC
1256+ A2DC              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1257+ A2DC
1258+ A2DC 2A 7B 89         ld hl,(Pamm_Amadeus)
1259+ A2DF CD C2 90         call Extrae_address
1260+ A2E2 54               ld d,h
1261+ A2E3 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1262+ A2E4
1263+ A2E4 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1264+ A2E7 06 10            ld b,16                                        ; Contador de scanlines en B.
1265+ A2E9 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1266+ A2EC
1267+ A2EC C5           1 push bc
1268+ A2ED 06 03            ld b,3
1269+ A2EF E5               push hl
1270+ A2F0
1271+ A2F0              ; .db
1272+ A2F0
1273+ A2F0 1A           3 ld a,(de)
1274+ A2F1 A7               and a
1275+ A2F2 20 03            jr nz,4F
1276+ A2F4
1277+ A2F4 2C               inc l
1278+ A2F5 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1279+ A2F7
1280+ A2F7 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1281+ A2F9 28 04            jr z,2F
1282+ A2FB
1283+ A2FB              ; Impacto.
1284+ A2FB FD 2D            dec iyl
1285+ A2FD 28 22            jr z,5F
1286+ A2FF
1287+ A2FF 1C           2 inc e
1288+ A300 10 EE            djnz 3B
1289+ A302
1290+ A302 E1               pop hl
1291+ A303
1292+ A303              ; Hay salto de línea en el puntero de impresión ???
1293+ A303
1294+ A303 7C               ld a,h
1295+ A304 D6 57            sub $57
1296+ A306 20 0A            jr nz,6F
1297+ A308
1298+ A308              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1299+ A308
1300+ A308 2A 79 89         ld hl,(p.imp.amadeus)
1301+ A30B 3E 20            ld a,$20
1302+ A30D A7               and a
1303+ A30E 85               add l
1304+ A30F 6F               ld l,a
1305+ A310 18 01            jr 7F
1306+ A312
1307+ A312 24           6 inc h
1308+ A313
1309+ A313 C1           7 pop bc
1310+ A314 10 D6            djnz 1B
1311+ A316
1312+ A316              ;   Fin de la comparativa.
1313+ A316
1314+ A316              ;   NO HAY COLISIÓN !!!!!.
1315+ A316              ;
1316+ A316              ;   .db (Impacto) de Amadeus a "0".
1317+ A316              ;   RES el bit2 de (Impacto2).
1318+ A316              ;
1319+ A316              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1320+ A316              ;   Lo colocamos a "0".
1321+ A316
1322+ A316 21 36 8C         ld hl,Impacto2
1323+ A319 CB 96            res 2,(hl)
1324+ A31B 2A 37 8C         ld hl,(Entidad_sospechosa_de_colision)
1325+ A31E 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1326+ A320 C9               ret
1327+ A321
1328+ A321              ;   COLISIÓN !!!!!.
1329+ A321              ;
1330+ A321              ;   .db (Impacto) de Amadeus a "1".
1331+ A321              ;   SET el bit3 de (Impacto2).
1332+ A321              ;
1333+ A321              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1334+ A321
1335+ A321 E1           5 pop hl
1336+ A322 C1               pop bc
1337+ A323
1338+ A323 21 78 89         ld hl,Impacto_Amadeus
1339+ A326 36 01            ld (hl),1
1340+ A328 21 36 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1341+ A32B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1342+ A32D
1343+ A32D 11 C0 87         ld de,Indice_Explosion_entidades
1344+ A330 2A 37 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1345+ A333
1346+ A333 23               inc hl
1347+ A334 23               inc hl
1348+ A335 23               inc hl
1349+ A336
1350+ A336 73               ld (hl),e
1351+ A337 23               inc hl
1352+ A338 72               ld (hl),d
1353+ A339
1354+ A339              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1355+ A339
1356+ A339 11 60 88         ld de,Indice_Explosion_Amadeus
1357+ A33C 21 7B 89         ld hl,Pamm_Amadeus
1358+ A33F
1359+ A33F 73               ld (hl),e
1360+ A340 23               inc hl
1361+ A341 72               ld (hl),d
1362+ A342
1363+ A342 C9               ret
1364+ A343
1365+ A343
1366+ A343
# file closed: Disparo.asm
2056  A343
2057  A343              	SAVESNA "Pruebas.sna", START
2058  A343
2059  A343
2060  A343
2061  A343
# file closed: Banco_de_pruebas.asm
