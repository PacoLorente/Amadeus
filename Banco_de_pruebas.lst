# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 43 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  9+  83E8              ;                    _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA D8 50        	defw $50d8                                      ; (Posicion_inicio).
199+  84FC 04           	db 4											; (Cuad_objeto).
200+  84FD
201+  84FD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 00 00 00 00  	defw 0,0							  	  		; (Puntero_indice_mov) / (Puntero_mov).
216+  851B
217+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
218+  851E
219+  851E 00           	db 0 											; (Columnas).
220+  851F 00 00        	defw 0											; (Limite_horizontal).
221+  8521 00           	db 0											; (Limite_vertical).
222+  8522
223+  8522              ; ---------- ---------- ---------- ---------- ----------
224+  8522
225+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
226+  8524 00 00        	defw 0                                          ; (Posicion_actual).
227+  8526 00 00        	defw 0											; (Puntero_objeto).
228+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
229+  852B
230+  852B 04           	db %00000100									; (Attr).
231+  852C
232+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
233+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
234+  8530
235+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
236+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
237+  8534
238+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
239+  8536 01           	db 1											; (Cuad_objeto).
240+  8537
241+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
242+  853B
243+  853B 00 00        	db 0,0											; Variables_de_borrado
244+  853D 00 00        	defw 0										 	;	" " " " " " "
245+  853F 00 00        	defw 0											;	" " " " " " "
246+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
247+  8545
248+  8545 00 00        	db 0,0											; Variables_de_pintado
249+  8547 00 00        	defw 0											;	" " " " " " "
250+  8549 00 00        	defw 0											;	" " " " " " "
251+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
252+  854F
253+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
254+  8551
255+  8551 44 95 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
256+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
257+  8558
258+  8558 00           	db 0 											; (Columnas).
259+  8559 00 00        	defw 0											; (Limite_horizontal).
260+  855B 00           	db 0											; (Limite_vertical).
261+  855C
262+  855C              ; ---------- ---------- ---------- ---------- ----------
263+  855C
264+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
265+  855E 00 00        	defw 0                                          ; (Posicion_actual).
266+  8560 00 00        	defw 0 											; (Puntero_objeto).
267+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
268+  8565
269+  8565 01           	db %00000001									; (Attr).
270+  8566
271+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
272+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
273+  856A
274+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
275+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
276+  856E
277+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
278+  8570 00           	db 0											; (Cuad_objeto).
279+  8571
280+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
281+  8575
282+  8575 00 00        	db 0,0											; Variables_de_borrado
283+  8577 00 00        	defw 0										 	;	" " " " " " "
284+  8579 00 00        	defw 0											;	" " " " " " "
285+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
286+  857F
287+  857F 00 00        	db 0,0											; Variables_de_pintado
288+  8581 00 00        	defw 0											;	" " " " " " "
289+  8583 00 00        	defw 0											;	" " " " " " "
290+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
291+  8589
292+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
293+  858B
294+  858B 34 95 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
295+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
296+  8592
297+  8592 00           	db 0 											; (Columnas).
298+  8593 00 00        	defw 0											; (Limite_horizontal).
299+  8595 00           	db 0											; (Limite_vertical).
300+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 21 47        Posicion_inicio defw $4721								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 38 95        Puntero_indice_mov defw Indice_mov_Abajo
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
163   85D1
164   85D1
165   85D1
166   85D1
167   85D1
168   85D1
169   85D1              ; Gestión de ENTIDADES.
170   85D1
171   85D1 00 00        Puntero_store_entidades defw 0
172   85D3 00 00        Puntero_restore_entidades defw 0
173   85D5 00 00        Indice_restore defw 0
174   85D7 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
175   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
176   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
177   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
178   85D9              ;														; _ (Numero_de_malotes)="0".
179   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
180   85DB              ;														; _variable para almacenar lo posición del puntero_
181   85DB              ; 														; _de pila, SP.
182   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
183   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
184   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
185   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
186   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
187   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E1              ;														; _el snapshot de los registros del siguiente disparo.
189   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
190   85E1
191   85E1              ; Gestión de Disparos.
192   85E1
193   85E1 00           Numero_de_disparotes db 0
194   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
195   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
196   85E6 00           Impacto db 0											; Este byte indica que se ha producido impacto:
197   85E7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
198   85E7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
199   85E7 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
200   85EA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
201   85EA              ; Gestión de FRAMES.
202   85EA
203   85EA 00           Switch db 0
204   85EB
205   85EB              ; Variables de Raster y localización en pantalla.
206   85EB
207   85EB 00 FF        Temp_Raster defw $ff00
208   85ED
209   85ED              ; Rutina principal *************************************************************************************************************************************************************************
210   85ED              ;
211   85ED              ;	14/11/22
212   85ED
213   85ED 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
214   85F0
215   85F0 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
216   85F2 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
217   85F4 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
218   85F6 F3           	DI
219   85F7
220   85F7 3E 01        	ld a,1
221   85F9 D3 FE        	out ($fe),a
222   85FB
223   85FB 3E 07        	ld a,%00000111
224   85FD CD 5C 91     	call Cls
225   8600
226   8600              ;	call Pinta_FILAS
227   8600
228   8600 CD 51 88     	call Pulsa_ENTER
229   8603
230   8603 21 D7 85     	ld hl,Numero_de_entidades
231   8606 46           	ld b,(hl)
232   8607 04           	inc b
233   8608 05           	dec b
234   8609 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
235   860B
236   860B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
237   860B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
238   860B              ;	Pintamos el resto de entidades:
239   860B
240   860B CD 4A 87     	call Inicia_punteros_de_entidades
241   860E
242   860E              ;	INICIA ENTIDADES!!!!!
243   860E
244   860E C5           1 push bc  												; Guardo el contador de entidades.
245   860F CD A4 87      	call Inicia_Puntero_objeto
246   8612 CD AC 8B     	call Draw
247   8615 CD A0 7F     	call Guarda_foto_registros
248   8618 CD EC 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
249   861B C1           	pop bc
250   861C 10 F0        	djnz 1B  											; Decremento el contador de entidades.
251   861E
252   861E              ; 	INICIA AMADEUS!!!!!
253   861E
254   861E CD 2D 88     3 call Restore_Amadeus
255   8621 CD A4 87     	call Inicia_Puntero_objeto
256   8624 CD AC 8B     	call Draw
257   8627 CD A0 7F     	call Guarda_foto_registros
258   862A CD 3F 88     	call Store_Amadeus
259   862D
260   862D              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
261   862D
262   862D CD 60 87     	call Inicia_Puntero_Disparo_Entidades
263   8630 CD 67 87     	call Inicia_Puntero_Disparo_Amadeus
264   8633
265   8633              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
266   8633
267   8633 CD 4A 87     	call Inicia_punteros_de_entidades
268   8636 CD 1B 88     	call Restore_Primera_entidad
269   8639
270   8639 3A D7 85     	ld a,(Numero_de_entidades)
271   863C 3C           	inc a
272   863D 32 D8 85     	ld (Numero_de_malotes),a
273   8640
274   8640 FB           2 ei
275   8641 18 FD        	jr 2B
276   8643
277   8643              ; -----------------------------------------------------------------------------------
278   8643
279   8643              Frame
280   8643
281   8643              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
282   8643              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
283   8643
284   8643 3E 02            ld a,2
285   8645 D3 FE            out ($fe),a
286   8647 CD B0 8E     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
287   864A CD E9 8E     	call Extrae_foto_disparos
288   864D 3E 01            ld a,1
289   864F D3 FE            out ($fe),a
290   8651
291   8651              ; ----------------------------------------------------------------------
292   8651
293   8651              ;	Existe colisión?????
294   8651
295   8651 3A E6 85     	ld a,(Impacto)
296   8654 A7           	and a
297   8655 28 02        	jr z,5F
298   8657
299   8657              ; A="1" Impacto en entidad por disparo de Amadeus.
300   8657              ; A="2"	Impacto en Amadeus por disparo en entidad.
301   8657
302   8657 18 FE        	jr $
303   8659
304   8659 AF           5 xor a
305   865A 32 E6 85     	ld (Impacto),a										; Flag (Impacto) a "0".
306   865D
307   865D CD 3E 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
308   8660 CD 5C 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
309   8663
310   8663 21 00 70     	ld hl,Album_de_fotos
311   8666 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
312   8669              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
313   8669 3A D7 85         ld a,(Numero_de_entidades)
314   866C 47               ld b,a
315   866D A7           	and a
316   866E 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
317   8670
318   8670 C5           2 push bc
319   8671 CD BD 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
320   8674 3A C3 85     	ld a,(Ctrl_0)
321   8677 CB 67        	bit 4,a
322   8679 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
323   867B
324   867B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
325   867B              ; Las entidades sólo generan disparo cuando se mueven.
326   867B              ; 16/02/23.
327   867B              ; [[[
328   867B CD 88 88     	call Detecta_disparo_entidad
329   867E              ; ]]]
330   867E CD 11 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
331   8681
332   8681 21 C3 85     1 ld hl,Ctrl_0
333   8684 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
334   8686 AF           	xor a
335   8687 32 C4 85     	ld (Obj_dibujado),a
336   868A
337   868A CD EC 87     6 call Store_Restore_entidades
338   868D C1           	pop bc
339   868E 10 E0        	djnz 2B
340   8690
341   8690              ; Tras la gestión de las entidades, ... AMADEUS.
342   8690
343   8690 CD 2D 88     4 call Restore_Amadeus
344   8693 CD E2 86     	call Mov_Amadeus
345   8696 3A C3 85     	ld a,(Ctrl_0)
346   8699 CB 67        	bit 4,a
347   869B 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
348   869D CD 11 87     	call Guarda_foto_entidad_a_pintar
349   86A0
350   86A0 21 C3 85     3 ld hl,Ctrl_0
351   86A3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
352   86A5 AF           	xor a
353   86A6 32 C4 85     	ld (Obj_dibujado),a
354   86A9 CD 3F 88     	call Store_Amadeus
355   86AC
356   86AC              ; -----
357   86AC
358   86AC CD 4A 87     	call Inicia_punteros_de_entidades
359   86AF CD 1B 88     	call Restore_Primera_entidad
360   86B2
361   86B2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
362   86B2
363   86B2 CD 6E 87     	call Calcula_numero_de_malotes
364   86B5 CD 86 87     	call Calcula_numero_de_disparotes
365   86B8
366   86B8 3E 04        	ld a,4
367   86BA D3 FE        	out ($fe),a
368   86BC C9           	ret
369   86BD
370   86BD              ; --------------------------------------------------------------------------------------------------------------
371   86BD              ;
372   86BD              ;	27/03/23
373   86BD
374   86BD              Mov_obj
375   86BD
376   86BD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
377   86BD
378   86BD AF           	xor a
379   86BE 32 C4 85     	ld (Obj_dibujado),a
380   86C1 CD 1B 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
381   86C4              ;														; Obj_dibujado="0".
382   86C4              ; Movemos Entidades malignas.
383   86C4
384   86C4 2A C5 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
385   86C7 24           	inc h                                               ; Salimos de la rutina.
386   86C8 25           	dec h
387   86C9 C8           	ret z
388   86CA
389   86CA CD 46 95     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
390   86CD 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
391   86D0 CB 67        	bit 4,a
392   86D2 C8           	ret z
393   86D3
394   86D3              ; Ha habido desplazamiento de la entidad maligna, :-).
395   86D3              ; Ha llegado a zona de AMADEUS ???
396   86D3
397   86D3              ;	ld a,(Coordenada_y)
398   86D3              ;	cp $14
399   86D3              ;	call nc, Detecta_colision_nave_entidad
400   86D3
401   86D3              ; ---------
402   86D3
403   86D3 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
404   86D5 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
405   86D8 CD 1B 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
406   86DB CD 32 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
407   86DE CD 01 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
408   86E1 C9           	ret													; _de la misma.
409   86E2
410   86E2              ; --------------------------------------------------------------------------------------------------------------
411   86E2              ;
412   86E2              ;	29/1/23
413   86E2
414   86E2              Mov_Amadeus
415   86E2
416   86E2 AF           	xor a
417   86E3 32 C4 85     	ld (Obj_dibujado),a
418   86E6 CD 1B 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
419   86E9              ;														; Obj_dibujado="0".
420   86E9              ; Movemos Amadeus.
421   86E9
422   86E9 CD 65 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
423   86EC 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
424   86EF CB 67        	bit 4,a
425   86F1 C8           	ret z
426   86F2
427   86F2              ; ---------
428   86F2
429   86F2 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
430   86F4 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
431   86F7 CD 1B 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
432   86FA CD 32 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
433   86FD CD 01 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
434   8700 C9           	ret													; _de la nave.
435   8701
436   8701              ; --------------------------------------------------------------------------------------------------------------
437   8701              ;
438   8701              ;	31/01/23
439   8701              ;
440   8701              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
441   8701
442   8701              Guarda_foto_entidad_a_borrar
443   8701
444   8701 CD 86 8E     	call Prepara_draw
445   8704 CD C0 8D     	call calcula_CColumnass
446   8707 CD F7 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
447   870A CD 4C 8E     	call Define_rutina_de_impresion
448   870D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
449   8710 C9           	ret
450   8711
451   8711              ; --------------------------------------------------------------------------------------------------------------
452   8711              ;
453   8711              ;	31/01/23
454   8711              ;
455   8711              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
456   8711              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
457   8711
458   8711              Guarda_foto_entidad_a_pintar
459   8711
460   8711 CD 3E 87     	call Repone_pintar
461   8714 CD AC 8B     	call Draw
462   8717 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
463   871A C9           	ret
464   871B
465   871B              ; --------------------------------------------------------------------------------------------------------------
466   871B              ;
467   871B              ;
468   871B
469   871B 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
470   871E 3A C4 85     	ld a,(Obj_dibujado)
471   8721 A7           	and a
472   8722 28 05        	jr z,1F
473   8724 11 B9 85     	ld de,Variables_de_pintado
474   8727 18 03        	jr 2F
475   8729 11 AF 85     1 ld de,Variables_de_borrado
476   872C 01 08 00     2 ld bc,8
477   872F ED B0        	ldir
478   8731 C9           	ret
479   8732
480   8732              ; --------------------------------------------------------------------------------------------------------------
481   8732
482   8732 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
483   8735 11 96 85     	ld de,Filas
484   8738 01 08 00     	ld bc,8
485   873B ED B0        	ldir
486   873D C9           	ret
487   873E
488   873E 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
489   8741 11 96 85     	ld de,Filas
490   8744 01 08 00     	ld bc,8
491   8747 ED B0        	ldir
492   8749 C9           	ret
493   874A
494   874A              ; *************************************************************************************************************************************************************
495   874A              ;
496   874A              ; 8/1/23
497   874A              ;
498   874A              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
499   874A              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
500   874A              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
501   874A
502   874A              ; Destruye HL y DE !!!!!
503   874A
504   874A              Inicia_punteros_de_entidades
505   874A
506   874A 21 68 84     	ld hl,Indice_de_entidades
507   874D CD 9E 87         call Extrae_address
508   8750 22 D1 85         ld (Puntero_store_entidades),hl
509   8753 21 6A 84     	ld hl,Indice_de_entidades+2
510   8756 22 D5 85     	ld (Indice_restore),hl
511   8759 CD 9E 87     	call Extrae_address
512   875C 22 D3 85     	ld (Puntero_restore_entidades),hl
513   875F C9               ret
514   8760
515   8760              ; *************************************************************************************************************************************************************
516   8760              ;
517   8760              ; 8/1/23
518   8760              ;
519   8760              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
520   8760
521   8760 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
522   8763 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
523   8766 C9           	ret
524   8767 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
525   876A 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
526   876D C9           	ret
527   876E
528   876E              ; -------------------------------------------------------------------------------------------------------------
529   876E              ;
530   876E              ; 28/2/23
531   876E              ;
532   876E
533   876E              Calcula_numero_de_malotes
534   876E
535   876E 21 00 70     	ld hl,Album_de_fotos
536   8771 EB           	ex de,hl
537   8772 2A DD 85     	ld hl,(Stack_snapshot)
538   8775
539   8775 06 00        	ld b,0
540   8777 7D           	ld a,l
541   8778 93           	sub e
542   8779 28 07        	jr z,1F
543   877B
544   877B              ; Nº de malotes no es "0".
545   877B
546   877B D6 06        2 sub 6
547   877D 04           	inc b
548   877E A7           	and a
549   877F 20 FA        	jr nz,2B
550   8781 78           	ld a,b
551   8782
552   8782 32 D8 85     1 ld (Numero_de_malotes),a
553   8785 C9           	ret
554   8786
555   8786              ; -------------------------------------------------------------------------------------------------------------
556   8786              ;
557   8786              ; 28/2/23
558   8786              ;
559   8786
560   8786              Calcula_numero_de_disparotes
561   8786
562   8786 21 60 70     	ld hl,Album_de_fotos_disparos
563   8789 EB           	ex de,hl
564   878A 2A DF 85     	ld hl,(Stack_snapshot_disparos)
565   878D
566   878D 06 00        	ld b,0
567   878F 7D           	ld a,l
568   8790 93           	sub e
569   8791 28 07        	jr z,1F
570   8793
571   8793              ; Nº de malotes no es "0".
572   8793
573   8793 D6 06        2 sub 6
574   8795 04           	inc b
575   8796 A7           	and a
576   8797 20 FA        	jr nz,2B
577   8799 78           	ld a,b
578   879A
579   879A 32 E1 85     1 ld (Numero_de_disparotes),a
580   879D C9           	ret
581   879E              ; *************************************************************************************************************************************************************
582   879E              ;
583   879E              ; 20/10/22
584   879E              ;
585   879E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
586   879E              ;
587   879E              ; Destruye el puntero y DE !!!!!
588   879E
589   879E 5E           Extrae_address ld e,(hl)
590   879F 23           	inc hl
591   87A0 56           	ld d,(hl)
592   87A1 2B           	dec hl
593   87A2 EB           	ex de,hl
594   87A3 C9           	ret
595   87A4
596   87A4              ; *************************************************************************************************************************************************************
597   87A4              ;
598   87A4              ;	7/2/23
599   87A4              ;
600   87A4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
601   87A4              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
602   87A4              ;
603   87A4              ;   Destruye HL y BC !!!!!,
604   87A4              ;
605   87A4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
606   87A4              ;					"0" ..... Izquierda.
607   87A4
608   87A4              Inicia_Puntero_objeto
609   87A4
610   87A4 3A AA 85     	ld a,(Cuad_objeto)
611   87A7 E6 01        	and 1
612   87A9 F5           	push af
613   87AA CC C8 87     	call z,Inicia_puntero_objeto_izq
614   87AD F1           	pop af
615   87AE 28 2B        	jr z,1F
616   87B0 CD B5 87     	call Inicia_puntero_objeto_der
617   87B3 18 26        	jr 1F
618   87B5
619   87B5              ; Arrancamos desde la parte izquierda de la pantalla.
620   87B5              ; Iniciamos (Indice_Sprite_der).
621   87B5
622   87B5 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
623   87B8 22 A4 85     	ld (Puntero_DESPLZ_der),hl
624   87BB CD 9E 87     	call Extrae_address
625   87BE 22 9A 85     	ld (Puntero_objeto),hl
626   87C1
627   87C1 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
628   87C4              ;	call Extrae_address
629   87C4 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
630   87C7 C9           	ret
631   87C8
632   87C8              ; Arrancamos desde la parte derecha de la pantalla.
633   87C8              ; Iniciamos (Indice_Sprite_izq).
634   87C8
635   87C8 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
636   87CB 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
637   87CE CD 9E 87     	call Extrae_address
638   87D1 22 9A 85     	ld (Puntero_objeto),hl
639   87D4
640   87D4 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
641   87D7              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
642   87D7 22 A4 85     	ld (Puntero_DESPLZ_der),hl
643   87DA C9           	ret
644   87DB
645   87DB              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
646   87DB
647   87DB 21 38 83     1 ld hl,Amadeus
648   87DE ED 4B 9A 85  	ld bc,(Puntero_objeto)
649   87E2 B7 ED 42     	sub hl,bc
650   87E5 C0           	ret nz
651   87E6 21 C3 85     	ld hl,Ctrl_0
652   87E9 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
653   87EB C9           	ret 												; _de nuestra nave en los extremos.
654   87EC
655   87EC              ; *************************************************************************************************************************************************************
656   87EC              ;
657   87EC              ;	8/1/23
658   87EC              ;
659   87EC              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
660   87EC              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
661   87EC
662   87EC              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
663   87EC              ;	_de la 2ª y 3ª entidad respectivamente.
664   87EC
665   87EC              Store_Restore_entidades
666   87EC
667   87EC E5           	push hl
668   87ED D5           	push de
669   87EE C5            	push bc
670   87EF
671   87EF              ;	STORE !!!!!
672   87EF              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
673   87EF
674   87EF 21 96 85     	ld hl,Filas
675   87F2 ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
676   87F6 01 3A 00     	ld bc,58
677   87F9 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
678   87FB
679   87FB              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
680   87FB
681   87FB 2A D3 85     	ld hl,(Puntero_restore_entidades)
682   87FE 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
683   8801 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
684   8804 01 3A 00     	ld bc,58
685   8807 ED B0        	ldir
686   8809
687   8809              ;	Incrementa RESTORE !!!!!
688   8809
689   8809 2A D5 85         ld hl,(Indice_restore)
690   880C 23           	inc hl
691   880D 23           	inc hl
692   880E 22 D5 85     	ld (Indice_restore),hl
693   8811 CD 9E 87         call Extrae_address
694   8814 22 D3 85         ld (Puntero_restore_entidades),hl
695   8817 C1           	pop bc
696   8818 D1           	pop de
697   8819 E1           	pop hl
698   881A C9           	ret
699   881B
700   881B              ; **************************************************************************************************
701   881B              ;
702   881B              ;	29/10/22
703   881B              ;
704   881B              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
705   881B
706   881B E5           Restore_Primera_entidad push hl
707   881C D5           	push de
708   881D C5            	push bc
709   881E 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
710   8821 11 96 85     	ld de,Filas
711   8824 01 3A 00     	ld bc,58
712   8827 ED B0        	ldir
713   8829 C1           	pop bc
714   882A D1           	pop de
715   882B E1           	pop hl
716   882C C9           	ret
717   882D
718   882D              ; **************************************************************************************************
719   882D              ;
720   882D              ;	25/01/23
721   882D              ;
722   882D              ;	Restore_Amadeus
723   882D              ;
724   882D              ;	Cargamos en DRAW los parámetros de Amadeus.
725   882D              ;
726   882D
727   882D E5           Restore_Amadeus	push hl
728   882E D5           	push de
729   882F C5            	push bc
730   8830 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
731   8833 11 96 85     	ld de,Filas
732   8836 01 3A 00     	ld bc,58
733   8839 ED B0        	ldir
734   883B C1           	pop bc
735   883C D1           	pop de
736   883D E1           	pop hl
737   883E C9           	ret
738   883F
739   883F              ; *************************************************************************************************************************************************************
740   883F              ;
741   883F              ;	29/01/23
742   883F              ;
743   883F              ;	Store_Amadeus
744   883F              ;
745   883F              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
746   883F              ;
747   883F
748   883F E5           Store_Amadeus push hl
749   8840 D5           	push de
750   8841 C5            	push bc
751   8842 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
752   8845 11 74 84     	ld de,Amadeus_db
753   8848 01 3A 00     	ld bc,58
754   884B ED B0        	ldir
755   884D C1           	pop bc
756   884E D1           	pop de
757   884F E1           	pop hl
758   8850 C9           	ret
759   8851
760   8851              ; **************************************************************************************************
761   8851
762   8851              ; Teclado.
763   8851
764   8851 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
765   8853 DB FE        	in a,($fe)
766   8855 E6 01        	and $01
767   8857 28 02        	jr z,1f
768   8859 18 F6        	jr Pulsa_ENTER
769   885B C9           1 ret
770   885C
771   885C              ; **************************************************************************************************
772   885C              ;
773   885C              ; Temporización.
774   885C
775   885C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
776   885C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
777   885C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
778   885C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
779   885C
780   885C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
781   885C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
782   885C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
783   885C
784   885C              ; A partir de $4f61 no hace falta DELAY.
785   885C
786   885C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
787   885C
788   885C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
789   885F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
790   8860 78           	LD A,B
791   8861 A7           	AND A
792   8862 20 FB        	JR NZ,wait
793   8864 C9           	RET
794   8865
795   8865              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
796   8865              ;
797   8865              ;	5/3/23
798   8865              ;
799   8865              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
800   8865
801   8865              Movimiento_Amadeus
802   8865
803   8865              ; Disparo.
804   8865
805   8865 3E F7        	ld a,$f7												; "5" para disparar.
806   8867 DB FE        	in a,($fe)
807   8869 E6 10        	and $10
808   886B CC BC 88     	call z,Genera_disparo
809   886E
810   886E 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
811   8870 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
812   8872 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
813   8874 CC EA 92         call z,Mov_left											;			"			"			"			"			"			"			"			"
814   8877 3E F7        	ld a,$f7
815   8879 DB FE        	in a,($fe)
816   887B E6 01        	and $01
817   887D C8           	ret z
818   887E
819   887E 3E F7        	ld a,$f7
820   8880 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
821   8882 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
822   8884 CC CC 91     	call z,Mov_right										;			"			"			"			"			"			"			"			"
823   8887 C9           	ret
824   8888
825   8888              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
826   8888              ;
827   8888              ;	Rutina provisional para que los malotes cagen balas.
828   8888
829   8888 3E 7F        Detecta_disparo_entidad ld a,$7f
830   888A DB FE        	in a,($fe)
831   888C E6 01        	and 1
832   888E C0           	ret nz
833   888F CD BC 88     	call Genera_disparo
834   8892 C9           	ret
835   8893
836   8893              ; Pinta indicadores de FILAS. ------------------------------------------------------
837   8893
838   8893 21 10 40     Pinta_FILAS ld hl,$4010
839   8896              ;	ld b,9
840   8896              ;2 push hl
841   8896              ;	push bc
842   8896 06 BF        	ld b,$bf
843   8898 36 80        1 ld (hl),%10000000
844   889A CD 92 8E     	call NextScan
845   889D 10 F9        	djnz 1B
846   889F              ;	pop bc
847   889F              ;	pop hl
848   889F              ;	inc l
849   889F              ;	djnz 2B
850   889F 06 03        	ld b,3
851   88A1 21 00 47         ld hl,$4700
852   88A4 CD AA 88     3 call Bucle_1
853   88A7 10 FB            djnz 3B
854   88A9 C9               ret
855   88AA
856   88AA C5           Bucle_1 push bc
857   88AB E5                   push hl
858   88AC D1                   pop de
859   88AD 13                   inc de
860   88AE 01 FF 00             ld bc,255
861   88B1 36 FF                ld (hl),255
862   88B3 ED B0                ldir
863   88B5 23                   inc hl
864   88B6 3E 07                ld a,7
865   88B8 84                   add a,h
866   88B9 67                   ld h,a
867   88BA C1                   pop bc
868   88BB C9                   ret
869   88BC
870   88BC              ; ---------------------------------------------------------------
871   88BC
872   88BC              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88BC              ; ******************************************************************************************************************************************************************************************
  2+  88BC              ;
  3+  88BC              ;   27/03/23
  4+  88BC              ;
  5+  88BC              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88BC              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88BC              ;
  8+  88BC              ;
  9+  88BC              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88BC              ;
 11+  88BC              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88BC              ;               _ hacen las entidades hacia abajo.
 13+  88BC              ;
 14+  88BC              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88BC              ;
 16+  88BC              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88BC              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88BC              ;
 19+  88BC              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88BC              ;           _ la bala.
 21+  88BC              ;
 22+  88BC              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88BC              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88BC              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88BC              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88BC              ;           _ en el momento de generarse la bala)).
 27+  88BC
 28+  88BC              Genera_disparo
 29+  88BC
 30+  88BC              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88BC              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88BC              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88BC              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88BC              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88BC              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88BC              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88BC
 38+  88BC              ; Exclusiones:
 39+  88BC
 40+  88BC 3A CC 85         ld a,(Columnas)
 41+  88BF 47               ld b,a
 42+  88C0 3A 97 85         ld a,(Columns)
 43+  88C3 B8               cp b
 44+  88C4 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88C5
 46+  88C5              ; ----- ----- -----
 47+  88C5
 48+  88C5 3A C3 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
 49+  88C8 CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
 50+  88CA 20 06            jr nz,16F
 51+  88CC
 52+  88CC 3A 9D 85         ld a,(Coordenada_y)
 53+  88CF FE 14            cp $14
 54+  88D1 D0               ret nc
 55+  88D2
 56+  88D2              ; ----- ----- -----
 57+  88D2
 58+  88D2              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 59+  88D2
 60+  88D2 21 F2 83     16 ld hl,ON_Disparo_2A
 61+  88D5 CD 9E 87         call Extrae_address
 62+  88D8 24               inc h
 63+  88D9 25               dec h
 64+  88DA 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 65+  88DC
 66+  88DC 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 67+  88DF A7               and a
 68+  88E0 ED 52            sbc hl,de
 69+  88E2 D0               ret nc
 70+  88E3
 71+  88E3              ; ----- ----- -----
 72+  88E3
 73+  88E3 21 00 80     14 ld hl,Indice_disparo
 74+  88E6 3A 9E 85         ld a,(CTRL_DESPLZ)
 75+  88E9 4F               ld c,a
 76+  88EA 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 77+  88EC              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 78+  88EC              ;                                            ""        ""       "f9", B="1"
 79+  88EC              ;                                            ""        ""       "fb", B="2"
 80+  88EC              ;                                            ""        ""       "fb", B="3"
 81+  88EC A7               and a
 82+  88ED 28 10            jr z,1F
 83+  88EF E6 01            and 1
 84+  88F1 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 85+  88F2
 86+  88F2 79               ld a,c
 87+  88F3 16 F9            ld d,$f9
 88+  88F5 23           2 inc hl
 89+  88F6 23               inc hl
 90+  88F7 04               inc b
 91+  88F8 BA               cp d
 92+  88F9 28 04            jr z,1F
 93+  88FB 14               inc d
 94+  88FC 14               inc d
 95+  88FD 18 F6            jr 2B
 96+  88FF
 97+  88FF CD 9E 87     1 call Extrae_address
 98+  8902 E5               push hl
 99+  8903 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
100+  8905 DD 21 25 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
101+  8909
102+  8909              ;	Se cumplen las condiciones necesarias para generar un disparo.
103+  8909              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
104+  8909
105+  8909 3A AA 85     	ld a,(Cuad_objeto)
106+  890C FE 02            cp 2
107+  890E 38 60            jr c,3F
108+  8910 28 5E            jr z,3F
109+  8912
110+  8912              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
111+  8912
112+  8912 E6 01            and 1
113+  8914 28 2D            jr z,4F
114+  8916
115+  8916              ; 	Estamos en el 3er cuadrante de pantalla.
116+  8916              ; 	3er CUAD. ----- ----- ----- ----- -----
117+  8916              ;
118+  8916              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
119+  8916              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
120+  8916              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
121+  8916
122+  8916 2A 98 85     	ld hl,(Posicion_actual)
123+  8919
124+  8919              ;   Amadeus o entidad ???.
125+  8919
126+  8919 3A C3 85         ld a,(Ctrl_0)
127+  891C CB 77            bit 6,a
128+  891E 28 0D            jr z,8F
129+  8920
130+  8920              ; 	Dispara Amadeus.
131+  8920
132+  8920 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
133+  8922 CD A1 8E         call PreviousScan
134+  8925 CD A1 8E         call PreviousScan
135+  8928
136+  8928              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
137+  8928              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
138+  8928              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
139+  8928              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
140+  8928
141+  8928 CD 9A 89         call Ajusta_disparo_parte_izquierda
142+  892B 18 0E            jr 10F
143+  892D
144+  892D              ; 	Dispara Entidad.
145+  892D
146+  892D 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
147+  892F
148+  892F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
149+  892F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
150+  892F
151+  892F C5               push bc
152+  8930 06 10            ld b,16
153+  8932 CD 92 8E     9 call NextScan
154+  8935 10 FB            djnz 9B
155+  8937 C1               pop bc
156+  8938
157+  8938              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
158+  8938              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
159+  8938              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
160+  8938              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
161+  8938
162+  8938 CD 9A 89         call Ajusta_disparo_parte_izquierda
163+  893B
164+  893B CD 0F 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
165+  893E              ;                                                   ; _al generar el disparo.
166+  893E
167+  893E              ; 	LLegados a este punto tendremos:
168+  893E              ;
169+  893E              ;       Puntero_objeto_disparo en IY.
170+  893E              ;       Rutinas_de_impresion en IX.
171+  893E              ;       Puntero_de_impresion en HL.
172+  893E              ;       Impacto/Dirección en BC.
173+  893E
174+  893E CD A2 89         call Almacena_disparo
175+  8941 18 4F            jr 6F                                           ; RET.
176+  8943
177+  8943
178+  8943              ; 	Estamos en el 4º cuadrante de pantalla.
179+  8943              ; 	4º CUAD. ----- ----- ----- ----- -----
180+  8943              ;
181+  8943              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
182+  8943              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
183+  8943              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
184+  8943
185+  8943 2A 98 85     4 ld hl,(Posicion_actual)
186+  8946
187+  8946              ;   Amadeus o entidad ???.
188+  8946
189+  8946 3A C3 85         ld a,(Ctrl_0)
190+  8949 CB 77            bit 6,a
191+  894B 28 0D            jr z,11F
192+  894D
193+  894D              ; 	Dispara Amadeus.
194+  894D
195+  894D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
196+  894F CD A1 8E         call PreviousScan
197+  8952 CD A1 8E         call PreviousScan
198+  8955
199+  8955              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
200+  8955              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
201+  8955              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
202+  8955              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
203+  8955
204+  8955 CD 93 89         call Ajusta_disparo_parte_derecha
205+  8958 18 0E            jr 13F
206+  895A
207+  895A              ; 	Dispara Entidad.
208+  895A
209+  895A 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
210+  895C
211+  895C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
212+  895C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
213+  895C
214+  895C C5               push bc
215+  895D
216+  895D 06 10            ld b,16
217+  895F CD 92 8E     12 call NextScan
218+  8962 10 FB            djnz 12B
219+  8964
220+  8964 C1               pop bc
221+  8965
222+  8965              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
223+  8965              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
224+  8965              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
225+  8965              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
226+  8965
227+  8965 CD 93 89         call Ajusta_disparo_parte_derecha
228+  8968
229+  8968 CD 0F 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
230+  896B              ;                                                     ; _al generar el disparo.
231+  896B
232+  896B              ; LLegados a este punto tendremos:
233+  896B              ;
234+  896B              ;       Puntero_objeto_disparo en IY.
235+  896B              ;       Rutinas_de_impresion en IX.
236+  896B              ;       Puntero_de_impresion en HL.
237+  896B              ;       Impacto/Dirección en BC.
238+  896B
239+  896B CD A2 89         call Almacena_disparo
240+  896E 18 22            jr 6F                                           ; RET.
241+  8970
242+  8970              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
243+  8970
244+  8970 28 11        3 jr z,5F
245+  8972
246+  8972              ; 	1er CUAD. ----- ----- ----- ----- -----
247+  8972              ;
248+  8972              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
249+  8972              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
250+  8972              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
251+  8972              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
252+  8972
253+  8972              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
254+  8972              ;	   ""        ""       "f9", B="1"
255+  8972              ;	   ""        ""       "fb", B="2"
256+  8972              ; 	   ""        ""       "fb", B="3"
257+  8972
258+  8972 2A 98 85     	ld hl,(Posicion_actual)
259+  8975 CD 92 8E     	call NextScan
260+  8978
261+  8978              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
262+  8978              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
263+  8978              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
264+  8978              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
265+  8978
266+  8978 CD 9A 89         call Ajusta_disparo_parte_izquierda
267+  897B
268+  897B              ; 	No se produce impacto. B="$80"
269+  897B              ; 	Dirección del proyectil hacia abajo. C="$80"
270+  897B
271+  897B 01 80 80         ld bc,$8080
272+  897E
273+  897E              ; 	LLegados a este punto tendremos:
274+  897E              ;
275+  897E              ;       Puntero_objeto_disparo en IY.
276+  897E              ;       Rutinas_de_impresion en IX.
277+  897E              ;       Puntero_de_impresion en HL.
278+  897E              ;       Impacto/Dirección en BC.
279+  897E
280+  897E CD A2 89         call Almacena_disparo
281+  8981 18 0F            jr 6F                                           ; RET.
282+  8983
283+  8983              ; 	Estamos en el 2º cuadrante de pantalla.
284+  8983              ; 	2º CUAD. ----- ----- ----- ----- -----
285+  8983              ;
286+  8983              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
287+  8983              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
288+  8983              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
289+  8983              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
290+  8983
291+  8983 2A 98 85     5 ld hl,(Posicion_actual)
292+  8986 CD 92 8E     	call NextScan
293+  8989
294+  8989              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
295+  8989              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
296+  8989              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
297+  8989              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
298+  8989
299+  8989 CD 93 89         call Ajusta_disparo_parte_derecha
300+  898C
301+  898C              ; 	No se produce impacto. B="$80"
302+  898C              ; 	Dirección del proyectil hacia abajo. C="80"
303+  898C
304+  898C 01 80 80     15 ld bc,$8080
305+  898F
306+  898F              ; 	LLegados a este punto tendremos:
307+  898F              ;
308+  898F              ;       Puntero_objeto_disparo en IY.
309+  898F              ;       Rutinas_de_impresion en IX.
310+  898F              ;       Puntero_de_impresion en HL.
311+  898F              ;       Impacto/Dirección en BC.
312+  898F
313+  898F CD A2 89         call Almacena_disparo
314+  8992
315+  8992 C9           6 ret
316+  8993
317+  8993              ; ----------------------------------------------------------------
318+  8993              ;
319+  8993              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
320+  8993              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
321+  8993              ;	_ (lado izq. o derecho), de la entidad que lo genera.
322+  8993
323+  8993 78           Ajusta_disparo_parte_derecha ld a,b
324+  8994 FE 02            cp 2
325+  8996 38 01            jr c,1F
326+  8998 23               inc hl
327+  8999 C9           1 ret
328+  899A
329+  899A 78           Ajusta_disparo_parte_izquierda ld a,b
330+  899B FE 01        	cp 1
331+  899D 20 01        	jr nz,1F
332+  899F 2B           	dec hl
333+  89A0 2B           1 dec hl
334+  89A1 C9               ret
335+  89A2
336+  89A2              ; ----------------------------------------------------------------
337+  89A2              ;
338+  89A2              ;   25/02/23
339+  89A2              ;
340+  89A2              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
341+  89A2              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
342+  89A2
343+  89A2              Almacena_disparo
344+  89A2
345+  89A2 E5               push hl  										; HL contiene el puntero de impresión.
346+  89A3 F1               pop af
347+  89A4 08               ex af,af                                        ; Puntero_de_impresion en AF'.
348+  89A5
349+  89A5 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
350+  89A6 E6 01            and 1
351+  89A8 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
352+  89AA              ;                                                   ; _ es Amadeus o una entidad la que dispara.
353+  89AA              ; 	Dispara AMADEUS.
354+  89AA
355+  89AA              ;	Comprobamos que a Amadeus aún le quedan disparos.
356+  89AA              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
357+  89AA              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
358+  89AA              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
359+  89AA
360+  89AA C5               push bc
361+  89AB 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
362+  89AE 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
363+  89B1 A7               and a
364+  89B2 ED 42            sbc hl,bc
365+  89B4 CC 67 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
366+  89B7 C1               pop bc
367+  89B8 28 54            jr z,4F
368+  89BA
369+  89BA 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
370+  89BD 23               inc hl
371+  89BE 23               inc hl
372+  89BF 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
373+  89C2              ;                                                   ; _ Disparo_(+1).
374+  89C2 18 18            jr 2F
375+  89C4
376+  89C4              ; Dispara una entidad.
377+  89C4
378+  89C4 C5           1 push bc
379+  89C5 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
380+  89C8 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
381+  89CB A7               and a
382+  89CC ED 42            sbc hl,bc
383+  89CE CC 60 87         call z,Inicia_Puntero_Disparo_Entidades
384+  89D1 C1               pop bc
385+  89D2 28 3A            jr z,4F
386+  89D4
387+  89D4 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
388+  89D7 23               inc hl
389+  89D8 23               inc hl
390+  89D9 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
391+  89DC              ;                                                   ; _ Disparo_(+1).
392+  89DC CD 9E 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
393+  89DF              ;                                                   ; _ los 8 bytes que definen el disparo:
394+  89DF              ;
395+  89DF              ;                                                     Puntero_objeto_disparo en IY.
396+  89DF              ;                                                     Rutinas_de_impresion en IX.
397+  89DF              ;                                                     Puntero_de_impresion en HL.
398+  89DF              ;                                                     Impacto/Dirección en BC.
399+  89DF
400+  89DF 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
401+  89E0 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
402+  89E1 23               inc hl                                          ; _ al siguiente.
403+  89E2 A7               and a
404+  89E3 20 C0            jr nz,3B
405+  89E5
406+  89E5 08               ex af,af
407+  89E6 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
408+  89EA F9               ld sp,hl
409+  89EB
410+  89EB DD E5            push ix                                         ; Rutina de impresión.
411+  89ED F5               push af                                         ; Puntero de impresión.
412+  89EE FD E5            push iy                                         ; Puntero objeto.
413+  89F0 C5               push bc                                         ; Control.
414+  89F1
415+  89F1 ED 7B D9 85      ld sp,(Stack)
416+  89F5
417+  89F5              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
418+  89F5
419+  89F5 21 D0 85     	ld hl,Ctrl_1
420+  89F8 CB C6        	set 0,(hl)
421+  89FA
422+  89FA DD E5        	push ix
423+  89FC E1               pop hl
424+  89FD F5               push af
425+  89FE DD E1            pop ix
426+  8A00
427+  8A00 CD A0 7F     	call Guarda_foto_registros
428+  8A03
429+  8A03 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
430+  8A06 CB 86        	res 0,(hl)
431+  8A08
432+  8A08              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
433+  8A08              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
434+  8A08
435+  8A08 CD 67 87         call Inicia_Puntero_Disparo_Amadeus
436+  8A0B CD 60 87         call Inicia_Puntero_Disparo_Entidades
437+  8A0E
438+  8A0E C9           4 ret
439+  8A0F
440+  8A0F              ; ----------------------------------------------------------------
441+  8A0F              ;
442+  8A0F              ;   4/3/23
443+  8A0F              ;
444+  8A0F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
445+  8A0F              ;   _ al generarse el disparo.
446+  8A0F              ;
447+  8A0F              ;       "$80" ..... No se produce colisión.
448+  8A0F              ;       "$81" ..... Se produce colisión.
449+  8A0F
450+  8A0F              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
451+  8A0F              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
452+  8A0F
453+  8A0F
454+  8A0F FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
455+  8A11 E5               push hl                                        ; Puntero de impresión.
456+  8A12 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
457+  8A14 CD 2B 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
458+  8A17 E1               pop hl
459+  8A18 E5               push hl
460+  8A19 CD 92 8E         call NextScan
461+  8A1C
462+  8A1C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
463+  8A1D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
464+  8A1F 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
465+  8A21              ;                                                  ; _ 2º scanline si esto es así.
466+  8A21 1E 80            ld e,$80                                       ; ----- ( ) -----
467+  8A23 CD 2B 8A         call Bucle_2
468+  8A26
469+  8A26 43           2 ld b,e
470+  8A27 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
471+  8A28 FD E1            pop iy
472+  8A2A C9               ret
473+  8A2B
474+  8A2B               ; ---------- ----------
475+  8A2B
476+  8A2B 06 02        Bucle_2 ld b,2
477+  8A2D FD 7E 00     2 ld a,(iy)
478+  8A30 A6               and (hl)
479+  8A31 28 02            jr z,1F
480+  8A33 1E 81            ld e,$81
481+  8A35 23           1 inc hl
482+  8A36 FD 23            inc iy
483+  8A38 10 F3            djnz 2B
484+  8A3A C9               ret
485+  8A3B
486+  8A3B              ; -------------------------------------------------------------------------------------------------------------
487+  8A3B              ;
488+  8A3B              ;   01/04/23
489+  8A3B              ;
490+  8A3B              ;
491+  8A3B              ;
492+  8A3B
493+  8A3B 18 FE        Detecta_colision_nave_entidad jr $
494+  8A3D
495+  8A3D
496+  8A3D
497+  8A3D
498+  8A3D
499+  8A3D C9               ret
500+  8A3E
501+  8A3E
502+  8A3E
503+  8A3E
504+  8A3E
505+  8A3E              ; -------------------------------------------------------------------------------------------------------------
506+  8A3E              ;
507+  8A3E              ;   13/03/23
508+  8A3E              ;
509+  8A3E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
510+  8A3E              ;
511+  8A3E              ;   DESTRUYE: HL,BC,DE y A.
512+  8A3E
513+  8A3E 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
514+  8A41 7E               ld a,(hl)
515+  8A42 A7               and a
516+  8A43 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
517+  8A44
518+  8A44 44               ld b,h
519+  8A45 4D               ld c,l
520+  8A46 2A DF 85         ld hl,(Stack_snapshot_disparos)
521+  8A49 E5               push hl
522+  8A4A A7               and a
523+  8A4B ED 42            sbc hl,bc
524+  8A4D E5               push hl
525+  8A4E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
526+  8A4F
527+  8A4F E1               pop hl
528+  8A50 54               ld d,h
529+  8A51 5D               ld e,l
530+  8A52 1B               dec de
531+  8A53 ED B8            lddr                                                ; Limpiamos.
532+  8A55
533+  8A55 21 60 70         ld hl,Album_de_fotos_disparos
534+  8A58 22 DF 85         ld (Stack_snapshot_disparos),hl
535+  8A5B
536+  8A5B C9               ret
537+  8A5C
538+  8A5C              ; -------------------------------------------------------------------------------------------------------------
539+  8A5C              ;
540+  8A5C              ;   28/03/23
541+  8A5C              ;
542+  8A5C
543+  8A5C 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
544+  8A5F 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
545+  8A62
546+  8A62 CD 9E 87     2 call Extrae_address
547+  8A65 7E               ld a,(hl)
548+  8A66 A7               and a
549+  8A67 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
550+  8A69
551+  8A69              ; ----- ----- ----- ----- ----- -----
552+  8A69
553+  8A69 C5               push bc
554+  8A6A CD 06 8B         call foto_disparo_a_borrar
555+  8A6D
556+  8A6D              ; Existe colisión con este disparo???
557+  8A6D
558+  8A6D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
559+  8A6E 7E               ld a,(hl)
560+  8A6F 2B               dec hl
561+  8A70 E6 01            and 1
562+  8A72 28 0C            jr z,9F
563+  8A74
564+  8A74              ; Elimino el disparo de la base de datos.
565+  8A74
566+  8A74 E5               push hl
567+  8A75 CD 80 8B         call Elimina_disparo_de_base_de_datos
568+  8A78 E1               pop hl
569+  8A79 3E 01            ld a,1
570+  8A7B 32 E6 85         ld (Impacto),a                                       ; Indicamos que se ha producido Impacto en una entidad.
571+  8A7E 18 06            jr 11F
572+  8A80
573+  8A80 CD 2F 8B     9 call Mueve_disparo
574+  8A83 CD 06 8B         call foto_disparo_a_borrar
575+  8A86
576+  8A86 C1           11 pop bc
577+  8A87
578+  8A87 18 04            jr 7F
579+  8A89
580+  8A89              ; ----- ----- ----- ----- ----- -----
581+  8A89
582+  8A89 ED 42        1 sbc hl,bc
583+  8A8B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
584+  8A8D
585+  8A8D 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
586+  8A90 23               inc hl
587+  8A91 23               inc hl
588+  8A92 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
589+  8A95 18 CB            jr 2B
590+  8A97
591+  8A97 CD 67 87     3 call Inicia_Puntero_Disparo_Amadeus
592+  8A9A
593+  8A9A 01 66 84         ld bc,Disparo_11
594+  8A9D 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
595+  8AA0
596+  8AA0 CD 9E 87     5 call Extrae_address
597+  8AA3 7E               ld a,(hl)
598+  8AA4 A7               and a
599+  8AA5 28 4D            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
600+  8AA7
601+  8AA7              ; ----- ----- ----- ----- ----- -----
602+  8AA7
603+  8AA7 C5               push bc
604+  8AA8 CD 06 8B         call foto_disparo_a_borrar
605+  8AAB
606+  8AAB              ; Existe colisión con este disparo???
607+  8AAB
608+  8AAB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
609+  8AAC 7E               ld a,(hl)
610+  8AAD 2B               dec hl
611+  8AAE E6 01            and 1
612+  8AB0 28 39            jr z,10F
613+  8AB2
614+  8AB2              ; La colisión se produce con Amadeus???
615+  8AB2              ; Amadeus siempre tiene (Coordenada_y)="$16".
616+  8AB2
617+  8AB2 E5               push hl
618+  8AB3
619+  8AB3 06 04            ld b,4
620+  8AB5 23           16 inc hl
621+  8AB6 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
622+  8AB8
623+  8AB8 CD 9E 87         call Extrae_address
624+  8ABB CD A5 94         call Genera_coordenadas_disparo
625+  8ABE 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
626+  8ABF FE 16            cp $16
627+  8AC1 38 16            jr c,15F
628+  8AC3
629+  8AC3              ; (Colisiones en filas 16 y 17).
630+  8AC3
631+  8AC3 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
632+  8AC4 CD 8B 8B         call Guarda_coordenadas_X_de_Amadeus
633+  8AC7 D1               pop de                                               ; Coordenadas del disparo en DE. D Coordenada_X.
634+  8AC8
635+  8AC8 21 E7 85         ld hl,Coordenadas_X_Amadeus
636+  8ACB 7E               ld a,(hl)
637+  8ACC BA           18 cp d
638+  8ACD 20 03            jr nz,17F
639+  8ACF
640+  8ACF              ; Colisión Amadeus !!!!!!!!!!
641+  8ACF
642+  8ACF E1               pop hl
643+  8AD0 18 0D            jr 14F
644+  8AD2
645+  8AD2 23           17 inc hl
646+  8AD3 7E               ld a,(hl)
647+  8AD4 A7               and a
648+  8AD5 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
649+  8AD7 18 F3            jr 18B
650+  8AD9
651+  8AD9              ; No hay colisión. Amadeus se encuentra en una línea inferior.
652+  8AD9              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
653+  8AD9
654+  8AD9 E1           15  pop hl
655+  8ADA 23               inc hl
656+  8ADB 35               dec (hl)
657+  8ADC 2B               dec hl
658+  8ADD 18 0C            jr 10F
659+  8ADF
660+  8ADF              ; -----------------------debug
661+  8ADF
662+  8ADF              ; Elimino el disparo de la base de datos.
663+  8ADF
664+  8ADF E5           14 push hl
665+  8AE0 CD 80 8B         call Elimina_disparo_de_base_de_datos
666+  8AE3 E1               pop hl
667+  8AE4
668+  8AE4 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
669+  8AE6 32 E6 85         ld (Impacto),a
670+  8AE9 18 06            jr 12F
671+  8AEB
672+  8AEB CD 2F 8B     10 call Mueve_disparo
673+  8AEE CD 06 8B         call foto_disparo_a_borrar
674+  8AF1 C1           12 pop bc
675+  8AF2
676+  8AF2 18 04            jr 8F
677+  8AF4
678+  8AF4              ; ----- ----- ----- ----- ----- -----
679+  8AF4
680+  8AF4 ED 42        4 sbc hl,bc
681+  8AF6 28 0A            jr z,6F
682+  8AF8
683+  8AF8 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
684+  8AFB 23               inc hl
685+  8AFC 23               inc hl
686+  8AFD 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
687+  8B00 18 9E            jr 5B
688+  8B02
689+  8B02 CD 60 87     6 call Inicia_Puntero_Disparo_Entidades
690+  8B05 C9               ret
691+  8B06
692+  8B06              ; ------------------------------------------------------------------
693+  8B06
694+  8B06              foto_disparo_a_borrar
695+  8B06
696+  8B06 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
697+  8B07 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
698+  8B08 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
699+  8B09
700+  8B09 E5               push hl
701+  8B0A 23               inc hl
702+  8B0B 23               inc hl
703+  8B0C ED 73 D9 85      ld (Stack),sp
704+  8B10 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
705+  8B11 FD E1            pop iy
706+  8B13 DD E1            pop ix
707+  8B15 E1               pop hl
708+  8B16 ED 7B D9 85      ld sp,(Stack)
709+  8B1A 3A D0 85         ld a,(Ctrl_1)
710+  8B1D CB C7            set 0,a
711+  8B1F 32 D0 85         ld (Ctrl_1),a
712+  8B22 CD A0 7F         call Guarda_foto_registros
713+  8B25 3A D0 85         ld a,(Ctrl_1)
714+  8B28 CB 87            res 0,a
715+  8B2A 32 D0 85         ld (Ctrl_1),a
716+  8B2D E1               pop hl
717+  8B2E C9               ret
718+  8B2F
719+  8B2F E5           Mueve_disparo push hl
720+  8B30 7E               ld a,(hl)
721+  8B31 06 04            ld b,4
722+  8B33 23           1 inc hl
723+  8B34 10 FD            djnz 1B
724+  8B36
725+  8B36              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
726+  8B36
727+  8B36 CD 9E 87         call Extrae_address
728+  8B39
729+  8B39 E6 01            and 1
730+  8B3B 28 2A            jr z,2F
731+  8B3D
732+  8B3D              ; Disparo hacia arriba, (Amadeus).
733+  8B3D
734+  8B3D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
735+  8B3D              ; _ de la dificultad.
736+  8B3D
737+  8B3D CD A1 8E         call PreviousScan
738+  8B40 CD A1 8E         call PreviousScan
739+  8B43 CD A1 8E         call PreviousScan
740+  8B46
741+  8B46              ; Detecta si el disparo de Amadeus sale de pantalla:
742+  8B46
743+  8B46 7C               ld a,h
744+  8B47 FE 40            cp $40
745+  8B49 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
746+  8B4B
747+  8B4B              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
748+  8B4B
749+  8B4B EB               ex de,hl
750+  8B4C 06 04            ld b,4
751+  8B4E 2B           6 dec hl
752+  8B4F 10 FD            djnz 6B
753+  8B51
754+  8B51 CD 80 8B         call Elimina_disparo_de_base_de_datos
755+  8B54
756+  8B54 18 0C            jr 4F
757+  8B56
758+  8B56              ; Se ha desplazado la bala, compruebo colisión.
759+  8B56
760+  8B56 D5           3 push de
761+  8B57 C5               push bc
762+  8B58 CD 0F 8A         call Comprueba_Colision
763+  8B5B 78               ld a,b
764+  8B5C C1               pop bc
765+  8B5D D1               pop de
766+  8B5E
767+  8B5E EB               ex de,hl
768+  8B5F
769+  8B5F 73               ld (hl),e
770+  8B60 23               inc hl
771+  8B61 72               ld (hl),d
772+  8B62
773+  8B62 E1           4 pop hl
774+  8B63 23               inc hl
775+  8B64 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
776+  8B65 2B               dec hl
777+  8B66 C9               ret
778+  8B67
779+  8B67              ; Disparo hacia abajo, (Entidad).
780+  8B67
781+  8B67              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
782+  8B67              ; _ de la dificultad.
783+  8B67
784+  8B67 CD 92 8E     2 call NextScan
785+  8B6A CD 92 8E         call NextScan
786+  8B6D CD 92 8E         call NextScan
787+  8B70
788+  8B70              ; Detecta si el disparo de la entidad sale de la pantalla.
789+  8B70
790+  8B70 7C               ld a,h
791+  8B71 FE 58            cp $58
792+  8B73 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
793+  8B75
794+  8B75 EB               ex de,hl
795+  8B76 06 04            ld b,4
796+  8B78 2B           5 dec hl
797+  8B79 10 FD            djnz 5B
798+  8B7B
799+  8B7B CD 80 8B         call Elimina_disparo_de_base_de_datos
800+  8B7E
801+  8B7E 18 E2            jr 4B
802+  8B80
803+  8B80              ; HL apunta al primer byte de la base de datos del disparo.
804+  8B80 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
805+  8B83 AF               xor a
806+  8B84 77               ld (hl),a
807+  8B85 54               ld d,h
808+  8B86 5D               ld e,l
809+  8B87 13               inc de
810+  8B88 ED B0            ldir
811+  8B8A C9               ret
812+  8B8B
813+  8B8B              ; -----------------------------------------------------------------
814+  8B8B              ;
815+  8B8B              ;   Guarda las Coordenadas_X que ocupa Amadeus en la pantalla.
816+  8B8B              ;
817+  8B8B              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
818+  8B8B              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
819+  8B8B              ;
820+  8B8B              ;   En función de si el cuadrante de pantalla en el que se encuentra la nave, es par o impar,_
821+  8B8B              ;   _ las columnas guardadas irán en orden creciente o decreciente.
822+  8B8B              ;
823+  8B8B              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus.
824+  8B8B              ;
825+  8B8B              ;   MODIFICA: A, HL, DE y C
826+  8B8B
827+  8B8B 21 7A 84     Guarda_coordenadas_X_de_Amadeus ld hl,Amadeus_db+6
828+  8B8E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
829+  8B8F 23               inc hl
830+  8B90 23               inc hl
831+  8B91 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
832+  8B92
833+  8B92 21 88 84         ld hl,Amadeus_db+20
834+  8B95 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
835+  8B96
836+  8B96
837+  8B96 21 E7 85         ld hl,Coordenadas_X_Amadeus
838+  8B99 72               ld (hl),d
839+  8B9A
840+  8B9A 79           3 ld a,c
841+  8B9B E6 01            and 1
842+  8B9D 20 03            jr nz,1F
843+  8B9F 14               inc d
844+  8BA0 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
845+  8BA2
846+  8BA2              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
847+  8BA2              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
848+  8BA2
849+  8BA2 15           1 dec d
850+  8BA3 23           2 inc hl
851+  8BA4 72               ld (hl),d
852+  8BA5
853+  8BA5 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
854+  8BA6 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
855+  8BA7 C8               ret z
856+  8BA8
857+  8BA8 AF               xor a
858+  8BA9 5F               ld e,a
859+  8BAA 18 EE            jr 3B
# file closed: Disparo.asm
873   8BAC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8BAC              ; ******************************************************************************************************************************************************************************************
  2+  8BAC              ;
  3+  8BAC              ; 01/23
  4+  8BAC              ;
  5+  8BAC              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8BAC
  7+  8BAC CD 86 8E     Draw call Prepara_draw
  8+  8BAF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8BB0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8BB1 28 05        	jr z,2F
 11+  8BB3
 12+  8BB3 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8BB6 18 0C        	jr 1F
 14+  8BB8 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8BBB 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8BBE CD 4D 8D     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8BC1              ;													; _la esquina superior izquierda de la pantalla.
 18+  8BC1 CD C8 95     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8BC4 3A C3 85     1 ld a,(Ctrl_0)
 20+  8BC7 CB 6F        	bit 5,a
 21+  8BC9 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8BCB
 23+  8BCB CD E3 8B     	call Comprueba_limite_horizontal
 24+  8BCE CD 73 8C     	call Comprueba_limite_vertical
 25+  8BD1
 26+  8BD1              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8BD1
 28+  8BD1 CD C0 8D     3 call calcula_CColumnass
 29+  8BD4 CD F7 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8BD7 CD 4C 8E     	call Define_rutina_de_impresion
 31+  8BDA
 32+  8BDA 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8BDD CB AF        	res 5,a											; _a ser de utilidad.
 34+  8BDF 32 C3 85     	ld (Ctrl_0),a
 35+  8BE2
 36+  8BE2 C9           	ret
 37+  8BE3
 38+  8BE3              ; *******************************************************************************************************************************************************************************************
 39+  8BE3              ;	21/01/23
 40+  8BE3              ;
 41+  8BE3              ; 	Comprueba_limite_horizontal.
 42+  8BE3              ;
 43+  8BE3              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8BE3              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8BE3              ;
 46+  8BE3              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8BE3              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8BE3              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8BE3              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8BE3
 51+  8BE3
 52+  8BE3
 53+  8BE3 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8BE6 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8BE8 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8BEA E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8BEC 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8BEF 18 09            jr 6F
 59+  8BF1 CB 5F        1 bit 3,a
 60+  8BF3 28 0A            jr z,2F
 61+  8BF5 E6 F7            and $f7
 62+  8BF7 32 C3 85         ld (Ctrl_0),a
 63+  8BFA CD 4D 8D     6 call Inicializacion
 64+  8BFD 18 5B            jr 5F
 65+  8BFF E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8C00
 67+  8C00              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8C00              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8C00
 70+  8C00 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8C01 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8C04 CD 52 91     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8C07 67           	ld h,a
 74+  8C08 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8C09 CD 52 91     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8C0C 67           	ld h,a
 77+  8C0D A7           	and a
 78+  8C0E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8C10 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8C11 3A AA 85     	ld a,(Cuad_objeto)
 81+  8C14 FE 02        	cp 2
 82+  8C16 38 1E        	jr c,3F
 83+  8C18 28 1C        	jr z,3F
 84+  8C1A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8C1B 28 23            jr z,7F
 86+  8C1D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8C1F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8C21 E1           	pop hl
 89+  8C22
 90+  8C22              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8C22              ; _para indicar con E="2" en caso necesario.
 92+  8C22
 93+  8C22 E5               push hl
 94+  8C23 C5               push bc
 95+  8C24 CD 52 91     	call calcula_tercio
 96+  8C27 FE 01        	cp 1
 97+  8C29 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8C2B CD 5B 8C         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8C2E 28 26            jr z,9F
100+  8C30 38 24            jr c,9F
101+  8C32 1E 00        11 ld e,0
102+  8C34 18 22            jr 8F
103+  8C36 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8C37 28 07        	jr z, 7F
105+  8C39 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8C3B 1E 00         	ld e,0
107+  8C3D E1           	pop hl
108+  8C3E 18 04        	jr 4F
109+  8C40 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8C42 18 15            jr 10F
111+  8C44
112+  8C44              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8C44              ; _para indicar con E="2" en caso necesario.
114+  8C44
115+  8C44 E5           4 push hl
116+  8C45 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8C46 CD 52 91     	call calcula_tercio
118+  8C49 FE 01        	cp 1
119+  8C4B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8C4D CD 5B 8C         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8C50 28 04            jr z,9F
122+  8C52 30 02            jr nc,9F
123+  8C54 18 02        	jr 8F
124+  8C56 1E 02        9 ld e,2
125+  8C58 C1           8 pop bc
126+  8C59 E1           10 pop hl
127+  8C5A C9           5 ret
128+  8C5B
129+  8C5B              ; --------------------
130+  8C5B              ;
131+  8C5B              ; 25/08/22
132+  8C5B
133+  8C5B CD 52 91     Comprueba_centro call calcula_tercio
134+  8C5E 67               ld h,a
135+  8C5F 08           	ex af,af
136+  8C60 FE 02        	cp 2
137+  8C62 38 07        	jr c,1F
138+  8C64 28 05        	jr z,1F
139+  8C66 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8C69 18 03        	jr 2F
141+  8C6B 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8C6E 08           2 ex af,af
143+  8C6F A7               and a
144+  8C70 ED 42            sbc hl,bc
145+  8C72 C9               ret
146+  8C73
147+  8C73              ; *********************************************************************************************************************************************************************************************
148+  8C73              ;
149+  8C73              ;   16/8/22
150+  8C73              ;
151+  8C73              ;	Comprueba_limite_vertical
152+  8C73              ;
153+  8C73              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8C73              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8C73              ;
156+  8C73
157+  8C73 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8C76 7D           	ld a,l
159+  8C77 E6 1F        	and $1F
160+  8C79 57           	ld d,a
161+  8C7A 3A CF 85     	ld a,(Limite_vertical)
162+  8C7D BA           	cp d 											; Límite - Posición.
163+  8C7E 08           	ex af,af 										; Resultado de CP d en F'.
164+  8C7F 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8C82 CB 47        	bit 0,a
166+  8C84 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8C86
168+  8C86              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8C86
170+  8C86 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8C87 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8C89
173+  8C89              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8C89              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8C89
176+  8C89 3A 9C 85         ld a,(Coordenada_X)
177+  8C8C 16 0F            ld d,Centro_izquierda
178+  8C8E A7               and a
179+  8C8F 92               sub d 											 ; Posición - Centro_izquierda.
180+  8C90 28 1E            jr z,3F
181+  8C92 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8C94              ;                                                    ; _salimos sin modificar nada.
183+  8C94 18 0E            jr 2F
184+  8C96 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8C97 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8C99
187+  8C99              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8C99              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8C99
190+  8C99 3A 9C 85         ld a,(Coordenada_X)
191+  8C9C 16 10            ld d,Centro_derecha
192+  8C9E A7               and a
193+  8C9F 92               sub d
194+  8CA0 28 0E            jr z,3F
195+  8CA2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8CA4              ;                                                    ; _salimos sin modificar nada.
197+  8CA4 CB 43        2 bit 0,e
198+  8CA6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8CA8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8CA9 CD 3D 8D         call Modificaccionne
201+  8CAC C1           	pop bc
202+  8CAD CD 4D 8D         call Inicializacion
203+  8CB0 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8CB1
205+  8CB1              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8CB1
207+  8CB1 C5           4 push bc
208+  8CB2 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8CB5 0A           	ld a,(bc)
210+  8CB6 3D           	dec a
211+  8CB7 47           	ld b,a 											 ; Columnas-1 en B.
212+  8CB8 7D           	ld a,l
213+  8CB9 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8CBA CB 47        	bit 0,a
215+  8CBC 28 03        	jr z,5F
216+  8CBE 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8CBF 18 2E        	jr 7F
218+  8CC1
219+  8CC1              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8CC1
221+  8CC1 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8CC2 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8CC3 3A C3 85     	ld a,(Ctrl_0)
224+  8CC6 CB 4F        	bit 1,a
225+  8CC8 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8CCA F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8CCB
228+  8CCB              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8CCB
230+  8CCB 1C               inc e
231+  8CCC 1D               dec e
232+  8CCD 20 07            jr nz,12F
233+  8CCF 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8CD0 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8CD1 22 98 85     	ld (Posicion_actual),hl
236+  8CD4 18 44        13 jr 9F
237+  8CD6 CB 43        12 bit 0,e
238+  8CD8 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8CDA              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8CDA C1           	pop bc
241+  8CDB 18 D3        	jr 3B
242+  8CDD 80           14 add b
243+  8CDE 6F               ld l,a
244+  8CDF 22 98 85     	ld (Posicion_actual),hl
245+  8CE2 CD 3D 8D         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8CE5 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8CE7 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8CE9 32 C3 85         ld (Ctrl_0),a
249+  8CEC F1           	pop af
250+  8CED 18 2B        	jr 9F
251+  8CEF
252+  8CEF              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8CEF
254+  8CEF F5           7 push af
255+  8CF0 3A C3 85     	ld a,(Ctrl_0)
256+  8CF3 CB 47        	bit 0,a
257+  8CF5 20 1D        	jr nz,8F
258+  8CF7 F1           	pop af
259+  8CF8
260+  8CF8              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8CF8
262+  8CF8 1C           	inc e
263+  8CF9 1D               dec e
264+  8CFA 20 07            jr nz,10F
265+  8CFC 90           	sub b
266+  8CFD 6F               ld l,a
267+  8CFE 22 98 85     	ld (Posicion_actual),hl
268+  8D01 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8D03              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8D03 CB 43        10 bit 0,e
271+  8D05 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8D07              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8D07 C1           	pop bc
274+  8D08 18 A6        	jr 3B
275+  8D0A 90           16 sub b
276+  8D0B 6F               ld l,a
277+  8D0C 22 98 85     	ld (Posicion_actual),hl
278+  8D0F CD 3D 8D         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8D12 18 06            jr 9F
280+  8D14 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8D16 32 C3 85         ld (Ctrl_0),a
282+  8D19 F1           	pop af
283+  8D1A C1           9 pop bc
284+  8D1B 1E 00        	ld e,0
285+  8D1D CD 4D 8D         call Inicializacion
286+  8D20 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8D21 08           	ex af,af
288+  8D22 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8D23 18 8B            jr 3B
290+  8D25
291+  8D25              ; --------------------
292+  8D25
293+  8D25 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8D27 CD A1 8E     1 call PreviousScan
295+  8D2A 10 FB            djnz 1B
296+  8D2C 22 98 85     	ld (Posicion_actual),hl
297+  8D2F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8D30 C9           	ret
299+  8D31
300+  8D31              ; --------------------
301+  8D31
302+  8D31 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8D33 CD 92 8E     1 call NextScan
304+  8D36 10 FB            djnz 1B
305+  8D38 22 98 85     	ld (Posicion_actual),hl
306+  8D3B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8D3C C9           	ret
308+  8D3D
309+  8D3D              ; --------------------
310+  8D3D              ;
311+  8D3D              ;	22/01/23
312+  8D3D              ;
313+  8D3D              ;	E="1". Hemos cambiado de cuadrante.
314+  8D3D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8D3D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8D3D
317+  8D3D
318+  8D3D              Modificaccionne
319+  8D3D
320+  8D3D 3A AA 85     	ld a,(Cuad_objeto)
321+  8D40 FE 02        	cp 2
322+  8D42 CC 25 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8D45 DC 25 8D         call c,Modifica_Pos_actual
324+  8D48 C8           	ret z
325+  8D49 CD 31 8D         call Modifica_Pos_actual2
326+  8D4C C9               ret
327+  8D4D
328+  8D4D              ; *************************************************************************************************************************************************************************************************
329+  8D4D              ;
330+  8D4D              ;	13/8/22
331+  8D4D              ;
332+  8D4D              ;	Inicializacion
333+  8D4D              ;
334+  8D4D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8D4D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8D4D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8D4D              ;
338+  8D4D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8D4D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8D4D              ;	_ desaparece/aparece.
341+  8D4D
342+  8D4D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8D4D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8D4D              ;
345+  8D4D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8D4D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8D4D              ; 		   [E] ="0"
348+  8D4D
349+  8D4D              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8D4D
351+  8D4D CD 52 91     Inicializacion call calcula_tercio
352+  8D50 28 36        	jr z,primit
353+  8D52 E6 02        	and 2
354+  8D54 20 07        	jr nz,segmit
355+  8D56 7D           	ld a,l
356+  8D57 FE 7F        	cp $7f
357+  8D59 38 2D        	jr c,primit
358+  8D5B 28 2B        	jr z,primit
359+  8D5D CD BA 8D     segmit call column
360+  8D60 38 13        	jr c,tercuad
361+  8D62 3E 04        cuarcuad ld a,4
362+  8D64 32 AA 85     	ld (Cuad_objeto),a
363+  8D67 21 20 48     	ld hl,$4820
364+  8D6A 22 CD 85     	ld (Limite_horizontal),hl
365+  8D6D 21 CF 85     	ld hl,Limite_vertical
366+  8D70 36 0D        	ld (hl),$0d
367+  8D72 08           	ex af,af
368+  8D73 18 3C        	jr 1F
369+  8D75              tercuad
370+  8D75 3E 03        	ld a,3
371+  8D77 32 AA 85     	ld (Cuad_objeto),a
372+  8D7A 21 20 48     	ld hl,$4820
373+  8D7D 22 CD 85     	ld (Limite_horizontal),hl
374+  8D80 21 CF 85     	ld hl,Limite_vertical
375+  8D83 36 12        	ld (hl),$12
376+  8D85 08           	ex af,af
377+  8D86 18 29        	jr 1F
378+  8D88 CD BA 8D     primit call column
379+  8D8B 38 13        	jr c, primcuad
380+  8D8D              segcuad
381+  8D8D 3E 02        	ld a,2
382+  8D8F 32 AA 85     	ld (Cuad_objeto),a
383+  8D92 21 C0 4F     	ld hl,$4fc0
384+  8D95 22 CD 85     	ld (Limite_horizontal),hl
385+  8D98 21 CF 85     	ld hl,Limite_vertical
386+  8D9B 36 0D        	ld (hl),$0d
387+  8D9D 08           	ex af,af
388+  8D9E 18 11        	jr 1F
389+  8DA0              primcuad
390+  8DA0 3E 01        	ld a,1
391+  8DA2 32 AA 85     	ld (Cuad_objeto),a
392+  8DA5 21 C0 4F     	ld hl,$4fc0
393+  8DA8 22 CD 85     	ld (Limite_horizontal),hl
394+  8DAB 21 CF 85     	ld hl,Limite_vertical
395+  8DAE 36 12        	ld (hl),$12
396+  8DB0 08           	ex af,af
397+  8DB1 CD 80 94     1 call Genera_coordenadas
398+  8DB4 21 C3 85     	ld hl,Ctrl_0
399+  8DB7 CB EE        	set 5,(hl)
400+  8DB9 C9           	ret
401+  8DBA
402+  8DBA              ; ------------------------------------------------------------------------------------------------------------------
403+  8DBA
404+  8DBA              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8DBA              ;
406+  8DBA              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8DBA
408+  8DBA 7D           column ld a,l
409+  8DBB E6 1F        	and $1f
410+  8DBD FE 10         	cp $10
411+  8DBF C9            	ret
412+  8DC0
413+  8DC0              ; --------------------------------------------------------------------------------------------------------------------
414+  8DC0              ;
415+  8DC0              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8DC0              ;
417+  8DC0              ; 14/12/22
418+  8DC0              ;
419+  8DC0              ;	Modifica: A y BC.
420+  8DC0
421+  8DC0 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8DC3 E6 01        	and 1
423+  8DC5 28 17        	jr z,1F
424+  8DC7
425+  8DC7              ; Nos encontramos en la parte izquierda de la pantalla
426+  8DC7
427+  8DC7 3A 9C 85     	ld a,(Coordenada_X)
428+  8DCA 47           	ld b,a
429+  8DCB 04           	inc b											; (Coordenada_X)+1 en B.
430+  8DCC 79           	ld a,c
431+  8DCD 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8DCE 38 08        	jr c,2F
433+  8DD0 47           	ld b,a
434+  8DD1 79           	ld a,c
435+  8DD2 90           	sub b
436+  8DD3 32 CC 85     	ld (Columnas),a
437+  8DD6 18 1B        	jr 4F
438+  8DD8 79           2 ld a,c
439+  8DD9 32 CC 85     	ld (Columnas),a
440+  8DDC 18 15        	jr 4F
441+  8DDE
442+  8DDE              ; Nos encontramos en la parte derecha de la pantalla.
443+  8DDE
444+  8DDE 3A 9C 85     1 ld a,(Coordenada_X)
445+  8DE1 81           	add c
446+  8DE2 3D           	dec a
447+  8DE3 D6 1F        	sub $1f
448+  8DE5 38 08        	jr c,3F
449+  8DE7 47           	ld b,a
450+  8DE8 79           	ld a,c
451+  8DE9 90           	sub b
452+  8DEA 32 CC 85     	ld (Columnas),a
453+  8DED 18 04        	jr 4F
454+  8DEF 79           3 ld a,c
455+  8DF0 32 CC 85     	ld (Columnas),a
456+  8DF3 D9           4 exx
457+  8DF4 4F           	ld c,a
458+  8DF5 D9           	exx
459+  8DF6 C9            ret
460+  8DF7
461+  8DF7              ; --------------------------------------------------------------------------------------------------------------------
462+  8DF7              ;
463+  8DF7              ; 7/1/23
464+  8DF7              ;
465+  8DF7              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8DF7              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8DF7              ;
468+  8DF7              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8DF7              ;	DESTRUYE: HL,B Y A.
470+  8DF7
471+  8DF7 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8DFA FE 02        	cp 2
473+  8DFC 38 18        	jr c,1F
474+  8DFE 28 16        	jr z,1F
475+  8E00 E6 01        	and 1
476+  8E02 28 0D        	jr z,3F
477+  8E04
478+  8E04              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8E04
480+  8E04 CD 40 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8E07
482+  8E07 7D           9 ld a,l
483+  8E08 E6 1F        	and $1f
484+  8E0A 28 2A        	jr z,7F
485+  8E0C 2B           	dec hl
486+  8E0D 10 F8        	djnz 9B
487+  8E0F 18 25        	jr 7F
488+  8E11
489+  8E11              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8E11
491+  8E11 2A 98 85     3 ld hl,(Posicion_actual)
492+  8E14 18 20        	jr 7F
493+  8E16
494+  8E16 28 14        1 jr z,2F
495+  8E18
496+  8E18              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8E18
498+  8E18 CD 40 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8E1B 7D           4 ld a,l
500+  8E1C E6 1F        	and $1f
501+  8E1E 28 03        	jr z,6F
502+  8E20 2B           	dec hl
503+  8E21 10 F8        	djnz 4B
504+  8E23 06 0F        6 ld b,15
505+  8E25 CD A1 8E     5 call PreviousScan
506+  8E28 10 FB        	djnz 5B
507+  8E2A 18 0A        	jr 7F
508+  8E2C
509+  8E2C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8E2C
511+  8E2C CD 40 8E     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8E2F 06 0F        	ld b,15
513+  8E31 CD A1 8E     8 call PreviousScan
514+  8E34 10 FB        	djnz 8B
515+  8E36
516+  8E36 E5           7 push hl
517+  8E37 DD E1        	pop ix
518+  8E39
519+  8E39 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8E3C E5           	push hl
521+  8E3D FD E1        	pop iy
522+  8E3F
523+  8E3F C9           	ret
524+  8E40
525+  8E40              ; --------------------------------------------------------------------------------------------------------------------
526+  8E40              ;
527+  8E40              ;	2/1/23
528+  8E40              ;
529+  8E40              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8E40              ;
531+  8E40              ;	Tras esta rutina tenemos:
532+  8E40              ;
533+  8E40              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8E40              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8E40              ;
536+  8E40              ;	DESTRUYE!!!!! HL,B y A.
537+  8E40
538+  8E40 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8E43 3A CC 85     	ld a,(Columnas)
540+  8E46 3D           	dec a
541+  8E47 20 01        	jr nz,1F
542+  8E49 3C           	inc a
543+  8E4A 47           1 ld b,a
544+  8E4B C9           	ret
545+  8E4C
546+  8E4C              ; --------------------------------------------------------------------------------------------------------------------
547+  8E4C              ;
548+  8E4C              ;	3/1/23
549+  8E4C              ;
550+  8E4C              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8E4C              ;
552+  8E4C              ;	Destruye: A,B,HL y DE.
553+  8E4C
554+  8E4C              Define_rutina_de_impresion
555+  8E4C
556+  8E4C 3A 97 85     	ld a,(Columns)
557+  8E4F 47           	ld b,a
558+  8E50 3A CC 85     	ld a,(Columnas)
559+  8E53 B8           	cp b
560+  8E54 20 0D        	jr nz,2f
561+  8E56
562+  8E56              ;	La entidad se imprime entera.
563+  8E56
564+  8E56 21 22 8F     	ld hl, Indice_entidades_completas
565+  8E59 E6 01        	and 1
566+  8E5B 28 02        	jr z,1F
567+  8E5D
568+  8E5D 23           	inc hl
569+  8E5E 23           	inc hl
570+  8E5F
571+  8E5F CD 9E 87     1 call Extrae_address
572+  8E62 C9           	ret		;	ret
573+  8E63
574+  8E63              ;	La entidad no se imprime entera en pantalla.
575+  8E63
576+  8E63 3A AA 85     2 ld a,(Cuad_objeto)
577+  8E66 E6 01        	and 1
578+  8E68 28 17        	jr z,3F
579+  8E6A
580+  8E6A              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8E6A
582+  8E6A 21 26 8F     	ld hl, Indice_entidades_incompletas_izquierda
583+  8E6D 3A 97 85     4 ld a,(Columns)
584+  8E70 E6 01        	and 1
585+  8E72 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8E74
587+  8E74 23           	inc hl
588+  8E75 23           	inc hl
589+  8E76
590+  8E76 3A CC 85     	ld a,(Columnas)
591+  8E79 E6 01        	and 1
592+  8E7B 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8E7D
594+  8E7D 23           	inc hl
595+  8E7E 23           	inc hl
596+  8E7F
597+  8E7F 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8E81
599+  8E81 21 2C 8F     3 ld hl, Indice_entidades_incompletas_derecha
600+  8E84 18 E7        	jr 4B
601+  8E86
602+  8E86              ; --------------------------------------------------------------------------------------------------------------------
603+  8E86              ;
604+  8E86              ;	Prepara_draw
605+  8E86              ;
606+  8E86              ;	Es una rutina de carga.
607+  8E86              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8E86              ;
609+  8E86              ;	FUNCIONAMIENTO:
610+  8E86              ;
611+  8E86              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8E86              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8E86              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8E86              ;
615+  8E86              ;	DESTRUYE:
616+  8E86              ;
617+  8E86              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8E86
619+  8E86 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8E89 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8E8A 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8E8B 4E           	ld c,(hl)
623+  8E8C 2A 98 85     	ld hl,(Posicion_actual)
624+  8E8F 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8E91 C9           	ret
626+  8E92
627+  8E92              ;----------------------------------------------------------------------------------------------------------------
628+  8E92              ;
629+  8E92              ;	5/08/22
630+  8E92              ;
631+  8E92              ;   NextScan.
632+  8E92              ;
633+  8E92              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8E92              ;
635+  8E92              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8E92              ;
637+  8E92              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8E92              ;
639+  8E92              ;       DESTRUIDOS: AF y HL !!!
640+  8E92              ;
641+  8E92              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8E92              ;
643+  8E92
644+  8E92 24           NextScan inc h          ; Incrementamos el scanline.
645+  8E93 7C               ld a,h
646+  8E94 E6 07            and 7
647+  8E96 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8E97
649+  8E97 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8E98 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8E9A 6F               ld l,a
652+  8E9B D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8E9C
654+  8E9C 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8E9D D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8E9F 67               ld h,a
657+  8EA0 C9               ret
658+  8EA1
659+  8EA1              ;----------------------------------------------------------------------------------------------------------------
660+  8EA1              ;
661+  8EA1              ;	5/08/22
662+  8EA1              ;
663+  8EA1              ;   PreviousScan.
664+  8EA1              ;
665+  8EA1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8EA1              ;
667+  8EA1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8EA1              ;
669+  8EA1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8EA1              ;
671+  8EA1              ;       DESTRUIDOS: AF y HL !!!
672+  8EA1              ;
673+  8EA1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8EA1              ;
675+  8EA1
676+  8EA1 7C           PreviousScan ld a,h
677+  8EA2 25               dec h               ; Dec H.
678+  8EA3 E6 07            and 7
679+  8EA5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8EA6
681+  8EA6 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8EA7 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8EA9 6F               ld l,a
684+  8EAA D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8EAB
686+  8EAB 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8EAC C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8EAE 67               ld h,a
689+  8EAF C9               ret
690+  8EB0
691+  8EB0              ; -----------------------------------------------------------------------------------
692+  8EB0              ;
693+  8EB0              ;	28/2/23
694+  8EB0              ;
695+  8EB0              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8EB0              ;	Extrae fotos de Album_de_fotos.
697+  8EB0
698+  8EB0 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8EB3 A7           	and a
700+  8EB4 C8           	ret z
701+  8EB5 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8EB9 31 00 70     	ld sp,Album_de_fotos
703+  8EBC
704+  8EBC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8EBE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8EBF D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8EC0
708+  8EC0 ED 73 DB 85  	ld (Stack_2),sp
709+  8EC4 ED 7B D9 85  	ld sp,(Stack)
710+  8EC8
711+  8EC8              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8EC8
713+  8EC8 3E CD        	ld a,$cd
714+  8ECA 32 D2 8E     	ld (Imprime),a
715+  8ECD EB           	ex de,hl
716+  8ECE 22 D3 8E     	ld (Imprime+1),hl
717+  8ED1 EB           	ex de,hl
718+  8ED2
719+  8ED2              ; Ejecuta la llamada:	CALL $xx,xx
720+  8ED2
721+  8ED2 00 00 00     Imprime db 0,0,0
722+  8ED5
723+  8ED5 3A D8 85     	ld a,(Numero_de_malotes)
724+  8ED8 3D           	dec a
725+  8ED9 28 09        	jr z,1F
726+  8EDB 32 D8 85      	ld (Numero_de_malotes),a
727+  8EDE
728+  8EDE ED 7B DB 85   	ld sp,(Stack_2)
729+  8EE2 18 D8        	jr 2B
730+  8EE4
731+  8EE4 AF           1 xor a
732+  8EE5 32 DB 85     	ld (Stack_2),a
733+  8EE8 C9           	ret
734+  8EE9
735+  8EE9              ; -----------------------------------------------------------------------------------
736+  8EE9              ;
737+  8EE9              ;	28/2/23
738+  8EE9              ;
739+  8EE9              ;	Pinta los disparos generados.
740+  8EE9
741+  8EE9              Extrae_foto_disparos
742+  8EE9
743+  8EE9 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8EEC A7           	and a
745+  8EED C8           	ret z
746+  8EEE ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8EF2 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8EF5
749+  8EF5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8EF7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8EF8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8EF9
753+  8EF9 ED 73 DB 85  	ld (Stack_2),sp
754+  8EFD ED 7B D9 85  	ld sp,(Stack)
755+  8F01
756+  8F01              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8F01
758+  8F01 3E CD        	ld a,$cd
759+  8F03 32 0B 8F     	ld (Imprime2),a
760+  8F06 EB           	ex de,hl
761+  8F07 22 0C 8F     	ld (Imprime2+1),hl
762+  8F0A EB           	ex de,hl
763+  8F0B
764+  8F0B              ; Ejecuta la llamada:	CALL $xx,xx
765+  8F0B
766+  8F0B 00 00 00     Imprime2 db 0,0,0
767+  8F0E
768+  8F0E 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8F11 3D           	dec a
770+  8F12 28 09        	jr z,1F
771+  8F14 32 E1 85      	ld (Numero_de_disparotes),a
772+  8F17
773+  8F17 ED 7B DB 85  	ld sp,(Stack_2)
774+  8F1B 18 D8        	jr 2B
775+  8F1D
776+  8F1D AF           1 xor a
777+  8F1E 32 DB 85     	ld (Stack_2),a
778+  8F21 C9           	ret
779+  8F22
# file closed: Draw_XOR.asm
874   8F22              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8F22              ;   índices de Rutinas de impresión.
  2+  8F22
  3+  8F22 32 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8F24 5F 8F            defw Pinta_Amadeus_3x2
  5+  8F26
  6+  8F26 B5 8F        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8F28 55 90            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8F2A 09 90            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8F2C
 10+  8F2C DF 8F        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8F2E E3 90            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8F30 97 90            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8F32
 14+  8F32
 15+  8F32              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8F32              ;
 17+  8F32              ;   12/12/22
 18+  8F32              ;
 19+  8F32              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8F32              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8F32              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8F32              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8F32              ;
 24+  8F32              ;   Modifica: DE y HL.
 25+  8F32
 26+  8F32 ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8F36 FD F9        	ld sp,iy
 28+  8F38 06 10            ld b,16
 29+  8F3A D1           1 pop de
 30+  8F3B 7B               ld a,e
 31+  8F3C AE               xor (hl)
 32+  8F3D 77           	ld (hl),a
 33+  8F3E 23           	inc hl
 34+  8F3F 7A               ld a,d
 35+  8F40 AE               xor (hl)
 36+  8F41 77           	ld (hl),a
 37+  8F42 2B           	dec hl
 38+  8F43 24           	inc h
 39+  8F44 7C               ld a,h
 40+  8F45 E6 07            and 7
 41+  8F47 20 0A            jr nz,2F
 42+  8F49 7D               ld a,l
 43+  8F4A C6 20            add a,$20
 44+  8F4C 6F               ld l,a
 45+  8F4D 38 04            jr c,2F
 46+  8F4F 7C               ld a,h
 47+  8F50 D6 08            sub 8
 48+  8F52 67               ld h,a
 49+  8F53 7C           2 ld a,h
 50+  8F54 FE 58            cp $58
 51+  8F56 28 02            jr z,3F
 52+  8F58 10 E0            djnz 1B
 53+  8F5A ED 7B D9 85  3 ld sp,(Stack)
 54+  8F5E C9           	ret
 55+  8F5F
 56+  8F5F ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8F63 FD F9        	ld sp,iy
 58+  8F65 06 08            ld b,8
 59+  8F67 D1           1 pop de
 60+  8F68 7B               ld a,e
 61+  8F69 AE               xor (hl)
 62+  8F6A 77           	ld (hl),a
 63+  8F6B 23           	inc hl
 64+  8F6C 7A               ld a,d
 65+  8F6D AE               xor (hl)
 66+  8F6E 77           	ld (hl),a
 67+  8F6F 23           	inc hl
 68+  8F70 D1           	pop de
 69+  8F71 7B               ld a,e
 70+  8F72 AE               xor (hl)
 71+  8F73 77           	ld (hl),a
 72+  8F74 2B           	dec hl
 73+  8F75 2B           	dec hl
 74+  8F76 24           	inc h
 75+  8F77 7C               ld a,h
 76+  8F78 E6 07            and 7
 77+  8F7A 20 0A            jr nz,2F
 78+  8F7C 7D               ld a,l
 79+  8F7D C6 20            add a,$20
 80+  8F7F 6F               ld l,a
 81+  8F80 38 04            jr c,2F
 82+  8F82 7C               ld a,h
 83+  8F83 D6 08            sub 8
 84+  8F85 67               ld h,a
 85+  8F86 7C           2 ld a,h
 86+  8F87 FE 58            cp $58
 87+  8F89 28 25            jr z,4F
 88+  8F8B 7A               ld a,d
 89+  8F8C AE               xor (hl)
 90+  8F8D 77               ld (hl),a
 91+  8F8E D1           	pop de
 92+  8F8F 23           	inc hl
 93+  8F90 7B               ld a,e
 94+  8F91 AE               xor (hl)
 95+  8F92 77           	ld (hl),a
 96+  8F93 23           	inc hl
 97+  8F94 7A               ld a,d
 98+  8F95 AE               xor (hl)
 99+  8F96 77           	ld (hl),a
100+  8F97 2B           	dec hl
101+  8F98 2B           	dec hl
102+  8F99 24           	inc h
103+  8F9A 7C               ld a,h
104+  8F9B E6 07            and 7
105+  8F9D 20 0A            jr nz,3F
106+  8F9F 7D               ld a,l
107+  8FA0 C6 20            add a,$20
108+  8FA2 6F               ld l,a
109+  8FA3 38 04            jr c,3F
110+  8FA5 7C               ld a,h
111+  8FA6 D6 08            sub 8
112+  8FA8 67               ld h,a
113+  8FA9 7C           3 ld a,h
114+  8FAA FE 58            cp $58
115+  8FAC 28 02            jr z,4F
116+  8FAE 10 B7            djnz 1B
117+  8FB0 ED 7B D9 85  4 ld sp,(Stack)
118+  8FB4 C9           	ret
119+  8FB5
120+  8FB5              ; ---------------------------------------------------
121+  8FB5
122+  8FB5 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8FB9 FD F9        	ld sp,iy
124+  8FBB
125+  8FBB              ; >>>
126+  8FBB
127+  8FBB 06 10            ld b,16
128+  8FBD D1           1 pop de
129+  8FBE 7A           	ld a,d
130+  8FBF AE           	xor (hl)
131+  8FC0 77           	ld (hl),a
132+  8FC1 24           	inc h
133+  8FC2 7C               ld a,h
134+  8FC3 E6 07            and 7
135+  8FC5 20 0C            jr nz,2F
136+  8FC7 7D               ld a,l
137+  8FC8 C6 20            add a,$20
138+  8FCA 6F               ld l,a
139+  8FCB 38 06            jr c,2F
140+  8FCD 7C               ld a,h
141+  8FCE D6 08            sub 8
142+  8FD0 67               ld h,a
143+  8FD1 18 00            jr 2F
144+  8FD3 7C           2 ld a,h
145+  8FD4 FE 58            cp $58
146+  8FD6 28 02            jr z,3F
147+  8FD8 10 E3            djnz 1B
148+  8FDA ED 7B D9 85  3 ld sp,(Stack)
149+  8FDE C9           	ret
150+  8FDF
151+  8FDF ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8FE3 FD F9        	ld sp,iy
153+  8FE5
154+  8FE5              ; >>>
155+  8FE5
156+  8FE5 06 10            ld b,16
157+  8FE7 D1           1 pop de
158+  8FE8 7B           	ld a,e
159+  8FE9 AE           	xor (hl)
160+  8FEA 77           	ld (hl),a
161+  8FEB 24           	inc h
162+  8FEC 7C               ld a,h
163+  8FED E6 07            and 7
164+  8FEF 20 0C            jr nz,2F
165+  8FF1 7D               ld a,l
166+  8FF2 C6 20            add a,$20
167+  8FF4 6F               ld l,a
168+  8FF5 38 06            jr c,2F
169+  8FF7 7C               ld a,h
170+  8FF8 D6 08            sub 8
171+  8FFA 67               ld h,a
172+  8FFB 18 00            jr 2F
173+  8FFD 7C           2 ld a,h
174+  8FFE FE 58            cp $58
175+  9000 28 02            jr z,3F
176+  9002 10 E3            djnz 1B
177+  9004 ED 7B D9 85  3 ld sp,(Stack)
178+  9008 C9           	ret
179+  9009
180+  9009              ; ---------------------------------------------------
181+  9009
182+  9009 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  900D FD F9        	ld sp,iy
184+  900F 06 08            ld b,8
185+  9011 D1           1 pop de
186+  9012 7A           	ld a,d
187+  9013 AE           	xor (hl)
188+  9014 77           	ld (hl),a
189+  9015 23           	inc hl
190+  9016 D1           	pop de
191+  9017 7B           	ld a,e
192+  9018 AE           	xor (hl)
193+  9019 77           	ld (hl),a
194+  901A 2B           	dec hl
195+  901B 24            	inc h
196+  901C 7C               ld a,h
197+  901D E6 07            and 7
198+  901F 20 0A            jr nz,2F
199+  9021 7D               ld a,l
200+  9022 C6 20            add a,$20
201+  9024 6F               ld l,a
202+  9025 38 04            jr c,2F
203+  9027 7C               ld a,h
204+  9028 D6 08            sub 8
205+  902A 67               ld h,a
206+  902B 7C           2 ld a,h
207+  902C FE 58            cp $58
208+  902E 28 20            jr z,4F
209+  9030 D1               pop de
210+  9031 7B           	ld a,e
211+  9032 AE           	xor (hl)
212+  9033 77           	ld (hl),a
213+  9034 23           	inc hl
214+  9035 7A           	ld a,d
215+  9036 AE           	xor (hl)
216+  9037 77           	ld (hl),a
217+  9038 2B           	dec hl
218+  9039 24           	inc h
219+  903A 7C               ld a,h
220+  903B E6 07            and 7
221+  903D 20 0A            jr nz,3F
222+  903F 7D               ld a,l
223+  9040 C6 20            add a,$20
224+  9042 6F               ld l,a
225+  9043 38 04            jr c,3F
226+  9045 7C               ld a,h
227+  9046 D6 08            sub 8
228+  9048 67               ld h,a
229+  9049 7C           3 ld a,h
230+  904A FE 58            cp $58
231+  904C 28 02            jr z,4F
232+  904E 10 C1            djnz 1B
233+  9050 ED 7B D9 85  4 ld sp,(Stack)
234+  9054 C9           	ret
235+  9055
236+  9055 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  9059 FD F9        	ld sp,iy
238+  905B 06 08            ld b,8
239+  905D D1           1 pop de
240+  905E D1           	pop de
241+  905F 7B           	ld a,e
242+  9060 AE           	xor (hl)
243+  9061 77           	ld (hl),a
244+  9062 24            	inc h
245+  9063 7C               ld a,h
246+  9064 E6 07            and 7
247+  9066 20 0A            jr nz,2F
248+  9068 7D               ld a,l
249+  9069 C6 20            add a,$20
250+  906B 6F               ld l,a
251+  906C 38 04            jr c,2F
252+  906E 7C               ld a,h
253+  906F D6 08            sub 8
254+  9071 67               ld h,a
255+  9072 7C           2 ld a,h
256+  9073 FE 58            cp $58
257+  9075 28 1B            jr z,4F
258+  9077 D1               pop de
259+  9078 7A           	ld a,d
260+  9079 AE           	xor (hl)
261+  907A 77           	ld (hl),a
262+  907B 24           	inc h
263+  907C 7C               ld a,h
264+  907D E6 07            and 7
265+  907F 20 0A            jr nz,3F
266+  9081 7D               ld a,l
267+  9082 C6 20            add a,$20
268+  9084 6F               ld l,a
269+  9085 38 04            jr c,3F
270+  9087 7C               ld a,h
271+  9088 D6 08            sub 8
272+  908A 67               ld h,a
273+  908B 7C           3 ld a,h
274+  908C FE 58            cp $58
275+  908E 28 02            jr z,4F
276+  9090 10 CB            djnz 1B
277+  9092 ED 7B D9 85  4 ld sp,(Stack)
278+  9096 C9           	ret
279+  9097
280+  9097 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  909B FD F9        	ld sp,iy
282+  909D 06 08            ld b,8
283+  909F D1           1 pop de
284+  90A0 7B           	ld a,e
285+  90A1 AE           	xor (hl)
286+  90A2 77           	ld (hl),a
287+  90A3 23           	inc hl
288+  90A4 7A           	ld a,d
289+  90A5 AE           	xor (hl)
290+  90A6 77           	ld (hl),a
291+  90A7 2B           	dec hl
292+  90A8 24             	inc h
293+  90A9 7C               ld a,h
294+  90AA E6 07            and 7
295+  90AC 20 0A            jr nz,2F
296+  90AE 7D               ld a,l
297+  90AF C6 20            add a,$20
298+  90B1 6F               ld l,a
299+  90B2 38 04            jr c,2F
300+  90B4 7C               ld a,h
301+  90B5 D6 08            sub 8
302+  90B7 67               ld h,a
303+  90B8 7C           2 ld a,h
304+  90B9 FE 58            cp $58
305+  90BB 28 21            jr z,4F
306+  90BD D1               pop de
307+  90BE 7A           	ld a,d
308+  90BF AE           	xor (hl)
309+  90C0 77           	ld (hl),a
310+  90C1 23           	inc hl
311+  90C2 D1               pop de
312+  90C3 7B           	ld a,e
313+  90C4 AE           	xor (hl)
314+  90C5 77           	ld (hl),a
315+  90C6 2B           	dec hl
316+  90C7 24           	inc h
317+  90C8 7C               ld a,h
318+  90C9 E6 07            and 7
319+  90CB 20 0A            jr nz,3F
320+  90CD 7D               ld a,l
321+  90CE C6 20            add a,$20
322+  90D0 6F               ld l,a
323+  90D1 38 04            jr c,3F
324+  90D3 7C               ld a,h
325+  90D4 D6 08            sub 8
326+  90D6 67               ld h,a
327+  90D7 7C           3 ld a,h
328+  90D8 FE 58            cp $58
329+  90DA 28 02            jr z,4F
330+  90DC 10 C1            djnz 1B
331+  90DE ED 7B D9 85  4 ld sp,(Stack)
332+  90E2 C9           	ret
333+  90E3
334+  90E3 ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  90E7 FD F9        	ld sp,iy
336+  90E9 06 08            ld b,8
337+  90EB D1           1 pop de
338+  90EC 7B           	ld a,e
339+  90ED AE           	xor (hl)
340+  90EE 77           	ld (hl),a
341+  90EF 24            	inc h
342+  90F0 7C               ld a,h
343+  90F1 E6 07            and 7
344+  90F3 20 0A            jr nz,2F
345+  90F5 7D               ld a,l
346+  90F6 C6 20            add a,$20
347+  90F8 6F               ld l,a
348+  90F9 38 04            jr c,2F
349+  90FB 7C               ld a,h
350+  90FC D6 08            sub 8
351+  90FE 67               ld h,a
352+  90FF 7C           2 ld a,h
353+  9100 FE 58            cp $58
354+  9102 28 1C            jr z,4F
355+  9104 D1               pop de
356+  9105 7A           	ld a,d
357+  9106 AE           	xor (hl)
358+  9107 77           	ld (hl),a
359+  9108 24           	inc h
360+  9109 7C               ld a,h
361+  910A E6 07            and 7
362+  910C 20 0A            jr nz,3F
363+  910E 7D               ld a,l
364+  910F C6 20            add a,$20
365+  9111 6F               ld l,a
366+  9112 38 04            jr c,3F
367+  9114 7C               ld a,h
368+  9115 D6 08            sub 8
369+  9117 67               ld h,a
370+  9118 7C           3 ld a,h
371+  9119 FE 58            cp $58
372+  911B 28 03            jr z,4F
373+  911D D1               pop de
374+  911E 10 CB            djnz 1B
375+  9120 ED 7B D9 85  4 ld sp,(Stack)
376+  9124 C9           	ret
377+  9125
378+  9125              ; ---------------------------------------------------
379+  9125              ;
380+  9125              ;   27/02/23
381+  9125              ;
382+  9125              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  9125              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  9125              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  9125
386+  9125 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  9129 FD F9            ld sp,iy
388+  912B 06 02            ld b,2
389+  912D D1           1 pop de
390+  912E 7B               ld a,e
391+  912F AE               xor (hl)
392+  9130 77               ld (hl),a
393+  9131 23               inc hl
394+  9132 7A               ld a,d
395+  9133 AE               xor (hl)
396+  9134 77               ld (hl),a
397+  9135 2B               dec hl
398+  9136
399+  9136 24               inc h
400+  9137 7C               ld a,h
401+  9138 E6 07            and 7
402+  913A 20 0A            jr nz,2F
403+  913C 7D               ld a,l
404+  913D C6 20            add a,$20
405+  913F 6F               ld l,a
406+  9140 38 04            jr c,2F
407+  9142 7C               ld a,h
408+  9143 D6 08            sub 8
409+  9145 67               ld h,a
410+  9146 7C           2 ld a,h
411+  9147 FE 58            cp $58
412+  9149 28 02            jr z,3F
413+  914B
414+  914B 10 E0            djnz 1B
415+  914D ED 7B D9 85  3 ld sp,(Stack)
416+  9151 C9               ret
417+  9152
# file closed: Rutinas_de_impresion_sprites.asm
875   9152              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  9152              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  9152              ;
  3+  9152              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  9152              ;
  5+  9152              ; *****************************************************************************************************************************************************************************************
  6+  9152              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  9152
  8+  9152 7C           calcula_tercio ld a,h
  9+  9153 E6 18        	and $18
 10+  9155 CB 2F        	sra a
 11+  9157 CB 2F        	sra a
 12+  9159 CB 2F        	sra a
 13+  915B C9           	ret
 14+  915C
# file closed: calcula_tercio.asm
876   915C              	include "Cls.asm"
# file opened: Cls.asm
  1+  915C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  915C              ;
  3+  915C              ;
  4+  915C              ;	CLS.
  5+  915C              ;
  6+  915C              ;	Limpia la pantalla y define sus atributos.
  7+  915C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  915C              ;
  9+  915C              ;	COLORES: 0 ..... NEGRO
 10+  915C              ;    		 1 ..... AZUL
 11+  915C              ; 			 2 ..... ROJO
 12+  915C              ;			 3 ..... MAGENTA
 13+  915C              ; 			 4 ..... VERDE
 14+  915C              ; 			 5 ..... CIAN
 15+  915C              ;			 6 ..... AMARILLO
 16+  915C              ; 			 7 ..... BLANCO
 17+  915C              ;
 18+  915C              ;	INPUT: A contiene los atributos de pantalla.
 19+  915C              ;
 20+  915C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  915C
 22+  915C
 23+  915C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  915F 11 01 40     	LD DE,$4001
 25+  9162 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  9165 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  9167 ED B0        	LDIR
 28+  9169 01 FF 02     	LD BC,767
 29+  916C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  916D ED B0        	LDIR
 31+  916F C9           	ret
 32+  9170
# file closed: Cls.asm
877   9170              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  9170              ; ******************************************************************************************************************************************************************************************
  2+  9170              ;
  3+  9170              ;   22/01/23
  4+  9170              ;
  5+  9170              ;	Mov_down
  6+  9170              ;
  7+  9170              ; 	Mueve el Sprite X px hacia abajo.
  8+  9170              ;
  9+  9170              ;
 10+  9170 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  9173 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  9175              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  9175              ; 																	; _ en el caso de que no lo haya.
 14+  9175 3A AE 85     	ld a,(Vel_down)
 15+  9178 47           	ld b,a
 16+  9179 2A 98 85         ld hl,(Posicion_actual)
 17+  917C CD 52 91     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  917F E6 02        	and 2
 19+  9181 28 0F        	jr z,1F
 20+  9183
 21+  9183              ; Nos encontramos en el último tercio de pantalla.
 22+  9183              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  9183
 24+  9183 7C           	ld a,h
 25+  9184 FE 57        	cp $57
 26+  9186 20 0A        	jr nz,1F
 27+  9188 7D           	ld a,l
 28+  9189 C6 20        	add $20
 29+  918B 30 05        	jr nc,1F
 30+  918D
 31+  918D              ; ------------------------------
 32+  918D CD 68 94     	call Reaparece_arriba
 33+  9190              ;	call Reinicio
 34+  9190              ; ------------------------------
 35+  9190 18 08        	jr 3F
 36+  9192
 37+  9192 CD 92 8E     1 call NextScan
 38+  9195 22 98 85     	ld (Posicion_actual),hl
 39+  9198 10 E2            djnz 2B
 40+  919A CD 80 94     3 call Genera_coordenadas
 41+  919D C9           	ret
 42+  919E
 43+  919E              ; ******************************************************************************************************************************************************************************************
 44+  919E              ;
 45+  919E              ;   22/01/23
 46+  919E              ;
 47+  919E              ;	Mov_up
 48+  919E              ;
 49+  919E              ; 	Mueve el Sprite hacia arriba.
 50+  919E              ;
 51+  919E              ;
 52+  919E 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  91A1 CB DE        	set 3,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  91A3              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  91A3              ; 																		; _ en el caso de que no lo haya.
 56+  91A3 3A AD 85     	ld a,(Vel_up)
 57+  91A6 47           	ld b,a
 58+  91A7 2A 98 85     	ld hl,(Posicion_actual)
 59+  91AA CD 52 91     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  91AD A7           	and a
 61+  91AE 20 10        	jr nz,1F
 62+  91B0
 63+  91B0              ; Nos encontramos en el 1er tercio de pantalla.
 64+  91B0              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  91B0
 66+  91B0 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  91B1 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  91B3 20 0B            jr nz,1F
 69+  91B5 7D               ld a,l
 70+  91B6 D6 20            sub $20
 71+  91B8 30 06            jr nc,1F
 72+  91BA 25               dec h
 73+  91BB
 74+  91BB              ; -----------------------------
 75+  91BB CD 58 94         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  91BE              ;	call Reinicio
 77+  91BE              ; -----------------------------
 78+  91BE
 79+  91BE 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  91C0 CD A1 8E     1 call PreviousScan
 81+  91C3 22 98 85     	ld (Posicion_actual),hl
 82+  91C6 10 E2            djnz 3B
 83+  91C8 CD 80 94     2 call Genera_coordenadas
 84+  91CB C9           	ret
 85+  91CC
 86+  91CC              ; ******************************************************************************************************************************************************************************************
 87+  91CC              ;
 88+  91CC              ;	19/10/22
 89+  91CC              ;
 90+  91CC              ;	Mov_right.
 91+  91CC              ;
 92+  91CC              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  91CC              ;
 94+  91CC
 95+  91CC 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  91CF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  91D1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  91D1              ; 																	; _ en el caso de que no lo haya.
 99+  91D1 3A C3 85     	ld a,(Ctrl_0)
100+  91D4 CB 77        	bit 6,a
101+  91D6 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  91D8
103+  91D8 CD 06 94     	call Stop_Amadeus_right
104+  91DB C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  91DC 18 4D        	jr 8F
106+  91DE
107+  91DE 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  91E1 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  91E3 20 46        	jr nz,8F
110+  91E5
111+  91E5 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  91E8 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  91E9 28 40        	jr z,8F
114+  91EB
115+  91EB              ; ---------- ---------- ----------
116+  91EB              ;
117+  91EB              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  91EB
119+  91EB 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  91EE FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  91F0 28 11        	jr z,1F
122+  91F2 38 06        	jr c,6F
123+  91F4 FE 04        	cp 4
124+  91F6 28 14        	jr z,7F
125+  91F8 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  91FA
127+  91FA              ; ---------- ---------- ----------
128+  91FA              ;
129+  91FA              ; Perfiles de velocidad
130+  91FA              ;
131+  91FA
132+  91FA 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  91FD FE FE        	cp $fe
134+  91FF 20 2A        	jr nz,8F
135+  9201 18 10        	jr 3F
136+  9203 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  9206 FE FD        	cp $fd
138+  9208 20 21        	jr nz,8F
139+  920A 18 07        	jr 3F
140+  920C 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  920F FE FB        	cp $fb
142+  9211 20 18        	jr nz,8F
143+  9213
144+  9213              ; ---------- ---------- ----------
145+  9213
146+  9213              3
147+  9213 CD 46 94     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  9216              ;	call Reinicio
149+  9216
150+  9216              ; ---------- ---------- ----------
151+  9216              ;
152+  9216              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  9216
154+  9216 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9218 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9219 CD 32 92     	call DESPLZ_DER
157+  921C C1           	pop bc
158+  921D 10 F9        	djnz 5B
159+  921F 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  9222 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  9223 22 98 85     	ld (Posicion_actual),hl
162+  9226 CD 80 94     	call Genera_coordenadas
163+  9229 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  922B
165+  922B              ; ---------- ---------- ----------
166+  922B
167+  922B 2A 98 85     8 ld hl,(Posicion_actual)
168+  922E CD 32 92     	call DESPLZ_DER
169+  9231 C9           2 ret
170+  9232
171+  9232              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  9232              ;
173+  9232              ;	22/9/22
174+  9232              ;
175+  9232
176+  9232 CD 41 92     DESPLZ_DER call Desplaza_derecha
177+  9235 CD 8D 92         call modifica_parametros_1er_DESPLZ_2
178+  9238 CD B6 92         call Ciclo_completo
179+  923B 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  923E CB FE        	set 7,(hl)
181+  9240 C9           	ret
182+  9241
183+  9241              ; ******************************************************************************************************************************************************************************************
184+  9241              ;	15/02/23
185+  9241              ;
186+  9241
187+  9241 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  9244 47           	ld b,a
189+  9245 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  9248 23           1 inc hl
191+  9249 23           	inc hl
192+  924A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  924C 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  924F CD 9E 87     	call Extrae_address
195+  9252 22 9A 85     	ld (Puntero_objeto),hl
196+  9255
197+  9255              ; Modifica (Puntero_DESPLZ_izq).
198+  9255
199+  9255              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  9255              ; Cuántos movimientos hemos hecho ??
201+  9255              ; DE contiene (Puntero_DESPLZ_der).
202+  9255
203+  9255 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  9258 EB           	ex de,hl
205+  9259 A7           	and a
206+  925A ED 52        	sbc hl,de
207+  925C CB 3D        	srl l
208+  925E 3E 08        6 ld a,8
209+  9260 95           	sub l
210+  9261 30 1E        	jr nc,3F
211+  9263
212+  9263              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  9263              ; B="0".
214+  9263
215+  9263 04           4 inc b
216+  9264 3C           	inc a
217+  9265 20 FC        	jr nz,4B
218+  9267 78           	ld a,b
219+  9268 08           	ex af,af
220+  9269 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  926C 23           5 inc hl
222+  926D 23           	inc hl
223+  926E 10 FC        	djnz 5B
224+  9270 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  9273 CD 9E 87     	call Extrae_address
226+  9276 22 9A 85     	ld (Puntero_objeto),hl
227+  9279
228+  9279              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  9279              ; _(Posicion_actual).
230+  9279
231+  9279 21 98 85     	ld hl,Posicion_actual
232+  927C 34           	inc (hl)
233+  927D 08               ex af,af
234+  927E 6F           	ld l,a
235+  927F 18 DD        	jr 6B
236+  9281
237+  9281              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  9281
239+  9281 47           3 ld b,a
240+  9282 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  9285 23           2 inc hl
242+  9286 23           	inc hl
243+  9287 10 FC        	djnz 2B
244+  9289 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  928C C9           8 ret
246+  928D
247+  928D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  928D              ;
249+  928D              ;	24/7/22
250+  928D              ;
251+  928D              ;	modifica_parametros_1er_DESPLZ_2
252+  928D              ;
253+  928D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  928D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  928D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  928D
257+  928D 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  9290 A7           	and a
259+  9291 20 1F        	jr nz,1F
260+  9293 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  9295 32 9E 85         ld (CTRL_DESPLZ),a
262+  9298
263+  9298 21 97 85     	ld hl,Columns
264+  929B 34           	inc (hl)
265+  929C 3A AA 85     	ld a,(Cuad_objeto)
266+  929F E6 01        	and 1
267+  92A1 28 0F        	jr z,1F
268+  92A3 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  92A6 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  92A7 22 98 85     	ld (Posicion_actual),hl
271+  92AA CD 80 94     	call Genera_coordenadas
272+  92AD CD 12 94     	call Inc_CTRL_DESPLZ
273+  92B0 18 03        	jr 2F
274+  92B2 CD 12 94     1 call Inc_CTRL_DESPLZ
275+  92B5 C9           2 ret
276+  92B6
277+  92B6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  92B6              ;
279+  92B6              ;	24/7/22
280+  92B6              ;
281+  92B6              ;	Ciclo_completo.
282+  92B6              ;
283+  92B6              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  92B6              ;
285+  92B6              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  92B6              ; 	Decrementamos (Columns).
287+  92B6              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  92B6              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  92B6
290+  92B6
291+  92B6 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  92B9 FE FF        	cp $ff
293+  92BB 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  92BD E6 F0        	and $f0
295+  92BF 20 28        	jr nz,3F
296+  92C1
297+  92C1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  92C1
299+  92C1 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  92C4 47           	ld b,a
301+  92C5 3E F8        	ld a,$f8
302+  92C7 80           	add b
303+  92C8 32 9E 85     	ld (CTRL_DESPLZ),a
304+  92CB 18 1C        	jr 3F
305+  92CD 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  92D0 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  92D1 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  92D2 32 9E 85     	ld (CTRL_DESPLZ),a
309+  92D5 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  92D8 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  92DA 20 0A        	jr nz,2F
312+  92DC 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  92DF 23           	inc hl
314+  92E0 22 98 85     	ld (Posicion_actual),hl
315+  92E3 CD 80 94     	call Genera_coordenadas
316+  92E6
317+  92E6              ; Inicia el puntero de Sprite.
318+  92E6
319+  92E6 CD B5 87     2 call Inicia_puntero_objeto_der
320+  92E9 C9           3 ret
321+  92EA
322+  92EA              ; ******************************************************************************************************************************************************************************************
323+  92EA              ;
324+  92EA              ;	15/02/23
325+  92EA              ;
326+  92EA              ;	Mov_left.
327+  92EA              ;
328+  92EA              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  92EA              ;
330+  92EA              Mov_left
331+  92EA
332+  92EA 21 C3 85     	ld hl,Ctrl_0
333+  92ED CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  92EF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  92EF              ; 																	; _ en el caso de que no lo haya.
336+  92EF 3A C3 85     	ld a,(Ctrl_0)
337+  92F2 CB 77        	bit 6,a
338+  92F4 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  92F6
340+  92F6 CD 0C 94     	call Stop_Amadeus_left
341+  92F9 C8           	ret z
342+  92FA 20 4A        	jr nz,8F
343+  92FC
344+  92FC 3A 9C 85     11 ld a,(Coordenada_X)
345+  92FF A7           	and a
346+  9300 20 44        	jr nz,8F
347+  9302
348+  9302 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  9305 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9306 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9308
352+  9308              ; ---------- ---------- ----------
353+  9308
354+  9308 3A AB 85     	ld a,(Vel_left)
355+  930B FE 02        	cp 2
356+  930D 28 0F        	jr z,1F
357+  930F 38 04        	jr c,6F
358+  9311 FE 04        	cp 4
359+  9313 28 12        	jr z,7F
360+  9315
361+  9315              ; ---------- ---------- ----------
362+  9315
363+  9315 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  9318 FE F9        	cp $f9
365+  931A 20 2A        	jr nz,8F
366+  931C 18 10        	jr 4F
367+  931E 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  9321 FE FA        	cp $fa
369+  9323 20 21        	jr nz,8F
370+  9325 18 07        	jr 4F
371+  9327 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  932A FE FC        	cp $fc
373+  932C 20 18        	jr nz,8F
374+  932E
375+  932E              ; ---------- ---------- ----------
376+  932E
377+  932E              4
378+  932E CD 34 94     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  9331              ;	call Reinicio
380+  9331
381+  9331              ; ---------- ---------- ----------
382+  9331
383+  9331 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  9333 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  9334
386+  9334              ;	ld hl,(Indice_Sprite_izq)
387+  9334              ;	ld (Puntero_DESPLZ_izq),hl
388+  9334
389+  9334 CD 4D 93     	call DESPLZ_IZQ
390+  9337 C1           	pop bc
391+  9338 10 F9        	djnz 5B
392+  933A 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  933D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  933E 22 98 85     	ld (Posicion_actual),hl
395+  9341 CD 80 94     	call Genera_coordenadas
396+  9344 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  9346
398+  9346              ; ---------- ---------- ----------
399+  9346
400+  9346              ; Movemos, no hay recolocación.
401+  9346
402+  9346 2A 98 85     8 ld hl,(Posicion_actual)
403+  9349 CD 4D 93     	call DESPLZ_IZQ
404+  934C C9           2 ret
405+  934D
406+  934D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
407+  934D              ;
408+  934D              ;	22/9/22
409+  934D
410+  934D              DESPLZ_IZQ
411+  934D
412+  934D CD 5C 93     	call Desplaza_izquierda
413+  9350 CD A8 93         call modifica_parametros_1er_DESPLZ
414+  9353 CD D0 93     	call Ciclo_completo_2
415+  9356 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
416+  9359 CB BE        	res 7,(hl)
417+  935B C9           	ret
418+  935C
419+  935C              Desplaza_izquierda
420+  935C
421+  935C 3A AB 85     	ld a,(Vel_left)
422+  935F 47           	ld b,a
423+  9360 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
424+  9363 23           1 inc hl
425+  9364 23           	inc hl
426+  9365 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
427+  9367 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
428+  936A CD 9E 87     	call Extrae_address
429+  936D 22 9A 85     	ld (Puntero_objeto),hl
430+  9370
431+  9370              ; Modifica (Puntero_DESPLZ_der).
432+  9370
433+  9370              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
434+  9370              ; Cuántos movimientos hemos hecho ??
435+  9370              ; DE contiene (Puntero_DESPLZ_izq).
436+  9370
437+  9370 2A A2 85     7 ld hl,(Indice_Sprite_izq)
438+  9373 EB           	ex de,hl
439+  9374 A7           	and a
440+  9375 ED 52        	sbc hl,de
441+  9377 CB 3D        	srl l
442+  9379 3E 08        6 ld a,8
443+  937B 95           	sub l
444+  937C 30 1E        	jr nc,3F
445+  937E
446+  937E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
447+  937E              ; B="0".
448+  937E
449+  937E 04           4 inc b
450+  937F 3C           	inc a
451+  9380 20 FC        	jr nz,4B
452+  9382 78           	ld a,b
453+  9383 08           	ex af,af
454+  9384 2A A2 85     	ld hl,(Indice_Sprite_izq)
455+  9387 23           5 inc hl
456+  9388 23           	inc hl
457+  9389 10 FC        	djnz 5B
458+  938B 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
459+  938E CD 9E 87     	call Extrae_address
460+  9391 22 9A 85     	ld (Puntero_objeto),hl
461+  9394
462+  9394              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
463+  9394              ; _(Posicion_actual).
464+  9394
465+  9394 21 98 85     	ld hl,Posicion_actual
466+  9397 35           	dec (hl)
467+  9398 08           	ex af,af
468+  9399 6F           	ld l,a
469+  939A 18 DD        	jr 6B
470+  939C
471+  939C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
472+  939C
473+  939C 47           3 ld b,a
474+  939D 2A A0 85     	ld hl,(Indice_Sprite_der)
475+  93A0 23           2 inc hl
476+  93A1 23           	inc hl
477+  93A2 10 FC        	djnz 2B
478+  93A4 22 A4 85     	ld (Puntero_DESPLZ_der),hl
479+  93A7 C9           8 ret
480+  93A8
481+  93A8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
482+  93A8              ;
483+  93A8              ;	modifica_parametros_1er_DESPLZ
484+  93A8              ;
485+  93A8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
486+  93A8              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
487+  93A8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
488+  93A8
489+  93A8 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
490+  93AB A7           	and a
491+  93AC 20 1E        	jr nz,1F
492+  93AE 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
493+  93AF 32 9E 85         ld (CTRL_DESPLZ),a
494+  93B2 21 97 85     	ld hl,Columns
495+  93B5 34           	inc (hl)
496+  93B6 3A AA 85     	ld a,(Cuad_objeto)
497+  93B9 E6 01        	and 1
498+  93BB 20 0F        	jr nz,1F
499+  93BD 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
500+  93C0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
501+  93C1 22 98 85     	ld (Posicion_actual),hl
502+  93C4 CD 80 94     	call Genera_coordenadas
503+  93C7 CD 23 94     	call Dec_CTRL_DESPLZ
504+  93CA 18 03        	jr 2F
505+  93CC CD 23 94     1 call Dec_CTRL_DESPLZ
506+  93CF C9           2 ret
507+  93D0
508+  93D0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
509+  93D0
510+  93D0 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
511+  93D3 FE F7        	cp $f7
512+  93D5 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
513+  93D7 30 2C        	jr nc,3F
514+  93D9
515+  93D9              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
516+  93D9
517+  93D9 06 00        	ld b,0
518+  93DB 04           4 inc b
519+  93DC 3C           	inc a
520+  93DD FE F7        	cp $f7
521+  93DF 20 FA        	jr nz,4B
522+  93E1 3E FF        	ld a,$ff
523+  93E3 90           	sub b
524+  93E4 32 9E 85     	ld (CTRL_DESPLZ),a
525+  93E7 18 1C        	jr 3F
526+  93E9
527+  93E9              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
528+  93E9
529+  93E9 21 97 85     1 ld hl,Columns
530+  93EC 35           	dec (hl)
531+  93ED AF           	xor a
532+  93EE 32 9E 85     	ld (CTRL_DESPLZ),a
533+  93F1 3A AA 85     	ld a,(Cuad_objeto)
534+  93F4 E6 01        	and 1
535+  93F6 28 0A        	jr z,2F
536+  93F8 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
537+  93FB 2B           	dec hl
538+  93FC 22 98 85     	ld (Posicion_actual),hl
539+  93FF CD 80 94     	call Genera_coordenadas
540+  9402
541+  9402              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
542+  9402
543+  9402 CD C8 87     2 call Inicia_puntero_objeto_izq
544+  9405 C9           3 ret
545+  9406
546+  9406              ; ---------- ---------- ---------- ---------- ---------- ----------
547+  9406              ;
548+  9406              ;	19/10/22
549+  9406              ;
550+  9406              ;	(cp 29) para un Amadeus de 3 Columns.
551+  9406              ;	(cp 30)   ""  ""    ""     2 Columns.
552+  9406
553+  9406 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
554+  9409 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
555+  940B C9           	ret
556+  940C
557+  940C              ; ---------- ---------- ---------- ---------- ---------- ----------
558+  940C              ;
559+  940C              ;	19/10/22
560+  940C              ;
561+  940C              ;	(cp 2) para un Amadeus de 3 Columns.
562+  940C              ;	(cp 1)   ""  ""    ""     2 Columns.
563+  940C
564+  940C 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
565+  940F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
566+  9411 C9           	ret
567+  9412
568+  9412              ; ---------- ---------- ---------- ---------- ---------- ----------
569+  9412              ;
570+  9412              ;	24/7/22
571+  9412              ;
572+  9412              ;	Inc_CTRL_DESPLZ
573+  9412              ;
574+  9412              ;
575+  9412              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
576+  9412
577+  9412 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
578+  9415 3A AC 85     	ld a,(Vel_right)
579+  9418 A7           	and a
580+  9419 28 06        	jr z,1F
581+  941B 47           	ld b,a
582+  941C 34           3 inc (hl)
583+  941D 10 FD        	djnz 3B
584+  941F 18 01        	jr 2F
585+  9421 34           1 inc (hl)
586+  9422 C9           2 ret
587+  9423
588+  9423              ; ---------- ---------- ---------- ---------- ---------- ----------
589+  9423              ;
590+  9423              ;	5/2/23
591+  9423              ;
592+  9423              ;	Dec_CTRL_DESPLZ
593+  9423              ;
594+  9423              ;
595+  9423              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
596+  9423
597+  9423 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
598+  9426 3A AB 85     	ld a,(Vel_left)
599+  9429 A7           	and a
600+  942A 28 06        	jr z,1F
601+  942C 47           	ld b,a
602+  942D 35           3 dec (hl)
603+  942E 10 FD        	djnz 3B
604+  9430 18 01        	jr 2F
605+  9432 35           1 dec (hl)
606+  9433 C9           2 ret
607+  9434
608+  9434              ; ---------- ---------- ---------- ---------- ---------- ----------
609+  9434
610+  9434 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
611+  9437 01 1F 00     	ld bc,31
612+  943A A7           	and a
613+  943B ED 4A        	adc hl,bc
614+  943D 22 98 85     	ld (Posicion_actual),hl
615+  9440 21 C3 85     	ld hl,Ctrl_0														; $xxx1
616+  9443 CB C6        	set 0,(hl)
617+  9445 C9           	ret
618+  9446
619+  9446              ; ---------- ---------- ---------- ---------- ---------- ----------
620+  9446
621+  9446 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
622+  9449 01 1F 00     	ld bc,31
623+  944C A7           	and a
624+  944D ED 42        	sbc hl,bc
625+  944F 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
626+  9452 21 C3 85     	ld hl,Ctrl_0
627+  9455 CB CE        	set 1,(hl)
628+  9457 C9           	ret
629+  9458
630+  9458              ; ---------- ---------- ---------- ---------- ---------- ----------
631+  9458
632+  9458 24           Reaparece_abajo inc h
633+  9459 01 E0 17     	ld bc,$17e0
634+  945C A7           	and a
635+  945D ED 4A        	adc hl,bc
636+  945F 22 98 85     	ld (Posicion_actual),hl
637+  9462 21 C3 85     	ld hl,Ctrl_0
638+  9465 CB D6        	set 2,(hl)
639+  9467 C9           	ret
640+  9468
641+  9468              ; ---------- ---------- ---------- ---------- ---------- ----------
642+  9468
643+  9468              Reaparece_arriba
644+  9468
645+  9468 18 FE        	jr $
646+  946A
647+  946A 01 E0 17     	ld bc,$17e0
648+  946D A7           	and a
649+  946E ED 42        	sbc hl,bc
650+  9470 22 98 85     	ld (Posicion_actual),hl
651+  9473 21 C3 85     	ld hl,Ctrl_0
652+  9476 CB DE        	set 3,(hl)
653+  9478 C9           	ret
654+  9479
655+  9479              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
656+  9479
657+  9479 2A A8 85     Reinicio ld hl,(Posicion_inicio)
658+  947C 22 98 85     	ld (Posicion_actual),hl
659+  947F C9           	ret
# file closed: Direcciones.asm
878   9480              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9480              ; ------------------------------------------------------------------------
  2+  9480              ;
  3+  9480              ;	28/03/23
  4+  9480              ;
  5+  9480              ;	Proporciona las coordenadas del objeto a imprimir.
  6+  9480              ;	Fila superior "0", Columna izquierda "0".
  7+  9480              ;
  8+  9480              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  9+  9480              ;
 10+  9480              ;	Modifica: A,BC y DE.
 11+  9480
 12+  9480 C5           Genera_coordenadas push bc
 13+  9481 E5           	push hl
 14+  9482 2A 98 85     	ld hl,(Posicion_actual)
 15+  9485 7D           	ld a,l
 16+  9486 E6 1F        	and $1f
 17+  9488 32 9C 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
 18+  948B CD 52 91     	call calcula_tercio
 19+  948E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
 20+  948F 1E 00        	ld e,0
 21+  9491 7D           	ld a,l
 22+  9492 E6 E0        	and $e0
 23+  9494 28 01        	jr z,1F
 24+  9496 04           	inc b
 25+  9497 1C           1 inc e
 26+  9498 D6 20        	sub 32
 27+  949A 20 FB        	jr nz,1B
 28+  949C 10 F9        	djnz 1B
 29+  949E 7B           	ld a,e
 30+  949F 32 9D 85     	ld (Coordenada_y),a
 31+  94A2 E1           	pop hl
 32+  94A3 C1           	pop bc
 33+  94A4 C9           	ret
 34+  94A5
 35+  94A5              ; ------------------------------------------------------------------------
 36+  94A5              ;	28/03/23
 37+  94A5              ;
 38+  94A5              ;	Proporciona las coordenadas del disparo a imprimir.
 39+  94A5              ;	Fila superior "0", Columna izquierda "0".
 40+  94A5              ;
 41+  94A5              ;	Input: HL contendrá la posición del proyectil en pantalla.
 42+  94A5              ;	Output: DE contendrá las coordenadas del disparo:
 43+  94A5              ;
 44+  94A5              ;		DE="$120d"
 45+  94A5              ;
 46+  94A5              ;		D, (Coordenada_X), Columnas, $12
 47+  94A5              ;		E, (Coordenada_y), Filas, $0d
 48+  94A5              ;
 49+  94A5              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
 50+  94A5
 51+  94A5              ;	Modifica: A,BC y DE.
 52+  94A5
 53+  94A5
 54+  94A5              Genera_coordenadas_disparo
 55+  94A5
 56+  94A5              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
 57+  94A5
 58+  94A5 7D           	ld a,l
 59+  94A6 E6 1F        	and $1f
 60+  94A8 57           	ld d,a 												; Columnas en D. Coordenada_X.
 61+  94A9 CD 52 91     	call calcula_tercio
 62+  94AC 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 63+  94AD 1E 00        	ld e,0
 64+  94AF 7D           	ld a,l
 65+  94B0 E6 E0        	and $e0
 66+  94B2 28 01        	jr z,1F
 67+  94B4 04           	inc b
 68+  94B5 1C           1 inc e
 69+  94B6 D6 20        	sub 32
 70+  94B8 20 FB        	jr nz,1B
 71+  94BA 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
 72+  94BC C9           	ret
 73+  94BD
# file closed: Genera_coordenadas.asm
879   94BD              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  94BD
  2+  94BD
  3+  94BD              ;   11/8/22
  4+  94BD              ;
  5+  94BD              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  94BD              ;
  7+  94BD              ;   Mov_obj.asm
  8+  94BD              ;
  9+  94BD              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  94BD              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  94BD              ;
 12+  94BD              ;   Codificación:
 13+  94BD              ;
 14+  94BD              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  94BD
 16+  94BD              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  94BD
 18+  94BD 02 40 00     Arriba db 2,%01000000,0
 19+  94C0 02 80 00     Abajo db 2,%10000000,0
 20+  94C3 02 20 00     Derecha db 2,%00100000,0
 21+  94C6 02 10 00     Izquierda db 2,%00010000,0
 22+  94C9 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  94CD 60 42 60 40
 22+  94D1 63
 23+  94D2 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  94D6 22 A3 80 A0
 24+  94DA 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  94DE 84 A0 83 A0
 25+  94E2 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  94E6 80 A3 22 A0
 26+  94EA 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  94EE 40 60 42 60
 27+  94F2 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  94F6
 29+  94F6 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 30+  94FA 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 31+  94FE 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
 31+  9502 84 00
 32+  9504 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 32+  9508 84 00
 33+  950A 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 34+  950E 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  9512 1F 1F 1F 1F
 35+  9516 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 35+  951A 1F 1F 1F 1F
 35+  951E 1F
 36+  951F 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 36+  9523 2F 2F 2F 2F
 36+  9527 2F 2F
 37+  9529 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 37+  952D 2F 2F 00
 38+  9530
 39+  9530              ; ----- ----- ----- ----- -----
 40+  9530
 41+  9530 0E 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  9532 0A 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9534 C6 94        Indice_mov_Izquierda defw Izquierda
 44+  9536 C3 94        Indice_mov_Derecha defw Derecha
 45+  9538 C0 94        Indice_mov_Abajo defw Abajo
 46+  953A BD 94        Indice_mov_Arriba defw Arriba
 47+  953C FA 94        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  953E FE 94        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  9540 F6 94        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  9542 04 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9544 C9 94        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9546              ; ----- ----- ----- ----- -----
 53+  9546
 54+  9546 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9549 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  954A 28 02            jr z,1F
 57+  954C 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  954E 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  9551 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  9553 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9556              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9556 2A C7 85         ld hl,(Puntero_mov)
 63+  9559 7E               ld a,(hl)
 64+  955A 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  955D 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  955E 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  9561
 68+  9561 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  9564 A7               and a
 70+  9565 20 0C            jr nz,12F
 71+  9567 2A C7 85         ld hl,(Puntero_mov)
 72+  956A 7E               ld a,(hl)
 73+  956B A7               and a
 74+  956C 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  956E E6 0F            and $0f
 76+  9570 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  9573              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  9573 2A C7 85     12 ld hl,(Puntero_mov)
 79+  9576 CB 7E            bit 7,(hl)
 80+  9578 28 03            jr z,2F
 81+  957A CD 70 91         call Mov_down
 82+  957D 2A C7 85     2 ld hl, (Puntero_mov)
 83+  9580 CB 76            bit 6,(hl)
 84+  9582 28 03            jr z,3F
 85+  9584 CD 9E 91         call Mov_up
 86+  9587 2A C7 85     3 ld hl, (Puntero_mov)
 87+  958A CB 6E            bit 5,(hl)
 88+  958C 28 03            jr z,4F
 89+  958E CD CC 91         call Mov_right
 90+  9591 2A C7 85     4 ld hl, (Puntero_mov)
 91+  9594 CB 66            bit 4,(hl)
 92+  9596 28 03            jr z,5F
 93+  9598 CD EA 92         call Mov_left
 94+  959B
 95+  959B              ; ---------- --------- --------- ---------- ----------
 96+  959B
 97+  959B 3A CB 85     5 ld a,(Repetimos_db)
 98+  959E A7               and a
 99+  959F 28 07            jr z,6F
100+  95A1 3D               dec a
101+  95A2 32 CB 85         ld (Repetimos_db),a
102+  95A5 28 01            jr z,6f
103+  95A7 C9           11 ret
104+  95A8 21 C9 85     6 ld hl,Contador_db_mov
105+  95AB 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  95AC 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  95AF 23               inc hl
108+  95B0 22 C7 85         ld (Puntero_mov),hl
109+  95B3 18 F2            jr 11B
110+  95B5 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  95B8 3A CA 85         ld a,(Incrementa_puntero)
112+  95BB 47               ld b,a
113+  95BC 23           8 inc hl
114+  95BD 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  95BF 5E               ld e,(hl)
116+  95C0 23               inc hl
117+  95C1 56               ld d,(hl)
118+  95C2 EB               ex de,hl
119+  95C3 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  95C6 18 DF            jr 11B
121+  95C8
122+  95C8              ; ---------- --------- --------- ---------- ----------
123+  95C8              ;
124+  95C8              ;   11/8/22
125+  95C8              ;
126+  95C8              ;   Prepara_Puntero_mov
127+  95C8
128+  95C8 E5           Prepara_Puntero_mov push hl
129+  95C9 D5               push de
130+  95CA 2A C5 85         ld hl,(Puntero_indice_mov)
131+  95CD 5E               ld e,(hl)
132+  95CE 23               inc hl
133+  95CF 56               ld d,(hl)
134+  95D0 EB               ex de,hl
135+  95D1 22 C7 85         ld (Puntero_mov),hl
136+  95D4 D1               pop de
137+  95D5 E1               pop hl
138+  95D6 C9               ret
139+  95D7
140+  95D7              ; ---------- --------- --------- ---------- ----------
141+  95D7              ;
142+  95D7              ;   11/8/22
143+  95D7              ;
144+  95D7              ;   Reinicia_el_movimiento
145+  95D7
146+  95D7 CD C8 95     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  95DA AF               xor a
148+  95DB 32 C9 85         ld (Contador_db_mov),a
149+  95DE 32 CA 85         ld (Incrementa_puntero),a
150+  95E1 C3 46 95         jp Movimiento
151+  95E4 C9               ret
152+  95E5              ; ---------- --------- --------- ---------- ----------
153+  95E5
154+  95E5
155+  95E5
156+  95E5
157+  95E5
158+  95E5
159+  95E5
160+  95E5
161+  95E5
162+  95E5
163+  95E5
164+  95E5
165+  95E5
166+  95E5
167+  95E5
168+  95E5
169+  95E5
170+  95E5
# file closed: Patrones_de_mov.asm
880   95E5              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  95E5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  95E5              ;
  3+  95E5              ;	3/1/23
  4+  95E5              ;
  5+  95E5              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  95E5
  7+  95E5              ;	ADC HL,SP	LD (addr),SP
  8+  95E5              ;	ADD HL,SP	LD SP,(addr)
  9+  95E5              ;	ADD IX,SP	LD SP,nn
 10+  95E5              ; 	ADD IY,SP	LD SP,HL
 11+  95E5              ;				LD SP,IX
 12+  95E5              ;	DEC SP		LD SP,IY
 13+  95E5
 14+  95E5              ;	EX (SP),HL
 15+  95E5              ;	EX (SP),IX
 16+  95E5              ;	EX (SP),IY
 17+  95E5
 18+  95E5              ;	INC SP
 19+  95E5
 20+  95E5
 21+  95E5                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
881   7FD4
882   7FD4              	SAVESNA "Pruebas.sna", START
883   7FD4
884   7FD4
885   7FD4
# file closed: Banco_de_pruebas.asm
