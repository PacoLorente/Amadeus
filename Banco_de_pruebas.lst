# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2E 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD E2 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD DE 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD EE 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4
 183  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 185  8BC6
 186  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BC6
 188  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BC7
 194  8BC7 00           Ctrl_2 db 0
 195  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC8              ;
 203  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC8              ;														BIT 4, ???
 209  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC8
 211  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC9              ;
 217  8BC9              ; 														DESCRIPCIÖN:
 218  8BC9              ;
 219  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC9              ;
 233  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC9
 237  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC9
 239  8BC9 00           Filas db 0												; Filas. [DRAW]
 240  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BCF
 244  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BCF
 246  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BD0
 250  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BD0
 252  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BD0              ;
 254  8BD0              ;	COLORES: 0 ..... NEGRO
 255  8BD0              ;    		 1 ..... AZUL
 256  8BD0              ; 			 2 ..... ROJO
 257  8BD0              ;			 3 ..... MAGENTA
 258  8BD0              ; 			 4 ..... VERDE
 259  8BD0              ; 			 5 ..... CIAN
 260  8BD0              ;			 6 ..... AMARILLO
 261  8BD0              ; 			 7 ..... BLANCO
 262  8BD0
 263  8BD0 00 00        Indice_Sprite_der defw 0
 264  8BD2 00 00        Indice_Sprite_izq defw 0
 265  8BD4 00 00        Puntero_DESPLZ_der defw 0
 266  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD8
 268  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BDB 00           Columnas db 0
 271  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDF
 275  8BDF              ; variables de control general.
 276  8BDF
 277  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BE0
 279  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BE0
 281  8BE0              Perfiles_de_velocidad
 282  8BE0
 283  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BE4
 288  8BE4              ; Contadores de 16 bits.
 289  8BE4
 290  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BEC
 295  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BEC
 297  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BF2              ;
 301  8BF2              ;
 302  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BF3 00           Incrementa_puntero_backup db 0
 306  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF8              ;
 312  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF8              ;
 316  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF8              ;
 321  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF8
 325  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF9
 327  8BF9              ;														DESCRIPCIÓN:
 328  8BF9              ;
 329  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF9
 336  8BF9              ;														BIT 3, Recarga de nueva oleada.
 337  8BF9              ;														BIT 4, Recarga de nueva oleada.
 338  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF9              ;														BIT 6, **** Frame completo.
 340  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF9
 342  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BFB
 347  8BFB              ; Gestión de ENTIDADES y CAJAS.
 348  8BFB
 349  8BFB 00 00        Puntero_store_caja defw 0
 350  8BFD 00 00        Puntero_restore_caja defw 0
 351  8BFF 00 00        Indice_restore_caja defw 0
 352  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8C04
 356  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C08              ;														; _ puntero (Indice_entidades).
 359  8C08
 360  8C08              ;---------------------------------------------------------------------------------------------------------------
 361  8C08              ;
 362  8C08              ;	31/08/24
 363  8C08              ;
 364  8C08              ;	Álbumes.
 365  8C08
 366  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C0A              ;														; _variable para almacenar lo posición del puntero_
 368  8C0A              ; 														; _de pila, SP.
 369  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C0C
 372  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C0C
 374  8C0C 00 00        Album_de_pintado defw 0
 375  8C0E 00 00        Album_de_borrado defw 0
 376  8C10 00 00        Album_de_pintado_Amadeus defw 0
 377  8C12 00 00        Album_de_borrado_Amadeus defw 0
 378  8C14 00 00        Album_de_pintado_disparos defw 0
 379  8C16 00 00        Album_de_borrado_disparos defw 0
 380  8C18
 381  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C1A 00           Num_de_bytes_album_de_disparos db 0
 383  8C1B 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C1C
 385  8C1C 02           Numero_de_disparos_de_Amadeus db 2						; Inicialmente disponemos de 2 disparos.
 386  8C1D 00           Numero_de_disparos_de_entidades db 0
 387  8C1E
 388  8C1E 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 389  8C1F              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 390  8C1F
 391  8C1F 00 00        Puntero_rancio_disparos_album defw 0
 392  8C21
 393  8C21 00 00        Techo_Scanlines_album defw 0
 394  8C23 00 00        Techo_Scanlines_album_2 defw 0
 395  8C25 00           Switch db 0
 396  8C26 00 00        Techo defw 0
 397  8C28 00 00        Scanlines_album_SP defw 0
 398  8C2A 00 89        India_SP defw Tabla_de_pintado
 399  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 400  8C2E
 401  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 402  8C2F              ;
 403  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 404  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 405  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 406  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 407  8C2F              ;																Habilita el borrado/pintado de sprites.
 408  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 409  8C2F              ;																_ a la baja.
 410  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 411  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 412  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 413  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 414  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 415  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 416  8C2F
 417  8C2F 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 418  8C30              ;
 419  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 420  8C30              ;
 421  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 422  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 423  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 424  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 425  8C30              ;
 426  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 427  8C30              ;															_ masticados ya generados.
 428  8C30              ;
 429  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 430  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 431  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 432  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 433  8C30
 434  8C30 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 435  8C31              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 436  8C31              ; Gestión de Disparos.
 437  8C31
 438  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 440  8C35
 441  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 442  8C36
 443  8C36              ;
 444  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 445  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 446  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 447  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 448  8C36
 449  8C36
 450  8C36
 451  8C36
 452  8C36
 453  8C36
 454  8C36
 455  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 456  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 457  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 458  8C38
 459  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 460  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 461  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 462  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 463  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 465  8C40
 466  8C40              ;---------------------------------------------------------------------------------------------------------------
 467  8C40
 468  8C40              ; Relojes y temporizaciones.
 469  8C40
 470  8C40 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 471  8C41 05           Clock_explosion_Amadeus db 5
 472  8C42 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 473  8C43
 474  8C43 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 475  8C45
 476  8C45 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 477  8C47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 478  8C48              ;														; Repite la oleada de entidades.
 479  8C48
 480  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 481  8C48              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 482  8C48              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 483  8C48              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 484  8C48
 485  8C48              ;---------------------------------------------------------------------------------------------------------------
 486  8C48
 487  8C48              ; Gestión de NIVELES.
 488  8C48
 489  8C48 00           Nivel db 0												; Nivel actual del juego.
 490  8C49 00 00        Puntero_indice_NIVELES defw 0
 491  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 492  8C4D              ; 														; _ que definen el NIVEL.
 493  8C4D
 494  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 495  8C4D
 496  8C4D              ; Temporizaciones Shield.
 497  8C4D
 498  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 499  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 500  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 501  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 502  8C55 00           Shield_3 db 0
 503  8C56
 504  8C56 06           Lives db 6
 505  8C57
 506  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 507  8C57              ;
 508  8C57              ;	5/1/24
 509  8C57
 510  8C57              START
 511  8C57
 512  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 513  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 514  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 515  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 516  8C60 F3           	DI
 517  8C61
 518  8C61              ; Limpiamos pantalla.
 519  8C61
 520  8C61 3E 07        	ld a,%00000111
 521  8C63              ;	call Cls
 522  8C63 CD D3 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 523  8C66
 524  8C66              ; INICIALIZACIÓN.
 525  8C66
 526  8C66 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 527  8C68 CD 20 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 528  8C6B CD 63 8E     	call Extrae_numero_aleatorio_y_avanza
 529  8C6E
 530  8C6E 6F           	ld l,a
 531  8C6F 26 00        	ld h,0
 532  8C71 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 533  8C74
 534  8C74              ;	Inicializa 1er Nivel.
 535  8C74
 536  8C74 21 97 8B     	ld hl,Indice_de_niveles
 537  8C77 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 538  8C7A CD 50 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 539  8C7D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 540  8C7D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 541  8C7D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 542  8C7D
 543  8C7D              ;	Inicia los álbumes de líneas.
 544  8C7D
 545  8C7D CD 1C 90     	call Inicia_albumes_de_lineas
 546  8C80              ;
 547  8C80 CD 2C 90     	call Inicia_albumes_de_lineas_Amadeus
 548  8C83 CD 39 90     	call Inicia_albumes_de_disparos
 549  8C86
 550  8C86
 551  8C86 CD 95 92     4 call Inicia_Entidades
 552  8C89 CD F8 92     	call Inicia_Amadeus
 553  8C8C
 554  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 555  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 556  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 557  8C8C
 558  8C8C 11 70 89     	ld de,Amadeus_BOX
 559  8C8F CD 4B 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 560  8C92 CD 3B 93     	call Limpiamos_bandeja_DRAW
 561  8C95
 562  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 563  8C95
 564  8C95 06 3C        	ld b,60
 565  8C97 CD 1D 9D     2 call Amadeus_a_izquierda
 566  8C9A 10 FB        	djnz 2B
 567  8C9C
 568  8C9C CD FA 8F     	call Genera_datos_de_impresion_Amadeus
 569  8C9F
 570  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 571  8C9F
 572  8C9F CD 4C 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 573  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 574  8CA2
 575  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 576  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 577  8CA2
 578  8CA2              ;	ld a,(Ctrl_1)
 579  8CA2              ;	bit 3,a
 580  8CA2              ;	jr nz,5F											 ; Loop
 581  8CA2
 582  8CA2              ;	ld de,Amadeus_db
 583  8CA2              ;	call Store_Amadeus
 584  8CA2
 585  8CA2              ; 	INICIA DISPAROS !!!!!
 586  8CA2
 587  8CA2 CD 62 90     	call Inicia_Puntero_Disparo_Entidades
 588  8CA5 CD 69 90     	call Inicia_Puntero_Disparo_Amadeus
 589  8CA8
 590  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CA8
 592  8CA8              ;5 call Inicia_punteros_de_cajas
 593  8CA8              ;	call Restore_entidad
 594  8CA8
 595  8CA8              ;	ld a,(Ctrl_1)
 596  8CA8              ;	bit 3,a
 597  8CA8              ;	jr z,6F
 598  8CA8
 599  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CA8
 601  8CA8              ;	ld hl,Ctrl_1
 602  8CA8              ;	res 3,(hl)
 603  8CA8              ;	jr Main
 604  8CA8
 605  8CA8              ; Damos por concluida la construcción del FRAME.
 606  8CA8              ;
 607  8CA8
 608  8CA8 CD DE 90     	call Inicia_Shield
 609  8CAB
 610  8CAB
 611  8CAB 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 612  8CAE 22 21 8C     	ld (Techo_Scanlines_album),hl
 613  8CB1
 614  8CB1 2A 0E 8C     	ld hl,(Album_de_borrado)
 615  8CB4 22 28 8C     	ld (Scanlines_album_SP),hl
 616  8CB7
 617  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 618  8CBA 22 2A 8C     	ld (India_SP),hl
 619  8CBD
 620  8CBD 21 2E 8C     	ld hl,Ctrl_3
 621  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CC2 CB D6        	set 2,(hl)
 623  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CC6
 625  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CC7
 627  8CC7 76           	halt
 628  8CC8
 629  8CC8              ; ------------------------------------
 630  8CC8
 631  8CC8              Main
 632  8CC8              ;
 633  8CC8              ; 22/08/24
 634  8CC8
 635  8CC8              ; Gestión de disparos.
 636  8CC8
 637  8CC8 CD 04 9F     	call Limpia_album_de_borrado_disparos
 638  8CCB CD 45 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 639  8CCE CD 47 9F     	call Motor_Disparos
 640  8CD1
 641  8CD1              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 642  8CD1              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 643  8CD1              ; Este hecho lo indica el bit2 de (Impacto2).
 644  8CD1
 645  8CD1 CD 57 A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 646  8CD4
 647  8CD4 2A 45 8C     16 ld hl,(Clock_next_entity)
 648  8CD7 ED 4B 78 5C  	ld bc,(FRAMES)
 649  8CDB A7           	and a
 650  8CDC ED 42        	sbc hl,bc
 651  8CDE 20 16        	jr nz,11F
 652  8CE0
 653  8CE0              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 654  8CE0              ; _ (Clock_next_entity) para la siguiente entidad.
 655  8CE0
 656  8CE0 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 657  8CE3 47           	ld b,a
 658  8CE4 3A 03 8C     	ld a,(Entidades_en_curso)
 659  8CE7 B8           	cp b
 660  8CE8 28 0C        	jr z,11F
 661  8CEA 30 0A        	jr nc,11F
 662  8CEC
 663  8CEC 3C           	inc a
 664  8CED 32 03 8C     	ld (Entidades_en_curso),a
 665  8CF0
 666  8CF0              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 667  8CF0
 668  8CF0 CD 63 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 669  8CF3 CD 7F 8E     	call Define_Clock_next_entity
 670  8CF6
 671  8CF6 3A 03 8C     11 ld a,(Entidades_en_curso)
 672  8CF9 A7           	and a
 673  8CFA CA 6D 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 674  8CFD 47           	ld b,a												; No hay entidades que gestionar.
 675  8CFE
 676  8CFE              ; ( Código que ejecutamos con cada entidad: ).
 677  8CFE
 678  8CFE              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 679  8CFE              ;
 680  8CFE              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 681  8CFE
 682  8CFE 21 00 89     	ld hl,Tabla_de_pintado
 683  8D01 22 2A 8C     	ld (India_SP),hl
 684  8D04
 685  8D04 21 2E 8C     	ld hl,Ctrl_3
 686  8D07 CB D6        	set 2,(hl)
 687  8D09 CD 1A 8E     	call Change
 688  8D0C
 689  8D0C C5           15 push bc 												; Nº de entidades en curso.
 690  8D0D
 691  8D0D CD AB 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 692  8D10 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 693  8D14
 694  8D14              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 695  8D14
 696  8D14              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 697  8D14              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 698  8D14
 699  8D14 3A 35 8C     	ld a,(Impacto2)
 700  8D17 CB 5F        	bit 3,a
 701  8D19 C4 CA 9E     	call nz,Compara_con_coordenadas_de_disparo
 702  8D1C
 703  8D1C 3A BF 8B     	ld a,(Impacto)
 704  8D1F CB 4F        	bit 1,a
 705  8D21 C4 BB 91     	call nz,Genera_explosion
 706  8D24 20 2A        	jr nz,Gestiona_siguiente_entidad
 707  8D26
 708  8D26 3A BF 8B     	ld a,(Impacto)
 709  8D29 A7           	and a
 710  8D2A 28 0C        	jr z,8F
 711  8D2C
 712  8D2C              ; IMPACTO en entidad por colisión con Amadeus.
 713  8D2C
 714  8D2C              ; 5/7/24
 715  8D2C              ; Nota importante:
 716  8D2C              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 717  8D2C              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 718  8D2C              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 719  8D2C
 720  8D2C 3A 74 89     	ld a,(Impacto_Amadeus)
 721  8D2F A7           	and a
 722  8D30 C4 BB 91     	call nz,Genera_explosion
 723  8D33 20 1B        	jr nz,Gestiona_siguiente_entidad
 724  8D35
 725  8D35              ; Falsa colisión !!!
 726  8D35
 727  8D35 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 728  8D38
 729  8D38              ; -------------------------------------------
 730  8D38
 731  8D38 CD C3 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 732  8D3B CD FA 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 733  8D3E CD B3 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 734  8D41 CD BB 94     	call Genera_datos_de_impresion
 735  8D44 CD 5E 93     	call Decrementa_Contador_de_mov_masticados
 736  8D47
 737  8D47              ; -------------------------------------------
 738  8D47
 739  8D47              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 740  8D47
 741  8D47 2A C0 8B     	ld hl,(Puntero_de_impresion)
 742  8D4A CD 8F 94     	call Genera_coordenadas
 743  8D4D
 744  8D4D CD D5 A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 745  8D50
 746  8D50              Gestiona_siguiente_entidad
 747  8D50
 748  8D50 CD 30 93      	call Store_Restore_cajas
 749  8D53 C1           	pop bc
 750  8D54 10 B6        	djnz 15B
 751  8D56
 752  8D56              ; Hemos gestionado todas las entidades.
 753  8D56
 754  8D56              ;	Restaura pepinasso de Amadeus a BIXO !!!!!!!
 755  8D56
 756  8D56              ;	ld hl,Impacto2
 757  8D56              ;	res 3,(hl)																; Deshabilitamos el FLAG de "Impacto" en disparos de Amadeus.
 758  8D56              ;																			; Vuelta a empezar.
 759  8D56              ;	ld hl,Coordenadas_disparo_certero
 760  8D56              ;	xor a
 761  8D56              ;	ld (hl),a
 762  8D56              ;	inc hl
 763  8D56              ;	ld (hl),a
 764  8D56
 765  8D56              ; ----- ----- -----
 766  8D56
 767  8D56 CD D7 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 768  8D59 CD EE 8E     	call Ordena_tabla_de_impresion
 769  8D5C CD 4C 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 770  8D5F
 771  8D5F              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 772  8D5F              ; Hemos gestionado todas las unidades.
 773  8D5F              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 774  8D5F
 775  8D5F              ;	ld hl,Ctrl_1
 776  8D5F              ;	res 2,(hl)
 777  8D5F
 778  8D5F CD 94 8E     	call Borra_diferencia
 779  8D62
 780  8D62 3A 2E 8C     	ld a,(Ctrl_3)
 781  8D65 CB 5F        	bit 3,a
 782  8D67 20 04        	jr nz,Gestion_de_Amadeus
 783  8D69
 784  8D69 EB           	ex de,hl
 785  8D6A 71           	ld (hl),c
 786  8D6B 2C           	inc l
 787  8D6C 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 788  8D6D
 789  8D6D
 790  8D6D              ;! GESTIONA AMADEUS !!!!!!!!!!
 791  8D6D
 792  8D6D              Gestion_de_Amadeus
 793  8D6D
 794  8D6D 21 2E 8C     	ld hl,Ctrl_3
 795  8D70 CB 76        	bit 6,(hl)
 796  8D72 28 13        	jr z,Amadeus_vivo
 797  8D74
 798  8D74              ; Amadeus ha sido destruido.
 799  8D74              ; Decrementa (Temp_new_live).
 800  8D74
 801  8D74 21 42 8C     	ld hl,Temp_new_live
 802  8D77 35           	dec (hl)
 803  8D78 20 26        	jr nz,End_frame
 804  8D7A
 805  8D7A              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 806  8D7A
 807  8D7A 21 56 8C     	ld hl,Lives
 808  8D7D 35           	dec (hl)
 809  8D7E
 810  8D7E              ;! Fin del juego
 811  8D7E
 812  8D7E F3           	di
 813  8D7F 28 FE        	jr z,$
 814  8D81 FB           	ei
 815  8D82
 816  8D82              ; Nueva nave.
 817  8D82
 818  8D82 CD C0 8D     	call Reinicia_Amadeus
 819  8D85 18 19        	jr End_frame
 820  8D87
 821  8D87              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 822  8D87
 823  8D87              Amadeus_vivo
 824  8D87
 825  8D87 3A 74 89     	ld a,(Impacto_Amadeus)
 826  8D8A A7           	and a
 827  8D8B C4 EB 91     	call nz, Genera_explosion_Amadeus
 828  8D8E 20 10        	jr nz, End_frame
 829  8D90
 830  8D90 CD 98 91     	call Teclado
 831  8D93
 832  8D93 21 2E 8C     	ld hl,Ctrl_3
 833  8D96 CB 6E        	bit 5,(hl)
 834  8D98 28 06        	jr z,End_frame
 835  8D9A
 836  8D9A              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 837  8D9A
 838  8D9A CD 35 8E     	call Change_Amadeus
 839  8D9D CD FA 8F     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 840  8DA0
 841  8DA0              End_frame
 842  8DA0
 843  8DA0              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 844  8DA0              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 845  8DA0
 846  8DA0 CD 13 A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 847  8DA3 CD 20 9F     	call Calcula_bytes_pintado_disparos
 848  8DA6 CD 2D 9F     	call Limpia_album_de_pintado_disparos
 849  8DA9
 850  8DA9              ; ------------ ------------- --------------
 851  8DA9
 852  8DA9 2A 0E 8C     	ld hl,(Album_de_borrado)
 853  8DAC 22 28 8C     	ld (Scanlines_album_SP),hl
 854  8DAF
 855  8DAF 21 2E 8C     	ld hl,Ctrl_3
 856  8DB2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 857  8DB4 CB 9E        	res 3,(hl)
 858  8DB6 CB A6        	res 4,(hl)
 859  8DB8
 860  8DB8 AF           	xor a
 861  8DB9 D3 FE        	out ($fe),a
 862  8DBB
 863  8DBB 76           	halt
 864  8DBC
 865  8DBC              ; ----------------------------------------
 866  8DBC
 867  8DBC              ;	ld a,(Ctrl_1) 										; Existe Loop?
 868  8DBC              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 869  8DBC CA C8 8C     	jp z,Main
 870  8DBF
 871  8DBF              ; RECARGA DE NUEVA OLEADA.
 872  8DBF
 873  8DBF              ;	ld a,(Contador_de_frames)
 874  8DBF              ;	ld b,a
 875  8DBF              ;	ld a,(Activa_recarga_cajas)
 876  8DBF              ;	cp b
 877  8DBF              ;	jr z,20F
 878  8DBF
 879  8DBF              ;	ld hl,Ctrl_1
 880  8DBF              ;	set 4,(hl)
 881  8DBF              ;	jp Main
 882  8DBF
 883  8DBF              ;20 ld hl,Ctrl_1
 884  8DBF              ;	res 4,(hl)
 885  8DBF
 886  8DBF              ;	ld a,(Contador_de_frames)
 887  8DBF
 888  8DBF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 889  8DBF              ;! _ IMPREDECIBLE !!!!
 890  8DBF
 891  8DBF              ;	add 10
 892  8DBF              ;	ld (Clock_next_entity),a
 893  8DBF
 894  8DBF              ;	jp 4B
 895  8DBF
 896  8DBF C9           	ret
 897  8DC0
 898  8DC0              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 899  8DC0              ;
 900  8DC0              ;	16/11/23
 901  8DC0
 902  8DC0              ;;Gestiona_Amadeus
 903  8DC0
 904  8DC0              ;! Activa/desactiva impacto con Amadeus.
 905  8DC0
 906  8DC0              ;	ld a,(Impacto)
 907  8DC0              ;	and a
 908  8DC0              ;	jr nz,2F
 909  8DC0
 910  8DC0              ;;	call Mov_Amadeus
 911  8DC0
 912  8DC0              ;;2 ld a,(Ctrl_0)
 913  8DC0              ;;	bit 4,a
 914  8DC0              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 915  8DC0
 916  8DC0              ;;	call Guarda_foto_entidad_a_pintar
 917  8DC0              ;;	call Guarda_datos_de_borrado_Amadeus
 918  8DC0
 919  8DC0              ;;1 ld hl,Ctrl_0
 920  8DC0              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 921  8DC0
 922  8DC0              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 923  8DC0
 924  8DC0              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 925  8DC0
 926  8DC0              ;	call Calcula_numero_de_disparotes
 927  8DC0
 928  8DC0              ;;	ret
 929  8DC0
 930  8DC0              ; -----------------------------
 931  8DC0              ;
 932  8DC0              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 933  8DC0              ;
 934  8DC0              ;	INPUTS: B a de estar a "0".
 935  8DC0
 936  8DC0              ;Prepara_Borra_sprites
 937  8DC0
 938  8DC0              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 939  8DC0              ;	ld a,l
 940  8DC0              ;	ret z
 941  8DC0
 942  8DC0              ;	srl a
 943  8DC0
 944  8DC0              ;2 sub 16
 945  8DC0              ;	jr z,1F
 946  8DC0              ;	inc b
 947  8DC0              ;	jr 2B
 948  8DC0
 949  8DC0              ;1 inc b
 950  8DC0
 951  8DC0              ;	exx
 952  8DC0              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 953  8DC0              ;	exx
 954  8DC0
 955  8DC0              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 956  8DC0              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 957  8DC0
 958  8DC0              ;	ret
 959  8DC0
 960  8DC0              ; --------------------------------------------------------------------------------------------------------------
 961  8DC0              ;
 962  8DC0              ;	15/12/23
 963  8DC0
 964  8DC0              ;Mov_obj
 965  8DC0
 966  8DC0              ;	ld a,(Ctrl_2)
 967  8DC0              ;	bit 1,a
 968  8DC0              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 969  8DC0
 970  8DC0              ; Explosión:
 971  8DC0
 972  8DC0              ;	ld a,(Frames_explosion)
 973  8DC0              ;	and a
 974  8DC0              ;	jr nz,4F
 975  8DC0
 976  8DC0              ;!  Una alimaña menos!!!!!!!!!1
 977  8DC0
 978  8DC0              ; Se trataba de una Entidad_guía ???
 979  8DC0
 980  8DC0              ;	ld a,(Ctrl_2)
 981  8DC0              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 982  8DC0              ;	jr z,5F
 983  8DC0
 984  8DC0              ;	ld hl,Ctrl_3
 985  8DC0              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 986  8DC0
 987  8DC0              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 988  8DC0              ;!! _generado puede ser distinto, (aletoriedad).
 989  8DC0
 990  8DC0              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 991  8DC0              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 992  8DC0              ;	dec (hl)
 993  8DC0              ;	ld hl,Entidades_en_curso
 994  8DC0              ;	dec (hl)
 995  8DC0              ;	ld hl,Numero_de_entidades
 996  8DC0              ;	dec (hl)
 997  8DC0              ;	jr 3F
 998  8DC0
 999  8DC0              ; -----
1000  8DC0
1001  8DC0              ;	`Movemos´ la explosión.
1002  8DC0
1003  8DC0              ;4 ld hl,(Puntero_DESPLZ_der)
1004  8DC0              ;	inc hl
1005  8DC0              ;	inc hl
1006  8DC0              ;	call Extrae_address
1007  8DC0              ;;	ld (Puntero_objeto),hl
1008  8DC0
1009  8DC0              ;;	ld hl,Frames_explosion
1010  8DC0              ;;	dec (hl)
1011  8DC0
1012  8DC0              ;;	ld hl,Ctrl_0
1013  8DC0              ;;	set 4,(hl);;
1014  8DC0
1015  8DC0              ;;	jr 3F
1016  8DC0
1017  8DC0              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1018  8DC0
1019  8DC0              ;2 xor a
1020  8DC0              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1021  8DC0
1022  8DC0              ; Movemos Entidades malignas.
1023  8DC0              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1024  8DC0
1025  8DC0              ;	ld a,(Ctrl_2)
1026  8DC0              ;	bit 5,a
1027  8DC0              ;	jr nz,8F
1028  8DC0
1029  8DC0              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1030  8DC0              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1031  8DC0              ;	jr 7F
1032  8DC0
1033  8DC0              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1034  8DC0
1035  8DC0              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1036  8DC0              ;	bit 4,a
1037  8DC0              ;	ret z
1038  8DC0
1039  8DC0              ; Ha habido desplazamiento de la entidad maligna.
1040  8DC0              ; Ha llegado a zona de AMADEUS ???
1041  8DC0
1042  8DC0              ;7 ld a,(Coordenada_y)
1043  8DC0              ;	cp $14
1044  8DC0              ;	jr c,1F
1045  8DC0
1046  8DC0              ; ---------
1047  8DC0
1048  8DC0              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1049  8DC0              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1050  8DC0
1051  8DC0              ;	di
1052  8DC0              ;	call Genera_coordenadas_X
1053  8DC0              ;	call Compara_coordenadas_X
1054  8DC0              ;	ei
1055  8DC0
1056  8DC0              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1057  8DC0
1058  8DC0              ; ---------
1059  8DC0
1060  8DC0              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1061  8DC0              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1062  8DC0              ;	call Limpia_Variables_de_borrado
1063  8DC0
1064  8DC0              ;3 ret
1065  8DC0
1066  8DC0              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1067  8DC0              ;
1068  8DC0              ;	24/07/24
1069  8DC0
1070  8DC0              Reinicia_Amadeus
1071  8DC0
1072  8DC0              ;	Reinicia posición y estado.
1073  8DC0
1074  8DC0 21 CF 50     	ld hl,$50cf
1075  8DC3 22 75 89     	ld (p.imp.amadeus),hl
1076  8DC6 21 F0 E0     	ld hl,$e0f0
1077  8DC9 22 77 89     	ld (Pamm_Amadeus),hl
1078  8DCC 21 3D 00     	ld hl,$003d
1079  8DCF 22 79 89     	ld (Comm_Amadeus),hl
1080  8DD2
1081  8DD2              ;	limpiamos el álbum de borrado.
1082  8DD2
1083  8DD2 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1084  8DD5
1085  8DD5 AF           	xor a
1086  8DD6 77           	ld (hl),a
1087  8DD7
1088  8DD7 E5           	push hl
1089  8DD8 D1           	pop de
1090  8DD9 13           	inc de
1091  8DDA
1092  8DDA 01 23 00     	ld bc,35
1093  8DDD ED B0        	ldir
1094  8DDF
1095  8DDF CD FA 8F     	call Genera_datos_de_impresion_Amadeus
1096  8DE2
1097  8DE2              ;	Reinicia temporizaciones.
1098  8DE2
1099  8DE2 CD DE 90     	call Inicia_Shield
1100  8DE5
1101  8DE5 3E 5A        	ld a,90
1102  8DE7 32 53 8C     	ld (Shield),a
1103  8DEA
1104  8DEA 3E 64        	ld a,100
1105  8DEC 32 42 8C     	ld (Temp_new_live),a
1106  8DEF
1107  8DEF              ; 	Restauramos el FLAG: Amadeus vivo.
1108  8DEF
1109  8DEF 21 2E 8C     	ld hl,Ctrl_3
1110  8DF2 CB B6        	res 6,(hl)
1111  8DF4
1112  8DF4              ;	Fuerza la impresión de la nave en el siguiente frame.
1113  8DF4
1114  8DF4 21 2E 8C      	ld hl,Ctrl_3
1115  8DF7 CB EE        	set 5,(hl)
1116  8DF9
1117  8DF9 C9           	ret
1118  8DFA
1119  8DFA              ; --------------------------------------------------------------------------------------------------------------
1120  8DFA              ;
1121  8DFA              ;	12/05/24
1122  8DFA
1123  8DFA 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1124  8DFD CB 27        	sla a
1125  8DFF 32 C6 8B     	ld (Velocidad),a
1126  8E02 E6 10        	and $10
1127  8E04 C8           	ret z
1128  8E05
1129  8E05              ; Restaura (Velocidad) a razón del nº de vueltas.
1130  8E05
1131  8E05 3A BE 8B     	ld a,(Contador_de_vueltas)
1132  8E08 CB 2F        	sra a
1133  8E0A CB 2F        	sra a
1134  8E0C 32 C6 8B     	ld (Velocidad),a
1135  8E0F
1136  8E0F 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1137  8E12 23           	inc hl
1138  8E13 23           	inc hl
1139  8E14 23           	inc hl
1140  8E15 23           	inc hl
1141  8E16 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1142  8E19
1143  8E19 C9           	ret
1144  8E1A
1145  8E1A              ; --------------------------------------------------------------------------------------------------------------
1146  8E1A              ;
1147  8E1A              ;	25/08/24
1148  8E1A
1149  8E1A              Change
1150  8E1A
1151  8E1A 3A 25 8C     	ld a,(Switch)
1152  8E1D EE 01        	xor 1
1153  8E1F 32 25 8C     	ld (Switch),a
1154  8E22 2A 0C 8C     	ld hl,(Album_de_pintado)
1155  8E25 ED 5B 0E 8C  	ld de,(Album_de_borrado)
1156  8E29 EB           	ex de,hl
1157  8E2A 22 0C 8C     	ld (Album_de_pintado),hl
1158  8E2D 22 28 8C     	ld (Scanlines_album_SP),hl
1159  8E30 ED 53 0E 8C  	ld (Album_de_borrado),de
1160  8E34 C9           	ret
1161  8E35
1162  8E35              Change_Amadeus
1163  8E35
1164  8E35 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1165  8E38 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1166  8E3C EB           	ex de,hl
1167  8E3D 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1168  8E40 ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1169  8E44 C9           	ret
1170  8E45
1171  8E45              Change_Disparos
1172  8E45
1173  8E45              ;	Exclusiones:
1174  8E45
1175  8E45 3A 1C 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1176  8E48 A7           	and a
1177  8E49 C8           	ret z
1178  8E4A
1179  8E4A              ; -----
1180  8E4A
1181  8E4A 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1182  8E4D ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1183  8E51 EB           	ex de,hl
1184  8E52 22 14 8C     	ld (Album_de_pintado_disparos),hl
1185  8E55 ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1186  8E59 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1187  8E5C
1188  8E5C 3A 1A 8C     	ld a,(Num_de_bytes_album_de_disparos)
1189  8E5F 32 1B 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1190  8E62
1191  8E62 C9           	ret
1192  8E63
1193  8E63              ; ------------------------------------
1194  8E63              ;
1195  8E63              ; 1/05/24
1196  8E63
1197  8E63              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1198  8E63              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1199  8E63
1200  8E63              ;	DESTRUYE: HL,DE,A
1201  8E63              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1202  8E63
1203  8E63              ;	Variables implicadas: (RND_SP).
1204  8E63
1205  8E63              Extrae_numero_aleatorio_y_avanza
1206  8E63
1207  8E63 21 00 89     	ld hl,Tabla_de_pintado
1208  8E66 EB           	ex de,hl
1209  8E67 2A 43 8C     	ld hl,(RND_SP)
1210  8E6A EB           	ex de,hl
1211  8E6B A7           	and a
1212  8E6C ED 52        	sbc hl,de
1213  8E6E
1214  8E6E 2A 43 8C     	ld hl,(RND_SP)
1215  8E71 20 06        	jr nz,1F
1216  8E73
1217  8E73              ; Sitúa HL al principio de la tabla de nº aleatorios.
1218  8E73
1219  8E73 21 F6 88     	ld hl,Numeros_aleatorios
1220  8E76 22 43 8C     	ld (RND_SP),HL
1221  8E79
1222  8E79              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1223  8E79
1224  8E79 7E           1 ld a,(hl)
1225  8E7A 23           	inc hl
1226  8E7B 22 43 8C     	ld (RND_SP),hl
1227  8E7E C9           	ret
1228  8E7F
1229  8E7F              ; ------------------------------------
1230  8E7F              ;
1231  8E7F              ; 1/05/24
1232  8E7F
1233  8E7F              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1234  8E7F              ; (1 a 4 segundos).
1235  8E7F              ; Actualizamos (Clock_next_entity) con A.
1236  8E7F
1237  8E7F              ;	DESTRUYE: A y B.
1238  8E7F              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1239  8E7F              ;			 Actualiza (Clock_next_entity) con A.
1240  8E7F
1241  8E7F              ;	Variables implicadas: (Clock_next_entity).
1242  8E7F
1243  8E7F              ; Notas:
1244  8E7F
1245  8E7F              ; 	$32 1 seg.
1246  8E7F              ; 	$64 2 seg.
1247  8E7F              ; 	$96 3 seg.
1248  8E7F              ; 	$c8 4 seg.
1249  8E7F              ; 	$fa 5 seg.
1250  8E7F
1251  8E7F              ; $ffff 1310,7 seg, 22 minutos.
1252  8E7F
1253  8E7F              ;	$0100  5 seg. aproximadamente.
1254  8E7F              ;	$0200 10 seg. aproximadamente.
1255  8E7F              ;	$0300 15 seg. aproximadamente.
1256  8E7F              ;	$0400 20 seg. aproximadamente.
1257  8E7F              ;	$0500 25 seg. aproximadamente.
1258  8E7F              ;	$0600 30 seg. aproximadamente.
1259  8E7F
1260  8E7F              Define_Clock_next_entity
1261  8E7F
1262  8E7F FE 34        	cp $34
1263  8E81 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1264  8E83
1265  8E83              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1266  8E83
1267  8E83 4F           3 ld c,a
1268  8E84 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1269  8E86 2A 78 5C     	ld hl,(FRAMES)
1270  8E89 A7           	and a
1271  8E8A ED 4A        	adc hl,bc
1272  8E8C 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1273  8E8F C9           	ret
1274  8E90
1275  8E90 3E 34        1 ld a,$34
1276  8E92 18 EF        	jr 3B
1277  8E94
1278  8E94              ; ------------------------------------
1279  8E94              ;
1280  8E94              ; 18/03/24
1281  8E94
1282  8E94              Borra_diferencia
1283  8E94
1284  8E94 ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1285  8E98
1286  8E98 3A 25 8C     	ld a,(Switch)
1287  8E9B A7           	and a
1288  8E9C 28 08        	jr z,2F
1289  8E9E
1290  8E9E 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1291  8EA1 11 23 8C     	ld de,Techo_Scanlines_album_2
1292  8EA4 18 06        	jr 3F
1293  8EA6
1294  8EA6 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1295  8EA9 11 21 8C     	ld de,Techo_Scanlines_album
1296  8EAC
1297  8EAC              ; Diferencia.
1298  8EAC
1299  8EAC ED 42        3 sbc hl,bc
1300  8EAE
1301  8EAE C8           	ret z
1302  8EAF D8           	ret c
1303  8EB0
1304  8EB0              ; Nuevo techo, (más bajo que el anterior).
1305  8EB0              ; Fijamos nuevo techo y borramos bytes sobrantes.
1306  8EB0
1307  8EB0 EB           	ex de,hl
1308  8EB1
1309  8EB1 71           	ld (hl),c
1310  8EB2 2C           	inc l
1311  8EB3 70           	ld (hl),b
1312  8EB4
1313  8EB4 AF           	xor a
1314  8EB5 43           	ld b,e
1315  8EB6
1316  8EB6 2A 28 8C     	ld hl,(Scanlines_album_SP)
1317  8EB9
1318  8EB9 77           1 ld (hl),a
1319  8EBA 23           	inc hl
1320  8EBB 10 FC        	djnz 1B
1321  8EBD
1322  8EBD              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1323  8EBD
1324  8EBD 21 2E 8C     	ld hl,Ctrl_3
1325  8EC0 CB DE        	set 3,(hl)
1326  8EC2
1327  8EC2 C9           	ret
1328  8EC3
1329  8EC3              ; --------------------------------------------------------------------------------------------------------------
1330  8EC3              ;
1331  8EC3              ;	26/3/24
1332  8EC3
1333  8EC3              Recauda_informacion_de_entidad_en_curso
1334  8EC3
1335  8EC3              ; Almacena la Coordenada Y de la entidad en curso.
1336  8EC3
1337  8EC3              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1338  8EC3
1339  8EC3 3A BD 8B     	ld a,(Coordenada_y)
1340  8EC6 2A 2A 8C     	ld hl,(India_SP)
1341  8EC9 77           	ld (hl),a
1342  8ECA 2C           	inc l
1343  8ECB
1344  8ECB              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1345  8ECB
1346  8ECB ED 5B 28 8C  	ld de,(Scanlines_album_SP)
1347  8ECF
1348  8ECF 73           	ld (hl),e
1349  8ED0 2C           	inc l
1350  8ED1 72           	ld (hl),d
1351  8ED2 2C           	inc l
1352  8ED3
1353  8ED3 22 2A 8C     	ld (India_SP),hl
1354  8ED6
1355  8ED6 C9           	ret
1356  8ED7
1357  8ED7              ; --------------------------------------------------------------------------------------------------------------
1358  8ED7              ;
1359  8ED7              ;	27/03/24
1360  8ED7              ;
1361  8ED7
1362  8ED7              Inicializa_India_y_limpia_Tabla_de_impresion
1363  8ED7
1364  8ED7 2A 2A 8C     	ld hl,(India_SP)
1365  8EDA 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1366  8EDD
1367  8EDD 79           	ld a,c
1368  8EDE 95           	sub l
1369  8EDF 28 06        	jr z,2F
1370  8EE1 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1371  8EE2              ;														; _ y pasamos a inicializar (India_SP).
1372  8EE2 AF           	xor a
1373  8EE3
1374  8EE3 77           1 ld (hl),a
1375  8EE4 2C           	inc l
1376  8EE5 10 FC        	djnz 1B												; Limpia Tabla.
1377  8EE7
1378  8EE7 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1379  8EEA 22 2A 8C     	ld (India_SP),hl
1380  8EED
1381  8EED C9           	ret
1382  8EEE
1383  8EEE              ; --------------------------------------------------------------------------------------------------------------
1384  8EEE              ;
1385  8EEE              ;	31/3/24
1386  8EEE
1387  8EEE              Ordena_tabla_de_impresion
1388  8EEE
1389  8EEE              ; 5794 T/states.
1390  8EEE              ; 6278 T/states.
1391  8EEE              ; 5310 T/states.
1392  8EEE
1393  8EEE              ; Inicializamos punteros (India_SP) e (India_2_SP).
1394  8EEE              ; Inicializamos contador de comparaciones, [C].
1395  8EEE              ; Cargamos los registros A y B para efectuar comparación.
1396  8EEE
1397  8EEE FD 2E 00     	ld iyl,0
1398  8EF1
1399  8EF1 3A 03 8C     	ld a,(Entidades_en_curso)
1400  8EF4 FE 04        	cp 4 	;	4
1401  8EF6 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1402  8EF7
1403  8EF7 3D           	dec a
1404  8EF8 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1405  8EF9 51           	ld d,c 										; Copia de respaldo.
1406  8EFA
1407  8EFA 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1408  8EFB
1409  8EFB 21 03 89     	ld hl,Tabla_de_pintado+3
1410  8EFE 46           	ld b,(hl)
1411  8EFF 22 2C 8C     	ld (India_2_SP),hl
1412  8F02
1413  8F02 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1414  8F03 DC 2B 8F     	call c, Avanza_India_2_SP
1415  8F06 CC 2B 8F     	call z, Avanza_India_2_SP
1416  8F09
1417  8F09 FD 2D        	dec iyl
1418  8F0B 28 18        	jr z,2F
1419  8F0D
1420  8F0D
1421  8F0D              ; --------------------------------------------------------------------------------------------------------------
1422  8F0D              ;
1423  8F0D              ;	7/4/24
1424  8F0D
1425  8F0D              Trueque
1426  8F0D
1427  8F0D              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1428  8F0D              ;  			A contiene en nº de fila de (India_SP).
1429  8F0D              ;			HL contiene (India_2_SP).
1430  8F0D
1431  8F0D D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1432  8F0E E5           	push hl										; Preservo (India_2_SP).
1433  8F0F
1434  8F0F ED 5B 2A 8C  	ld de,(India_SP)
1435  8F13 EB           	ex de,hl
1436  8F14 70           	ld (hl),b
1437  8F15 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1438  8F16
1439  8F16 CD 57 8F     	call Intercambia_1_byte
1440  8F19 CD 57 8F     	call Intercambia_1_byte
1441  8F1C
1442  8F1C
1443  8F1C              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1444  8F1C              ; Recuperamos (India_2_SP) en HL.
1445  8F1C
1446  8F1C 2A 2A 8C     	ld hl,(India_SP)
1447  8F1F 7E           	ld a,(hl)
1448  8F20
1449  8F20 E1           	pop hl
1450  8F21 D1           	pop de
1451  8F22
1452  8F22              ; --------------------------------------------------------------------------------------------------------------
1453  8F22
1454  8F22 CD 2B 8F     	call Avanza_India_2_SP
1455  8F25
1456  8F25 14           2 inc d
1457  8F26 15           	dec d
1458  8F27 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1459  8F28 18 D8        	jr 1B
1460  8F2A
1461  8F2A C9           	ret
1462  8F2B
1463  8F2B              ; ----- ----- ----- ----- -----
1464  8F2B
1465  8F2B              Avanza_India_2_SP
1466  8F2B
1467  8F2B 0D           	dec c
1468  8F2C 28 0A        	jr z,Avanza_punteros_indios
1469  8F2E
1470  8F2E FD 2C        	inc iyl
1471  8F30
1472  8F30 2C           	inc l
1473  8F31 2C           	inc l
1474  8F32 2C           	inc l
1475  8F33
1476  8F33 46           	ld b,(hl)
1477  8F34 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1478  8F37
1479  8F37 C9           	ret
1480  8F38
1481  8F38              ; ----- ----- ----- ----- -----
1482  8F38
1483  8F38              Avanza_punteros_indios
1484  8F38
1485  8F38 15           	dec d
1486  8F39 28 15        	jr z,Prepara_salida
1487  8F3B
1488  8F3B 4A           	ld c,d
1489  8F3C
1490  8F3C 2A 2A 8C     	ld hl,(India_SP)
1491  8F3F 2C           	inc l
1492  8F40 2C           	inc l
1493  8F41 2C           	inc l
1494  8F42 7E           	ld a,(hl)
1495  8F43 22 2A 8C     	ld (India_SP),hl
1496  8F46
1497  8F46 2C           	inc l
1498  8F47 2C           	inc l
1499  8F48 2C           	inc l
1500  8F49 46           	ld b,(hl)
1501  8F4A 22 2C 8C     	ld (India_2_SP),hl
1502  8F4D
1503  8F4D FD 2C        	inc iyl
1504  8F4F
1505  8F4F C9           	ret
1506  8F50
1507  8F50              Prepara_salida
1508  8F50
1509  8F50 21 00 89     	ld hl,Tabla_de_pintado
1510  8F53 22 2A 8C     	ld (India_SP),hl
1511  8F56 C9           	ret
1512  8F57
1513  8F57
1514  8F57 2C           Intercambia_1_byte inc l
1515  8F58 1C           	inc e
1516  8F59 46           	ld b,(hl)
1517  8F5A 1A           	ld a,(de)
1518  8F5B EB           	ex de,hl
1519  8F5C 70           	ld (hl),b
1520  8F5D 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1521  8F5E C9           	ret
1522  8F5F
1523  8F5F              ; -----------------------------------------------------------------------------------
1524  8F5F              ;
1525  8F5F              ;	20/01/24
1526  8F5F              ;
1527  8F5F              ;
1528  8F5F
1529  8F5F              Construye_movimientos_masticados_entidad
1530  8F5F
1531  8F5F 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1532  8F62 E5           	push hl
1533  8F63 CD A6 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1534  8F66              ;															; _ el (Contador_de_mov_masticados).
1535  8F66 CD 76 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1536  8F69              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1537  8F69 CD A3 99     	call Recompone_posicion_inicio
1538  8F6C
1539  8F6C CD D3 96     1 call Draw
1540  8F6F CD 8B 8F     	call Guarda_movimiento_masticado
1541  8F72
1542  8F72 CD 50 9D     	call Movimiento
1543  8F75
1544  8F75 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1545  8F78 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1546  8F7A 28 F0        	jr z,1B
1547  8F7C
1548  8F7C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1549  8F7C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1550  8F7C
1551  8F7C E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1552  8F7D 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1553  8F80
1554  8F80              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1555  8F80
1556  8F80 CD B4 9E     	call Situa_en_contador_general_de_mov_masticados
1557  8F83
1558  8F83              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1559  8F83              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1560  8F83
1561  8F83 ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1562  8F87
1563  8F87 71           	ld (hl),c
1564  8F88 23           	inc hl
1565  8F89 70           	ld (hl),b
1566  8F8A
1567  8F8A C9           	ret
1568  8F8B
1569  8F8B              ; -----------------------------------------------------------------------------------
1570  8F8B              ;
1571  8F8B              ;	28/12/23
1572  8F8B              ;
1573  8F8B              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1574  8F8B              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1575  8F8B
1576  8F8B              Guarda_movimiento_masticado
1577  8F8B
1578  8F8B ED 73 08 8C  	ld (Stack),sp
1579  8F8F ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1580  8F93
1581  8F93 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1582  8F95 FD E5            push iy 												; Pushea Puntero_objeto.
1583  8F97
1584  8F97 ED 7B 08 8C      ld sp,(Stack)
1585  8F9B
1586  8F9B 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1587  8F9E 23           	inc hl
1588  8F9F 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1589  8FA2
1590  8FA2 CD A6 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1591  8FA5              ;															; _ el (Contador_de_mov_masticados).
1592  8FA5 C9               ret
1593  8FA6
1594  8FA6              ; --------------------------------------------------------------------------------------------------------------
1595  8FA6              ;
1596  8FA6              ;	12/1/24
1597  8FA6              ;
1598  8FA6              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1599  8FA6
1600  8FA6              Actualiza_Puntero_de_almacen_de_mov_masticados
1601  8FA6
1602  8FA6 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1603  8FA9 01 04 00     	ld bc,4
1604  8FAC A7           	and a
1605  8FAD ED 4A        	adc hl,bc
1606  8FAF 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1607  8FB2 C9           	ret
1608  8FB3
1609  8FB3              ; --------------------------------------------------------------------------------------------------------------
1610  8FB3              ;
1611  8FB3              ;	24/03/24
1612  8FB3              ;
1613  8FB3              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1614  8FB3              ;
1615  8FB3              ;	IX contiene el puntero de impresión.
1616  8FB3              ;	DE contiene (Puntero_objeto).
1617  8FB3
1618  8FB3
1619  8FB3              Cargamos_registros_con_mov_masticado
1620  8FB3
1621  8FB3 ED 73 08 8C  	ld (Stack),sp
1622  8FB7 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1623  8FBB
1624  8FBB D1           	pop de 															; DE contiene Puntero_objeto
1625  8FBC DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1626  8FBE
1627  8FBE ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1628  8FC2 ED 7B 08 8C  	ld sp,(Stack)
1629  8FC6
1630  8FC6 7B           	ld a,e
1631  8FC7 82           	add d															; Comprueba si ya no hay datos en el almacén.
1632  8FC8
1633  8FC8 CC 66 93     	call z,Reinicia_entidad_maliciosa
1634  8FCB
1635  8FCB C9           	ret
1636  8FCC
1637  8FCC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1638  8FCC              ;
1639  8FCC              ;	22/7/24
1640  8FCC
1641  8FCC              Cargamos_registros_con_explosion
1642  8FCC
1643  8FCC
1644  8FCC 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1645  8FCF CD 70 90     	call Extrae_address
1646  8FD2
1647  8FD2 5D           	ld e,l
1648  8FD3 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1649  8FD4
1650  8FD4 DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1651  8FD8
1652  8FD8 C9           	ret
1653  8FD9
1654  8FD9
1655  8FD9              Cargamos_registros_con_explosion_Amadeus
1656  8FD9
1657  8FD9 2A 77 89     	ld hl,(Pamm_Amadeus)
1658  8FDC CD 70 90     	call Extrae_address
1659  8FDF
1660  8FDF 5D           	ld e,l
1661  8FE0 54           	ld d,h
1662  8FE1
1663  8FE1 DD 2A 75 89  	ld ix,(p.imp.amadeus)
1664  8FE5
1665  8FE5 C9           	ret
1666  8FE6
1667  8FE6              ; --------------------------------------------------------------------------------------------------------------
1668  8FE6              ;
1669  8FE6              ;	17/06/24
1670  8FE6              ;
1671  8FE6              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1672  8FE6              ;
1673  8FE6              ;	IX contiene el puntero de impresión.
1674  8FE6              ;	DE contiene (Puntero_objeto).
1675  8FE6
1676  8FE6
1677  8FE6              Cargamos_registros_con_mov_masticado_Amadeus
1678  8FE6
1679  8FE6 ED 73 08 8C  	ld (Stack),sp
1680  8FEA ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1681  8FEE D1           	pop de 															; DE contiene Puntero_objeto
1682  8FEF DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1683  8FF1 DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1684  8FF5 ED 7B 08 8C  	ld sp,(Stack)
1685  8FF9 C9           	ret
1686  8FFA
1687  8FFA              ; ---------------------------------------------------------------------------------------------------------------------
1688  8FFA              ;
1689  8FFA              ;	18/6/24
1690  8FFA              ;
1691  8FFA              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1692  8FFA
1693  8FFA              Genera_datos_de_impresion_Amadeus
1694  8FFA
1695  8FFA 3A 74 89     	ld a,(Impacto_Amadeus)
1696  8FFD A7           	and a
1697  8FFE 20 03        	jr nz,1F
1698  9000
1699  9000              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1700  9000              ; _apuntando a la correspondiente explosión.
1701  9000
1702  9000 CD E6 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1703  9003
1704  9003 DD 7D        1 ld a,ixl
1705  9005 E6 1F        	and $1f
1706  9007 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1707  900A
1708  900A 2A 28 8C     	ld hl,(Scanlines_album_SP)
1709  900D E5           	push hl
1710  900E
1711  900E 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1712  9011 22 28 8C     	ld (Scanlines_album_SP),hl
1713  9014
1714  9014 CD BB 94     	call Genera_datos_de_impresion
1715  9017
1716  9017 E1           	pop hl
1717  9018 22 28 8C     	ld (Scanlines_album_SP),hl
1718  901B
1719  901B C9           	ret
1720  901C
1721  901C              ; ---------------------------------------------------------------------------------------------------------------------
1722  901C              ;
1723  901C              ;	13/03/24
1724  901C              ;
1725  901C              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1726  901C
1727  901C              Inicia_albumes_de_lineas
1728  901C
1729  901C 21 00 80     	ld hl,Scanlines_album
1730  901F 22 0C 8C     	ld (Album_de_pintado),hl
1731  9022 22 28 8C     	ld (Scanlines_album_SP),hl
1732  9025
1733  9025 21 1A 81     	ld hl,Scanlines_album_2
1734  9028 22 0E 8C     	ld (Album_de_borrado),hl
1735  902B
1736  902B C9           	ret
1737  902C
1738  902C              Inicia_albumes_de_lineas_Amadeus
1739  902C
1740  902C 21 34 82     	ld hl,Amadeus_scanlines_album
1741  902F 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1742  9032 21 58 82     	ld hl,Amadeus_scanlines_album_2
1743  9035 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1744  9038
1745  9038 C9           	ret
1746  9039
1747  9039              Inicia_albumes_de_disparos
1748  9039
1749  9039 21 7C 82     	ld hl,Disparos_scanlines_album
1750  903C 22 14 8C     	ld (Album_de_pintado_disparos),hl
1751  903F 21 8E 82     	ld hl,Disparos_scanlines_album_2
1752  9042 22 16 8C     	ld (Album_de_borrado_disparos),hl
1753  9045
1754  9045 21 7C 82     	ld hl,Disparos_scanlines_album
1755  9048 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1756  904B
1757  904B C9           	ret
1758  904C
1759  904C              ; ---------------------------------------------------------------------------------------------------------------------
1760  904C              ;
1761  904C              ; 8/1/23
1762  904C              ;
1763  904C              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1764  904C              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1765  904C              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1766  904C
1767  904C              ; Destruye HL y DE !!!!!
1768  904C
1769  904C              Inicia_punteros_de_cajas
1770  904C
1771  904C 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1772  904F CD 70 90         call Extrae_address
1773  9052 22 FB 8B         ld (Puntero_store_caja),hl
1774  9055 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1775  9058 22 FF 8B     	ld (Indice_restore_caja),hl
1776  905B CD 70 90     	call Extrae_address
1777  905E 22 FD 8B     	ld (Puntero_restore_caja),hl
1778  9061 C9               ret
1779  9062
1780  9062              ; *************************************************************************************************************************************************************
1781  9062              ;
1782  9062              ; 8/1/23
1783  9062              ;
1784  9062              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1785  9062
1786  9062 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1787  9065 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1788  9068 C9           	ret
1789  9069 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1790  906C 22 33 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1791  906F C9           	ret
1792  9070
1793  9070              ; *************************************************************************************************************************************************************
1794  9070              ;
1795  9070              ; 20/10/22
1796  9070              ;
1797  9070              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1798  9070              ;
1799  9070              ; Destruye el puntero y DE !!!!!
1800  9070
1801  9070 5E           Extrae_address ld e,(hl)
1802  9071 23           	inc hl
1803  9072 56           	ld d,(hl)
1804  9073 2B           	dec hl
1805  9074 EB           	ex de,hl
1806  9075 C9           	ret
1807  9076
1808  9076              ; *************************************************************************************************************************************************************
1809  9076              ;
1810  9076              ;	20/1/24
1811  9076              ;
1812  9076              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1813  9076              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1814  9076              ;
1815  9076              ;   Destruye HL y BC !!!!!,
1816  9076              ;
1817  9076              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1818  9076              ;					"0" ..... Izquierda.
1819  9076
1820  9076              Inicia_Puntero_objeto
1821  9076
1822  9076 3A DA 8B     	ld a,(Cuad_objeto)
1823  9079 E6 01        	and 1
1824  907B F5           	push af
1825  907C CC 98 90     	call z,Inicia_puntero_objeto_izq
1826  907F F1           	pop af
1827  9080 C8           	ret z
1828  9081 CD 85 90     	call Inicia_puntero_objeto_der
1829  9084 C9           	ret
1830  9085
1831  9085              ; Arrancamos desde la parte izquierda de la pantalla.
1832  9085              ; Iniciamos (Indice_Sprite_der).
1833  9085
1834  9085 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1835  9088 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1836  908B CD 70 90     	call Extrae_address
1837  908E 22 CD 8B     	ld (Puntero_objeto),hl
1838  9091
1839  9091 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1840  9094 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1841  9097 C9           	ret
1842  9098
1843  9098              ; Arrancamos desde la parte derecha de la pantalla.
1844  9098              ; Iniciamos (Indice_Sprite_izq).
1845  9098
1846  9098 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1847  909B 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1848  909E CD 70 90     	call Extrae_address
1849  90A1 22 CD 8B     	ld (Puntero_objeto),hl
1850  90A4
1851  90A4 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1852  90A7 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1853  90AA C9           	ret
1854  90AB
1855  90AB              ; **************************************************************************************************
1856  90AB              ;
1857  90AB              ;	06/07/24
1858  90AB              ;
1859  90AB              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1860  90AB
1861  90AB              Restore_entidad
1862  90AB
1863  90AB 2A FB 8B     	ld hl,(Puntero_store_caja)
1864  90AE 7E           	ld a,(hl)
1865  90AF A7           	and a
1866  90B0 CC BE 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1867  90B3 28 F6        	jr z,Restore_entidad
1868  90B5
1869  90B5 11 BB 8B     	ld de,Bandeja_DRAW
1870  90B8 01 0C 00     	ld bc,12
1871  90BB ED B0        	ldir
1872  90BD C9           	ret
1873  90BE
1874  90BE              ; **************************************************************************************************
1875  90BE              ;
1876  90BE              ;	08/05/23
1877  90BE              ;
1878  90BE              ;	Incrementamos los dos punteros de entidades. (+1).
1879  90BE
1880  90BE              Incrementa_punteros_de_cajas
1881  90BE
1882  90BE 2A FD 8B     	ld hl,(Puntero_restore_caja)
1883  90C1 22 FB 8B     	ld (Puntero_store_caja),hl
1884  90C4 2A FF 8B     	ld hl,(Indice_restore_caja)
1885  90C7 23           	inc hl
1886  90C8 23           	inc hl
1887  90C9 22 FF 8B     	ld (Indice_restore_caja),hl
1888  90CC CD 70 90         call Extrae_address
1889  90CF 22 FD 8B         ld (Puntero_restore_caja),hl
1890  90D2 C9               ret
1891  90D3
1892  90D3              ; -----------------------------------------------------------
1893  90D3
1894  90D3              ; Teclado.
1895  90D3
1896  90D3 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1897  90D5 DB FE        	in a,($fe)
1898  90D7 E6 01        	and $01
1899  90D9 28 02        	jr z,1f
1900  90DB 18 F6        	jr Pulsa_ENTER
1901  90DD C9           1 ret
1902  90DE
1903  90DE              ; **************************************************************************************************
1904  90DE              ;
1905  90DE              ; Temporización.
1906  90DE
1907  90DE              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1908  90DE              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1909  90DE              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1910  90DE              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1911  90DE
1912  90DE              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1913  90DE              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1914  90DE              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1915  90DE
1916  90DE              ; A partir de $4f61 no hace falta DELAY.
1917  90DE
1918  90DE              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1919  90DE
1920  90DE              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1921  90DE              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1922  90DE              ;	LD A,B
1923  90DE              ;	AND A
1924  90DE              ;	JR NZ,wait
1925  90DE              ;	RET
1926  90DE
1927  90DE              ; ---------------------------------------------------------------------------------------------------------------
1928  90DE              ;
1929  90DE              ;	13/07/24
1930  90DE              ;
1931  90DE
1932  90DE              Inicia_Shield
1933  90DE
1934  90DE 21 4D 8C     	ld hl,Datos_Shield
1935  90E1 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1936  90E4
1937  90E4 7E           	ld a,(hl)
1938  90E5 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1939  90E8
1940  90E8 3E 01        	ld a,1
1941  90EA 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1942  90ED
1943  90ED C9           	ret
1944  90EE
1945  90EE              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1946  90EE              ;
1947  90EE              ;	4/6/24
1948  90EE              ;
1949  90EE              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1950  90EE              ;
1951  90EE              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1952  90EE              ;
1953  90EE
1954  90EE              Actualiza_pantalla
1955  90EE
1956  90EE 3E 02        	ld a,2
1957  90F0 D3 FE        	out ($fe),a
1958  90F2
1959  90F2 3A 2E 8C     	ld a,(Ctrl_3)
1960  90F5 CB 57        	bit 2,a
1961  90F7 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1962  90F9
1963  90F9              Borrando_entidades
1964  90F9
1965  90F9 2A 28 8C     	ld hl,(Scanlines_album_SP)
1966  90FC CD 70 90     	call Extrae_address
1967  90FF 24           	inc h
1968  9100 25           	dec h
1969  9101 28 05        	jr z,Pintando_entidades
1970  9103 CD B0 95     	call Pinta_Sprites
1971  9106 18 F1        	jr Borrando_entidades
1972  9108
1973  9108              Pintando_entidades
1974  9108
1975  9108 2A 2A 8C     	ld hl,(India_SP)
1976  910B 2C           	inc l
1977  910C CD 70 90     	call Extrae_address
1978  910F 24           	inc h
1979  9110 25           	dec h
1980  9111 28 0E        	jr z,Ejecuta_escudo
1981  9113 1C           	inc e
1982  9114 1C           	inc e
1983  9115 ED 53 2A 8C  	ld (India_SP),de
1984  9119 CD 70 90     	call Extrae_address
1985  911C CD B0 95     	call Pinta_Sprites
1986  911F 18 E7        	jr Pintando_entidades
1987  9121
1988  9121              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1989  9121
1990  9121              Ejecuta_escudo
1991  9121
1992  9121 3A 53 8C     	ld a,(Shield)
1993  9124 A7           	and a
1994  9125 20 2F        	jr nz,Aplica_Shield
1995  9127
1996  9127              Borrando_Amadeus
1997  9127
1998  9127 21 2E 8C     	ld hl,Ctrl_3
1999  912A CB 6E        	bit 5,(hl)
2000  912C 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2001  912E
2002  912E 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2003  9131 CD 70 90     	call Extrae_address
2004  9134 24           	inc h
2005  9135 25           	dec h
2006  9136 28 03        	jr z,Pintando_Amadeus
2007  9138 CD B0 95     	call Pinta_Sprites
2008  913B
2009  913B              Pintando_Amadeus
2010  913B
2011  913B 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2012  913E CD 70 90     	call Extrae_address
2013  9141 24           	inc h
2014  9142 25           	dec h
2015  9143 28 03        	jr z,1F
2016  9145 CD B0 95     	call Pinta_Sprites
2017  9148
2018  9148              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2019  9148
2020  9148 21 2E 8C     1 ld hl,Ctrl_3
2021  914B CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2022  914D CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2023  914F CB AE        	res 5,(hl)
2024  9151
2025  9151 3E 01        	ld a,1												; Borde azul.
2026  9153 D3 FE        	out ($fe),a
2027  9155
2028  9155 C9           	ret
2029  9156
2030  9156              Aplica_Shield
2031  9156
2032  9156              ;	Bit 1 "1" (Shield_3) Sólo borra.
2033  9156              ;		  "0"     ""     Borra/Pinta.
2034  9156              ;	Bit 2    ""  RET.	 No borra, no pinta.
2035  9156
2036  9156 21 55 8C     	ld hl,Shield_3
2037  9159
2038  9159 CB 5E        	bit 3,(hl)
2039  915B 20 DE        	jr nz,Pintando_Amadeus
2040  915D
2041  915D CB 56        	bit 2,(hl)
2042  915F 20 E7        	jr nz,1B
2043  9161
2044  9161 CB 4E        	bit 1,(hl)
2045  9163 C4 6A 91     	call nz,Borra_Amadeus_shield
2046  9166
2047  9166 28 BF        	jr z,Borrando_Amadeus
2048  9168 18 DE        	jr 1B
2049  916A
2050  916A              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2051  916A
2052  916A              Borra_Amadeus_shield
2053  916A
2054  916A 3A 2E 8C     	ld a,(Ctrl_3)
2055  916D CB 6F        	bit 5,a
2056  916F 28 08        	jr z,1F
2057  9171
2058  9171 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2059  9174 CD 70 90     	call Extrae_address
2060  9177 18 06        	jr 2F
2061  9179
2062  9179 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2063  917C CD 70 90     	call Extrae_address
2064  917F
2065  917F CD B0 95     2 call Pinta_Sprites
2066  9182
2067  9182 AF           	xor a
2068  9183 3C           	inc a											; Asegura NZ en la salida de la rutina.
2069  9184
2070  9184 C9           	ret
2071  9185
2072  9185              Pinta_Amadeus_shield
2073  9185
2074  9185 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2075  9188 CD 70 90     	call Extrae_address
2076  918B CD B0 95     	call Pinta_Sprites
2077  918E
2078  918E AF           	xor a
2079  918F 3C           	inc a											; Asegura NZ en la salida de la rutina.
2080  9190
2081  9190 C9           	ret
2082  9191
2083  9191              Borra_Pinta_Amadeus_shield
2084  9191
2085  9191 CD 6A 91     	call Borra_Amadeus_shield
2086  9194 CD 85 91     	call Pinta_Amadeus_shield
2087  9197 C9           	ret
2088  9198
2089  9198              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2090  9198              ;
2091  9198              ;	19/6/24
2092  9198              ;
2093  9198
2094  9198              Teclado
2095  9198
2096  9198              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2097  9198
2098  9198 3E F7        	ld a,$f7												; "5" para disparar.
2099  919A DB FE        	in a,($fe)
2100  919C E6 10        	and $10
2101  919E
2102  919E CC 52 A0     	call z,Genera_disparo_Amadeus
2103  91A1
2104  91A1 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2105  91A3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2106  91A5 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2107  91A7 CC 1D 9D         call z,Amadeus_a_izquierda
2108  91AA
2109  91AA 3E F7        	ld a,$f7
2110  91AC DB FE        	in a,($fe)
2111  91AE E6 01        	and $01
2112  91B0 C8           	ret z
2113  91B1
2114  91B1 3E F7        	ld a,$f7
2115  91B3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2116  91B5 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2117  91B7 CC 35 9D     	call z,Amadeus_a_derecha
2118  91BA
2119  91BA C9           	ret
2120  91BB
2121  91BB              ; ------------------------------------------------------------------------------------------------------------------------
2122  91BB              ;
2123  91BB              ;	06/07/24
2124  91BB              ;
2125  91BB
2126  91BB              Genera_explosion
2127  91BB
2128  91BB 21 40 8C     	ld hl,Clock_explosion
2129  91BE 35           	dec (hl)
2130  91BF 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2131  91C1
2132  91C1              Borra_entidad_colisionada
2133  91C1
2134  91C1 CD C3 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2135  91C4 CD CC 8F     	call Cargamos_registros_con_explosion
2136  91C7 CD BB 94     	call Genera_datos_de_impresion
2137  91CA
2138  91CA AF           	xor a
2139  91CB 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2140  91CC
2141  91CC C9           	ret
2142  91CD
2143  91CD              Siguiente_frame_explosion
2144  91CD
2145  91CD 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2146  91CF
2147  91CF              ; Avanza Frame de explosión.
2148  91CF
2149  91CF 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2150  91D2 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2151  91D5
2152  91D5 79           	ld a,c
2153  91D6 95           	sub l
2154  91D7 20 0B        	jr nz,1F
2155  91D9
2156  91D9              ; Fín de la entidad !!!!!!!!!!!!!
2157  91D9
2158  91D9 21 02 8C     	ld hl,Numero_parcial_de_entidades
2159  91DC 35           	dec (hl)
2160  91DD 23           	inc hl
2161  91DE 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2162  91DF
2163  91DF CD 3B 93     	call Limpiamos_bandeja_DRAW
2164  91E2 18 DD        	jr Borra_entidad_colisionada
2165  91E4
2166  91E4 23           1 inc hl
2167  91E5 23           	inc hl
2168  91E6 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2169  91E9 18 D6        	jr Borra_entidad_colisionada
2170  91EB
2171  91EB              ; ----- ----- ----- ----- -----
2172  91EB
2173  91EB              Genera_explosion_Amadeus
2174  91EB
2175  91EB 21 41 8C     	ld hl,Clock_explosion_Amadeus
2176  91EE 35           	dec (hl)
2177  91EF 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2178  91F1
2179  91F1              Borra_Amadeus_impactado
2180  91F1
2181  91F1 CD 35 8E     	call Change_Amadeus
2182  91F4 CD D9 8F     	call Cargamos_registros_con_explosion_Amadeus
2183  91F7 CD FA 8F     	call Genera_datos_de_impresion_Amadeus
2184  91FA
2185  91FA 21 2E 8C     	ld hl,Ctrl_3
2186  91FD CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2187  91FF
2188  91FF AF           	xor a
2189  9200 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2190  9201
2191  9201 C9           	ret
2192  9202
2193  9202              Siguiente_frame_explosion_Amadeus
2194  9202
2195  9202 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2196  9204
2197  9204              ; Avanza Frame de explosión.
2198  9204
2199  9204 2A 77 89     	ld hl,(Pamm_Amadeus)
2200  9207 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2201  920A
2202  920A 79           	ld a,c
2203  920B 95           	sub l
2204  920C 20 0B        	jr nz,1F
2205  920E
2206  920E              ; Fín de Amadeus !!!!!!!!!!!!!
2207  920E              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2208  920E
2209  920E AF           	xor a
2210  920F 32 74 89     	ld (Impacto_Amadeus),a
2211  9212 21 2E 8C     	ld hl,Ctrl_3
2212  9215 CB F6        	set 6,(hl)
2213  9217
2214  9217 18 D8        	jr Borra_Amadeus_impactado
2215  9219
2216  9219 23           1 inc hl
2217  921A 23           	inc hl
2218  921B 22 77 89     	ld (Pamm_Amadeus),hl
2219  921E 18 D1        	jr Borra_Amadeus_impactado
2220  9220
2221  9220              ; ---------------------------------------------------------------
2222  9220
2223  9220              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9220              ; ******************************************************************************************************************************************************************************************
   2+ 9220              ;
   3+ 9220              ;   21/04/24
   4+ 9220              ;
   5+ 9220              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9220              ;   (XOR) bit a bit.
   7+ 9220              ;
   8+ 9220              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9220
  10+ 9220              Derivando_RND
  11+ 9220
  12+ 9220 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9223
  14+ 9223 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9225 C5               push bc
  16+ 9226              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9226 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9229              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9229
  20+ 9229 A7           6 and a                                 ; Carry a "0".
  21+ 922A CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 922C 30 02            jr nc,1F
  23+ 922E
  24+ 922E CB C1            set 0,c
  25+ 9230
  26+ 9230 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9231 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9233 5F               ld e,a
  29+ 9234
  30+ 9234 7A               ld a,d
  31+ 9235 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9237 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9239
  34+ 9239 CB 3F            srl a
  35+ 923B
  36+ 923B AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 923C
  38+ 923C 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 923D 28 04            jr z,4F
  40+ 923F
  41+ 923F CB FF            set 7,a
  42+ 9241 18 02            jr 5F
  43+ 9243
  44+ 9243 CB BF        4 res 7,a
  45+ 9245
  46+ 9245 CB 21        5 sla c
  47+ 9247 10 E0            djnz 6B
  48+ 9249
  49+ 9249 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 924A
  51+ 924A 77               ld (hl),a
  52+ 924B 23               inc hl
  53+ 924C C1               pop bc
  54+ 924D 10 D4            djnz 3B
  55+ 924F
  56+ 924F C9               ret
  57+ 9250
  58+ 9250
  59+ 9250
# file closed: RND_Derivando.asm
2224  9250              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9250              ;---------------------------------------------------------------------------------------------------------------
   2+ 9250              ;
   3+ 9250              ;   8/3/24
   4+ 9250              ;
   5+ 9250              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9250              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9250              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9250              ;	_ de la 1ª entidad del Nivel.
   9+ 9250              ;
  10+ 9250              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9250
  12+ 9250              ;	MODIFICA: HL,DE y A.
  13+ 9250              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9250
  15+ 9250              Inicializa_Nivel
  16+ 9250
  17+ 9250 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9253 CD 70 90     	call Extrae_address
  19+ 9256 7E           	ld a,(hl)
  20+ 9257 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 925A 23           	inc hl
  22+ 925B CD 68 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 925E 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9261 CD 71 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9264
  26+ 9264 CD 82 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9267 C9           	ret
  28+ 9268
  29+ 9268              ; ----------------------
  30+ 9268
  31+ 9268 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 926B 01 04 00     	ld bc,4
  33+ 926E ED B0        	ldir
  34+ 9270 C9           	ret
  35+ 9271
  36+ 9271 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9272 CD 0C 94         call Calcula_salto_en_BC
  38+ 9275 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9278 A7               and a
  40+ 9279 ED 4A            adc hl,bc
  41+ 927B CD 70 90         call Extrae_address
  42+ 927E 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 9281 C9               ret
  44+ 9282
  45+ 9282 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9285 CD 0C 94     	call Calcula_salto_en_BC
  47+ 9288 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 928B A7               and a
  49+ 928C ED 4A            adc hl,bc
  50+ 928E CD 70 90         call Extrae_address
  51+ 9291 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 9294 C9           	ret
  53+ 9295
  54+ 9295              ;---------------------------------------------------------------------------------------------------------------
  55+ 9295              ;
  56+ 9295              ;   5/1/24
  57+ 9295              ;
  58+ 9295              ;	Destruye A,BC,HL,DE
  59+ 9295
  60+ 9295              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 9295              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 9295
  63+ 9295              Inicia_Entidades
  64+ 9295
  65+ 9295              ; Preparamos los punteros de las cajas de entidades:
  66+ 9295
  67+ 9295 CD 4C 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9298              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9298 CD 54 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 929B
  71+ 929B 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 929E
  73+ 929E 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92A1
  75+ 92A1 CD BA 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92A4
  77+ 92A4 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 92A7
  79+ 92A7              ; En este punto:
  80+ 92A7              ;
  81+ 92A7              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92A7              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92A7
  84+ 92A7 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92A8
  86+ 92A8 7E           	ld a,(hl)
  87+ 92A9 CD 26 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92AC
  89+ 92AC CD 1E 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92AF
  91+ 92AF              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92AF
  93+ 92AF CD DC 93     	call Busca_mov_masticados_segun_tipo
  94+ 92B2
  95+ 92B2 A7           	and a
  96+ 92B3 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92B5
  98+ 92B5              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92B5
 100+ 92B5              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92B5              ;	_ de este tipo de entidad.
 102+ 92B5
 103+ 92B5 CD B4 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92B8 CD C1 9E     	call Transfiere_datos_de_contadores
 105+ 92BB
 106+ 92BB 18 06        	jr 4F
 107+ 92BD
 108+ 92BD CD 5F 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92C0
 110+ 92C0              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92C0              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92C0              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92C0              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92C0              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92C0
 116+ 92C0 CD 9A 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92C3              ;																; _ Mov_masticados ya generados.
 118+ 92C3
 119+ 92C3 CD B3 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92C6
 121+ 92C6 DD E5        	push ix
 122+ 92C8 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92C9
 124+ 92C9 D5           	push de
 125+ 92CA CD 8F 94     	call Genera_coordenadas
 126+ 92CD
 127+ 92CD ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 128+ 92D1 CD C3 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92D4 D1           	pop de
 130+ 92D5
 131+ 92D5 CD BB 94     	call Genera_datos_de_impresion
 132+ 92D8              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92D8              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92D8              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92D8              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92D8
 137+ 92D8 CD 5E 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92DB
 139+ 92DB              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92DB
 141+ 92DB ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92DF CD 4B 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92E2
 144+ 92E2 CD 3B 93     	call Limpiamos_bandeja_DRAW
 145+ 92E5 CD BE 90     	call Incrementa_punteros_de_cajas
 146+ 92E8
 147+ 92E8              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92E8              ; _ entidad del Nivel.
 149+ 92E8
 150+ 92E8 3A 2F 8C     	ld a,(Ctrl_4)
 151+ 92EB E6 F0        	and $f0
 152+ 92ED 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92F0
 154+ 92F0              ; Siguiente entidad del Nivel.
 155+ 92F0
 156+ 92F0 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92F3 23           	inc hl 														; _ entidad del Nivel.
 158+ 92F4
 159+ 92F4 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92F5
 161+ 92F5 10 A7        	djnz 2B
 162+ 92F7
 163+ 92F7 C9           	ret
 164+ 92F8
 165+ 92F8              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92F8              ;
 167+ 92F8              ;	27/5/24
 168+ 92F8              ;
 169+ 92F8              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92F8              ;
 171+ 92F8
 172+ 92F8              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92F8              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92F8
 175+ 92F8 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92FB CD 1E 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92FE
 178+ 92FE
 179+ 92FE              Construye_movimientos_masticados_Amadeus
 180+ 92FE
 181+ 92FE 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9301 CD A6 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9304              ;															; _ el (Contador_de_mov_masticados).
 184+ 9304 CD 76 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9307              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9307
 187+ 9307              ; Generamos movimientos masticados de Amadeus.
 188+ 9307
 189+ 9307 06 79        	ld b,121												; $0079, 121d.
 190+ 9309
 191+ 9309 C5           1 push bc
 192+ 930A CD D3 96     	call Draw
 193+ 930D CD 8B 8F     	call Guarda_movimiento_masticado
 194+ 9310
 195+ 9310 CD 47 9A     	call Mov_right
 196+ 9313 CD 47 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9316
 198+ 9316 C1           	pop bc
 199+ 9317 10 F0        	djnz 1B
 200+ 9319
 201+ 9319              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9319
 203+ 9319              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9319              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9319
 206+ 9319 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 931C 01 08 00     	ld bc,8
 208+ 931F A7           	and a
 209+ 9320 ED 42        	sbc hl,bc
 210+ 9322 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9325
 212+ 9325 C9           	ret
 213+ 9326
 214+ 9326              ; ---------------------------------------------------------------------
 215+ 9326              ;
 216+ 9326              ;	10/02/24
 217+ 9326              ;
 218+ 9326              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9326              ;
 220+ 9326              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9326
 222+ 9326              Definicion_segun_tipo
 223+ 9326
 224+ 9326 CD 0C 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9329 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 932C CD 14 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 932F C9           	ret
 228+ 9330
 229+ 9330              ; ---------------------------------------------------------------------
 230+ 9330              ;
 231+ 9330              ;	6/7/24
 232+ 9330
 233+ 9330
 234+ 9330              Store_Restore_cajas
 235+ 9330
 236+ 9330 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 9334 CD 4B 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9337 CD BE 90     	call Incrementa_punteros_de_cajas
 239+ 933A C9           	ret
 240+ 933B
 241+ 933B              ; ---------------------------------------------------------------------
 242+ 933B              ;
 243+ 933B              ;	23/6/24
 244+ 933B              ;
 245+ 933B              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 933B              ;
 247+ 933B              ;	MODIFY: HL
 248+ 933B
 249+ 933B              Limpiamos_bandeja_DRAW
 250+ 933B
 251+ 933B ED 73 08 8C  	ld (Stack),sp
 252+ 933F 31 E0 8B     	ld sp,Vel_left
 253+ 9342
 254+ 9342 AF           	xor a
 255+ 9343 67           	ld h,a
 256+ 9344 6F           	ld l,a
 257+ 9345
 258+ 9345 E5           	push hl
 259+ 9346 E5           	push hl
 260+ 9347 E5           	push hl
 261+ 9348 E5           	push hl
 262+ 9349 E5           	push hl
 263+ 934A E5           	push hl
 264+ 934B E5           	push hl
 265+ 934C E5           	push hl
 266+ 934D E5           	push hl
 267+ 934E E5           	push hl
 268+ 934F E5           	push hl
 269+ 9350 E5           	push hl
 270+ 9351 E5           	push hl
 271+ 9352 E5           	push hl
 272+ 9353 E5           	push hl
 273+ 9354 E5           	push hl
 274+ 9355 E5           	push hl
 275+ 9356 E5           	push hl
 276+ 9357
 277+ 9357 33           	inc sp
 278+ 9358
 279+ 9358 E5           	push hl
 280+ 9359 ED 7B 08 8C  	ld sp,(Stack)
 281+ 935D
 282+ 935D C9           	ret
 283+ 935E
 284+ 935E              ; ---------------------------------------------------------------------
 285+ 935E              ;
 286+ 935E              ;	24/03/24
 287+ 935E
 288+ 935E 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9361 2B           	dec hl
 290+ 9362 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9365 C9           	ret
 292+ 9366
 293+ 9366              ; ---------------------------------------------------------------------
 294+ 9366              ;
 295+ 9366              ;	8/5/24
 296+ 9366
 297+ 9366              Reinicia_entidad_maliciosa
 298+ 9366
 299+ 9366              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9366
 301+ 9366 CD B4 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9369 CD C1 9E     	call Transfiere_datos_de_contadores
 303+ 936C
 304+ 936C              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 936C
 306+ 936C 3A BB 8B     	ld a,(Tipo)
 307+ 936F CD 26 93     	call Definicion_segun_tipo
 308+ 9372
 309+ 9372 E5           	push hl
 310+ 9373 DD E1        	pop ix
 311+ 9375
 312+ 9375 DD 6E 0B     	ld l,(ix+11)
 313+ 9378 DD 66 0C     	ld h,(ix+12)
 314+ 937B
 315+ 937B 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 937E
 317+ 937E CD B3 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9381
 319+ 9381              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9381              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9381              ; Ejemplos.
 322+ 9381
 323+ 9381              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9381              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9381              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9381              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9381              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9381
 329+ 9381 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 9384 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9386
 332+ 9386 7E           	ld a,(hl)
 333+ 9387 CB 2F        	sra a
 334+ 9389 CB 2F        	sra a
 335+ 938B
 336+ 938B 32 C6 8B     	ld (Velocidad),a
 337+ 938E
 338+ 938E 3E 40        	ld a,$40
 339+ 9390 BE           	cp (hl)
 340+ 9391 C0           	ret nz
 341+ 9392
 342+ 9392              ; Límitador.
 343+ 9392
 344+ 9392              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 9392
 346+ 9392 CB 2E        	sra (hl)
 347+ 9394 21 C6 8B     	ld hl,Velocidad
 348+ 9397 CB 2E        	sra (hl)
 349+ 9399
 350+ 9399 C9           	ret
 351+ 939A
 352+ 939A              ; ---------------------------------------------------------------------
 353+ 939A              ;
 354+ 939A              ;	22/01/24
 355+ 939A
 356+ 939A 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 939D CB 46        	bit 0,(hl)
 358+ 939F 20 0D        	jr nz,1F
 359+ 93A1 CB 4E        	bit 1,(hl)
 360+ 93A3 20 0C        	jr nz,2F
 361+ 93A5 CB 56        	bit 2,(hl)
 362+ 93A7 20 0B        	jr nz,3F
 363+ 93A9 CB 5E        	bit 3,(hl)
 364+ 93AB 20 0A        	jr nz,4F
 365+ 93AD C9           	ret
 366+ 93AE
 367+ 93AE CB E6        1 set 4,(hl)
 368+ 93B0 C9           	ret
 369+ 93B1 CB EE        2 set 5,(hl)
 370+ 93B3 C9           	ret
 371+ 93B4 CB F6        3 set 6,(hl)
 372+ 93B6 C9           	ret
 373+ 93B7 CB FE        4 set 7,(hl)
 374+ 93B9 C9           	ret
 375+ 93BA
 376+ 93BA              ; ---------------------------------------------------------------------
 377+ 93BA              ;
 378+ 93BA              ;	23/01/24
 379+ 93BA              ;
 380+ 93BA              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93BA              ;
 382+ 93BA              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93BA              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93BA              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93BA              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93BA
 387+ 93BA              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93BA
 389+ 93BA 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93BB 3D           	dec a
 391+ 93BC 20 06        	jr nz,1F
 392+ 93BE
 393+ 93BE              ; --- Tipo_1
 394+ 93BE
 395+ 93BE 21 2F 8C     	ld hl,Ctrl_4
 396+ 93C1 CB C6        	set 0,(hl)
 397+ 93C3 C9           	ret
 398+ 93C4
 399+ 93C4 3D           1 dec a
 400+ 93C5 20 06        	jr nz,2F
 401+ 93C7
 402+ 93C7              ; --- Tipo_2
 403+ 93C7
 404+ 93C7 21 2F 8C     	ld hl,Ctrl_4
 405+ 93CA CB CE        	set 1,(hl)
 406+ 93CC C9           	ret
 407+ 93CD
 408+ 93CD 3D           2 dec a
 409+ 93CE 20 06        	jr nz,3F
 410+ 93D0
 411+ 93D0              ; --- Tipo_3
 412+ 93D0
 413+ 93D0 21 2F 8C     	ld hl,Ctrl_4
 414+ 93D3 CB D6        	set 2,(hl)
 415+ 93D5 C9           	ret
 416+ 93D6
 417+ 93D6              ; --- Tipo_3
 418+ 93D6
 419+ 93D6 21 2F 8C     3 ld hl,Ctrl_4
 420+ 93D9 CB D6        	set 2,(hl)
 421+ 93DB C9           	ret
 422+ 93DC
 423+ 93DC              ; ---------------------------------------------------------------------
 424+ 93DC              ;
 425+ 93DC              ;	22/01/24
 426+ 93DC
 427+ 93DC 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93DF CB 46        	bit 0,(hl)
 429+ 93E1 20 0E        	jr nz,1F
 430+ 93E3
 431+ 93E3 CB 4E        	bit 1,(hl)
 432+ 93E5 20 10        	jr nz,2F
 433+ 93E7
 434+ 93E7 CB 56        	bit 2,(hl)
 435+ 93E9 20 12        	jr nz,3F
 436+ 93EB
 437+ 93EB CB 5E        	bit 3,(hl)
 438+ 93ED 20 14        	jr nz,4F
 439+ 93EF 18 19        	jr 6F
 440+ 93F1
 441+ 93F1              ; Entidad_de_Tipo_1.
 442+ 93F1
 443+ 93F1 CB 66        1 bit 4,(hl)
 444+ 93F3 28 15        	jr z,6F
 445+ 93F5 18 10        	jr 5F
 446+ 93F7
 447+ 93F7              ; Entidad_de_Tipo_2.
 448+ 93F7
 449+ 93F7 CB 6E        2 bit 5,(hl)
 450+ 93F9 28 0F        	jr z,6F
 451+ 93FB 18 0A        	jr 5F
 452+ 93FD
 453+ 93FD              ; Entidad_de_Tipo_3.
 454+ 93FD
 455+ 93FD CB 76        3 bit 6,(hl)
 456+ 93FF 28 09        	jr z,6F
 457+ 9401 18 04        	jr 5F
 458+ 9403
 459+ 9403              ; Entidad_de_Tipo_4.
 460+ 9403
 461+ 9403 CB 7E        4 bit 7,(hl)
 462+ 9405 28 03        	jr z,6F
 463+ 9407
 464+ 9407              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9407
 466+ 9407 AF           5 xor a
 467+ 9408 3C           	inc a
 468+ 9409 C9           	ret
 469+ 940A
 470+ 940A              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 940A
 472+ 940A AF           6 xor a
 473+ 940B C9           	ret
 474+ 940C
 475+ 940C              ;	------------------------------------------------------------------------------------
 476+ 940C              ;
 477+ 940C              ;	12/01/24
 478+ 940C              ;
 479+ 940C              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 940C              ;
 481+ 940C              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 940C              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 940C
 484+ 940C CB 27        Calcula_salto_en_BC sla a
 485+ 940E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9410 4F           	ld c,a
 487+ 9411 06 00        	ld b,0
 488+ 9413 C9           	ret
 489+ 9414
 490+ 9414              ; ------------------------------------------------------------------
 491+ 9414              ;
 492+ 9414              ;	19/1/24
 493+ 9414              ;
 494+ 9414              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9414              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9414
 497+ 9414 A7           Situa_en_datos_de_definicion and a
 498+ 9415 ED 4A        	adc hl,bc
 499+ 9417 CD 70 90     	call Extrae_address
 500+ 941A 22 06 8C         ld (Datos_de_entidad),hl
 501+ 941D C9           	ret
 502+ 941E
 503+ 941E              ; ------------------------------------------------------------------
 504+ 941E
 505+ 941E              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 941E              ; 	inc de
 507+ 941E              ; 	inc de
 508+ 941E              ; 	ex de,hl
 509+ 941E              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 941E              ; 	ret
 511+ 941E
 512+ 941E              ; ----------------------------------------------------------------------------------------------------------
 513+ 941E              ;
 514+ 941E              ;	24/6/24
 515+ 941E              ;
 516+ 941E              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 941E              ;	_ de entidad.
 518+ 941E              ;
 519+ 941E              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 941E              ;
 521+ 941E              ;
 522+ 941E              ;	MODIFICA: HL,DE y BC
 523+ 941E
 524+ 941E
 525+ 941E              Definicion_de_entidad_a_bandeja_DRAW
 526+ 941E
 527+ 941E 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9421 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9422 12           	ld (de),a
 530+ 9423 23           	inc hl
 531+ 9424              ;
 532+ 9424 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9427 01 02 00     	ld bc,2
 534+ 942A ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 942C              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 942C 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 942F 7E           	ld a,(hl)
 538+ 9430 12           	ld (de),a
 539+ 9431 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9432
 541+ 9432 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 9435 01 04 00     	ld bc,4
 543+ 9438 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 943A
 545+ 943A 11 D8 8B     	ld de,Posicion_inicio
 546+ 943D 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9440 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9442
 549+ 9442 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9445 01 02 00     	ld bc,2
 551+ 9448 ED B0        	ldir
 552+ 944A
 553+ 944A C9           	ret
 554+ 944B
 555+ 944B              ; ----------------------------------------------------------------------------------------------------------
 556+ 944B              ;
 557+ 944B              ;	1/8/24
 558+ 944B              ;
 559+ 944B
 560+ 944B              Parametros_de_bandeja_DRAW_a_caja
 561+ 944B
 562+ 944B 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 944E 01 0C 00     	ld bc,12
 564+ 9451 ED B0        	ldir
 565+ 9453 C9           	ret
 566+ 9454
 567+ 9454              ;---------------------------------------------------------------------------------------------------------------
 568+ 9454              ;
 569+ 9454              ;	5/1/24
 570+ 9454              ;
 571+ 9454              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9454              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9454              ;
 574+ 9454              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9454              ;
 576+ 9454              ;	(Numero_parcial_de_entidades)="7".
 577+ 9454              ;
 578+ 9454              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9454              ;
 580+ 9454              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9454              ;
 582+ 9454              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9454              ;	MODIFICA: A y B.
 584+ 9454              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9454
 586+ 9454              Inicializa_Numero_parcial_de_entidades
 587+ 9454
 588+ 9454              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9454
 590+ 9454 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 9457 A7           	and a
 592+ 9458
 593+ 9458              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9458              ;	jr z,$
 595+ 9458              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9458
 597+ 9458 20 03        	jr nz,3F
 598+ 945A
 599+ 945A              ; ---------- ---------- ----------
 600+ 945A
 601+ 945A              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 945A              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 945A
 604+ 945A CD 50 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 945D
 606+ 945D              ; ---------- ---------- ----------
 607+ 945D
 608+ 945D 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9460 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9462 38 08        	jr c,1F
 611+ 9464
 612+ 9464              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9464              ; Actualizamos variables.
 614+ 9464
 615+ 9464 3E 07        	ld a,7
 616+ 9466 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9469 47           	ld b,a
 618+ 946A 18 04        	jr 2F
 619+ 946C
 620+ 946C              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 946C              ; (Numero_de_entidades)="0".
 622+ 946C
 623+ 946C 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 946F 47           	ld b,a
 625+ 9470 C9           2 ret
 626+ 9471
# file closed: Rutinas_de_inicio_y_niveles.asm
2225  9471              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9471              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9471              ;
   3+ 9471              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9471              ;
   5+ 9471              ; *****************************************************************************************************************************************************************************************
   6+ 9471              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9471
   8+ 9471 7C           calcula_tercio ld a,h
   9+ 9472 E6 18        	and $18
  10+ 9474 CB 2F        	sra a
  11+ 9476 CB 2F        	sra a
  12+ 9478 CB 2F        	sra a
  13+ 947A C9           	ret
  14+ 947B
# file closed: calcula_tercio.asm
2226  947B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 947B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 947B              ;
   3+ 947B              ;
   4+ 947B              ;	CLS.
   5+ 947B              ;
   6+ 947B              ;	Limpia la pantalla y define sus atributos.
   7+ 947B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 947B              ;
   9+ 947B              ;	COLORES: 0 ..... NEGRO
  10+ 947B              ;    		 1 ..... AZUL
  11+ 947B              ; 			 2 ..... ROJO
  12+ 947B              ;			 3 ..... MAGENTA
  13+ 947B              ; 			 4 ..... VERDE
  14+ 947B              ; 			 5 ..... CIAN
  15+ 947B              ;			 6 ..... AMARILLO
  16+ 947B              ; 			 7 ..... BLANCO
  17+ 947B              ;
  18+ 947B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 947B              ;
  20+ 947B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 947B
  22+ 947B
  23+ 947B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 947E 11 01 40     	LD DE,$4001
  25+ 9481 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9484 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9486 ED B0        	LDIR
  28+ 9488 01 FF 02     	LD BC,767
  29+ 948B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 948C ED B0        	LDIR
  31+ 948E C9           	ret
  32+ 948F
# file closed: Cls.asm
2227  948F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 948F              ; ------------------------------------------------------------------------
   2+ 948F              ;
   3+ 948F              ;	30/1/24
   4+ 948F              ;
   5+ 948F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 948F              ;	Fila superior "0", Columna izquierda "0".
   7+ 948F              ;
   8+ 948F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 948F              ;
  10+ 948F              ;	Modifica: A,BC y DE.
  11+ 948F
  12+ 948F 7D           Genera_coordenadas ld a,l
  13+ 9490 E6 1F        	and $1f
  14+ 9492 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9495
  16+ 9495 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9496 FE 40        	cp $40
  18+ 9498 38 1C        	jr c,4F
  19+ 949A
  20+ 949A CD 71 94     	call calcula_tercio
  21+ 949D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 949E
  23+ 949E 1E 00        	ld e,0
  24+ 94A0 7D           	ld a,l
  25+ 94A1 E6 E0        	and $e0
  26+ 94A3 28 01        	jr z,1F
  27+ 94A5 04           	inc b
  28+ 94A6
  29+ 94A6 04           1 inc b
  30+ 94A7 05           	dec b
  31+ 94A8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94AA              ;														; _ , salimos.
  33+ 94AA 1C           3 inc e
  34+ 94AB D6 20        	sub 32
  35+ 94AD 20 FB        	jr nz,3B
  36+ 94AF 10 F5        	djnz 1B
  37+ 94B1
  38+ 94B1 7B           2 ld a,e
  39+ 94B2 32 BD 8B     	ld (Coordenada_y),a
  40+ 94B5 C9           	ret
  41+ 94B6
  42+ 94B6 AF           4 xor a
  43+ 94B7 32 BD 8B     	ld (Coordenada_y),a
  44+ 94BA C9           	ret
  45+ 94BB
# file closed: Genera_coordenadas.asm
2228  94BB              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94BB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94BB              ;
   3+ 94BB              ;	11/03/24
   4+ 94BB              ;
   5+ 94BB              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94BB              ;   DE contiene Puntero_objeto.
   7+ 94BB              ;   IX contiene el Puntero de impresión.
   8+ 94BB
   9+ 94BB              Genera_datos_de_impresion
  10+ 94BB
  11+ 94BB ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94BF
  13+ 94BF 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94C2 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94C4
  16+ 94C4 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 94C7
  18+ 94C7 3E 05            ld a,5
  19+ 94C9 85               add l
  20+ 94CA 6F               ld l,a
  21+ 94CB
  22+ 94CB F9               ld sp,hl
  23+ 94CC 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 94CF
  25+ 94CF 21 00 00         ld hl,0
  26+ 94D2
  27+ 94D2 DD E5            push ix
  28+ 94D4 3B               dec sp
  29+ 94D5 ED 7A            adc hl,sp
  30+ 94D7 D5               push de
  31+ 94D8
  32+ 94D8              ; Recuperamos SP.
  33+ 94D8
  34+ 94D8 ED 7B 08 8C      ld sp,(Stack)
  35+ 94DC
  36+ 94DC E5               push hl
  37+ 94DD F1               pop af
  38+ 94DE 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94DF
  40+ 94DF              ; Tenemos el encabezado listo.
  41+ 94DF              ; Preparamos registros para generar los scanlines.
  42+ 94DF
  43+ 94DF DD E5            push ix
  44+ 94E1 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94E2
  46+ 94E2 ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 94E6
  48+ 94E6              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94E6              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94E6
  51+ 94E6 7C               ld a,h
  52+ 94E7 FE 50            cp $50
  53+ 94E9 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94EB
  55+ 94EB 20 05            jr nz,2F
  56+ 94ED
  57+ 94ED 7D               ld a,l
  58+ 94EE FE E0            cp $e0
  59+ 94F0 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94F2
  61+ 94F2 7D           2 ld a,l
  62+ 94F3 FE C0            cp $c0
  63+ 94F5 D2 87 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94F8
  65+ 94F8              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94F8
  67+ 94F8 CD 85 99         call NextScan
  68+ 94FB EB               ex de,hl
  69+ 94FC
  70+ 94FC 73               ld (hl),e
  71+ 94FD 23               inc hl
  72+ 94FE 72               ld (hl),d
  73+ 94FF 23               inc hl
  74+ 9500
  75+ 9500 EB               ex de,hl
  76+ 9501
  77+ 9501 CD 85 99         call NextScan
  78+ 9504 EB               ex de,hl
  79+ 9505
  80+ 9505 73               ld (hl),e
  81+ 9506 23               inc hl
  82+ 9507 72               ld (hl),d
  83+ 9508 23               inc hl
  84+ 9509
  85+ 9509 EB               ex de,hl
  86+ 950A
  87+ 950A CD 85 99         call NextScan
  88+ 950D EB               ex de,hl
  89+ 950E
  90+ 950E 73               ld (hl),e
  91+ 950F 23               inc hl
  92+ 9510 72               ld (hl),d
  93+ 9511 23               inc hl
  94+ 9512
  95+ 9512 EB               ex de,hl
  96+ 9513
  97+ 9513 CD 85 99         call NextScan
  98+ 9516 EB               ex de,hl
  99+ 9517
 100+ 9517 73               ld (hl),e
 101+ 9518 23               inc hl
 102+ 9519 72               ld (hl),d
 103+ 951A 23               inc hl
 104+ 951B
 105+ 951B EB               ex de,hl
 106+ 951C
 107+ 951C CD 85 99         call NextScan
 108+ 951F EB               ex de,hl
 109+ 9520
 110+ 9520 73               ld (hl),e
 111+ 9521 23               inc hl
 112+ 9522 72               ld (hl),d
 113+ 9523 23               inc hl
 114+ 9524
 115+ 9524 EB               ex de,hl
 116+ 9525
 117+ 9525 CD 85 99         call NextScan
 118+ 9528 EB               ex de,hl
 119+ 9529
 120+ 9529 73               ld (hl),e
 121+ 952A 23               inc hl
 122+ 952B 72               ld (hl),d
 123+ 952C 23               inc hl
 124+ 952D
 125+ 952D EB               ex de,hl
 126+ 952E
 127+ 952E CD 85 99         call NextScan
 128+ 9531 EB               ex de,hl
 129+ 9532
 130+ 9532 73               ld (hl),e
 131+ 9533 23               inc hl
 132+ 9534 72               ld (hl),d
 133+ 9535 23               inc hl
 134+ 9536
 135+ 9536 EB               ex de,hl
 136+ 9537
 137+ 9537 CD 85 99         call NextScan
 138+ 953A EB               ex de,hl
 139+ 953B
 140+ 953B 73               ld (hl),e
 141+ 953C 23               inc hl
 142+ 953D 72               ld (hl),d
 143+ 953E 23               inc hl
 144+ 953F
 145+ 953F EB               ex de,hl
 146+ 9540
 147+ 9540 CD 85 99         call NextScan
 148+ 9543 EB               ex de,hl
 149+ 9544
 150+ 9544 73               ld (hl),e
 151+ 9545 23               inc hl
 152+ 9546 72               ld (hl),d
 153+ 9547 23               inc hl
 154+ 9548
 155+ 9548 EB               ex de,hl
 156+ 9549
 157+ 9549 CD 85 99         call NextScan
 158+ 954C EB               ex de,hl
 159+ 954D
 160+ 954D 73               ld (hl),e
 161+ 954E 23               inc hl
 162+ 954F 72               ld (hl),d
 163+ 9550 23               inc hl
 164+ 9551
 165+ 9551 EB               ex de,hl
 166+ 9552
 167+ 9552 CD 85 99         call NextScan
 168+ 9555 EB               ex de,hl
 169+ 9556
 170+ 9556 73               ld (hl),e
 171+ 9557 23               inc hl
 172+ 9558 72               ld (hl),d
 173+ 9559 23               inc hl
 174+ 955A
 175+ 955A EB               ex de,hl
 176+ 955B
 177+ 955B CD 85 99         call NextScan
 178+ 955E EB               ex de,hl
 179+ 955F
 180+ 955F 73               ld (hl),e
 181+ 9560 23               inc hl
 182+ 9561 72               ld (hl),d
 183+ 9562 23               inc hl
 184+ 9563
 185+ 9563 EB               ex de,hl
 186+ 9564
 187+ 9564 CD 85 99         call NextScan
 188+ 9567 EB               ex de,hl
 189+ 9568
 190+ 9568 73               ld (hl),e
 191+ 9569 23               inc hl
 192+ 956A 72               ld (hl),d
 193+ 956B 23               inc hl
 194+ 956C
 195+ 956C EB               ex de,hl
 196+ 956D
 197+ 956D CD 85 99         call NextScan
 198+ 9570 EB               ex de,hl
 199+ 9571
 200+ 9571 73               ld (hl),e
 201+ 9572 23               inc hl
 202+ 9573 72               ld (hl),d
 203+ 9574 23               inc hl
 204+ 9575
 205+ 9575 EB               ex de,hl
 206+ 9576
 207+ 9576 CD 85 99         call NextScan
 208+ 9579 EB               ex de,hl
 209+ 957A
 210+ 957A 73               ld (hl),e
 211+ 957B 23               inc hl
 212+ 957C 72               ld (hl),d
 213+ 957D 23               inc hl
 214+ 957E
 215+ 957E              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 957E
 217+ 957E 22 28 8C         ld (Scanlines_album_SP),hl
 218+ 9581
 219+ 9581              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 9581
 221+ 9581 08               ex af,af
 222+ 9582
 223+ 9582 F5               push af
 224+ 9583 E1               pop hl
 225+ 9584
 226+ 9584 36 10            ld (hl),16
 227+ 9586
 228+ 9586 C9               ret
 229+ 9587
 230+ 9587              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9587
 232+ 9587              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9587
 234+ 9587 3E 57            ld a,$57
 235+ 9589 94               sub h
 236+ 958A 47               ld b,a
 237+ 958B
 238+ 958B 3E DF            ld a,$df
 239+ 958D BD               cp l
 240+ 958E 38 04            jr c,1F
 241+ 9590
 242+ 9590 3E 08            ld a,8
 243+ 9592 80               add b
 244+ 9593 47               ld b,a
 245+ 9594
 246+ 9594              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 9594              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 9594
 249+ 9594 48           1 ld c,b
 250+ 9595 0C               inc c
 251+ 9596
 252+ 9596 04               inc b
 253+ 9597 05               dec b
 254+ 9598 20 02            jr nz,3F
 255+ 959A
 256+ 959A 18 0B            jr 6F
 257+ 959C
 258+ 959C CD 85 99     3 call NextScan
 259+ 959F EB               ex de,hl
 260+ 95A0
 261+ 95A0 73               ld (hl),e
 262+ 95A1 23               inc hl
 263+ 95A2 72               ld (hl),d
 264+ 95A3 23               inc hl
 265+ 95A4
 266+ 95A4 EB               ex de,hl
 267+ 95A5 10 F5            djnz 3B
 268+ 95A7
 269+ 95A7 ED 53 28 8C  6 ld (Scanlines_album_SP),de
 270+ 95AB
 271+ 95AB 08           5 ex af,af
 272+ 95AC F5               push af
 273+ 95AD E1               pop hl
 274+ 95AE
 275+ 95AE 71               ld (hl),c
 276+ 95AF
 277+ 95AF C9               ret
 278+ 95B0
# file closed: Genera_datos_de_impresion.asm
2229  95B0              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95B0              ; -----------------------------------------------------------------------------
   2+ 95B0              ;
   3+ 95B0              ;   11/03/24
   4+ 95B0              ;
   5+ 95B0
   6+ 95B0              Pinta_Sprites
   7+ 95B0
   8+ 95B0              ;    ld hl,(Scanlines_album_SP)
   9+ 95B0              ;    call Extrae_address
  10+ 95B0
  11+ 95B0              ;    inc h
  12+ 95B0              ;    dec h
  13+ 95B0              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95B0
  15+ 95B0 ED 73 08 8C      ld (Stack),sp
  16+ 95B4
  17+ 95B4 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95B5              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95B5 2C               inc l
  20+ 95B6 2C               inc l
  21+ 95B7
  22+ 95B7 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95B8
  24+ 95B8 2C               inc l
  25+ 95B9 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95BA
  27+ 95BA              ;   Seleccionamos rutina de impresión:
  28+ 95BA
  29+ 95BA 3E 10            ld a,16
  30+ 95BC B8               cp b
  31+ 95BD C2 B9 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95C0
  33+ 95C0              ;   Rutinas:
  34+ 95C0
  35+ 95C0              Pinta_rapido    ;   1520 t/states.
  36+ 95C0
  37+ 95C0 E1               pop hl
  38+ 95C1
  39+ 95C1 1A               ld a,(de)
  40+ 95C2 AE               xor (hl)
  41+ 95C3 77               ld (hl),a
  42+ 95C4 2C               inc l
  43+ 95C5 1C               inc e
  44+ 95C6 1A               ld a,(de)
  45+ 95C7 AE               xor (hl)
  46+ 95C8 77               ld (hl),a
  47+ 95C9 2C               inc l
  48+ 95CA 1C               inc e
  49+ 95CB 1A               ld a,(de)
  50+ 95CC AE               xor (hl)
  51+ 95CD 77               ld (hl),a
  52+ 95CE 13               inc de
  53+ 95CF
  54+ 95CF E1               pop hl
  55+ 95D0
  56+ 95D0 1A               ld a,(de)
  57+ 95D1 AE               xor (hl)
  58+ 95D2 77               ld (hl),a
  59+ 95D3 2C               inc l
  60+ 95D4 1C               inc e
  61+ 95D5 1A               ld a,(de)
  62+ 95D6 AE               xor (hl)
  63+ 95D7 77               ld (hl),a
  64+ 95D8 2C               inc l
  65+ 95D9 1C               inc e
  66+ 95DA 1A               ld a,(de)
  67+ 95DB AE               xor (hl)
  68+ 95DC 77               ld (hl),a
  69+ 95DD 13               inc de
  70+ 95DE
  71+ 95DE E1               pop hl
  72+ 95DF
  73+ 95DF 1A               ld a,(de)
  74+ 95E0 AE               xor (hl)
  75+ 95E1 77               ld (hl),a
  76+ 95E2 2C               inc l
  77+ 95E3 1C               inc e
  78+ 95E4 1A               ld a,(de)
  79+ 95E5 AE               xor (hl)
  80+ 95E6 77               ld (hl),a
  81+ 95E7 2C               inc l
  82+ 95E8 1C               inc e
  83+ 95E9 1A               ld a,(de)
  84+ 95EA AE               xor (hl)
  85+ 95EB 77               ld (hl),a
  86+ 95EC 13               inc de
  87+ 95ED
  88+ 95ED E1               pop hl
  89+ 95EE
  90+ 95EE 1A               ld a,(de)
  91+ 95EF AE               xor (hl)
  92+ 95F0 77               ld (hl),a
  93+ 95F1 2C               inc l
  94+ 95F2 1C               inc e
  95+ 95F3 1A               ld a,(de)
  96+ 95F4 AE               xor (hl)
  97+ 95F5 77               ld (hl),a
  98+ 95F6 2C               inc l
  99+ 95F7 1C               inc e
 100+ 95F8 1A               ld a,(de)
 101+ 95F9 AE               xor (hl)
 102+ 95FA 77               ld (hl),a
 103+ 95FB 13               inc de
 104+ 95FC
 105+ 95FC E1               pop hl
 106+ 95FD
 107+ 95FD 1A               ld a,(de)
 108+ 95FE AE               xor (hl)
 109+ 95FF 77               ld (hl),a
 110+ 9600 2C               inc l
 111+ 9601 1C               inc e
 112+ 9602 1A               ld a,(de)
 113+ 9603 AE               xor (hl)
 114+ 9604 77               ld (hl),a
 115+ 9605 2C               inc l
 116+ 9606 1C               inc e
 117+ 9607 1A               ld a,(de)
 118+ 9608 AE               xor (hl)
 119+ 9609 77               ld (hl),a
 120+ 960A 13               inc de
 121+ 960B
 122+ 960B E1               pop hl
 123+ 960C
 124+ 960C 1A               ld a,(de)
 125+ 960D AE               xor (hl)
 126+ 960E 77               ld (hl),a
 127+ 960F 2C               inc l
 128+ 9610 1C               inc e
 129+ 9611 1A               ld a,(de)
 130+ 9612 AE               xor (hl)
 131+ 9613 77               ld (hl),a
 132+ 9614 2C               inc l
 133+ 9615 1C               inc e
 134+ 9616 1A               ld a,(de)
 135+ 9617 AE               xor (hl)
 136+ 9618 77               ld (hl),a
 137+ 9619 13               inc de
 138+ 961A
 139+ 961A E1               pop hl
 140+ 961B
 141+ 961B 1A               ld a,(de)
 142+ 961C AE               xor (hl)
 143+ 961D 77               ld (hl),a
 144+ 961E 2C               inc l
 145+ 961F 1C               inc e
 146+ 9620 1A               ld a,(de)
 147+ 9621 AE               xor (hl)
 148+ 9622 77               ld (hl),a
 149+ 9623 2C               inc l
 150+ 9624 1C               inc e
 151+ 9625 1A               ld a,(de)
 152+ 9626 AE               xor (hl)
 153+ 9627 77               ld (hl),a
 154+ 9628 13               inc de
 155+ 9629
 156+ 9629 E1               pop hl
 157+ 962A
 158+ 962A 1A               ld a,(de)
 159+ 962B AE               xor (hl)
 160+ 962C 77               ld (hl),a
 161+ 962D 2C               inc l
 162+ 962E 1C               inc e
 163+ 962F 1A               ld a,(de)
 164+ 9630 AE               xor (hl)
 165+ 9631 77               ld (hl),a
 166+ 9632 2C               inc l
 167+ 9633 1C               inc e
 168+ 9634 1A               ld a,(de)
 169+ 9635 AE               xor (hl)
 170+ 9636 77               ld (hl),a
 171+ 9637 13               inc de
 172+ 9638
 173+ 9638 E1               pop hl
 174+ 9639
 175+ 9639 1A               ld a,(de)
 176+ 963A AE               xor (hl)
 177+ 963B 77               ld (hl),a
 178+ 963C 2C               inc l
 179+ 963D 1C               inc e
 180+ 963E 1A               ld a,(de)
 181+ 963F AE               xor (hl)
 182+ 9640 77               ld (hl),a
 183+ 9641 2C               inc l
 184+ 9642 1C               inc e
 185+ 9643 1A               ld a,(de)
 186+ 9644 AE               xor (hl)
 187+ 9645 77               ld (hl),a
 188+ 9646 13               inc de
 189+ 9647
 190+ 9647 E1               pop hl
 191+ 9648
 192+ 9648 1A               ld a,(de)
 193+ 9649 AE               xor (hl)
 194+ 964A 77               ld (hl),a
 195+ 964B 2C               inc l
 196+ 964C 1C               inc e
 197+ 964D 1A               ld a,(de)
 198+ 964E AE               xor (hl)
 199+ 964F 77               ld (hl),a
 200+ 9650 2C               inc l
 201+ 9651 1C               inc e
 202+ 9652 1A               ld a,(de)
 203+ 9653 AE               xor (hl)
 204+ 9654 77               ld (hl),a
 205+ 9655 13               inc de
 206+ 9656
 207+ 9656 E1               pop hl
 208+ 9657
 209+ 9657 1A               ld a,(de)
 210+ 9658 AE               xor (hl)
 211+ 9659 77               ld (hl),a
 212+ 965A 2C               inc l
 213+ 965B 1C               inc e
 214+ 965C 1A               ld a,(de)
 215+ 965D AE               xor (hl)
 216+ 965E 77               ld (hl),a
 217+ 965F 2C               inc l
 218+ 9660 1C               inc e
 219+ 9661 1A               ld a,(de)
 220+ 9662 AE               xor (hl)
 221+ 9663 77               ld (hl),a
 222+ 9664 13               inc de
 223+ 9665
 224+ 9665 E1               pop hl
 225+ 9666
 226+ 9666 1A               ld a,(de)
 227+ 9667 AE               xor (hl)
 228+ 9668 77               ld (hl),a
 229+ 9669 2C               inc l
 230+ 966A 1C               inc e
 231+ 966B 1A               ld a,(de)
 232+ 966C AE               xor (hl)
 233+ 966D 77               ld (hl),a
 234+ 966E 2C               inc l
 235+ 966F 1C               inc e
 236+ 9670 1A               ld a,(de)
 237+ 9671 AE               xor (hl)
 238+ 9672 77               ld (hl),a
 239+ 9673 13               inc de
 240+ 9674
 241+ 9674 E1               pop hl
 242+ 9675
 243+ 9675 1A               ld a,(de)
 244+ 9676 AE               xor (hl)
 245+ 9677 77               ld (hl),a
 246+ 9678 2C               inc l
 247+ 9679 1C               inc e
 248+ 967A 1A               ld a,(de)
 249+ 967B AE               xor (hl)
 250+ 967C 77               ld (hl),a
 251+ 967D 2C               inc l
 252+ 967E 1C               inc e
 253+ 967F 1A               ld a,(de)
 254+ 9680 AE               xor (hl)
 255+ 9681 77               ld (hl),a
 256+ 9682 13               inc de
 257+ 9683
 258+ 9683 E1               pop hl
 259+ 9684
 260+ 9684 1A               ld a,(de)
 261+ 9685 AE               xor (hl)
 262+ 9686 77               ld (hl),a
 263+ 9687 2C               inc l
 264+ 9688 1C               inc e
 265+ 9689 1A               ld a,(de)
 266+ 968A AE               xor (hl)
 267+ 968B 77               ld (hl),a
 268+ 968C 2C               inc l
 269+ 968D 1C               inc e
 270+ 968E 1A               ld a,(de)
 271+ 968F AE               xor (hl)
 272+ 9690 77               ld (hl),a
 273+ 9691 13               inc de
 274+ 9692
 275+ 9692 E1               pop hl
 276+ 9693
 277+ 9693 1A               ld a,(de)
 278+ 9694 AE               xor (hl)
 279+ 9695 77               ld (hl),a
 280+ 9696 2C               inc l
 281+ 9697 1C               inc e
 282+ 9698 1A               ld a,(de)
 283+ 9699 AE               xor (hl)
 284+ 969A 77               ld (hl),a
 285+ 969B 2C               inc l
 286+ 969C 1C               inc e
 287+ 969D 1A               ld a,(de)
 288+ 969E AE               xor (hl)
 289+ 969F 77               ld (hl),a
 290+ 96A0 13               inc de
 291+ 96A1
 292+ 96A1 E1               pop hl
 293+ 96A2
 294+ 96A2 1A               ld a,(de)
 295+ 96A3 AE               xor (hl)
 296+ 96A4 77               ld (hl),a
 297+ 96A5 2C               inc l
 298+ 96A6 1C               inc e
 299+ 96A7 1A               ld a,(de)
 300+ 96A8 AE               xor (hl)
 301+ 96A9 77               ld (hl),a
 302+ 96AA 2C               inc l
 303+ 96AB 1C               inc e
 304+ 96AC 1A               ld a,(de)
 305+ 96AD AE               xor (hl)
 306+ 96AE 77               ld (hl),a
 307+ 96AF 13               inc de
 308+ 96B0
 309+ 96B0 ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 96B4 ED 7B 08 8C      ld sp,(Stack)
 311+ 96B8 C9               ret
 312+ 96B9
 313+ 96B9              Pinta_lento
 314+ 96B9
 315+ 96B9 E1           1 pop hl
 316+ 96BA
 317+ 96BA 1A               ld a,(de)
 318+ 96BB AE               xor (hl)
 319+ 96BC 77               ld (hl),a
 320+ 96BD 2C               inc l
 321+ 96BE 1C               inc e
 322+ 96BF 1A               ld a,(de)
 323+ 96C0 AE               xor (hl)
 324+ 96C1 77               ld (hl),a
 325+ 96C2 2C               inc l
 326+ 96C3 1C               inc e
 327+ 96C4 1A               ld a,(de)
 328+ 96C5 AE               xor (hl)
 329+ 96C6 77               ld (hl),a
 330+ 96C7 13               inc de
 331+ 96C8
 332+ 96C8 10 EF            djnz 1B
 333+ 96CA
 334+ 96CA ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 96CE ED 7B 08 8C      ld sp,(Stack)
 336+ 96D2 C9               ret
# file closed: Pinta_Sprites.asm
2230  96D3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96D3              ; ******************************************************************************************************************************************************************************************
   2+ 96D3              ;
   3+ 96D3              ; 26/06/23
   4+ 96D3              ;
   5+ 96D3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96D3
   7+ 96D3              Draw
   8+ 96D3
   9+ 96D3 CD 79 99     	call Prepara_draw
  10+ 96D6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96D7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96D8 28 05        	jr z,2F
  13+ 96DA
  14+ 96DA 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96DD 18 0C        	jr 1F
  16+ 96DF
  17+ 96DF 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96E2 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96E5 CD 71 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96E8              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96E8
  22+ 96E8 CD 18 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96EB
  24+ 96EB 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96EE CB 6F        	bit 5,a
  26+ 96F0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96F2
  28+ 96F2 CD 07 97     	call Comprueba_limite_horizontal
  29+ 96F5 CD 97 97     	call Comprueba_limite_vertical
  30+ 96F8
  31+ 96F8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96F8              ; -----------------------
  33+ 96F8              ; -----------------------
  34+ 96F8              ; -----------------------
  35+ 96F8
  36+ 96F8 CD ED 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96FB CD 24 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96FE
  39+ 96FE 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9701 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9703 32 C8 8B     	ld (Ctrl_0),a
  42+ 9706
  43+ 9706 C9           	ret
  44+ 9707
  45+ 9707              ; *******************************************************************************************************************************************************************************************
  46+ 9707              ;	21/01/23
  47+ 9707              ;
  48+ 9707              ; 	Comprueba_limite_horizontal.
  49+ 9707              ;
  50+ 9707              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9707              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9707              ;
  53+ 9707              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9707              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9707              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9707              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9707
  58+ 9707
  59+ 9707
  60+ 9707 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 970A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 970C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 970E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9710 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9713 18 09            jr 6F
  66+ 9715 CB 5F        1 bit 3,a
  67+ 9717 28 0A            jr z,2F
  68+ 9719 E6 F7            and $f7
  69+ 971B 32 C8 8B         ld (Ctrl_0),a
  70+ 971E CD 71 98     6 call Inicializacion
  71+ 9721 18 5B            jr 5F
  72+ 9723 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9724
  74+ 9724              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9724              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9724
  77+ 9724 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9725 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9728 CD 71 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 972B 67           	ld h,a
  81+ 972C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 972D CD 71 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9730 67           	ld h,a
  84+ 9731 A7           	and a
  85+ 9732 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9734 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9735 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 9738 FE 02        	cp 2
  89+ 973A 38 1E        	jr c,3F
  90+ 973C 28 1C        	jr z,3F
  91+ 973E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 973F 28 23            jr z,7F
  93+ 9741 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9743 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9745 E1           	pop hl
  96+ 9746
  97+ 9746              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9746              ; _para indicar con E="2" en caso necesario.
  99+ 9746
 100+ 9746 E5               push hl
 101+ 9747 C5               push bc
 102+ 9748 CD 71 94     	call calcula_tercio
 103+ 974B FE 01        	cp 1
 104+ 974D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 974F CD 7F 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9752 28 26            jr z,9F
 107+ 9754 38 24            jr c,9F
 108+ 9756 1E 00        11 ld e,0
 109+ 9758 18 22            jr 8F
 110+ 975A 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 975B 28 07        	jr z, 7F
 112+ 975D 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 975F 1E 00         	ld e,0
 114+ 9761 E1           	pop hl
 115+ 9762 18 04        	jr 4F
 116+ 9764 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9766 18 15            jr 10F
 118+ 9768
 119+ 9768              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9768              ; _para indicar con E="2" en caso necesario.
 121+ 9768
 122+ 9768 E5           4 push hl
 123+ 9769 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 976A CD 71 94     	call calcula_tercio
 125+ 976D FE 01        	cp 1
 126+ 976F 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9771 CD 7F 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9774 28 04            jr z,9F
 129+ 9776 30 02            jr nc,9F
 130+ 9778 18 02        	jr 8F
 131+ 977A 1E 02        9 ld e,2
 132+ 977C C1           8 pop bc
 133+ 977D E1           10 pop hl
 134+ 977E C9           5 ret
 135+ 977F
 136+ 977F              ; --------------------
 137+ 977F              ;
 138+ 977F              ; 25/08/22
 139+ 977F
 140+ 977F CD 71 94     Comprueba_centro call calcula_tercio
 141+ 9782 67               ld h,a
 142+ 9783 08           	ex af,af
 143+ 9784 FE 02        	cp 2
 144+ 9786 38 07        	jr c,1F
 145+ 9788 28 05        	jr z,1F
 146+ 978A 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 978D 18 03        	jr 2F
 148+ 978F 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9792 08           2 ex af,af
 150+ 9793 A7               and a
 151+ 9794 ED 42            sbc hl,bc
 152+ 9796 C9               ret
 153+ 9797
 154+ 9797              ; *********************************************************************************************************************************************************************************************
 155+ 9797              ;
 156+ 9797              ;   16/8/22
 157+ 9797              ;
 158+ 9797              ;	Comprueba_limite_vertical
 159+ 9797              ;
 160+ 9797              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9797              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9797              ;
 163+ 9797
 164+ 9797 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 979A 7D           	ld a,l
 166+ 979B E6 1F        	and $1F
 167+ 979D 57           	ld d,a
 168+ 979E 3A DE 8B     	ld a,(Limite_vertical)
 169+ 97A1 BA           	cp d 											; Límite - Posición.
 170+ 97A2 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97A3 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97A6 CB 47        	bit 0,a
 173+ 97A8 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97AA
 175+ 97AA              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97AA
 177+ 97AA 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97AB 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97AD
 180+ 97AD              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97AD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97AD
 183+ 97AD 3A BC 8B         ld a,(Coordenada_X)
 184+ 97B0 16 0F            ld d,Centro_izquierda
 185+ 97B2 A7               and a
 186+ 97B3 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97B4 28 1E            jr z,3F
 188+ 97B6 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97B8              ;                                                    ; _salimos sin modificar nada.
 190+ 97B8 18 0E            jr 2F
 191+ 97BA 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97BB 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97BD
 194+ 97BD              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97BD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97BD
 197+ 97BD 3A BC 8B         ld a,(Coordenada_X)
 198+ 97C0 16 10            ld d,Centro_derecha
 199+ 97C2 A7               and a
 200+ 97C3 92               sub d
 201+ 97C4 28 0E            jr z,3F
 202+ 97C6 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97C8              ;                                                    ; _salimos sin modificar nada.
 204+ 97C8 CB 43        2 bit 0,e
 205+ 97CA 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97CC C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97CD CD 61 98         call Modificaccionne
 208+ 97D0 C1           	pop bc
 209+ 97D1 CD 71 98         call Inicializacion
 210+ 97D4 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97D5
 212+ 97D5              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97D5
 214+ 97D5 C5           4 push bc
 215+ 97D6 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97D9 0A           	ld a,(bc)
 217+ 97DA 3D           	dec a
 218+ 97DB 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97DC 7D           	ld a,l
 220+ 97DD 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97DE CB 47        	bit 0,a
 222+ 97E0 28 03        	jr z,5F
 223+ 97E2 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97E3 18 2E        	jr 7F
 225+ 97E5
 226+ 97E5              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97E5
 228+ 97E5 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97E6 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97E7 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97EA CB 4F        	bit 1,a
 232+ 97EC 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97EE F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97EF
 235+ 97EF              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97EF
 237+ 97EF 1C               inc e
 238+ 97F0 1D               dec e
 239+ 97F1 20 07            jr nz,12F
 240+ 97F3 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97F4 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97F5 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97F8 18 44        13 jr 9F
 244+ 97FA CB 43        12 bit 0,e
 245+ 97FC 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97FE              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97FE C1           	pop bc
 248+ 97FF 18 D3        	jr 3B
 249+ 9801 80           14 add b
 250+ 9802 6F               ld l,a
 251+ 9803 22 CB 8B     	ld (Posicion_actual),hl
 252+ 9806 CD 61 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9809 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 980B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 980D 32 C8 8B         ld (Ctrl_0),a
 256+ 9810 F1           	pop af
 257+ 9811 18 2B        	jr 9F
 258+ 9813
 259+ 9813              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9813
 261+ 9813 F5           7 push af
 262+ 9814 3A C8 8B     	ld a,(Ctrl_0)
 263+ 9817 CB 47        	bit 0,a
 264+ 9819 20 1D        	jr nz,8F
 265+ 981B F1           	pop af
 266+ 981C
 267+ 981C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 981C
 269+ 981C 1C           	inc e
 270+ 981D 1D               dec e
 271+ 981E 20 07            jr nz,10F
 272+ 9820 90           	sub b
 273+ 9821 6F               ld l,a
 274+ 9822 22 CB 8B     	ld (Posicion_actual),hl
 275+ 9825 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9827              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9827 CB 43        10 bit 0,e
 278+ 9829 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 982B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 982B C1           	pop bc
 281+ 982C 18 A6        	jr 3B
 282+ 982E 90           16 sub b
 283+ 982F 6F               ld l,a
 284+ 9830 22 CB 8B     	ld (Posicion_actual),hl
 285+ 9833 CD 61 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9836 18 06            jr 9F
 287+ 9838 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 983A 32 C8 8B         ld (Ctrl_0),a
 289+ 983D F1           	pop af
 290+ 983E C1           9 pop bc
 291+ 983F 1E 00        	ld e,0
 292+ 9841 CD 71 98         call Inicializacion
 293+ 9844 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9845 08           	ex af,af
 295+ 9846 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9847 18 8B            jr 3B
 297+ 9849
 298+ 9849              ; --------------------
 299+ 9849
 300+ 9849 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 984B CD 94 99     1 call PreviousScan
 302+ 984E 10 FB            djnz 1B
 303+ 9850 22 CB 8B     	ld (Posicion_actual),hl
 304+ 9853 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9854 C9           	ret
 306+ 9855
 307+ 9855              ; --------------------
 308+ 9855
 309+ 9855 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9857 CD 85 99     1 call NextScan
 311+ 985A 10 FB            djnz 1B
 312+ 985C 22 CB 8B     	ld (Posicion_actual),hl
 313+ 985F AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9860 C9           	ret
 315+ 9861
 316+ 9861              ; --------------------
 317+ 9861              ;
 318+ 9861              ;	22/01/23
 319+ 9861              ;
 320+ 9861              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9861              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9861              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9861
 324+ 9861
 325+ 9861              Modificaccionne
 326+ 9861
 327+ 9861 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 9864 FE 02        	cp 2
 329+ 9866 CC 49 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9869 DC 49 98         call c,Modifica_Pos_actual
 331+ 986C C8           	ret z
 332+ 986D CD 55 98         call Modifica_Pos_actual2
 333+ 9870 C9               ret
 334+ 9871
 335+ 9871              ; *************************************************************************************************************************************************************************************************
 336+ 9871              ;
 337+ 9871              ;	13/8/22
 338+ 9871              ;
 339+ 9871              ;	Inicializacion
 340+ 9871              ;
 341+ 9871              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9871              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9871              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9871              ;
 345+ 9871              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9871              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9871              ;	_ desaparece/aparece.
 348+ 9871
 349+ 9871              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9871              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9871              ;
 352+ 9871              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9871              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9871              ; 		   [E] ="0"
 355+ 9871
 356+ 9871              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9871
 358+ 9871 CD 71 94     Inicializacion call calcula_tercio
 359+ 9874 28 36        	jr z,primit
 360+ 9876 E6 02        	and 2
 361+ 9878 20 07        	jr nz,segmit
 362+ 987A 7D           	ld a,l
 363+ 987B FE 7F        	cp $7f
 364+ 987D 38 2D        	jr c,primit
 365+ 987F 28 2B        	jr z,primit
 366+ 9881 CD E7 98     segmit call column
 367+ 9884 38 13        	jr c,tercuad
 368+ 9886 3E 04        cuarcuad ld a,4
 369+ 9888 32 DA 8B     	ld (Cuad_objeto),a
 370+ 988B 21 20 48     	ld hl,$4820
 371+ 988E 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 9891 21 DE 8B     	ld hl,Limite_vertical
 373+ 9894 36 0D        	ld (hl),$0d
 374+ 9896 08           	ex af,af
 375+ 9897 18 3C        	jr 1F
 376+ 9899              tercuad
 377+ 9899 3E 03        	ld a,3
 378+ 989B 32 DA 8B     	ld (Cuad_objeto),a
 379+ 989E 21 20 48     	ld hl,$4820
 380+ 98A1 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 98A4 21 DE 8B     	ld hl,Limite_vertical
 382+ 98A7 36 12        	ld (hl),$12
 383+ 98A9 08           	ex af,af
 384+ 98AA 18 29        	jr 1F
 385+ 98AC CD E7 98     primit call column
 386+ 98AF 38 13        	jr c, primcuad
 387+ 98B1              segcuad
 388+ 98B1 3E 02        	ld a,2
 389+ 98B3 32 DA 8B     	ld (Cuad_objeto),a
 390+ 98B6 21 C0 4F     	ld hl,$4fc0
 391+ 98B9 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 98BC 21 DE 8B     	ld hl,Limite_vertical
 393+ 98BF 36 0D        	ld (hl),$0d
 394+ 98C1 08           	ex af,af
 395+ 98C2 18 11        	jr 1F
 396+ 98C4              primcuad
 397+ 98C4 3E 01        	ld a,1
 398+ 98C6 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98C9 21 C0 4F     	ld hl,$4fc0
 400+ 98CC 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98CF 21 DE 8B     	ld hl,Limite_vertical
 402+ 98D2 36 12        	ld (hl),$12
 403+ 98D4 08           	ex af,af
 404+ 98D5
 405+ 98D5 C5           1 push bc
 406+ 98D6 E5           	push hl
 407+ 98D7 D5           	push de
 408+ 98D8
 409+ 98D8 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98DB CD 8F 94     	call Genera_coordenadas
 411+ 98DE
 412+ 98DE D1           	pop de
 413+ 98DF E1           	pop hl
 414+ 98E0 C1           	pop bc
 415+ 98E1
 416+ 98E1 21 C8 8B     	ld hl,Ctrl_0
 417+ 98E4 CB EE        	set 5,(hl)
 418+ 98E6 C9           	ret
 419+ 98E7
 420+ 98E7              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98E7
 422+ 98E7              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98E7              ;
 424+ 98E7              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98E7
 426+ 98E7 7D           column ld a,l
 427+ 98E8 E6 1F        	and $1f
 428+ 98EA FE 10         	cp $10
 429+ 98EC C9            	ret
 430+ 98ED
 431+ 98ED              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98ED              ;
 433+ 98ED              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98ED              ;
 435+ 98ED              ; 14/12/22
 436+ 98ED              ;
 437+ 98ED              ;	Modifica: A y BC.
 438+ 98ED
 439+ 98ED 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98F0 E6 01        	and 1
 441+ 98F2 28 17        	jr z,1F
 442+ 98F4
 443+ 98F4              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98F4
 445+ 98F4 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98F7 47           	ld b,a
 447+ 98F8 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98F9 79           	ld a,c
 449+ 98FA 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98FB 38 08        	jr c,2F
 451+ 98FD 47           	ld b,a
 452+ 98FE 79           	ld a,c
 453+ 98FF 90           	sub b
 454+ 9900 32 DB 8B     	ld (Columnas),a
 455+ 9903 18 1B        	jr 4F
 456+ 9905 79           2 ld a,c
 457+ 9906 32 DB 8B     	ld (Columnas),a
 458+ 9909 18 15        	jr 4F
 459+ 990B
 460+ 990B              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 990B
 462+ 990B 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 990E 81           	add c
 464+ 990F 3D           	dec a
 465+ 9910 D6 1F        	sub $1f
 466+ 9912 38 08        	jr c,3F
 467+ 9914 47           	ld b,a
 468+ 9915 79           	ld a,c
 469+ 9916 90           	sub b
 470+ 9917 32 DB 8B     	ld (Columnas),a
 471+ 991A 18 04        	jr 4F
 472+ 991C 79           3 ld a,c
 473+ 991D 32 DB 8B     	ld (Columnas),a
 474+ 9920 D9           4 exx
 475+ 9921 4F           	ld c,a
 476+ 9922 D9           	exx
 477+ 9923 C9            ret
 478+ 9924
 479+ 9924              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9924              ;
 481+ 9924              ;   19/7/23
 482+ 9924              ;
 483+ 9924              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9924              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9924              ;
 486+ 9924              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9924              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9924              ;
 489+ 9924              ;	DESTRUYE: HL,B Y A.
 490+ 9924
 491+ 9924 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9927 FE 02        	cp 2
 493+ 9929 38 18        	jr c,1F
 494+ 992B 28 16        	jr z,1F
 495+ 992D E6 01        	and 1
 496+ 992F 28 0D        	jr z,3F
 497+ 9931
 498+ 9931              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9931
 500+ 9931 CD 6D 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9934
 502+ 9934 7D           9 ld a,l
 503+ 9935 E6 1F        	and $1f
 504+ 9937 28 2A        	jr z,7F
 505+ 9939 2B           	dec hl
 506+ 993A 10 F8        	djnz 9B
 507+ 993C 18 25        	jr 7F
 508+ 993E
 509+ 993E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 993E
 511+ 993E 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 9941 18 20        	jr 7F
 513+ 9943
 514+ 9943 28 14        1 jr z,2F
 515+ 9945
 516+ 9945              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9945
 518+ 9945 CD 6D 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9948
 520+ 9948 7D           4 ld a,l
 521+ 9949 E6 1F        	and $1f
 522+ 994B 28 03        	jr z,6F
 523+ 994D 2B           	dec hl
 524+ 994E 10 F8        	djnz 4B
 525+ 9950 06 0F        6 ld b,15
 526+ 9952 CD 94 99     5 call PreviousScan
 527+ 9955 10 FB        	djnz 5B
 528+ 9957 18 0A        	jr 7F
 529+ 9959
 530+ 9959              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9959
 532+ 9959 CD 6D 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 995C 06 0F        	ld b,15
 534+ 995E CD 94 99     8 call PreviousScan
 535+ 9961 10 FB        	djnz 8B
 536+ 9963
 537+ 9963 E5           7 push hl
 538+ 9964 DD E1        	pop ix
 539+ 9966
 540+ 9966 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 9969 E5           	push hl
 542+ 996A FD E1        	pop iy
 543+ 996C
 544+ 996C C9           	ret
 545+ 996D
 546+ 996D              ; --------------------------------------------------------------------------------------------------------------------
 547+ 996D              ;
 548+ 996D              ;	2/1/23
 549+ 996D              ;
 550+ 996D              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 996D              ;
 552+ 996D              ;	Tras esta rutina tenemos:
 553+ 996D              ;
 554+ 996D              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 996D              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 996D              ;
 557+ 996D              ;	DESTRUYE!!!!! HL,B y A.
 558+ 996D
 559+ 996D 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9970 3A DB 8B     	ld a,(Columnas)
 561+ 9973 3D           	dec a
 562+ 9974 20 01        	jr nz,1F
 563+ 9976 3C           	inc a
 564+ 9977 47           1 ld b,a
 565+ 9978 C9           	ret
 566+ 9979
 567+ 9979              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9979              ;
 569+ 9979              ;	Prepara_draw
 570+ 9979              ;
 571+ 9979              ;	Es una rutina de carga.
 572+ 9979              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9979              ;
 574+ 9979              ;	FUNCIONAMIENTO:
 575+ 9979              ;
 576+ 9979              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9979              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9979              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9979              ;
 580+ 9979              ;	DESTRUYE:
 581+ 9979              ;
 582+ 9979              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9979
 584+ 9979 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 997C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 997D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 997E 4E           	ld c,(hl)
 588+ 997F 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 9982 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9984 C9           	ret
 591+ 9985
 592+ 9985              ;----------------------------------------------------------------------------------------------------------------
 593+ 9985              ;
 594+ 9985              ;	5/08/22
 595+ 9985              ;
 596+ 9985              ;   NextScan.
 597+ 9985              ;
 598+ 9985              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9985              ;
 600+ 9985              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9985              ;
 602+ 9985              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9985              ;
 604+ 9985              ;       DESTRUIDOS: AF y HL !!!
 605+ 9985              ;
 606+ 9985              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9985              ;
 608+ 9985
 609+ 9985 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9986 7C               ld a,h
 611+ 9987 E6 07            and 7
 612+ 9989 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 998A
 614+ 998A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 998B C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 998D 6F               ld l,a
 617+ 998E D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 998F
 619+ 998F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9990 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9992 67               ld h,a
 622+ 9993 C9               ret
 623+ 9994
 624+ 9994              ;----------------------------------------------------------------------------------------------------------------
 625+ 9994              ;
 626+ 9994              ;	5/08/22
 627+ 9994              ;
 628+ 9994              ;   PreviousScan.
 629+ 9994              ;
 630+ 9994              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9994              ;
 632+ 9994              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9994              ;
 634+ 9994              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9994              ;
 636+ 9994              ;       DESTRUIDOS: AF y HL !!!
 637+ 9994              ;
 638+ 9994              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9994              ;
 640+ 9994
 641+ 9994 7C           PreviousScan ld a,h
 642+ 9995 25               dec h               ; Dec H.
 643+ 9996 E6 07            and 7
 644+ 9998 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9999
 646+ 9999 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 999A D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 999C 6F               ld l,a
 649+ 999D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 999E
 651+ 999E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 999F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99A1 67               ld h,a
 654+ 99A2 C9               ret
 655+ 99A3
 656+ 99A3
 657+ 99A3
 658+ 99A3
 659+ 99A3
 660+ 99A3
 661+ 99A3
 662+ 99A3
 663+ 99A3
 664+ 99A3
 665+ 99A3
 666+ 99A3
# file closed: Draw_XOR.asm
2231  99A3              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99A3
   2+ 99A3              ; ******************************************************************************************************************************************************************************************
   3+ 99A3              ;
   4+ 99A3              ;   20/05/23
   5+ 99A3              ;
   6+ 99A3              ;	Recompone_posicion_inicio
   7+ 99A3              ;
   8+ 99A3              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99A3              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99A3              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99A3              ;	_ a una u otra rutina.
  12+ 99A3
  13+ 99A3              Recompone_posicion_inicio
  14+ 99A3
  15+ 99A3 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 99A6 7D           	ld a,l
  17+ 99A7 E6 1F        	and $1f
  18+ 99A9 28 16        	jr z,1F
  19+ 99AB
  20+ 99AB FE 1F        	cp $1f
  21+ 99AD 28 0D        	jr z,3F
  22+ 99AF
  23+ 99AF 21 C7 8B     	ld hl,Ctrl_2
  24+ 99B2 CB C6        	set 0,(hl)
  25+ 99B4 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 99B7 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 99BA 18 08        	jr 2F
  28+ 99BC
  29+ 99BC CD 6A 9B     3 call Mov_left
  30+ 99BF 18 03        	jr 2F
  31+ 99C1
  32+ 99C1 CD 47 9A     1 call Mov_right
  33+ 99C4 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99C7 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99CA C9           	ret
  36+ 99CB
  37+ 99CB              ; ******************************************************************************************************************************************************************************************
  38+ 99CB              ;
  39+ 99CB              ;   27/05/23
  40+ 99CB              ;
  41+ 99CB              ;	Mov_down
  42+ 99CB              ;
  43+ 99CB              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99CB              ;
  45+ 99CB              ;
  46+ 99CB              Mov_down
  47+ 99CB
  48+ 99CB CD 35 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99CE              ;																	; _ repone (Puntero_objeto).
  50+ 99CE 21 C8 8B     	ld hl,Ctrl_0
  51+ 99D1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99D3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99D3              ; 																	; _ en el caso de que no lo haya.
  54+ 99D3 3A E3 8B     	ld a,(Vel_down)
  55+ 99D6 47           	ld b,a
  56+ 99D7 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99DA CD 71 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99DD E6 02        	and 2
  59+ 99DF 28 17        	jr z,1F
  60+ 99E1
  61+ 99E1              ; Nos encontramos en el último tercio de pantalla.
  62+ 99E1              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99E1
  64+ 99E1 7C           	ld a,h
  65+ 99E2 FE 57        	cp $57
  66+ 99E4 20 12        	jr nz,1F
  67+ 99E6
  68+ 99E6 7D           	ld a,l
  69+ 99E7 C6 20        	add $20
  70+ 99E9 30 0D        	jr nc,1F
  71+ 99EB
  72+ 99EB              ; ------------------------------
  73+ 99EB              ;
  74+ 99EB              ;	12/01/24
  75+ 99EB
  76+ 99EB              ;	call Reaparece_arriba
  77+ 99EB CD F7 9C     	call Reinicio
  78+ 99EE
  79+ 99EE              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99EE
  81+ 99EE 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 99F1 CB CF        	set 1,a
  83+ 99F3 32 2E 8C     	ld (Ctrl_3),a
  84+ 99F6
  85+ 99F6 18 08        	jr 3F
  86+ 99F8              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99F8              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99F8              ; ------------------------------
  89+ 99F8
  90+ 99F8 CD 85 99     1 call NextScan
  91+ 99FB 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99FE 10 DA            djnz 2B
  93+ 9A00 CD 8F 94     3 call Genera_coordenadas
  94+ 9A03 C9           	ret
  95+ 9A04
  96+ 9A04              ; ******************************************************************************************************************************************************************************************
  97+ 9A04              ;
  98+ 9A04              ;   27/05/23
  99+ 9A04              ;
 100+ 9A04              ;	Mov_up
 101+ 9A04              ;
 102+ 9A04              ; 	Mueve el Sprite hacia arriba.
 103+ 9A04              ;
 104+ 9A04              ;
 105+ 9A04              Mov_up
 106+ 9A04
 107+ 9A04 CD 35 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A07              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A07 21 C8 8B     	ld hl,Ctrl_0
 110+ 9A0A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A0C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A0C              ; 																		; _ en el caso de que no lo haya.
 113+ 9A0C 3A E2 8B     	ld a,(Vel_up)
 114+ 9A0F 47           	ld b,a
 115+ 9A10 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 9A13 CD 71 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A16 A7           	and a
 118+ 9A17 20 10        	jr nz,1F
 119+ 9A19
 120+ 9A19              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A19              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A19
 123+ 9A19 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A1A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A1C 20 0B            jr nz,1F
 126+ 9A1E 7D               ld a,l
 127+ 9A1F D6 20            sub $20
 128+ 9A21 30 06            jr nc,1F
 129+ 9A23 25               dec h
 130+ 9A24
 131+ 9A24              ; -----------------------------
 132+ 9A24 CD D8 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A27              ;	call Reinicio
 134+ 9A27              ; -----------------------------
 135+ 9A27
 136+ 9A27 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A29 CD 94 99     1 call PreviousScan
 138+ 9A2C 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A2F 10 E2            djnz 3B
 140+ 9A31 CD 8F 94     2 call Genera_coordenadas
 141+ 9A34 C9           	ret
 142+ 9A35
 143+ 9A35              ; -----------------------------
 144+ 9A35              ;
 145+ 9A35              ;	27/5/23
 146+ 9A35              ;
 147+ 9A35              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A35              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A35              ;
 150+ 9A35              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A35              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A35              ;
 153+ 9A35              ;	Modifica: A y (Puntero_objeto).
 154+ 9A35
 155+ 9A35 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A38 CB 47        	bit 0,a
 157+ 9A3A C8           	ret z
 158+ 9A3B CB 87        	res 0,a
 159+ 9A3D 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A40 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A43 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A46 C9           	ret
 163+ 9A47
 164+ 9A47              ; ******************************************************************************************************************************************************************************************
 165+ 9A47              ;
 166+ 9A47              ;	19/10/22
 167+ 9A47              ;
 168+ 9A47              ;	Mov_right.
 169+ 9A47              ;
 170+ 9A47              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A47              ;
 172+ 9A47
 173+ 9A47 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A4A CB 77        	bit 6,a
 175+ 9A4C 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A4E
 177+ 9A4E CD 86 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A51 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A52
 180+ 9A52 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A55 CB E6        	set 4,(hl)
 182+ 9A57 18 52        	jr 8F
 183+ 9A59
 184+ 9A59 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A5C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A5E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A5E              ; 																	; _ en el caso de que no lo haya.
 188+ 9A5E 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A61 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A63 20 46        	jr nz,8F
 191+ 9A65
 192+ 9A65 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A68 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A69 28 40        	jr z,8F
 195+ 9A6B
 196+ 9A6B              ; ---------- ---------- ----------
 197+ 9A6B              ;
 198+ 9A6B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A6B
 200+ 9A6B 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A6E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A70 28 11        	jr z,1F
 203+ 9A72 38 06        	jr c,6F
 204+ 9A74 FE 04        	cp 4
 205+ 9A76 28 14        	jr z,7F
 206+ 9A78 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A7A
 208+ 9A7A              ; ---------- ---------- ----------
 209+ 9A7A              ;
 210+ 9A7A              ; Perfiles de velocidad
 211+ 9A7A              ;
 212+ 9A7A
 213+ 9A7A 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A7D FE FE        	cp $fe
 215+ 9A7F 20 2A        	jr nz,8F
 216+ 9A81 18 10        	jr 3F
 217+ 9A83 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A86 FE FD        	cp $fd
 219+ 9A88 20 21        	jr nz,8F
 220+ 9A8A 18 07        	jr 3F
 221+ 9A8C 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A8F FE FB        	cp $fb
 223+ 9A91 20 18        	jr nz,8F
 224+ 9A93
 225+ 9A93              ; ---------- ---------- ----------
 226+ 9A93
 227+ 9A93              3
 228+ 9A93 CD C6 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A96              ;	call Reinicio
 230+ 9A96
 231+ 9A96              ; ---------- ---------- ----------
 232+ 9A96              ;
 233+ 9A96              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A96
 235+ 9A96 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A98 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A99 CD B2 9A     	call DESPLZ_DER
 238+ 9A9C C1           	pop bc
 239+ 9A9D 10 F9        	djnz 5B
 240+ 9A9F 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AA2 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AA3 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9AA6 CD 8F 94     	call Genera_coordenadas
 244+ 9AA9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AAB
 246+ 9AAB              ; ---------- ---------- ----------
 247+ 9AAB
 248+ 9AAB 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9AAE CD B2 9A     	call DESPLZ_DER
 250+ 9AB1 C9           2 ret
 251+ 9AB2
 252+ 9AB2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AB2              ;
 254+ 9AB2              ;	22/9/22
 255+ 9AB2              ;
 256+ 9AB2
 257+ 9AB2 CD C1 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AB5 CD 0D 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AB8 CD 36 9B         call Ciclo_completo
 260+ 9ABB 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9ABE CB FE        	set 7,(hl)
 262+ 9AC0 C9           	ret
 263+ 9AC1
 264+ 9AC1              ; ******************************************************************************************************************************************************************************************
 265+ 9AC1              ;	15/02/23
 266+ 9AC1              ;
 267+ 9AC1
 268+ 9AC1 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AC4 47           	ld b,a
 270+ 9AC5 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AC8 23           1 inc hl
 272+ 9AC9 23           	inc hl
 273+ 9ACA 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9ACC 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9ACF CD 70 90     	call Extrae_address
 276+ 9AD2 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9AD5
 278+ 9AD5              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AD5
 280+ 9AD5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AD5              ; Cuántos movimientos hemos hecho ??
 282+ 9AD5              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AD5
 284+ 9AD5 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AD8 EB           	ex de,hl
 286+ 9AD9 A7           	and a
 287+ 9ADA ED 52        	sbc hl,de
 288+ 9ADC CB 3D        	srl l
 289+ 9ADE 3E 08        6 ld a,8
 290+ 9AE0 95           	sub l
 291+ 9AE1 30 1E        	jr nc,3F
 292+ 9AE3
 293+ 9AE3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AE3              ; B="0".
 295+ 9AE3
 296+ 9AE3 04           4 inc b
 297+ 9AE4 3C           	inc a
 298+ 9AE5 20 FC        	jr nz,4B
 299+ 9AE7 78           	ld a,b
 300+ 9AE8 08           	ex af,af
 301+ 9AE9 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AEC 23           5 inc hl
 303+ 9AED 23           	inc hl
 304+ 9AEE 10 FC        	djnz 5B
 305+ 9AF0 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AF3 CD 70 90     	call Extrae_address
 307+ 9AF6 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9AF9
 309+ 9AF9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AF9              ; _(Posicion_actual).
 311+ 9AF9
 312+ 9AF9 21 CB 8B     	ld hl,Posicion_actual
 313+ 9AFC 34           	inc (hl)
 314+ 9AFD 08               ex af,af
 315+ 9AFE 6F           	ld l,a
 316+ 9AFF 18 DD        	jr 6B
 317+ 9B01
 318+ 9B01              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B01
 320+ 9B01 47           3 ld b,a
 321+ 9B02 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B05 23           2 inc hl
 323+ 9B06 23           	inc hl
 324+ 9B07 10 FC        	djnz 2B
 325+ 9B09 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B0C C9           8 ret
 327+ 9B0D
 328+ 9B0D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B0D              ;
 330+ 9B0D              ;	24/7/22
 331+ 9B0D              ;
 332+ 9B0D              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B0D              ;
 334+ 9B0D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B0D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B0D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B0D
 338+ 9B0D 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B10 A7           	and a
 340+ 9B11 20 1F        	jr nz,1F
 341+ 9B13 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B15 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9B18
 344+ 9B18 21 CA 8B     	ld hl,Columns
 345+ 9B1B 34           	inc (hl)
 346+ 9B1C 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9B1F E6 01        	and 1
 348+ 9B21 28 0F        	jr z,1F
 349+ 9B23 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B26 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B27 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B2A CD 8F 94     	call Genera_coordenadas
 353+ 9B2D CD 92 9C     	call Inc_CTRL_DESPLZ
 354+ 9B30 18 03        	jr 2F
 355+ 9B32 CD 92 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B35 C9           2 ret
 357+ 9B36
 358+ 9B36              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B36              ;
 360+ 9B36              ;	24/7/22
 361+ 9B36              ;
 362+ 9B36              ;	Ciclo_completo.
 363+ 9B36              ;
 364+ 9B36              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B36              ;
 366+ 9B36              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B36              ; 	Decrementamos (Columns).
 368+ 9B36              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B36              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B36
 371+ 9B36
 372+ 9B36 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B39 FE FF        	cp $ff
 374+ 9B3B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B3D E6 F0        	and $f0
 376+ 9B3F 20 28        	jr nz,3F
 377+ 9B41
 378+ 9B41              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B41
 380+ 9B41 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B44 47           	ld b,a
 382+ 9B45 3E F8        	ld a,$f8
 383+ 9B47 80           	add b
 384+ 9B48 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B4B 18 1C        	jr 3F
 386+ 9B4D 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B50 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B51 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B52 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B55 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B58 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B5A 20 0A        	jr nz,2F
 393+ 9B5C 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B5F 23           	inc hl
 395+ 9B60 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B63 CD 8F 94     	call Genera_coordenadas
 397+ 9B66
 398+ 9B66              ; Inicia el puntero de Sprite.
 399+ 9B66
 400+ 9B66 CD 85 90     2 call Inicia_puntero_objeto_der
 401+ 9B69 C9           3 ret
 402+ 9B6A
 403+ 9B6A              ; ******************************************************************************************************************************************************************************************
 404+ 9B6A              ;
 405+ 9B6A              ;	15/02/23
 406+ 9B6A              ;
 407+ 9B6A              ;	Mov_left.
 408+ 9B6A              ;
 409+ 9B6A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B6A              ;
 411+ 9B6A              Mov_left
 412+ 9B6A
 413+ 9B6A 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B6D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B6F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B6F              ; 																	; _ en el caso de que no lo haya.
 417+ 9B6F 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B72 CB 77        	bit 6,a
 419+ 9B74 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B76
 421+ 9B76 CD 8C 9C     	call Stop_Amadeus_left
 422+ 9B79 C8           	ret z
 423+ 9B7A 20 4A        	jr nz,8F
 424+ 9B7C
 425+ 9B7C 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B7F A7           	and a
 427+ 9B80 20 44        	jr nz,8F
 428+ 9B82
 429+ 9B82 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B85 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B86 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B88
 433+ 9B88              ; ---------- ---------- ----------
 434+ 9B88
 435+ 9B88 3A E0 8B     	ld a,(Vel_left)
 436+ 9B8B FE 02        	cp 2
 437+ 9B8D 28 0F        	jr z,1F
 438+ 9B8F 38 04        	jr c,6F
 439+ 9B91 FE 04        	cp 4
 440+ 9B93 28 12        	jr z,7F
 441+ 9B95
 442+ 9B95              ; ---------- ---------- ----------
 443+ 9B95
 444+ 9B95 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B98 FE F8        	cp $f8
 446+ 9B9A 20 2A        	jr nz,8F
 447+ 9B9C 18 10        	jr 4F
 448+ 9B9E 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BA1 FE F9        	cp $f9
 450+ 9BA3 20 21        	jr nz,8F
 451+ 9BA5 18 07        	jr 4F
 452+ 9BA7 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BAA FE FB        	cp $fb
 454+ 9BAC 20 18        	jr nz,8F
 455+ 9BAE
 456+ 9BAE              ; ---------- ---------- ----------
 457+ 9BAE
 458+ 9BAE              4
 459+ 9BAE CD B4 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BB1              ;	call Reinicio
 461+ 9BB1
 462+ 9BB1              ; ---------- ---------- ----------
 463+ 9BB1
 464+ 9BB1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BB3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BB4
 467+ 9BB4              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BB4              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BB4
 470+ 9BB4 CD CD 9B     	call DESPLZ_IZQ
 471+ 9BB7 C1           	pop bc
 472+ 9BB8 10 F9        	djnz 5B
 473+ 9BBA 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BBD 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BBE 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9BC1 CD 8F 94     	call Genera_coordenadas
 477+ 9BC4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BC6
 479+ 9BC6              ; ---------- ---------- ----------
 480+ 9BC6
 481+ 9BC6              ; Movemos, no hay recolocación.
 482+ 9BC6
 483+ 9BC6 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BC9 CD CD 9B     	call DESPLZ_IZQ
 485+ 9BCC C9           2 ret
 486+ 9BCD
 487+ 9BCD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BCD              ;
 489+ 9BCD              ;	22/9/22
 490+ 9BCD
 491+ 9BCD              DESPLZ_IZQ
 492+ 9BCD
 493+ 9BCD CD DC 9B     	call Desplaza_izquierda
 494+ 9BD0 CD 28 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BD3 CD 50 9C     	call Ciclo_completo_2
 496+ 9BD6 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BD9 CB BE        	res 7,(hl)
 498+ 9BDB C9           	ret
 499+ 9BDC
 500+ 9BDC              Desplaza_izquierda
 501+ 9BDC
 502+ 9BDC 3A E0 8B     	ld a,(Vel_left)
 503+ 9BDF 47           	ld b,a
 504+ 9BE0 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BE3 23           1 inc hl
 506+ 9BE4 23           	inc hl
 507+ 9BE5 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BE7 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BEA CD 70 90     	call Extrae_address
 510+ 9BED 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BF0
 512+ 9BF0              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BF0
 514+ 9BF0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BF0              ; Cuántos movimientos hemos hecho ??
 516+ 9BF0              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BF0
 518+ 9BF0 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BF3 EB           	ex de,hl
 520+ 9BF4 A7           	and a
 521+ 9BF5 ED 52        	sbc hl,de
 522+ 9BF7 CB 3D        	srl l
 523+ 9BF9 3E 08        6 ld a,8
 524+ 9BFB 95           	sub l
 525+ 9BFC 30 1E        	jr nc,3F
 526+ 9BFE
 527+ 9BFE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BFE              ; B="0".
 529+ 9BFE
 530+ 9BFE 04           4 inc b
 531+ 9BFF 3C           	inc a
 532+ 9C00 20 FC        	jr nz,4B
 533+ 9C02 78           	ld a,b
 534+ 9C03 08           	ex af,af
 535+ 9C04 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C07 23           5 inc hl
 537+ 9C08 23           	inc hl
 538+ 9C09 10 FC        	djnz 5B
 539+ 9C0B 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C0E CD 70 90     	call Extrae_address
 541+ 9C11 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9C14
 543+ 9C14              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C14              ; _(Posicion_actual).
 545+ 9C14
 546+ 9C14 21 CB 8B     	ld hl,Posicion_actual
 547+ 9C17 35           	dec (hl)
 548+ 9C18 08           	ex af,af
 549+ 9C19 6F           	ld l,a
 550+ 9C1A 18 DD        	jr 6B
 551+ 9C1C
 552+ 9C1C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C1C
 554+ 9C1C 47           3 ld b,a
 555+ 9C1D 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C20 23           2 inc hl
 557+ 9C21 23           	inc hl
 558+ 9C22 10 FC        	djnz 2B
 559+ 9C24 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C27 C9           8 ret
 561+ 9C28
 562+ 9C28              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C28              ;
 564+ 9C28              ;	modifica_parametros_1er_DESPLZ
 565+ 9C28              ;
 566+ 9C28              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C28              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C28              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C28
 570+ 9C28 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C2B A7           	and a
 572+ 9C2C 20 1E        	jr nz,1F
 573+ 9C2E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C2F 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C32 21 CA 8B     	ld hl,Columns
 576+ 9C35 34           	inc (hl)
 577+ 9C36 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C39 E6 01        	and 1
 579+ 9C3B 20 0F        	jr nz,1F
 580+ 9C3D 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C40 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C41 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C44 CD 8F 94     	call Genera_coordenadas
 584+ 9C47 CD A3 9C     	call Dec_CTRL_DESPLZ
 585+ 9C4A 18 03        	jr 2F
 586+ 9C4C CD A3 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C4F C9           2 ret
 588+ 9C50
 589+ 9C50              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C50
 591+ 9C50 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C53 FE F7        	cp $f7
 593+ 9C55 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C57 30 2C        	jr nc,3F
 595+ 9C59
 596+ 9C59              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C59
 598+ 9C59 06 00        	ld b,0
 599+ 9C5B 04           4 inc b
 600+ 9C5C 3C           	inc a
 601+ 9C5D FE F7        	cp $f7
 602+ 9C5F 20 FA        	jr nz,4B
 603+ 9C61 3E FF        	ld a,$ff
 604+ 9C63 90           	sub b
 605+ 9C64 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C67 18 1C        	jr 3F
 607+ 9C69
 608+ 9C69              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C69
 610+ 9C69 21 CA 8B     1 ld hl,Columns
 611+ 9C6C 35           	dec (hl)
 612+ 9C6D AF           	xor a
 613+ 9C6E 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C71 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C74 E6 01        	and 1
 616+ 9C76 28 0A        	jr z,2F
 617+ 9C78 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C7B 2B           	dec hl
 619+ 9C7C 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C7F CD 8F 94     	call Genera_coordenadas
 621+ 9C82
 622+ 9C82              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C82
 624+ 9C82 CD 98 90     2 call Inicia_puntero_objeto_izq
 625+ 9C85 C9           3 ret
 626+ 9C86
 627+ 9C86              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C86              ;
 629+ 9C86              ;	19/10/22
 630+ 9C86              ;
 631+ 9C86              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C86              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C86
 634+ 9C86 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C89 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C8B C9           	ret
 637+ 9C8C
 638+ 9C8C              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C8C              ;
 640+ 9C8C              ;	19/10/22
 641+ 9C8C              ;
 642+ 9C8C              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C8C              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C8C
 645+ 9C8C 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C8F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C91 C9           	ret
 648+ 9C92
 649+ 9C92              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C92              ;
 651+ 9C92              ;	24/7/22
 652+ 9C92              ;
 653+ 9C92              ;	Inc_CTRL_DESPLZ
 654+ 9C92              ;
 655+ 9C92              ;
 656+ 9C92              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C92
 658+ 9C92 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C95 3A E1 8B     	ld a,(Vel_right)
 660+ 9C98 A7           	and a
 661+ 9C99 28 06        	jr z,1F
 662+ 9C9B 47           	ld b,a
 663+ 9C9C 34           3 inc (hl)
 664+ 9C9D 10 FD        	djnz 3B
 665+ 9C9F 18 01        	jr 2F
 666+ 9CA1 34           1 inc (hl)
 667+ 9CA2 C9           2 ret
 668+ 9CA3
 669+ 9CA3              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CA3              ;
 671+ 9CA3              ;	5/2/23
 672+ 9CA3              ;
 673+ 9CA3              ;	Dec_CTRL_DESPLZ
 674+ 9CA3              ;
 675+ 9CA3              ;
 676+ 9CA3              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CA3
 678+ 9CA3 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CA6 3A E0 8B     	ld a,(Vel_left)
 680+ 9CA9 A7           	and a
 681+ 9CAA 28 06        	jr z,1F
 682+ 9CAC 47           	ld b,a
 683+ 9CAD 35           3 dec (hl)
 684+ 9CAE 10 FD        	djnz 3B
 685+ 9CB0 18 01        	jr 2F
 686+ 9CB2 35           1 dec (hl)
 687+ 9CB3 C9           2 ret
 688+ 9CB4
 689+ 9CB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CB4
 691+ 9CB4 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CB7 01 1F 00     	ld bc,31
 693+ 9CBA A7           	and a
 694+ 9CBB ED 4A        	adc hl,bc
 695+ 9CBD 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9CC0 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CC3 CB C6        	set 0,(hl)
 698+ 9CC5 C9           	ret
 699+ 9CC6
 700+ 9CC6              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CC6
 702+ 9CC6 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CC9 01 1F 00     	ld bc,31
 704+ 9CCC A7           	and a
 705+ 9CCD ED 42        	sbc hl,bc
 706+ 9CCF 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CD2 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CD5 CB CE        	set 1,(hl)
 709+ 9CD7 C9           	ret
 710+ 9CD8
 711+ 9CD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CD8
 713+ 9CD8 24           Reaparece_abajo inc h
 714+ 9CD9 01 E0 17     	ld bc,$17e0
 715+ 9CDC A7           	and a
 716+ 9CDD ED 4A        	adc hl,bc
 717+ 9CDF 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CE2 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CE5 CB D6        	set 2,(hl)
 720+ 9CE7 C9           	ret
 721+ 9CE8
 722+ 9CE8              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CE8
 724+ 9CE8 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CEB A7           	and a
 726+ 9CEC ED 42        	sbc hl,bc
 727+ 9CEE 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CF1 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CF4 CB DE        	set 3,(hl)
 730+ 9CF6 C9           	ret
 731+ 9CF7
 732+ 9CF7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CF7              ;
 734+ 9CF7              ;	15/07/23
 735+ 9CF7
 736+ 9CF7              Reinicio
 737+ 9CF7
 738+ 9CF7              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CF7
 740+ 9CF7 AF           	xor a
 741+ 9CF8 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CFB CD 19 9D     	call Limpia_contenido_hl
 743+ 9CFE
 744+ 9CFE 21 CB 8B     	ld hl,Posicion_actual
 745+ 9D01 CD 19 9D     	call Limpia_contenido_hl
 746+ 9D04
 747+ 9D04 CD 71 92     	call Inicializa_Puntero_indice_mov
 748+ 9D07 CD 18 9E     	call Inicia_Puntero_mov
 749+ 9D0A
 750+ 9D0A 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9D0D 06 05        	ld b,5
 752+ 9D0F 77           1 ld (hl),a
 753+ 9D10 23           	inc hl
 754+ 9D11 10 FC        	djnz 1B
 755+ 9D13
 756+ 9D13 21 C7 8B     	ld hl,Ctrl_2
 757+ 9D16 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D18
 759+ 9D18 C9           	ret
 760+ 9D19
 761+ 9D19 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D1A 23           	inc hl
 763+ 9D1B 77           	ld (hl),a
 764+ 9D1C C9           	ret
 765+ 9D1D
 766+ 9D1D              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D1D              ;
 768+ 9D1D              ;	18/6/24
 769+ 9D1D              ;
 770+ 9D1D
 771+ 9D1D              Amadeus_a_izquierda
 772+ 9D1D
 773+ 9D1D              ;	Actualiza contador de movimientos.
 774+ 9D1D
 775+ 9D1D 21 79 89     	ld hl,Comm_Amadeus
 776+ 9D20 35           	dec (hl)
 777+ 9D21 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D23
 779+ 9D23 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D26 2B           	dec hl
 781+ 9D27 2B           	dec hl
 782+ 9D28 2B           	dec hl
 783+ 9D29 2B           	dec hl
 784+ 9D2A 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D2D
 786+ 9D2D 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D30 CB EE        	set 5,(hl)
 788+ 9D32
 789+ 9D32 C9           	ret
 790+ 9D33
 791+ 9D33 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D34 C9           	ret
 793+ 9D35
 794+ 9D35
 795+ 9D35              Amadeus_a_derecha
 796+ 9D35
 797+ 9D35              ;	Actualiza contador de movimientos.
 798+ 9D35
 799+ 9D35 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D38 34           	inc (hl)
 801+ 9D39 3E 7A        	ld a,$7a
 802+ 9D3B BE           	cp (hl)
 803+ 9D3C 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D3E
 805+ 9D3E 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D41 23           	inc hl
 807+ 9D42 23           	inc hl
 808+ 9D43 23           	inc hl
 809+ 9D44 23           	inc hl
 810+ 9D45 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D48
 812+ 9D48 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D4B CB EE        	set 5,(hl)
 814+ 9D4D C9           	ret
 815+ 9D4E
 816+ 9D4E 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D4F C9           	ret
# file closed: Direcciones.asm
2232  9D50              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D50              ; ----- ----- ----- ----- -----
   2+ 9D50              ;
   3+ 9D50              ;   28/12/23
   4+ 9D50
   5+ 9D50              Movimiento
   6+ 9D50
   7+ 9D50              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D50
   9+ 9D50 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D53 CB 57            bit 2,a
  11+ 9D55 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D57
  13+ 9D57 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D5A 7E               ld a,(hl)
  15+ 9D5B
  16+ 9D5B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D5B
  18+ 9D5B              Inicia_desplazamiento.
  19+ 9D5B
  20+ 9D5B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D5B
  22+ 9D5B CD 4E 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D5E
  24+ 9D5E              ; Iniciamos (Repetimos_mov).
  25+ 9D5E
  26+ 9D5E 7E               ld a,(hl)
  27+ 9D5F E6 0F            and $0f
  28+ 9D61 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D64 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D67
  31+ 9D67              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D67
  33+ 9D67 23               inc hl
  34+ 9D68 7E               ld a,(hl)
  35+ 9D69 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D6C 2B               dec hl
  37+ 9D6D
  38+ 9D6D 21 C7 8B         ld hl,Ctrl_2
  39+ 9D70 CB D6            set 2,(hl)
  40+ 9D72
  41+ 9D72              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D72              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D72
  44+ 9D72              Desplazamiento_iniciado
  45+ 9D72
  46+ 9D72 CD 22 9E         call Aplica_desplazamiento
  47+ 9D75
  48+ 9D75              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D75
  50+ 9D75 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9D78 CB 4F            bit 1,a
  52+ 9D7A C0               ret nz
  53+ 9D7B
  54+ 9D7B 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D7E 35               dec (hl)
  56+ 9D7F C0               ret nz
  57+ 9D80
  58+ 9D80              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D80              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D80              ; Analiza (Cola_de_desplazamiento).
  61+ 9D80
  62+ 9D80 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D83 A7               and a
  64+ 9D84 CC 77 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D87 28 30            jr z,Reinicia_el_movimiento
  66+ 9D89
  67+ 9D89 FE FF            cp $ff
  68+ 9D8B 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D8D
  70+ 9D8D FE FE            cp $fe
  71+ 9D8F CC FC 9D         call z,Fijamos_bucle
  72+ 9D92 28 25            jr z,Reinicia_el_movimiento
  73+ 9D94
  74+ 9D94 FE FD            cp $fd
  75+ 9D96 20 11            jr nz,1F
  76+ 9D98
  77+ 9D98              ; ---
  78+ 9D98              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D98
  80+ 9D98 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D9B CB 5F            bit 3,a
  82+ 9D9D 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D9F
  84+ 9D9F              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D9F
  86+ 9D9F 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DA2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DA4
  89+ 9DA4 CD 0D 9E         call Inicia_Repetimos_movimiento
  90+ 9DA7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DA9              ; ---
  92+ 9DA9
  93+ 9DA9 FE 01        1 cp 1
  94+ 9DAB CA E6 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DAE
  96+ 9DAE 3D               dec a
  97+ 9DAF 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9DB2
  99+ 9DB2 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DB5 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DB8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DB8 C9               ret
 103+ 9DB9
 104+ 9DB9              Reinicia_el_movimiento
 105+ 9DB9
 106+ 9DB9 3A C7 8B         ld a,(Ctrl_2)
 107+ 9DBC CB 5F            bit 3,a
 108+ 9DBE 28 1B            jr z,2F
 109+ 9DC0
 110+ 9DC0              ; (Cola_de_desplazamiento)="254".
 111+ 9DC0
 112+ 9DC0 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DC3 35               dec (hl)
 114+ 9DC4 20 15            jr nz,2F
 115+ 9DC6
 116+ 9DC6              ; Fin de las repeticiones del último movimiento.
 117+ 9DC6
 118+ 9DC6 21 C7 8B         ld hl,Ctrl_2
 119+ 9DC9 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DCB
 121+ 9DCB 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DCE 23               inc hl
 123+ 9DCF 23               inc hl
 124+ 9DD0 23               inc hl
 125+ 9DD1 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DD4              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DD4 7E               ld a,(hl)
 128+ 9DD5 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DD8
 130+ 9DD8 C3 80 9D         jp Cola
 131+ 9DDB
 132+ 9DDB CD 18 9E     2 call Inicia_Puntero_mov
 133+ 9DDE
 134+ 9DDE 21 C7 8B         ld hl,Ctrl_2
 135+ 9DE1 CB 96            res 2,(hl)
 136+ 9DE3
 137+ 9DE3 C3 50 9D         jp Movimiento
 138+ 9DE6
 139+ 9DE6              Siguiente_desplazamiento
 140+ 9DE6
 141+ 9DE6              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DE6              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DE6
 144+ 9DE6 21 C7 8B         ld hl,Ctrl_2
 145+ 9DE9 CB 96            res 2,(hl)
 146+ 9DEB
 147+ 9DEB 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DEE 23               inc hl
 149+ 9DEF 23               inc hl
 150+ 9DF0 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DF3
 152+ 9DF3 7E               ld a,(hl)
 153+ 9DF4 A7               and a
 154+ 9DF5 CC 77 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DF8 CA B9 9D         jp z,Reinicia_el_movimiento
 156+ 9DFB
 157+ 9DFB C9               ret
 158+ 9DFC
 159+ 9DFC              ; Subrutinas -----------------------------------------
 160+ 9DFC              ; ---------- --------- --------- ---------- ----------
 161+ 9DFC              ;
 162+ 9DFC              ;   24/07/23
 163+ 9DFC              ;
 164+ 9DFC              ;   Fijamos_bucle
 165+ 9DFC              ;
 166+ 9DFC              ;
 167+ 9DFC
 168+ 9DFC              Fijamos_bucle
 169+ 9DFC
 170+ 9DFC 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9DFF 3C               inc a
 172+ 9E00 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9E03
 174+ 9E03 CD 77 9E         call Incrementa_Puntero_indice_mov
 175+ 9E06 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9E09 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E0C C9               ret
 178+ 9E0D
 179+ 9E0D              ; ---------- --------- --------- ---------- ----------
 180+ 9E0D              ;
 181+ 9E0D              ;   07/7/23
 182+ 9E0D              ;
 183+ 9E0D              ;   Inicia_Repetimos_movimiento
 184+ 9E0D              ;
 185+ 9E0D              ;
 186+ 9E0D
 187+ 9E0D              Inicia_Repetimos_movimiento
 188+ 9E0D
 189+ 9E0D              ; Iniciamos (Repetimos_movimiento).
 190+ 9E0D
 191+ 9E0D DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9E11 DD 7E 02         ld a,(ix+2)
 193+ 9E14 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9E17
 195+ 9E17 C9               ret
 196+ 9E18
 197+ 9E18              ; ---------- --------- --------- ---------- ----------
 198+ 9E18              ;
 199+ 9E18              ;   26/6/23
 200+ 9E18              ;
 201+ 9E18              ;   Inicia_Puntero_mov
 202+ 9E18              ;
 203+ 9E18              ;
 204+ 9E18
 205+ 9E18 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E1B CD 70 90         call Extrae_address
 207+ 9E1E 22 EE 8B         ld (Puntero_mov),hl
 208+ 9E21 C9               ret
 209+ 9E22
 210+ 9E22              ; ---------- --------- --------- ---------- ----------
 211+ 9E22              ;
 212+ 9E22              ;   27/06/23
 213+ 9E22              ;
 214+ 9E22              ;   Aplica_movimiento.
 215+ 9E22
 216+ 9E22              Aplica_desplazamiento
 217+ 9E22
 218+ 9E22              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E22
 220+ 9E22 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9E25
 222+ 9E25 7E               ld a,(hl)
 223+ 9E26 E6 F0            and $f0
 224+ 9E28 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E29
 226+ 9E29 CB 7E            bit 7,(hl)
 227+ 9E2B 28 03            jr z,1F
 228+ 9E2D CD 04 9A         call Mov_up
 229+ 9E30 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E33 CB 76            bit 6,(hl)
 231+ 9E35 28 03            jr z,2F
 232+ 9E37 CD CB 99         call Mov_down
 233+ 9E3A
 234+ 9E3A              ; Se ha aplicado reinicio ???
 235+ 9E3A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E3A
 237+ 9E3A              ;    ld a,(Ctrl_3)
 238+ 9E3A              ;    bit 1,a
 239+ 9E3A              ;    ret nz
 240+ 9E3A
 241+ 9E3A 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E3D CB 6E            bit 5,(hl)
 243+ 9E3F 28 03            jr z,3F
 244+ 9E41 CD 6A 9B         call Mov_left
 245+ 9E44 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E47 CB 66            bit 4,(hl)
 247+ 9E49 C8               ret z
 248+ 9E4A CD 47 9A         call Mov_right
 249+ 9E4D C9               ret
 250+ 9E4E
 251+ 9E4E              ; ---------- --------- --------- ---------- ----------
 252+ 9E4E              ;
 253+ 9E4E              ;   26/06/23
 254+ 9E4E              ;
 255+ 9E4E              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E4E
 257+ 9E4E              Ajusta_velocidad_desplazamiento
 258+ 9E4E
 259+ 9E4E              ; 1er byte de la cadena de movimiento.
 260+ 9E4E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E4E
 262+ 9E4E CD 6C 9E         call Extrae_nibble_alto
 263+ 9E51
 264+ 9E51 32 E2 8B         ld (Vel_up),a
 265+ 9E54 79               ld a,c
 266+ 9E55 E6 0F            and $0f
 267+ 9E57 32 E3 8B         ld (Vel_down),a
 268+ 9E5A
 269+ 9E5A              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E5A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E5A
 272+ 9E5A 23               inc hl
 273+ 9E5B CD 6C 9E         call Extrae_nibble_alto
 274+ 9E5E
 275+ 9E5E 32 E0 8B         ld (Vel_left),a
 276+ 9E61 79               ld a,c
 277+ 9E62 E6 0F            and $0f
 278+ 9E64 32 E1 8B         ld (Vel_right),a
 279+ 9E67
 280+ 9E67              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E67
 282+ 9E67 23               inc hl
 283+ 9E68 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E6B C9               ret
 285+ 9E6C
 286+ 9E6C 06 04        Extrae_nibble_alto ld b,4
 287+ 9E6E 7E               ld a,(hl)
 288+ 9E6F 4F               ld c,a
 289+ 9E70 E6 F0            and $f0
 290+ 9E72 CB 3F        1 srl a
 291+ 9E74 10 FC            djnz 1B
 292+ 9E76 C9               ret
 293+ 9E77
 294+ 9E77              ; ---------- --------- --------- ---------- ----------
 295+ 9E77              ;
 296+ 9E77              ;   5/7/23
 297+ 9E77              ;
 298+ 9E77              ;   Incrementa_Puntero_indice_mov
 299+ 9E77
 300+ 9E77              Incrementa_Puntero_indice_mov
 301+ 9E77
 302+ 9E77 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E7A 34               inc (hl)
 304+ 9E7B
 305+ 9E7B 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E7E 01 02 00         ld bc,2
 307+ 9E81 A7               and a
 308+ 9E82 09               add hl,bc
 309+ 9E83 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E86
 311+ 9E86 7E               ld a,(hl)
 312+ 9E87 A7               and a
 313+ 9E88
 314+ 9E88              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E88
 316+ 9E88              ;    jr z,$
 317+ 9E88
 318+ 9E88              ;! Reinicia el Patrón de movimiento.
 319+ 9E88
 320+ 9E88 CC 8D 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E8B
 322+ 9E8B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E8C
 324+ 9E8C C9               ret
 325+ 9E8D
 326+ 9E8D              ; ---------- --------- --------- ---------- ----------
 327+ 9E8D              ;
 328+ 9E8D              ;   15/01/24
 329+ 9E8D              ;
 330+ 9E8D              ;   Inicializa_Puntero_indice_mov
 331+ 9E8D
 332+ 9E8D              Inicializa_Puntero_indice_mov_2
 333+ 9E8D
 334+ 9E8D              ; Existe etiqueta de bucle principal???
 335+ 9E8D
 336+ 9E8D 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E90 24               inc h
 338+ 9E91 25               dec h
 339+ 9E92 28 05            jr z,2F
 340+ 9E94
 341+ 9E94 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E97 18 14            jr 3F
 343+ 9E99
 344+ 9E99              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E99
 346+ 9E99 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E9C 47               ld b,a
 348+ 9E9D
 349+ 9E9D 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9EA0 2B           1 dec hl
 351+ 9EA1 2B               dec hl
 352+ 9EA2 10 FC            djnz 1B
 353+ 9EA4 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9EA7
 355+ 9EA7 AF               xor a
 356+ 9EA8 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9EAB 18 06            jr 4F
 358+ 9EAD
 359+ 9EAD 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EB0 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9EB3 C9           4 ret
 362+ 9EB4
 363+ 9EB4              ; ----------------------------------------------------------------------
 364+ 9EB4              ;
 365+ 9EB4              ;   30/01/24
 366+ 9EB4              ;
 367+ 9EB4              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EB4
 369+ 9EB4 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EB7 CD 0C 94         call Calcula_salto_en_BC
 371+ 9EBA 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EBD A7               and a
 373+ 9EBE ED 4A            adc hl,bc
 374+ 9EC0 C9               ret
 375+ 9EC1
 376+ 9EC1              ; ----------------------------------------------------------------------
 377+ 9EC1              ;
 378+ 9EC1              ;   30/01/24
 379+ 9EC1              ;
 380+ 9EC1              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EC1              ;
 382+ 9EC1              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EC1
 384+ 9EC1 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EC2 23               inc hl
 386+ 9EC3 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EC4 69               ld l,c
 388+ 9EC5 60               ld h,b
 389+ 9EC6 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EC9 C9               ret
 391+ 9ECA
# file closed: Movimiento.asm
2233  9ECA              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9ECA              ; --------------------------------------------------------------------------------------
   2+ 9ECA              ;
   3+ 9ECA              ;   31/08/24
   4+ 9ECA              ;
   5+ 9ECA
   6+ 9ECA              Compara_con_coordenadas_de_disparo
   7+ 9ECA
   8+ 9ECA 3A BD 8B         ld a,(Coordenada_y)
   9+ 9ECD 47               ld b,a
  10+ 9ECE 3A 38 8C         ld a,(Coordenadas_disparo_certero)
  11+ 9ED1 90               sub b
  12+ 9ED2
  13+ 9ED2              ; A = "0" ok
  14+ 9ED2              ; A = "1" ok
  15+ 9ED2
  16+ 9ED2 28 08            jr z,Comprueba_coordenada_X
  17+ 9ED4 3D               dec a
  18+ 9ED5 28 05            jr z,Comprueba_coordenada_X
  19+ 9ED7
  20+ 9ED7              ; A = "$ff" ok
  21+ 9ED7
  22+ 9ED7 FE FE            cp $fe
  23+ 9ED9 28 01            jr z,Comprueba_coordenada_X
  24+ 9EDB
  25+ 9EDB C9               ret
  26+ 9EDC
  27+ 9EDC              Comprueba_coordenada_X
  28+ 9EDC
  29+ 9EDC 3A BC 8B         ld a,(Coordenada_X)
  30+ 9EDF 47               ld b,a
  31+ 9EE0 21 39 8C         ld hl,Coordenadas_disparo_certero+1
  32+ 9EE3 7E               ld a,(hl)
  33+ 9EE4 90               sub b
  34+ 9EE5
  35+ 9EE5              ; A = "0" ok
  36+ 9EE5              ; A = "1" ok
  37+ 9EE5
  38+ 9EE5 28 09            jr z,Activa_Impacto_en_entidad
  39+ 9EE7 3D               dec a
  40+ 9EE8 28 06            jr z,Activa_Impacto_en_entidad
  41+ 9EEA
  42+ 9EEA              ; A = "2" ok
  43+ 9EEA
  44+ 9EEA 3D               dec a
  45+ 9EEB 28 03            jr z,Activa_Impacto_en_entidad
  46+ 9EED
  47+ 9EED              ; A = "$ff"
  48+ 9EED
  49+ 9EED FE FD            cp $fd
  50+ 9EEF C0               ret nz
  51+ 9EF0
  52+ 9EF0              Activa_Impacto_en_entidad
  53+ 9EF0
  54+ 9EF0              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
  55+ 9EF0
  56+ 9EF0 3E 02            ld a,2
  57+ 9EF2 32 BF 8B         ld (Impacto),a
  58+ 9EF5
  59+ 9EF5              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
  60+ 9EF5
  61+ 9EF5 11 C0 87         ld de,Indice_Explosion_entidades
  62+ 9EF8 21 C2 8B         ld hl,Puntero_de_almacen_de_mov_masticados
  63+ 9EFB
  64+ 9EFB 73               ld (hl),e
  65+ 9EFC 23               inc hl
  66+ 9EFD 72               ld (hl),d
  67+ 9EFE
  68+ 9EFE              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
  69+ 9EFE
  70+ 9EFE 21 35 8C         ld hl,Impacto2
  71+ 9F01 CB 9E            res 3,(hl)
  72+ 9F03
  73+ 9F03 C9               ret
  74+ 9F04
  75+ 9F04              ; --------------------------------------------------------------------------------------
  76+ 9F04              ;
  77+ 9F04              ;   26/08/24
  78+ 9F04              ;
  79+ 9F04
  80+ 9F04              Limpia_album_de_borrado_disparos
  81+ 9F04
  82+ 9F04 21 30 8C         ld hl,Ctrl_5
  83+ 9F07 CB 46            bit 0,(hl)
  84+ 9F09 C8               ret z
  85+ 9F0A CB 86            res 0,(hl)
  86+ 9F0C
  87+ 9F0C 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  88+ 9F0F 3D               dec a
  89+ 9F10 3D               dec a
  90+ 9F11 C0               ret nz
  91+ 9F12
  92+ 9F12              Limpiando
  93+ 9F12
  94+ 9F12 AF               xor a
  95+ 9F13 2A 16 8C         ld hl,(Album_de_borrado_disparos)
  96+ 9F16 77               ld (hl),a
  97+ 9F17 5D               ld e,l
  98+ 9F18 54               ld d,h
  99+ 9F19 1C               inc e                                           ; DE = HL+1
 100+ 9F1A 01 3A 00         ld bc,$003a
 101+ 9F1D ED B0            ldir
 102+ 9F1F
 103+ 9F1F C9               ret
 104+ 9F20
 105+ 9F20
 106+ 9F20              ; --------------------------------------------------------------------------------------
 107+ 9F20              ;
 108+ 9F20              ;   26/08/24
 109+ 9F20              ;
 110+ 9F20
 111+ 9F20              Calcula_bytes_pintado_disparos
 112+ 9F20
 113+ 9F20 2A 14 8C         ld hl,(Album_de_pintado_disparos)
 114+ 9F23 45               ld b,l
 115+ 9F24 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 116+ 9F27 7D               ld a,l
 117+ 9F28
 118+ 9F28 90               sub b
 119+ 9F29 32 1A 8C         ld (Num_de_bytes_album_de_disparos),a
 120+ 9F2C
 121+ 9F2C C9               ret
 122+ 9F2D
 123+ 9F2D              ; --------------------------------------------------------------------------------------
 124+ 9F2D              ;
 125+ 9F2D              ;   23/08/24
 126+ 9F2D              ;
 127+ 9F2D              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 128+ 9F2D              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 129+ 9F2D              ;   _disparos que el álbum del FRAME actual).
 130+ 9F2D
 131+ 9F2D              Limpia_album_de_pintado_disparos
 132+ 9F2D
 133+ 9F2D              ;   Exclusiones.
 134+ 9F2D
 135+ 9F2D 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 136+ 9F30 A7               and a
 137+ 9F31 C8               ret z
 138+ 9F32
 139+ 9F32              ; -----
 140+ 9F32
 141+ 9F32 A7               and a
 142+ 9F33
 143+ 9F33 3A 1A 8C         ld a,(Num_de_bytes_album_de_disparos)
 144+ 9F36 47               ld b,a
 145+ 9F37 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 146+ 9F3A
 147+ 9F3A 90               sub b
 148+ 9F3B
 149+ 9F3B C8               ret z
 150+ 9F3C D8               ret c
 151+ 9F3D
 152+ 9F3D 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 153+ 9F40 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 154+ 9F41 AF               xor a                                                               ; "0".
 155+ 9F42
 156+ 9F42 77           1 ld (hl),a
 157+ 9F43 2C               inc l
 158+ 9F44 10 FC            djnz 1B
 159+ 9F46
 160+ 9F46 C9               ret
 161+ 9F47
 162+ 9F47              ; --------------------------------------------------------------------------------------
 163+ 9F47              ;
 164+ 9F47              ;   27/08/24
 165+ 9F47              ;
 166+ 9F47
 167+ 9F47              Motor_Disparos
 168+ 9F47
 169+ 9F47              ;    Exclusiones:
 170+ 9F47
 171+ 9F47 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 172+ 9F4A 3D               dec a
 173+ 9F4B 3D               dec a
 174+ 9F4C 28 1A            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
 175+ 9F4E
 176+ 9F4E              ; .........................
 177+ 9F4E
 178+ 9F4E              ; Nos situamos en el (puntero_de_impresión) de la 1ª caja.
 179+ 9F4E
 180+ 9F4E 21 26 89         ld hl,Disparo_1A+3
 181+ 9F51
 182+ 9F51 34               inc (hl)
 183+ 9F52 35               dec (hl)
 184+ 9F53
 185+ 9F53 28 06            jr z,1F
 186+ 9F55
 187+ 9F55              ; Esta caja contiene un disparo.
 188+ 9F55
 189+ 9F55 CD 84 9F         call Elimina_disparo_si_procede
 190+ 9F58 CC 91 9F         call z,Mueve_disparo_Amadeus
 191+ 9F5B
 192+ 9F5B 21 2B 89     1 ld hl,Disparo_2A+3
 193+ 9F5E
 194+ 9F5E 34               inc (hl)
 195+ 9F5F 35               dec (hl)
 196+ 9F60 28 06            jr z,2F
 197+ 9F62
 198+ 9F62              ; Esta caja contiene un disparo.
 199+ 9F62
 200+ 9F62 CD 84 9F         call Elimina_disparo_si_procede
 201+ 9F65 CC 91 9F         call z,Mueve_disparo_Amadeus
 202+ 9F68
 203+ 9F68              ; Disparos de entidades.
 204+ 9F68
 205+ 9F68 3A 1D 8C     2 ld a,(Numero_de_disparos_de_entidades)
 206+ 9F6B A7               and a
 207+ 9F6C C8               ret z
 208+ 9F6D
 209+ 9F6D 06 07            ld b,7                                                               ; Contador de disparos.
 210+ 9F6F 21 2D 89         ld hl,Indice_de_disparos_entidades
 211+ 9F72
 212+ 9F72 CD 70 90     4 call Extrae_address
 213+ 9F75 13               inc de
 214+ 9F76 13               inc de
 215+ 9F77 ED 53 1F 8C      ld (Puntero_rancio_disparos_album),de
 216+ 9F7B
 217+ 9F7B 23               inc hl
 218+ 9F7C
 219+ 9F7C 34               inc (hl)                                                           ; Dispone de Puntero_objeto ???
 220+ 9F7D 35               dec (hl)
 221+ 9F7E 28 00            jr z,3F
 222+ 9F80
 223+ 9F80 EB           3 ex de,hl
 224+ 9F81 10 EF            djnz 4B
 225+ 9F83
 226+ 9F83 C9               ret
 227+ 9F84
 228+ 9F84              ; --------------------------------------------------------
 229+ 9F84              ;
 230+ 9F84              ;   28/8/24
 231+ 9F84              ;
 232+ 9F84              ;   Averigua si existe impacto en este disparo. Lo elimina si es así.
 233+ 9F84              ;   Mueve el disparo si este no está impactado.
 234+ 9F84
 235+ 9F84
 236+ 9F84              Elimina_disparo_si_procede
 237+ 9F84
 238+ 9F84 CD 8B 9F         call  Consulta_Impacto
 239+ 9F87 C4 C4 9F         call nz, Elimina_disparo                    ; HL apunta al .db (Puntero_de-impresion) del disparo.
 240+ 9F8A
 241+ 9F8A C9               ret
 242+ 9F8B
 243+ 9F8B              ; ----------------------
 244+ 9F8B              ;
 245+ 9F8B              ;
 246+ 9F8B              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 247+ 9F8B              ;
 248+ 9F8B              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 249+ 9F8B
 250+ 9F8B
 251+ 9F8B              Consulta_Impacto
 252+ 9F8B
 253+ 9F8B 23               inc hl
 254+ 9F8C
 255+ 9F8C 34               inc (hl)
 256+ 9F8D 35               dec (hl)
 257+ 9F8E
 258+ 9F8E 2B               dec hl
 259+ 9F8F 2B               dec hl
 260+ 9F90
 261+ 9F90 C9               ret
 262+ 9F91
 263+ 9F91              ; ----------------------
 264+ 9F91              ;
 265+ 9F91              ;
 266+ 9F91              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 267+ 9F91
 268+ 9F91              Mueve_disparo_Amadeus
 269+ 9F91
 270+ 9F91 CD 70 90         call Extrae_address
 271+ 9F94
 272+ 9F94 CD 94 99         call PreviousScan
 273+ 9F97 CD 94 99         call PreviousScan
 274+ 9F9A CD 94 99         call PreviousScan
 275+ 9F9D CD 94 99         call PreviousScan
 276+ 9FA0
 277+ 9FA0              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 278+ 9FA0
 279+ 9FA0 7C               ld a,h
 280+ 9FA1 D6 40            sub $40
 281+ 9FA3 EB               ex de,hl
 282+ 9FA4 38 1E            jr c,Elimina_disparo
 283+ 9FA6
 284+ 9FA6               ; Introduce nuevo puntero_de_impresión en la caja.
 285+ 9FA6
 286+ 9FA6 73               ld (hl),e
 287+ 9FA7 23               inc hl
 288+ 9FA8 72               ld (hl),d
 289+ 9FA9
 290+ 9FA9              ; Hemos movido el disparo.
 291+ 9FA9              ; Cada vez que movemos un disparo debemos comprobar si existe Impacto en la nueva posición.
 292+ 9FA9
 293+ 9FA9 E5               push hl
 294+ 9FAA
 295+ 9FAA 2B               dec hl
 296+ 9FAB 2B               dec hl
 297+ 9FAC 2B               dec hl
 298+ 9FAD
 299+ 9FAD CD C4 A0         call Detecta_impacto_en_disparo_de_Amadeus
 300+ 9FB0
 301+ 9FB0              ; El FLAG Z indica si existe (Impacto) tras el desplazamiento.
 302+ 9FB0              ; (NZ) indica (Impacto).
 303+ 9FB0
 304+ 9FB0 E1               pop hl
 305+ 9FB1 23               inc hl                                      ; .db (Impacto) del disparo
 306+ 9FB2
 307+ 9FB2 C8               ret z
 308+ 9FB3
 309+ 9FB3              ; (Impacto) a "1".
 310+ 9FB3
 311+ 9FB3 3E 01            ld a,1
 312+ 9FB5 77               ld (hl),a
 313+ 9FB6
 314+ 9FB6              ; Existe (Impacto).
 315+ 9FB6              ; Activamos el FLAG correspondiente y generamos las coordenadas del disparo.
 316+ 9FB6
 317+ 9FB6 3A 35 8C         ld a,(Impacto2)
 318+ 9FB9 CB DF            set 3,a
 319+ 9FBB 32 35 8C         ld (Impacto2),a
 320+ 9FBE
 321+ 9FBE              ; (Puntero_de_impresion) en HL.
 322+ 9FBE
 323+ 9FBE 2B               dec hl
 324+ 9FBF 2B               dec hl
 325+ 9FC0
 326+ 9FC0 CD B3 A0         call Genera_coordenadas_de_disparo_Amadeus
 327+ 9FC3
 328+ 9FC3 C9               ret
 329+ 9FC4
 330+ 9FC4              ; ----------------------
 331+ 9FC4              ;
 332+ 9FC4              ;   23/08/24
 333+ 9FC4
 334+ 9FC4              Elimina_disparo
 335+ 9FC4
 336+ 9FC4              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 337+ 9FC4              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 338+ 9FC4
 339+ 9FC4              ;   Disparo_1A defw 0									; Puntero objeto.
 340+ 9FC4              ;   	defw 0											; Puntero de impresión.
 341+ 9FC4              ;   	db 0											; Impacto.
 342+ 9FC4
 343+ 9FC4 2B               dec hl
 344+ 9FC5 2B               dec hl
 345+ 9FC6
 346+ 9FC6 AF               xor a
 347+ 9FC7 77               ld (hl),a
 348+ 9FC8 23               inc hl
 349+ 9FC9 77               ld (hl),a                                           ; Puntero_objeto borrado.
 350+ 9FCA 23               inc hl
 351+ 9FCB 77               ld (hl),a
 352+ 9FCC 23               inc hl
 353+ 9FCD 77               ld (hl),a                                           ; Puntero_de_impresion borrado.
 354+ 9FCE 23               inc hl
 355+ 9FCF 77               ld (hl),a                                           ; Impacto borrado.
 356+ 9FD0
 357+ 9FD0 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 358+ 9FD3 34               inc (hl)
 359+ 9FD4
 360+ 9FD4 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
 361+ 9FD7 F6 01            or 1
 362+ 9FD9 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 363+ 9FDC
 364+ 9FDC 21 30 8C         ld hl,Ctrl_5                                        ; Indica que ha desaparecido un disparo.
 365+ 9FDF CB C6            set 0,(hl)
 366+ 9FE1
 367+ 9FE1 C9               ret
 368+ 9FE2
 369+ 9FE2              ; --------------------------------------------------------------------------------------
 370+ 9FE2              ;
 371+ 9FE2              ;   21/8/24
 372+ 9FE2              ;
 373+ 9FE2
 374+ 9FE2              Pinta_disparos
 375+ 9FE2
 376+ 9FE2 ED 73 08 8C      ld (Stack),sp
 377+ 9FE6 06 02            ld b,2
 378+ 9FE8
 379+ 9FE8 ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 380+ 9FEC
 381+ 9FEC D1           2 pop de
 382+ 9FED
 383+ 9FED 14               inc d
 384+ 9FEE 15               dec d
 385+ 9FEF
 386+ 9FEF 28 1B            jr z,1F
 387+ 9FF1
 388+ 9FF1              Imprime_scanlines_de_disparo
 389+ 9FF1
 390+ 9FF1 E1               pop hl
 391+ 9FF2
 392+ 9FF2              ; Puntero objeto en DE.
 393+ 9FF2              ; Puntero_de_impresión en HL.
 394+ 9FF2
 395+ 9FF2              ; 1er scanline.
 396+ 9FF2
 397+ 9FF2 1A               ld a,(de)
 398+ 9FF3 AE               xor (hl)
 399+ 9FF4 77               ld (hl),a
 400+ 9FF5
 401+ 9FF5 13               inc de
 402+ 9FF6 2C               inc l
 403+ 9FF7
 404+ 9FF7 1A               ld a,(de)
 405+ 9FF8 AE               xor (hl)
 406+ 9FF9 77               ld (hl),a
 407+ 9FFA
 408+ 9FFA              ; 2º scanline.
 409+ 9FFA
 410+ 9FFA E1               pop hl
 411+ 9FFB 1B               dec de
 412+ 9FFC
 413+ 9FFC 1A               ld a,(de)
 414+ 9FFD AE               xor (hl)
 415+ 9FFE 77               ld (hl),a
 416+ 9FFF
 417+ 9FFF 13               inc de
 418+ A000 2C               inc l
 419+ A001
 420+ A001 1A               ld a,(de)
 421+ A002 AE               xor (hl)
 422+ A003 77               ld (hl),a
 423+ A004
 424+ A004              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 425+ A004
 426+ A004 18 E6            jr 2B
 427+ A006
 428+ A006 ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
 429+ A00A 18 E0            jr 2B
 430+ A00C
 431+ A00C 10 F8        1 djnz 3B
 432+ A00E ED 7B 08 8C      ld sp,(Stack)
 433+ A012 C9               ret
 434+ A013
 435+ A013              ; --------------------------------------------------------------------------------------
 436+ A013              ;
 437+ A013              ;   28/8/24
 438+ A013              ;
 439+ A013              ;   Modifica: HL y DE.
 440+ A013
 441+ A013
 442+ A013              Genera_datos_de_impresion_disparos_Amadeus
 443+ A013
 444+ A013              ;   Exclusiones:
 445+ A013
 446+ A013 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 447+ A016 3D               dec a
 448+ A017 3D               dec a
 449+ A018 C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 450+ A019
 451+ A019              ; -----
 452+ A019
 453+ A019 ED 73 08 8C      ld (Stack),sp
 454+ A01D 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 455+ A020
 456+ A020 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 457+ A023 ED 72            sbc hl,sp                                                 ; Última caja ???
 458+ A025 28 26            jr z,Salida
 459+ A027
 460+ A027 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 461+ A028
 462+ A028 14               inc d
 463+ A029 15               dec d
 464+ A02A
 465+ A02A 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 466+ A02C
 467+ A02C              Siguiente_disparo_Amadeus
 468+ A02C
 469+ A02C D1               pop de
 470+ A02D 33               inc sp
 471+ A02E 18 F0            jr 1B
 472+ A030
 473+ A030              Genera_scanlines_de_disparo_Amadeus
 474+ A030
 475+ A030 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 476+ A031              ;                                                             ; Puntero_de_impresión del disparo en HL.
 477+ A031
 478+ A031 33               inc sp
 479+ A032 ED 73 1F 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 480+ A036
 481+ A036 ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 482+ A03A
 483+ A03A C1               pop bc
 484+ A03B C1               pop bc
 485+ A03C C1               pop bc
 486+ A03D
 487+ A03D ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 488+ A041
 489+ A041 E5               push hl                                                   ; Sube 2º scanline al álbum.
 490+ A042 CD 94 99         call PreviousScan
 491+ A045 E5               push hl                                                   ; Sube 1er scanline al álbum.
 492+ A046 D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 493+ A047
 494+ A047 ED 7B 1F 8C      ld sp,(Puntero_rancio_disparos_album)
 495+ A04B 18 D3            jr 1B
 496+ A04D
 497+ A04D
 498+ A04D              Salida
 499+ A04D
 500+ A04D ED 7B 08 8C      ld sp,(Stack)
 501+ A051 C9               ret
 502+ A052
 503+ A052              ; --------------------------------------------------------------------------------------
 504+ A052              ;
 505+ A052              ;   17/08/24
 506+ A052              ;
 507+ A052
 508+ A052              Genera_disparo_Amadeus
 509+ A052
 510+ A052              ;   Exclusiones.
 511+ A052
 512+ A052 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
 513+ A055 A7               and a
 514+ A056 C8               ret z                                                    ; Salimos si no hay permiso de disparo.
 515+ A057 3D               dec a
 516+ A058 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 517+ A05B
 518+ A05B 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 519+ A05E A7               and a
 520+ A05F C8               ret z                                                    ; Hay 2 disparos en pantalla, no hay cajas libres.
 521+ A060
 522+ A060              ; ---------------------------------------------------------------------------------------------------------------
 523+ A060
 524+ A060              ;   Dec nº de disparos de Amadeus.
 525+ A060
 526+ A060 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 527+ A063 35               dec (hl)
 528+ A064
 529+ A064              ;   Nos situamos en la 1ª caja que encontramos vacía.
 530+ A064
 531+ A064 21 24 89         ld hl,Disparo_1A+1
 532+ A067
 533+ A067 34               inc (hl)
 534+ A068 35               dec (hl)
 535+ A069 2B               dec hl
 536+ A06A
 537+ A06A 28 03            jr z,7F
 538+ A06C
 539+ A06C 21 28 89         ld hl,Disparo_2A
 540+ A06F
 541+ A06F 22 33 8C     7 ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 542+ A072
 543+ A072              ; ---------------------------------------------------------------------------------------------------------------
 544+ A072
 545+ A072              Define_puntero_objeto_disparo
 546+ A072
 547+ A072              ;   Inicializamos contador.
 548+ A072
 549+ A072 06 00            ld b,0
 550+ A074
 551+ A074 2A 75 89         ld hl,(p.imp.amadeus)
 552+ A077 2C               inc l
 553+ A078
 554+ A078 3E 80            ld a,$80
 555+ A07A BE               cp (hl)
 556+ A07B 28 0D            jr z,1F
 557+ A07D
 558+ A07D 04               inc b
 559+ A07E
 560+ A07E 3E 60            ld a,$60
 561+ A080 BE               cp (hl)
 562+ A081 28 07            jr z,1F
 563+ A083
 564+ A083
 565+ A083 04               inc b
 566+ A084
 567+ A084 3E 18            ld a,$18
 568+ A086 BE               cp (hl)
 569+ A087 28 01            jr z,1F
 570+ A089
 571+ A089 04               inc b
 572+ A08A
 573+ A08A              ;   Calcula el Puntero_de_impresión del disparo.
 574+ A08A
 575+ A08A              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 576+ A08A
 577+ A08A CD 94 99     1 call PreviousScan
 578+ A08D
 579+ A08D 78               ld a,b
 580+ A08E CB 3F            srl a
 581+ A090 28 03            jr z,4F
 582+ A092
 583+ A092              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 584+ A092 E5               push hl
 585+ A093 18 02            jr 5F
 586+ A095 2D           4 dec l
 587+ A096 E5               push hl
 588+ A097              ; ---
 589+ A097
 590+ A097              ;   Calcula el Puntero_objeto del disparo.
 591+ A097
 592+ A097 21 70 83     5 ld hl,Indice_disparo
 593+ A09A 04               inc b
 594+ A09B 05               dec b
 595+ A09C 28 04            jr z,2F
 596+ A09E
 597+ A09E              ;   Nos desplazamos por el índice de disparos.
 598+ A09E
 599+ A09E 2C           3 inc l
 600+ A09F 2C               inc l
 601+ A0A0 10 FC            djnz 3B
 602+ A0A2
 603+ A0A2              ; --- Guarda el Puntero_objeto del disparo en la pila.
 604+ A0A2 CD 70 90     2 call Extrae_address
 605+ A0A5 E5               push hl
 606+ A0A6              ; ---
 607+ A0A6
 608+ A0A6              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 609+ A0A6              ; HL en el 1er .db de la caja.
 610+ A0A6
 611+ A0A6 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 612+ A0A9
 613+ A0A9 06 02            ld b,2
 614+ A0AB
 615+ A0AB D1           6 pop de
 616+ A0AC 73               ld (hl),e
 617+ A0AD 23               inc hl
 618+ A0AE 72               ld (hl),d
 619+ A0AF 23               inc hl
 620+ A0B0
 621+ A0B0 10 F9            djnz 6B
 622+ A0B2
 623+ A0B2 C9               ret
 624+ A0B3
 625+ A0B3              Genera_coordenadas_de_disparo_Amadeus
 626+ A0B3
 627+ A0B3              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 628+ A0B3              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 629+ A0B3              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 630+ A0B3
 631+ A0B3 CD 70 90         call Extrae_address
 632+ A0B6 CD 8F 94         call Genera_coordenadas
 633+ A0B9
 634+ A0B9 3D               dec a
 635+ A0BA
 636+ A0BA 21 38 8C         ld hl,Coordenadas_disparo_certero
 637+ A0BD 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 638+ A0BE 23               inc hl
 639+ A0BF 3A BC 8B         ld a,(Coordenada_X)
 640+ A0C2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 641+ A0C3
 642+ A0C3 C9               ret
 643+ A0C4
 644+ A0C4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 645+ A0C4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 646+ A0C4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 647+ A0C4
 648+ A0C4              ; ----------------------------------------------
 649+ A0C4              ;
 650+ A0C4              ;   27/08/24
 651+ A0C4              ;
 652+ A0C4              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 653+ A0C4              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 654+ A0C4
 655+ A0C4              Detecta_impacto_en_disparo_de_Amadeus
 656+ A0C4
 657+ A0C4              Extraccion_de_datos
 658+ A0C4
 659+ A0C4 5E               ld e,(hl)
 660+ A0C5 23               inc hl
 661+ A0C6 56               ld d,(hl)
 662+ A0C7 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 663+ A0C8
 664+ A0C8 4E               ld c,(hl)
 665+ A0C9 23               inc hl
 666+ A0CA 46               ld b,(hl)
 667+ A0CB
 668+ A0CB C5               push bc
 669+ A0CC E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 670+ A0CD
 671+ A0CD              Detecta_impacto_
 672+ A0CD
 673+ A0CD 1A               ld a,(de)
 674+ A0CE A6               and (hl)
 675+ A0CF C0               ret nz
 676+ A0D0
 677+ A0D0 13               inc de
 678+ A0D1 23               inc hl
 679+ A0D2
 680+ A0D2 1A               ld a,(de)
 681+ A0D3 A6               and (hl)
 682+ A0D4 C9               ret
 683+ A0D5
 684+ A0D5              ; -------------------------------------------------------------------------------------------------------------
 685+ A0D5              ;
 686+ A0D5              ;   8/8/24
 687+ A0D5              ;
 688+ A0D5              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 689+ A0D5              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 690+ A0D5              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 691+ A0D5              ;
 692+ A0D5              ;   MODIFICA: HL,DE,BC y A.
 693+ A0D5              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 694+ A0D5              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 695+ A0D5
 696+ A0D5              Colision_Entidad_Amadeus
 697+ A0D5
 698+ A0D5              ; Posible contacto de entidad con Amadeus. ?????
 699+ A0D5
 700+ A0D5              ; Exclusiones:
 701+ A0D5
 702+ A0D5 3A 53 8C         ld a,(Shield)
 703+ A0D8 A7               and a
 704+ A0D9 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 705+ A0DA
 706+ A0DA 21 2E 8C         ld hl,Ctrl_3
 707+ A0DD CB 76            bit 6,(hl)
 708+ A0DF C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 709+ A0E0
 710+ A0E0 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 711+ A0E3 CB 56            bit 2,(hl)
 712+ A0E5 C0               ret nz
 713+ A0E6
 714+ A0E6 3A BD 8B     	ld a,(Coordenada_y)
 715+ A0E9 FE 14        	cp $14
 716+ A0EB D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 717+ A0EC
 718+ A0EC 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 719+ A0EF A7               and a
 720+ A0F0 C0               ret nz
 721+ A0F1
 722+ A0F1              Genera_coordenadas_X
 723+ A0F1
 724+ A0F1              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 725+ A0F1              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 726+ A0F1
 727+ A0F1              ;   Limpiamos almacenes.
 728+ A0F1
 729+ A0F1              ;    call Limpia_Coordenadas_X
 730+ A0F1
 731+ A0F1              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 732+ A0F1
 733+ A0F1 21 3A 8C         ld hl,Coordenadas_X_Entidad
 734+ A0F4 3A BC 8B         ld a,(Coordenada_X)
 735+ A0F7 CD 19 A1         call Guarda_coordenadas_X
 736+ A0FA
 737+ A0FA              ;   Almacenamos las coordenadas X de Amadeus.
 738+ A0FA
 739+ A0FA 3A 71 89         ld a,(CX_Amadeus)
 740+ A0FD CD 19 A1         call Guarda_coordenadas_X
 741+ A100 CD 2D A1         call Compara_coordenadas_X
 742+ A103 C0               ret nz
 743+ A104
 744+ A104 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 745+ A106 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 746+ A109
 747+ A109 2A FB 8B         ld hl,(Puntero_store_caja)
 748+ A10C 2C               inc l
 749+ A10D 2C               inc l
 750+ A10E 2C               inc l
 751+ A10F 2C               inc l
 752+ A110 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 753+ A113
 754+ A113 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 755+ A116 CB D6            set 2,(hl)
 756+ A118
 757+ A118 C9               ret
 758+ A119
 759+ A119               ; ----- ----- ----- ----- -----
 760+ A119
 761+ A119 77           Guarda_coordenadas_X ld (hl),a
 762+ A11A 3C               inc a
 763+ A11B 2C               inc l
 764+ A11C 77               ld (hl),a
 765+ A11D 3C               inc a
 766+ A11E 2C               inc l
 767+ A11F 77               ld (hl),a
 768+ A120 2C               inc l
 769+ A121 C9               ret
 770+ A122
 771+ A122 AF           Limpia_Coordenadas_X xor a
 772+ A123 06 06            ld b,6
 773+ A125 21 3D 8C         ld hl,Coordenadas_X_Amadeus
 774+ A128 77           1 ld (hl),a
 775+ A129 23               inc hl
 776+ A12A 10 FC            djnz 1B
 777+ A12C C9               ret
 778+ A12D
 779+ A12D              ; ----- ----- ----- ----- -----
 780+ A12D
 781+ A12D              Compara_coordenadas_X
 782+ A12D
 783+ A12D DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
 784+ A131 DD 7E 00         ld a,(ix+0)
 785+ A134 CD 42 A1         call Comparando
 786+ A137 C8               ret z
 787+ A138
 788+ A138 3C               inc a
 789+ A139 CD 51 A1         call Comparando_1
 790+ A13C C8               ret z
 791+ A13D
 792+ A13D 3C               inc a
 793+ A13E CD 51 A1         call Comparando_1
 794+ A141 C9               ret
 795+ A142
 796+ A142              ; ----- ----- ----- ----- -----
 797+ A142              ;
 798+ A142              ;   4/12/23
 799+ A142              ;
 800+ A142              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 801+ A142
 802+ A142              Comparando
 803+ A142
 804+ A142 DD 2C            inc ixl
 805+ A144 DD 2C            inc ixl
 806+ A146 DD 2C            inc ixl
 807+ A148
 808+ A148 DD 46 00         ld b,(ix+0)
 809+ A14B DD 4E 01         ld c,(ix+1)
 810+ A14E DD 56 02         ld d,(ix+2)
 811+ A151
 812+ A151 B8           Comparando_1 cp b
 813+ A152 C8               ret z
 814+ A153 B9               cp c
 815+ A154 C8               ret z
 816+ A155 BA               cp d
 817+ A156 C9               ret
 818+ A157
 819+ A157              ; -----------------------------------------------------------------------
 820+ A157              ;
 821+ A157              ;   04/7/24
 822+ A157              ;
 823+ A157
 824+ A157              Detecta_colision_nave_entidad
 825+ A157
 826+ A157              ; Exclusiones:
 827+ A157
 828+ A157              ; Salimos de la rutina si no hay advertencia de posible colisión.
 829+ A157
 830+ A157 21 35 8C     	ld hl,Impacto2
 831+ A15A CB 56        	bit 2,(hl)
 832+ A15C C8           	ret z
 833+ A15D
 834+ A15D              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 835+ A15D
 836+ A15D 2A 77 89         ld hl,(Pamm_Amadeus)
 837+ A160 CD 70 90         call Extrae_address
 838+ A163 54               ld d,h
 839+ A164 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 840+ A165
 841+ A165 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 842+ A168 06 10            ld b,16                                        ; Contador de scanlines en B.
 843+ A16A FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 844+ A16D
 845+ A16D C5           1 push bc
 846+ A16E 06 03            ld b,3
 847+ A170 E5               push hl
 848+ A171
 849+ A171              ; .db
 850+ A171
 851+ A171 1A           3 ld a,(de)
 852+ A172 A7               and a
 853+ A173 20 03            jr nz,4F
 854+ A175
 855+ A175 2C               inc l
 856+ A176 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 857+ A178
 858+ A178 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 859+ A17A 28 04            jr z,2F
 860+ A17C
 861+ A17C              ; Impacto.
 862+ A17C FD 2D            dec iyl
 863+ A17E 28 22            jr z,5F
 864+ A180
 865+ A180 1C           2 inc e
 866+ A181 10 EE            djnz 3B
 867+ A183
 868+ A183 E1               pop hl
 869+ A184
 870+ A184              ; Hay salto de línea en el puntero de impresión ???
 871+ A184
 872+ A184 7C               ld a,h
 873+ A185 D6 57            sub $57
 874+ A187 20 0A            jr nz,6F
 875+ A189
 876+ A189              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 877+ A189
 878+ A189 2A 75 89         ld hl,(p.imp.amadeus)
 879+ A18C 3E 20            ld a,$20
 880+ A18E A7               and a
 881+ A18F 85               add l
 882+ A190 6F               ld l,a
 883+ A191 18 01            jr 7F
 884+ A193
 885+ A193 24           6 inc h
 886+ A194
 887+ A194 C1           7 pop bc
 888+ A195 10 D6            djnz 1B
 889+ A197
 890+ A197              ;   Fin de la comparativa.
 891+ A197
 892+ A197              ;   NO HAY COLISIÓN !!!!!.
 893+ A197              ;
 894+ A197              ;   .db (Impacto) de Amadeus a "0".
 895+ A197              ;   RES el bit2 de (Impacto2).
 896+ A197              ;
 897+ A197              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 898+ A197              ;   Lo colocamos a "0".
 899+ A197
 900+ A197 21 35 8C         ld hl,Impacto2
 901+ A19A CB 96            res 2,(hl)
 902+ A19C 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
 903+ A19F 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 904+ A1A1 C9               ret
 905+ A1A2
 906+ A1A2              ;   COLISIÓN !!!!!.
 907+ A1A2              ;
 908+ A1A2              ;   .db (Impacto) de Amadeus a "1".
 909+ A1A2              ;   SET el bit3 de (Impacto2).
 910+ A1A2              ;
 911+ A1A2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 912+ A1A2
 913+ A1A2 E1           5 pop hl
 914+ A1A3 C1               pop bc
 915+ A1A4
 916+ A1A4 21 74 89         ld hl,Impacto_Amadeus
 917+ A1A7 36 01            ld (hl),1
 918+ A1A9 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 919+ A1AC CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 920+ A1AE
 921+ A1AE 11 C0 87         ld de,Indice_Explosion_entidades
 922+ A1B1 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 923+ A1B4
 924+ A1B4 23               inc hl
 925+ A1B5 23               inc hl
 926+ A1B6 23               inc hl
 927+ A1B7
 928+ A1B7 73               ld (hl),e
 929+ A1B8 23               inc hl
 930+ A1B9 72               ld (hl),d
 931+ A1BA
 932+ A1BA              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 933+ A1BA
 934+ A1BA 11 60 88         ld de,Indice_Explosion_Amadeus
 935+ A1BD 21 77 89         ld hl,Pamm_Amadeus
 936+ A1C0
 937+ A1C0 73               ld (hl),e
 938+ A1C1 23               inc hl
 939+ A1C2 72               ld (hl),d
 940+ A1C3
 941+ A1C3 C9               ret
 942+ A1C4
 943+ A1C4
 944+ A1C4
# file closed: Disparo.asm
2234  A1C4
2235  A1C4              	SAVESNA "Pruebas.sna", START
2236  A1C4
2237  A1C4
2238  A1C4
2239  A1C4
# file closed: Banco_de_pruebas.asm
