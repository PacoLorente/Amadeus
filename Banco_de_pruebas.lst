# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 93 89     	call Frame
  15  A104
  16  A104 3A C6 88     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 BD 84        	defw Caja_1
  98+ 846A FA 84        	defw Caja_2
  99+ 846C 37 85        	defw Caja_3
 100+ 846E 74 85        	defw Caja_4
 101+ 8470 B1 85        	defw Caja_5
 102+ 8472 EE 85        	defw Caja_6
 103+ 8474 2B 86        	defw Caja_7
 104+ 8476 68 86        	defw Caja_8
 105+ 8478 A5 86        	defw Caja_9
 106+ 847A E2 86        	defw Caja_10
 107+ 847C              ;	...
 108+ 847C              ;	...
 109+ 847C              ;	+ entidades ...
 110+ 847C 00 00        	defw 0
 111+ 847E 00 00        	defw 0
 112+ 8480
 113+ 8480              ; ---------- ---------- ---------- ---------- ----------
 114+ 8480
 115+ 8480 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8482 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8484 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8486 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8489
 120+ 8489 05           	db %00000101									; (Attr).
 121+ 848A 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 848C 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 848E
 124+ 848E 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8490 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8492
 127+ 8492 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8494 04           	db 4 											; (Cuad_objeto).
 129+ 8495 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8499
 131+ 8499 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 849A
 133+ 849A 00 00        	db 0,0											; Variables_de_borrado
 134+ 849C 00 00        	defw 0											;	" " " " " " "
 135+ 849E 00 00        	defw 0											;	" " " " " " "
 136+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 84A4
 138+ 84A4 00 00        	db 0,0											; Variables_de_pintado
 139+ 84A6 00 00        	defw 0											;	" " " " " " "
 140+ 84A8 00 00        	defw 0											;	" " " " " " "
 141+ 84AA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 84AE
 143+ 84AE 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 84B1
 145+ 84B1 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 84B5 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 84B8
 148+ 84B8 00           	db 0 											; (Columnas).
 149+ 84B9 00 00        	defw 0											; (Limite_horizontal).
 150+ 84BB 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 151+ 84BD
 152+ 84BD              ; ---------- ---------- ---------- ---------- ----------
 153+ 84BD
 154+ 84BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 84BF 00 00        	defw 0											; (Posicion_actual).
 156+ 84C1 00 00        	defw 0 											; (Puntero_objeto).
 157+ 84C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 84C6
 159+ 84C6 00           	db %00000000 									; (Attr).
 160+ 84C7
 161+ 84C7 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 84C9 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 84CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 84CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 84CF
 166+ 84CF 00 00        	defw 0											; (Posicion_inicio).
 167+ 84D1 00           	db 0											; (Cuad_objeto).
 168+ 84D2
 169+ 84D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 84D6
 171+ 84D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 84D7
 173+ 84D7 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 84D9 00 00        	defw 0											;	" " " " " " "
 175+ 84DB 00 00        	defw 0											;	" " " " " " "
 176+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 84E1
 178+ 84E1 00 00        	db 0,0											; Variables_de_pintado
 179+ 84E3 00 00        	defw 0											;	" " " " " " "
 180+ 84E5 00 00        	defw 0											;	" " " " " " "
 181+ 84E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 84EB
 183+ 84EB 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 84EE
 185+ 84EE 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 84F2 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 84F5
 188+ 84F5 00           	db 0 											; (Columnas).
 189+ 84F6 00 00        	defw 0											; (Limite_horizontal).
 190+ 84F8 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 191+ 84FA
 192+ 84FA              ; ---------- ---------- ---------- ---------- ----------
 193+ 84FA
 194+ 84FA 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 84FC 00 00        	defw 0											; (Posicion_actual).
 196+ 84FE 00 00        	defw 0 											; (Puntero_objeto).
 197+ 8500 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8503
 199+ 8503 00           	db %00000000 									; (Attr).
 200+ 8504
 201+ 8504 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8506 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8508 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 850A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 850C
 206+ 850C 00 00        	defw 0											; (Posicion_inicio).
 207+ 850E 00           	db 0											; (Cuad_objeto).
 208+ 850F
 209+ 850F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8513
 211+ 8513 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8514
 213+ 8514 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8516 00 00        	defw 0											;	" " " " " " "
 215+ 8518 00 00        	defw 0											;	" " " " " " "
 216+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 851E
 218+ 851E 00 00        	db 0,0											; Variables_de_pintado
 219+ 8520 00 00        	defw 0											;	" " " " " " "
 220+ 8522 00 00        	defw 0											;	" " " " " " "
 221+ 8524 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8528
 223+ 8528 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 852B
 225+ 852B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 852F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8532
 228+ 8532 00           	db 0 											; (Columnas).
 229+ 8533 00 00        	defw 0											; (Limite_horizontal).
 230+ 8535 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 231+ 8537
 232+ 8537              ; ---------- ---------- ---------- ---------- ----------
 233+ 8537
 234+ 8537 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8539 00 00        	defw 0											; (Posicion_actual).
 236+ 853B 00 00        	defw 0 											; (Puntero_objeto).
 237+ 853D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8540
 239+ 8540 00           	db %00000000 									; (Attr).
 240+ 8541
 241+ 8541 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8543 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8545 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8547 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8549
 246+ 8549 00 00        	defw 0											; (Posicion_inicio).
 247+ 854B 00           	db 0											; (Cuad_objeto).
 248+ 854C
 249+ 854C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8550
 251+ 8550 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8551
 253+ 8551 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8553 00 00        	defw 0											;	" " " " " " "
 255+ 8555 00 00        	defw 0											;	" " " " " " "
 256+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 855B
 258+ 855B 00 00        	db 0,0											; Variables_de_pintado
 259+ 855D 00 00        	defw 0											;	" " " " " " "
 260+ 855F 00 00        	defw 0											;	" " " " " " "
 261+ 8561 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8565
 263+ 8565 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8568
 265+ 8568 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 856C 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 856F
 268+ 856F 00           	db 0 											; (Columnas).
 269+ 8570 00 00        	defw 0											; (Limite_horizontal).
 270+ 8572 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 271+ 8574
 272+ 8574              ; ---------- ---------- ---------- ---------- ----------
 273+ 8574
 274+ 8574 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8576 00 00        	defw 0											; (Posicion_actual).
 276+ 8578 00 00        	defw 0 											; (Puntero_objeto).
 277+ 857A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 857D
 279+ 857D 00           	db %00000000 									; (Attr).
 280+ 857E
 281+ 857E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8580 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8582 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8584 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8586
 286+ 8586 00 00        	defw 0											; (Posicion_inicio).
 287+ 8588 00           	db 0											; (Cuad_objeto).
 288+ 8589
 289+ 8589 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 858D
 291+ 858D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 858E
 293+ 858E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8590 00 00        	defw 0											;	" " " " " " "
 295+ 8592 00 00        	defw 0											;	" " " " " " "
 296+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8598
 298+ 8598 00 00        	db 0,0											; Variables_de_pintado
 299+ 859A 00 00        	defw 0											;	" " " " " " "
 300+ 859C 00 00        	defw 0											;	" " " " " " "
 301+ 859E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 85A2
 303+ 85A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 85A5
 305+ 85A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 85A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 85AC
 308+ 85AC 00           	db 0 											; (Columnas).
 309+ 85AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 85AF 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 311+ 85B1
 312+ 85B1              ; ---------- ---------- ---------- ---------- ----------
 313+ 85B1
 314+ 85B1 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 85B3 00 00        	defw 0											; (Posicion_actual).
 316+ 85B5 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85B7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85BA
 319+ 85BA 00           	db %00000000 									; (Attr).
 320+ 85BB
 321+ 85BB 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 85BD 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 85BF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 85C1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 85C3
 326+ 85C3 00 00        	defw 0											; (Posicion_inicio).
 327+ 85C5 00           	db 0											; (Cuad_objeto).
 328+ 85C6
 329+ 85C6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 85CA
 331+ 85CA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 85CB
 333+ 85CB 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 85CD 00 00        	defw 0											;	" " " " " " "
 335+ 85CF 00 00        	defw 0											;	" " " " " " "
 336+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 85D5
 338+ 85D5 00 00        	db 0,0											; Variables_de_pintado
 339+ 85D7 00 00        	defw 0											;	" " " " " " "
 340+ 85D9 00 00        	defw 0											;	" " " " " " "
 341+ 85DB 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 85DF
 343+ 85DF 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 85E2
 345+ 85E2 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 85E6 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 85E9
 348+ 85E9 00           	db 0 											; (Columnas).
 349+ 85EA 00 00        	defw 0											; (Limite_horizontal).
 350+ 85EC 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 351+ 85EE
 352+ 85EE              ; ---------- ---------- ---------- ---------- ----------
 353+ 85EE
 354+ 85EE 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 85F0 00 00        	defw 0											; (Posicion_actual).
 356+ 85F2 00 00        	defw 0 											; (Puntero_objeto).
 357+ 85F4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 85F7
 359+ 85F7 00           	db %00000000 									; (Attr).
 360+ 85F8
 361+ 85F8 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 85FA 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 85FC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 85FE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8600
 366+ 8600 00 00        	defw 0											; (Posicion_inicio).
 367+ 8602 00           	db 0											; (Cuad_objeto).
 368+ 8603
 369+ 8603 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8607
 371+ 8607 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 8608
 373+ 8608 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 860A 00 00        	defw 0											;	" " " " " " "
 375+ 860C 00 00        	defw 0											;	" " " " " " "
 376+ 860E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8612
 378+ 8612 00 00        	db 0,0											; Variables_de_pintado
 379+ 8614 00 00        	defw 0											;	" " " " " " "
 380+ 8616 00 00        	defw 0											;	" " " " " " "
 381+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 861C
 383+ 861C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 861F
 385+ 861F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8623 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8626
 388+ 8626 00           	db 0 											; (Columnas).
 389+ 8627 00 00        	defw 0											; (Limite_horizontal).
 390+ 8629 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 391+ 862B
 392+ 862B              ; ---------- ---------- ---------- ---------- ----------
 393+ 862B
 394+ 862B 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 862D 00 00        	defw 0											; (Posicion_actual).
 396+ 862F 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8631 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8634
 399+ 8634 00           	db %00000000 									; (Attr).
 400+ 8635
 401+ 8635 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 8637 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 8639 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 863B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 863D
 406+ 863D 00 00        	defw 0											; (Posicion_inicio).
 407+ 863F 00           	db 0											; (Cuad_objeto).
 408+ 8640
 409+ 8640 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8644
 411+ 8644 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8645
 413+ 8645 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 8647 00 00        	defw 0											;	" " " " " " "
 415+ 8649 00 00        	defw 0											;	" " " " " " "
 416+ 864B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 864F
 418+ 864F 00 00        	db 0,0											; Variables_de_pintado
 419+ 8651 00 00        	defw 0											;	" " " " " " "
 420+ 8653 00 00        	defw 0											;	" " " " " " "
 421+ 8655 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 8659
 423+ 8659 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 865C
 425+ 865C 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8660 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8663
 428+ 8663 00           	db 0 											; (Columnas).
 429+ 8664 00 00        	defw 0											; (Limite_horizontal).
 430+ 8666 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 431+ 8668
 432+ 8668              ; ---------- ---------- ---------- ---------- ----------
 433+ 8668
 434+ 8668 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 866A 00 00        	defw 0											; (Posicion_actual).
 436+ 866C 00 00        	defw 0 											; (Puntero_objeto).
 437+ 866E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8671
 439+ 8671 00           	db %00000000 									; (Attr).
 440+ 8672
 441+ 8672 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8674 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 8676 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 8678 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 867A
 446+ 867A 00 00        	defw 0											; (Posicion_inicio).
 447+ 867C 00           	db 0											; (Cuad_objeto).
 448+ 867D
 449+ 867D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8681
 451+ 8681 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8682
 453+ 8682 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8684 00 00        	defw 0											;	" " " " " " "
 455+ 8686 00 00        	defw 0											;	" " " " " " "
 456+ 8688 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 868C
 458+ 868C 00 00        	db 0,0											; Variables_de_pintado
 459+ 868E 00 00        	defw 0											;	" " " " " " "
 460+ 8690 00 00        	defw 0											;	" " " " " " "
 461+ 8692 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 8696
 463+ 8696 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 8699
 465+ 8699 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 869D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 86A0
 468+ 86A0 00           	db 0 											; (Columnas).
 469+ 86A1 00 00        	defw 0											; (Limite_horizontal).
 470+ 86A3 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 471+ 86A5
 472+ 86A5              ; ---------- ---------- ---------- ---------- ----------
 473+ 86A5
 474+ 86A5 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 86A7 00 00        	defw 0											; (Posicion_actual).
 476+ 86A9 00 00        	defw 0 											; (Puntero_objeto).
 477+ 86AB 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 86AE
 479+ 86AE 00           	db %00000000 									; (Attr).
 480+ 86AF
 481+ 86AF 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 86B1 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 86B3 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 86B5 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 86B7
 486+ 86B7 00 00        	defw 0											; (Posicion_inicio).
 487+ 86B9 00           	db 0											; (Cuad_objeto).
 488+ 86BA
 489+ 86BA 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 86BE
 491+ 86BE 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 86BF
 493+ 86BF 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 86C1 00 00        	defw 0											;	" " " " " " "
 495+ 86C3 00 00        	defw 0											;	" " " " " " "
 496+ 86C5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 86C9
 498+ 86C9 00 00        	db 0,0											; Variables_de_pintado
 499+ 86CB 00 00        	defw 0											;	" " " " " " "
 500+ 86CD 00 00        	defw 0											;	" " " " " " "
 501+ 86CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 86D3
 503+ 86D3 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 86D6
 505+ 86D6 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 86DA 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 86DD
 508+ 86DD 00           	db 0 											; (Columnas).
 509+ 86DE 00 00        	defw 0											; (Limite_horizontal).
 510+ 86E0 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 511+ 86E2
 512+ 86E2              ; ---------- ---------- ---------- ---------- ----------
 513+ 86E2
 514+ 86E2 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 86E4 00 00        	defw 0											; (Posicion_actual).
 516+ 86E6 00 00        	defw 0 											; (Puntero_objeto).
 517+ 86E8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 86EB
 519+ 86EB 00           	db %00000000 									; (Attr).
 520+ 86EC
 521+ 86EC 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 86EE 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 86F0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 86F2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 86F4
 526+ 86F4 00 00        	defw 0											; (Posicion_inicio).
 527+ 86F6 00           	db 0											; (Cuad_objeto).
 528+ 86F7
 529+ 86F7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 86FB
 531+ 86FB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 86FC
 533+ 86FC 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 86FE 00 00        	defw 0											;	" " " " " " "
 535+ 8700 00 00        	defw 0											;	" " " " " " "
 536+ 8702 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 8706
 538+ 8706 00 00        	db 0,0											; Variables_de_pintado
 539+ 8708 00 00        	defw 0											;	" " " " " " "
 540+ 870A 00 00        	defw 0											;	" " " " " " "
 541+ 870C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8710
 543+ 8710 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8713
 545+ 8713 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 8717 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 871A
 548+ 871A 00           	db 0 											; (Columnas).
 549+ 871B 00 00        	defw 0											; (Limite_horizontal).
 550+ 871D 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 551+ 871F
 552+ 871F              ; -------------------------------------------------------------------------------------
 553+ 871F              ;
 554+ 871F              ;	20/05/23
 555+ 871F              ;
 556+ 871F              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 871F              ;
 558+ 871F              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 871F              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 871F              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 871F              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 871F
 563+ 871F              Indice_de_entidades
 564+ 871F
 565+ 871F 29 87        	defw Entidad_1
 566+ 8721 39 87        	defw Entidad_2
 567+ 8723 49 87        	defw Entidad_3
 568+ 8725 59 87        	defw Entidad_4
 569+ 8727 69 87        	defw Entidad_5
 570+ 8729
 571+ 8729              ;	BADSAT, (Satélite malvado).
 572+ 8729
 573+ 8729 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 872B 04           	db %00000100									; (Attr).
 575+ 872C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 872E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8730 9F 47        	defw $479f	                             	    ; (Posicion_inicio).
 578+ 8732 01           	db 1											; (Cuad_objeto).
 579+ 8733 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 8737 D4 9A        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 581+ 8739
 582+ 8739 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 873B 02           	db %00000010									; (Attr).
 584+ 873C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 873E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8740 5F 48        	defw $485f                                      ; (Posicion_inicio).
 587+ 8742 01           	db 1											; (Cuad_objeto).
 588+ 8743 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 8747 D4 9A        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 590+ 8749
 591+ 8749 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 874B 04           	db %00000100									; (Attr).
 593+ 874C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 874E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8750 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8752 01           	db 1											; (Cuad_objeto).
 597+ 8753 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 8757 C8 9A        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 599+ 8759
 600+ 8759 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 875B 01           	db %00000001									; (Attr).
 602+ 875C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 875E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8760 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8762 01           	db 1											; (Cuad_objeto).
 606+ 8763 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 8767 D4 9A        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8769
 609+ 8769 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 876B 01           	db %00000001									; (Attr).
 611+ 876C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 876E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8770 0A 40        	defw $400a                                      ; (Posicion_inicio).
 614+ 8772 01           	db 1											; (Cuad_objeto).
 615+ 8773 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 8777 CA 9A        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  8779              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8779              ; 13/05/23
   2+ 8779
   3+ 8779              Indice_de_niveles
   4+ 8779
   5+ 8779 87 87        	defw Nivel_1
   6+ 877B 9E 87        	defw Nivel_2
   7+ 877D AB 87        	defw Nivel_3
   8+ 877F BB 87        	defw Nivel_4
   9+ 8781 CD 87        	defw Nivel_5
  10+ 8783
  11+ 8783              ;	...
  12+ 8783              ;	...
  13+ 8783              ;	+ Niveles ...
  14+ 8783
  15+ 8783 00 00        	defw 0
  16+ 8785 00 00        	defw 0
  17+ 8787
  18+ 8787 16           Nivel_1 db 22                                   ; Nº de entidades.
  19+ 8788 01 02 03 04  	db 1,2,3,4,5,1,2,3,4,5
  19+ 878C 05 01 02 03
  19+ 8790 04 05
  20+ 8792 01 02 03 04  	db 1,2,3,4,5,1,2,3,4,5						; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 8796 05 01 02 03
  20+ 879A 04 05
  21+ 879C 01 02        	db 1,2
  22+ 879E 0C           Nivel_2 db 12									; Nº de entidades.
  23+ 879F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  23+ 87A3 01 02
  24+ 87A5 02 01 01 01  	db 2,1,1,1,1,2
  24+ 87A9 01 02
  25+ 87AB 0F           Nivel_3 db 15									; Nº de entidades.
  26+ 87AC 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  26+ 87B0 01
  27+ 87B1 03 01 01 01  	db 3,1,1,1,1
  27+ 87B5 01
  28+ 87B6 03 01 01 01  	db 3,1,1,1,1
  28+ 87BA 01
  29+ 87BB 11           Nivel_4 db 17									; Nº de entidades.
  30+ 87BC 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  30+ 87C0 01
  31+ 87C1 04 01 01 01  	db 4,1,1,1,1
  31+ 87C5 01
  32+ 87C6 04 01 01 01  	db 4,1,1,1,1
  32+ 87CA 01
  33+ 87CB 02 03        	db 2,3
  34+ 87CD 14           Nivel_5 db 20									; Nº de entidades.
  35+ 87CE 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 87D2 01
  36+ 87D3 05 01 01 01  	db 5,1,1,1,1
  36+ 87D7 01
  37+ 87D8 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  37+ 87DC 01
  38+ 87DD 05 01 01 01  	db 5,1,1,1,1
  38+ 87E1 01
  39+ 87E2
  40+ 87E2              ;---------------------------------------------------------------------------------------------------------------
  41+ 87E2              ;
  42+ 87E2              ;   21/5/23
  43+ 87E2              ;
  44+ 87E2              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  45+ 87E2              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  46+ 87E2              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  47+ 87E2              ;	_en la caja DRAW correspondiente.
  48+ 87E2              ;
  49+ 87E2              ;	MODIFICA: HL,DE y A.
  50+ 87E2              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  51+ 87E2
  52+ 87E2              Inicializa_Punteros_de_nivel
  53+ 87E2
  54+ 87E2 21 79 87     	ld hl,Indice_de_niveles
  55+ 87E5 22 FA 88     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  56+ 87E8 CD A3 8B     	call Extrae_address
  57+ 87EB 7E           	ld a,(hl)
  58+ 87EC 32 CD 88     	ld (Numero_de_entidades),a
  59+ 87EF 23           	inc hl
  60+ 87F0 22 FC 88     	ld (Datos_de_nivel),hl
  61+ 87F3 C9           	ret
  62+ 87F4
  63+ 87F4              ;---------------------------------------------------------------------------------------------------------------
  64+ 87F4              ;
  65+ 87F4              ;   13/5/23
  66+ 87F4              ;
  67+ 87F4              ;	Destruye A,BC,HL,DE
  68+ 87F4
  69+ 87F4              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  70+ 87F4              ;	_del juego.
  71+ 87F4
  72+ 87F4              Prepara_cajas
  73+ 87F4
  74+ 87F4              ; Preparamos los punteros de las cajas.
  75+ 87F4
  76+ 87F4 21 68 84     	ld hl,Indice_de_cajas
  77+ 87F7 CD A3 8B     	call Extrae_address
  78+ 87FA CD 37 88     	call Avanza_caja
  79+ 87FD
  80+ 87FD CD 72 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  81+ 8800
  82+ 8800 2A FC 88     	ld hl,(Datos_de_nivel)
  83+ 8803
  84+ 8803              ; HL está en los datos del nivel correspondiente.
  85+ 8803              ; B actuará como contador de cajas.
  86+ 8803
  87+ 8803 C5           1 push bc
  88+ 8804
  89+ 8804 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  90+ 8805 CD 28 88     	call PreparaBC
  91+ 8808
  92+ 8808 21 1F 87     	ld hl,Indice_de_entidades
  93+ 880B CD 30 88     	call SBC_HL_con_BC_y_Extrae
  94+ 880E 22 D3 88         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  95+ 8811
  96+ 8811 CD 41 88     	call Datos_de_entidad_a_caja
  97+ 8814
  98+ 8814 2A CB 88     	ld hl,(Indice_restore_caja)
  99+ 8817 CD A3 8B     	call Extrae_address
 100+ 881A CD 37 88     	call Avanza_caja
 101+ 881D
 102+ 881D 2A FC 88     	ld hl,(Datos_de_nivel)
 103+ 8820 23           	inc hl
 104+ 8821 22 FC 88     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 105+ 8824
 106+ 8824 C1           	pop bc
 107+ 8825 10 DC        	djnz 1B
 108+ 8827 C9           	ret
 109+ 8828
 110+ 8828 CB 27        PreparaBC sla a
 111+ 882A D6 02        	sub 2										; [(Nivel)*2]-2.
 112+ 882C 4F           	ld c,a
 113+ 882D 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 114+ 882F C9           	ret
 115+ 8830
 116+ 8830 A7           SBC_HL_con_BC_y_Extrae and a
 117+ 8831 ED 4A        	adc hl,bc
 118+ 8833 CD A3 8B     	call Extrae_address
 119+ 8836 C9           	ret
 120+ 8837
 121+ 8837 22 C7 88     Avanza_caja	ld (Puntero_store_caja),hl
 122+ 883A 13           	inc de
 123+ 883B 13           	inc de
 124+ 883C EB           	ex de,hl
 125+ 883D 22 CB 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 126+ 8840 C9           	ret
 127+ 8841
 128+ 8841              Datos_de_entidad_a_caja
 129+ 8841
 130+ 8841              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 131+ 8841
 132+ 8841 ED 5B C7 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8845
 134+ 8845 01 02 00     	ld bc,2
 135+ 8848 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 884A
 137+ 884A 01 07 00     	ld bc,7
 138+ 884D CD 6C 88     	call Situa_DE
 139+ 8850
 140+ 8850 01 05 00     	ld bc,5
 141+ 8853 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8855
 143+ 8855 01 04 00     	ld bc,4
 144+ 8858 CD 6C 88     	call Situa_DE
 145+ 885B
 146+ 885B 01 07 00     	ld bc,7
 147+ 885E ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 8860
 149+ 8860 01 18 00     	ld bc,24
 150+ 8863 CD 6C 88     	call Situa_DE
 151+ 8866
 152+ 8866 01 02 00     	ld bc,2
 153+ 8869 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 886B
 155+ 886B C9           	ret
 156+ 886C
 157+ 886C EB           Situa_DE ex de,hl
 158+ 886D A7           	and a
 159+ 886E ED 4A        	adc hl,bc
 160+ 8870 EB           	ex de,hl
 161+ 8871 C9           	ret
 162+ 8872
 163+ 8872              ;---------------------------------------------------------------------------------------------------------------
 164+ 8872              ;
 165+ 8872              ;	21/5/23
 166+ 8872              ;
 167+ 8872              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 168+ 8872              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 169+ 8872              ;
 170+ 8872              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 171+ 8872              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 172+ 8872              ;	_ total de entidades que contiene (Numero_de_entidades).
 173+ 8872              ;
 174+ 8872              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 175+ 8872              ;	MODIFICA: A y B.
 176+ 8872              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 177+ 8872
 178+ 8872              Admin_num_entidades
 179+ 8872
 180+ 8872              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 181+ 8872
 182+ 8872 3A CD 88     	ld a,(Numero_de_entidades)
 183+ 8875 A7           	and a
 184+ 8876              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 185+ 8876 28 FE        	jr z,$
 186+ 8878              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 187+ 8878 FE 0A        	cp 10
 188+ 887A 38 08        	jr c,1F
 189+ 887C
 190+ 887C              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 191+ 887C              ; Actualizamos variables.
 192+ 887C
 193+ 887C 3E 0A        	ld a,10
 194+ 887E 32 CE 88     	ld (Numero_parcial_de_entidades),a
 195+ 8881 47           	ld b,a
 196+ 8882 18 04        	jr 2F
 197+ 8884
 198+ 8884              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 199+ 8884              ; (Numero_de_entidades)="0".
 200+ 8884
 201+ 8884 32 CE 88     1 ld (Numero_parcial_de_entidades),a
 202+ 8887 47           	ld b,a
 203+ 8888 C9           2 ret
# file closed: Niveles.asm
  25  8889
  26  8889              ; ******************************************************************************************************************************************************************************************
  27  8889              ; Constantes.
  28  8889              ; ******************************************************************************************************************************************************************************************
  29  8889              ;
  30  8889              ; 8/11/22
  31  8889              ;
  32  8889              ; Constantes generales.
  33  8889              ;
  34  8889
  35  8889              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  36  8889              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  37  8889              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  38  8889              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  39  8889
  40  8889              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  41  8889              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  42  8889              ;                               				        ; De momento situamos este almacén en $7000.
  43  8889              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  44  8889              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  45  8889              ;                               				        ; De momento situamos este almacén en $7060.
  46  8889
  47  8889              ; ******************************************************************************************************************************************************************************************
  48  8889              ; Variables.
  49  8889              ; ******************************************************************************************************************************************************************************************
  50  8889              ;
  51  8889              ; 10/11/22
  52  8889              ;
  53  8889              ; Variables de DRAW. (Motor principal).
  54  8889              ;
  55  8889              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  56  8889
  57  8889 00           Filas db 0												; Filas. [DRAW]
  58  888A 00           Columns db 0  											; Nº de columnas. [DRAW]
  59  888B 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  60  888D 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  61  888F 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  62  8890 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  63  8891
  64  8891              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  65  8891
  66  8891 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  67  8892              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  68  8892              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  69  8892 00           Attr db 0												; Atributos de la entidad:
  70  8893
  71  8893              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  72  8893              ;
  73  8893              ;	COLORES: 0 ..... NEGRO
  74  8893              ;    		 1 ..... AZUL
  75  8893              ; 			 2 ..... ROJO
  76  8893              ;			 3 ..... MAGENTA
  77  8893              ; 			 4 ..... VERDE
  78  8893              ; 			 5 ..... CIAN
  79  8893              ;			 6 ..... AMARILLO
  80  8893              ; 			 7 ..... BLANCO
  81  8893
  82  8893 00 00        Indice_Sprite_der defw 0
  83  8895 00 00        Indice_Sprite_izq defw 0
  84  8897 00 00        Puntero_DESPLZ_der defw 0
  85  8899 00 00        Puntero_DESPLZ_izq defw 0
  86  889B
  87  889B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  88  889D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  89  889E
  90  889E              ; Variables de objeto. (Características).
  91  889E
  92  889E 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  93  889F 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  94  88A0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  95  88A1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  96  88A2
  97  88A2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  98  88A3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  99  88A3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 100  88A3 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 101  88A5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 102  88A7 00 00        	defw 0
 103  88A9 00 00 00 00  	db 0,0,0,0
 104  88AD
 105  88AD 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 106  88AF 00 00        	defw 0
 107  88B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  88B3 00 00 00 00  	db 0,0,0,0
 109  88B7
 110  88B7              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 111  88B7
 112  88B7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 113  88B8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 114  88B8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 115  88B8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 116  88B8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 117  88B8              ;
 118  88B8              ; 														DESCRIPCIÖN:
 119  88B8              ;
 120  88B8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 121  88B8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 122  88B8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 123  88B8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 124  88B8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 125  88B8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 126  88B8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 127  88B8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 128  88B8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 129  88B8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 130  88B8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 131  88B8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 132  88B8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 133  88B8              ;
 134  88B8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 135  88B8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 136  88B8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 137  88B8
 138  88B8 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 139  88B9
 140  88B9              ; Movimiento.
 141  88B9
 142  88B9 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 143  88BA 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 144  88BC 00 00        Puntero_mov defw 0
 145  88BE 00           Contador_db_mov db 0
 146  88BF 00           Incrementa_puntero db 0
 147  88C0 00           Repetimos_db db 0
 148  88C1
 149  88C1              ; Variables de funcionamiento. [DRAW].
 150  88C1
 151  88C1 00           Columnas db 0
 152  88C2 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 153  88C4              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 154  88C4 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  88C5
 156  88C5              ; variables de control general.
 157  88C5
 158  88C5 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 159  88C6
 160  88C6              ; 61 Bytes por entidad.
 161  88C6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 162  88C6              ;					         		---------;      ;---------
 163  88C6
 164  88C6
 165  88C6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 166  88C6
 167  88C6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 168  88C7
 169  88C7              ;														DESCRIPCIÓN:
 170  88C7              ;
 171  88C7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 172  88C7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 173  88C7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 174  88C7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 175  88C7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 176  88C7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 177  88C7              ;														BIT 3, .............
 178  88C7              ;														BIT 4, .............
 179  88C7
 180  88C7              ; Gestión de ENTIDADES y CAJAS.
 181  88C7
 182  88C7              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 183  88C7 00 00        Puntero_store_caja defw 0
 184  88C9 00 00        Puntero_restore_caja defw 0
 185  88CB 00 00        Indice_restore_caja defw 0
 186  88CD 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 187  88CE 00           Numero_parcial_de_entidades db 0
 188  88CF 00           Entidades_en_curso db 0									; ..... ..... .....
 189  88D0 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 190  88D1              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 191  88D1              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 192  88D1              ;														; _ (Numero_de_malotes)="0".
 193  88D1 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 194  88D3 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 195  88D5              ;														; _ puntero (Indice_entidades).
 196  88D5
 197  88D5
 198  88D5              ;---------------------------------------------------------------------------------------------------------------
 199  88D5              ;
 200  88D5              ; Sirven para PINTAR.
 201  88D5
 202  88D5 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 203  88D7              ;														; _variable para almacenar lo posición del puntero_
 204  88D7              ; 														; _de pila, SP.
 205  88D7 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 206  88D9              ;														; La utiliza la rutina [Extrae_foto_registros].
 207  88D9 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 208  88DB              ;														; _el snapshot de los registros de la siguiente entidad.
 209  88DB              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 210  88DB 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 211  88DD              ;														; _el snapshot de los registros del siguiente disparo.
 212  88DD              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 213  88DD
 214  88DD              ;---------------------------------------------------------------------------------------------------------------
 215  88DD
 216  88DD              ; Gestión de Disparos.
 217  88DD
 218  88DD 00           Numero_de_disparotes db 0
 219  88DE 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 220  88E0 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 221  88E2 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 222  88E3              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 223  88E3              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 224  88E3 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 225  88E5              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 226  88E5              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 227  88E5              ;														; _produzca colisión.
 228  88E5 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 229  88E7              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 230  88E7 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 231  88EA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 232  88EA 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 233  88ED              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 234  88ED
 235  88ED              ;---------------------------------------------------------------------------------------------------------------
 236  88ED
 237  88ED              ; Relojes y temporizaciones.
 238  88ED
 239  88ED 00           Contador_de_frames db 0
 240  88EE 00           Secundero db 0
 241  88EF 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 242  88F0              ;														; Repite la oleada de entidades.
 243  88F0 01           Habilita_disparo_Amadeus db 1
 244  88F1 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 245  88F2 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 246  88F3
 247  88F3 01           Habilita_disparo_entidad db 1
 248  88F4 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 249  88F5 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 250  88F6
 251  88F6              ;---------------------------------------------------------------------------------------------------------------
 252  88F6
 253  88F6              ; Gestión de FRAMES.
 254  88F6
 255  88F6 00           Switch db 0
 256  88F7
 257  88F7              ; Variables de Raster y localización en pantalla.
 258  88F7
 259  88F7 00 FF        Temp_Raster defw $ff00
 260  88F9
 261  88F9              ;---------------------------------------------------------------------------------------------------------------
 262  88F9
 263  88F9              ; Gestión de NIVELES.
 264  88F9
 265  88F9 00           Nivel db 0												 ; Nivel actual del juego.
 266  88FA 00 00        Puntero_indice_NIVELES defw 0
 267  88FC 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 268  88FE              ; 														 ; _ que definen el NIVEL.
 269  88FE
 270  88FE
 271  88FE              ; Y todo comienza aquí .....
 272  88FE              ;
 273  88FE              ; Rutina principal *************************************************************************************************************************************************************************
 274  88FE              ;
 275  88FE              ;	14/11/22
 276  88FE
 277  88FE              START
 278  88FE
 279  88FE 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 280  8901 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 281  8903 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 282  8905 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 283  8907 F3           	DI
 284  8908
 285  8908 3E 07        	ld a,%00000111
 286  890A CD D6 96     	call Cls
 287  890D
 288  890D              ;	call Pinta_FILAS
 289  890D
 290  890D CD E2 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 291  8910 CD 7C 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 292  8913
 293  8913 CD F4 87     4 call Prepara_cajas
 294  8916
 295  8916 CD 4F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 296  8919              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 297  8919 CD 2C 8C     	call Restore_entidad
 298  891C
 299  891C 21 CE 88     	ld hl,Numero_parcial_de_entidades
 300  891F 46           	ld b,(hl)
 301  8920 04           	inc b
 302  8921 05           	dec b
 303  8922 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 304  8924
 305  8924              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 306  8924              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 307  8924              ;	Pintamos el resto de entidades:
 308  8924
 309  8924              ;	INICIA ENTIDADES !!!!!
 310  8924 C5           1 push bc  												; Guardo el contador de entidades.
 311  8925 CD A9 8B      	call Inicia_Puntero_objeto
 312  8928 CD EA 96     	call Recompone_posicion_inicio
 313  892B CD 26 91     	call Draw
 314  892E CD A0 7F     	call Guarda_foto_registros
 315  8931 CD F1 8B     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 316  8934 C1           	pop bc
 317  8935 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 318  8937
 319  8937              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 320  8937
 321  8937 3A C6 88     	ld a,(Ctrl_1)
 322  893A CB 5F        	bit 3,a
 323  893C 20 18        	jr nz,5F											; Loop
 324  893E
 325  893E              ; 	INICIA AMADEUS !!!!!
 326  893E
 327  893E CD 53 8C     3 call Restore_Amadeus
 328  8941 CD A9 8B     	call Inicia_Puntero_objeto
 329  8944 CD 26 91     	call Draw
 330  8947 CD A0 7F     	call Guarda_foto_registros
 331  894A 11 80 84     	ld de,Amadeus_db
 332  894D CD 65 8C     	call Store_Amadeus
 333  8950
 334  8950              ; 	INICIA DISPAROS !!!!!
 335  8950
 336  8950 CD 65 8B     	call Inicia_Puntero_Disparo_Entidades
 337  8953 CD 6C 8B     	call Inicia_Puntero_Disparo_Amadeus
 338  8956
 339  8956              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 340  8956
 341  8956 CD 4F 8B     5 call Inicia_punteros_de_cajas
 342  8959 CD 2C 8C     	call Restore_entidad
 343  895C
 344  895C 3A C6 88     	ld a,(Ctrl_1)
 345  895F CB 5F        	bit 3,a
 346  8961 28 0A        	jr z,6F
 347  8963
 348  8963              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 349  8963
 350  8963 21 C6 88     	ld hl,Ctrl_1
 351  8966 CB 9E        	res 3,(hl)
 352  8968 CD 73 8B     	call Calcula_numero_de_malotes
 353  896B 18 07        	jr 7F
 354  896D
 355  896D              ; ----------
 356  896D
 357  896D 3A CE 88     6 ld a,(Numero_parcial_de_entidades)
 358  8970 3C           	inc a
 359  8971 32 D0 88     	ld (Numero_de_malotes),a
 360  8974
 361  8974 AF           7 xor a
 362  8975 FB           2 ei
 363  8976 28 FD        	jr z,2B
 364  8978
 365  8978 3A EE 88     	ld a,(Secundero)
 366  897B 47           	ld b,a
 367  897C 3A EF 88     	ld a,(Activa_recarga_cajas)
 368  897F B8           	cp b
 369  8980 28 08        	jr z,8F
 370  8982
 371  8982 21 C6 88     	ld hl,Ctrl_1
 372  8985 CB E6        	set 4,(hl)
 373  8987 AF           	xor a
 374  8988 18 EB        	jr 2B
 375  898A
 376  898A 21 C6 88     8 ld hl,Ctrl_1
 377  898D CB A6        	res 4,(hl)
 378  898F F3           	di
 379  8990
 380  8990 C3 13 89     	jp 4B
 381  8993
 382  8993              ; -----------------------------------------------------------------------------------
 383  8993
 384  8993              Frame
 385  8993
 386  8993              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 387  8993              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 388  8993
 389  8993              ; PINTAMOS.
 390  8993
 391  8993 3E 02            ld a,2
 392  8995 D3 FE            out ($fe),a
 393  8997 CD 2A 94     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 394  899A CD 63 94     	call Extrae_foto_disparos
 395  899D 3E 01            ld a,1
 396  899F D3 FE            out ($fe),a
 397  89A1
 398  89A1              ; ----------------------------------------------------------------------
 399  89A1
 400  89A1              ; RELOJES.
 401  89A1
 402  89A1 21 ED 88     	ld hl,Contador_de_frames
 403  89A4 34           	inc (hl)											; 0 - 255
 404  89A5
 405  89A5 3E 3C        	ld a,60
 406  89A7 BE           	cp (hl)
 407  89A8 20 22        	jr nz,13F
 408  89AA
 409  89AA 36 00        	ld (hl),0
 410  89AC
 411  89AC 21 EE 88     	ld hl,Secundero
 412  89AF 34           	inc (hl)
 413  89B0
 414  89B0 7E           	ld a,(hl)
 415  89B1 E6 01        	and %00000001
 416  89B3 20 10        	jr nz,20F
 417  89B5
 418  89B5 3A CE 88     	ld a,(Numero_parcial_de_entidades)
 419  89B8 47           	ld b,a
 420  89B9 3A CF 88     	ld a,(Entidades_en_curso)
 421  89BC B8           	cp b
 422  89BD 28 06        	jr z,20F
 423  89BF 30 04        	jr nc,20F
 424  89C1
 425  89C1 3C           	inc a
 426  89C2 32 CF 88     	ld (Entidades_en_curso),a
 427  89C5
 428  89C5 3E 3C        20 ld a,60
 429  89C7 BE           	cp (hl)
 430  89C8 20 02        	jr nz,13F
 431  89CA
 432  89CA 36 00        	ld (hl),0
 433  89CC
 434  89CC 21 F0 88     13 ld hl,Habilita_disparo_Amadeus
 435  89CF 11 F2 88     	ld de,Temporiza_disparo_Amadeus
 436  89D2 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 437  89D5
 438  89D5 21 F3 88     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 439  89D8 11 F5 88     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 440  89DB CD D5 7F     	call Habilita_disparos
 441  89DE
 442  89DE              ; COLISIONES.
 443  89DE
 444  89DE CD C0 90     	call Selector_de_impactos
 445  89E1
 446  89E1              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 447  89E1              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 448  89E1              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 449  89E1
 450  89E1 AF           	xor a
 451  89E2 32 E2 88     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 452  89E5
 453  89E5 CD 4F 8B     	call Inicia_punteros_de_cajas
 454  89E8 CD 2C 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 455  89EB              ; 														; _ en DRAW.
 456  89EB 3A 89 88     	ld a,(Filas)
 457  89EE A7           	and a
 458  89EF 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 459  89F1 CD 3E 8C     	call Incrementa_punteros_de_cajas
 460  89F4 18 F2        	jr 12B
 461  89F6
 462  89F6              ; ---------------------------------------------------------------------------------------
 463  89F6
 464  89F6 CD 3E 8F     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 465  89F9 21 00 70     	ld hl,Album_de_fotos
 466  89FC 22 D9 88         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 467  89FF              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 468  89FF 3A CE 88     	ld a,(Numero_parcial_de_entidades)
 469  8A02 47               ld b,a
 470  8A03 A7           	and a
 471  8A04 20 16        	jr nz,2F
 472  8A06
 473  8A06 21 C6 88     	ld hl,Ctrl_1
 474  8A09 CB 66        	bit 4,(hl)
 475  8A0B C2 84 8A     	jp nz,4F
 476  8A0E
 477  8A0E 21 C6 88     	ld hl,Ctrl_1
 478  8A11 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 479  8A13 3A EE 88     	ld a,(Secundero)
 480  8A16 3C           	inc a
 481  8A17 32 EF 88     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 482  8A1A
 483  8A1A 18 68        	jr 4F
 484  8A1C
 485  8A1C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 486  8A1C
 487  8A1C              ; Código que ejecutamos con cada entidad:
 488  8A1C
 489  8A1C              ; Impacto ???
 490  8A1C
 491  8A1C 3A CF 88     2 ld a,(Entidades_en_curso)
 492  8A1F A7           	and a
 493  8A20 28 62        	jr z,4F
 494  8A22 47           	ld b,a
 495  8A23
 496  8A23 C5           15 push bc 												; Nº de entidades en curso.
 497  8A24
 498  8A24 3A A2 88     	ld a,(Impacto)
 499  8A27 A7           	and a
 500  8A28 28 14        	jr z,8F
 501  8A2A
 502  8A2A              ; Hay Impacto en esta entidad.
 503  8A2A
 504  8A2A CD 06 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 505  8A2D CD 6E 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 506  8A30
 507  8A30              ; -----
 508  8A30
 509  8A30 21 CE 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 510  8A33 35           	dec (hl)
 511  8A34 21 CF 88     	ld hl,Entidades_en_curso
 512  8A37 35           	dec (hl)
 513  8A38 21 CD 88     	ld hl,Numero_de_entidades
 514  8A3B 35           	dec (hl)
 515  8A3C 18 27        	jr 7F
 516  8A3E
 517  8A3E              ; -----
 518  8A3E
 519  8A3E              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 520  8A3E              ; _con las coordenadas de la entidad almacenada en DRAW.
 521  8A3E
 522  8A3E 3A C6 88     8 ld a,(Ctrl_1)
 523  8A41 CB 57        	bit 2,a
 524  8A43 28 20        	jr z,7F
 525  8A45
 526  8A45 2A E5 88     	ld hl,(Coordenadas_disparo_certero)
 527  8A48 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 528  8A49              ;														; E contiene la coordenada_X del disparo.
 529  8A49 2A 8F 88     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 530  8A4C              ;														; H Coordenado_y de la entidad.
 531  8A4C A7           	and a
 532  8A4D ED 52        	sbc hl,de
 533  8A4F
 534  8A4F CD F7 90     	call Determina_resultado_comparativa
 535  8A52 04           	inc b
 536  8A53 05           	dec b
 537  8A54
 538  8A54              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 539  8A54              ;	jr z,$
 540  8A54              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 541  8A54
 542  8A54 28 0F        	jr z,7F
 543  8A56
 544  8A56              ; ----- ----- -----
 545  8A56
 546  8A56 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 547  8A58 32 A2 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 548  8A5B 21 C6 88     	ld hl,Ctrl_1
 549  8A5E CB 96        	res 2,(hl)
 550  8A60 21 E5 88     	ld hl,Coordenadas_disparo_certero
 551  8A63 36 00        	ld (hl),0
 552  8A65
 553  8A65
 554  8A65 CD B7 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 555  8A68
 556  8A68 3A B7 88     	ld a,(Ctrl_0)
 557  8A6B CB 67        	bit 4,a
 558  8A6D 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 559  8A6F
 560  8A6F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 561  8A6F              ; [[[
 562  8A6F CD C7 8C     	call Detecta_disparo_entidad
 563  8A72              ; ]]]
 564  8A72 CD 16 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 565  8A75
 566  8A75 21 B7 88     	ld hl,Ctrl_0
 567  8A78 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 568  8A7A AF           	xor a
 569  8A7B 32 B8 88     	ld (Obj_dibujado),a
 570  8A7E
 571  8A7E CD F1 8B     6 call Store_Restore_cajas
 572  8A81
 573  8A81 C1           	pop bc
 574  8A82 10 9F        	djnz 15B
 575  8A84
 576  8A84              ; Tras la gestión de las entidades, ... AMADEUS.
 577  8A84
 578  8A84 CD 53 8C     4 call Restore_Amadeus
 579  8A87
 580  8A87 3A A2 88     	ld a,(Impacto)
 581  8A8A A7           	and a
 582  8A8B 20 FE        	jr nz,$
 583  8A8D
 584  8A8D              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 585  8A8D
 586  8A8D CD E7 8A     	call Mov_Amadeus
 587  8A90
 588  8A90 3A B7 88     	ld a,(Ctrl_0)
 589  8A93 CB 67        	bit 4,a
 590  8A95 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 591  8A97
 592  8A97 CD 16 8B     	call Guarda_foto_entidad_a_pintar
 593  8A9A
 594  8A9A 21 B7 88     3 ld hl,Ctrl_0
 595  8A9D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 596  8A9F AF           	xor a
 597  8AA0 32 B8 88     	ld (Obj_dibujado),a
 598  8AA3
 599  8AA3 11 80 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 600  8AA6 CD 65 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 601  8AA9
 602  8AA9 CD 5C 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 603  8AAC
 604  8AAC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 605  8AAC
 606  8AAC CD 8B 8B     	call Calcula_numero_de_disparotes
 607  8AAF CD 73 8B     9 call Calcula_numero_de_malotes
 608  8AB2
 609  8AB2 3E 04        	ld a,4
 610  8AB4 D3 FE        	out ($fe),a
 611  8AB6
 612  8AB6 C9           	ret
 613  8AB7
 614  8AB7              ; --------------------------------------------------------------------------------------------------------------
 615  8AB7              ;
 616  8AB7              ;	27/03/23
 617  8AB7
 618  8AB7              Mov_obj
 619  8AB7
 620  8AB7              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 621  8AB7
 622  8AB7 AF           	xor a
 623  8AB8 32 B8 88     	ld (Obj_dibujado),a
 624  8ABB 32 B7 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 625  8ABE              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 626  8ABE              ; 														; _de la entidad.
 627  8ABE CD 20 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 628  8AC1              ;														; Obj_dibujado="0".
 629  8AC1              ; Movemos Entidades malignas.
 630  8AC1
 631  8AC1 21 BA 88     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 632  8AC4 34           	inc (hl)
 633  8AC5 35           	dec (hl)                                            ; Salimos de la rutina.
 634  8AC6 C8           	ret z
 635  8AC7
 636  8AC7 CD D8 9A     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 637  8ACA
 638  8ACA 3A B7 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 639  8ACD CB 67        	bit 4,a
 640  8ACF C8           	ret z
 641  8AD0
 642  8AD0              ; Ha habido desplazamiento de la entidad maligna.
 643  8AD0              ; Ha llegado a zona de AMADEUS ???
 644  8AD0
 645  8AD0 3A 90 88     	ld a,(Coordenada_y)
 646  8AD3 FE 14        	cp $14
 647  8AD5 D4 8D 8E     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 648  8AD8              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 649  8AD8              ; ---------
 650  8AD8
 651  8AD8 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 652  8ADA 32 B8 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 653  8ADD CD 20 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 654  8AE0 CD 37 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 655  8AE3 CD 06 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 656  8AE6 C9           	ret													; _de la misma.
 657  8AE7
 658  8AE7              ; --------------------------------------------------------------------------------------------------------------
 659  8AE7              ;
 660  8AE7              ;	29/1/23
 661  8AE7
 662  8AE7              Mov_Amadeus
 663  8AE7
 664  8AE7 AF           	xor a
 665  8AE8 32 B8 88     	ld (Obj_dibujado),a
 666  8AEB CD 20 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 667  8AEE              ;														; Obj_dibujado="0".
 668  8AEE              ; Movemos Amadeus.
 669  8AEE
 670  8AEE CD 90 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 671  8AF1 3A B7 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 672  8AF4 CB 67        	bit 4,a
 673  8AF6 C8           	ret z
 674  8AF7
 675  8AF7              ; ---------
 676  8AF7
 677  8AF7 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 678  8AF9 32 B8 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 679  8AFC CD 20 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 680  8AFF CD 37 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 681  8B02 CD 06 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 682  8B05 C9           	ret													; _de la nave.
 683  8B06
 684  8B06              ; --------------------------------------------------------------------------------------------------------------
 685  8B06              ;
 686  8B06              ;	31/01/23
 687  8B06              ;
 688  8B06              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 689  8B06
 690  8B06              Guarda_foto_entidad_a_borrar
 691  8B06
 692  8B06 CD 00 94     	call Prepara_draw
 693  8B09 CD 3A 93     	call calcula_CColumnass
 694  8B0C CD 71 93     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 695  8B0F CD C6 93     	call Define_rutina_de_impresion
 696  8B12 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 697  8B15 C9           	ret
 698  8B16
 699  8B16              ; --------------------------------------------------------------------------------------------------------------
 700  8B16              ;
 701  8B16              ;	31/01/23
 702  8B16              ;
 703  8B16              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 704  8B16              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 705  8B16
 706  8B16              Guarda_foto_entidad_a_pintar
 707  8B16
 708  8B16 CD 43 8B     	call Repone_pintar
 709  8B19 CD 26 91     	call Draw
 710  8B1C CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 711  8B1F C9           	ret
 712  8B20
 713  8B20              ; --------------------------------------------------------------------------------------------------------------
 714  8B20              ;
 715  8B20              ;
 716  8B20
 717  8B20 21 89 88     Prepara_var_pintado_borrado	ld hl,Filas
 718  8B23 3A B8 88     	ld a,(Obj_dibujado)
 719  8B26 A7           	and a
 720  8B27 28 05        	jr z,1F
 721  8B29 11 AD 88     	ld de,Variables_de_pintado
 722  8B2C 18 03        	jr 2F
 723  8B2E 11 A3 88     1 ld de,Variables_de_borrado
 724  8B31 01 08 00     2 ld bc,8
 725  8B34 ED B0        	ldir
 726  8B36 C9           	ret
 727  8B37
 728  8B37              ; --------------------------------------------------------------------------------------------------------------
 729  8B37
 730  8B37 21 A3 88     Repone_borrar ld hl,Variables_de_borrado
 731  8B3A 11 89 88     	ld de,Filas
 732  8B3D 01 08 00     	ld bc,8
 733  8B40 ED B0        	ldir
 734  8B42 C9           	ret
 735  8B43
 736  8B43 21 AD 88     Repone_pintar ld hl,Variables_de_pintado
 737  8B46 11 89 88     	ld de,Filas
 738  8B49 01 08 00     	ld bc,8
 739  8B4C ED B0        	ldir
 740  8B4E C9           	ret
 741  8B4F
 742  8B4F              ; *************************************************************************************************************************************************************
 743  8B4F              ;
 744  8B4F              ; 8/1/23
 745  8B4F              ;
 746  8B4F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 747  8B4F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 748  8B4F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 749  8B4F
 750  8B4F              ; Destruye HL y DE !!!!!
 751  8B4F
 752  8B4F              Inicia_punteros_de_cajas
 753  8B4F
 754  8B4F 21 68 84     	ld hl,Indice_de_cajas
 755  8B52 CD A3 8B         call Extrae_address
 756  8B55 22 C7 88         ld (Puntero_store_caja),hl
 757  8B58 21 6A 84     	ld hl,Indice_de_cajas+2
 758  8B5B 22 CB 88     	ld (Indice_restore_caja),hl
 759  8B5E CD A3 8B     	call Extrae_address
 760  8B61 22 C9 88     	ld (Puntero_restore_caja),hl
 761  8B64 C9               ret
 762  8B65
 763  8B65              ; *************************************************************************************************************************************************************
 764  8B65              ;
 765  8B65              ; 8/1/23
 766  8B65              ;
 767  8B65              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 768  8B65
 769  8B65 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 770  8B68 22 DE 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 771  8B6B C9           	ret
 772  8B6C 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 773  8B6F 22 E0 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 774  8B72 C9           	ret
 775  8B73
 776  8B73              ; -------------------------------------------------------------------------------------------------------------
 777  8B73              ;
 778  8B73              ; 28/2/23
 779  8B73              ;
 780  8B73
 781  8B73              Calcula_numero_de_malotes
 782  8B73
 783  8B73 21 00 70     	ld hl,Album_de_fotos
 784  8B76 EB           	ex de,hl
 785  8B77 2A D9 88     	ld hl,(Stack_snapshot)
 786  8B7A
 787  8B7A 06 00        	ld b,0
 788  8B7C 7D           	ld a,l
 789  8B7D 93           	sub e
 790  8B7E 28 07        	jr z,1F
 791  8B80
 792  8B80              ; Nº de malotes no es "0".
 793  8B80
 794  8B80 D6 06        2 sub 6
 795  8B82 04           	inc b
 796  8B83 A7           	and a
 797  8B84 20 FA        	jr nz,2B
 798  8B86 78           	ld a,b
 799  8B87
 800  8B87 32 D0 88     1 ld (Numero_de_malotes),a
 801  8B8A C9           	ret
 802  8B8B
 803  8B8B              ; -------------------------------------------------------------------------------------------------------------
 804  8B8B              ;
 805  8B8B              ; 28/2/23
 806  8B8B              ;
 807  8B8B
 808  8B8B              Calcula_numero_de_disparotes
 809  8B8B
 810  8B8B 21 60 70     	ld hl,Album_de_fotos_disparos
 811  8B8E EB           	ex de,hl
 812  8B8F 2A DB 88     	ld hl,(Stack_snapshot_disparos)
 813  8B92
 814  8B92 06 00        	ld b,0
 815  8B94 7D           	ld a,l
 816  8B95 93           	sub e
 817  8B96 28 07        	jr z,1F
 818  8B98
 819  8B98              ; Nº de malotes no es "0".
 820  8B98
 821  8B98 D6 06        2 sub 6
 822  8B9A 04           	inc b
 823  8B9B A7           	and a
 824  8B9C 20 FA        	jr nz,2B
 825  8B9E 78           	ld a,b
 826  8B9F
 827  8B9F 32 DD 88     1 ld (Numero_de_disparotes),a
 828  8BA2 C9           	ret
 829  8BA3              ; *************************************************************************************************************************************************************
 830  8BA3              ;
 831  8BA3              ; 20/10/22
 832  8BA3              ;
 833  8BA3              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 834  8BA3              ;
 835  8BA3              ; Destruye el puntero y DE !!!!!
 836  8BA3
 837  8BA3 5E           Extrae_address ld e,(hl)
 838  8BA4 23           	inc hl
 839  8BA5 56           	ld d,(hl)
 840  8BA6 2B           	dec hl
 841  8BA7 EB           	ex de,hl
 842  8BA8 C9           	ret
 843  8BA9
 844  8BA9              ; *************************************************************************************************************************************************************
 845  8BA9              ;
 846  8BA9              ;	7/2/23
 847  8BA9              ;
 848  8BA9              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 849  8BA9              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 850  8BA9              ;
 851  8BA9              ;   Destruye HL y BC !!!!!,
 852  8BA9              ;
 853  8BA9              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 854  8BA9              ;					"0" ..... Izquierda.
 855  8BA9
 856  8BA9              Inicia_Puntero_objeto
 857  8BA9
 858  8BA9 3A 9D 88     	ld a,(Cuad_objeto)
 859  8BAC E6 01        	and 1
 860  8BAE F5           	push af
 861  8BAF CC CD 8B     	call z,Inicia_puntero_objeto_izq
 862  8BB2 F1           	pop af
 863  8BB3 28 2B        	jr z,1F
 864  8BB5 CD BA 8B     	call Inicia_puntero_objeto_der
 865  8BB8 18 26        	jr 1F
 866  8BBA
 867  8BBA              ; Arrancamos desde la parte izquierda de la pantalla.
 868  8BBA              ; Iniciamos (Indice_Sprite_der).
 869  8BBA
 870  8BBA 2A 93 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 871  8BBD 22 97 88     	ld (Puntero_DESPLZ_der),hl
 872  8BC0 CD A3 8B     	call Extrae_address
 873  8BC3 22 8D 88     	ld (Puntero_objeto),hl
 874  8BC6
 875  8BC6 2A 95 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 876  8BC9 22 99 88     	ld (Puntero_DESPLZ_izq),hl
 877  8BCC C9           	ret
 878  8BCD
 879  8BCD              ; Arrancamos desde la parte derecha de la pantalla.
 880  8BCD              ; Iniciamos (Indice_Sprite_izq).
 881  8BCD
 882  8BCD 2A 95 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 883  8BD0 22 99 88     	ld (Puntero_DESPLZ_izq),hl
 884  8BD3 CD A3 8B     	call Extrae_address
 885  8BD6 22 8D 88     	ld (Puntero_objeto),hl
 886  8BD9
 887  8BD9 2A 93 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 888  8BDC 22 97 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 889  8BDF C9           	ret
 890  8BE0
 891  8BE0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 892  8BE0
 893  8BE0 21 38 83     1 ld hl,Amadeus
 894  8BE3 ED 4B 8D 88  	ld bc,(Puntero_objeto)
 895  8BE7 B7 ED 42     	sub hl,bc
 896  8BEA C0           	ret nz
 897  8BEB 21 B7 88     	ld hl,Ctrl_0
 898  8BEE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 899  8BF0 C9           	ret 												; _de nuestra nave en los extremos.
 900  8BF1
 901  8BF1              ; *************************************************************************************************************************************************************
 902  8BF1              ;
 903  8BF1              ;	14/5/23
 904  8BF1              ;
 905  8BF1              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 906  8BF1              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 907  8BF1
 908  8BF1              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 909  8BF1              ;	_de la 2ª y 3ª entidad respectivamente.
 910  8BF1
 911  8BF1              Store_Restore_cajas
 912  8BF1
 913  8BF1 E5           	push hl
 914  8BF2 D5           	push de
 915  8BF3 C5            	push bc
 916  8BF4
 917  8BF4              ;	STORE !!!!!
 918  8BF4              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 919  8BF4
 920  8BF4 21 89 88     	ld hl,Filas
 921  8BF7 ED 5B C7 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 922  8BFB 01 3D 00     	ld bc,61
 923  8BFE ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 924  8C00
 925  8C00              ; 	Entidad_sospechosa. 20/4/23
 926  8C00
 927  8C00 3A A2 88     	ld a,(Impacto)
 928  8C03 A7           	and a
 929  8C04 28 0C        	jr z,1F
 930  8C06
 931  8C06 2A C7 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 932  8C09 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 933  8C0C A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 934  8C0D ED 4A        	adc hl,bc 											; _ "0" más adelante.
 935  8C0F 22 E3 88     	ld (Entidad_sospechosa_de_colision),hl
 936  8C12
 937  8C12              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 938  8C12
 939  8C12 2A C9 88     1 ld hl,(Puntero_restore_caja)
 940  8C15 7E           	ld a,(hl)
 941  8C16 A7           	and a
 942  8C17 F5           	push af
 943  8C18 28 08        	jr z,2F
 944  8C1A
 945  8C1A 11 89 88     	ld de,Filas
 946  8C1D 01 3D 00     	ld bc,61
 947  8C20 ED B0        	ldir
 948  8C22
 949  8C22 CD 3E 8C     2 call Incrementa_punteros_de_cajas
 950  8C25 F1           	pop af
 951  8C26 28 EA        	jr z,1B
 952  8C28
 953  8C28 C1           	pop bc
 954  8C29 D1           	pop de
 955  8C2A E1           	pop hl
 956  8C2B
 957  8C2B C9           	ret
 958  8C2C
 959  8C2C              ; **************************************************************************************************
 960  8C2C              ;
 961  8C2C              ;	12/05/23
 962  8C2C              ;
 963  8C2C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 964  8C2C
 965  8C2C E5           Restore_entidad push hl
 966  8C2D D5           	push de
 967  8C2E C5            	push bc
 968  8C2F
 969  8C2F 2A C7 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 970  8C32 11 89 88     	ld de,Filas
 971  8C35 01 3D 00     	ld bc,61
 972  8C38 ED B0        	ldir
 973  8C3A
 974  8C3A C1           	pop bc
 975  8C3B D1           	pop de
 976  8C3C E1           	pop hl
 977  8C3D C9           	ret
 978  8C3E
 979  8C3E
 980  8C3E              ; **************************************************************************************************
 981  8C3E              ;
 982  8C3E              ;	08/05/23
 983  8C3E              ;
 984  8C3E              ;	Incrementamos los dos punteros de entidades. (+1).
 985  8C3E
 986  8C3E 2A C9 88     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 987  8C41 22 C7 88     	ld (Puntero_store_caja),hl
 988  8C44 2A CB 88     	ld hl,(Indice_restore_caja)
 989  8C47 23           	inc hl
 990  8C48 23           	inc hl
 991  8C49 22 CB 88     	ld (Indice_restore_caja),hl
 992  8C4C CD A3 8B         call Extrae_address
 993  8C4F 22 C9 88         ld (Puntero_restore_caja),hl
 994  8C52 C9               ret
 995  8C53
 996  8C53              ; **************************************************************************************************
 997  8C53              ;
 998  8C53              ;	25/01/23
 999  8C53              ;
1000  8C53              ;	Restore_Amadeus
1001  8C53              ;
1002  8C53              ;	Cargamos en DRAW los parámetros de Amadeus.
1003  8C53              ;
1004  8C53
1005  8C53 E5           Restore_Amadeus	push hl
1006  8C54 D5           	push de
1007  8C55 C5            	push bc
1008  8C56 21 80 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1009  8C59 11 89 88     	ld de,Filas
1010  8C5C 01 3D 00     	ld bc,61
1011  8C5F ED B0        	ldir
1012  8C61 C1           	pop bc
1013  8C62 D1           	pop de
1014  8C63 E1           	pop hl
1015  8C64 C9           	ret
1016  8C65
1017  8C65              ; *************************************************************************************************************************************************************
1018  8C65              ;
1019  8C65              ;	29/04/23
1020  8C65              ;
1021  8C65              ;	Store_Amadeus
1022  8C65              ;
1023  8C65              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1024  8C65              ;
1025  8C65              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1026  8C65              ;
1027  8C65              ;	DESTRUYE: HL y BC y DE.
1028  8C65
1029  8C65 21 89 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1030  8C68 01 3D 00     	ld bc,61
1031  8C6B ED B0        	ldir
1032  8C6D C9           	ret
1033  8C6E
1034  8C6E              ; -----------------------------------------------------------
1035  8C6E              ;
1036  8C6E              ;	27/04/23
1037  8C6E              ;
1038  8C6E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1039  8C6E              ;
1040  8C6E              ;	Destruye: HL,BC,DE,A
1041  8C6E
1042  8C6E 21 89 88     Borra_datos_entidad ld hl,Filas
1043  8C71 01 3C 00     	ld bc,60
1044  8C74 AF           	xor a
1045  8C75 77           	ld (hl),a
1046  8C76 11 8A 88     	ld de,Filas+1
1047  8C79 ED B0        	ldir
1048  8C7B C9           	ret
1049  8C7C
1050  8C7C              ; -----------------------------------------------------------
1051  8C7C
1052  8C7C              ; Teclado.
1053  8C7C
1054  8C7C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1055  8C7E DB FE        	in a,($fe)
1056  8C80 E6 01        	and $01
1057  8C82 28 02        	jr z,1f
1058  8C84 18 F6        	jr Pulsa_ENTER
1059  8C86 C9           1 ret
1060  8C87
1061  8C87              ; **************************************************************************************************
1062  8C87              ;
1063  8C87              ; Temporización.
1064  8C87
1065  8C87              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1066  8C87              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1067  8C87              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1068  8C87              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1069  8C87
1070  8C87              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1071  8C87              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1072  8C87              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1073  8C87
1074  8C87              ; A partir de $4f61 no hace falta DELAY.
1075  8C87
1076  8C87              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1077  8C87
1078  8C87 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1079  8C8A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1080  8C8B 78           	LD A,B
1081  8C8C A7           	AND A
1082  8C8D 20 FB        	JR NZ,wait
1083  8C8F C9           	RET
1084  8C90
1085  8C90              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1086  8C90              ;
1087  8C90              ;	5/3/23
1088  8C90              ;
1089  8C90              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1090  8C90
1091  8C90              Movimiento_Amadeus
1092  8C90
1093  8C90              ; Disparo.
1094  8C90
1095  8C90 3A F0 88     	ld a,(Habilita_disparo_Amadeus)
1096  8C93 A7           	and a
1097  8C94 20 02        	jr nz,1F
1098  8C96 18 15        	jr 2F
1099  8C98
1100  8C98 3E F7        1 ld a,$f7													; "5" para disparar.
1101  8C9A DB FE        	in a,($fe)
1102  8C9C E6 10        	and $10
1103  8C9E
1104  8C9E F5           	push af
1105  8C9F CC 09 8D     	call z,Genera_disparo
1106  8CA2 F1           	pop af
1107  8CA3 20 08        	jr nz,2F
1108  8CA5
1109  8CA5 3A F0 88     	ld a,(Habilita_disparo_Amadeus)
1110  8CA8 EE 01        	xor 1
1111  8CAA 32 F0 88     	ld (Habilita_disparo_Amadeus),a
1112  8CAD
1113  8CAD 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1114  8CAF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1115  8CB1 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1116  8CB3 CC 78 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1117  8CB6 3E F7        	ld a,$f7
1118  8CB8 DB FE        	in a,($fe)
1119  8CBA E6 01        	and $01
1120  8CBC C8           	ret z
1121  8CBD
1122  8CBD 3E F7        	ld a,$f7
1123  8CBF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1124  8CC1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1125  8CC3 CC 5A 97     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1126  8CC6 C9           	ret
1127  8CC7
1128  8CC7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1129  8CC7              ;
1130  8CC7              ;	Rutina provisional para que los malotes cagen balas.
1131  8CC7
1132  8CC7              Detecta_disparo_entidad
1133  8CC7
1134  8CC7 3A F3 88     	ld a,(Habilita_disparo_entidad)
1135  8CCA A7           	and a
1136  8CCB C8           	ret z
1137  8CCC 3E 7F        	ld a,$7f
1138  8CCE DB FE        	in a,($fe)
1139  8CD0 E6 01        	and 1
1140  8CD2 C0           	ret nz
1141  8CD3 CD 09 8D     	call Genera_disparo
1142  8CD6 C9           	ret
1143  8CD7
1144  8CD7              ; Pinta indicadores de FILAS. ------------------------------------------------------
1145  8CD7
1146  8CD7 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1147  8CDA
1148  8CDA              ; ----------
1149  8CDA 06 20        	ld b,32
1150  8CDC E5           2 push hl
1151  8CDD C5           	push bc
1152  8CDE              ; ----------
1153  8CDE
1154  8CDE 06 BF        	ld b,$bf
1155  8CE0 36 80        1 ld (hl),%10000000
1156  8CE2 CD 0C 94     	call NextScan
1157  8CE5 10 F9        	djnz 1B
1158  8CE7
1159  8CE7              ; ----------
1160  8CE7 C1           	pop bc
1161  8CE8 E1           	pop hl
1162  8CE9 2C           	inc l
1163  8CEA 10 F0        	djnz 2B
1164  8CEC              ; ----------
1165  8CEC
1166  8CEC 06 03        	ld b,3
1167  8CEE 21 00 47         ld hl,$4700
1168  8CF1 CD F7 8C     3 call Bucle_1
1169  8CF4 10 FB            djnz 3B
1170  8CF6 C9               ret
1171  8CF7
1172  8CF7 C5           Bucle_1 push bc
1173  8CF8 E5                   push hl
1174  8CF9 D1                   pop de
1175  8CFA 13                   inc de
1176  8CFB 01 FF 00             ld bc,255
1177  8CFE 36 FF                ld (hl),255
1178  8D00 ED B0                ldir
1179  8D02 23                   inc hl
1180  8D03 3E 07                ld a,7
1181  8D05 84                   add a,h
1182  8D06 67                   ld h,a
1183  8D07 C1                   pop bc
1184  8D08 C9                   ret
1185  8D09
1186  8D09              ; ---------------------------------------------------------------
1187  8D09
1188  8D09              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D09              ; ******************************************************************************************************************************************************************************************
   2+ 8D09              ;
   3+ 8D09              ;   17/04/23
   4+ 8D09              ;
   5+ 8D09              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D09              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D09              ;
   8+ 8D09              ;
   9+ 8D09              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D09              ;
  11+ 8D09              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D09              ;               _ hacen las entidades hacia abajo.
  13+ 8D09              ;
  14+ 8D09              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D09              ;
  16+ 8D09              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D09              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D09              ;
  19+ 8D09              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D09              ;           _ la bala.
  21+ 8D09              ;
  22+ 8D09              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D09              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D09              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D09              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D09              ;           _ en el momento de generarse la bala)).
  27+ 8D09
  28+ 8D09              Genera_disparo
  29+ 8D09
  30+ 8D09              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D09              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D09              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D09              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D09              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D09              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D09              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D09
  38+ 8D09              ; Exclusiones:
  39+ 8D09
  40+ 8D09 3A C1 88         ld a,(Columnas)
  41+ 8D0C 47               ld b,a
  42+ 8D0D 3A 8A 88         ld a,(Columns)
  43+ 8D10 B8               cp b
  44+ 8D11 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8D12
  46+ 8D12              ; ----- ----- -----
  47+ 8D12
  48+ 8D12 3A B7 88         ld a,(Ctrl_0)
  49+ 8D15 CB 77            bit 6,a
  50+ 8D17 20 06            jr nz,14F
  51+ 8D19
  52+ 8D19 3A 90 88         ld a,(Coordenada_y)
  53+ 8D1C FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8D1E D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8D1F
  56+ 8D1F 21 00 80     14 ld hl,Indice_disparo
  57+ 8D22 3A 91 88         ld a,(CTRL_DESPLZ)
  58+ 8D25 4F               ld c,a
  59+ 8D26 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8D28              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8D28              ;                                            ""        ""       "f9", B="1"
  62+ 8D28              ;                                            ""        ""       "fb", B="2"
  63+ 8D28              ;                                            ""        ""       "fb", B="3"
  64+ 8D28 A7               and a
  65+ 8D29 28 10            jr z,1F
  66+ 8D2B E6 01            and 1
  67+ 8D2D C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8D2E
  69+ 8D2E 79               ld a,c
  70+ 8D2F 16 F9            ld d,$f9
  71+ 8D31 23           2 inc hl
  72+ 8D32 23               inc hl
  73+ 8D33 04               inc b
  74+ 8D34 BA               cp d
  75+ 8D35 28 04            jr z,1F
  76+ 8D37 14               inc d
  77+ 8D38 14               inc d
  78+ 8D39 18 F6            jr 2B
  79+ 8D3B
  80+ 8D3B CD A3 8B     1 call Extrae_address
  81+ 8D3E E5               push hl
  82+ 8D3F FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8D41 DD 21 9F 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8D45
  85+ 8D45              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8D45              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8D45
  88+ 8D45 3A B7 88         ld a,(Ctrl_0)
  89+ 8D48 CB 77            bit 6,a
  90+ 8D4A 20 04            jr nz,19F
  91+ 8D4C
  92+ 8D4C AF               xor a
  93+ 8D4D 32 F3 88         ld (Habilita_disparo_entidad),a
  94+ 8D50
  95+ 8D50 3A 9D 88     19 ld a,(Cuad_objeto)
  96+ 8D53 FE 02            cp 2
  97+ 8D55 38 66            jr c,3F
  98+ 8D57 28 64            jr z,3F
  99+ 8D59
 100+ 8D59              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8D59
 102+ 8D59 E6 01            and 1
 103+ 8D5B 28 30            jr z,4F
 104+ 8D5D
 105+ 8D5D              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8D5D              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8D5D              ;
 108+ 8D5D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8D5D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8D5D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8D5D
 112+ 8D5D 2A 8B 88     	ld hl,(Posicion_actual)
 113+ 8D60
 114+ 8D60              ;   Amadeus o entidad ???.
 115+ 8D60
 116+ 8D60 3A B7 88         ld a,(Ctrl_0)
 117+ 8D63 CB 77            bit 6,a
 118+ 8D65 28 0A            jr z,8F
 119+ 8D67
 120+ 8D67              ; 	Dispara Amadeus.
 121+ 8D67
 122+ 8D67 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8D69 CD 1B 94         call PreviousScan
 124+ 8D6C CD 1B 94         call PreviousScan
 125+ 8D6F
 126+ 8D6F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8D6F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8D6F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8D6F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8D6F
 131+ 8D6F 18 11            jr 10F
 132+ 8D71
 133+ 8D71              ; 	Dispara Entidad.
 134+ 8D71
 135+ 8D71 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8D74              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8D74
 138+ 8D74              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8D74              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8D74
 141+ 8D74 C5               push bc
 142+ 8D75 06 10            ld b,16
 143+ 8D77 CD 0C 94     9 call NextScan
 144+ 8D7A 10 FB            djnz 9B
 145+ 8D7C C1               pop bc
 146+ 8D7D CD E7 8D         call Ajusta_disparo_parte_izquierda
 147+ 8D80 18 06            jr 17F
 148+ 8D82
 149+ 8D82              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8D82              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8D82              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8D82              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8D82
 154+ 8D82 CD E7 8D     10 call Ajusta_disparo_parte_izquierda
 155+ 8D85 CD 5C 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8D88              ;                                                      ; _al generar el disparo.
 157+ 8D88
 158+ 8D88              ; 	LLegados a este punto tendremos:
 159+ 8D88              ;
 160+ 8D88              ;       Puntero_objeto_disparo en IY.
 161+ 8D88              ;       Rutinas_de_impresion en IX.
 162+ 8D88              ;       Puntero_de_impresion en HL.
 163+ 8D88              ;       Impacto/Dirección en BC.
 164+ 8D88
 165+ 8D88 CD EF 8D     17 call Almacena_disparo
 166+ 8D8B 18 52            jr 6F                                             ; RET.
 167+ 8D8D
 168+ 8D8D              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8D8D              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8D8D              ;
 171+ 8D8D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8D8D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8D8D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8D8D
 175+ 8D8D 2A 8B 88     4 ld hl,(Posicion_actual)
 176+ 8D90
 177+ 8D90              ;   Amadeus o entidad ???.
 178+ 8D90
 179+ 8D90 3A B7 88         ld a,(Ctrl_0)
 180+ 8D93 CB 77            bit 6,a
 181+ 8D95 28 0A            jr z,11F
 182+ 8D97
 183+ 8D97              ; 	Dispara Amadeus.
 184+ 8D97
 185+ 8D97 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8D99 CD 1B 94         call PreviousScan
 187+ 8D9C CD 1B 94         call PreviousScan
 188+ 8D9F
 189+ 8D9F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8D9F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8D9F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8D9F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8D9F
 194+ 8D9F 18 11            jr 13F
 195+ 8DA1
 196+ 8DA1              ; 	Dispara Entidad.
 197+ 8DA1
 198+ 8DA1 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8DA4              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8DA4
 201+ 8DA4              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8DA4              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8DA4
 204+ 8DA4 C5               push bc
 205+ 8DA5 06 10            ld b,16
 206+ 8DA7 CD 0C 94     12 call NextScan
 207+ 8DAA 10 FB            djnz 12B
 208+ 8DAC C1               pop bc
 209+ 8DAD
 210+ 8DAD CD E0 8D         call Ajusta_disparo_parte_derecha
 211+ 8DB0 18 06            jr 18F
 212+ 8DB2
 213+ 8DB2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8DB2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8DB2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8DB2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8DB2
 218+ 8DB2 CD E0 8D     13 call Ajusta_disparo_parte_derecha
 219+ 8DB5 CD 5C 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8DB8              ;                                                       ; _al generar el disparo.
 221+ 8DB8
 222+ 8DB8              ; LLegados a este punto tendremos:
 223+ 8DB8              ;
 224+ 8DB8              ;       Puntero_objeto_disparo en IY.
 225+ 8DB8              ;       Rutinas_de_impresion en IX.
 226+ 8DB8              ;       Puntero_de_impresion en HL.
 227+ 8DB8              ;       Impacto/Dirección en BC.
 228+ 8DB8
 229+ 8DB8 CD EF 8D     18 call Almacena_disparo
 230+ 8DBB 18 22            jr 6F                                               ; RET.
 231+ 8DBD
 232+ 8DBD              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8DBD
 234+ 8DBD 28 11        3 jr z,5F
 235+ 8DBF
 236+ 8DBF              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8DBF              ;
 238+ 8DBF              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8DBF              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8DBF              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8DBF              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8DBF
 243+ 8DBF              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8DBF              ;	   ""        ""       "f9", B="1"
 245+ 8DBF              ;	   ""        ""       "fb", B="2"
 246+ 8DBF              ; 	   ""        ""       "fb", B="3"
 247+ 8DBF
 248+ 8DBF 2A 8B 88     	ld hl,(Posicion_actual)
 249+ 8DC2 CD 0C 94     	call NextScan
 250+ 8DC5
 251+ 8DC5              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8DC5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8DC5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8DC5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8DC5
 256+ 8DC5 CD E7 8D         call Ajusta_disparo_parte_izquierda
 257+ 8DC8
 258+ 8DC8              ; 	No se produce impacto. B="$80"
 259+ 8DC8              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8DC8
 261+ 8DC8 01 80 80         ld bc,$8080
 262+ 8DCB
 263+ 8DCB              ; 	LLegados a este punto tendremos:
 264+ 8DCB              ;
 265+ 8DCB              ;       Puntero_objeto_disparo en IY.
 266+ 8DCB              ;       Rutinas_de_impresion en IX.
 267+ 8DCB              ;       Puntero_de_impresion en HL.
 268+ 8DCB              ;       Impacto/Dirección en BC.
 269+ 8DCB
 270+ 8DCB CD EF 8D         call Almacena_disparo
 271+ 8DCE 18 0F            jr 6F                                           ; RET.
 272+ 8DD0
 273+ 8DD0              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8DD0              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8DD0              ;
 276+ 8DD0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8DD0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8DD0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8DD0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8DD0
 281+ 8DD0 2A 8B 88     5 ld hl,(Posicion_actual)
 282+ 8DD3 CD 0C 94     	call NextScan
 283+ 8DD6
 284+ 8DD6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8DD6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8DD6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8DD6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8DD6
 289+ 8DD6 CD E0 8D         call Ajusta_disparo_parte_derecha
 290+ 8DD9
 291+ 8DD9              ; 	No se produce impacto. B="$80"
 292+ 8DD9              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8DD9
 294+ 8DD9 01 80 80     15 ld bc,$8080
 295+ 8DDC
 296+ 8DDC              ; 	LLegados a este punto tendremos:
 297+ 8DDC              ;
 298+ 8DDC              ;       Puntero_objeto_disparo en IY.
 299+ 8DDC              ;       Rutinas_de_impresion en IX.
 300+ 8DDC              ;       Puntero_de_impresion en HL.
 301+ 8DDC              ;       Impacto/Dirección en BC.
 302+ 8DDC
 303+ 8DDC CD EF 8D         call Almacena_disparo
 304+ 8DDF
 305+ 8DDF C9           6 ret
 306+ 8DE0
 307+ 8DE0              ; ----------------------------------------------------------------
 308+ 8DE0              ;
 309+ 8DE0              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8DE0              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8DE0              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8DE0
 313+ 8DE0 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8DE1 FE 02            cp 2
 315+ 8DE3 38 01            jr c,1F
 316+ 8DE5 23               inc hl
 317+ 8DE6 C9           1 ret
 318+ 8DE7
 319+ 8DE7 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8DE8 FE 01        	cp 1
 321+ 8DEA 20 01        	jr nz,1F
 322+ 8DEC 2B           	dec hl
 323+ 8DED 2B           1 dec hl
 324+ 8DEE C9               ret
 325+ 8DEF
 326+ 8DEF              ; ----------------------------------------------------------------
 327+ 8DEF              ;
 328+ 8DEF              ;   25/02/23
 329+ 8DEF              ;
 330+ 8DEF              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8DEF              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8DEF              ;
 333+ 8DEF              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8DEF              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8DEF
 336+ 8DEF              Almacena_disparo
 337+ 8DEF
 338+ 8DEF E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8DF0 F1               pop af
 340+ 8DF1 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8DF2
 342+ 8DF2 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8DF3 E6 01            and 1
 344+ 8DF5 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8DF7              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8DF7              ; 	Dispara AMADEUS.
 347+ 8DF7
 348+ 8DF7              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8DF7              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8DF7              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8DF7              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8DF7
 353+ 8DF7 C5               push bc
 354+ 8DF8 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8DFB 2A E0 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8DFE A7               and a
 357+ 8DFF ED 42            sbc hl,bc
 358+ 8E01 CC 6C 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8E04 C1               pop bc
 360+ 8E05 28 54            jr z,4F
 361+ 8E07
 362+ 8E07 2A E0 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8E0A 23               inc hl
 364+ 8E0B 23               inc hl
 365+ 8E0C 22 E0 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8E0F              ;                                                   ; _ Disparo_(+1).
 367+ 8E0F 18 18            jr 2F
 368+ 8E11
 369+ 8E11              ; Dispara una entidad.
 370+ 8E11
 371+ 8E11 C5           1 push bc
 372+ 8E12 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8E15 2A DE 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8E18 A7               and a
 375+ 8E19 ED 42            sbc hl,bc
 376+ 8E1B CC 65 8B         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8E1E C1               pop bc
 378+ 8E1F 28 3A            jr z,4F
 379+ 8E21
 380+ 8E21 2A DE 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8E24 23               inc hl
 382+ 8E25 23               inc hl
 383+ 8E26 22 DE 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8E29              ;                                                   ; _ Disparo_(+1).
 385+ 8E29 CD A3 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8E2C              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8E2C              ;
 388+ 8E2C              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8E2C              ;                                                     Rutinas_de_impresion en IX.
 390+ 8E2C              ;                                                     Puntero_de_impresion en HL.
 391+ 8E2C              ;                                                     Impacto/Dirección en BC.
 392+ 8E2C
 393+ 8E2C 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8E2D 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8E2E 23               inc hl                                          ; _ al siguiente.
 396+ 8E2F A7               and a
 397+ 8E30 20 C0            jr nz,3B
 398+ 8E32
 399+ 8E32 08               ex af,af
 400+ 8E33 ED 73 D5 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8E37 F9               ld sp,hl
 402+ 8E38
 403+ 8E38 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8E3A F5               push af                                         ; Puntero de impresión.
 405+ 8E3B FD E5            push iy                                         ; Puntero objeto.
 406+ 8E3D C5               push bc                                         ; Control.
 407+ 8E3E
 408+ 8E3E ED 7B D5 88      ld sp,(Stack)
 409+ 8E42
 410+ 8E42              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8E42
 412+ 8E42 21 C6 88     	ld hl,Ctrl_1
 413+ 8E45 CB C6        	set 0,(hl)
 414+ 8E47
 415+ 8E47 DD E5        	push ix
 416+ 8E49 E1               pop hl
 417+ 8E4A F5               push af
 418+ 8E4B DD E1            pop ix
 419+ 8E4D
 420+ 8E4D CD A0 7F     	call Guarda_foto_registros
 421+ 8E50
 422+ 8E50 21 C6 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8E53 CB 86        	res 0,(hl)
 424+ 8E55
 425+ 8E55              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8E55              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8E55
 428+ 8E55 CD 6C 8B         call Inicia_Puntero_Disparo_Amadeus
 429+ 8E58 CD 65 8B         call Inicia_Puntero_Disparo_Entidades
 430+ 8E5B
 431+ 8E5B C9           4 ret
 432+ 8E5C
 433+ 8E5C              ; ----------------------------------------------------------------
 434+ 8E5C              ;
 435+ 8E5C              ;   4/3/23
 436+ 8E5C              ;
 437+ 8E5C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8E5C              ;   _ al generarse el disparo.
 439+ 8E5C              ;
 440+ 8E5C              ;       "$80" ..... No se produce colisión.
 441+ 8E5C              ;       "$81" ..... Se produce colisión.
 442+ 8E5C
 443+ 8E5C              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8E5C              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8E5C
 446+ 8E5C
 447+ 8E5C FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8E5E E5               push hl                                        ; Puntero de impresión.
 449+ 8E5F
 450+ 8E5F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8E61 CD 7D 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8E64
 453+ 8E64 7B               ld a,e
 454+ 8E65 E6 01            and 1
 455+ 8E67 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8E69
 457+ 8E69 E1               pop hl
 458+ 8E6A E5               push hl
 459+ 8E6B CD 0C 94         call NextScan
 460+ 8E6E
 461+ 8E6E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8E6F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8E71 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8E73              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8E73 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8E75 CD 7D 8E         call Bucle_2
 467+ 8E78
 468+ 8E78 43           2 ld b,e
 469+ 8E79 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8E7A FD E1            pop iy
 471+ 8E7C C9               ret
 472+ 8E7D
 473+ 8E7D               ; ---------- ----------
 474+ 8E7D
 475+ 8E7D 06 02        Bucle_2 ld b,2
 476+ 8E7F FD 7E 00     2 ld a,(iy)
 477+ 8E82 A6               and (hl)
 478+ 8E83 28 02            jr z,1F
 479+ 8E85 1E 81            ld e,$81
 480+ 8E87 23           1 inc hl
 481+ 8E88 FD 23            inc iy
 482+ 8E8A 10 F3            djnz 2B
 483+ 8E8C C9               ret
 484+ 8E8D
 485+ 8E8D              ; -------------------------------------------------------------------------------------------------------------
 486+ 8E8D              ;
 487+ 8E8D              ;   11/04/23
 488+ 8E8D              ;
 489+ 8E8D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8E8D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8E8D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8E8D              ;
 493+ 8E8D              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8E8D
 495+ 8E8D              Compara_coordenadas_X
 496+ 8E8D
 497+ 8E8D              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8E8D              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8E8D
 500+ 8E8D              ; Preparamos registros:
 501+ 8E8D
 502+ 8E8D 21 8F 88         ld hl,Filas+6
 503+ 8E90 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8E91 23               inc hl
 505+ 8E92 23               inc hl
 506+ 8E93 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8E94 43               ld b,e
 508+ 8E95 21 9D 88         ld hl,Filas+20
 509+ 8E98 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8E99 21 EA 88         ld hl,Coordenadas_X_Entidad
 511+ 8E9C CD AD 90         call Guarda_coordenadas_X
 512+ 8E9F
 513+ 8E9F              ; Preparamos registros:
 514+ 8E9F
 515+ 8E9F 21 86 84         ld hl,Amadeus_db+6
 516+ 8EA2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8EA3 23               inc hl
 518+ 8EA4 23               inc hl
 519+ 8EA5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8EA6 7B               ld a,e
 521+ 8EA7 08               ex af,af'
 522+ 8EA8 21 94 84         ld hl,Amadeus_db+20
 523+ 8EAB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8EAC 21 E7 88         ld hl,Coordenadas_X_Amadeus
 525+ 8EAF CD AD 90         call Guarda_coordenadas_X
 526+ 8EB2
 527+ 8EB2              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8EB2              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8EB2
 530+ 8EB2 04               inc b
 531+ 8EB3 05               dec b
 532+ 8EB4 28 04            jr z,1F
 533+ 8EB6 06 03            ld b,3
 534+ 8EB8 18 02            jr 2F
 535+ 8EBA 06 02        1 ld b,2
 536+ 8EBC 08           2 ex af,af'
 537+ 8EBD 3C               inc a
 538+ 8EBE 3D               dec a
 539+ 8EBF 28 04            jr z,5F
 540+ 8EC1 0E 03            ld c,3
 541+ 8EC3 18 02            jr 6F
 542+ 8EC5 0E 02        5 ld c,2
 543+ 8EC7 79           6 ld a,c
 544+ 8EC8 08               ex af,af'
 545+ 8EC9 11 EA 88         ld de,Coordenadas_X_Entidad
 546+ 8ECC 1A           4 ld a,(de)
 547+ 8ECD 21 E7 88         ld hl,Coordenadas_X_Amadeus
 548+ 8ED0 BE           3 cp (hl)
 549+ 8ED1 28 0E            jr z,7F
 550+ 8ED3 23               inc hl
 551+ 8ED4 0D               dec c
 552+ 8ED5 20 F9            jr nz,3B
 553+ 8ED7 13               inc de
 554+ 8ED8 08               ex af,af'
 555+ 8ED9 4F               ld c,a
 556+ 8EDA 08               ex af,af'
 557+ 8EDB 10 EF            djnz 4B
 558+ 8EDD
 559+ 8EDD              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8EDD
 561+ 8EDD CD EC 90     8 call Limpia_Coordenadas_X
 562+ 8EE0 C9               ret
 563+ 8EE1
 564+ 8EE1              7
 565+ 8EE1 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8EE3 32 A2 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8EE6 21 E2 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8EE9 CB D6            set 2,(hl)
 569+ 8EEB 18 F0            jr 8B
 570+ 8EED
 571+ 8EED              ; -----------------------------------------------------------------------
 572+ 8EED              ;
 573+ 8EED              ;   17/04/23
 574+ 8EED              ;
 575+ 8EED
 576+ 8EED              Detecta_colision_nave_entidad
 577+ 8EED
 578+ 8EED              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8EED
 580+ 8EED 2A 8B 88         ld hl,(Posicion_actual)
 581+ 8EF0 CD 71 93         call Calcula_puntero_de_impresion
 582+ 8EF3
 583+ 8EF3              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8EF3              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8EF3
 586+ 8EF3 DD E5            push ix
 587+ 8EF5 E1               pop hl
 588+ 8EF6 E5               push hl
 589+ 8EF7
 590+ 8EF7              ; ----- ----- -----
 591+ 8EF7 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8EF9 06 0A            ld b,10
 593+ 8EFB CD 2B 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8EFE 7B               ld a,e
 595+ 8EFF FE 05            cp 5
 596+ 8F01 38 0E            jr c,3F
 597+ 8F03
 598+ 8F03              ; LLegados a este punto:
 599+ 8F03              ;
 600+ 8F03              ;   HAY COLISIÓN !!!!!.
 601+ 8F03              ;
 602+ 8F03              ;   .db (Impacto) de Amadeus a "1".
 603+ 8F03              ;   SET el bit3 de (Impacto2).
 604+ 8F03              ;
 605+ 8F03              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8F03
 607+ 8F03 21 99 84         ld hl,Amadeus_db+25
 608+ 8F06 36 01            ld (hl),1
 609+ 8F08 21 E2 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8F0B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8F0D CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8F0F 18 18            jr 1F
 613+ 8F11
 614+ 8F11              ; -----
 615+ 8F11
 616+ 8F11 E1           3 pop hl
 617+ 8F12 CD 0C 94         call NextScan
 618+ 8F15 E5               push hl
 619+ 8F16 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8F17 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8F19 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8F1B 30 0C            jr nc,1F
 623+ 8F1D              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8F1D 10 DC            djnz 2B
 625+ 8F1F
 626+ 8F1F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8F1F
 628+ 8F1F              ; LLegados a este punto:
 629+ 8F1F              ;
 630+ 8F1F              ;   NO HAY COLISIÓN !!!!!.
 631+ 8F1F              ;
 632+ 8F1F              ;   .db (Impacto) de Amadeus a "0".
 633+ 8F1F              ;   RES el bit2 de (Impacto2).
 634+ 8F1F              ;
 635+ 8F1F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8F1F              ;   Lo colocamos a "0".
 637+ 8F1F
 638+ 8F1F 21 E2 88         ld hl,Impacto2
 639+ 8F22 CB 96            res 2,(hl)
 640+ 8F24 2A E3 88         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8F27 36 00            ld (hl),0
 642+ 8F29
 643+ 8F29 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8F2A C9               ret
 645+ 8F2B
 646+ 8F2B               ; ---------- ----------
 647+ 8F2B
 648+ 8F2B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8F2C 3A 8A 88         ld a,(Columns)
 650+ 8F2F 47               ld b,a
 651+ 8F30 FD 7E 00     2 ld a,(iy)
 652+ 8F33 BE               cp (hl)
 653+ 8F34 28 01            jr z,1F
 654+ 8F36
 655+ 8F36 1C               inc e
 656+ 8F37
 657+ 8F37 23           1 inc hl
 658+ 8F38 FD 23            inc iy
 659+ 8F3A 10 F4            djnz 2B
 660+ 8F3C C1               pop bc
 661+ 8F3D C9               ret
 662+ 8F3E
 663+ 8F3E              ; -------------------------------------------------------------------------------------------------------------
 664+ 8F3E              ;
 665+ 8F3E              ;   13/03/23
 666+ 8F3E              ;
 667+ 8F3E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8F3E              ;
 669+ 8F3E              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8F3E
 671+ 8F3E 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8F41 7E               ld a,(hl)
 673+ 8F42 A7               and a
 674+ 8F43 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8F44
 676+ 8F44 44               ld b,h
 677+ 8F45 4D               ld c,l
 678+ 8F46 2A DB 88         ld hl,(Stack_snapshot_disparos)
 679+ 8F49 E5               push hl
 680+ 8F4A A7               and a
 681+ 8F4B ED 42            sbc hl,bc
 682+ 8F4D E5               push hl
 683+ 8F4E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8F4F
 685+ 8F4F E1               pop hl
 686+ 8F50 54               ld d,h
 687+ 8F51 5D               ld e,l
 688+ 8F52 1B               dec de
 689+ 8F53 ED B8            lddr                                                ; Limpiamos.
 690+ 8F55
 691+ 8F55 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8F58 22 DB 88         ld (Stack_snapshot_disparos),hl
 693+ 8F5B
 694+ 8F5B C9               ret
 695+ 8F5C
 696+ 8F5C              ; -------------------------------------------------------------------------------------------------------------
 697+ 8F5C              ;
 698+ 8F5C              ;   28/03/23
 699+ 8F5C              ;
 700+ 8F5C
 701+ 8F5C 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8F5F 2A E0 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8F62
 704+ 8F62 CD A3 8B     2 call Extrae_address
 705+ 8F65 7E               ld a,(hl)
 706+ 8F66 A7               and a
 707+ 8F67 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8F69
 709+ 8F69              ; ----- ----- ----- ----- ----- -----
 710+ 8F69
 711+ 8F69 C5               push bc
 712+ 8F6A CD 26 90         call foto_disparo_a_borrar
 713+ 8F6D
 714+ 8F6D              ; Existe colisión con este disparo???
 715+ 8F6D
 716+ 8F6D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8F6E 7E               ld a,(hl)
 718+ 8F6F 2B               dec hl
 719+ 8F70 E6 01            and 1
 720+ 8F72 28 1D            jr z,9F
 721+ 8F74
 722+ 8F74              ;   En este punto:
 723+ 8F74              ;
 724+ 8F74              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8F74              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8F74              ;   _con la entidad).
 727+ 8F74              ;
 728+ 8F74              ;   Disparo_2A defw 0                                ; Control.
 729+ 8F74              ;    defw 0                                          ; Puntero objeto.
 730+ 8F74              ;    defw 0                                          ; Puntero de impresión.
 731+ 8F74              ;    defw 0                                          ; Rutina de impresión.
 732+ 8F74
 733+ 8F74 E5               push hl
 734+ 8F75
 735+ 8F75 06 04            ld b,4
 736+ 8F77 23           19 inc hl
 737+ 8F78 10 FD            djnz 19B
 738+ 8F7A
 739+ 8F7A CD A3 8B         call Extrae_address
 740+ 8F7D CD 37 9A         call Genera_coordenadas_disparo
 741+ 8F80
 742+ 8F80              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8F80
 744+ 8F80 21 E5 88         ld hl,Coordenadas_disparo_certero
 745+ 8F83 72               ld (hl),d
 746+ 8F84 23               inc hl
 747+ 8F85 73               ld (hl),e
 748+ 8F86
 749+ 8F86              ; Elimino el disparo de la base de datos.
 750+ 8F86
 751+ 8F86 E1               pop hl
 752+ 8F87 CD A2 90         call Elimina_disparo_de_base_de_datos
 753+ 8F8A 21 E2 88         ld hl,Impacto2
 754+ 8F8D CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8F8F
 756+ 8F8F 18 06            jr 11F
 757+ 8F91
 758+ 8F91 CD 4F 90     9 call Mueve_disparo
 759+ 8F94 CD 26 90         call foto_disparo_a_borrar
 760+ 8F97
 761+ 8F97 C1           11 pop bc
 762+ 8F98 18 04            jr 7F
 763+ 8F9A
 764+ 8F9A              ; ----- ----- ----- ----- ----- -----
 765+ 8F9A
 766+ 8F9A ED 42        1 sbc hl,bc
 767+ 8F9C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8F9E 2A E0 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8FA1 23               inc hl
 770+ 8FA2 23               inc hl
 771+ 8FA3 22 E0 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8FA6 18 BA            jr 2B
 773+ 8FA8 CD 6C 8B     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8FAB
 775+ 8FAB 01 66 84         ld bc,Disparo_11
 776+ 8FAE 2A DE 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8FB1
 778+ 8FB1 CD A3 8B     5 call Extrae_address
 779+ 8FB4 7E               ld a,(hl)
 780+ 8FB5 A7               and a
 781+ 8FB6 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8FB8
 783+ 8FB8              ; ----- ----- ----- ----- ----- -----
 784+ 8FB8
 785+ 8FB8 C5               push bc
 786+ 8FB9 CD 26 90         call foto_disparo_a_borrar
 787+ 8FBC
 788+ 8FBC              ; Existe colisión con este disparo???
 789+ 8FBC
 790+ 8FBC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8FBD 7E               ld a,(hl)
 792+ 8FBE 2B               dec hl
 793+ 8FBF E6 01            and 1
 794+ 8FC1 28 48            jr z,10F
 795+ 8FC3
 796+ 8FC3              ; La colisión se produce con Amadeus???
 797+ 8FC3              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8FC3
 799+ 8FC3 E5               push hl
 800+ 8FC4
 801+ 8FC4 06 04            ld b,4
 802+ 8FC6 23           16 inc hl
 803+ 8FC7 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8FC9 CD A3 8B         call Extrae_address
 805+ 8FCC CD 37 9A         call Genera_coordenadas_disparo
 806+ 8FCF
 807+ 8FCF 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8FD0 FE 16            cp $16
 809+ 8FD2 38 22            jr c,15F
 810+ 8FD4
 811+ 8FD4              ; (Colisiones en filas 16 y 17).
 812+ 8FD4
 813+ 8FD4 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8FD5
 815+ 8FD5              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8FD5
 817+ 8FD5 21 86 84         ld hl,Amadeus_db+6
 818+ 8FD8 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8FD9 23               inc hl
 820+ 8FDA 23               inc hl
 821+ 8FDB 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8FDC 21 94 84         ld hl,Amadeus_db+20
 823+ 8FDF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8FE0 21 E7 88         ld hl,Coordenadas_X_Amadeus
 825+ 8FE3 CD AD 90         call Guarda_coordenadas_X
 826+ 8FE6
 827+ 8FE6 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8FE7
 829+ 8FE7              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8FE7
 831+ 8FE7 06 03            ld b,3
 832+ 8FE9 21 E7 88         ld hl,Coordenadas_X_Amadeus
 833+ 8FEC 7E           18 ld a,(hl)
 834+ 8FED BA               cp d
 835+ 8FEE 20 03            jr nz,17F
 836+ 8FF0
 837+ 8FF0              ; Colisión Amadeus !!!!!!!!!!
 838+ 8FF0
 839+ 8FF0 E1               pop hl
 840+ 8FF1 18 09            jr 14F
 841+ 8FF3
 842+ 8FF3 23           17 inc hl
 843+ 8FF4 10 F6            djnz 18B
 844+ 8FF6
 845+ 8FF6              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8FF6              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8FF6
 848+ 8FF6 E1           15 pop hl
 849+ 8FF7 23               inc hl
 850+ 8FF8 35               dec (hl)
 851+ 8FF9 2B               dec hl
 852+ 8FFA 18 0F            jr 10F
 853+ 8FFC
 854+ 8FFC              ; -----------------------debug
 855+ 8FFC
 856+ 8FFC              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8FFC              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8FFC
 859+ 8FFC E5           14 push hl
 860+ 8FFD CD A2 90         call Elimina_disparo_de_base_de_datos
 861+ 9000 21 E2 88         ld hl,Impacto2
 862+ 9003 CB CE            set 1,(hl)
 863+ 9005 CD EC 90         call Limpia_Coordenadas_X
 864+ 9008
 865+ 9008 E1               pop hl
 866+ 9009 18 06            jr 12F
 867+ 900B
 868+ 900B CD 4F 90     10 call Mueve_disparo
 869+ 900E CD 26 90         call foto_disparo_a_borrar
 870+ 9011 C1           12 pop bc
 871+ 9012
 872+ 9012 18 04            jr 8F
 873+ 9014
 874+ 9014              ; ----- ----- ----- ----- ----- -----
 875+ 9014
 876+ 9014 ED 42        4 sbc hl,bc
 877+ 9016 28 0A            jr z,6F
 878+ 9018
 879+ 9018 2A DE 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 901B 23               inc hl
 881+ 901C 23               inc hl
 882+ 901D 22 DE 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9020 18 8F            jr 5B
 884+ 9022
 885+ 9022 CD 65 8B     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9025 C9               ret
 887+ 9026
 888+ 9026              ; ------------------------------------------------------------------
 889+ 9026
 890+ 9026              foto_disparo_a_borrar
 891+ 9026
 892+ 9026 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9027 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9028 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9029
 896+ 9029 E5               push hl
 897+ 902A 23               inc hl
 898+ 902B 23               inc hl
 899+ 902C ED 73 D5 88      ld (Stack),sp
 900+ 9030 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9031 FD E1            pop iy
 902+ 9033 DD E1            pop ix
 903+ 9035 E1               pop hl
 904+ 9036 ED 7B D5 88      ld sp,(Stack)
 905+ 903A 3A C6 88         ld a,(Ctrl_1)
 906+ 903D CB C7            set 0,a
 907+ 903F 32 C6 88         ld (Ctrl_1),a
 908+ 9042 CD A0 7F         call Guarda_foto_registros
 909+ 9045 3A C6 88         ld a,(Ctrl_1)
 910+ 9048 CB 87            res 0,a
 911+ 904A 32 C6 88         ld (Ctrl_1),a
 912+ 904D E1               pop hl
 913+ 904E C9               ret
 914+ 904F
 915+ 904F E5           Mueve_disparo push hl
 916+ 9050 7E               ld a,(hl)
 917+ 9051 06 04            ld b,4
 918+ 9053 23           1 inc hl
 919+ 9054 10 FD            djnz 1B
 920+ 9056
 921+ 9056              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9056
 923+ 9056 CD A3 8B         call Extrae_address
 924+ 9059
 925+ 9059 E6 01            and 1
 926+ 905B 28 2B            jr z,2F
 927+ 905D
 928+ 905D              ; Disparo hacia arriba, (Amadeus).
 929+ 905D
 930+ 905D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 905D              ; _ de la dificultad.
 932+ 905D
 933+ 905D CD 1B 94         call PreviousScan
 934+ 9060 CD 1B 94         call PreviousScan
 935+ 9063 CD 1B 94         call PreviousScan
 936+ 9066
 937+ 9066              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9066
 939+ 9066 7C               ld a,h
 940+ 9067 FE 40            cp $40
 941+ 9069 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 906B
 943+ 906B              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 906B
 945+ 906B EB               ex de,hl
 946+ 906C 06 04            ld b,4
 947+ 906E 2B           6 dec hl
 948+ 906F 10 FD            djnz 6B
 949+ 9071
 950+ 9071 CD A2 90         call Elimina_disparo_de_base_de_datos
 951+ 9074 E1               pop hl
 952+ 9075 18 10            jr 7F
 953+ 9077
 954+ 9077              ; Se ha desplazado la bala, compruebo colisión.
 955+ 9077
 956+ 9077 D5           3 push de
 957+ 9078 C5               push bc
 958+ 9079
 959+ 9079 CD 5C 8E         call Comprueba_Colision
 960+ 907C
 961+ 907C              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 907C
 963+ 907C 78               ld a,b
 964+ 907D
 965+ 907D C1               pop bc
 966+ 907E D1               pop de
 967+ 907F
 968+ 907F EB               ex de,hl
 969+ 9080
 970+ 9080 73               ld (hl),e
 971+ 9081 23               inc hl
 972+ 9082 72               ld (hl),d
 973+ 9083
 974+ 9083 E1           4 pop hl
 975+ 9084 23               inc hl
 976+ 9085 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 9086 2B               dec hl
 978+ 9087 C9           7 ret
 979+ 9088
 980+ 9088              ; Disparo hacia abajo, (Entidad).
 981+ 9088
 982+ 9088              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 9088              ; _ de la dificultad.
 984+ 9088
 985+ 9088 CD 0C 94     2 call NextScan
 986+ 908B CD 0C 94         call NextScan
 987+ 908E CD 0C 94         call NextScan
 988+ 9091
 989+ 9091              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 9091
 991+ 9091 7C               ld a,h
 992+ 9092 FE 58            cp $58
 993+ 9094 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 9096
 995+ 9096 EB               ex de,hl
 996+ 9097 06 04            ld b,4
 997+ 9099 2B           5 dec hl
 998+ 909A 10 FD            djnz 5B
 999+ 909C
1000+ 909C CD A2 90         call Elimina_disparo_de_base_de_datos
1001+ 909F E1               pop hl
1002+ 90A0 18 E5            jr 7B
1003+ 90A2
1004+ 90A2              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 90A2
1006+ 90A2 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 90A5 AF               xor a
1008+ 90A6 77               ld (hl),a
1009+ 90A7 54               ld d,h
1010+ 90A8 5D               ld e,l
1011+ 90A9 13               inc de
1012+ 90AA ED B0            ldir
1013+ 90AC C9               ret
1014+ 90AD
1015+ 90AD              ; -----------------------------------------------------------------
1016+ 90AD              ;
1017+ 90AD              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 90AD              ;
1019+ 90AD              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 90AD              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 90AD              ;
1022+ 90AD              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 90AD              ;
1024+ 90AD              ;   INPUTS:
1025+ 90AD              ;
1026+ 90AD              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 90AD              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 90AD              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 90AD
1030+ 90AD              ;   MODIFICA: A, HL, DE y C
1031+ 90AD
1032+ 90AD 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 90AE 79               ld a,c
1034+ 90AF E6 01            and 1
1035+ 90B1 20 03            jr nz,1F
1036+ 90B3 14               inc d
1037+ 90B4 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 90B6
1039+ 90B6              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 90B6              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 90B6
1042+ 90B6 15           1 dec d
1043+ 90B7 23           2 inc hl
1044+ 90B8 72               ld (hl),d
1045+ 90B9
1046+ 90B9 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 90BA A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 90BB C8               ret z
1049+ 90BC
1050+ 90BC AF               xor a
1051+ 90BD 5F               ld e,a
1052+ 90BE 18 ED            jr Guarda_coordenadas_X
1053+ 90C0
1054+ 90C0              ; -----------------------------------------------------------------
1055+ 90C0              ;
1056+ 90C0              ;   12/04/23
1057+ 90C0              ;
1058+ 90C0
1059+ 90C0 3A E2 88     Selector_de_impactos ld a,(Impacto2)
1060+ 90C3 A7               and a
1061+ 90C4 C8               ret z
1062+ 90C5
1063+ 90C5 FE 04            cp 4
1064+ 90C7 20 09            jr nz,1F
1065+ 90C9
1066+ 90C9
1067+ 90C9              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 90C9
1069+ 90C9 CD ED 8E         call Detecta_colision_nave_entidad
1070+ 90CC
1071+ 90CC 21 E2 88         ld hl,Impacto2
1072+ 90CF CB 5E            bit 3,(hl)
1073+ 90D1 C0               ret nz                                               ; Existe colisión, RET.
1074+ 90D2
1075+ 90D2              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 90D2              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 90D2
1078+ 90D2 21 E2 88     1 ld hl,Impacto2
1079+ 90D5 CB 4E            bit 1,(hl)
1080+ 90D7 28 07            jr z,2F
1081+ 90D9
1082+ 90D9 21 99 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 90DC 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 90DE 18 0B            jr 3F
1085+ 90E0
1086+ 90E0 21 E2 88     2 ld hl,Impacto2
1087+ 90E3 CB 46            bit 0,(hl)
1088+ 90E5 C8               ret z
1089+ 90E6
1090+ 90E6              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 90E6
1092+ 90E6 21 C6 88         ld hl,Ctrl_1
1093+ 90E9 CB D6            set 2,(hl)
1094+ 90EB
1095+ 90EB C9           3 ret
1096+ 90EC
1097+ 90EC              ; -----------------------------------------------------------------
1098+ 90EC              ;
1099+ 90EC              ;   16/04/23
1100+ 90EC              ;
1101+ 90EC
1102+ 90EC AF           Limpia_Coordenadas_X xor a
1103+ 90ED 06 06            ld b,6
1104+ 90EF 21 E7 88         ld hl,Coordenadas_X_Amadeus
1105+ 90F2 77           1 ld (hl),a
1106+ 90F3 23               inc hl
1107+ 90F4 10 FC            djnz 1B
1108+ 90F6 C9               ret
1109+ 90F7
1110+ 90F7              ; -----------------------------------------------------------------
1111+ 90F7              ;
1112+ 90F7              ;   25/04/23
1113+ 90F7              ;
1114+ 90F7
1115+ 90F7              Determina_resultado_comparativa
1116+ 90F7
1117+ 90F7              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 90F7              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 90F7              ;
1120+ 90F7              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 90F7              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 90F7              ;
1123+ 90F7              ;   SBC HL,DE
1124+ 90F7
1125+ 90F7 7C               ld a,h
1126+ 90F8 06 00            ld b,0
1127+ 90FA
1128+ 90FA CD 0A 91         call Compara_cositas
1129+ 90FD
1130+ 90FD 04               inc b
1131+ 90FE 05               dec b
1132+ 90FF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 9100
1134+ 9100 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 9101 06 00            ld b,0
1136+ 9103
1137+ 9103 CD 0A 91         call Compara_cositas
1138+ 9106 18 01            jr 2F
1139+ 9108
1140+ 9108 04           1 inc b
1141+ 9109 C9           2 ret
1142+ 910A
1143+ 910A A7           Compara_cositas and a
1144+ 910B 28 17            jr z,1F
1145+ 910D
1146+ 910D FE FD            cp $fd
1147+ 910F 28 13            jr z,1F
1148+ 9111 FE FE            cp $fe
1149+ 9113 28 0F            jr z,1F
1150+ 9115 FE FF            cp $ff
1151+ 9117 28 0B            jr z,1F
1152+ 9119 FE 01            cp $01
1153+ 911B 28 07            jr z,1F
1154+ 911D FE 02            cp $02
1155+ 911F 28 03            jr z,1F
1156+ 9121 FE 03            cp $03
1157+ 9123 C0               ret nz
1158+ 9124
1159+ 9124 04           1 inc b
1160+ 9125 C9               ret
1161+ 9126
# file closed: Disparo.asm
1189  9126              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9126              ; ******************************************************************************************************************************************************************************************
   2+ 9126              ;
   3+ 9126              ; 01/23
   4+ 9126              ;
   5+ 9126              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9126
   7+ 9126 CD 00 94     Draw call Prepara_draw
   8+ 9129 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 912A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 912B 28 05        	jr z,2F
  11+ 912D
  12+ 912D 3A 9D 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9130 18 0C        	jr 1F
  14+ 9132 2A 9B 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9135 22 8B 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9138 CD C7 92     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 913B              ;													; _la esquina superior izquierda de la pantalla.
  18+ 913B CD 5A 9B     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 913E 3A B7 88     1 ld a,(Ctrl_0)
  20+ 9141 CB 6F        	bit 5,a
  21+ 9143 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9145
  23+ 9145 CD 5D 91     	call Comprueba_limite_horizontal
  24+ 9148 CD ED 91     	call Comprueba_limite_vertical
  25+ 914B
  26+ 914B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 914B
  28+ 914B CD 3A 93     3 call calcula_CColumnass
  29+ 914E CD 71 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9151 CD C6 93     	call Define_rutina_de_impresion
  31+ 9154
  32+ 9154 3A B7 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9157 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9159 32 B7 88     	ld (Ctrl_0),a
  35+ 915C
  36+ 915C C9           	ret
  37+ 915D
  38+ 915D              ; *******************************************************************************************************************************************************************************************
  39+ 915D              ;	21/01/23
  40+ 915D              ;
  41+ 915D              ; 	Comprueba_limite_horizontal.
  42+ 915D              ;
  43+ 915D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 915D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 915D              ;
  46+ 915D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 915D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 915D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 915D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 915D
  51+ 915D
  52+ 915D
  53+ 915D 3A B7 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9160 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9162 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9164 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9166 32 B7 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9169 18 09            jr 6F
  59+ 916B CB 5F        1 bit 3,a
  60+ 916D 28 0A            jr z,2F
  61+ 916F E6 F7            and $f7
  62+ 9171 32 B7 88         ld (Ctrl_0),a
  63+ 9174 CD C7 92     6 call Inicializacion
  64+ 9177 18 5B            jr 5F
  65+ 9179 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 917A
  67+ 917A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 917A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 917A
  70+ 917A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 917B 2A C2 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 917E CD CC 96     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9181 67           	ld h,a
  74+ 9182 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9183 CD CC 96     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9186 67           	ld h,a
  77+ 9187 A7           	and a
  78+ 9188 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 918A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 918B 3A 9D 88     	ld a,(Cuad_objeto)
  81+ 918E FE 02        	cp 2
  82+ 9190 38 1E        	jr c,3F
  83+ 9192 28 1C        	jr z,3F
  84+ 9194 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9195 28 23            jr z,7F
  86+ 9197 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9199 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 919B E1           	pop hl
  89+ 919C
  90+ 919C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 919C              ; _para indicar con E="2" en caso necesario.
  92+ 919C
  93+ 919C E5               push hl
  94+ 919D C5               push bc
  95+ 919E CD CC 96     	call calcula_tercio
  96+ 91A1 FE 01        	cp 1
  97+ 91A3 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 91A5 CD D5 91         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 91A8 28 26            jr z,9F
 100+ 91AA 38 24            jr c,9F
 101+ 91AC 1E 00        11 ld e,0
 102+ 91AE 18 22            jr 8F
 103+ 91B0 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 91B1 28 07        	jr z, 7F
 105+ 91B3 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 91B5 1E 00         	ld e,0
 107+ 91B7 E1           	pop hl
 108+ 91B8 18 04        	jr 4F
 109+ 91BA 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 91BC 18 15            jr 10F
 111+ 91BE
 112+ 91BE              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 91BE              ; _para indicar con E="2" en caso necesario.
 114+ 91BE
 115+ 91BE E5           4 push hl
 116+ 91BF C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 91C0 CD CC 96     	call calcula_tercio
 118+ 91C3 FE 01        	cp 1
 119+ 91C5 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 91C7 CD D5 91         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 91CA 28 04            jr z,9F
 122+ 91CC 30 02            jr nc,9F
 123+ 91CE 18 02        	jr 8F
 124+ 91D0 1E 02        9 ld e,2
 125+ 91D2 C1           8 pop bc
 126+ 91D3 E1           10 pop hl
 127+ 91D4 C9           5 ret
 128+ 91D5
 129+ 91D5              ; --------------------
 130+ 91D5              ;
 131+ 91D5              ; 25/08/22
 132+ 91D5
 133+ 91D5 CD CC 96     Comprueba_centro call calcula_tercio
 134+ 91D8 67               ld h,a
 135+ 91D9 08           	ex af,af
 136+ 91DA FE 02        	cp 2
 137+ 91DC 38 07        	jr c,1F
 138+ 91DE 28 05        	jr z,1F
 139+ 91E0 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 91E3 18 03        	jr 2F
 141+ 91E5 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 91E8 08           2 ex af,af
 143+ 91E9 A7               and a
 144+ 91EA ED 42            sbc hl,bc
 145+ 91EC C9               ret
 146+ 91ED
 147+ 91ED              ; *********************************************************************************************************************************************************************************************
 148+ 91ED              ;
 149+ 91ED              ;   16/8/22
 150+ 91ED              ;
 151+ 91ED              ;	Comprueba_limite_vertical
 152+ 91ED              ;
 153+ 91ED              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 91ED              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 91ED              ;
 156+ 91ED
 157+ 91ED 2A 8B 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 91F0 7D           	ld a,l
 159+ 91F1 E6 1F        	and $1F
 160+ 91F3 57           	ld d,a
 161+ 91F4 3A C4 88     	ld a,(Limite_vertical)
 162+ 91F7 BA           	cp d 											; Límite - Posición.
 163+ 91F8 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 91F9 3A 9D 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 91FC CB 47        	bit 0,a
 166+ 91FE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9200
 168+ 9200              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9200
 170+ 9200 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9201 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9203
 173+ 9203              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9203              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9203
 176+ 9203 3A 8F 88         ld a,(Coordenada_X)
 177+ 9206 16 0F            ld d,Centro_izquierda
 178+ 9208 A7               and a
 179+ 9209 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 920A 28 1E            jr z,3F
 181+ 920C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 920E              ;                                                    ; _salimos sin modificar nada.
 183+ 920E 18 0E            jr 2F
 184+ 9210 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9211 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9213
 187+ 9213              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9213              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9213
 190+ 9213 3A 8F 88         ld a,(Coordenada_X)
 191+ 9216 16 10            ld d,Centro_derecha
 192+ 9218 A7               and a
 193+ 9219 92               sub d
 194+ 921A 28 0E            jr z,3F
 195+ 921C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 921E              ;                                                    ; _salimos sin modificar nada.
 197+ 921E CB 43        2 bit 0,e
 198+ 9220 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9222 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9223 CD B7 92         call Modificaccionne
 201+ 9226 C1           	pop bc
 202+ 9227 CD C7 92         call Inicializacion
 203+ 922A C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 922B
 205+ 922B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 922B
 207+ 922B C5           4 push bc
 208+ 922C 01 8A 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 922F 0A           	ld a,(bc)
 210+ 9230 3D           	dec a
 211+ 9231 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9232 7D           	ld a,l
 213+ 9233 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9234 CB 47        	bit 0,a
 215+ 9236 28 03        	jr z,5F
 216+ 9238 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9239 18 2E        	jr 7F
 218+ 923B
 219+ 923B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 923B
 221+ 923B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 923C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 923D 3A B7 88     	ld a,(Ctrl_0)
 224+ 9240 CB 4F        	bit 1,a
 225+ 9242 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9244 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9245
 228+ 9245              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9245
 230+ 9245 1C               inc e
 231+ 9246 1D               dec e
 232+ 9247 20 07            jr nz,12F
 233+ 9249 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 924A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 924B 22 8B 88     	ld (Posicion_actual),hl
 236+ 924E 18 44        13 jr 9F
 237+ 9250 CB 43        12 bit 0,e
 238+ 9252 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9254              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9254 C1           	pop bc
 241+ 9255 18 D3        	jr 3B
 242+ 9257 80           14 add b
 243+ 9258 6F               ld l,a
 244+ 9259 22 8B 88     	ld (Posicion_actual),hl
 245+ 925C CD B7 92         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 925F 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9261 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9263 32 B7 88         ld (Ctrl_0),a
 249+ 9266 F1           	pop af
 250+ 9267 18 2B        	jr 9F
 251+ 9269
 252+ 9269              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9269
 254+ 9269 F5           7 push af
 255+ 926A 3A B7 88     	ld a,(Ctrl_0)
 256+ 926D CB 47        	bit 0,a
 257+ 926F 20 1D        	jr nz,8F
 258+ 9271 F1           	pop af
 259+ 9272
 260+ 9272              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9272
 262+ 9272 1C           	inc e
 263+ 9273 1D               dec e
 264+ 9274 20 07            jr nz,10F
 265+ 9276 90           	sub b
 266+ 9277 6F               ld l,a
 267+ 9278 22 8B 88     	ld (Posicion_actual),hl
 268+ 927B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 927D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 927D CB 43        10 bit 0,e
 271+ 927F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9281              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9281 C1           	pop bc
 274+ 9282 18 A6        	jr 3B
 275+ 9284 90           16 sub b
 276+ 9285 6F               ld l,a
 277+ 9286 22 8B 88     	ld (Posicion_actual),hl
 278+ 9289 CD B7 92         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 928C 18 06            jr 9F
 280+ 928E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9290 32 B7 88         ld (Ctrl_0),a
 282+ 9293 F1           	pop af
 283+ 9294 C1           9 pop bc
 284+ 9295 1E 00        	ld e,0
 285+ 9297 CD C7 92         call Inicializacion
 286+ 929A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 929B 08           	ex af,af
 288+ 929C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 929D 18 8B            jr 3B
 290+ 929F
 291+ 929F              ; --------------------
 292+ 929F
 293+ 929F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 92A1 CD 1B 94     1 call PreviousScan
 295+ 92A4 10 FB            djnz 1B
 296+ 92A6 22 8B 88     	ld (Posicion_actual),hl
 297+ 92A9 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 92AA C9           	ret
 299+ 92AB
 300+ 92AB              ; --------------------
 301+ 92AB
 302+ 92AB 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 92AD CD 0C 94     1 call NextScan
 304+ 92B0 10 FB            djnz 1B
 305+ 92B2 22 8B 88     	ld (Posicion_actual),hl
 306+ 92B5 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 92B6 C9           	ret
 308+ 92B7
 309+ 92B7              ; --------------------
 310+ 92B7              ;
 311+ 92B7              ;	22/01/23
 312+ 92B7              ;
 313+ 92B7              ;	E="1". Hemos cambiado de cuadrante.
 314+ 92B7              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 92B7              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 92B7
 317+ 92B7
 318+ 92B7              Modificaccionne
 319+ 92B7
 320+ 92B7 3A 9D 88     	ld a,(Cuad_objeto)
 321+ 92BA FE 02        	cp 2
 322+ 92BC CC 9F 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 92BF DC 9F 92         call c,Modifica_Pos_actual
 324+ 92C2 C8           	ret z
 325+ 92C3 CD AB 92         call Modifica_Pos_actual2
 326+ 92C6 C9               ret
 327+ 92C7
 328+ 92C7              ; *************************************************************************************************************************************************************************************************
 329+ 92C7              ;
 330+ 92C7              ;	13/8/22
 331+ 92C7              ;
 332+ 92C7              ;	Inicializacion
 333+ 92C7              ;
 334+ 92C7              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 92C7              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 92C7              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 92C7              ;
 338+ 92C7              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 92C7              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 92C7              ;	_ desaparece/aparece.
 341+ 92C7
 342+ 92C7              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 92C7              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 92C7              ;
 345+ 92C7              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 92C7              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 92C7              ; 		   [E] ="0"
 348+ 92C7
 349+ 92C7              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 92C7
 351+ 92C7 CD CC 96     Inicializacion call calcula_tercio
 352+ 92CA 28 36        	jr z,primit
 353+ 92CC E6 02        	and 2
 354+ 92CE 20 07        	jr nz,segmit
 355+ 92D0 7D           	ld a,l
 356+ 92D1 FE 7F        	cp $7f
 357+ 92D3 38 2D        	jr c,primit
 358+ 92D5 28 2B        	jr z,primit
 359+ 92D7 CD 34 93     segmit call column
 360+ 92DA 38 13        	jr c,tercuad
 361+ 92DC 3E 04        cuarcuad ld a,4
 362+ 92DE 32 9D 88     	ld (Cuad_objeto),a
 363+ 92E1 21 20 48     	ld hl,$4820
 364+ 92E4 22 C2 88     	ld (Limite_horizontal),hl
 365+ 92E7 21 C4 88     	ld hl,Limite_vertical
 366+ 92EA 36 0D        	ld (hl),$0d
 367+ 92EC 08           	ex af,af
 368+ 92ED 18 3C        	jr 1F
 369+ 92EF              tercuad
 370+ 92EF 3E 03        	ld a,3
 371+ 92F1 32 9D 88     	ld (Cuad_objeto),a
 372+ 92F4 21 20 48     	ld hl,$4820
 373+ 92F7 22 C2 88     	ld (Limite_horizontal),hl
 374+ 92FA 21 C4 88     	ld hl,Limite_vertical
 375+ 92FD 36 12        	ld (hl),$12
 376+ 92FF 08           	ex af,af
 377+ 9300 18 29        	jr 1F
 378+ 9302 CD 34 93     primit call column
 379+ 9305 38 13        	jr c, primcuad
 380+ 9307              segcuad
 381+ 9307 3E 02        	ld a,2
 382+ 9309 32 9D 88     	ld (Cuad_objeto),a
 383+ 930C 21 C0 4F     	ld hl,$4fc0
 384+ 930F 22 C2 88     	ld (Limite_horizontal),hl
 385+ 9312 21 C4 88     	ld hl,Limite_vertical
 386+ 9315 36 0D        	ld (hl),$0d
 387+ 9317 08           	ex af,af
 388+ 9318 18 11        	jr 1F
 389+ 931A              primcuad
 390+ 931A 3E 01        	ld a,1
 391+ 931C 32 9D 88     	ld (Cuad_objeto),a
 392+ 931F 21 C0 4F     	ld hl,$4fc0
 393+ 9322 22 C2 88     	ld (Limite_horizontal),hl
 394+ 9325 21 C4 88     	ld hl,Limite_vertical
 395+ 9328 36 12        	ld (hl),$12
 396+ 932A 08           	ex af,af
 397+ 932B CD 0C 9A     1 call Genera_coordenadas
 398+ 932E 21 B7 88     	ld hl,Ctrl_0
 399+ 9331 CB EE        	set 5,(hl)
 400+ 9333 C9           	ret
 401+ 9334
 402+ 9334              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9334
 404+ 9334              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9334              ;
 406+ 9334              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9334
 408+ 9334 7D           column ld a,l
 409+ 9335 E6 1F        	and $1f
 410+ 9337 FE 10         	cp $10
 411+ 9339 C9            	ret
 412+ 933A
 413+ 933A              ; --------------------------------------------------------------------------------------------------------------------
 414+ 933A              ;
 415+ 933A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 933A              ;
 417+ 933A              ; 14/12/22
 418+ 933A              ;
 419+ 933A              ;	Modifica: A y BC.
 420+ 933A
 421+ 933A 3A 9D 88     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 933D E6 01        	and 1
 423+ 933F 28 17        	jr z,1F
 424+ 9341
 425+ 9341              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9341
 427+ 9341 3A 8F 88     	ld a,(Coordenada_X)
 428+ 9344 47           	ld b,a
 429+ 9345 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9346 79           	ld a,c
 431+ 9347 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9348 38 08        	jr c,2F
 433+ 934A 47           	ld b,a
 434+ 934B 79           	ld a,c
 435+ 934C 90           	sub b
 436+ 934D 32 C1 88     	ld (Columnas),a
 437+ 9350 18 1B        	jr 4F
 438+ 9352 79           2 ld a,c
 439+ 9353 32 C1 88     	ld (Columnas),a
 440+ 9356 18 15        	jr 4F
 441+ 9358
 442+ 9358              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9358
 444+ 9358 3A 8F 88     1 ld a,(Coordenada_X)
 445+ 935B 81           	add c
 446+ 935C 3D           	dec a
 447+ 935D D6 1F        	sub $1f
 448+ 935F 38 08        	jr c,3F
 449+ 9361 47           	ld b,a
 450+ 9362 79           	ld a,c
 451+ 9363 90           	sub b
 452+ 9364 32 C1 88     	ld (Columnas),a
 453+ 9367 18 04        	jr 4F
 454+ 9369 79           3 ld a,c
 455+ 936A 32 C1 88     	ld (Columnas),a
 456+ 936D D9           4 exx
 457+ 936E 4F           	ld c,a
 458+ 936F D9           	exx
 459+ 9370 C9            ret
 460+ 9371
 461+ 9371              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9371              ;
 463+ 9371              ; 7/1/23
 464+ 9371              ;
 465+ 9371              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9371              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9371              ;
 468+ 9371              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9371              ;	DESTRUYE: HL,B Y A.
 470+ 9371
 471+ 9371 3A 9D 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9374 FE 02        	cp 2
 473+ 9376 38 18        	jr c,1F
 474+ 9378 28 16        	jr z,1F
 475+ 937A E6 01        	and 1
 476+ 937C 28 0D        	jr z,3F
 477+ 937E
 478+ 937E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 937E
 480+ 937E CD BA 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9381
 482+ 9381 7D           9 ld a,l
 483+ 9382 E6 1F        	and $1f
 484+ 9384 28 2A        	jr z,7F
 485+ 9386 2B           	dec hl
 486+ 9387 10 F8        	djnz 9B
 487+ 9389 18 25        	jr 7F
 488+ 938B
 489+ 938B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 938B
 491+ 938B 2A 8B 88     3 ld hl,(Posicion_actual)
 492+ 938E 18 20        	jr 7F
 493+ 9390
 494+ 9390 28 14        1 jr z,2F
 495+ 9392
 496+ 9392              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9392
 498+ 9392 CD BA 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9395 7D           4 ld a,l
 500+ 9396 E6 1F        	and $1f
 501+ 9398 28 03        	jr z,6F
 502+ 939A 2B           	dec hl
 503+ 939B 10 F8        	djnz 4B
 504+ 939D 06 0F        6 ld b,15
 505+ 939F CD 1B 94     5 call PreviousScan
 506+ 93A2 10 FB        	djnz 5B
 507+ 93A4 18 0A        	jr 7F
 508+ 93A6
 509+ 93A6              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 93A6
 511+ 93A6 CD BA 93     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 93A9 06 0F        	ld b,15
 513+ 93AB CD 1B 94     8 call PreviousScan
 514+ 93AE 10 FB        	djnz 8B
 515+ 93B0
 516+ 93B0 E5           7 push hl
 517+ 93B1 DD E1        	pop ix
 518+ 93B3
 519+ 93B3 2A 8D 88     	ld hl,(Puntero_objeto)
 520+ 93B6 E5           	push hl
 521+ 93B7 FD E1        	pop iy
 522+ 93B9
 523+ 93B9 C9           	ret
 524+ 93BA
 525+ 93BA              ; --------------------------------------------------------------------------------------------------------------------
 526+ 93BA              ;
 527+ 93BA              ;	2/1/23
 528+ 93BA              ;
 529+ 93BA              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 93BA              ;
 531+ 93BA              ;	Tras esta rutina tenemos:
 532+ 93BA              ;
 533+ 93BA              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 93BA              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 93BA              ;
 536+ 93BA              ;	DESTRUYE!!!!! HL,B y A.
 537+ 93BA
 538+ 93BA 2A 8B 88     Operandos ld hl,(Posicion_actual)
 539+ 93BD 3A C1 88     	ld a,(Columnas)
 540+ 93C0 3D           	dec a
 541+ 93C1 20 01        	jr nz,1F
 542+ 93C3 3C           	inc a
 543+ 93C4 47           1 ld b,a
 544+ 93C5 C9           	ret
 545+ 93C6
 546+ 93C6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 93C6              ;
 548+ 93C6              ;	3/1/23
 549+ 93C6              ;
 550+ 93C6              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 93C6              ;
 552+ 93C6              ;	Destruye: A,B,HL y DE.
 553+ 93C6
 554+ 93C6              Define_rutina_de_impresion
 555+ 93C6
 556+ 93C6 3A 8A 88     	ld a,(Columns)
 557+ 93C9 47           	ld b,a
 558+ 93CA 3A C1 88     	ld a,(Columnas)
 559+ 93CD B8           	cp b
 560+ 93CE 20 0D        	jr nz,2f
 561+ 93D0
 562+ 93D0              ;	La entidad se imprime entera.
 563+ 93D0
 564+ 93D0 21 9C 94     	ld hl, Indice_entidades_completas
 565+ 93D3 E6 01        	and 1
 566+ 93D5 28 02        	jr z,1F
 567+ 93D7
 568+ 93D7 23           	inc hl
 569+ 93D8 23           	inc hl
 570+ 93D9
 571+ 93D9 CD A3 8B     1 call Extrae_address
 572+ 93DC C9           	ret		;	ret
 573+ 93DD
 574+ 93DD              ;	La entidad no se imprime entera en pantalla.
 575+ 93DD
 576+ 93DD 3A 9D 88     2 ld a,(Cuad_objeto)
 577+ 93E0 E6 01        	and 1
 578+ 93E2 28 17        	jr z,3F
 579+ 93E4
 580+ 93E4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 93E4
 582+ 93E4 21 A0 94     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 93E7 3A 8A 88     4 ld a,(Columns)
 584+ 93EA E6 01        	and 1
 585+ 93EC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 93EE
 587+ 93EE 23           	inc hl
 588+ 93EF 23           	inc hl
 589+ 93F0
 590+ 93F0 3A C1 88     	ld a,(Columnas)
 591+ 93F3 E6 01        	and 1
 592+ 93F5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 93F7
 594+ 93F7 23           	inc hl
 595+ 93F8 23           	inc hl
 596+ 93F9
 597+ 93F9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 93FB
 599+ 93FB 21 A6 94     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 93FE 18 E7        	jr 4B
 601+ 9400
 602+ 9400              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9400              ;
 604+ 9400              ;	Prepara_draw
 605+ 9400              ;
 606+ 9400              ;	Es una rutina de carga.
 607+ 9400              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9400              ;
 609+ 9400              ;	FUNCIONAMIENTO:
 610+ 9400              ;
 611+ 9400              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9400              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9400              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9400              ;
 615+ 9400              ;	DESTRUYE:
 616+ 9400              ;
 617+ 9400              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9400
 619+ 9400 21 89 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9403 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9404 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9405 4E           	ld c,(hl)
 623+ 9406 2A 8B 88     	ld hl,(Posicion_actual)
 624+ 9409 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 940B C9           	ret
 626+ 940C
 627+ 940C              ;----------------------------------------------------------------------------------------------------------------
 628+ 940C              ;
 629+ 940C              ;	5/08/22
 630+ 940C              ;
 631+ 940C              ;   NextScan.
 632+ 940C              ;
 633+ 940C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 940C              ;
 635+ 940C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 940C              ;
 637+ 940C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 940C              ;
 639+ 940C              ;       DESTRUIDOS: AF y HL !!!
 640+ 940C              ;
 641+ 940C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 940C              ;
 643+ 940C
 644+ 940C 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 940D 7C               ld a,h
 646+ 940E E6 07            and 7
 647+ 9410 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9411
 649+ 9411 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9412 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9414 6F               ld l,a
 652+ 9415 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9416
 654+ 9416 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9417 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9419 67               ld h,a
 657+ 941A C9               ret
 658+ 941B
 659+ 941B              ;----------------------------------------------------------------------------------------------------------------
 660+ 941B              ;
 661+ 941B              ;	5/08/22
 662+ 941B              ;
 663+ 941B              ;   PreviousScan.
 664+ 941B              ;
 665+ 941B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 941B              ;
 667+ 941B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 941B              ;
 669+ 941B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 941B              ;
 671+ 941B              ;       DESTRUIDOS: AF y HL !!!
 672+ 941B              ;
 673+ 941B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 941B              ;
 675+ 941B
 676+ 941B 7C           PreviousScan ld a,h
 677+ 941C 25               dec h               ; Dec H.
 678+ 941D E6 07            and 7
 679+ 941F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9420
 681+ 9420 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9421 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9423 6F               ld l,a
 684+ 9424 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9425
 686+ 9425 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9426 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9428 67               ld h,a
 689+ 9429 C9               ret
 690+ 942A
 691+ 942A              ; -----------------------------------------------------------------------------------
 692+ 942A              ;
 693+ 942A              ;	28/2/23
 694+ 942A              ;
 695+ 942A              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 942A              ;	Extrae fotos de Album_de_fotos.
 697+ 942A
 698+ 942A              Extrae_foto_entidades
 699+ 942A
 700+ 942A 3A D0 88     	ld a,(Numero_de_malotes)
 701+ 942D A7           	and a
 702+ 942E C8           	ret z
 703+ 942F ED 73 D5 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 9433 31 00 70     	ld sp,Album_de_fotos
 705+ 9436
 706+ 9436 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 9438 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 9439 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 943A
 710+ 943A ED 73 D7 88  	ld (Stack_2),sp
 711+ 943E ED 7B D5 88  	ld sp,(Stack)
 712+ 9442
 713+ 9442              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 9442
 715+ 9442 3E CD        	ld a,$cd
 716+ 9444 32 4C 94     	ld (Imprime),a
 717+ 9447 EB           	ex de,hl
 718+ 9448 22 4D 94     	ld (Imprime+1),hl
 719+ 944B EB           	ex de,hl
 720+ 944C
 721+ 944C              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 944C
 723+ 944C 00 00 00     Imprime db 0,0,0
 724+ 944F
 725+ 944F 3A D0 88     	ld a,(Numero_de_malotes)
 726+ 9452 3D           	dec a
 727+ 9453 28 09        	jr z,1F
 728+ 9455 32 D0 88      	ld (Numero_de_malotes),a
 729+ 9458
 730+ 9458 ED 7B D7 88   	ld sp,(Stack_2)
 731+ 945C 18 D8        	jr 2B
 732+ 945E
 733+ 945E AF           1 xor a
 734+ 945F 32 D7 88     	ld (Stack_2),a
 735+ 9462 C9           	ret
 736+ 9463
 737+ 9463              ; -----------------------------------------------------------------------------------
 738+ 9463              ;
 739+ 9463              ;	28/2/23
 740+ 9463              ;
 741+ 9463              ;	Pinta los disparos generados.
 742+ 9463
 743+ 9463              Extrae_foto_disparos
 744+ 9463
 745+ 9463 3A DD 88     	ld a,(Numero_de_disparotes)
 746+ 9466 A7           	and a
 747+ 9467 C8           	ret z
 748+ 9468 ED 73 D5 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 946C 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 946F
 751+ 946F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9471 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9472 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9473
 755+ 9473 ED 73 D7 88  	ld (Stack_2),sp
 756+ 9477 ED 7B D5 88  	ld sp,(Stack)
 757+ 947B
 758+ 947B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 947B
 760+ 947B 3E CD        	ld a,$cd
 761+ 947D 32 85 94     	ld (Imprime2),a
 762+ 9480 EB           	ex de,hl
 763+ 9481 22 86 94     	ld (Imprime2+1),hl
 764+ 9484 EB           	ex de,hl
 765+ 9485
 766+ 9485              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9485
 768+ 9485 00 00 00     Imprime2 db 0,0,0
 769+ 9488
 770+ 9488 3A DD 88     	ld a,(Numero_de_disparotes)
 771+ 948B 3D           	dec a
 772+ 948C 28 09        	jr z,1F
 773+ 948E 32 DD 88      	ld (Numero_de_disparotes),a
 774+ 9491
 775+ 9491 ED 7B D7 88  	ld sp,(Stack_2)
 776+ 9495 18 D8        	jr 2B
 777+ 9497
 778+ 9497 AF           1 xor a
 779+ 9498 32 D7 88     	ld (Stack_2),a
 780+ 949B C9           	ret
 781+ 949C
# file closed: Draw_XOR.asm
1190  949C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 949C              ;   índices de Rutinas de impresión.
   2+ 949C
   3+ 949C AC 94        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 949E D9 94            defw Pinta_Amadeus_3x2
   5+ 94A0
   6+ 94A0 2F 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 94A2 CF 95            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 94A4 83 95            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 94A6
  10+ 94A6 59 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 94A8 5D 96            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 94AA 11 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 94AC
  14+ 94AC
  15+ 94AC              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 94AC              ;
  17+ 94AC              ;   12/12/22
  18+ 94AC              ;
  19+ 94AC              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 94AC              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 94AC              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 94AC              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 94AC              ;
  24+ 94AC              ;   Modifica: DE y HL.
  25+ 94AC
  26+ 94AC ED 73 D5 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 94B0 FD F9        	ld sp,iy
  28+ 94B2 06 10            ld b,16
  29+ 94B4 D1           1 pop de
  30+ 94B5 7B               ld a,e
  31+ 94B6 AE               xor (hl)
  32+ 94B7 77           	ld (hl),a
  33+ 94B8 23           	inc hl
  34+ 94B9 7A               ld a,d
  35+ 94BA AE               xor (hl)
  36+ 94BB 77           	ld (hl),a
  37+ 94BC 2B           	dec hl
  38+ 94BD 24           	inc h
  39+ 94BE 7C               ld a,h
  40+ 94BF E6 07            and 7
  41+ 94C1 20 0A            jr nz,2F
  42+ 94C3 7D               ld a,l
  43+ 94C4 C6 20            add a,$20
  44+ 94C6 6F               ld l,a
  45+ 94C7 38 04            jr c,2F
  46+ 94C9 7C               ld a,h
  47+ 94CA D6 08            sub 8
  48+ 94CC 67               ld h,a
  49+ 94CD 7C           2 ld a,h
  50+ 94CE FE 58            cp $58
  51+ 94D0 28 02            jr z,3F
  52+ 94D2 10 E0            djnz 1B
  53+ 94D4 ED 7B D5 88  3 ld sp,(Stack)
  54+ 94D8 C9           	ret
  55+ 94D9
  56+ 94D9 ED 73 D5 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 94DD FD F9        	ld sp,iy
  58+ 94DF 06 08            ld b,8
  59+ 94E1 D1           1 pop de
  60+ 94E2 7B               ld a,e
  61+ 94E3 AE               xor (hl)
  62+ 94E4 77           	ld (hl),a
  63+ 94E5 23           	inc hl
  64+ 94E6 7A               ld a,d
  65+ 94E7 AE               xor (hl)
  66+ 94E8 77           	ld (hl),a
  67+ 94E9 23           	inc hl
  68+ 94EA D1           	pop de
  69+ 94EB 7B               ld a,e
  70+ 94EC AE               xor (hl)
  71+ 94ED 77           	ld (hl),a
  72+ 94EE 2B           	dec hl
  73+ 94EF 2B           	dec hl
  74+ 94F0 24           	inc h
  75+ 94F1 7C               ld a,h
  76+ 94F2 E6 07            and 7
  77+ 94F4 20 0A            jr nz,2F
  78+ 94F6 7D               ld a,l
  79+ 94F7 C6 20            add a,$20
  80+ 94F9 6F               ld l,a
  81+ 94FA 38 04            jr c,2F
  82+ 94FC 7C               ld a,h
  83+ 94FD D6 08            sub 8
  84+ 94FF 67               ld h,a
  85+ 9500 7C           2 ld a,h
  86+ 9501 FE 58            cp $58
  87+ 9503 28 25            jr z,4F
  88+ 9505 7A               ld a,d
  89+ 9506 AE               xor (hl)
  90+ 9507 77               ld (hl),a
  91+ 9508 D1           	pop de
  92+ 9509 23           	inc hl
  93+ 950A 7B               ld a,e
  94+ 950B AE               xor (hl)
  95+ 950C 77           	ld (hl),a
  96+ 950D 23           	inc hl
  97+ 950E 7A               ld a,d
  98+ 950F AE               xor (hl)
  99+ 9510 77           	ld (hl),a
 100+ 9511 2B           	dec hl
 101+ 9512 2B           	dec hl
 102+ 9513 24           	inc h
 103+ 9514 7C               ld a,h
 104+ 9515 E6 07            and 7
 105+ 9517 20 0A            jr nz,3F
 106+ 9519 7D               ld a,l
 107+ 951A C6 20            add a,$20
 108+ 951C 6F               ld l,a
 109+ 951D 38 04            jr c,3F
 110+ 951F 7C               ld a,h
 111+ 9520 D6 08            sub 8
 112+ 9522 67               ld h,a
 113+ 9523 7C           3 ld a,h
 114+ 9524 FE 58            cp $58
 115+ 9526 28 02            jr z,4F
 116+ 9528 10 B7            djnz 1B
 117+ 952A ED 7B D5 88  4 ld sp,(Stack)
 118+ 952E C9           	ret
 119+ 952F
 120+ 952F              ; ---------------------------------------------------
 121+ 952F
 122+ 952F ED 73 D5 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9533 FD F9        	ld sp,iy
 124+ 9535
 125+ 9535              ; >>>
 126+ 9535
 127+ 9535 06 10            ld b,16
 128+ 9537 D1           1 pop de
 129+ 9538 7A           	ld a,d
 130+ 9539 AE           	xor (hl)
 131+ 953A 77           	ld (hl),a
 132+ 953B 24           	inc h
 133+ 953C 7C               ld a,h
 134+ 953D E6 07            and 7
 135+ 953F 20 0C            jr nz,2F
 136+ 9541 7D               ld a,l
 137+ 9542 C6 20            add a,$20
 138+ 9544 6F               ld l,a
 139+ 9545 38 06            jr c,2F
 140+ 9547 7C               ld a,h
 141+ 9548 D6 08            sub 8
 142+ 954A 67               ld h,a
 143+ 954B 18 00            jr 2F
 144+ 954D 7C           2 ld a,h
 145+ 954E FE 58            cp $58
 146+ 9550 28 02            jr z,3F
 147+ 9552 10 E3            djnz 1B
 148+ 9554 ED 7B D5 88  3 ld sp,(Stack)
 149+ 9558 C9           	ret
 150+ 9559
 151+ 9559 ED 73 D5 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 955D FD F9        	ld sp,iy
 153+ 955F
 154+ 955F              ; >>>
 155+ 955F
 156+ 955F 06 10            ld b,16
 157+ 9561 D1           1 pop de
 158+ 9562 7B           	ld a,e
 159+ 9563 AE           	xor (hl)
 160+ 9564 77           	ld (hl),a
 161+ 9565 24           	inc h
 162+ 9566 7C               ld a,h
 163+ 9567 E6 07            and 7
 164+ 9569 20 0C            jr nz,2F
 165+ 956B 7D               ld a,l
 166+ 956C C6 20            add a,$20
 167+ 956E 6F               ld l,a
 168+ 956F 38 06            jr c,2F
 169+ 9571 7C               ld a,h
 170+ 9572 D6 08            sub 8
 171+ 9574 67               ld h,a
 172+ 9575 18 00            jr 2F
 173+ 9577 7C           2 ld a,h
 174+ 9578 FE 58            cp $58
 175+ 957A 28 02            jr z,3F
 176+ 957C 10 E3            djnz 1B
 177+ 957E ED 7B D5 88  3 ld sp,(Stack)
 178+ 9582 C9           	ret
 179+ 9583
 180+ 9583              ; ---------------------------------------------------
 181+ 9583
 182+ 9583 ED 73 D5 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9587 FD F9        	ld sp,iy
 184+ 9589 06 08            ld b,8
 185+ 958B D1           1 pop de
 186+ 958C 7A           	ld a,d
 187+ 958D AE           	xor (hl)
 188+ 958E 77           	ld (hl),a
 189+ 958F 23           	inc hl
 190+ 9590 D1           	pop de
 191+ 9591 7B           	ld a,e
 192+ 9592 AE           	xor (hl)
 193+ 9593 77           	ld (hl),a
 194+ 9594 2B           	dec hl
 195+ 9595 24            	inc h
 196+ 9596 7C               ld a,h
 197+ 9597 E6 07            and 7
 198+ 9599 20 0A            jr nz,2F
 199+ 959B 7D               ld a,l
 200+ 959C C6 20            add a,$20
 201+ 959E 6F               ld l,a
 202+ 959F 38 04            jr c,2F
 203+ 95A1 7C               ld a,h
 204+ 95A2 D6 08            sub 8
 205+ 95A4 67               ld h,a
 206+ 95A5 7C           2 ld a,h
 207+ 95A6 FE 58            cp $58
 208+ 95A8 28 20            jr z,4F
 209+ 95AA D1               pop de
 210+ 95AB 7B           	ld a,e
 211+ 95AC AE           	xor (hl)
 212+ 95AD 77           	ld (hl),a
 213+ 95AE 23           	inc hl
 214+ 95AF 7A           	ld a,d
 215+ 95B0 AE           	xor (hl)
 216+ 95B1 77           	ld (hl),a
 217+ 95B2 2B           	dec hl
 218+ 95B3 24           	inc h
 219+ 95B4 7C               ld a,h
 220+ 95B5 E6 07            and 7
 221+ 95B7 20 0A            jr nz,3F
 222+ 95B9 7D               ld a,l
 223+ 95BA C6 20            add a,$20
 224+ 95BC 6F               ld l,a
 225+ 95BD 38 04            jr c,3F
 226+ 95BF 7C               ld a,h
 227+ 95C0 D6 08            sub 8
 228+ 95C2 67               ld h,a
 229+ 95C3 7C           3 ld a,h
 230+ 95C4 FE 58            cp $58
 231+ 95C6 28 02            jr z,4F
 232+ 95C8 10 C1            djnz 1B
 233+ 95CA ED 7B D5 88  4 ld sp,(Stack)
 234+ 95CE C9           	ret
 235+ 95CF
 236+ 95CF ED 73 D5 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 95D3 FD F9        	ld sp,iy
 238+ 95D5 06 08            ld b,8
 239+ 95D7 D1           1 pop de
 240+ 95D8 D1           	pop de
 241+ 95D9 7B           	ld a,e
 242+ 95DA AE           	xor (hl)
 243+ 95DB 77           	ld (hl),a
 244+ 95DC 24            	inc h
 245+ 95DD 7C               ld a,h
 246+ 95DE E6 07            and 7
 247+ 95E0 20 0A            jr nz,2F
 248+ 95E2 7D               ld a,l
 249+ 95E3 C6 20            add a,$20
 250+ 95E5 6F               ld l,a
 251+ 95E6 38 04            jr c,2F
 252+ 95E8 7C               ld a,h
 253+ 95E9 D6 08            sub 8
 254+ 95EB 67               ld h,a
 255+ 95EC 7C           2 ld a,h
 256+ 95ED FE 58            cp $58
 257+ 95EF 28 1B            jr z,4F
 258+ 95F1 D1               pop de
 259+ 95F2 7A           	ld a,d
 260+ 95F3 AE           	xor (hl)
 261+ 95F4 77           	ld (hl),a
 262+ 95F5 24           	inc h
 263+ 95F6 7C               ld a,h
 264+ 95F7 E6 07            and 7
 265+ 95F9 20 0A            jr nz,3F
 266+ 95FB 7D               ld a,l
 267+ 95FC C6 20            add a,$20
 268+ 95FE 6F               ld l,a
 269+ 95FF 38 04            jr c,3F
 270+ 9601 7C               ld a,h
 271+ 9602 D6 08            sub 8
 272+ 9604 67               ld h,a
 273+ 9605 7C           3 ld a,h
 274+ 9606 FE 58            cp $58
 275+ 9608 28 02            jr z,4F
 276+ 960A 10 CB            djnz 1B
 277+ 960C ED 7B D5 88  4 ld sp,(Stack)
 278+ 9610 C9           	ret
 279+ 9611
 280+ 9611 ED 73 D5 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9615 FD F9        	ld sp,iy
 282+ 9617 06 08            ld b,8
 283+ 9619 D1           1 pop de
 284+ 961A 7B           	ld a,e
 285+ 961B AE           	xor (hl)
 286+ 961C 77           	ld (hl),a
 287+ 961D 23           	inc hl
 288+ 961E 7A           	ld a,d
 289+ 961F AE           	xor (hl)
 290+ 9620 77           	ld (hl),a
 291+ 9621 2B           	dec hl
 292+ 9622 24             	inc h
 293+ 9623 7C               ld a,h
 294+ 9624 E6 07            and 7
 295+ 9626 20 0A            jr nz,2F
 296+ 9628 7D               ld a,l
 297+ 9629 C6 20            add a,$20
 298+ 962B 6F               ld l,a
 299+ 962C 38 04            jr c,2F
 300+ 962E 7C               ld a,h
 301+ 962F D6 08            sub 8
 302+ 9631 67               ld h,a
 303+ 9632 7C           2 ld a,h
 304+ 9633 FE 58            cp $58
 305+ 9635 28 21            jr z,4F
 306+ 9637 D1               pop de
 307+ 9638 7A           	ld a,d
 308+ 9639 AE           	xor (hl)
 309+ 963A 77           	ld (hl),a
 310+ 963B 23           	inc hl
 311+ 963C D1               pop de
 312+ 963D 7B           	ld a,e
 313+ 963E AE           	xor (hl)
 314+ 963F 77           	ld (hl),a
 315+ 9640 2B           	dec hl
 316+ 9641 24           	inc h
 317+ 9642 7C               ld a,h
 318+ 9643 E6 07            and 7
 319+ 9645 20 0A            jr nz,3F
 320+ 9647 7D               ld a,l
 321+ 9648 C6 20            add a,$20
 322+ 964A 6F               ld l,a
 323+ 964B 38 04            jr c,3F
 324+ 964D 7C               ld a,h
 325+ 964E D6 08            sub 8
 326+ 9650 67               ld h,a
 327+ 9651 7C           3 ld a,h
 328+ 9652 FE 58            cp $58
 329+ 9654 28 02            jr z,4F
 330+ 9656 10 C1            djnz 1B
 331+ 9658 ED 7B D5 88  4 ld sp,(Stack)
 332+ 965C C9           	ret
 333+ 965D
 334+ 965D ED 73 D5 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9661 FD F9        	ld sp,iy
 336+ 9663 06 08            ld b,8
 337+ 9665 D1           1 pop de
 338+ 9666 7B           	ld a,e
 339+ 9667 AE           	xor (hl)
 340+ 9668 77           	ld (hl),a
 341+ 9669 24            	inc h
 342+ 966A 7C               ld a,h
 343+ 966B E6 07            and 7
 344+ 966D 20 0A            jr nz,2F
 345+ 966F 7D               ld a,l
 346+ 9670 C6 20            add a,$20
 347+ 9672 6F               ld l,a
 348+ 9673 38 04            jr c,2F
 349+ 9675 7C               ld a,h
 350+ 9676 D6 08            sub 8
 351+ 9678 67               ld h,a
 352+ 9679 7C           2 ld a,h
 353+ 967A FE 58            cp $58
 354+ 967C 28 1C            jr z,4F
 355+ 967E D1               pop de
 356+ 967F 7A           	ld a,d
 357+ 9680 AE           	xor (hl)
 358+ 9681 77           	ld (hl),a
 359+ 9682 24           	inc h
 360+ 9683 7C               ld a,h
 361+ 9684 E6 07            and 7
 362+ 9686 20 0A            jr nz,3F
 363+ 9688 7D               ld a,l
 364+ 9689 C6 20            add a,$20
 365+ 968B 6F               ld l,a
 366+ 968C 38 04            jr c,3F
 367+ 968E 7C               ld a,h
 368+ 968F D6 08            sub 8
 369+ 9691 67               ld h,a
 370+ 9692 7C           3 ld a,h
 371+ 9693 FE 58            cp $58
 372+ 9695 28 03            jr z,4F
 373+ 9697 D1               pop de
 374+ 9698 10 CB            djnz 1B
 375+ 969A ED 7B D5 88  4 ld sp,(Stack)
 376+ 969E C9           	ret
 377+ 969F
 378+ 969F              ; ---------------------------------------------------
 379+ 969F              ;
 380+ 969F              ;   27/02/23
 381+ 969F              ;
 382+ 969F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 969F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 969F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 969F
 386+ 969F ED 73 D5 88  Pinta_Disparo ld (Stack),sp
 387+ 96A3 FD F9            ld sp,iy
 388+ 96A5 06 02            ld b,2
 389+ 96A7 D1           1 pop de
 390+ 96A8 7B               ld a,e
 391+ 96A9 AE               xor (hl)
 392+ 96AA 77               ld (hl),a
 393+ 96AB 23               inc hl
 394+ 96AC 7A               ld a,d
 395+ 96AD AE               xor (hl)
 396+ 96AE 77               ld (hl),a
 397+ 96AF 2B               dec hl
 398+ 96B0
 399+ 96B0 24               inc h
 400+ 96B1 7C               ld a,h
 401+ 96B2 E6 07            and 7
 402+ 96B4 20 0A            jr nz,2F
 403+ 96B6 7D               ld a,l
 404+ 96B7 C6 20            add a,$20
 405+ 96B9 6F               ld l,a
 406+ 96BA 38 04            jr c,2F
 407+ 96BC 7C               ld a,h
 408+ 96BD D6 08            sub 8
 409+ 96BF 67               ld h,a
 410+ 96C0 7C           2 ld a,h
 411+ 96C1 FE 58            cp $58
 412+ 96C3 28 02            jr z,3F
 413+ 96C5
 414+ 96C5 10 E0            djnz 1B
 415+ 96C7 ED 7B D5 88  3 ld sp,(Stack)
 416+ 96CB C9               ret
 417+ 96CC
# file closed: Rutinas_de_impresion_sprites.asm
1191  96CC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 96CC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 96CC              ;
   3+ 96CC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 96CC              ;
   5+ 96CC              ; *****************************************************************************************************************************************************************************************
   6+ 96CC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 96CC
   8+ 96CC 7C           calcula_tercio ld a,h
   9+ 96CD E6 18        	and $18
  10+ 96CF CB 2F        	sra a
  11+ 96D1 CB 2F        	sra a
  12+ 96D3 CB 2F        	sra a
  13+ 96D5 C9           	ret
  14+ 96D6
# file closed: calcula_tercio.asm
1192  96D6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 96D6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 96D6              ;
   3+ 96D6              ;
   4+ 96D6              ;	CLS.
   5+ 96D6              ;
   6+ 96D6              ;	Limpia la pantalla y define sus atributos.
   7+ 96D6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 96D6              ;
   9+ 96D6              ;	COLORES: 0 ..... NEGRO
  10+ 96D6              ;    		 1 ..... AZUL
  11+ 96D6              ; 			 2 ..... ROJO
  12+ 96D6              ;			 3 ..... MAGENTA
  13+ 96D6              ; 			 4 ..... VERDE
  14+ 96D6              ; 			 5 ..... CIAN
  15+ 96D6              ;			 6 ..... AMARILLO
  16+ 96D6              ; 			 7 ..... BLANCO
  17+ 96D6              ;
  18+ 96D6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 96D6              ;
  20+ 96D6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 96D6
  22+ 96D6
  23+ 96D6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 96D9 11 01 40     	LD DE,$4001
  25+ 96DC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 96DF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 96E1 ED B0        	LDIR
  28+ 96E3 01 FF 02     	LD BC,767
  29+ 96E6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 96E7 ED B0        	LDIR
  31+ 96E9 C9           	ret
  32+ 96EA
# file closed: Cls.asm
1193  96EA              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 96EA              ; ******************************************************************************************************************************************************************************************
   2+ 96EA              ;
   3+ 96EA              ;   20/05/23
   4+ 96EA              ;
   5+ 96EA              ;	Recompone_posicion_inicio
   6+ 96EA              ;
   7+ 96EA              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 96EA              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 96EA              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 96EA              ;	_ a una u otra rutina.
  11+ 96EA
  12+ 96EA              Recompone_posicion_inicio
  13+ 96EA
  14+ 96EA 2A 9B 88     	ld hl,(Posicion_inicio)
  15+ 96ED 7D           	ld a,l
  16+ 96EE E6 1F        	and $1f
  17+ 96F0 28 08        	jr z,1F
  18+ 96F2
  19+ 96F2 FE 1F        	cp $1f
  20+ 96F4 C0           	ret nz
  21+ 96F5
  22+ 96F5 CD 78 98     	call Mov_left
  23+ 96F8 18 03        	jr 2F
  24+ 96FA
  25+ 96FA CD 5A 97     1 call Mov_right
  26+ 96FD
  27+ 96FD C9           2 ret
  28+ 96FE
  29+ 96FE
  30+ 96FE              ; ******************************************************************************************************************************************************************************************
  31+ 96FE              ;
  32+ 96FE              ;   22/01/23
  33+ 96FE              ;
  34+ 96FE              ;	Mov_down
  35+ 96FE              ;
  36+ 96FE              ; 	Mueve el Sprite X px hacia abajo.
  37+ 96FE              ;
  38+ 96FE              ;
  39+ 96FE 21 B7 88     Mov_down ld hl,Ctrl_0
  40+ 9701 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  41+ 9703              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  42+ 9703              ; 																	; _ en el caso de que no lo haya.
  43+ 9703 3A A1 88     	ld a,(Vel_down)
  44+ 9706 47           	ld b,a
  45+ 9707 2A 8B 88         ld hl,(Posicion_actual)
  46+ 970A CD CC 96     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  47+ 970D E6 02        	and 2
  48+ 970F 28 0F        	jr z,1F
  49+ 9711
  50+ 9711              ; Nos encontramos en el último tercio de pantalla.
  51+ 9711              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  52+ 9711
  53+ 9711 7C           	ld a,h
  54+ 9712 FE 57        	cp $57
  55+ 9714 20 0A        	jr nz,1F
  56+ 9716 7D           	ld a,l
  57+ 9717 C6 20        	add $20
  58+ 9719 30 05        	jr nc,1F
  59+ 971B
  60+ 971B              ; ------------------------------
  61+ 971B CD F6 99     	call Reaparece_arriba
  62+ 971E              ;	call Reinicio
  63+ 971E              ; ------------------------------
  64+ 971E
  65+ 971E 18 08        	jr 3F
  66+ 9720 CD 0C 94     1 call NextScan
  67+ 9723 22 8B 88     	ld (Posicion_actual),hl
  68+ 9726 10 E2            djnz 2B
  69+ 9728 CD 0C 9A     3 call Genera_coordenadas
  70+ 972B C9           	ret
  71+ 972C
  72+ 972C              ; ******************************************************************************************************************************************************************************************
  73+ 972C              ;
  74+ 972C              ;   22/01/23
  75+ 972C              ;
  76+ 972C              ;	Mov_up
  77+ 972C              ;
  78+ 972C              ; 	Mueve el Sprite hacia arriba.
  79+ 972C              ;
  80+ 972C              ;
  81+ 972C 21 B7 88     Mov_up ld hl,Ctrl_0
  82+ 972F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  83+ 9731              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  84+ 9731              ; 																		; _ en el caso de que no lo haya.
  85+ 9731 3A A0 88     	ld a,(Vel_up)
  86+ 9734 47           	ld b,a
  87+ 9735 2A 8B 88     	ld hl,(Posicion_actual)
  88+ 9738 CD CC 96     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  89+ 973B A7           	and a
  90+ 973C 20 10        	jr nz,1F
  91+ 973E
  92+ 973E              ; Nos encontramos en el 1er tercio de pantalla.
  93+ 973E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  94+ 973E
  95+ 973E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  96+ 973F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  97+ 9741 20 0B            jr nz,1F
  98+ 9743 7D               ld a,l
  99+ 9744 D6 20            sub $20
 100+ 9746 30 06            jr nc,1F
 101+ 9748 25               dec h
 102+ 9749
 103+ 9749              ; -----------------------------
 104+ 9749 CD E6 99         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 105+ 974C              ;	call Reinicio
 106+ 974C              ; -----------------------------
 107+ 974C
 108+ 974C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 109+ 974E CD 1B 94     1 call PreviousScan
 110+ 9751 22 8B 88     	ld (Posicion_actual),hl
 111+ 9754 10 E2            djnz 3B
 112+ 9756 CD 0C 9A     2 call Genera_coordenadas
 113+ 9759 C9           	ret
 114+ 975A
 115+ 975A              ; ******************************************************************************************************************************************************************************************
 116+ 975A              ;
 117+ 975A              ;	19/10/22
 118+ 975A              ;
 119+ 975A              ;	Mov_right.
 120+ 975A              ;
 121+ 975A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 122+ 975A              ;
 123+ 975A
 124+ 975A 21 B7 88     Mov_right ld hl,Ctrl_0
 125+ 975D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 126+ 975F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 127+ 975F              ; 																	; _ en el caso de que no lo haya.
 128+ 975F 3A B7 88     	ld a,(Ctrl_0)
 129+ 9762 CB 77        	bit 6,a
 130+ 9764 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 131+ 9766
 132+ 9766 CD 94 99     	call Stop_Amadeus_right
 133+ 9769 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 134+ 976A 18 4D        	jr 8F
 135+ 976C
 136+ 976C 3A 8F 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 137+ 976F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 138+ 9771 20 46        	jr nz,8F
 139+ 9773
 140+ 9773 3A 91 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 141+ 9776 A7           	and a 															; _[3] para continuar con el DESPLZ.
 142+ 9777 28 40        	jr z,8F
 143+ 9779
 144+ 9779              ; ---------- ---------- ----------
 145+ 9779              ;
 146+ 9779              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 147+ 9779
 148+ 9779 3A 9F 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 149+ 977C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 150+ 977E 28 11        	jr z,1F
 151+ 9780 38 06        	jr c,6F
 152+ 9782 FE 04        	cp 4
 153+ 9784 28 14        	jr z,7F
 154+ 9786 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 155+ 9788
 156+ 9788              ; ---------- ---------- ----------
 157+ 9788              ;
 158+ 9788              ; Perfiles de velocidad
 159+ 9788              ;
 160+ 9788
 161+ 9788 3A 91 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 162+ 978B FE FE        	cp $fe
 163+ 978D 20 2A        	jr nz,8F
 164+ 978F 18 10        	jr 3F
 165+ 9791 3A 91 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 166+ 9794 FE FD        	cp $fd
 167+ 9796 20 21        	jr nz,8F
 168+ 9798 18 07        	jr 3F
 169+ 979A 3A 91 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 170+ 979D FE FB        	cp $fb
 171+ 979F 20 18        	jr nz,8F
 172+ 97A1
 173+ 97A1              ; ---------- ---------- ----------
 174+ 97A1
 175+ 97A1              3
 176+ 97A1 CD D4 99     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 177+ 97A4              ;	call Reinicio
 178+ 97A4
 179+ 97A4              ; ---------- ---------- ----------
 180+ 97A4              ;
 181+ 97A4              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 182+ 97A4
 183+ 97A4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 184+ 97A6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 185+ 97A7 CD C0 97     	call DESPLZ_DER
 186+ 97AA C1           	pop bc
 187+ 97AB 10 F9        	djnz 5B
 188+ 97AD 2A 8B 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 189+ 97B0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 190+ 97B1 22 8B 88     	ld (Posicion_actual),hl
 191+ 97B4 CD 0C 9A     	call Genera_coordenadas
 192+ 97B7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 193+ 97B9
 194+ 97B9              ; ---------- ---------- ----------
 195+ 97B9
 196+ 97B9 2A 8B 88     8 ld hl,(Posicion_actual)
 197+ 97BC CD C0 97     	call DESPLZ_DER
 198+ 97BF C9           2 ret
 199+ 97C0
 200+ 97C0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 201+ 97C0              ;
 202+ 97C0              ;	22/9/22
 203+ 97C0              ;
 204+ 97C0
 205+ 97C0 CD CF 97     DESPLZ_DER call Desplaza_derecha
 206+ 97C3 CD 1B 98         call modifica_parametros_1er_DESPLZ_2
 207+ 97C6 CD 44 98         call Ciclo_completo
 208+ 97C9 21 B7 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 209+ 97CC CB FE        	set 7,(hl)
 210+ 97CE C9           	ret
 211+ 97CF
 212+ 97CF              ; ******************************************************************************************************************************************************************************************
 213+ 97CF              ;	15/02/23
 214+ 97CF              ;
 215+ 97CF
 216+ 97CF 3A 9F 88     Desplaza_derecha ld a,(Vel_right)
 217+ 97D2 47           	ld b,a
 218+ 97D3 2A 97 88     	ld hl,(Puntero_DESPLZ_der)
 219+ 97D6 23           1 inc hl
 220+ 97D7 23           	inc hl
 221+ 97D8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 222+ 97DA 22 97 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 223+ 97DD CD A3 8B     	call Extrae_address
 224+ 97E0 22 8D 88     	ld (Puntero_objeto),hl
 225+ 97E3
 226+ 97E3              ; Modifica (Puntero_DESPLZ_izq).
 227+ 97E3
 228+ 97E3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 229+ 97E3              ; Cuántos movimientos hemos hecho ??
 230+ 97E3              ; DE contiene (Puntero_DESPLZ_der).
 231+ 97E3
 232+ 97E3 2A 93 88     7 ld hl,(Indice_Sprite_der)
 233+ 97E6 EB           	ex de,hl
 234+ 97E7 A7           	and a
 235+ 97E8 ED 52        	sbc hl,de
 236+ 97EA CB 3D        	srl l
 237+ 97EC 3E 08        6 ld a,8
 238+ 97EE 95           	sub l
 239+ 97EF 30 1E        	jr nc,3F
 240+ 97F1
 241+ 97F1              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 242+ 97F1              ; B="0".
 243+ 97F1
 244+ 97F1 04           4 inc b
 245+ 97F2 3C           	inc a
 246+ 97F3 20 FC        	jr nz,4B
 247+ 97F5 78           	ld a,b
 248+ 97F6 08           	ex af,af
 249+ 97F7 2A 93 88     	ld hl,(Indice_Sprite_der)
 250+ 97FA 23           5 inc hl
 251+ 97FB 23           	inc hl
 252+ 97FC 10 FC        	djnz 5B
 253+ 97FE 22 97 88     	ld (Puntero_DESPLZ_der),hl
 254+ 9801 CD A3 8B     	call Extrae_address
 255+ 9804 22 8D 88     	ld (Puntero_objeto),hl
 256+ 9807
 257+ 9807              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 258+ 9807              ; _(Posicion_actual).
 259+ 9807
 260+ 9807 21 8B 88     	ld hl,Posicion_actual
 261+ 980A 34           	inc (hl)
 262+ 980B 08               ex af,af
 263+ 980C 6F           	ld l,a
 264+ 980D 18 DD        	jr 6B
 265+ 980F
 266+ 980F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 267+ 980F
 268+ 980F 47           3 ld b,a
 269+ 9810 2A 95 88     	ld hl,(Indice_Sprite_izq)
 270+ 9813 23           2 inc hl
 271+ 9814 23           	inc hl
 272+ 9815 10 FC        	djnz 2B
 273+ 9817 22 99 88     	ld (Puntero_DESPLZ_izq),hl
 274+ 981A C9           8 ret
 275+ 981B
 276+ 981B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 277+ 981B              ;
 278+ 981B              ;	24/7/22
 279+ 981B              ;
 280+ 981B              ;	modifica_parametros_1er_DESPLZ_2
 281+ 981B              ;
 282+ 981B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 283+ 981B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 284+ 981B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 285+ 981B
 286+ 981B 3A 91 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 287+ 981E A7           	and a
 288+ 981F 20 1F        	jr nz,1F
 289+ 9821 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 290+ 9823 32 91 88         ld (CTRL_DESPLZ),a
 291+ 9826
 292+ 9826 21 8A 88     	ld hl,Columns
 293+ 9829 34           	inc (hl)
 294+ 982A 3A 9D 88     	ld a,(Cuad_objeto)
 295+ 982D E6 01        	and 1
 296+ 982F 28 0F        	jr z,1F
 297+ 9831 2A 8B 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 298+ 9834 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 299+ 9835 22 8B 88     	ld (Posicion_actual),hl
 300+ 9838 CD 0C 9A     	call Genera_coordenadas
 301+ 983B CD A0 99     	call Inc_CTRL_DESPLZ
 302+ 983E 18 03        	jr 2F
 303+ 9840 CD A0 99     1 call Inc_CTRL_DESPLZ
 304+ 9843 C9           2 ret
 305+ 9844
 306+ 9844              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 307+ 9844              ;
 308+ 9844              ;	24/7/22
 309+ 9844              ;
 310+ 9844              ;	Ciclo_completo.
 311+ 9844              ;
 312+ 9844              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 313+ 9844              ;
 314+ 9844              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 315+ 9844              ; 	Decrementamos (Columns).
 316+ 9844              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 317+ 9844              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 318+ 9844
 319+ 9844
 320+ 9844 3A 91 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 321+ 9847 FE FF        	cp $ff
 322+ 9849 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 323+ 984B E6 F0        	and $f0
 324+ 984D 20 28        	jr nz,3F
 325+ 984F
 326+ 984F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 327+ 984F
 328+ 984F 3A 91 88     	ld a,(CTRL_DESPLZ)
 329+ 9852 47           	ld b,a
 330+ 9853 3E F8        	ld a,$f8
 331+ 9855 80           	add b
 332+ 9856 32 91 88     	ld (CTRL_DESPLZ),a
 333+ 9859 18 1C        	jr 3F
 334+ 985B 21 8A 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 335+ 985E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 336+ 985F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 337+ 9860 32 91 88     	ld (CTRL_DESPLZ),a
 338+ 9863 3A 9D 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 339+ 9866 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 340+ 9868 20 0A        	jr nz,2F
 341+ 986A 2A 8B 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 342+ 986D 23           	inc hl
 343+ 986E 22 8B 88     	ld (Posicion_actual),hl
 344+ 9871 CD 0C 9A     	call Genera_coordenadas
 345+ 9874
 346+ 9874              ; Inicia el puntero de Sprite.
 347+ 9874
 348+ 9874 CD BA 8B     2 call Inicia_puntero_objeto_der
 349+ 9877 C9           3 ret
 350+ 9878
 351+ 9878              ; ******************************************************************************************************************************************************************************************
 352+ 9878              ;
 353+ 9878              ;	15/02/23
 354+ 9878              ;
 355+ 9878              ;	Mov_left.
 356+ 9878              ;
 357+ 9878              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 358+ 9878              ;
 359+ 9878 21 B7 88     Mov_left ld hl,Ctrl_0
 360+ 987B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 361+ 987D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 362+ 987D              ; 																	; _ en el caso de que no lo haya.
 363+ 987D 3A B7 88     	ld a,(Ctrl_0)
 364+ 9880 CB 77        	bit 6,a
 365+ 9882 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 366+ 9884
 367+ 9884 CD 9A 99     	call Stop_Amadeus_left
 368+ 9887 C8           	ret z
 369+ 9888 20 4A        	jr nz,8F
 370+ 988A
 371+ 988A 3A 8F 88     11 ld a,(Coordenada_X)
 372+ 988D A7           	and a
 373+ 988E 20 44        	jr nz,8F
 374+ 9890
 375+ 9890 3A 91 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 376+ 9893 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 377+ 9894 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 378+ 9896
 379+ 9896              ; ---------- ---------- ----------
 380+ 9896
 381+ 9896 3A 9E 88     	ld a,(Vel_left)
 382+ 9899 FE 02        	cp 2
 383+ 989B 28 0F        	jr z,1F
 384+ 989D 38 04        	jr c,6F
 385+ 989F FE 04        	cp 4
 386+ 98A1 28 12        	jr z,7F
 387+ 98A3
 388+ 98A3              ; ---------- ---------- ----------
 389+ 98A3
 390+ 98A3 3A 91 88     6 ld a,(CTRL_DESPLZ)
 391+ 98A6 FE F8        	cp $f8
 392+ 98A8 20 2A        	jr nz,8F
 393+ 98AA 18 10        	jr 4F
 394+ 98AC 3A 91 88     1 ld a,(CTRL_DESPLZ)
 395+ 98AF FE F9        	cp $f9
 396+ 98B1 20 21        	jr nz,8F
 397+ 98B3 18 07        	jr 4F
 398+ 98B5 3A 91 88     7 ld a,(CTRL_DESPLZ)
 399+ 98B8 FE FB        	cp $fb
 400+ 98BA 20 18        	jr nz,8F
 401+ 98BC
 402+ 98BC              ; ---------- ---------- ----------
 403+ 98BC
 404+ 98BC              4
 405+ 98BC CD C2 99     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 406+ 98BF              ;	call Reinicio
 407+ 98BF
 408+ 98BF              ; ---------- ---------- ----------
 409+ 98BF
 410+ 98BF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 411+ 98C1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 412+ 98C2
 413+ 98C2              ;	ld hl,(Indice_Sprite_izq)
 414+ 98C2              ;	ld (Puntero_DESPLZ_izq),hl
 415+ 98C2
 416+ 98C2 CD DB 98     	call DESPLZ_IZQ
 417+ 98C5 C1           	pop bc
 418+ 98C6 10 F9        	djnz 5B
 419+ 98C8 2A 8B 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 420+ 98CB 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 421+ 98CC 22 8B 88     	ld (Posicion_actual),hl
 422+ 98CF CD 0C 9A     	call Genera_coordenadas
 423+ 98D2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 424+ 98D4
 425+ 98D4              ; ---------- ---------- ----------
 426+ 98D4
 427+ 98D4              ; Movemos, no hay recolocación.
 428+ 98D4
 429+ 98D4 2A 8B 88     8 ld hl,(Posicion_actual)
 430+ 98D7 CD DB 98     	call DESPLZ_IZQ
 431+ 98DA C9           2 ret
 432+ 98DB
 433+ 98DB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 434+ 98DB              ;
 435+ 98DB              ;	22/9/22
 436+ 98DB
 437+ 98DB              DESPLZ_IZQ
 438+ 98DB
 439+ 98DB CD EA 98     	call Desplaza_izquierda
 440+ 98DE CD 36 99         call modifica_parametros_1er_DESPLZ
 441+ 98E1 CD 5E 99     	call Ciclo_completo_2
 442+ 98E4 21 B7 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 443+ 98E7 CB BE        	res 7,(hl)
 444+ 98E9 C9           	ret
 445+ 98EA
 446+ 98EA              Desplaza_izquierda
 447+ 98EA
 448+ 98EA 3A 9E 88     	ld a,(Vel_left)
 449+ 98ED 47           	ld b,a
 450+ 98EE 2A 99 88     	ld hl,(Puntero_DESPLZ_izq)
 451+ 98F1 23           1 inc hl
 452+ 98F2 23           	inc hl
 453+ 98F3 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 454+ 98F5 22 99 88     	ld (Puntero_DESPLZ_izq),hl
 455+ 98F8 CD A3 8B     	call Extrae_address
 456+ 98FB 22 8D 88     	ld (Puntero_objeto),hl
 457+ 98FE
 458+ 98FE              ; Modifica (Puntero_DESPLZ_der).
 459+ 98FE
 460+ 98FE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 461+ 98FE              ; Cuántos movimientos hemos hecho ??
 462+ 98FE              ; DE contiene (Puntero_DESPLZ_izq).
 463+ 98FE
 464+ 98FE 2A 95 88     7 ld hl,(Indice_Sprite_izq)
 465+ 9901 EB           	ex de,hl
 466+ 9902 A7           	and a
 467+ 9903 ED 52        	sbc hl,de
 468+ 9905 CB 3D        	srl l
 469+ 9907 3E 08        6 ld a,8
 470+ 9909 95           	sub l
 471+ 990A 30 1E        	jr nc,3F
 472+ 990C
 473+ 990C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 474+ 990C              ; B="0".
 475+ 990C
 476+ 990C 04           4 inc b
 477+ 990D 3C           	inc a
 478+ 990E 20 FC        	jr nz,4B
 479+ 9910 78           	ld a,b
 480+ 9911 08           	ex af,af
 481+ 9912 2A 95 88     	ld hl,(Indice_Sprite_izq)
 482+ 9915 23           5 inc hl
 483+ 9916 23           	inc hl
 484+ 9917 10 FC        	djnz 5B
 485+ 9919 22 99 88     	ld (Puntero_DESPLZ_izq),hl
 486+ 991C CD A3 8B     	call Extrae_address
 487+ 991F 22 8D 88     	ld (Puntero_objeto),hl
 488+ 9922
 489+ 9922              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 490+ 9922              ; _(Posicion_actual).
 491+ 9922
 492+ 9922 21 8B 88     	ld hl,Posicion_actual
 493+ 9925 35           	dec (hl)
 494+ 9926 08           	ex af,af
 495+ 9927 6F           	ld l,a
 496+ 9928 18 DD        	jr 6B
 497+ 992A
 498+ 992A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 499+ 992A
 500+ 992A 47           3 ld b,a
 501+ 992B 2A 93 88     	ld hl,(Indice_Sprite_der)
 502+ 992E 23           2 inc hl
 503+ 992F 23           	inc hl
 504+ 9930 10 FC        	djnz 2B
 505+ 9932 22 97 88     	ld (Puntero_DESPLZ_der),hl
 506+ 9935 C9           8 ret
 507+ 9936
 508+ 9936              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9936              ;
 510+ 9936              ;	modifica_parametros_1er_DESPLZ
 511+ 9936              ;
 512+ 9936              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 513+ 9936              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 514+ 9936              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 515+ 9936
 516+ 9936 3A 91 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 517+ 9939 A7           	and a
 518+ 993A 20 1E        	jr nz,1F
 519+ 993C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 520+ 993D 32 91 88         ld (CTRL_DESPLZ),a
 521+ 9940 21 8A 88     	ld hl,Columns
 522+ 9943 34           	inc (hl)
 523+ 9944 3A 9D 88     	ld a,(Cuad_objeto)
 524+ 9947 E6 01        	and 1
 525+ 9949 20 0F        	jr nz,1F
 526+ 994B 2A 8B 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 527+ 994E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 528+ 994F 22 8B 88     	ld (Posicion_actual),hl
 529+ 9952 CD 0C 9A     	call Genera_coordenadas
 530+ 9955 CD B1 99     	call Dec_CTRL_DESPLZ
 531+ 9958 18 03        	jr 2F
 532+ 995A CD B1 99     1 call Dec_CTRL_DESPLZ
 533+ 995D C9           2 ret
 534+ 995E
 535+ 995E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 536+ 995E
 537+ 995E 3A 91 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 538+ 9961 FE F7        	cp $f7
 539+ 9963 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 540+ 9965 30 2C        	jr nc,3F
 541+ 9967
 542+ 9967              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 543+ 9967
 544+ 9967 06 00        	ld b,0
 545+ 9969 04           4 inc b
 546+ 996A 3C           	inc a
 547+ 996B FE F7        	cp $f7
 548+ 996D 20 FA        	jr nz,4B
 549+ 996F 3E FF        	ld a,$ff
 550+ 9971 90           	sub b
 551+ 9972 32 91 88     	ld (CTRL_DESPLZ),a
 552+ 9975 18 1C        	jr 3F
 553+ 9977
 554+ 9977              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 555+ 9977
 556+ 9977 21 8A 88     1 ld hl,Columns
 557+ 997A 35           	dec (hl)
 558+ 997B AF           	xor a
 559+ 997C 32 91 88     	ld (CTRL_DESPLZ),a
 560+ 997F 3A 9D 88     	ld a,(Cuad_objeto)
 561+ 9982 E6 01        	and 1
 562+ 9984 28 0A        	jr z,2F
 563+ 9986 2A 8B 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 564+ 9989 2B           	dec hl
 565+ 998A 22 8B 88     	ld (Posicion_actual),hl
 566+ 998D CD 0C 9A     	call Genera_coordenadas
 567+ 9990
 568+ 9990              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 569+ 9990
 570+ 9990 CD CD 8B     2 call Inicia_puntero_objeto_izq
 571+ 9993 C9           3 ret
 572+ 9994
 573+ 9994              ; ---------- ---------- ---------- ---------- ---------- ----------
 574+ 9994              ;
 575+ 9994              ;	19/10/22
 576+ 9994              ;
 577+ 9994              ;	(cp 29) para un Amadeus de 3 Columns.
 578+ 9994              ;	(cp 30)   ""  ""    ""     2 Columns.
 579+ 9994
 580+ 9994 3A 8F 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 581+ 9997 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 582+ 9999 C9           	ret
 583+ 999A
 584+ 999A              ; ---------- ---------- ---------- ---------- ---------- ----------
 585+ 999A              ;
 586+ 999A              ;	19/10/22
 587+ 999A              ;
 588+ 999A              ;	(cp 2) para un Amadeus de 3 Columns.
 589+ 999A              ;	(cp 1)   ""  ""    ""     2 Columns.
 590+ 999A
 591+ 999A 3A 8F 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 592+ 999D FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 593+ 999F C9           	ret
 594+ 99A0
 595+ 99A0              ; ---------- ---------- ---------- ---------- ---------- ----------
 596+ 99A0              ;
 597+ 99A0              ;	24/7/22
 598+ 99A0              ;
 599+ 99A0              ;	Inc_CTRL_DESPLZ
 600+ 99A0              ;
 601+ 99A0              ;
 602+ 99A0              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 603+ 99A0
 604+ 99A0 21 91 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 605+ 99A3 3A 9F 88     	ld a,(Vel_right)
 606+ 99A6 A7           	and a
 607+ 99A7 28 06        	jr z,1F
 608+ 99A9 47           	ld b,a
 609+ 99AA 34           3 inc (hl)
 610+ 99AB 10 FD        	djnz 3B
 611+ 99AD 18 01        	jr 2F
 612+ 99AF 34           1 inc (hl)
 613+ 99B0 C9           2 ret
 614+ 99B1
 615+ 99B1              ; ---------- ---------- ---------- ---------- ---------- ----------
 616+ 99B1              ;
 617+ 99B1              ;	5/2/23
 618+ 99B1              ;
 619+ 99B1              ;	Dec_CTRL_DESPLZ
 620+ 99B1              ;
 621+ 99B1              ;
 622+ 99B1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 623+ 99B1
 624+ 99B1 21 91 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 625+ 99B4 3A 9E 88     	ld a,(Vel_left)
 626+ 99B7 A7           	and a
 627+ 99B8 28 06        	jr z,1F
 628+ 99BA 47           	ld b,a
 629+ 99BB 35           3 dec (hl)
 630+ 99BC 10 FD        	djnz 3B
 631+ 99BE 18 01        	jr 2F
 632+ 99C0 35           1 dec (hl)
 633+ 99C1 C9           2 ret
 634+ 99C2
 635+ 99C2              ; ---------- ---------- ---------- ---------- ---------- ----------
 636+ 99C2
 637+ 99C2 2A 8B 88     Reaparece_derecha ld hl,(Posicion_actual)
 638+ 99C5 01 1F 00     	ld bc,31
 639+ 99C8 A7           	and a
 640+ 99C9 ED 4A        	adc hl,bc
 641+ 99CB 22 8B 88     	ld (Posicion_actual),hl
 642+ 99CE 21 B7 88     	ld hl,Ctrl_0														; $xxx1
 643+ 99D1 CB C6        	set 0,(hl)
 644+ 99D3 C9           	ret
 645+ 99D4
 646+ 99D4              ; ---------- ---------- ---------- ---------- ---------- ----------
 647+ 99D4
 648+ 99D4 2A 8B 88     Reaparece_izquierda ld hl,(Posicion_actual)
 649+ 99D7 01 1F 00     	ld bc,31
 650+ 99DA A7           	and a
 651+ 99DB ED 42        	sbc hl,bc
 652+ 99DD 22 8B 88     	ld (Posicion_actual),hl 											; $xx1x
 653+ 99E0 21 B7 88     	ld hl,Ctrl_0
 654+ 99E3 CB CE        	set 1,(hl)
 655+ 99E5 C9           	ret
 656+ 99E6
 657+ 99E6              ; ---------- ---------- ---------- ---------- ---------- ----------
 658+ 99E6
 659+ 99E6 24           Reaparece_abajo inc h
 660+ 99E7 01 E0 17     	ld bc,$17e0
 661+ 99EA A7           	and a
 662+ 99EB ED 4A        	adc hl,bc
 663+ 99ED 22 8B 88     	ld (Posicion_actual),hl
 664+ 99F0 21 B7 88     	ld hl,Ctrl_0
 665+ 99F3 CB D6        	set 2,(hl)
 666+ 99F5 C9           	ret
 667+ 99F6
 668+ 99F6              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 99F6
 670+ 99F6 01 E0 17     Reaparece_arriba ld bc,$17e0
 671+ 99F9 A7           	and a
 672+ 99FA ED 42        	sbc hl,bc
 673+ 99FC 22 8B 88     	ld (Posicion_actual),hl
 674+ 99FF 21 B7 88     	ld hl,Ctrl_0
 675+ 9A02 CB DE        	set 3,(hl)
 676+ 9A04 C9           	ret
 677+ 9A05
 678+ 9A05              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 679+ 9A05
 680+ 9A05 2A 9B 88     Reinicio ld hl,(Posicion_inicio)
 681+ 9A08 22 8B 88     	ld (Posicion_actual),hl
 682+ 9A0B C9           	ret
# file closed: Direcciones.asm
1194  9A0C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9A0C              ; ------------------------------------------------------------------------
   2+ 9A0C              ;
   3+ 9A0C              ;	02/04/23
   4+ 9A0C              ;
   5+ 9A0C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9A0C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9A0C              ;
   8+ 9A0C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9A0C              ;
  10+ 9A0C              ;	Modifica: A,BC y DE.
  11+ 9A0C
  12+ 9A0C C5           Genera_coordenadas push bc
  13+ 9A0D E5           	push hl
  14+ 9A0E D5           	push de
  15+ 9A0F
  16+ 9A0F 2A 8B 88     	ld hl,(Posicion_actual)
  17+ 9A12
  18+ 9A12 7D           	ld a,l
  19+ 9A13 E6 1F        	and $1f
  20+ 9A15 32 8F 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9A18
  22+ 9A18 CD CC 96     	call calcula_tercio
  23+ 9A1B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9A1C
  25+ 9A1C 1E 00        	ld e,0
  26+ 9A1E 7D           	ld a,l
  27+ 9A1F E6 E0        	and $e0
  28+ 9A21 28 01        	jr z,1F
  29+ 9A23 04           	inc b
  30+ 9A24
  31+ 9A24 04           1 inc b
  32+ 9A25 05           	dec b
  33+ 9A26 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9A28              ;														; _ , salimos.
  35+ 9A28 1C           3 inc e
  36+ 9A29 D6 20        	sub 32
  37+ 9A2B 20 FB        	jr nz,3B
  38+ 9A2D 10 F5        	djnz 1B
  39+ 9A2F
  40+ 9A2F 7B           2 ld a,e
  41+ 9A30 32 90 88     	ld (Coordenada_y),a
  42+ 9A33
  43+ 9A33 D1           	pop de
  44+ 9A34 E1           	pop hl
  45+ 9A35 C1           	pop bc
  46+ 9A36
  47+ 9A36 C9           	ret
  48+ 9A37
  49+ 9A37              ; ------------------------------------------------------------------------
  50+ 9A37              ;	28/03/23
  51+ 9A37              ;
  52+ 9A37              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9A37              ;	Fila superior "0", Columna izquierda "0".
  54+ 9A37              ;
  55+ 9A37              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9A37              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9A37              ;
  58+ 9A37              ;		DE="$120d"
  59+ 9A37              ;
  60+ 9A37              ;		D, (Coordenada_X), Columnas, $12
  61+ 9A37              ;		E, (Coordenada_y), Filas, $0d
  62+ 9A37              ;
  63+ 9A37              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9A37
  65+ 9A37              ;	Modifica: A,BC y DE.
  66+ 9A37
  67+ 9A37
  68+ 9A37              Genera_coordenadas_disparo
  69+ 9A37
  70+ 9A37              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9A37
  72+ 9A37 7D           	ld a,l
  73+ 9A38 E6 1F        	and $1f
  74+ 9A3A 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9A3B CD CC 96     	call calcula_tercio
  76+ 9A3E 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9A3F 1E 00        	ld e,0
  78+ 9A41 7D           	ld a,l
  79+ 9A42 E6 E0        	and $e0
  80+ 9A44 28 01        	jr z,1F
  81+ 9A46 04           	inc b
  82+ 9A47 1C           1 inc e
  83+ 9A48 D6 20        	sub 32
  84+ 9A4A 20 FB        	jr nz,1B
  85+ 9A4C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9A4E C9           	ret
  87+ 9A4F
# file closed: Genera_coordenadas.asm
1195  9A4F              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9A4F
   2+ 9A4F
   3+ 9A4F              ;   11/8/22
   4+ 9A4F              ;
   5+ 9A4F              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9A4F              ;
   7+ 9A4F              ;   Mov_obj.asm
   8+ 9A4F              ;
   9+ 9A4F              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9A4F              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9A4F              ;
  12+ 9A4F              ;   Codificación:
  13+ 9A4F              ;
  14+ 9A4F              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9A4F
  16+ 9A4F              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9A4F
  18+ 9A4F 02 40 00     Arriba db 2,%01000000,0
  19+ 9A52 02 80 00     Abajo db 2,%10000000,0
  20+ 9A55 02 20 00     Derecha db 2,%00100000,0
  21+ 9A58 02 10 00     Izquierda db 2,%00010000,0
  22+ 9A5B 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9A5F 60 42 60 40
  22+ 9A63 63
  23+ 9A64 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9A68 22 A3 80 A0
  24+ 9A6C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9A70 84 A0 83 A0
  25+ 9A74 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9A78 80 A3 22 A0
  26+ 9A7C 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9A80 40 60 42 60
  27+ 9A84 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9A88
  29+ 9A88 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9A8C 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9A90 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9A94 84 00
  32+ 9A96 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9A9A 84 00
  33+ 9A9C 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9AA0 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9AA4 1F 1F 1F 1F
  35+ 9AA8 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9AAC 1F 1F 1F 1F
  35+ 9AB0 1F
  36+ 9AB1 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9AB5 2F 2F 2F 2F
  36+ 9AB9 2F 2F
  37+ 9ABB 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9ABF 2F 2F 00
  38+ 9AC2
  39+ 9AC2              ; ----- ----- ----- ----- -----
  40+ 9AC2
  41+ 9AC2 A0 9A        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9AC4 9C 9A        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9AC6 58 9A        Indice_mov_Izquierda defw Izquierda
  44+ 9AC8 55 9A        Indice_mov_Derecha defw Derecha
  45+ 9ACA 52 9A        Indice_mov_Abajo defw Abajo
  46+ 9ACC 4F 9A        Indice_mov_Arriba defw Arriba
  47+ 9ACE 8C 9A        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9AD0 90 9A        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9AD2 88 9A        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9AD4 96 9A        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9AD6 5B 9A        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9AD8              ; ----- ----- ----- ----- -----
  53+ 9AD8
  54+ 9AD8 3A BE 88     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9ADB A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9ADC 28 02            jr z,1F
  57+ 9ADE 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9AE0 3A BF 88     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9AE3 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9AE5 32 BF 88         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9AE8              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9AE8 2A BC 88         ld hl,(Puntero_mov)
  63+ 9AEB 7E               ld a,(hl)
  64+ 9AEC 32 BE 88         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9AEF 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9AF0 22 BC 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9AF3
  68+ 9AF3 3A C0 88     Decoder ld a,(Repetimos_db)
  69+ 9AF6 A7               and a
  70+ 9AF7 20 0C            jr nz,12F
  71+ 9AF9 2A BC 88         ld hl,(Puntero_mov)
  72+ 9AFC 7E               ld a,(hl)
  73+ 9AFD A7               and a
  74+ 9AFE 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9B00 E6 0F            and $0f
  76+ 9B02 32 C0 88         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9B05              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9B05 2A BC 88     12 ld hl,(Puntero_mov)
  79+ 9B08 CB 7E            bit 7,(hl)
  80+ 9B0A 28 03            jr z,2F
  81+ 9B0C CD FE 96         call Mov_down
  82+ 9B0F 2A BC 88     2 ld hl, (Puntero_mov)
  83+ 9B12 CB 76            bit 6,(hl)
  84+ 9B14 28 03            jr z,3F
  85+ 9B16 CD 2C 97         call Mov_up
  86+ 9B19 2A BC 88     3 ld hl, (Puntero_mov)
  87+ 9B1C CB 6E            bit 5,(hl)
  88+ 9B1E 28 03            jr z,4F
  89+ 9B20 CD 5A 97         call Mov_right
  90+ 9B23 2A BC 88     4 ld hl, (Puntero_mov)
  91+ 9B26 CB 66            bit 4,(hl)
  92+ 9B28 28 03            jr z,5F
  93+ 9B2A CD 78 98         call Mov_left
  94+ 9B2D
  95+ 9B2D              ; ---------- --------- --------- ---------- ----------
  96+ 9B2D
  97+ 9B2D 3A C0 88     5 ld a,(Repetimos_db)
  98+ 9B30 A7               and a
  99+ 9B31 28 07            jr z,6F
 100+ 9B33 3D               dec a
 101+ 9B34 32 C0 88         ld (Repetimos_db),a
 102+ 9B37 28 01            jr z,6f
 103+ 9B39 C9           11 ret
 104+ 9B3A 21 BE 88     6 ld hl,Contador_db_mov
 105+ 9B3D 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9B3E 2A BC 88         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9B41 23               inc hl
 108+ 9B42 22 BC 88         ld (Puntero_mov),hl
 109+ 9B45 18 F2            jr 11B
 110+ 9B47 2A BA 88     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9B4A 3A BF 88         ld a,(Incrementa_puntero)
 112+ 9B4D 47               ld b,a
 113+ 9B4E 23           8 inc hl
 114+ 9B4F 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9B51 5E               ld e,(hl)
 116+ 9B52 23               inc hl
 117+ 9B53 56               ld d,(hl)
 118+ 9B54 EB               ex de,hl
 119+ 9B55 22 BC 88         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9B58 18 DF            jr 11B
 121+ 9B5A
 122+ 9B5A              ; ---------- --------- --------- ---------- ----------
 123+ 9B5A              ;
 124+ 9B5A              ;   11/8/22
 125+ 9B5A              ;
 126+ 9B5A              ;   Prepara_Puntero_mov
 127+ 9B5A
 128+ 9B5A E5           Prepara_Puntero_mov push hl
 129+ 9B5B D5               push de
 130+ 9B5C 2A BA 88         ld hl,(Puntero_indice_mov)
 131+ 9B5F 5E               ld e,(hl)
 132+ 9B60 23               inc hl
 133+ 9B61 56               ld d,(hl)
 134+ 9B62 EB               ex de,hl
 135+ 9B63 22 BC 88         ld (Puntero_mov),hl
 136+ 9B66 D1               pop de
 137+ 9B67 E1               pop hl
 138+ 9B68 C9               ret
 139+ 9B69
 140+ 9B69              ; ---------- --------- --------- ---------- ----------
 141+ 9B69              ;
 142+ 9B69              ;   11/8/22
 143+ 9B69              ;
 144+ 9B69              ;   Reinicia_el_movimiento
 145+ 9B69
 146+ 9B69 CD 5A 9B     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9B6C AF               xor a
 148+ 9B6D 32 BE 88         ld (Contador_db_mov),a
 149+ 9B70 32 BF 88         ld (Incrementa_puntero),a
 150+ 9B73 C3 D8 9A         jp Movimiento
 151+ 9B76 C9               ret
 152+ 9B77              ; ---------- --------- --------- ---------- ----------
 153+ 9B77
 154+ 9B77
 155+ 9B77
 156+ 9B77
 157+ 9B77
 158+ 9B77
 159+ 9B77
 160+ 9B77
 161+ 9B77
 162+ 9B77
 163+ 9B77
 164+ 9B77
 165+ 9B77
 166+ 9B77
 167+ 9B77
 168+ 9B77
 169+ 9B77
 170+ 9B77
# file closed: Patrones_de_mov.asm
1196  9B77              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9B77              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9B77              ;
   3+ 9B77              ;	3/1/23
   4+ 9B77              ;
   5+ 9B77              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9B77
   7+ 9B77              ;	ADC HL,SP	LD (addr),SP
   8+ 9B77              ;	ADD HL,SP	LD SP,(addr)
   9+ 9B77              ;	ADD IX,SP	LD SP,nn
  10+ 9B77              ; 	ADD IY,SP	LD SP,HL
  11+ 9B77              ;				LD SP,IX
  12+ 9B77              ;	DEC SP		LD SP,IY
  13+ 9B77
  14+ 9B77              ;	EX (SP),HL
  15+ 9B77              ;	EX (SP),IX
  16+ 9B77              ;	EX (SP),IY
  17+ 9B77
  18+ 9B77              ;	INC SP
  19+ 9B77
  20+ 9B77
  21+ 9B77                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 D5 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A C6 88         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A DB 88         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A D9 88     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 DB 88         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 D9 88     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B D5 88  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1197  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1198  7FE6
1199  7FE6              	SAVESNA "Pruebas.sna", START
1200  7FE6
1201  7FE6
1202  7FE6
1203  7FE6
# file closed: Banco_de_pruebas.asm
