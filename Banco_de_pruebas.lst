# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD DC 87     	call Frame
  15  A104              ; Debugggggg
  16  A104 3A 2B 87     	ld a,(Ctrl_1)
  17  A107 CB 5F        	bit 3,a
  18  A109              ;	jr nz,$
  19  A109              ; Debugggggg
  20  A109 ED 4D        	reti
  21  A10B
  22  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  23  A10B
  24  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  25  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Caja_1
  98+ 846A F0 84        	defw Caja_2
  99+ 846C 2D 85        	defw Caja_3
 100+ 846E 6A 85        	defw Caja_4
 101+ 8470 A7 85        	defw Caja_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 8484
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 848F
 128+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8490
 130+ 8490 00 00        	db 0,0											; Variables_de_borrado
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00        	defw 0											;	" " " " " " "
 133+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 849A
 135+ 849A 00 00        	db 0,0											; Variables_de_pintado
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00        	defw 0											;	" " " " " " "
 138+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 139+ 84A4
 140+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 141+ 84A7
 142+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 143+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 144+ 84AE
 145+ 84AE 00           	db 0 											; (Columnas).
 146+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 147+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 148+ 84B3
 149+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 150+ 84B3
 151+ 84B3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 152+ 84B5 00 00        	defw 0											; (Posicion_actual).
 153+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 154+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 155+ 84BC
 156+ 84BC 00           	db %00000000 									; (Attr).
 157+ 84BD
 158+ 84BD 00 00        	defw 0											; (Indice_Sprite_der).
 159+ 84BF 00 00        	defw 0											; (Indice_Sprite_izq).
 160+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 161+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 162+ 84C5
 163+ 84C5 00 00        	defw 0											; (Posicion_inicio).
 164+ 84C7 00           	db 0											; (Cuad_objeto).
 165+ 84C8
 166+ 84C8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 167+ 84CC
 168+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 169+ 84CD
 170+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 171+ 84CF 00 00        	defw 0											;	" " " " " " "
 172+ 84D1 00 00        	defw 0											;	" " " " " " "
 173+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 174+ 84D7
 175+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 176+ 84D9 00 00        	defw 0											;	" " " " " " "
 177+ 84DB 00 00        	defw 0											;	" " " " " " "
 178+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 179+ 84E1
 180+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 181+ 84E4
 182+ 84E4 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 183+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 184+ 84EB
 185+ 84EB 00           	db 0 											; (Columnas).
 186+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 187+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 188+ 84F0
 189+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 190+ 84F0
 191+ 84F0 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 84F2 00 00        	defw 0											; (Posicion_actual).
 193+ 84F4 00 00        	defw 0 											; (Puntero_objeto).
 194+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 84F9
 196+ 84F9 00           	db %00000000 									; (Attr).
 197+ 84FA
 198+ 84FA 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 84FC 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 8502
 203+ 8502 00 00        	defw 0											; (Posicion_inicio).
 204+ 8504 00           	db 0											; (Cuad_objeto).
 205+ 8505
 206+ 8505 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8509
 208+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 850A
 210+ 850A 00 00        	db 0,0										    ; Variables_de_borrado
 211+ 850C 00 00        	defw 0											;	" " " " " " "
 212+ 850E 00 00        	defw 0											;	" " " " " " "
 213+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 214+ 8514
 215+ 8514 00 00        	db 0,0											; Variables_de_pintado
 216+ 8516 00 00        	defw 0											;	" " " " " " "
 217+ 8518 00 00        	defw 0											;	" " " " " " "
 218+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 219+ 851E
 220+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 221+ 8521
 222+ 8521 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 223+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8528
 225+ 8528 00           	db 0 											; (Columnas).
 226+ 8529 00 00        	defw 0											; (Limite_horizontal).
 227+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 228+ 852D
 229+ 852D              ; ---------- ---------- ---------- ---------- ----------
 230+ 852D
 231+ 852D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 232+ 852F 00 00        	defw 0											; (Posicion_actual).
 233+ 8531 00 00        	defw 0 											; (Puntero_objeto).
 234+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 8536
 236+ 8536 00           	db %00000000 									; (Attr).
 237+ 8537
 238+ 8537 00 00        	defw 0											; (Indice_Sprite_der).
 239+ 8539 00 00        	defw 0											; (Indice_Sprite_izq).
 240+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 241+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 242+ 853F
 243+ 853F 00 00        	defw 0											; (Posicion_inicio).
 244+ 8541 00           	db 0											; (Cuad_objeto).
 245+ 8542
 246+ 8542 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 247+ 8546
 248+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 249+ 8547
 250+ 8547 00 00        	db 0,0										    ; Variables_de_borrado
 251+ 8549 00 00        	defw 0											;	" " " " " " "
 252+ 854B 00 00        	defw 0											;	" " " " " " "
 253+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 254+ 8551
 255+ 8551 00 00        	db 0,0											; Variables_de_pintado
 256+ 8553 00 00        	defw 0											;	" " " " " " "
 257+ 8555 00 00        	defw 0											;	" " " " " " "
 258+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 855B
 260+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 261+ 855E
 262+ 855E 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 263+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 264+ 8565
 265+ 8565 00           	db 0 											; (Columnas).
 266+ 8566 00 00        	defw 0											; (Limite_horizontal).
 267+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 268+ 856A
 269+ 856A              ; ---------- ---------- ---------- ---------- ----------
 270+ 856A
 271+ 856A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 272+ 856C 00 00        	defw 0											; (Posicion_actual).
 273+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 274+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 275+ 8573
 276+ 8573 00           	db %00000000 									; (Attr).
 277+ 8574
 278+ 8574 00 00        	defw 0											; (Indice_Sprite_der).
 279+ 8576 00 00        	defw 0											; (Indice_Sprite_izq).
 280+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 281+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 282+ 857C
 283+ 857C 00 00        	defw 0											; (Posicion_inicio).
 284+ 857E 00           	db 0											; (Cuad_objeto).
 285+ 857F
 286+ 857F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 287+ 8583
 288+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 289+ 8584
 290+ 8584 00 00        	db 0,0										    ; Variables_de_borrado
 291+ 8586 00 00        	defw 0											;	" " " " " " "
 292+ 8588 00 00        	defw 0											;	" " " " " " "
 293+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 294+ 858E
 295+ 858E 00 00        	db 0,0											; Variables_de_pintado
 296+ 8590 00 00        	defw 0											;	" " " " " " "
 297+ 8592 00 00        	defw 0											;	" " " " " " "
 298+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 299+ 8598
 300+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 301+ 859B
 302+ 859B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 303+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 304+ 85A2
 305+ 85A2 00           	db 0 											; (Columnas).
 306+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 307+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 308+ 85A7
 309+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 310+ 85A7
 311+ 85A7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 312+ 85A9 00 00        	defw 0											; (Posicion_actual).
 313+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 314+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 315+ 85B0
 316+ 85B0 00           	db %00000000 									; (Attr).
 317+ 85B1
 318+ 85B1 00 00        	defw 0											; (Indice_Sprite_der).
 319+ 85B3 00 00        	defw 0											; (Indice_Sprite_izq).
 320+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 321+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 322+ 85B9
 323+ 85B9 00 00        	defw 0											; (Posicion_inicio).
 324+ 85BB 00           	db 0											; (Cuad_objeto).
 325+ 85BC
 326+ 85BC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 327+ 85C0
 328+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 329+ 85C1
 330+ 85C1 00 00        	db 0,0										    ; Variables_de_borrado
 331+ 85C3 00 00        	defw 0											;	" " " " " " "
 332+ 85C5 00 00        	defw 0											;	" " " " " " "
 333+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 334+ 85CB
 335+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 336+ 85CD 00 00        	defw 0											;	" " " " " " "
 337+ 85CF 00 00        	defw 0											;	" " " " " " "
 338+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 85D5
 340+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 341+ 85D8
 342+ 85D8 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 343+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 344+ 85DF
 345+ 85DF 00           	db 0 											; (Columnas).
 346+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 347+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 348+ 85E4
 349+ 85E4              	; -------------------------------------------------------------------------------------
 350+ 85E4              ;
 351+ 85E4              ;	13/05/23
 352+ 85E4              ;
 353+ 85E4              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 354+ 85E4
 355+ 85E4              Indice_de_entidades
 356+ 85E4
 357+ 85E4 EE 85        	defw Entidad_1
 358+ 85E6 FE 85        	defw Entidad_2
 359+ 85E8 0E 86        	defw Entidad_3
 360+ 85EA 1E 86        	defw Entidad_4
 361+ 85EC 2E 86        	defw Entidad_5
 362+ 85EE
 363+ 85EE              ;	BADSAT, (Satélite malvado).
 364+ 85EE
 365+ 85EE 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 366+ 85F0 04           	db %00000100									; (Attr).
 367+ 85F1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 368+ 85F3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 369+ 85F5 81 47        	defw $4781                                      ; (Posicion_inicio).
 370+ 85F7 01           	db 1											; (Cuad_objeto).
 371+ 85F8 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 372+ 85FC C2 98        	defw Indice_mov_Onda_senoidal  		            ; (Puntero_indice_mov)
 373+ 85FE
 374+ 85FE 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 375+ 8600 02           	db %00000010									; (Attr).
 376+ 8601 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 377+ 8603 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 378+ 8605 5E 48        	defw $485e                                      ; (Posicion_inicio).
 379+ 8607 02           	db 2											; (Cuad_objeto).
 380+ 8608 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 381+ 860C C0 98        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 382+ 860E
 383+ 860E 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 384+ 8610 04           	db %00000100									; (Attr).
 385+ 8611 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 386+ 8613 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 387+ 8615 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 388+ 8617 01           	db 1											; (Cuad_objeto).
 389+ 8618 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 390+ 861C B4 98        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 391+ 861E
 392+ 861E 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 393+ 8620 01           	db %00000001									; (Attr).
 394+ 8621 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 395+ 8623 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 396+ 8625 BE 47        	defw $47be                                      ; (Posicion_inicio).
 397+ 8627 02           	db 2											; (Cuad_objeto).
 398+ 8628 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 399+ 862C C0 98        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 400+ 862E
 401+ 862E 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 402+ 8630 01           	db %00000001									; (Attr).
 403+ 8631 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 404+ 8633 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 405+ 8635 0A 40        	defw $400a                                      ; (Posicion_inicio).
 406+ 8637 01           	db 1											; (Cuad_objeto).
 407+ 8638 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 408+ 863C B6 98        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  26  863E              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 863E              ; 13/05/23
   2+ 863E
   3+ 863E              Indice_de_niveles
   4+ 863E
   5+ 863E 4C 86        	defw Nivel_1
   6+ 8640 51 86        	defw Nivel_2
   7+ 8642 56 86        	defw Nivel_3
   8+ 8644 5B 86        	defw Nivel_4
   9+ 8646 60 86        	defw Nivel_5
  10+ 8648
  11+ 8648              ;	...
  12+ 8648              ;	...
  13+ 8648              ;	+ Niveles ...
  14+ 8648
  15+ 8648 00 00        	defw 0
  16+ 864A 00 00        	defw 0
  17+ 864C
  18+ 864C 01 02 03 04  Nivel_1 db 1,2,3,4,5 							; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  18+ 8650 05
  19+ 8651
  20+ 8651 02 01 01 01  Nivel_2 db 2,1,1,1,1
  20+ 8655 01
  21+ 8656
  22+ 8656 03 01 01 01  Nivel_3 db 3,1,1,1,1
  22+ 865A 01
  23+ 865B
  24+ 865B 04 01 01 01  Nivel_4 db 4,1,1,1,1
  24+ 865F 01
  25+ 8660
  26+ 8660 05 01 01 01  Nivel_5 db 5,1,1,1,1
  26+ 8664 01
  27+ 8665
  28+ 8665              ;---------------------------------------------------------------------------------------------------------------
  29+ 8665              ;
  30+ 8665              ;   13/5/23
  31+ 8665              ;
  32+ 8665              ;	Destruye A,BC,HL,DE
  33+ 8665
  34+ 8665              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_1
  35+ 8665              ;	_del juego.
  36+ 8665
  37+ 8665              Prepara_cajas
  38+ 8665
  39+ 8665              ; Preparamos los punteros de las cajas.
  40+ 8665
  41+ 8665 21 68 84     	ld hl,Indice_de_cajas
  42+ 8668 CD A3 89     	call Extrae_address
  43+ 866B CD B3 86     	call Avanza_caja
  44+ 866E
  45+ 866E 3A 59 87     	ld a,(Nivel)
  46+ 8671 CD A4 86     	call PreparaBC
  47+ 8674
  48+ 8674 21 3E 86     	ld hl,Indice_de_niveles
  49+ 8677 CD AC 86     	call SBC_HL_con_BC_y_Extrae
  50+ 867A 22 5C 87     	ld (Datos_de_nivel),hl						; HL está en los datos del nivel correspondiente.
  51+ 867D
  52+ 867D 06 05        	ld b,5										; B actuará como contador de cajas.
  53+ 867F C5           1	push bc
  54+ 8680
  55+ 8680 7E           	ld a,(hl)										; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  56+ 8681 CD A4 86     	call PreparaBC
  57+ 8684
  58+ 8684 21 E4 85     	ld hl,Indice_de_entidades
  59+ 8687 CD AC 86     	call SBC_HL_con_BC_y_Extrae
  60+ 868A 22 36 87         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  61+ 868D
  62+ 868D CD BD 86     	call Datos_de_entidad_a_caja
  63+ 8690
  64+ 8690 2A 30 87     	ld hl,(Indice_restore_caja)
  65+ 8693 CD A3 89     	call Extrae_address
  66+ 8696 CD B3 86     	call Avanza_caja
  67+ 8699
  68+ 8699 2A 5C 87     	ld hl,(Datos_de_nivel)
  69+ 869C 23           	inc hl
  70+ 869D 22 5C 87     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
  71+ 86A0
  72+ 86A0 C1           	pop bc
  73+ 86A1 10 DC        	djnz 1B
  74+ 86A3 C9           	ret
  75+ 86A4
  76+ 86A4 CB 27        PreparaBC sla a
  77+ 86A6 D6 02        	sub 2										; [(Nivel)*2]-2.
  78+ 86A8 4F           	ld c,a
  79+ 86A9 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
  80+ 86AB C9           	ret
  81+ 86AC
  82+ 86AC A7           SBC_HL_con_BC_y_Extrae and a
  83+ 86AD ED 4A        	adc hl,bc
  84+ 86AF CD A3 89     	call Extrae_address
  85+ 86B2 C9           	ret
  86+ 86B3
  87+ 86B3 22 2C 87     Avanza_caja	ld (Puntero_store_caja),hl
  88+ 86B6 13           	inc de
  89+ 86B7 13           	inc de
  90+ 86B8 EB           	ex de,hl
  91+ 86B9 22 30 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
  92+ 86BC C9           	ret
  93+ 86BD
  94+ 86BD              Datos_de_entidad_a_caja
  95+ 86BD
  96+ 86BD              ;		; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar Entidad_
  97+ 86BD              ;		; _ la 1ª caja.
  98+ 86BD
  99+ 86BD ED 5B 2C 87  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 100+ 86C1
 101+ 86C1 01 02 00     	ld bc,2
 102+ 86C4 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 103+ 86C6
 104+ 86C6 01 07 00     	ld bc,7
 105+ 86C9 CD E8 86     	call Situa_DE
 106+ 86CC
 107+ 86CC 01 05 00     	ld bc,5
 108+ 86CF ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 109+ 86D1
 110+ 86D1 01 04 00     	ld bc,4
 111+ 86D4 CD E8 86     	call Situa_DE
 112+ 86D7
 113+ 86D7 01 07 00     	ld bc,7
 114+ 86DA ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 115+ 86DC
 116+ 86DC 01 18 00     	ld bc,24
 117+ 86DF CD E8 86     	call Situa_DE
 118+ 86E2
 119+ 86E2 01 02 00     	ld bc,2
 120+ 86E5 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 121+ 86E7
 122+ 86E7 C9           	ret
 123+ 86E8
 124+ 86E8 EB           Situa_DE ex de,hl
 125+ 86E9 A7           	and a
 126+ 86EA ED 4A        	adc hl,bc
 127+ 86EC EB           	ex de,hl
 128+ 86ED C9           	ret
 129+ 86EE
 130+ 86EE              ;---------------------------------------------------------------------------------------------------------------
# file closed: Niveles.asm
  27  86EE
  28  86EE              ; ******************************************************************************************************************************************************************************************
  29  86EE              ; Constantes.
  30  86EE              ; ******************************************************************************************************************************************************************************************
  31  86EE              ;
  32  86EE              ; 8/11/22
  33  86EE              ;
  34  86EE              ; Constantes generales.
  35  86EE              ;
  36  86EE
  37  86EE              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  38  86EE              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  39  86EE              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  40  86EE              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  41  86EE
  42  86EE              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  43  86EE              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  44  86EE              ;                               				        ; De momento situamos este almacén en $7000.
  45  86EE              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  46  86EE              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  47  86EE              ;                               				        ; De momento situamos este almacén en $7060.
  48  86EE
  49  86EE              ; ******************************************************************************************************************************************************************************************
  50  86EE              ; Variables.
  51  86EE              ; ******************************************************************************************************************************************************************************************
  52  86EE              ;
  53  86EE              ; 10/11/22
  54  86EE              ;
  55  86EE              ; Variables de DRAW. (Motor principal).
  56  86EE              ;
  57  86EE              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  58  86EE
  59  86EE 00           Filas db 0												; Filas. [DRAW]
  60  86EF 00           Columns db 0  											; Nº de columnas. [DRAW]
  61  86F0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  62  86F2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  63  86F4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  64  86F5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  65  86F6
  66  86F6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  67  86F6
  68  86F6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  69  86F7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  70  86F7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  71  86F7 00           Attr db 0												; Atributos de la entidad:
  72  86F8
  73  86F8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  74  86F8              ;
  75  86F8              ;	COLORES: 0 ..... NEGRO
  76  86F8              ;    		 1 ..... AZUL
  77  86F8              ; 			 2 ..... ROJO
  78  86F8              ;			 3 ..... MAGENTA
  79  86F8              ; 			 4 ..... VERDE
  80  86F8              ; 			 5 ..... CIAN
  81  86F8              ;			 6 ..... AMARILLO
  82  86F8              ; 			 7 ..... BLANCO
  83  86F8
  84  86F8 00 00        Indice_Sprite_der defw 0
  85  86FA 00 00        Indice_Sprite_izq defw 0
  86  86FC 00 00        Puntero_DESPLZ_der defw 0
  87  86FE 00 00        Puntero_DESPLZ_izq defw 0
  88  8700
  89  8700 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  90  8702 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  91  8703
  92  8703              ; Variables de objeto. (Características).
  93  8703
  94  8703 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  95  8704 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  96  8705 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  97  8706 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  98  8707
  99  8707 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 100  8708              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 101  8708              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 102  8708 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  870A 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  870C 00 00        	defw 0
 105  870E 00 00 00 00  	db 0,0,0,0
 106  8712
 107  8712 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  8714 00 00        	defw 0
 109  8716 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  8718 00 00 00 00  	db 0,0,0,0
 111  871C
 112  871C              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  871C
 114  871C 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  871D              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  871D              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  871D              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  871D              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  871D              ;
 120  871D              ; 														DESCRIPCIÖN:
 121  871D              ;
 122  871D              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  871D              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  871D              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  871D              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  871D              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  871D              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  871D              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  871D              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  871D              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  871D              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  871D              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  871D              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  871D              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  871D              ;
 136  871D              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  871D              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  871D              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  871D
 140  871D 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  871E
 142  871E              ; Movimiento.
 143  871E
 144  871E 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  871F 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  8721 00 00        Puntero_mov defw 0
 147  8723 00           Contador_db_mov db 0
 148  8724 00           Incrementa_puntero db 0
 149  8725 00           Repetimos_db db 0
 150  8726
 151  8726              ; Variables de funcionamiento. [DRAW].
 152  8726
 153  8726 00           Columnas db 0
 154  8727 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  8729              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  8729 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  872A
 158  872A              ; variables de control general.
 159  872A
 160  872A 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 161  872B
 162  872B              ; 61 Bytes por entidad.
 163  872B              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 164  872B              ;					         		---------;      ;---------
 165  872B
 166  872B
 167  872B              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 168  872B
 169  872B 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 170  872C
 171  872C              ;														DESCRIPCIÓN:
 172  872C              ;
 173  872C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 174  872C              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 175  872C              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 176  872C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 177  872C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 178  872C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 179  872C
 180  872C              ; Gestión de ENTIDADES y CAJAS.
 181  872C
 182  872C              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 183  872C 00 00        Puntero_store_caja defw 0
 184  872E 00 00        Puntero_restore_caja defw 0
 185  8730 00 00        Indice_restore_caja defw 0
 186  8732 01           Numero_de_entidades db 1								; Nº de entidades en pantalla, (contando con Amadeus).
 187  8733 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 188  8734              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 189  8734              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 190  8734              ;														; _ (Numero_de_malotes)="0".
 191  8734 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 192  8736 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 193  8738              ;														; _ puntero (Indice_entidades).
 194  8738
 195  8738
 196  8738              ;---------------------------------------------------------------------------------------------------------------
 197  8738              ;
 198  8738              ; Sirven para PINTAR.
 199  8738
 200  8738 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 201  873A              ;														; _variable para almacenar lo posición del puntero_
 202  873A              ; 														; _de pila, SP.
 203  873A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 204  873C              ;														; La utiliza la rutina [Extrae_foto_registros].
 205  873C 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 206  873E              ;														; _el snapshot de los registros de la siguiente entidad.
 207  873E              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 208  873E 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 209  8740              ;														; _el snapshot de los registros del siguiente disparo.
 210  8740              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 211  8740
 212  8740              ;---------------------------------------------------------------------------------------------------------------
 213  8740
 214  8740              ; Gestión de Disparos.
 215  8740
 216  8740 00           Numero_de_disparotes db 0
 217  8741 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 218  8743 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 219  8745 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 220  8746              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 221  8746              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 222  8746 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 223  8748              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 224  8748              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 225  8748              ;														; _produzca colisión.
 226  8748 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 227  874A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 228  874A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 229  874D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 230  874D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 231  8750              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 232  8750
 233  8750              ;---------------------------------------------------------------------------------------------------------------
 234  8750
 235  8750              ; Relojes y temporizaciones.
 236  8750
 237  8750 01           Habilita_disparo_Amadeus db 1
 238  8751 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 239  8752 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 240  8753
 241  8753 01           Habilita_disparo_entidad db 1
 242  8754 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 243  8755 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 244  8756
 245  8756              ;---------------------------------------------------------------------------------------------------------------
 246  8756
 247  8756              ; Gestión de FRAMES.
 248  8756
 249  8756 00           Switch db 0
 250  8757
 251  8757              ; Variables de Raster y localización en pantalla.
 252  8757
 253  8757 00 FF        Temp_Raster defw $ff00
 254  8759
 255  8759              ;---------------------------------------------------------------------------------------------------------------
 256  8759
 257  8759              ; Gestión de NIVELES.
 258  8759
 259  8759 01           Nivel db 1												 ; Nivel actual del juego.
 260  875A 00 00        Puntero_indice_NIVELES defw 0
 261  875C 00 00        Datos_de_nivel defw 0
 262  875E
 263  875E
 264  875E              ; Y todo comienza aquí .....
 265  875E              ;
 266  875E              ; Rutina principal *************************************************************************************************************************************************************************
 267  875E              ;
 268  875E              ;	14/11/22
 269  875E
 270  875E              START
 271  875E
 272  875E 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 273  8761 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 274  8763 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 275  8765 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 276  8767 F3           	DI
 277  8768
 278  8768 3E 07        	ld a,%00000111
 279  876A CD D6 94     	call Cls
 280  876D
 281  876D              ;	call Pinta_FILAS
 282  876D
 283  876D CD 7C 8A     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 284  8770
 285  8770 CD 65 86     4 call Prepara_cajas
 286  8773
 287  8773 CD 4F 89     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 288  8776              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 289  8776 CD 2C 8A     	call Restore_entidad
 290  8779
 291  8779 21 32 87     	ld hl,Numero_de_entidades
 292  877C 46           	ld b,(hl)
 293  877D 04           	inc b
 294  877E 05           	dec b
 295  877F 28 17        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 296  8781
 297  8781              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 298  8781              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 299  8781              ;	Pintamos el resto de entidades:
 300  8781
 301  8781              ;	INICIA ENTIDADES !!!!!
 302  8781
 303  8781 C5           1 push bc  												; Guardo el contador de entidades.
 304  8782 CD A9 89      	call Inicia_Puntero_objeto
 305  8785 CD 26 8F     	call Draw
 306  8788 CD A0 7F     	call Guarda_foto_registros
 307  878B CD F1 89     6 call Store_Restore_cajas	 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 308  878E C1           	pop bc
 309  878F 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 310  8791
 311  8791              ;! Debug
 312  8791 3A 2B 87     	ld a,(Ctrl_1)
 313  8794 CB 5F        	bit 3,a
 314  8796 20 18        	jr nz,5F
 315  8798              ;! Debug
 316  8798
 317  8798              ; 	INICIA AMADEUS !!!!!
 318  8798
 319  8798 CD 53 8A     3 call Restore_Amadeus
 320  879B CD A9 89     	call Inicia_Puntero_objeto
 321  879E CD 26 8F     	call Draw
 322  87A1 CD A0 7F     	call Guarda_foto_registros
 323  87A4
 324  87A4 11 76 84     	ld de,Amadeus_db
 325  87A7 CD 65 8A     	call Store_Amadeus
 326  87AA
 327  87AA              ; 	INICIA DISPAROS !!!!!
 328  87AA
 329  87AA CD 65 89     	call Inicia_Puntero_Disparo_Entidades
 330  87AD CD 6C 89     	call Inicia_Puntero_Disparo_Amadeus
 331  87B0
 332  87B0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 333  87B0
 334  87B0 CD 4F 89     5 call Inicia_punteros_de_cajas
 335  87B3 CD 2C 8A     	call Restore_entidad
 336  87B6
 337  87B6 3A 2B 87     	ld a,(Ctrl_1)
 338  87B9 CB 5F        	bit 3,a
 339  87BB 28 0C        	jr z,6F
 340  87BD
 341  87BD 21 2B 87     	ld hl,Ctrl_1
 342  87C0 CB 9E        	res 3,(hl)
 343  87C2 3E 01        	ld a,1
 344  87C4 32 32 87     	ld (Numero_de_entidades),a
 345  87C7 18 04        	jr 7F
 346  87C9
 347  87C9 3A 32 87     6 ld a,(Numero_de_entidades)
 348  87CC 3C           	inc a
 349  87CD 32 33 87     7 ld (Numero_de_malotes),a
 350  87D0
 351  87D0 AF           	xor a
 352  87D1
 353  87D1 FB           2 ei
 354  87D2 28 FD        	jr z,2B
 355  87D4
 356  87D4 3E 01        	ld a,1
 357  87D6 32 32 87     	ld (Numero_de_entidades),a
 358  87D9 F3           	di
 359  87DA
 360  87DA 18 94        	jr 4B
 361  87DC
 362  87DC              ;	ret
 363  87DC              ; -----------------------------------------------------------------------------------
 364  87DC
 365  87DC              Frame
 366  87DC
 367  87DC              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 368  87DC              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 369  87DC
 370  87DC              ; PINTAMOS.
 371  87DC
 372  87DC 3E 02            ld a,2
 373  87DE D3 FE            out ($fe),a
 374  87E0 CD 2A 92     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 375  87E3 CD 63 92     	call Extrae_foto_disparos
 376  87E6 3E 01            ld a,1
 377  87E8 D3 FE            out ($fe),a
 378  87EA
 379  87EA              ; ----------------------------------------------------------------------
 380  87EA
 381  87EA              ; RELOJES.
 382  87EA
 383  87EA 21 50 87     	ld hl,Habilita_disparo_Amadeus
 384  87ED 11 52 87     	ld de,Temporiza_disparo_Amadeus
 385  87F0 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 386  87F3
 387  87F3 21 53 87     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 388  87F6 11 55 87     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 389  87F9 CD D5 7F     	call Habilita_disparos
 390  87FC
 391  87FC              ; COLISIONES.
 392  87FC
 393  87FC CD C0 8E     	call Selector_de_impactos
 394  87FF
 395  87FF              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 396  87FF              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 397  87FF              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 398  87FF
 399  87FF AF           	xor a
 400  8800 32 45 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 401  8803
 402  8803 CD 4F 89     	call Inicia_punteros_de_cajas
 403  8806 CD 2C 8A     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 404  8809              ; 														; _ en DRAW.
 405  8809 3A EE 86     	ld a,(Filas)
 406  880C A7           	and a
 407  880D 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 408  880F CD 3E 8A     	call Incrementa_punteros_de_cajas
 409  8812 18 F2        	jr 12B
 410  8814
 411  8814              ; ---------------------------------------------------------------------------------------
 412  8814
 413  8814 CD 3E 8D     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 414  8817 21 00 70     	ld hl,Album_de_fotos
 415  881A 22 3C 87         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 416  881D              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 417  881D 3A 32 87     	ld a,(Numero_de_entidades)
 418  8820 47               ld b,a
 419  8821 A7           	and a
 420  8822 20 07        	jr nz,2F
 421  8824
 422  8824 21 2B 87     	ld hl,Ctrl_1
 423  8827 CB DE        	set 3,(hl)											; Señal de reinicio.
 424  8829 18 59        	jr 4F
 425  882B
 426  882B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 427  882B
 428  882B              ; Código que ejecutamos con cada entidad:
 429  882B
 430  882B              ; Impacto ???
 431  882B
 432  882B C5           2 push bc 												; Nº de entidades.
 433  882C
 434  882C 3A 07 87     	ld a,(Impacto)
 435  882F A7           	and a
 436  8830 28 0A        	jr z,8F
 437  8832
 438  8832              ; Hay Impacto en esta entidad.
 439  8832
 440  8832 CD 06 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 441  8835 CD 6E 8A     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 442  8838 21 32 87     	ld hl,Numero_de_entidades							; Una alimaña menos.
 443  883B 35           	dec (hl)
 444  883C
 445  883C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 446  883C              ; _con las coordenadas de la entidad almacenada en DRAW.
 447  883C
 448  883C 3A 2B 87     8 ld a,(Ctrl_1)
 449  883F CB 57        	bit 2,a
 450  8841 28 22        	jr z,7F
 451  8843
 452  8843 2A 48 87     	ld hl,(Coordenadas_disparo_certero)
 453  8846 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 454  8847              ;														; E contiene la coordenada_X del disparo.
 455  8847 2A F4 86     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 456  884A              ;														; H Coordenado_y de la entidad.
 457  884A A7           	and a
 458  884B ED 52        	sbc hl,de
 459  884D
 460  884D CD F7 8E     	call Determina_resultado_comparativa
 461  8850 04           	inc b
 462  8851 05           	dec b
 463  8852
 464  8852              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 465  8852 28 FE        	jr z,$
 466  8854
 467  8854 28 0F        	jr z,7F
 468  8856
 469  8856              ; ----- ----- -----
 470  8856
 471  8856 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 472  8858 32 07 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 473  885B 21 2B 87     	ld hl,Ctrl_1
 474  885E CB 96        	res 2,(hl)
 475  8860 21 48 87     	ld hl,Coordenadas_disparo_certero
 476  8863 36 00        	ld (hl),0
 477  8865
 478  8865
 479  8865 CD B7 88     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 480  8868
 481  8868 3A 1C 87     	ld a,(Ctrl_0)
 482  886B CB 67        	bit 4,a
 483  886D 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 484  886F
 485  886F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 486  886F              ; [[[
 487  886F CD C7 8A     	call Detecta_disparo_entidad
 488  8872              ; ]]]
 489  8872 CD 16 89     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 490  8875
 491  8875 21 1C 87     	ld hl,Ctrl_0
 492  8878 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 493  887A AF           	xor a
 494  887B 32 1D 87     	ld (Obj_dibujado),a
 495  887E
 496  887E CD F1 89     6 call Store_Restore_cajas
 497  8881
 498  8881 C1           	pop bc
 499  8882 10 A7        	djnz 2B
 500  8884
 501  8884              ; Tras la gestión de las entidades, ... AMADEUS.
 502  8884
 503  8884 CD 53 8A     4 call Restore_Amadeus
 504  8887
 505  8887 3A 07 87     	ld a,(Impacto)
 506  888A A7           	and a
 507  888B 20 FE        	jr nz,$
 508  888D
 509  888D              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 510  888D
 511  888D CD E7 88     	call Mov_Amadeus
 512  8890
 513  8890 3A 1C 87     	ld a,(Ctrl_0)
 514  8893 CB 67        	bit 4,a
 515  8895 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 516  8897
 517  8897 CD 16 89     	call Guarda_foto_entidad_a_pintar
 518  889A
 519  889A 21 1C 87     3 ld hl,Ctrl_0
 520  889D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 521  889F AF           	xor a
 522  88A0 32 1D 87     	ld (Obj_dibujado),a
 523  88A3
 524  88A3 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 525  88A6 CD 65 8A     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 526  88A9
 527  88A9 CD 5C 8D     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 528  88AC
 529  88AC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 530  88AC
 531  88AC CD 8B 89     	call Calcula_numero_de_disparotes
 532  88AF CD 73 89     9 call Calcula_numero_de_malotes
 533  88B2
 534  88B2 3E 04        	ld a,4
 535  88B4 D3 FE        	out ($fe),a
 536  88B6
 537  88B6 C9           	ret
 538  88B7
 539  88B7              ; --------------------------------------------------------------------------------------------------------------
 540  88B7              ;
 541  88B7              ;	27/03/23
 542  88B7
 543  88B7              Mov_obj
 544  88B7
 545  88B7              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 546  88B7
 547  88B7 AF           	xor a
 548  88B8 32 1D 87     	ld (Obj_dibujado),a
 549  88BB 32 1C 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 550  88BE              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 551  88BE              ; 														; _de la entidad.
 552  88BE CD 20 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 553  88C1              ;														; Obj_dibujado="0".
 554  88C1              ; Movemos Entidades malignas.
 555  88C1
 556  88C1 21 1F 87     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 557  88C4 34           	inc (hl)
 558  88C5 35           	dec (hl)                                            ; Salimos de la rutina.
 559  88C6 C8           	ret z
 560  88C7
 561  88C7 CD C4 98     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 562  88CA
 563  88CA 3A 1C 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 564  88CD CB 67        	bit 4,a
 565  88CF C8           	ret z
 566  88D0
 567  88D0              ; Ha habido desplazamiento de la entidad maligna.
 568  88D0              ; Ha llegado a zona de AMADEUS ???
 569  88D0
 570  88D0 3A F5 86     	ld a,(Coordenada_y)
 571  88D3 FE 14        	cp $14
 572  88D5 D4 8D 8C     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 573  88D8              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 574  88D8              ; ---------
 575  88D8
 576  88D8 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 577  88DA 32 1D 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 578  88DD CD 20 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 579  88E0 CD 37 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 580  88E3 CD 06 89     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 581  88E6 C9           	ret													; _de la misma.
 582  88E7
 583  88E7              ; --------------------------------------------------------------------------------------------------------------
 584  88E7              ;
 585  88E7              ;	29/1/23
 586  88E7
 587  88E7              Mov_Amadeus
 588  88E7
 589  88E7 AF           	xor a
 590  88E8 32 1D 87     	ld (Obj_dibujado),a
 591  88EB CD 20 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 592  88EE              ;														; Obj_dibujado="0".
 593  88EE              ; Movemos Amadeus.
 594  88EE
 595  88EE CD 90 8A     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 596  88F1 3A 1C 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 597  88F4 CB 67        	bit 4,a
 598  88F6 C8           	ret z
 599  88F7
 600  88F7              ; ---------
 601  88F7
 602  88F7 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 603  88F9 32 1D 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 604  88FC CD 20 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 605  88FF CD 37 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 606  8902 CD 06 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 607  8905 C9           	ret													; _de la nave.
 608  8906
 609  8906              ; --------------------------------------------------------------------------------------------------------------
 610  8906              ;
 611  8906              ;	31/01/23
 612  8906              ;
 613  8906              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 614  8906
 615  8906              Guarda_foto_entidad_a_borrar
 616  8906
 617  8906 CD 00 92     	call Prepara_draw
 618  8909 CD 3A 91     	call calcula_CColumnass
 619  890C CD 71 91     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 620  890F CD C6 91     	call Define_rutina_de_impresion
 621  8912 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 622  8915 C9           	ret
 623  8916
 624  8916              ; --------------------------------------------------------------------------------------------------------------
 625  8916              ;
 626  8916              ;	31/01/23
 627  8916              ;
 628  8916              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 629  8916              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 630  8916
 631  8916              Guarda_foto_entidad_a_pintar
 632  8916
 633  8916 CD 43 89     	call Repone_pintar
 634  8919 CD 26 8F     	call Draw
 635  891C CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 636  891F C9           	ret
 637  8920
 638  8920              ; --------------------------------------------------------------------------------------------------------------
 639  8920              ;
 640  8920              ;
 641  8920
 642  8920 21 EE 86     Prepara_var_pintado_borrado	ld hl,Filas
 643  8923 3A 1D 87     	ld a,(Obj_dibujado)
 644  8926 A7           	and a
 645  8927 28 05        	jr z,1F
 646  8929 11 12 87     	ld de,Variables_de_pintado
 647  892C 18 03        	jr 2F
 648  892E 11 08 87     1 ld de,Variables_de_borrado
 649  8931 01 08 00     2 ld bc,8
 650  8934 ED B0        	ldir
 651  8936 C9           	ret
 652  8937
 653  8937              ; --------------------------------------------------------------------------------------------------------------
 654  8937
 655  8937 21 08 87     Repone_borrar ld hl,Variables_de_borrado
 656  893A 11 EE 86     	ld de,Filas
 657  893D 01 08 00     	ld bc,8
 658  8940 ED B0        	ldir
 659  8942 C9           	ret
 660  8943
 661  8943 21 12 87     Repone_pintar ld hl,Variables_de_pintado
 662  8946 11 EE 86     	ld de,Filas
 663  8949 01 08 00     	ld bc,8
 664  894C ED B0        	ldir
 665  894E C9           	ret
 666  894F
 667  894F              ; *************************************************************************************************************************************************************
 668  894F              ;
 669  894F              ; 8/1/23
 670  894F              ;
 671  894F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 672  894F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 673  894F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 674  894F
 675  894F              ; Destruye HL y DE !!!!!
 676  894F
 677  894F              Inicia_punteros_de_cajas
 678  894F
 679  894F 21 68 84     	ld hl,Indice_de_cajas
 680  8952 CD A3 89         call Extrae_address
 681  8955 22 2C 87         ld (Puntero_store_caja),hl
 682  8958 21 6A 84     	ld hl,Indice_de_cajas+2
 683  895B 22 30 87     	ld (Indice_restore_caja),hl
 684  895E CD A3 89     	call Extrae_address
 685  8961 22 2E 87     	ld (Puntero_restore_caja),hl
 686  8964 C9               ret
 687  8965
 688  8965              ; *************************************************************************************************************************************************************
 689  8965              ;
 690  8965              ; 8/1/23
 691  8965              ;
 692  8965              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 693  8965
 694  8965 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 695  8968 22 41 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 696  896B C9           	ret
 697  896C 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 698  896F 22 43 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 699  8972 C9           	ret
 700  8973
 701  8973              ; -------------------------------------------------------------------------------------------------------------
 702  8973              ;
 703  8973              ; 28/2/23
 704  8973              ;
 705  8973
 706  8973              Calcula_numero_de_malotes
 707  8973
 708  8973 21 00 70     	ld hl,Album_de_fotos
 709  8976 EB           	ex de,hl
 710  8977 2A 3C 87     	ld hl,(Stack_snapshot)
 711  897A
 712  897A 06 00        	ld b,0
 713  897C 7D           	ld a,l
 714  897D 93           	sub e
 715  897E 28 07        	jr z,1F
 716  8980
 717  8980              ; Nº de malotes no es "0".
 718  8980
 719  8980 D6 06        2 sub 6
 720  8982 04           	inc b
 721  8983 A7           	and a
 722  8984 20 FA        	jr nz,2B
 723  8986 78           	ld a,b
 724  8987
 725  8987 32 33 87     1 ld (Numero_de_malotes),a
 726  898A C9           	ret
 727  898B
 728  898B              ; -------------------------------------------------------------------------------------------------------------
 729  898B              ;
 730  898B              ; 28/2/23
 731  898B              ;
 732  898B
 733  898B              Calcula_numero_de_disparotes
 734  898B
 735  898B 21 60 70     	ld hl,Album_de_fotos_disparos
 736  898E EB           	ex de,hl
 737  898F 2A 3E 87     	ld hl,(Stack_snapshot_disparos)
 738  8992
 739  8992 06 00        	ld b,0
 740  8994 7D           	ld a,l
 741  8995 93           	sub e
 742  8996 28 07        	jr z,1F
 743  8998
 744  8998              ; Nº de malotes no es "0".
 745  8998
 746  8998 D6 06        2 sub 6
 747  899A 04           	inc b
 748  899B A7           	and a
 749  899C 20 FA        	jr nz,2B
 750  899E 78           	ld a,b
 751  899F
 752  899F 32 40 87     1 ld (Numero_de_disparotes),a
 753  89A2 C9           	ret
 754  89A3              ; *************************************************************************************************************************************************************
 755  89A3              ;
 756  89A3              ; 20/10/22
 757  89A3              ;
 758  89A3              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 759  89A3              ;
 760  89A3              ; Destruye el puntero y DE !!!!!
 761  89A3
 762  89A3 5E           Extrae_address ld e,(hl)
 763  89A4 23           	inc hl
 764  89A5 56           	ld d,(hl)
 765  89A6 2B           	dec hl
 766  89A7 EB           	ex de,hl
 767  89A8 C9           	ret
 768  89A9
 769  89A9              ; *************************************************************************************************************************************************************
 770  89A9              ;
 771  89A9              ;	7/2/23
 772  89A9              ;
 773  89A9              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 774  89A9              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 775  89A9              ;
 776  89A9              ;   Destruye HL y BC !!!!!,
 777  89A9              ;
 778  89A9              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 779  89A9              ;					"0" ..... Izquierda.
 780  89A9
 781  89A9              Inicia_Puntero_objeto
 782  89A9
 783  89A9 3A 02 87     	ld a,(Cuad_objeto)
 784  89AC E6 01        	and 1
 785  89AE F5           	push af
 786  89AF CC CD 89     	call z,Inicia_puntero_objeto_izq
 787  89B2 F1           	pop af
 788  89B3 28 2B        	jr z,1F
 789  89B5 CD BA 89     	call Inicia_puntero_objeto_der
 790  89B8 18 26        	jr 1F
 791  89BA
 792  89BA              ; Arrancamos desde la parte izquierda de la pantalla.
 793  89BA              ; Iniciamos (Indice_Sprite_der).
 794  89BA
 795  89BA 2A F8 86     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 796  89BD 22 FC 86     	ld (Puntero_DESPLZ_der),hl
 797  89C0 CD A3 89     	call Extrae_address
 798  89C3 22 F2 86     	ld (Puntero_objeto),hl
 799  89C6
 800  89C6 2A FA 86     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 801  89C9 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 802  89CC C9           	ret
 803  89CD
 804  89CD              ; Arrancamos desde la parte derecha de la pantalla.
 805  89CD              ; Iniciamos (Indice_Sprite_izq).
 806  89CD
 807  89CD 2A FA 86     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 808  89D0 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 809  89D3 CD A3 89     	call Extrae_address
 810  89D6 22 F2 86     	ld (Puntero_objeto),hl
 811  89D9
 812  89D9 2A F8 86     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 813  89DC 22 FC 86     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 814  89DF C9           	ret
 815  89E0
 816  89E0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 817  89E0
 818  89E0 21 38 83     1 ld hl,Amadeus
 819  89E3 ED 4B F2 86  	ld bc,(Puntero_objeto)
 820  89E7 B7 ED 42     	sub hl,bc
 821  89EA C0           	ret nz
 822  89EB 21 1C 87     	ld hl,Ctrl_0
 823  89EE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 824  89F0 C9           	ret 												; _de nuestra nave en los extremos.
 825  89F1
 826  89F1              ; *************************************************************************************************************************************************************
 827  89F1              ;
 828  89F1              ;	14/5/23
 829  89F1              ;
 830  89F1              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 831  89F1              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 832  89F1
 833  89F1              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 834  89F1              ;	_de la 2ª y 3ª entidad respectivamente.
 835  89F1
 836  89F1              Store_Restore_cajas
 837  89F1
 838  89F1 E5           	push hl
 839  89F2 D5           	push de
 840  89F3 C5            	push bc
 841  89F4
 842  89F4              ;	STORE !!!!!
 843  89F4              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 844  89F4
 845  89F4 21 EE 86     	ld hl,Filas
 846  89F7 ED 5B 2C 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 847  89FB 01 3D 00     	ld bc,61
 848  89FE ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 849  8A00
 850  8A00              ; 	Entidad_sospechosa. 20/4/23
 851  8A00
 852  8A00 3A 07 87     	ld a,(Impacto)
 853  8A03 A7           	and a
 854  8A04 28 0C        	jr z,1F
 855  8A06
 856  8A06 2A 2C 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 857  8A09 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 858  8A0C A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 859  8A0D ED 4A        	adc hl,bc 											; _ "0" más adelante.
 860  8A0F 22 46 87     	ld (Entidad_sospechosa_de_colision),hl
 861  8A12
 862  8A12              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 863  8A12
 864  8A12 2A 2E 87     1 ld hl,(Puntero_restore_caja)
 865  8A15 7E           	ld a,(hl)
 866  8A16 A7           	and a
 867  8A17 F5           	push af
 868  8A18 28 08        	jr z,2F
 869  8A1A
 870  8A1A 11 EE 86     	ld de,Filas
 871  8A1D 01 3D 00     	ld bc,61
 872  8A20 ED B0        	ldir
 873  8A22
 874  8A22 CD 3E 8A     2 call Incrementa_punteros_de_cajas
 875  8A25 F1           	pop af
 876  8A26 28 EA        	jr z,1B
 877  8A28
 878  8A28 C1           	pop bc
 879  8A29 D1           	pop de
 880  8A2A E1           	pop hl
 881  8A2B
 882  8A2B C9           	ret
 883  8A2C
 884  8A2C              ; **************************************************************************************************
 885  8A2C              ;
 886  8A2C              ;	12/05/23
 887  8A2C              ;
 888  8A2C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 889  8A2C
 890  8A2C E5           Restore_entidad push hl
 891  8A2D D5           	push de
 892  8A2E C5            	push bc
 893  8A2F
 894  8A2F 2A 2C 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 895  8A32 11 EE 86     	ld de,Filas
 896  8A35 01 3D 00     	ld bc,61
 897  8A38 ED B0        	ldir
 898  8A3A
 899  8A3A C1           	pop bc
 900  8A3B D1           	pop de
 901  8A3C E1           	pop hl
 902  8A3D C9           	ret
 903  8A3E
 904  8A3E
 905  8A3E              ; **************************************************************************************************
 906  8A3E              ;
 907  8A3E              ;	08/05/23
 908  8A3E              ;
 909  8A3E              ;	Incrementamos los dos punteros de entidades. (+1).
 910  8A3E
 911  8A3E 2A 2E 87     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 912  8A41 22 2C 87     	ld (Puntero_store_caja),hl
 913  8A44 2A 30 87     	ld hl,(Indice_restore_caja)
 914  8A47 23           	inc hl
 915  8A48 23           	inc hl
 916  8A49 22 30 87     	ld (Indice_restore_caja),hl
 917  8A4C CD A3 89         call Extrae_address
 918  8A4F 22 2E 87         ld (Puntero_restore_caja),hl
 919  8A52 C9               ret
 920  8A53
 921  8A53              ; **************************************************************************************************
 922  8A53              ;
 923  8A53              ;	25/01/23
 924  8A53              ;
 925  8A53              ;	Restore_Amadeus
 926  8A53              ;
 927  8A53              ;	Cargamos en DRAW los parámetros de Amadeus.
 928  8A53              ;
 929  8A53
 930  8A53 E5           Restore_Amadeus	push hl
 931  8A54 D5           	push de
 932  8A55 C5            	push bc
 933  8A56 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 934  8A59 11 EE 86     	ld de,Filas
 935  8A5C 01 3D 00     	ld bc,61
 936  8A5F ED B0        	ldir
 937  8A61 C1           	pop bc
 938  8A62 D1           	pop de
 939  8A63 E1           	pop hl
 940  8A64 C9           	ret
 941  8A65
 942  8A65              ; *************************************************************************************************************************************************************
 943  8A65              ;
 944  8A65              ;	29/04/23
 945  8A65              ;
 946  8A65              ;	Store_Amadeus
 947  8A65              ;
 948  8A65              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 949  8A65              ;
 950  8A65              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 951  8A65              ;
 952  8A65              ;	DESTRUYE: HL y BC y DE.
 953  8A65
 954  8A65 21 EE 86     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 955  8A68 01 3D 00     	ld bc,61
 956  8A6B ED B0        	ldir
 957  8A6D C9           	ret
 958  8A6E
 959  8A6E              ; -----------------------------------------------------------
 960  8A6E              ;
 961  8A6E              ;	27/04/23
 962  8A6E              ;
 963  8A6E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 964  8A6E              ;
 965  8A6E              ;	Destruye: HL,BC,DE,A
 966  8A6E
 967  8A6E 21 EE 86     Borra_datos_entidad ld hl,Filas
 968  8A71 01 3C 00     	ld bc,60
 969  8A74 AF           	xor a
 970  8A75 77           	ld (hl),a
 971  8A76 11 EF 86     	ld de,Filas+1
 972  8A79 ED B0        	ldir
 973  8A7B C9           	ret
 974  8A7C
 975  8A7C              ; -----------------------------------------------------------
 976  8A7C
 977  8A7C              ; Teclado.
 978  8A7C
 979  8A7C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 980  8A7E DB FE        	in a,($fe)
 981  8A80 E6 01        	and $01
 982  8A82 28 02        	jr z,1f
 983  8A84 18 F6        	jr Pulsa_ENTER
 984  8A86 C9           1 ret
 985  8A87
 986  8A87              ; **************************************************************************************************
 987  8A87              ;
 988  8A87              ; Temporización.
 989  8A87
 990  8A87              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 991  8A87              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 992  8A87              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 993  8A87              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 994  8A87
 995  8A87              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 996  8A87              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 997  8A87              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 998  8A87
 999  8A87              ; A partir de $4f61 no hace falta DELAY.
1000  8A87
1001  8A87              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1002  8A87
1003  8A87 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1004  8A8A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1005  8A8B 78           	LD A,B
1006  8A8C A7           	AND A
1007  8A8D 20 FB        	JR NZ,wait
1008  8A8F C9           	RET
1009  8A90
1010  8A90              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1011  8A90              ;
1012  8A90              ;	5/3/23
1013  8A90              ;
1014  8A90              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1015  8A90
1016  8A90              Movimiento_Amadeus
1017  8A90
1018  8A90              ; Disparo.
1019  8A90
1020  8A90 3A 50 87     	ld a,(Habilita_disparo_Amadeus)
1021  8A93 A7           	and a
1022  8A94 20 02        	jr nz,1F
1023  8A96 18 15        	jr 2F
1024  8A98
1025  8A98 3E F7        1 ld a,$f7													; "5" para disparar.
1026  8A9A DB FE        	in a,($fe)
1027  8A9C E6 10        	and $10
1028  8A9E
1029  8A9E F5           	push af
1030  8A9F CC 09 8B     	call z,Genera_disparo
1031  8AA2 F1           	pop af
1032  8AA3 20 08        	jr nz,2F
1033  8AA5
1034  8AA5 3A 50 87     	ld a,(Habilita_disparo_Amadeus)
1035  8AA8 EE 01        	xor 1
1036  8AAA 32 50 87     	ld (Habilita_disparo_Amadeus),a
1037  8AAD
1038  8AAD 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1039  8AAF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1040  8AB1 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1041  8AB3 CC 64 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1042  8AB6 3E F7        	ld a,$f7
1043  8AB8 DB FE        	in a,($fe)
1044  8ABA E6 01        	and $01
1045  8ABC C8           	ret z
1046  8ABD
1047  8ABD 3E F7        	ld a,$f7
1048  8ABF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1049  8AC1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1050  8AC3 CC 46 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1051  8AC6 C9           	ret
1052  8AC7
1053  8AC7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1054  8AC7              ;
1055  8AC7              ;	Rutina provisional para que los malotes cagen balas.
1056  8AC7
1057  8AC7              Detecta_disparo_entidad
1058  8AC7
1059  8AC7 3A 53 87     	ld a,(Habilita_disparo_entidad)
1060  8ACA A7           	and a
1061  8ACB C8           	ret z
1062  8ACC 3E 7F        	ld a,$7f
1063  8ACE DB FE        	in a,($fe)
1064  8AD0 E6 01        	and 1
1065  8AD2 C0           	ret nz
1066  8AD3 CD 09 8B     	call Genera_disparo
1067  8AD6 C9           	ret
1068  8AD7
1069  8AD7              ; Pinta indicadores de FILAS. ------------------------------------------------------
1070  8AD7
1071  8AD7 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1072  8ADA
1073  8ADA              ; ----------
1074  8ADA 06 20        	ld b,32
1075  8ADC E5           2 push hl
1076  8ADD C5           	push bc
1077  8ADE              ; ----------
1078  8ADE
1079  8ADE 06 BF        	ld b,$bf
1080  8AE0 36 80        1 ld (hl),%10000000
1081  8AE2 CD 0C 92     	call NextScan
1082  8AE5 10 F9        	djnz 1B
1083  8AE7
1084  8AE7              ; ----------
1085  8AE7 C1           	pop bc
1086  8AE8 E1           	pop hl
1087  8AE9 2C           	inc l
1088  8AEA 10 F0        	djnz 2B
1089  8AEC              ; ----------
1090  8AEC
1091  8AEC 06 03        	ld b,3
1092  8AEE 21 00 47         ld hl,$4700
1093  8AF1 CD F7 8A     3 call Bucle_1
1094  8AF4 10 FB            djnz 3B
1095  8AF6 C9               ret
1096  8AF7
1097  8AF7 C5           Bucle_1 push bc
1098  8AF8 E5                   push hl
1099  8AF9 D1                   pop de
1100  8AFA 13                   inc de
1101  8AFB 01 FF 00             ld bc,255
1102  8AFE 36 FF                ld (hl),255
1103  8B00 ED B0                ldir
1104  8B02 23                   inc hl
1105  8B03 3E 07                ld a,7
1106  8B05 84                   add a,h
1107  8B06 67                   ld h,a
1108  8B07 C1                   pop bc
1109  8B08 C9                   ret
1110  8B09
1111  8B09              ; ---------------------------------------------------------------
1112  8B09
1113  8B09              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8B09              ; ******************************************************************************************************************************************************************************************
   2+ 8B09              ;
   3+ 8B09              ;   17/04/23
   4+ 8B09              ;
   5+ 8B09              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8B09              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8B09              ;
   8+ 8B09              ;
   9+ 8B09              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8B09              ;
  11+ 8B09              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8B09              ;               _ hacen las entidades hacia abajo.
  13+ 8B09              ;
  14+ 8B09              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8B09              ;
  16+ 8B09              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8B09              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8B09              ;
  19+ 8B09              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8B09              ;           _ la bala.
  21+ 8B09              ;
  22+ 8B09              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8B09              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8B09              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8B09              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8B09              ;           _ en el momento de generarse la bala)).
  27+ 8B09
  28+ 8B09              Genera_disparo
  29+ 8B09
  30+ 8B09              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8B09              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8B09              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8B09              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8B09              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8B09              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8B09              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8B09
  38+ 8B09              ; Exclusiones:
  39+ 8B09
  40+ 8B09 3A 26 87         ld a,(Columnas)
  41+ 8B0C 47               ld b,a
  42+ 8B0D 3A EF 86         ld a,(Columns)
  43+ 8B10 B8               cp b
  44+ 8B11 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8B12
  46+ 8B12              ; ----- ----- -----
  47+ 8B12
  48+ 8B12 3A 1C 87         ld a,(Ctrl_0)
  49+ 8B15 CB 77            bit 6,a
  50+ 8B17 20 06            jr nz,14F
  51+ 8B19
  52+ 8B19 3A F5 86         ld a,(Coordenada_y)
  53+ 8B1C FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8B1E D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8B1F
  56+ 8B1F 21 00 80     14 ld hl,Indice_disparo
  57+ 8B22 3A F6 86         ld a,(CTRL_DESPLZ)
  58+ 8B25 4F               ld c,a
  59+ 8B26 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8B28              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8B28              ;                                            ""        ""       "f9", B="1"
  62+ 8B28              ;                                            ""        ""       "fb", B="2"
  63+ 8B28              ;                                            ""        ""       "fb", B="3"
  64+ 8B28 A7               and a
  65+ 8B29 28 10            jr z,1F
  66+ 8B2B E6 01            and 1
  67+ 8B2D C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8B2E
  69+ 8B2E 79               ld a,c
  70+ 8B2F 16 F9            ld d,$f9
  71+ 8B31 23           2 inc hl
  72+ 8B32 23               inc hl
  73+ 8B33 04               inc b
  74+ 8B34 BA               cp d
  75+ 8B35 28 04            jr z,1F
  76+ 8B37 14               inc d
  77+ 8B38 14               inc d
  78+ 8B39 18 F6            jr 2B
  79+ 8B3B
  80+ 8B3B CD A3 89     1 call Extrae_address
  81+ 8B3E E5               push hl
  82+ 8B3F FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8B41 DD 21 9F 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8B45
  85+ 8B45              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8B45              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8B45
  88+ 8B45 3A 1C 87         ld a,(Ctrl_0)
  89+ 8B48 CB 77            bit 6,a
  90+ 8B4A 20 04            jr nz,19F
  91+ 8B4C
  92+ 8B4C AF               xor a
  93+ 8B4D 32 53 87         ld (Habilita_disparo_entidad),a
  94+ 8B50
  95+ 8B50 3A 02 87     19 ld a,(Cuad_objeto)
  96+ 8B53 FE 02            cp 2
  97+ 8B55 38 66            jr c,3F
  98+ 8B57 28 64            jr z,3F
  99+ 8B59
 100+ 8B59              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8B59
 102+ 8B59 E6 01            and 1
 103+ 8B5B 28 30            jr z,4F
 104+ 8B5D
 105+ 8B5D              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8B5D              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8B5D              ;
 108+ 8B5D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8B5D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8B5D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8B5D
 112+ 8B5D 2A F0 86     	ld hl,(Posicion_actual)
 113+ 8B60
 114+ 8B60              ;   Amadeus o entidad ???.
 115+ 8B60
 116+ 8B60 3A 1C 87         ld a,(Ctrl_0)
 117+ 8B63 CB 77            bit 6,a
 118+ 8B65 28 0A            jr z,8F
 119+ 8B67
 120+ 8B67              ; 	Dispara Amadeus.
 121+ 8B67
 122+ 8B67 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8B69 CD 1B 92         call PreviousScan
 124+ 8B6C CD 1B 92         call PreviousScan
 125+ 8B6F
 126+ 8B6F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8B6F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8B6F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8B6F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8B6F
 131+ 8B6F 18 11            jr 10F
 132+ 8B71
 133+ 8B71              ; 	Dispara Entidad.
 134+ 8B71
 135+ 8B71 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8B74              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8B74
 138+ 8B74              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8B74              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8B74
 141+ 8B74 C5               push bc
 142+ 8B75 06 10            ld b,16
 143+ 8B77 CD 0C 92     9 call NextScan
 144+ 8B7A 10 FB            djnz 9B
 145+ 8B7C C1               pop bc
 146+ 8B7D CD E7 8B         call Ajusta_disparo_parte_izquierda
 147+ 8B80 18 06            jr 17F
 148+ 8B82
 149+ 8B82              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8B82              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8B82              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8B82              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8B82
 154+ 8B82 CD E7 8B     10 call Ajusta_disparo_parte_izquierda
 155+ 8B85 CD 5C 8C         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8B88              ;                                                      ; _al generar el disparo.
 157+ 8B88
 158+ 8B88              ; 	LLegados a este punto tendremos:
 159+ 8B88              ;
 160+ 8B88              ;       Puntero_objeto_disparo en IY.
 161+ 8B88              ;       Rutinas_de_impresion en IX.
 162+ 8B88              ;       Puntero_de_impresion en HL.
 163+ 8B88              ;       Impacto/Dirección en BC.
 164+ 8B88
 165+ 8B88 CD EF 8B     17 call Almacena_disparo
 166+ 8B8B 18 52            jr 6F                                             ; RET.
 167+ 8B8D
 168+ 8B8D              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8B8D              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8B8D              ;
 171+ 8B8D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8B8D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8B8D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8B8D
 175+ 8B8D 2A F0 86     4 ld hl,(Posicion_actual)
 176+ 8B90
 177+ 8B90              ;   Amadeus o entidad ???.
 178+ 8B90
 179+ 8B90 3A 1C 87         ld a,(Ctrl_0)
 180+ 8B93 CB 77            bit 6,a
 181+ 8B95 28 0A            jr z,11F
 182+ 8B97
 183+ 8B97              ; 	Dispara Amadeus.
 184+ 8B97
 185+ 8B97 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8B99 CD 1B 92         call PreviousScan
 187+ 8B9C CD 1B 92         call PreviousScan
 188+ 8B9F
 189+ 8B9F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8B9F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8B9F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8B9F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8B9F
 194+ 8B9F 18 11            jr 13F
 195+ 8BA1
 196+ 8BA1              ; 	Dispara Entidad.
 197+ 8BA1
 198+ 8BA1 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8BA4              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8BA4
 201+ 8BA4              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8BA4              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8BA4
 204+ 8BA4 C5               push bc
 205+ 8BA5 06 10            ld b,16
 206+ 8BA7 CD 0C 92     12 call NextScan
 207+ 8BAA 10 FB            djnz 12B
 208+ 8BAC C1               pop bc
 209+ 8BAD
 210+ 8BAD CD E0 8B         call Ajusta_disparo_parte_derecha
 211+ 8BB0 18 06            jr 18F
 212+ 8BB2
 213+ 8BB2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8BB2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8BB2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8BB2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8BB2
 218+ 8BB2 CD E0 8B     13 call Ajusta_disparo_parte_derecha
 219+ 8BB5 CD 5C 8C         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8BB8              ;                                                       ; _al generar el disparo.
 221+ 8BB8
 222+ 8BB8              ; LLegados a este punto tendremos:
 223+ 8BB8              ;
 224+ 8BB8              ;       Puntero_objeto_disparo en IY.
 225+ 8BB8              ;       Rutinas_de_impresion en IX.
 226+ 8BB8              ;       Puntero_de_impresion en HL.
 227+ 8BB8              ;       Impacto/Dirección en BC.
 228+ 8BB8
 229+ 8BB8 CD EF 8B     18 call Almacena_disparo
 230+ 8BBB 18 22            jr 6F                                               ; RET.
 231+ 8BBD
 232+ 8BBD              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8BBD
 234+ 8BBD 28 11        3 jr z,5F
 235+ 8BBF
 236+ 8BBF              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8BBF              ;
 238+ 8BBF              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8BBF              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8BBF              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8BBF              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8BBF
 243+ 8BBF              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8BBF              ;	   ""        ""       "f9", B="1"
 245+ 8BBF              ;	   ""        ""       "fb", B="2"
 246+ 8BBF              ; 	   ""        ""       "fb", B="3"
 247+ 8BBF
 248+ 8BBF 2A F0 86     	ld hl,(Posicion_actual)
 249+ 8BC2 CD 0C 92     	call NextScan
 250+ 8BC5
 251+ 8BC5              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8BC5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8BC5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8BC5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8BC5
 256+ 8BC5 CD E7 8B         call Ajusta_disparo_parte_izquierda
 257+ 8BC8
 258+ 8BC8              ; 	No se produce impacto. B="$80"
 259+ 8BC8              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8BC8
 261+ 8BC8 01 80 80         ld bc,$8080
 262+ 8BCB
 263+ 8BCB              ; 	LLegados a este punto tendremos:
 264+ 8BCB              ;
 265+ 8BCB              ;       Puntero_objeto_disparo en IY.
 266+ 8BCB              ;       Rutinas_de_impresion en IX.
 267+ 8BCB              ;       Puntero_de_impresion en HL.
 268+ 8BCB              ;       Impacto/Dirección en BC.
 269+ 8BCB
 270+ 8BCB CD EF 8B         call Almacena_disparo
 271+ 8BCE 18 0F            jr 6F                                           ; RET.
 272+ 8BD0
 273+ 8BD0              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8BD0              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8BD0              ;
 276+ 8BD0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8BD0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8BD0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8BD0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8BD0
 281+ 8BD0 2A F0 86     5 ld hl,(Posicion_actual)
 282+ 8BD3 CD 0C 92     	call NextScan
 283+ 8BD6
 284+ 8BD6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8BD6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8BD6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8BD6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8BD6
 289+ 8BD6 CD E0 8B         call Ajusta_disparo_parte_derecha
 290+ 8BD9
 291+ 8BD9              ; 	No se produce impacto. B="$80"
 292+ 8BD9              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8BD9
 294+ 8BD9 01 80 80     15 ld bc,$8080
 295+ 8BDC
 296+ 8BDC              ; 	LLegados a este punto tendremos:
 297+ 8BDC              ;
 298+ 8BDC              ;       Puntero_objeto_disparo en IY.
 299+ 8BDC              ;       Rutinas_de_impresion en IX.
 300+ 8BDC              ;       Puntero_de_impresion en HL.
 301+ 8BDC              ;       Impacto/Dirección en BC.
 302+ 8BDC
 303+ 8BDC CD EF 8B         call Almacena_disparo
 304+ 8BDF
 305+ 8BDF C9           6 ret
 306+ 8BE0
 307+ 8BE0              ; ----------------------------------------------------------------
 308+ 8BE0              ;
 309+ 8BE0              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8BE0              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8BE0              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8BE0
 313+ 8BE0 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8BE1 FE 02            cp 2
 315+ 8BE3 38 01            jr c,1F
 316+ 8BE5 23               inc hl
 317+ 8BE6 C9           1 ret
 318+ 8BE7
 319+ 8BE7 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8BE8 FE 01        	cp 1
 321+ 8BEA 20 01        	jr nz,1F
 322+ 8BEC 2B           	dec hl
 323+ 8BED 2B           1 dec hl
 324+ 8BEE C9               ret
 325+ 8BEF
 326+ 8BEF              ; ----------------------------------------------------------------
 327+ 8BEF              ;
 328+ 8BEF              ;   25/02/23
 329+ 8BEF              ;
 330+ 8BEF              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8BEF              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8BEF              ;
 333+ 8BEF              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8BEF              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8BEF
 336+ 8BEF              Almacena_disparo
 337+ 8BEF
 338+ 8BEF E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8BF0 F1               pop af
 340+ 8BF1 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8BF2
 342+ 8BF2 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8BF3 E6 01            and 1
 344+ 8BF5 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8BF7              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8BF7              ; 	Dispara AMADEUS.
 347+ 8BF7
 348+ 8BF7              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8BF7              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8BF7              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8BF7              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8BF7
 353+ 8BF7 C5               push bc
 354+ 8BF8 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8BFB 2A 43 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8BFE A7               and a
 357+ 8BFF ED 42            sbc hl,bc
 358+ 8C01 CC 6C 89         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8C04 C1               pop bc
 360+ 8C05 28 54            jr z,4F
 361+ 8C07
 362+ 8C07 2A 43 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8C0A 23               inc hl
 364+ 8C0B 23               inc hl
 365+ 8C0C 22 43 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8C0F              ;                                                   ; _ Disparo_(+1).
 367+ 8C0F 18 18            jr 2F
 368+ 8C11
 369+ 8C11              ; Dispara una entidad.
 370+ 8C11
 371+ 8C11 C5           1 push bc
 372+ 8C12 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8C15 2A 41 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8C18 A7               and a
 375+ 8C19 ED 42            sbc hl,bc
 376+ 8C1B CC 65 89         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8C1E C1               pop bc
 378+ 8C1F 28 3A            jr z,4F
 379+ 8C21
 380+ 8C21 2A 41 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8C24 23               inc hl
 382+ 8C25 23               inc hl
 383+ 8C26 22 41 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8C29              ;                                                   ; _ Disparo_(+1).
 385+ 8C29 CD A3 89     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8C2C              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8C2C              ;
 388+ 8C2C              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8C2C              ;                                                     Rutinas_de_impresion en IX.
 390+ 8C2C              ;                                                     Puntero_de_impresion en HL.
 391+ 8C2C              ;                                                     Impacto/Dirección en BC.
 392+ 8C2C
 393+ 8C2C 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8C2D 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8C2E 23               inc hl                                          ; _ al siguiente.
 396+ 8C2F A7               and a
 397+ 8C30 20 C0            jr nz,3B
 398+ 8C32
 399+ 8C32 08               ex af,af
 400+ 8C33 ED 73 38 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8C37 F9               ld sp,hl
 402+ 8C38
 403+ 8C38 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8C3A F5               push af                                         ; Puntero de impresión.
 405+ 8C3B FD E5            push iy                                         ; Puntero objeto.
 406+ 8C3D C5               push bc                                         ; Control.
 407+ 8C3E
 408+ 8C3E ED 7B 38 87      ld sp,(Stack)
 409+ 8C42
 410+ 8C42              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8C42
 412+ 8C42 21 2B 87     	ld hl,Ctrl_1
 413+ 8C45 CB C6        	set 0,(hl)
 414+ 8C47
 415+ 8C47 DD E5        	push ix
 416+ 8C49 E1               pop hl
 417+ 8C4A F5               push af
 418+ 8C4B DD E1            pop ix
 419+ 8C4D
 420+ 8C4D CD A0 7F     	call Guarda_foto_registros
 421+ 8C50
 422+ 8C50 21 2B 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8C53 CB 86        	res 0,(hl)
 424+ 8C55
 425+ 8C55              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8C55              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8C55
 428+ 8C55 CD 6C 89         call Inicia_Puntero_Disparo_Amadeus
 429+ 8C58 CD 65 89         call Inicia_Puntero_Disparo_Entidades
 430+ 8C5B
 431+ 8C5B C9           4 ret
 432+ 8C5C
 433+ 8C5C              ; ----------------------------------------------------------------
 434+ 8C5C              ;
 435+ 8C5C              ;   4/3/23
 436+ 8C5C              ;
 437+ 8C5C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8C5C              ;   _ al generarse el disparo.
 439+ 8C5C              ;
 440+ 8C5C              ;       "$80" ..... No se produce colisión.
 441+ 8C5C              ;       "$81" ..... Se produce colisión.
 442+ 8C5C
 443+ 8C5C              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8C5C              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8C5C
 446+ 8C5C
 447+ 8C5C FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8C5E E5               push hl                                        ; Puntero de impresión.
 449+ 8C5F
 450+ 8C5F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8C61 CD 7D 8C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8C64
 453+ 8C64 7B               ld a,e
 454+ 8C65 E6 01            and 1
 455+ 8C67 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8C69
 457+ 8C69 E1               pop hl
 458+ 8C6A E5               push hl
 459+ 8C6B CD 0C 92         call NextScan
 460+ 8C6E
 461+ 8C6E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8C6F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8C71 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8C73              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8C73 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8C75 CD 7D 8C         call Bucle_2
 467+ 8C78
 468+ 8C78 43           2 ld b,e
 469+ 8C79 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8C7A FD E1            pop iy
 471+ 8C7C C9               ret
 472+ 8C7D
 473+ 8C7D               ; ---------- ----------
 474+ 8C7D
 475+ 8C7D 06 02        Bucle_2 ld b,2
 476+ 8C7F FD 7E 00     2 ld a,(iy)
 477+ 8C82 A6               and (hl)
 478+ 8C83 28 02            jr z,1F
 479+ 8C85 1E 81            ld e,$81
 480+ 8C87 23           1 inc hl
 481+ 8C88 FD 23            inc iy
 482+ 8C8A 10 F3            djnz 2B
 483+ 8C8C C9               ret
 484+ 8C8D
 485+ 8C8D              ; -------------------------------------------------------------------------------------------------------------
 486+ 8C8D              ;
 487+ 8C8D              ;   11/04/23
 488+ 8C8D              ;
 489+ 8C8D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8C8D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8C8D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8C8D              ;
 493+ 8C8D              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8C8D
 495+ 8C8D              Compara_coordenadas_X
 496+ 8C8D
 497+ 8C8D              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8C8D              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8C8D
 500+ 8C8D              ; Preparamos registros:
 501+ 8C8D
 502+ 8C8D 21 F4 86         ld hl,Filas+6
 503+ 8C90 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8C91 23               inc hl
 505+ 8C92 23               inc hl
 506+ 8C93 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8C94 43               ld b,e
 508+ 8C95 21 02 87         ld hl,Filas+20
 509+ 8C98 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8C99 21 4D 87         ld hl,Coordenadas_X_Entidad
 511+ 8C9C CD AD 8E         call Guarda_coordenadas_X
 512+ 8C9F
 513+ 8C9F              ; Preparamos registros:
 514+ 8C9F
 515+ 8C9F 21 7C 84         ld hl,Amadeus_db+6
 516+ 8CA2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8CA3 23               inc hl
 518+ 8CA4 23               inc hl
 519+ 8CA5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8CA6 7B               ld a,e
 521+ 8CA7 08               ex af,af'
 522+ 8CA8 21 8A 84         ld hl,Amadeus_db+20
 523+ 8CAB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8CAC 21 4A 87         ld hl,Coordenadas_X_Amadeus
 525+ 8CAF CD AD 8E         call Guarda_coordenadas_X
 526+ 8CB2
 527+ 8CB2              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8CB2              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8CB2
 530+ 8CB2 04               inc b
 531+ 8CB3 05               dec b
 532+ 8CB4 28 04            jr z,1F
 533+ 8CB6 06 03            ld b,3
 534+ 8CB8 18 02            jr 2F
 535+ 8CBA 06 02        1 ld b,2
 536+ 8CBC 08           2 ex af,af'
 537+ 8CBD 3C               inc a
 538+ 8CBE 3D               dec a
 539+ 8CBF 28 04            jr z,5F
 540+ 8CC1 0E 03            ld c,3
 541+ 8CC3 18 02            jr 6F
 542+ 8CC5 0E 02        5 ld c,2
 543+ 8CC7 79           6 ld a,c
 544+ 8CC8 08               ex af,af'
 545+ 8CC9 11 4D 87         ld de,Coordenadas_X_Entidad
 546+ 8CCC 1A           4 ld a,(de)
 547+ 8CCD 21 4A 87         ld hl,Coordenadas_X_Amadeus
 548+ 8CD0 BE           3 cp (hl)
 549+ 8CD1 28 0E            jr z,7F
 550+ 8CD3 23               inc hl
 551+ 8CD4 0D               dec c
 552+ 8CD5 20 F9            jr nz,3B
 553+ 8CD7 13               inc de
 554+ 8CD8 08               ex af,af'
 555+ 8CD9 4F               ld c,a
 556+ 8CDA 08               ex af,af'
 557+ 8CDB 10 EF            djnz 4B
 558+ 8CDD
 559+ 8CDD              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8CDD
 561+ 8CDD CD EC 8E     8 call Limpia_Coordenadas_X
 562+ 8CE0 C9               ret
 563+ 8CE1
 564+ 8CE1              7
 565+ 8CE1 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8CE3 32 07 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8CE6 21 45 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8CE9 CB D6            set 2,(hl)
 569+ 8CEB 18 F0            jr 8B
 570+ 8CED
 571+ 8CED              ; -----------------------------------------------------------------------
 572+ 8CED              ;
 573+ 8CED              ;   17/04/23
 574+ 8CED              ;
 575+ 8CED
 576+ 8CED              Detecta_colision_nave_entidad
 577+ 8CED
 578+ 8CED              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8CED
 580+ 8CED 2A F0 86         ld hl,(Posicion_actual)
 581+ 8CF0 CD 71 91         call Calcula_puntero_de_impresion
 582+ 8CF3
 583+ 8CF3              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8CF3              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8CF3
 586+ 8CF3 DD E5            push ix
 587+ 8CF5 E1               pop hl
 588+ 8CF6 E5               push hl
 589+ 8CF7
 590+ 8CF7              ; ----- ----- -----
 591+ 8CF7 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8CF9 06 0A            ld b,10
 593+ 8CFB CD 2B 8D     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8CFE 7B               ld a,e
 595+ 8CFF FE 05            cp 5
 596+ 8D01 38 0E            jr c,3F
 597+ 8D03
 598+ 8D03              ; LLegados a este punto:
 599+ 8D03              ;
 600+ 8D03              ;   HAY COLISIÓN !!!!!.
 601+ 8D03              ;
 602+ 8D03              ;   .db (Impacto) de Amadeus a "1".
 603+ 8D03              ;   SET el bit3 de (Impacto2).
 604+ 8D03              ;
 605+ 8D03              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8D03
 607+ 8D03 21 8F 84         ld hl,Amadeus_db+25
 608+ 8D06 36 01            ld (hl),1
 609+ 8D08 21 45 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8D0B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8D0D CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8D0F 18 18            jr 1F
 613+ 8D11
 614+ 8D11              ; -----
 615+ 8D11
 616+ 8D11 E1           3 pop hl
 617+ 8D12 CD 0C 92         call NextScan
 618+ 8D15 E5               push hl
 619+ 8D16 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8D17 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8D19 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8D1B 30 0C            jr nc,1F
 623+ 8D1D              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8D1D 10 DC            djnz 2B
 625+ 8D1F
 626+ 8D1F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8D1F
 628+ 8D1F              ; LLegados a este punto:
 629+ 8D1F              ;
 630+ 8D1F              ;   NO HAY COLISIÓN !!!!!.
 631+ 8D1F              ;
 632+ 8D1F              ;   .db (Impacto) de Amadeus a "0".
 633+ 8D1F              ;   RES el bit2 de (Impacto2).
 634+ 8D1F              ;
 635+ 8D1F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8D1F              ;   Lo colocamos a "0".
 637+ 8D1F
 638+ 8D1F 21 45 87         ld hl,Impacto2
 639+ 8D22 CB 96            res 2,(hl)
 640+ 8D24 2A 46 87         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8D27 36 00            ld (hl),0
 642+ 8D29
 643+ 8D29 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8D2A C9               ret
 645+ 8D2B
 646+ 8D2B               ; ---------- ----------
 647+ 8D2B
 648+ 8D2B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8D2C 3A EF 86         ld a,(Columns)
 650+ 8D2F 47               ld b,a
 651+ 8D30 FD 7E 00     2 ld a,(iy)
 652+ 8D33 BE               cp (hl)
 653+ 8D34 28 01            jr z,1F
 654+ 8D36
 655+ 8D36 1C               inc e
 656+ 8D37
 657+ 8D37 23           1 inc hl
 658+ 8D38 FD 23            inc iy
 659+ 8D3A 10 F4            djnz 2B
 660+ 8D3C C1               pop bc
 661+ 8D3D C9               ret
 662+ 8D3E
 663+ 8D3E              ; -------------------------------------------------------------------------------------------------------------
 664+ 8D3E              ;
 665+ 8D3E              ;   13/03/23
 666+ 8D3E              ;
 667+ 8D3E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8D3E              ;
 669+ 8D3E              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8D3E
 671+ 8D3E 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8D41 7E               ld a,(hl)
 673+ 8D42 A7               and a
 674+ 8D43 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8D44
 676+ 8D44 44               ld b,h
 677+ 8D45 4D               ld c,l
 678+ 8D46 2A 3E 87         ld hl,(Stack_snapshot_disparos)
 679+ 8D49 E5               push hl
 680+ 8D4A A7               and a
 681+ 8D4B ED 42            sbc hl,bc
 682+ 8D4D E5               push hl
 683+ 8D4E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8D4F
 685+ 8D4F E1               pop hl
 686+ 8D50 54               ld d,h
 687+ 8D51 5D               ld e,l
 688+ 8D52 1B               dec de
 689+ 8D53 ED B8            lddr                                                ; Limpiamos.
 690+ 8D55
 691+ 8D55 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8D58 22 3E 87         ld (Stack_snapshot_disparos),hl
 693+ 8D5B
 694+ 8D5B C9               ret
 695+ 8D5C
 696+ 8D5C              ; -------------------------------------------------------------------------------------------------------------
 697+ 8D5C              ;
 698+ 8D5C              ;   28/03/23
 699+ 8D5C              ;
 700+ 8D5C
 701+ 8D5C 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8D5F 2A 43 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8D62
 704+ 8D62 CD A3 89     2 call Extrae_address
 705+ 8D65 7E               ld a,(hl)
 706+ 8D66 A7               and a
 707+ 8D67 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8D69
 709+ 8D69              ; ----- ----- ----- ----- ----- -----
 710+ 8D69
 711+ 8D69 C5               push bc
 712+ 8D6A CD 26 8E         call foto_disparo_a_borrar
 713+ 8D6D
 714+ 8D6D              ; Existe colisión con este disparo???
 715+ 8D6D
 716+ 8D6D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8D6E 7E               ld a,(hl)
 718+ 8D6F 2B               dec hl
 719+ 8D70 E6 01            and 1
 720+ 8D72 28 1D            jr z,9F
 721+ 8D74
 722+ 8D74              ;   En este punto:
 723+ 8D74              ;
 724+ 8D74              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8D74              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8D74              ;   _con la entidad).
 727+ 8D74              ;
 728+ 8D74              ;   Disparo_2A defw 0                                ; Control.
 729+ 8D74              ;    defw 0                                          ; Puntero objeto.
 730+ 8D74              ;    defw 0                                          ; Puntero de impresión.
 731+ 8D74              ;    defw 0                                          ; Rutina de impresión.
 732+ 8D74
 733+ 8D74 E5               push hl
 734+ 8D75
 735+ 8D75 06 04            ld b,4
 736+ 8D77 23           19 inc hl
 737+ 8D78 10 FD            djnz 19B
 738+ 8D7A
 739+ 8D7A CD A3 89         call Extrae_address
 740+ 8D7D CD 23 98         call Genera_coordenadas_disparo
 741+ 8D80
 742+ 8D80              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8D80
 744+ 8D80 21 48 87         ld hl,Coordenadas_disparo_certero
 745+ 8D83 72               ld (hl),d
 746+ 8D84 23               inc hl
 747+ 8D85 73               ld (hl),e
 748+ 8D86
 749+ 8D86              ; Elimino el disparo de la base de datos.
 750+ 8D86
 751+ 8D86 E1               pop hl
 752+ 8D87 CD A2 8E         call Elimina_disparo_de_base_de_datos
 753+ 8D8A 21 45 87         ld hl,Impacto2
 754+ 8D8D CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8D8F
 756+ 8D8F 18 06            jr 11F
 757+ 8D91
 758+ 8D91 CD 4F 8E     9 call Mueve_disparo
 759+ 8D94 CD 26 8E         call foto_disparo_a_borrar
 760+ 8D97
 761+ 8D97 C1           11 pop bc
 762+ 8D98 18 04            jr 7F
 763+ 8D9A
 764+ 8D9A              ; ----- ----- ----- ----- ----- -----
 765+ 8D9A
 766+ 8D9A ED 42        1 sbc hl,bc
 767+ 8D9C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8D9E 2A 43 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8DA1 23               inc hl
 770+ 8DA2 23               inc hl
 771+ 8DA3 22 43 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8DA6 18 BA            jr 2B
 773+ 8DA8 CD 6C 89     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8DAB
 775+ 8DAB 01 66 84         ld bc,Disparo_11
 776+ 8DAE 2A 41 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8DB1
 778+ 8DB1 CD A3 89     5 call Extrae_address
 779+ 8DB4 7E               ld a,(hl)
 780+ 8DB5 A7               and a
 781+ 8DB6 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8DB8
 783+ 8DB8              ; ----- ----- ----- ----- ----- -----
 784+ 8DB8
 785+ 8DB8 C5               push bc
 786+ 8DB9 CD 26 8E         call foto_disparo_a_borrar
 787+ 8DBC
 788+ 8DBC              ; Existe colisión con este disparo???
 789+ 8DBC
 790+ 8DBC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8DBD 7E               ld a,(hl)
 792+ 8DBE 2B               dec hl
 793+ 8DBF E6 01            and 1
 794+ 8DC1 28 48            jr z,10F
 795+ 8DC3
 796+ 8DC3              ; La colisión se produce con Amadeus???
 797+ 8DC3              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8DC3
 799+ 8DC3 E5               push hl
 800+ 8DC4
 801+ 8DC4 06 04            ld b,4
 802+ 8DC6 23           16 inc hl
 803+ 8DC7 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8DC9 CD A3 89         call Extrae_address
 805+ 8DCC CD 23 98         call Genera_coordenadas_disparo
 806+ 8DCF
 807+ 8DCF 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8DD0 FE 16            cp $16
 809+ 8DD2 38 22            jr c,15F
 810+ 8DD4
 811+ 8DD4              ; (Colisiones en filas 16 y 17).
 812+ 8DD4
 813+ 8DD4 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8DD5
 815+ 8DD5              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8DD5
 817+ 8DD5 21 7C 84         ld hl,Amadeus_db+6
 818+ 8DD8 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8DD9 23               inc hl
 820+ 8DDA 23               inc hl
 821+ 8DDB 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8DDC 21 8A 84         ld hl,Amadeus_db+20
 823+ 8DDF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8DE0 21 4A 87         ld hl,Coordenadas_X_Amadeus
 825+ 8DE3 CD AD 8E         call Guarda_coordenadas_X
 826+ 8DE6
 827+ 8DE6 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8DE7
 829+ 8DE7              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8DE7
 831+ 8DE7 06 03            ld b,3
 832+ 8DE9 21 4A 87         ld hl,Coordenadas_X_Amadeus
 833+ 8DEC 7E           18 ld a,(hl)
 834+ 8DED BA               cp d
 835+ 8DEE 20 03            jr nz,17F
 836+ 8DF0
 837+ 8DF0              ; Colisión Amadeus !!!!!!!!!!
 838+ 8DF0
 839+ 8DF0 E1               pop hl
 840+ 8DF1 18 09            jr 14F
 841+ 8DF3
 842+ 8DF3 23           17 inc hl
 843+ 8DF4 10 F6            djnz 18B
 844+ 8DF6
 845+ 8DF6              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8DF6              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8DF6
 848+ 8DF6 E1           15 pop hl
 849+ 8DF7 23               inc hl
 850+ 8DF8 35               dec (hl)
 851+ 8DF9 2B               dec hl
 852+ 8DFA 18 0F            jr 10F
 853+ 8DFC
 854+ 8DFC              ; -----------------------debug
 855+ 8DFC
 856+ 8DFC              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8DFC              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8DFC
 859+ 8DFC E5           14 push hl
 860+ 8DFD CD A2 8E         call Elimina_disparo_de_base_de_datos
 861+ 8E00 21 45 87         ld hl,Impacto2
 862+ 8E03 CB CE            set 1,(hl)
 863+ 8E05 CD EC 8E         call Limpia_Coordenadas_X
 864+ 8E08
 865+ 8E08 E1               pop hl
 866+ 8E09 18 06            jr 12F
 867+ 8E0B
 868+ 8E0B CD 4F 8E     10 call Mueve_disparo
 869+ 8E0E CD 26 8E         call foto_disparo_a_borrar
 870+ 8E11 C1           12 pop bc
 871+ 8E12
 872+ 8E12 18 04            jr 8F
 873+ 8E14
 874+ 8E14              ; ----- ----- ----- ----- ----- -----
 875+ 8E14
 876+ 8E14 ED 42        4 sbc hl,bc
 877+ 8E16 28 0A            jr z,6F
 878+ 8E18
 879+ 8E18 2A 41 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8E1B 23               inc hl
 881+ 8E1C 23               inc hl
 882+ 8E1D 22 41 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8E20 18 8F            jr 5B
 884+ 8E22
 885+ 8E22 CD 65 89     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8E25 C9               ret
 887+ 8E26
 888+ 8E26              ; ------------------------------------------------------------------
 889+ 8E26
 890+ 8E26              foto_disparo_a_borrar
 891+ 8E26
 892+ 8E26 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8E27 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8E28 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8E29
 896+ 8E29 E5               push hl
 897+ 8E2A 23               inc hl
 898+ 8E2B 23               inc hl
 899+ 8E2C ED 73 38 87      ld (Stack),sp
 900+ 8E30 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8E31 FD E1            pop iy
 902+ 8E33 DD E1            pop ix
 903+ 8E35 E1               pop hl
 904+ 8E36 ED 7B 38 87      ld sp,(Stack)
 905+ 8E3A 3A 2B 87         ld a,(Ctrl_1)
 906+ 8E3D CB C7            set 0,a
 907+ 8E3F 32 2B 87         ld (Ctrl_1),a
 908+ 8E42 CD A0 7F         call Guarda_foto_registros
 909+ 8E45 3A 2B 87         ld a,(Ctrl_1)
 910+ 8E48 CB 87            res 0,a
 911+ 8E4A 32 2B 87         ld (Ctrl_1),a
 912+ 8E4D E1               pop hl
 913+ 8E4E C9               ret
 914+ 8E4F
 915+ 8E4F E5           Mueve_disparo push hl
 916+ 8E50 7E               ld a,(hl)
 917+ 8E51 06 04            ld b,4
 918+ 8E53 23           1 inc hl
 919+ 8E54 10 FD            djnz 1B
 920+ 8E56
 921+ 8E56              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8E56
 923+ 8E56 CD A3 89         call Extrae_address
 924+ 8E59
 925+ 8E59 E6 01            and 1
 926+ 8E5B 28 2B            jr z,2F
 927+ 8E5D
 928+ 8E5D              ; Disparo hacia arriba, (Amadeus).
 929+ 8E5D
 930+ 8E5D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8E5D              ; _ de la dificultad.
 932+ 8E5D
 933+ 8E5D CD 1B 92         call PreviousScan
 934+ 8E60 CD 1B 92         call PreviousScan
 935+ 8E63 CD 1B 92         call PreviousScan
 936+ 8E66
 937+ 8E66              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8E66
 939+ 8E66 7C               ld a,h
 940+ 8E67 FE 40            cp $40
 941+ 8E69 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8E6B
 943+ 8E6B              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8E6B
 945+ 8E6B EB               ex de,hl
 946+ 8E6C 06 04            ld b,4
 947+ 8E6E 2B           6 dec hl
 948+ 8E6F 10 FD            djnz 6B
 949+ 8E71
 950+ 8E71 CD A2 8E         call Elimina_disparo_de_base_de_datos
 951+ 8E74 E1               pop hl
 952+ 8E75 18 10            jr 7F
 953+ 8E77
 954+ 8E77              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8E77
 956+ 8E77 D5           3 push de
 957+ 8E78 C5               push bc
 958+ 8E79
 959+ 8E79 CD 5C 8C         call Comprueba_Colision
 960+ 8E7C
 961+ 8E7C              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8E7C
 963+ 8E7C 78               ld a,b
 964+ 8E7D
 965+ 8E7D C1               pop bc
 966+ 8E7E D1               pop de
 967+ 8E7F
 968+ 8E7F EB               ex de,hl
 969+ 8E80
 970+ 8E80 73               ld (hl),e
 971+ 8E81 23               inc hl
 972+ 8E82 72               ld (hl),d
 973+ 8E83
 974+ 8E83 E1           4 pop hl
 975+ 8E84 23               inc hl
 976+ 8E85 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8E86 2B               dec hl
 978+ 8E87 C9           7 ret
 979+ 8E88
 980+ 8E88              ; Disparo hacia abajo, (Entidad).
 981+ 8E88
 982+ 8E88              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8E88              ; _ de la dificultad.
 984+ 8E88
 985+ 8E88 CD 0C 92     2 call NextScan
 986+ 8E8B CD 0C 92         call NextScan
 987+ 8E8E CD 0C 92         call NextScan
 988+ 8E91
 989+ 8E91              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8E91
 991+ 8E91 7C               ld a,h
 992+ 8E92 FE 58            cp $58
 993+ 8E94 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8E96
 995+ 8E96 EB               ex de,hl
 996+ 8E97 06 04            ld b,4
 997+ 8E99 2B           5 dec hl
 998+ 8E9A 10 FD            djnz 5B
 999+ 8E9C
1000+ 8E9C CD A2 8E         call Elimina_disparo_de_base_de_datos
1001+ 8E9F E1               pop hl
1002+ 8EA0 18 E5            jr 7B
1003+ 8EA2
1004+ 8EA2              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8EA2
1006+ 8EA2 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8EA5 AF               xor a
1008+ 8EA6 77               ld (hl),a
1009+ 8EA7 54               ld d,h
1010+ 8EA8 5D               ld e,l
1011+ 8EA9 13               inc de
1012+ 8EAA ED B0            ldir
1013+ 8EAC C9               ret
1014+ 8EAD
1015+ 8EAD              ; -----------------------------------------------------------------
1016+ 8EAD              ;
1017+ 8EAD              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8EAD              ;
1019+ 8EAD              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8EAD              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8EAD              ;
1022+ 8EAD              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8EAD              ;
1024+ 8EAD              ;   INPUTS:
1025+ 8EAD              ;
1026+ 8EAD              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8EAD              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8EAD              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8EAD
1030+ 8EAD              ;   MODIFICA: A, HL, DE y C
1031+ 8EAD
1032+ 8EAD 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8EAE 79               ld a,c
1034+ 8EAF E6 01            and 1
1035+ 8EB1 20 03            jr nz,1F
1036+ 8EB3 14               inc d
1037+ 8EB4 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8EB6
1039+ 8EB6              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8EB6              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8EB6
1042+ 8EB6 15           1 dec d
1043+ 8EB7 23           2 inc hl
1044+ 8EB8 72               ld (hl),d
1045+ 8EB9
1046+ 8EB9 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8EBA A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8EBB C8               ret z
1049+ 8EBC
1050+ 8EBC AF               xor a
1051+ 8EBD 5F               ld e,a
1052+ 8EBE 18 ED            jr Guarda_coordenadas_X
1053+ 8EC0
1054+ 8EC0              ; -----------------------------------------------------------------
1055+ 8EC0              ;
1056+ 8EC0              ;   12/04/23
1057+ 8EC0              ;
1058+ 8EC0
1059+ 8EC0 3A 45 87     Selector_de_impactos ld a,(Impacto2)
1060+ 8EC3 A7               and a
1061+ 8EC4 C8               ret z
1062+ 8EC5
1063+ 8EC5 FE 04            cp 4
1064+ 8EC7 20 09            jr nz,1F
1065+ 8EC9
1066+ 8EC9
1067+ 8EC9              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8EC9
1069+ 8EC9 CD ED 8C         call Detecta_colision_nave_entidad
1070+ 8ECC
1071+ 8ECC 21 45 87         ld hl,Impacto2
1072+ 8ECF CB 5E            bit 3,(hl)
1073+ 8ED1 C0               ret nz                                               ; Existe colisión, RET.
1074+ 8ED2
1075+ 8ED2              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8ED2              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8ED2
1078+ 8ED2 21 45 87     1 ld hl,Impacto2
1079+ 8ED5 CB 4E            bit 1,(hl)
1080+ 8ED7 28 07            jr z,2F
1081+ 8ED9
1082+ 8ED9 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8EDC 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8EDE 18 0B            jr 3F
1085+ 8EE0
1086+ 8EE0 21 45 87     2 ld hl,Impacto2
1087+ 8EE3 CB 46            bit 0,(hl)
1088+ 8EE5 C8               ret z
1089+ 8EE6
1090+ 8EE6              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8EE6
1092+ 8EE6 21 2B 87         ld hl,Ctrl_1
1093+ 8EE9 CB D6            set 2,(hl)
1094+ 8EEB
1095+ 8EEB C9           3 ret
1096+ 8EEC
1097+ 8EEC              ; -----------------------------------------------------------------
1098+ 8EEC              ;
1099+ 8EEC              ;   16/04/23
1100+ 8EEC              ;
1101+ 8EEC
1102+ 8EEC AF           Limpia_Coordenadas_X xor a
1103+ 8EED 06 06            ld b,6
1104+ 8EEF 21 4A 87         ld hl,Coordenadas_X_Amadeus
1105+ 8EF2 77           1 ld (hl),a
1106+ 8EF3 23               inc hl
1107+ 8EF4 10 FC            djnz 1B
1108+ 8EF6 C9               ret
1109+ 8EF7
1110+ 8EF7              ; -----------------------------------------------------------------
1111+ 8EF7              ;
1112+ 8EF7              ;   25/04/23
1113+ 8EF7              ;
1114+ 8EF7
1115+ 8EF7              Determina_resultado_comparativa
1116+ 8EF7
1117+ 8EF7              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8EF7              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8EF7              ;
1120+ 8EF7              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8EF7              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8EF7              ;
1123+ 8EF7              ;   SBC HL,DE
1124+ 8EF7
1125+ 8EF7 7C               ld a,h
1126+ 8EF8 06 00            ld b,0
1127+ 8EFA
1128+ 8EFA CD 0A 8F         call Compara_cositas
1129+ 8EFD
1130+ 8EFD 04               inc b
1131+ 8EFE 05               dec b
1132+ 8EFF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8F00
1134+ 8F00 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8F01 06 00            ld b,0
1136+ 8F03
1137+ 8F03 CD 0A 8F         call Compara_cositas
1138+ 8F06 18 01            jr 2F
1139+ 8F08
1140+ 8F08 04           1 inc b
1141+ 8F09 C9           2 ret
1142+ 8F0A
1143+ 8F0A A7           Compara_cositas and a
1144+ 8F0B 28 17            jr z,1F
1145+ 8F0D
1146+ 8F0D FE FD            cp $fd
1147+ 8F0F 28 13            jr z,1F
1148+ 8F11 FE FE            cp $fe
1149+ 8F13 28 0F            jr z,1F
1150+ 8F15 FE FF            cp $ff
1151+ 8F17 28 0B            jr z,1F
1152+ 8F19 FE 01            cp $01
1153+ 8F1B 28 07            jr z,1F
1154+ 8F1D FE 02            cp $02
1155+ 8F1F 28 03            jr z,1F
1156+ 8F21 FE 03            cp $03
1157+ 8F23 C0               ret nz
1158+ 8F24
1159+ 8F24 04           1 inc b
1160+ 8F25 C9               ret
1161+ 8F26
# file closed: Disparo.asm
1114  8F26              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F26              ; ******************************************************************************************************************************************************************************************
   2+ 8F26              ;
   3+ 8F26              ; 01/23
   4+ 8F26              ;
   5+ 8F26              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F26
   7+ 8F26 CD 00 92     Draw call Prepara_draw
   8+ 8F29 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8F2A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8F2B 28 05        	jr z,2F
  11+ 8F2D
  12+ 8F2D 3A 02 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8F30 18 0C        	jr 1F
  14+ 8F32 2A 00 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8F35 22 F0 86     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8F38 CD C7 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8F3B              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8F3B CD 46 99     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8F3E 3A 1C 87     1 ld a,(Ctrl_0)
  20+ 8F41 CB 6F        	bit 5,a
  21+ 8F43 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8F45
  23+ 8F45 CD 5D 8F     	call Comprueba_limite_horizontal
  24+ 8F48 CD ED 8F     	call Comprueba_limite_vertical
  25+ 8F4B
  26+ 8F4B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8F4B
  28+ 8F4B CD 3A 91     3 call calcula_CColumnass
  29+ 8F4E CD 71 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8F51 CD C6 91     	call Define_rutina_de_impresion
  31+ 8F54
  32+ 8F54 3A 1C 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8F57 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8F59 32 1C 87     	ld (Ctrl_0),a
  35+ 8F5C
  36+ 8F5C C9           	ret
  37+ 8F5D
  38+ 8F5D              ; *******************************************************************************************************************************************************************************************
  39+ 8F5D              ;	21/01/23
  40+ 8F5D              ;
  41+ 8F5D              ; 	Comprueba_limite_horizontal.
  42+ 8F5D              ;
  43+ 8F5D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8F5D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8F5D              ;
  46+ 8F5D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8F5D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8F5D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8F5D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8F5D
  51+ 8F5D
  52+ 8F5D
  53+ 8F5D 3A 1C 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8F60 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8F62 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8F64 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8F66 32 1C 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8F69 18 09            jr 6F
  59+ 8F6B CB 5F        1 bit 3,a
  60+ 8F6D 28 0A            jr z,2F
  61+ 8F6F E6 F7            and $f7
  62+ 8F71 32 1C 87         ld (Ctrl_0),a
  63+ 8F74 CD C7 90     6 call Inicializacion
  64+ 8F77 18 5B            jr 5F
  65+ 8F79 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8F7A
  67+ 8F7A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8F7A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8F7A
  70+ 8F7A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8F7B 2A 27 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8F7E CD CC 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8F81 67           	ld h,a
  74+ 8F82 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8F83 CD CC 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8F86 67           	ld h,a
  77+ 8F87 A7           	and a
  78+ 8F88 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8F8A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8F8B 3A 02 87     	ld a,(Cuad_objeto)
  81+ 8F8E FE 02        	cp 2
  82+ 8F90 38 1E        	jr c,3F
  83+ 8F92 28 1C        	jr z,3F
  84+ 8F94 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8F95 28 23            jr z,7F
  86+ 8F97 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8F99 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8F9B E1           	pop hl
  89+ 8F9C
  90+ 8F9C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8F9C              ; _para indicar con E="2" en caso necesario.
  92+ 8F9C
  93+ 8F9C E5               push hl
  94+ 8F9D C5               push bc
  95+ 8F9E CD CC 94     	call calcula_tercio
  96+ 8FA1 FE 01        	cp 1
  97+ 8FA3 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8FA5 CD D5 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8FA8 28 26            jr z,9F
 100+ 8FAA 38 24            jr c,9F
 101+ 8FAC 1E 00        11 ld e,0
 102+ 8FAE 18 22            jr 8F
 103+ 8FB0 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8FB1 28 07        	jr z, 7F
 105+ 8FB3 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8FB5 1E 00         	ld e,0
 107+ 8FB7 E1           	pop hl
 108+ 8FB8 18 04        	jr 4F
 109+ 8FBA 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8FBC 18 15            jr 10F
 111+ 8FBE
 112+ 8FBE              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8FBE              ; _para indicar con E="2" en caso necesario.
 114+ 8FBE
 115+ 8FBE E5           4 push hl
 116+ 8FBF C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8FC0 CD CC 94     	call calcula_tercio
 118+ 8FC3 FE 01        	cp 1
 119+ 8FC5 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8FC7 CD D5 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8FCA 28 04            jr z,9F
 122+ 8FCC 30 02            jr nc,9F
 123+ 8FCE 18 02        	jr 8F
 124+ 8FD0 1E 02        9 ld e,2
 125+ 8FD2 C1           8 pop bc
 126+ 8FD3 E1           10 pop hl
 127+ 8FD4 C9           5 ret
 128+ 8FD5
 129+ 8FD5              ; --------------------
 130+ 8FD5              ;
 131+ 8FD5              ; 25/08/22
 132+ 8FD5
 133+ 8FD5 CD CC 94     Comprueba_centro call calcula_tercio
 134+ 8FD8 67               ld h,a
 135+ 8FD9 08           	ex af,af
 136+ 8FDA FE 02        	cp 2
 137+ 8FDC 38 07        	jr c,1F
 138+ 8FDE 28 05        	jr z,1F
 139+ 8FE0 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8FE3 18 03        	jr 2F
 141+ 8FE5 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8FE8 08           2 ex af,af
 143+ 8FE9 A7               and a
 144+ 8FEA ED 42            sbc hl,bc
 145+ 8FEC C9               ret
 146+ 8FED
 147+ 8FED              ; *********************************************************************************************************************************************************************************************
 148+ 8FED              ;
 149+ 8FED              ;   16/8/22
 150+ 8FED              ;
 151+ 8FED              ;	Comprueba_limite_vertical
 152+ 8FED              ;
 153+ 8FED              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8FED              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8FED              ;
 156+ 8FED
 157+ 8FED 2A F0 86     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8FF0 7D           	ld a,l
 159+ 8FF1 E6 1F        	and $1F
 160+ 8FF3 57           	ld d,a
 161+ 8FF4 3A 29 87     	ld a,(Limite_vertical)
 162+ 8FF7 BA           	cp d 											; Límite - Posición.
 163+ 8FF8 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8FF9 3A 02 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8FFC CB 47        	bit 0,a
 166+ 8FFE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9000
 168+ 9000              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9000
 170+ 9000 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9001 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9003
 173+ 9003              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9003              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9003
 176+ 9003 3A F4 86         ld a,(Coordenada_X)
 177+ 9006 16 0F            ld d,Centro_izquierda
 178+ 9008 A7               and a
 179+ 9009 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 900A 28 1E            jr z,3F
 181+ 900C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 900E              ;                                                    ; _salimos sin modificar nada.
 183+ 900E 18 0E            jr 2F
 184+ 9010 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9011 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9013
 187+ 9013              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9013              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9013
 190+ 9013 3A F4 86         ld a,(Coordenada_X)
 191+ 9016 16 10            ld d,Centro_derecha
 192+ 9018 A7               and a
 193+ 9019 92               sub d
 194+ 901A 28 0E            jr z,3F
 195+ 901C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 901E              ;                                                    ; _salimos sin modificar nada.
 197+ 901E CB 43        2 bit 0,e
 198+ 9020 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9022 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9023 CD B7 90         call Modificaccionne
 201+ 9026 C1           	pop bc
 202+ 9027 CD C7 90         call Inicializacion
 203+ 902A C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 902B
 205+ 902B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 902B
 207+ 902B C5           4 push bc
 208+ 902C 01 EF 86     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 902F 0A           	ld a,(bc)
 210+ 9030 3D           	dec a
 211+ 9031 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9032 7D           	ld a,l
 213+ 9033 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9034 CB 47        	bit 0,a
 215+ 9036 28 03        	jr z,5F
 216+ 9038 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9039 18 2E        	jr 7F
 218+ 903B
 219+ 903B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 903B
 221+ 903B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 903C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 903D 3A 1C 87     	ld a,(Ctrl_0)
 224+ 9040 CB 4F        	bit 1,a
 225+ 9042 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9044 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9045
 228+ 9045              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9045
 230+ 9045 1C               inc e
 231+ 9046 1D               dec e
 232+ 9047 20 07            jr nz,12F
 233+ 9049 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 904A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 904B 22 F0 86     	ld (Posicion_actual),hl
 236+ 904E 18 44        13 jr 9F
 237+ 9050 CB 43        12 bit 0,e
 238+ 9052 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9054              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9054 C1           	pop bc
 241+ 9055 18 D3        	jr 3B
 242+ 9057 80           14 add b
 243+ 9058 6F               ld l,a
 244+ 9059 22 F0 86     	ld (Posicion_actual),hl
 245+ 905C CD B7 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 905F 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9061 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9063 32 1C 87         ld (Ctrl_0),a
 249+ 9066 F1           	pop af
 250+ 9067 18 2B        	jr 9F
 251+ 9069
 252+ 9069              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9069
 254+ 9069 F5           7 push af
 255+ 906A 3A 1C 87     	ld a,(Ctrl_0)
 256+ 906D CB 47        	bit 0,a
 257+ 906F 20 1D        	jr nz,8F
 258+ 9071 F1           	pop af
 259+ 9072
 260+ 9072              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9072
 262+ 9072 1C           	inc e
 263+ 9073 1D               dec e
 264+ 9074 20 07            jr nz,10F
 265+ 9076 90           	sub b
 266+ 9077 6F               ld l,a
 267+ 9078 22 F0 86     	ld (Posicion_actual),hl
 268+ 907B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 907D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 907D CB 43        10 bit 0,e
 271+ 907F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9081              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9081 C1           	pop bc
 274+ 9082 18 A6        	jr 3B
 275+ 9084 90           16 sub b
 276+ 9085 6F               ld l,a
 277+ 9086 22 F0 86     	ld (Posicion_actual),hl
 278+ 9089 CD B7 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 908C 18 06            jr 9F
 280+ 908E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9090 32 1C 87         ld (Ctrl_0),a
 282+ 9093 F1           	pop af
 283+ 9094 C1           9 pop bc
 284+ 9095 1E 00        	ld e,0
 285+ 9097 CD C7 90         call Inicializacion
 286+ 909A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 909B 08           	ex af,af
 288+ 909C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 909D 18 8B            jr 3B
 290+ 909F
 291+ 909F              ; --------------------
 292+ 909F
 293+ 909F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 90A1 CD 1B 92     1 call PreviousScan
 295+ 90A4 10 FB            djnz 1B
 296+ 90A6 22 F0 86     	ld (Posicion_actual),hl
 297+ 90A9 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 90AA C9           	ret
 299+ 90AB
 300+ 90AB              ; --------------------
 301+ 90AB
 302+ 90AB 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 90AD CD 0C 92     1 call NextScan
 304+ 90B0 10 FB            djnz 1B
 305+ 90B2 22 F0 86     	ld (Posicion_actual),hl
 306+ 90B5 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 90B6 C9           	ret
 308+ 90B7
 309+ 90B7              ; --------------------
 310+ 90B7              ;
 311+ 90B7              ;	22/01/23
 312+ 90B7              ;
 313+ 90B7              ;	E="1". Hemos cambiado de cuadrante.
 314+ 90B7              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 90B7              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 90B7
 317+ 90B7
 318+ 90B7              Modificaccionne
 319+ 90B7
 320+ 90B7 3A 02 87     	ld a,(Cuad_objeto)
 321+ 90BA FE 02        	cp 2
 322+ 90BC CC 9F 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 90BF DC 9F 90         call c,Modifica_Pos_actual
 324+ 90C2 C8           	ret z
 325+ 90C3 CD AB 90         call Modifica_Pos_actual2
 326+ 90C6 C9               ret
 327+ 90C7
 328+ 90C7              ; *************************************************************************************************************************************************************************************************
 329+ 90C7              ;
 330+ 90C7              ;	13/8/22
 331+ 90C7              ;
 332+ 90C7              ;	Inicializacion
 333+ 90C7              ;
 334+ 90C7              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 90C7              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 90C7              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 90C7              ;
 338+ 90C7              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 90C7              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 90C7              ;	_ desaparece/aparece.
 341+ 90C7
 342+ 90C7              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 90C7              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 90C7              ;
 345+ 90C7              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 90C7              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 90C7              ; 		   [E] ="0"
 348+ 90C7
 349+ 90C7              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 90C7
 351+ 90C7 CD CC 94     Inicializacion call calcula_tercio
 352+ 90CA 28 36        	jr z,primit
 353+ 90CC E6 02        	and 2
 354+ 90CE 20 07        	jr nz,segmit
 355+ 90D0 7D           	ld a,l
 356+ 90D1 FE 7F        	cp $7f
 357+ 90D3 38 2D        	jr c,primit
 358+ 90D5 28 2B        	jr z,primit
 359+ 90D7 CD 34 91     segmit call column
 360+ 90DA 38 13        	jr c,tercuad
 361+ 90DC 3E 04        cuarcuad ld a,4
 362+ 90DE 32 02 87     	ld (Cuad_objeto),a
 363+ 90E1 21 20 48     	ld hl,$4820
 364+ 90E4 22 27 87     	ld (Limite_horizontal),hl
 365+ 90E7 21 29 87     	ld hl,Limite_vertical
 366+ 90EA 36 0D        	ld (hl),$0d
 367+ 90EC 08           	ex af,af
 368+ 90ED 18 3C        	jr 1F
 369+ 90EF              tercuad
 370+ 90EF 3E 03        	ld a,3
 371+ 90F1 32 02 87     	ld (Cuad_objeto),a
 372+ 90F4 21 20 48     	ld hl,$4820
 373+ 90F7 22 27 87     	ld (Limite_horizontal),hl
 374+ 90FA 21 29 87     	ld hl,Limite_vertical
 375+ 90FD 36 12        	ld (hl),$12
 376+ 90FF 08           	ex af,af
 377+ 9100 18 29        	jr 1F
 378+ 9102 CD 34 91     primit call column
 379+ 9105 38 13        	jr c, primcuad
 380+ 9107              segcuad
 381+ 9107 3E 02        	ld a,2
 382+ 9109 32 02 87     	ld (Cuad_objeto),a
 383+ 910C 21 C0 4F     	ld hl,$4fc0
 384+ 910F 22 27 87     	ld (Limite_horizontal),hl
 385+ 9112 21 29 87     	ld hl,Limite_vertical
 386+ 9115 36 0D        	ld (hl),$0d
 387+ 9117 08           	ex af,af
 388+ 9118 18 11        	jr 1F
 389+ 911A              primcuad
 390+ 911A 3E 01        	ld a,1
 391+ 911C 32 02 87     	ld (Cuad_objeto),a
 392+ 911F 21 C0 4F     	ld hl,$4fc0
 393+ 9122 22 27 87     	ld (Limite_horizontal),hl
 394+ 9125 21 29 87     	ld hl,Limite_vertical
 395+ 9128 36 12        	ld (hl),$12
 396+ 912A 08           	ex af,af
 397+ 912B CD F8 97     1 call Genera_coordenadas
 398+ 912E 21 1C 87     	ld hl,Ctrl_0
 399+ 9131 CB EE        	set 5,(hl)
 400+ 9133 C9           	ret
 401+ 9134
 402+ 9134              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9134
 404+ 9134              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9134              ;
 406+ 9134              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9134
 408+ 9134 7D           column ld a,l
 409+ 9135 E6 1F        	and $1f
 410+ 9137 FE 10         	cp $10
 411+ 9139 C9            	ret
 412+ 913A
 413+ 913A              ; --------------------------------------------------------------------------------------------------------------------
 414+ 913A              ;
 415+ 913A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 913A              ;
 417+ 913A              ; 14/12/22
 418+ 913A              ;
 419+ 913A              ;	Modifica: A y BC.
 420+ 913A
 421+ 913A 3A 02 87     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 913D E6 01        	and 1
 423+ 913F 28 17        	jr z,1F
 424+ 9141
 425+ 9141              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9141
 427+ 9141 3A F4 86     	ld a,(Coordenada_X)
 428+ 9144 47           	ld b,a
 429+ 9145 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9146 79           	ld a,c
 431+ 9147 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9148 38 08        	jr c,2F
 433+ 914A 47           	ld b,a
 434+ 914B 79           	ld a,c
 435+ 914C 90           	sub b
 436+ 914D 32 26 87     	ld (Columnas),a
 437+ 9150 18 1B        	jr 4F
 438+ 9152 79           2 ld a,c
 439+ 9153 32 26 87     	ld (Columnas),a
 440+ 9156 18 15        	jr 4F
 441+ 9158
 442+ 9158              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9158
 444+ 9158 3A F4 86     1 ld a,(Coordenada_X)
 445+ 915B 81           	add c
 446+ 915C 3D           	dec a
 447+ 915D D6 1F        	sub $1f
 448+ 915F 38 08        	jr c,3F
 449+ 9161 47           	ld b,a
 450+ 9162 79           	ld a,c
 451+ 9163 90           	sub b
 452+ 9164 32 26 87     	ld (Columnas),a
 453+ 9167 18 04        	jr 4F
 454+ 9169 79           3 ld a,c
 455+ 916A 32 26 87     	ld (Columnas),a
 456+ 916D D9           4 exx
 457+ 916E 4F           	ld c,a
 458+ 916F D9           	exx
 459+ 9170 C9            ret
 460+ 9171
 461+ 9171              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9171              ;
 463+ 9171              ; 7/1/23
 464+ 9171              ;
 465+ 9171              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9171              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9171              ;
 468+ 9171              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9171              ;	DESTRUYE: HL,B Y A.
 470+ 9171
 471+ 9171 3A 02 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9174 FE 02        	cp 2
 473+ 9176 38 18        	jr c,1F
 474+ 9178 28 16        	jr z,1F
 475+ 917A E6 01        	and 1
 476+ 917C 28 0D        	jr z,3F
 477+ 917E
 478+ 917E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 917E
 480+ 917E CD BA 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9181
 482+ 9181 7D           9 ld a,l
 483+ 9182 E6 1F        	and $1f
 484+ 9184 28 2A        	jr z,7F
 485+ 9186 2B           	dec hl
 486+ 9187 10 F8        	djnz 9B
 487+ 9189 18 25        	jr 7F
 488+ 918B
 489+ 918B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 918B
 491+ 918B 2A F0 86     3 ld hl,(Posicion_actual)
 492+ 918E 18 20        	jr 7F
 493+ 9190
 494+ 9190 28 14        1 jr z,2F
 495+ 9192
 496+ 9192              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9192
 498+ 9192 CD BA 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9195 7D           4 ld a,l
 500+ 9196 E6 1F        	and $1f
 501+ 9198 28 03        	jr z,6F
 502+ 919A 2B           	dec hl
 503+ 919B 10 F8        	djnz 4B
 504+ 919D 06 0F        6 ld b,15
 505+ 919F CD 1B 92     5 call PreviousScan
 506+ 91A2 10 FB        	djnz 5B
 507+ 91A4 18 0A        	jr 7F
 508+ 91A6
 509+ 91A6              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 91A6
 511+ 91A6 CD BA 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 91A9 06 0F        	ld b,15
 513+ 91AB CD 1B 92     8 call PreviousScan
 514+ 91AE 10 FB        	djnz 8B
 515+ 91B0
 516+ 91B0 E5           7 push hl
 517+ 91B1 DD E1        	pop ix
 518+ 91B3
 519+ 91B3 2A F2 86     	ld hl,(Puntero_objeto)
 520+ 91B6 E5           	push hl
 521+ 91B7 FD E1        	pop iy
 522+ 91B9
 523+ 91B9 C9           	ret
 524+ 91BA
 525+ 91BA              ; --------------------------------------------------------------------------------------------------------------------
 526+ 91BA              ;
 527+ 91BA              ;	2/1/23
 528+ 91BA              ;
 529+ 91BA              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 91BA              ;
 531+ 91BA              ;	Tras esta rutina tenemos:
 532+ 91BA              ;
 533+ 91BA              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 91BA              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 91BA              ;
 536+ 91BA              ;	DESTRUYE!!!!! HL,B y A.
 537+ 91BA
 538+ 91BA 2A F0 86     Operandos ld hl,(Posicion_actual)
 539+ 91BD 3A 26 87     	ld a,(Columnas)
 540+ 91C0 3D           	dec a
 541+ 91C1 20 01        	jr nz,1F
 542+ 91C3 3C           	inc a
 543+ 91C4 47           1 ld b,a
 544+ 91C5 C9           	ret
 545+ 91C6
 546+ 91C6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 91C6              ;
 548+ 91C6              ;	3/1/23
 549+ 91C6              ;
 550+ 91C6              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 91C6              ;
 552+ 91C6              ;	Destruye: A,B,HL y DE.
 553+ 91C6
 554+ 91C6              Define_rutina_de_impresion
 555+ 91C6
 556+ 91C6 3A EF 86     	ld a,(Columns)
 557+ 91C9 47           	ld b,a
 558+ 91CA 3A 26 87     	ld a,(Columnas)
 559+ 91CD B8           	cp b
 560+ 91CE 20 0D        	jr nz,2f
 561+ 91D0
 562+ 91D0              ;	La entidad se imprime entera.
 563+ 91D0
 564+ 91D0 21 9C 92     	ld hl, Indice_entidades_completas
 565+ 91D3 E6 01        	and 1
 566+ 91D5 28 02        	jr z,1F
 567+ 91D7
 568+ 91D7 23           	inc hl
 569+ 91D8 23           	inc hl
 570+ 91D9
 571+ 91D9 CD A3 89     1 call Extrae_address
 572+ 91DC C9           	ret		;	ret
 573+ 91DD
 574+ 91DD              ;	La entidad no se imprime entera en pantalla.
 575+ 91DD
 576+ 91DD 3A 02 87     2 ld a,(Cuad_objeto)
 577+ 91E0 E6 01        	and 1
 578+ 91E2 28 17        	jr z,3F
 579+ 91E4
 580+ 91E4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 91E4
 582+ 91E4 21 A0 92     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 91E7 3A EF 86     4 ld a,(Columns)
 584+ 91EA E6 01        	and 1
 585+ 91EC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 91EE
 587+ 91EE 23           	inc hl
 588+ 91EF 23           	inc hl
 589+ 91F0
 590+ 91F0 3A 26 87     	ld a,(Columnas)
 591+ 91F3 E6 01        	and 1
 592+ 91F5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 91F7
 594+ 91F7 23           	inc hl
 595+ 91F8 23           	inc hl
 596+ 91F9
 597+ 91F9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 91FB
 599+ 91FB 21 A6 92     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 91FE 18 E7        	jr 4B
 601+ 9200
 602+ 9200              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9200              ;
 604+ 9200              ;	Prepara_draw
 605+ 9200              ;
 606+ 9200              ;	Es una rutina de carga.
 607+ 9200              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9200              ;
 609+ 9200              ;	FUNCIONAMIENTO:
 610+ 9200              ;
 611+ 9200              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9200              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9200              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9200              ;
 615+ 9200              ;	DESTRUYE:
 616+ 9200              ;
 617+ 9200              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9200
 619+ 9200 21 EE 86     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9203 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9204 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9205 4E           	ld c,(hl)
 623+ 9206 2A F0 86     	ld hl,(Posicion_actual)
 624+ 9209 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 920B C9           	ret
 626+ 920C
 627+ 920C              ;----------------------------------------------------------------------------------------------------------------
 628+ 920C              ;
 629+ 920C              ;	5/08/22
 630+ 920C              ;
 631+ 920C              ;   NextScan.
 632+ 920C              ;
 633+ 920C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 920C              ;
 635+ 920C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 920C              ;
 637+ 920C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 920C              ;
 639+ 920C              ;       DESTRUIDOS: AF y HL !!!
 640+ 920C              ;
 641+ 920C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 920C              ;
 643+ 920C
 644+ 920C 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 920D 7C               ld a,h
 646+ 920E E6 07            and 7
 647+ 9210 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9211
 649+ 9211 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9212 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9214 6F               ld l,a
 652+ 9215 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9216
 654+ 9216 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9217 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9219 67               ld h,a
 657+ 921A C9               ret
 658+ 921B
 659+ 921B              ;----------------------------------------------------------------------------------------------------------------
 660+ 921B              ;
 661+ 921B              ;	5/08/22
 662+ 921B              ;
 663+ 921B              ;   PreviousScan.
 664+ 921B              ;
 665+ 921B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 921B              ;
 667+ 921B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 921B              ;
 669+ 921B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 921B              ;
 671+ 921B              ;       DESTRUIDOS: AF y HL !!!
 672+ 921B              ;
 673+ 921B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 921B              ;
 675+ 921B
 676+ 921B 7C           PreviousScan ld a,h
 677+ 921C 25               dec h               ; Dec H.
 678+ 921D E6 07            and 7
 679+ 921F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9220
 681+ 9220 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9221 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9223 6F               ld l,a
 684+ 9224 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9225
 686+ 9225 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9226 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9228 67               ld h,a
 689+ 9229 C9               ret
 690+ 922A
 691+ 922A              ; -----------------------------------------------------------------------------------
 692+ 922A              ;
 693+ 922A              ;	28/2/23
 694+ 922A              ;
 695+ 922A              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 922A              ;	Extrae fotos de Album_de_fotos.
 697+ 922A
 698+ 922A              Extrae_foto_entidades
 699+ 922A
 700+ 922A 3A 33 87     	ld a,(Numero_de_malotes)
 701+ 922D A7           	and a
 702+ 922E C8           	ret z
 703+ 922F ED 73 38 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 9233 31 00 70     	ld sp,Album_de_fotos
 705+ 9236
 706+ 9236 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 9238 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 9239 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 923A
 710+ 923A ED 73 3A 87  	ld (Stack_2),sp
 711+ 923E ED 7B 38 87  	ld sp,(Stack)
 712+ 9242
 713+ 9242              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 9242
 715+ 9242 3E CD        	ld a,$cd
 716+ 9244 32 4C 92     	ld (Imprime),a
 717+ 9247 EB           	ex de,hl
 718+ 9248 22 4D 92     	ld (Imprime+1),hl
 719+ 924B EB           	ex de,hl
 720+ 924C
 721+ 924C              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 924C
 723+ 924C 00 00 00     Imprime db 0,0,0
 724+ 924F
 725+ 924F 3A 33 87     	ld a,(Numero_de_malotes)
 726+ 9252 3D           	dec a
 727+ 9253 28 09        	jr z,1F
 728+ 9255 32 33 87      	ld (Numero_de_malotes),a
 729+ 9258
 730+ 9258 ED 7B 3A 87   	ld sp,(Stack_2)
 731+ 925C 18 D8        	jr 2B
 732+ 925E
 733+ 925E AF           1 xor a
 734+ 925F 32 3A 87     	ld (Stack_2),a
 735+ 9262 C9           	ret
 736+ 9263
 737+ 9263              ; -----------------------------------------------------------------------------------
 738+ 9263              ;
 739+ 9263              ;	28/2/23
 740+ 9263              ;
 741+ 9263              ;	Pinta los disparos generados.
 742+ 9263
 743+ 9263              Extrae_foto_disparos
 744+ 9263
 745+ 9263 3A 40 87     	ld a,(Numero_de_disparotes)
 746+ 9266 A7           	and a
 747+ 9267 C8           	ret z
 748+ 9268 ED 73 38 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 926C 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 926F
 751+ 926F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9271 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9272 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9273
 755+ 9273 ED 73 3A 87  	ld (Stack_2),sp
 756+ 9277 ED 7B 38 87  	ld sp,(Stack)
 757+ 927B
 758+ 927B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 927B
 760+ 927B 3E CD        	ld a,$cd
 761+ 927D 32 85 92     	ld (Imprime2),a
 762+ 9280 EB           	ex de,hl
 763+ 9281 22 86 92     	ld (Imprime2+1),hl
 764+ 9284 EB           	ex de,hl
 765+ 9285
 766+ 9285              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9285
 768+ 9285 00 00 00     Imprime2 db 0,0,0
 769+ 9288
 770+ 9288 3A 40 87     	ld a,(Numero_de_disparotes)
 771+ 928B 3D           	dec a
 772+ 928C 28 09        	jr z,1F
 773+ 928E 32 40 87      	ld (Numero_de_disparotes),a
 774+ 9291
 775+ 9291 ED 7B 3A 87  	ld sp,(Stack_2)
 776+ 9295 18 D8        	jr 2B
 777+ 9297
 778+ 9297 AF           1 xor a
 779+ 9298 32 3A 87     	ld (Stack_2),a
 780+ 929B C9           	ret
 781+ 929C
# file closed: Draw_XOR.asm
1115  929C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 929C              ;   índices de Rutinas de impresión.
   2+ 929C
   3+ 929C AC 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 929E D9 92            defw Pinta_Amadeus_3x2
   5+ 92A0
   6+ 92A0 2F 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92A2 CF 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92A4 83 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92A6
  10+ 92A6 59 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92A8 5D 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92AA 11 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92AC
  14+ 92AC
  15+ 92AC              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92AC              ;
  17+ 92AC              ;   12/12/22
  18+ 92AC              ;
  19+ 92AC              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92AC              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92AC              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92AC              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92AC              ;
  24+ 92AC              ;   Modifica: DE y HL.
  25+ 92AC
  26+ 92AC ED 73 38 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92B0 FD F9        	ld sp,iy
  28+ 92B2 06 10            ld b,16
  29+ 92B4 D1           1 pop de
  30+ 92B5 7B               ld a,e
  31+ 92B6 AE               xor (hl)
  32+ 92B7 77           	ld (hl),a
  33+ 92B8 23           	inc hl
  34+ 92B9 7A               ld a,d
  35+ 92BA AE               xor (hl)
  36+ 92BB 77           	ld (hl),a
  37+ 92BC 2B           	dec hl
  38+ 92BD 24           	inc h
  39+ 92BE 7C               ld a,h
  40+ 92BF E6 07            and 7
  41+ 92C1 20 0A            jr nz,2F
  42+ 92C3 7D               ld a,l
  43+ 92C4 C6 20            add a,$20
  44+ 92C6 6F               ld l,a
  45+ 92C7 38 04            jr c,2F
  46+ 92C9 7C               ld a,h
  47+ 92CA D6 08            sub 8
  48+ 92CC 67               ld h,a
  49+ 92CD 7C           2 ld a,h
  50+ 92CE FE 58            cp $58
  51+ 92D0 28 02            jr z,3F
  52+ 92D2 10 E0            djnz 1B
  53+ 92D4 ED 7B 38 87  3 ld sp,(Stack)
  54+ 92D8 C9           	ret
  55+ 92D9
  56+ 92D9 ED 73 38 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 92DD FD F9        	ld sp,iy
  58+ 92DF 06 08            ld b,8
  59+ 92E1 D1           1 pop de
  60+ 92E2 7B               ld a,e
  61+ 92E3 AE               xor (hl)
  62+ 92E4 77           	ld (hl),a
  63+ 92E5 23           	inc hl
  64+ 92E6 7A               ld a,d
  65+ 92E7 AE               xor (hl)
  66+ 92E8 77           	ld (hl),a
  67+ 92E9 23           	inc hl
  68+ 92EA D1           	pop de
  69+ 92EB 7B               ld a,e
  70+ 92EC AE               xor (hl)
  71+ 92ED 77           	ld (hl),a
  72+ 92EE 2B           	dec hl
  73+ 92EF 2B           	dec hl
  74+ 92F0 24           	inc h
  75+ 92F1 7C               ld a,h
  76+ 92F2 E6 07            and 7
  77+ 92F4 20 0A            jr nz,2F
  78+ 92F6 7D               ld a,l
  79+ 92F7 C6 20            add a,$20
  80+ 92F9 6F               ld l,a
  81+ 92FA 38 04            jr c,2F
  82+ 92FC 7C               ld a,h
  83+ 92FD D6 08            sub 8
  84+ 92FF 67               ld h,a
  85+ 9300 7C           2 ld a,h
  86+ 9301 FE 58            cp $58
  87+ 9303 28 25            jr z,4F
  88+ 9305 7A               ld a,d
  89+ 9306 AE               xor (hl)
  90+ 9307 77               ld (hl),a
  91+ 9308 D1           	pop de
  92+ 9309 23           	inc hl
  93+ 930A 7B               ld a,e
  94+ 930B AE               xor (hl)
  95+ 930C 77           	ld (hl),a
  96+ 930D 23           	inc hl
  97+ 930E 7A               ld a,d
  98+ 930F AE               xor (hl)
  99+ 9310 77           	ld (hl),a
 100+ 9311 2B           	dec hl
 101+ 9312 2B           	dec hl
 102+ 9313 24           	inc h
 103+ 9314 7C               ld a,h
 104+ 9315 E6 07            and 7
 105+ 9317 20 0A            jr nz,3F
 106+ 9319 7D               ld a,l
 107+ 931A C6 20            add a,$20
 108+ 931C 6F               ld l,a
 109+ 931D 38 04            jr c,3F
 110+ 931F 7C               ld a,h
 111+ 9320 D6 08            sub 8
 112+ 9322 67               ld h,a
 113+ 9323 7C           3 ld a,h
 114+ 9324 FE 58            cp $58
 115+ 9326 28 02            jr z,4F
 116+ 9328 10 B7            djnz 1B
 117+ 932A ED 7B 38 87  4 ld sp,(Stack)
 118+ 932E C9           	ret
 119+ 932F
 120+ 932F              ; ---------------------------------------------------
 121+ 932F
 122+ 932F ED 73 38 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9333 FD F9        	ld sp,iy
 124+ 9335
 125+ 9335              ; >>>
 126+ 9335
 127+ 9335 06 10            ld b,16
 128+ 9337 D1           1 pop de
 129+ 9338 7A           	ld a,d
 130+ 9339 AE           	xor (hl)
 131+ 933A 77           	ld (hl),a
 132+ 933B 24           	inc h
 133+ 933C 7C               ld a,h
 134+ 933D E6 07            and 7
 135+ 933F 20 0C            jr nz,2F
 136+ 9341 7D               ld a,l
 137+ 9342 C6 20            add a,$20
 138+ 9344 6F               ld l,a
 139+ 9345 38 06            jr c,2F
 140+ 9347 7C               ld a,h
 141+ 9348 D6 08            sub 8
 142+ 934A 67               ld h,a
 143+ 934B 18 00            jr 2F
 144+ 934D 7C           2 ld a,h
 145+ 934E FE 58            cp $58
 146+ 9350 28 02            jr z,3F
 147+ 9352 10 E3            djnz 1B
 148+ 9354 ED 7B 38 87  3 ld sp,(Stack)
 149+ 9358 C9           	ret
 150+ 9359
 151+ 9359 ED 73 38 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 935D FD F9        	ld sp,iy
 153+ 935F
 154+ 935F              ; >>>
 155+ 935F
 156+ 935F 06 10            ld b,16
 157+ 9361 D1           1 pop de
 158+ 9362 7B           	ld a,e
 159+ 9363 AE           	xor (hl)
 160+ 9364 77           	ld (hl),a
 161+ 9365 24           	inc h
 162+ 9366 7C               ld a,h
 163+ 9367 E6 07            and 7
 164+ 9369 20 0C            jr nz,2F
 165+ 936B 7D               ld a,l
 166+ 936C C6 20            add a,$20
 167+ 936E 6F               ld l,a
 168+ 936F 38 06            jr c,2F
 169+ 9371 7C               ld a,h
 170+ 9372 D6 08            sub 8
 171+ 9374 67               ld h,a
 172+ 9375 18 00            jr 2F
 173+ 9377 7C           2 ld a,h
 174+ 9378 FE 58            cp $58
 175+ 937A 28 02            jr z,3F
 176+ 937C 10 E3            djnz 1B
 177+ 937E ED 7B 38 87  3 ld sp,(Stack)
 178+ 9382 C9           	ret
 179+ 9383
 180+ 9383              ; ---------------------------------------------------
 181+ 9383
 182+ 9383 ED 73 38 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9387 FD F9        	ld sp,iy
 184+ 9389 06 08            ld b,8
 185+ 938B D1           1 pop de
 186+ 938C 7A           	ld a,d
 187+ 938D AE           	xor (hl)
 188+ 938E 77           	ld (hl),a
 189+ 938F 23           	inc hl
 190+ 9390 D1           	pop de
 191+ 9391 7B           	ld a,e
 192+ 9392 AE           	xor (hl)
 193+ 9393 77           	ld (hl),a
 194+ 9394 2B           	dec hl
 195+ 9395 24            	inc h
 196+ 9396 7C               ld a,h
 197+ 9397 E6 07            and 7
 198+ 9399 20 0A            jr nz,2F
 199+ 939B 7D               ld a,l
 200+ 939C C6 20            add a,$20
 201+ 939E 6F               ld l,a
 202+ 939F 38 04            jr c,2F
 203+ 93A1 7C               ld a,h
 204+ 93A2 D6 08            sub 8
 205+ 93A4 67               ld h,a
 206+ 93A5 7C           2 ld a,h
 207+ 93A6 FE 58            cp $58
 208+ 93A8 28 20            jr z,4F
 209+ 93AA D1               pop de
 210+ 93AB 7B           	ld a,e
 211+ 93AC AE           	xor (hl)
 212+ 93AD 77           	ld (hl),a
 213+ 93AE 23           	inc hl
 214+ 93AF 7A           	ld a,d
 215+ 93B0 AE           	xor (hl)
 216+ 93B1 77           	ld (hl),a
 217+ 93B2 2B           	dec hl
 218+ 93B3 24           	inc h
 219+ 93B4 7C               ld a,h
 220+ 93B5 E6 07            and 7
 221+ 93B7 20 0A            jr nz,3F
 222+ 93B9 7D               ld a,l
 223+ 93BA C6 20            add a,$20
 224+ 93BC 6F               ld l,a
 225+ 93BD 38 04            jr c,3F
 226+ 93BF 7C               ld a,h
 227+ 93C0 D6 08            sub 8
 228+ 93C2 67               ld h,a
 229+ 93C3 7C           3 ld a,h
 230+ 93C4 FE 58            cp $58
 231+ 93C6 28 02            jr z,4F
 232+ 93C8 10 C1            djnz 1B
 233+ 93CA ED 7B 38 87  4 ld sp,(Stack)
 234+ 93CE C9           	ret
 235+ 93CF
 236+ 93CF ED 73 38 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 93D3 FD F9        	ld sp,iy
 238+ 93D5 06 08            ld b,8
 239+ 93D7 D1           1 pop de
 240+ 93D8 D1           	pop de
 241+ 93D9 7B           	ld a,e
 242+ 93DA AE           	xor (hl)
 243+ 93DB 77           	ld (hl),a
 244+ 93DC 24            	inc h
 245+ 93DD 7C               ld a,h
 246+ 93DE E6 07            and 7
 247+ 93E0 20 0A            jr nz,2F
 248+ 93E2 7D               ld a,l
 249+ 93E3 C6 20            add a,$20
 250+ 93E5 6F               ld l,a
 251+ 93E6 38 04            jr c,2F
 252+ 93E8 7C               ld a,h
 253+ 93E9 D6 08            sub 8
 254+ 93EB 67               ld h,a
 255+ 93EC 7C           2 ld a,h
 256+ 93ED FE 58            cp $58
 257+ 93EF 28 1B            jr z,4F
 258+ 93F1 D1               pop de
 259+ 93F2 7A           	ld a,d
 260+ 93F3 AE           	xor (hl)
 261+ 93F4 77           	ld (hl),a
 262+ 93F5 24           	inc h
 263+ 93F6 7C               ld a,h
 264+ 93F7 E6 07            and 7
 265+ 93F9 20 0A            jr nz,3F
 266+ 93FB 7D               ld a,l
 267+ 93FC C6 20            add a,$20
 268+ 93FE 6F               ld l,a
 269+ 93FF 38 04            jr c,3F
 270+ 9401 7C               ld a,h
 271+ 9402 D6 08            sub 8
 272+ 9404 67               ld h,a
 273+ 9405 7C           3 ld a,h
 274+ 9406 FE 58            cp $58
 275+ 9408 28 02            jr z,4F
 276+ 940A 10 CB            djnz 1B
 277+ 940C ED 7B 38 87  4 ld sp,(Stack)
 278+ 9410 C9           	ret
 279+ 9411
 280+ 9411 ED 73 38 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9415 FD F9        	ld sp,iy
 282+ 9417 06 08            ld b,8
 283+ 9419 D1           1 pop de
 284+ 941A 7B           	ld a,e
 285+ 941B AE           	xor (hl)
 286+ 941C 77           	ld (hl),a
 287+ 941D 23           	inc hl
 288+ 941E 7A           	ld a,d
 289+ 941F AE           	xor (hl)
 290+ 9420 77           	ld (hl),a
 291+ 9421 2B           	dec hl
 292+ 9422 24             	inc h
 293+ 9423 7C               ld a,h
 294+ 9424 E6 07            and 7
 295+ 9426 20 0A            jr nz,2F
 296+ 9428 7D               ld a,l
 297+ 9429 C6 20            add a,$20
 298+ 942B 6F               ld l,a
 299+ 942C 38 04            jr c,2F
 300+ 942E 7C               ld a,h
 301+ 942F D6 08            sub 8
 302+ 9431 67               ld h,a
 303+ 9432 7C           2 ld a,h
 304+ 9433 FE 58            cp $58
 305+ 9435 28 21            jr z,4F
 306+ 9437 D1               pop de
 307+ 9438 7A           	ld a,d
 308+ 9439 AE           	xor (hl)
 309+ 943A 77           	ld (hl),a
 310+ 943B 23           	inc hl
 311+ 943C D1               pop de
 312+ 943D 7B           	ld a,e
 313+ 943E AE           	xor (hl)
 314+ 943F 77           	ld (hl),a
 315+ 9440 2B           	dec hl
 316+ 9441 24           	inc h
 317+ 9442 7C               ld a,h
 318+ 9443 E6 07            and 7
 319+ 9445 20 0A            jr nz,3F
 320+ 9447 7D               ld a,l
 321+ 9448 C6 20            add a,$20
 322+ 944A 6F               ld l,a
 323+ 944B 38 04            jr c,3F
 324+ 944D 7C               ld a,h
 325+ 944E D6 08            sub 8
 326+ 9450 67               ld h,a
 327+ 9451 7C           3 ld a,h
 328+ 9452 FE 58            cp $58
 329+ 9454 28 02            jr z,4F
 330+ 9456 10 C1            djnz 1B
 331+ 9458 ED 7B 38 87  4 ld sp,(Stack)
 332+ 945C C9           	ret
 333+ 945D
 334+ 945D ED 73 38 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9461 FD F9        	ld sp,iy
 336+ 9463 06 08            ld b,8
 337+ 9465 D1           1 pop de
 338+ 9466 7B           	ld a,e
 339+ 9467 AE           	xor (hl)
 340+ 9468 77           	ld (hl),a
 341+ 9469 24            	inc h
 342+ 946A 7C               ld a,h
 343+ 946B E6 07            and 7
 344+ 946D 20 0A            jr nz,2F
 345+ 946F 7D               ld a,l
 346+ 9470 C6 20            add a,$20
 347+ 9472 6F               ld l,a
 348+ 9473 38 04            jr c,2F
 349+ 9475 7C               ld a,h
 350+ 9476 D6 08            sub 8
 351+ 9478 67               ld h,a
 352+ 9479 7C           2 ld a,h
 353+ 947A FE 58            cp $58
 354+ 947C 28 1C            jr z,4F
 355+ 947E D1               pop de
 356+ 947F 7A           	ld a,d
 357+ 9480 AE           	xor (hl)
 358+ 9481 77           	ld (hl),a
 359+ 9482 24           	inc h
 360+ 9483 7C               ld a,h
 361+ 9484 E6 07            and 7
 362+ 9486 20 0A            jr nz,3F
 363+ 9488 7D               ld a,l
 364+ 9489 C6 20            add a,$20
 365+ 948B 6F               ld l,a
 366+ 948C 38 04            jr c,3F
 367+ 948E 7C               ld a,h
 368+ 948F D6 08            sub 8
 369+ 9491 67               ld h,a
 370+ 9492 7C           3 ld a,h
 371+ 9493 FE 58            cp $58
 372+ 9495 28 03            jr z,4F
 373+ 9497 D1               pop de
 374+ 9498 10 CB            djnz 1B
 375+ 949A ED 7B 38 87  4 ld sp,(Stack)
 376+ 949E C9           	ret
 377+ 949F
 378+ 949F              ; ---------------------------------------------------
 379+ 949F              ;
 380+ 949F              ;   27/02/23
 381+ 949F              ;
 382+ 949F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 949F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 949F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 949F
 386+ 949F ED 73 38 87  Pinta_Disparo ld (Stack),sp
 387+ 94A3 FD F9            ld sp,iy
 388+ 94A5 06 02            ld b,2
 389+ 94A7 D1           1 pop de
 390+ 94A8 7B               ld a,e
 391+ 94A9 AE               xor (hl)
 392+ 94AA 77               ld (hl),a
 393+ 94AB 23               inc hl
 394+ 94AC 7A               ld a,d
 395+ 94AD AE               xor (hl)
 396+ 94AE 77               ld (hl),a
 397+ 94AF 2B               dec hl
 398+ 94B0
 399+ 94B0 24               inc h
 400+ 94B1 7C               ld a,h
 401+ 94B2 E6 07            and 7
 402+ 94B4 20 0A            jr nz,2F
 403+ 94B6 7D               ld a,l
 404+ 94B7 C6 20            add a,$20
 405+ 94B9 6F               ld l,a
 406+ 94BA 38 04            jr c,2F
 407+ 94BC 7C               ld a,h
 408+ 94BD D6 08            sub 8
 409+ 94BF 67               ld h,a
 410+ 94C0 7C           2 ld a,h
 411+ 94C1 FE 58            cp $58
 412+ 94C3 28 02            jr z,3F
 413+ 94C5
 414+ 94C5 10 E0            djnz 1B
 415+ 94C7 ED 7B 38 87  3 ld sp,(Stack)
 416+ 94CB C9               ret
 417+ 94CC
# file closed: Rutinas_de_impresion_sprites.asm
1116  94CC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94CC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94CC              ;
   3+ 94CC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94CC              ;
   5+ 94CC              ; *****************************************************************************************************************************************************************************************
   6+ 94CC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94CC
   8+ 94CC 7C           calcula_tercio ld a,h
   9+ 94CD E6 18        	and $18
  10+ 94CF CB 2F        	sra a
  11+ 94D1 CB 2F        	sra a
  12+ 94D3 CB 2F        	sra a
  13+ 94D5 C9           	ret
  14+ 94D6
# file closed: calcula_tercio.asm
1117  94D6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94D6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94D6              ;
   3+ 94D6              ;
   4+ 94D6              ;	CLS.
   5+ 94D6              ;
   6+ 94D6              ;	Limpia la pantalla y define sus atributos.
   7+ 94D6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94D6              ;
   9+ 94D6              ;	COLORES: 0 ..... NEGRO
  10+ 94D6              ;    		 1 ..... AZUL
  11+ 94D6              ; 			 2 ..... ROJO
  12+ 94D6              ;			 3 ..... MAGENTA
  13+ 94D6              ; 			 4 ..... VERDE
  14+ 94D6              ; 			 5 ..... CIAN
  15+ 94D6              ;			 6 ..... AMARILLO
  16+ 94D6              ; 			 7 ..... BLANCO
  17+ 94D6              ;
  18+ 94D6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94D6              ;
  20+ 94D6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94D6
  22+ 94D6
  23+ 94D6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94D9 11 01 40     	LD DE,$4001
  25+ 94DC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94DF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94E1 ED B0        	LDIR
  28+ 94E3 01 FF 02     	LD BC,767
  29+ 94E6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94E7 ED B0        	LDIR
  31+ 94E9 C9           	ret
  32+ 94EA
# file closed: Cls.asm
1118  94EA              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94EA              ; ******************************************************************************************************************************************************************************************
   2+ 94EA              ;
   3+ 94EA              ;   22/01/23
   4+ 94EA              ;
   5+ 94EA              ;	Mov_down
   6+ 94EA              ;
   7+ 94EA              ; 	Mueve el Sprite X px hacia abajo.
   8+ 94EA              ;
   9+ 94EA              ;
  10+ 94EA 21 1C 87     Mov_down ld hl,Ctrl_0
  11+ 94ED CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 94EF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 94EF              ; 																	; _ en el caso de que no lo haya.
  14+ 94EF 3A 06 87     	ld a,(Vel_down)
  15+ 94F2 47           	ld b,a
  16+ 94F3 2A F0 86         ld hl,(Posicion_actual)
  17+ 94F6 CD CC 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 94F9 E6 02        	and 2
  19+ 94FB 28 0F        	jr z,1F
  20+ 94FD
  21+ 94FD              ; Nos encontramos en el último tercio de pantalla.
  22+ 94FD              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 94FD
  24+ 94FD 7C           	ld a,h
  25+ 94FE FE 57        	cp $57
  26+ 9500 20 0A        	jr nz,1F
  27+ 9502 7D           	ld a,l
  28+ 9503 C6 20        	add $20
  29+ 9505 30 05        	jr nc,1F
  30+ 9507
  31+ 9507              ; ------------------------------
  32+ 9507 CD E2 97     	call Reaparece_arriba
  33+ 950A              ;	call Reinicio
  34+ 950A              ; ------------------------------
  35+ 950A
  36+ 950A 18 08        	jr 3F
  37+ 950C CD 0C 92     1 call NextScan
  38+ 950F 22 F0 86     	ld (Posicion_actual),hl
  39+ 9512 10 E2            djnz 2B
  40+ 9514 CD F8 97     3 call Genera_coordenadas
  41+ 9517 C9           	ret
  42+ 9518
  43+ 9518              ; ******************************************************************************************************************************************************************************************
  44+ 9518              ;
  45+ 9518              ;   22/01/23
  46+ 9518              ;
  47+ 9518              ;	Mov_up
  48+ 9518              ;
  49+ 9518              ; 	Mueve el Sprite hacia arriba.
  50+ 9518              ;
  51+ 9518              ;
  52+ 9518 21 1C 87     Mov_up ld hl,Ctrl_0
  53+ 951B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 951D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 951D              ; 																		; _ en el caso de que no lo haya.
  56+ 951D 3A 05 87     	ld a,(Vel_up)
  57+ 9520 47           	ld b,a
  58+ 9521 2A F0 86     	ld hl,(Posicion_actual)
  59+ 9524 CD CC 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9527 A7           	and a
  61+ 9528 20 10        	jr nz,1F
  62+ 952A
  63+ 952A              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 952A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 952A
  66+ 952A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 952B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 952D 20 0B            jr nz,1F
  69+ 952F 7D               ld a,l
  70+ 9530 D6 20            sub $20
  71+ 9532 30 06            jr nc,1F
  72+ 9534 25               dec h
  73+ 9535
  74+ 9535              ; -----------------------------
  75+ 9535 CD D2 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9538              ;	call Reinicio
  77+ 9538              ; -----------------------------
  78+ 9538
  79+ 9538 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 953A CD 1B 92     1 call PreviousScan
  81+ 953D 22 F0 86     	ld (Posicion_actual),hl
  82+ 9540 10 E2            djnz 3B
  83+ 9542 CD F8 97     2 call Genera_coordenadas
  84+ 9545 C9           	ret
  85+ 9546
  86+ 9546              ; ******************************************************************************************************************************************************************************************
  87+ 9546              ;
  88+ 9546              ;	19/10/22
  89+ 9546              ;
  90+ 9546              ;	Mov_right.
  91+ 9546              ;
  92+ 9546              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9546              ;
  94+ 9546
  95+ 9546 21 1C 87     Mov_right ld hl,Ctrl_0
  96+ 9549 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 954B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 954B              ; 																	; _ en el caso de que no lo haya.
  99+ 954B 3A 1C 87     	ld a,(Ctrl_0)
 100+ 954E CB 77        	bit 6,a
 101+ 9550 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9552
 103+ 9552 CD 80 97     	call Stop_Amadeus_right
 104+ 9555 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9556 18 4D        	jr 8F
 106+ 9558
 107+ 9558 3A F4 86     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 955B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 955D 20 46        	jr nz,8F
 110+ 955F
 111+ 955F 3A F6 86     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9562 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9563 28 40        	jr z,8F
 114+ 9565
 115+ 9565              ; ---------- ---------- ----------
 116+ 9565              ;
 117+ 9565              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9565
 119+ 9565 3A 04 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 9568 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 956A 28 11        	jr z,1F
 122+ 956C 38 06        	jr c,6F
 123+ 956E FE 04        	cp 4
 124+ 9570 28 14        	jr z,7F
 125+ 9572 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9574
 127+ 9574              ; ---------- ---------- ----------
 128+ 9574              ;
 129+ 9574              ; Perfiles de velocidad
 130+ 9574              ;
 131+ 9574
 132+ 9574 3A F6 86     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 9577 FE FE        	cp $fe
 134+ 9579 20 2A        	jr nz,8F
 135+ 957B 18 10        	jr 3F
 136+ 957D 3A F6 86     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9580 FE FD        	cp $fd
 138+ 9582 20 21        	jr nz,8F
 139+ 9584 18 07        	jr 3F
 140+ 9586 3A F6 86     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 9589 FE FB        	cp $fb
 142+ 958B 20 18        	jr nz,8F
 143+ 958D
 144+ 958D              ; ---------- ---------- ----------
 145+ 958D
 146+ 958D              3
 147+ 958D CD C0 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9590              ;	call Reinicio
 149+ 9590
 150+ 9590              ; ---------- ---------- ----------
 151+ 9590              ;
 152+ 9590              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9590
 154+ 9590 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9592 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9593 CD AC 95     	call DESPLZ_DER
 157+ 9596 C1           	pop bc
 158+ 9597 10 F9        	djnz 5B
 159+ 9599 2A F0 86     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 959C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 959D 22 F0 86     	ld (Posicion_actual),hl
 162+ 95A0 CD F8 97     	call Genera_coordenadas
 163+ 95A3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 95A5
 165+ 95A5              ; ---------- ---------- ----------
 166+ 95A5
 167+ 95A5 2A F0 86     8 ld hl,(Posicion_actual)
 168+ 95A8 CD AC 95     	call DESPLZ_DER
 169+ 95AB C9           2 ret
 170+ 95AC
 171+ 95AC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 95AC              ;
 173+ 95AC              ;	22/9/22
 174+ 95AC              ;
 175+ 95AC
 176+ 95AC CD BB 95     DESPLZ_DER call Desplaza_derecha
 177+ 95AF CD 07 96         call modifica_parametros_1er_DESPLZ_2
 178+ 95B2 CD 30 96         call Ciclo_completo
 179+ 95B5 21 1C 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 95B8 CB FE        	set 7,(hl)
 181+ 95BA C9           	ret
 182+ 95BB
 183+ 95BB              ; ******************************************************************************************************************************************************************************************
 184+ 95BB              ;	15/02/23
 185+ 95BB              ;
 186+ 95BB
 187+ 95BB 3A 04 87     Desplaza_derecha ld a,(Vel_right)
 188+ 95BE 47           	ld b,a
 189+ 95BF 2A FC 86     	ld hl,(Puntero_DESPLZ_der)
 190+ 95C2 23           1 inc hl
 191+ 95C3 23           	inc hl
 192+ 95C4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 95C6 22 FC 86     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 95C9 CD A3 89     	call Extrae_address
 195+ 95CC 22 F2 86     	ld (Puntero_objeto),hl
 196+ 95CF
 197+ 95CF              ; Modifica (Puntero_DESPLZ_izq).
 198+ 95CF
 199+ 95CF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 95CF              ; Cuántos movimientos hemos hecho ??
 201+ 95CF              ; DE contiene (Puntero_DESPLZ_der).
 202+ 95CF
 203+ 95CF 2A F8 86     7 ld hl,(Indice_Sprite_der)
 204+ 95D2 EB           	ex de,hl
 205+ 95D3 A7           	and a
 206+ 95D4 ED 52        	sbc hl,de
 207+ 95D6 CB 3D        	srl l
 208+ 95D8 3E 08        6 ld a,8
 209+ 95DA 95           	sub l
 210+ 95DB 30 1E        	jr nc,3F
 211+ 95DD
 212+ 95DD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 95DD              ; B="0".
 214+ 95DD
 215+ 95DD 04           4 inc b
 216+ 95DE 3C           	inc a
 217+ 95DF 20 FC        	jr nz,4B
 218+ 95E1 78           	ld a,b
 219+ 95E2 08           	ex af,af
 220+ 95E3 2A F8 86     	ld hl,(Indice_Sprite_der)
 221+ 95E6 23           5 inc hl
 222+ 95E7 23           	inc hl
 223+ 95E8 10 FC        	djnz 5B
 224+ 95EA 22 FC 86     	ld (Puntero_DESPLZ_der),hl
 225+ 95ED CD A3 89     	call Extrae_address
 226+ 95F0 22 F2 86     	ld (Puntero_objeto),hl
 227+ 95F3
 228+ 95F3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 95F3              ; _(Posicion_actual).
 230+ 95F3
 231+ 95F3 21 F0 86     	ld hl,Posicion_actual
 232+ 95F6 34           	inc (hl)
 233+ 95F7 08               ex af,af
 234+ 95F8 6F           	ld l,a
 235+ 95F9 18 DD        	jr 6B
 236+ 95FB
 237+ 95FB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 95FB
 239+ 95FB 47           3 ld b,a
 240+ 95FC 2A FA 86     	ld hl,(Indice_Sprite_izq)
 241+ 95FF 23           2 inc hl
 242+ 9600 23           	inc hl
 243+ 9601 10 FC        	djnz 2B
 244+ 9603 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 245+ 9606 C9           8 ret
 246+ 9607
 247+ 9607              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 9607              ;
 249+ 9607              ;	24/7/22
 250+ 9607              ;
 251+ 9607              ;	modifica_parametros_1er_DESPLZ_2
 252+ 9607              ;
 253+ 9607              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 9607              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 9607              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 9607
 257+ 9607 3A F6 86     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 960A A7           	and a
 259+ 960B 20 1F        	jr nz,1F
 260+ 960D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 960F 32 F6 86         ld (CTRL_DESPLZ),a
 262+ 9612
 263+ 9612 21 EF 86     	ld hl,Columns
 264+ 9615 34           	inc (hl)
 265+ 9616 3A 02 87     	ld a,(Cuad_objeto)
 266+ 9619 E6 01        	and 1
 267+ 961B 28 0F        	jr z,1F
 268+ 961D 2A F0 86     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9620 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9621 22 F0 86     	ld (Posicion_actual),hl
 271+ 9624 CD F8 97     	call Genera_coordenadas
 272+ 9627 CD 8C 97     	call Inc_CTRL_DESPLZ
 273+ 962A 18 03        	jr 2F
 274+ 962C CD 8C 97     1 call Inc_CTRL_DESPLZ
 275+ 962F C9           2 ret
 276+ 9630
 277+ 9630              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9630              ;
 279+ 9630              ;	24/7/22
 280+ 9630              ;
 281+ 9630              ;	Ciclo_completo.
 282+ 9630              ;
 283+ 9630              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9630              ;
 285+ 9630              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9630              ; 	Decrementamos (Columns).
 287+ 9630              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9630              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9630
 290+ 9630
 291+ 9630 3A F6 86     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9633 FE FF        	cp $ff
 293+ 9635 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9637 E6 F0        	and $f0
 295+ 9639 20 28        	jr nz,3F
 296+ 963B
 297+ 963B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 963B
 299+ 963B 3A F6 86     	ld a,(CTRL_DESPLZ)
 300+ 963E 47           	ld b,a
 301+ 963F 3E F8        	ld a,$f8
 302+ 9641 80           	add b
 303+ 9642 32 F6 86     	ld (CTRL_DESPLZ),a
 304+ 9645 18 1C        	jr 3F
 305+ 9647 21 EF 86     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 964A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 964B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 964C 32 F6 86     	ld (CTRL_DESPLZ),a
 309+ 964F 3A 02 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9652 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9654 20 0A        	jr nz,2F
 312+ 9656 2A F0 86     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 9659 23           	inc hl
 314+ 965A 22 F0 86     	ld (Posicion_actual),hl
 315+ 965D CD F8 97     	call Genera_coordenadas
 316+ 9660
 317+ 9660              ; Inicia el puntero de Sprite.
 318+ 9660
 319+ 9660 CD BA 89     2 call Inicia_puntero_objeto_der
 320+ 9663 C9           3 ret
 321+ 9664
 322+ 9664              ; ******************************************************************************************************************************************************************************************
 323+ 9664              ;
 324+ 9664              ;	15/02/23
 325+ 9664              ;
 326+ 9664              ;	Mov_left.
 327+ 9664              ;
 328+ 9664              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9664              ;
 330+ 9664              Mov_left
 331+ 9664
 332+ 9664 21 1C 87     	ld hl,Ctrl_0
 333+ 9667 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 9669              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 9669              ; 																	; _ en el caso de que no lo haya.
 336+ 9669 3A 1C 87     	ld a,(Ctrl_0)
 337+ 966C CB 77        	bit 6,a
 338+ 966E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9670
 340+ 9670 CD 86 97     	call Stop_Amadeus_left
 341+ 9673 C8           	ret z
 342+ 9674 20 4A        	jr nz,8F
 343+ 9676
 344+ 9676 3A F4 86     11 ld a,(Coordenada_X)
 345+ 9679 A7           	and a
 346+ 967A 20 44        	jr nz,8F
 347+ 967C
 348+ 967C 3A F6 86     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 967F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9680 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9682
 352+ 9682              ; ---------- ---------- ----------
 353+ 9682
 354+ 9682 3A 03 87     	ld a,(Vel_left)
 355+ 9685 FE 02        	cp 2
 356+ 9687 28 0F        	jr z,1F
 357+ 9689 38 04        	jr c,6F
 358+ 968B FE 04        	cp 4
 359+ 968D 28 12        	jr z,7F
 360+ 968F
 361+ 968F              ; ---------- ---------- ----------
 362+ 968F
 363+ 968F 3A F6 86     6 ld a,(CTRL_DESPLZ)
 364+ 9692 FE F8        	cp $f8
 365+ 9694 20 2A        	jr nz,8F
 366+ 9696 18 10        	jr 4F
 367+ 9698 3A F6 86     1 ld a,(CTRL_DESPLZ)
 368+ 969B FE F9        	cp $f9
 369+ 969D 20 21        	jr nz,8F
 370+ 969F 18 07        	jr 4F
 371+ 96A1 3A F6 86     7 ld a,(CTRL_DESPLZ)
 372+ 96A4 FE FB        	cp $fb
 373+ 96A6 20 18        	jr nz,8F
 374+ 96A8
 375+ 96A8              ; ---------- ---------- ----------
 376+ 96A8
 377+ 96A8              4
 378+ 96A8 CD AE 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 96AB              ;	call Reinicio
 380+ 96AB
 381+ 96AB              ; ---------- ---------- ----------
 382+ 96AB
 383+ 96AB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 96AD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 96AE
 386+ 96AE              ;	ld hl,(Indice_Sprite_izq)
 387+ 96AE              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 96AE
 389+ 96AE CD C7 96     	call DESPLZ_IZQ
 390+ 96B1 C1           	pop bc
 391+ 96B2 10 F9        	djnz 5B
 392+ 96B4 2A F0 86     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 96B7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 96B8 22 F0 86     	ld (Posicion_actual),hl
 395+ 96BB CD F8 97     	call Genera_coordenadas
 396+ 96BE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 96C0
 398+ 96C0              ; ---------- ---------- ----------
 399+ 96C0
 400+ 96C0              ; Movemos, no hay recolocación.
 401+ 96C0
 402+ 96C0 2A F0 86     8 ld hl,(Posicion_actual)
 403+ 96C3 CD C7 96     	call DESPLZ_IZQ
 404+ 96C6 C9           2 ret
 405+ 96C7
 406+ 96C7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 96C7              ;
 408+ 96C7              ;	22/9/22
 409+ 96C7
 410+ 96C7              DESPLZ_IZQ
 411+ 96C7
 412+ 96C7 CD D6 96     	call Desplaza_izquierda
 413+ 96CA CD 22 97         call modifica_parametros_1er_DESPLZ
 414+ 96CD CD 4A 97     	call Ciclo_completo_2
 415+ 96D0 21 1C 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 96D3 CB BE        	res 7,(hl)
 417+ 96D5 C9           	ret
 418+ 96D6
 419+ 96D6              Desplaza_izquierda
 420+ 96D6
 421+ 96D6 3A 03 87     	ld a,(Vel_left)
 422+ 96D9 47           	ld b,a
 423+ 96DA 2A FE 86     	ld hl,(Puntero_DESPLZ_izq)
 424+ 96DD 23           1 inc hl
 425+ 96DE 23           	inc hl
 426+ 96DF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 96E1 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 428+ 96E4 CD A3 89     	call Extrae_address
 429+ 96E7 22 F2 86     	ld (Puntero_objeto),hl
 430+ 96EA
 431+ 96EA              ; Modifica (Puntero_DESPLZ_der).
 432+ 96EA
 433+ 96EA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 96EA              ; Cuántos movimientos hemos hecho ??
 435+ 96EA              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 96EA
 437+ 96EA 2A FA 86     7 ld hl,(Indice_Sprite_izq)
 438+ 96ED EB           	ex de,hl
 439+ 96EE A7           	and a
 440+ 96EF ED 52        	sbc hl,de
 441+ 96F1 CB 3D        	srl l
 442+ 96F3 3E 08        6 ld a,8
 443+ 96F5 95           	sub l
 444+ 96F6 30 1E        	jr nc,3F
 445+ 96F8
 446+ 96F8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 96F8              ; B="0".
 448+ 96F8
 449+ 96F8 04           4 inc b
 450+ 96F9 3C           	inc a
 451+ 96FA 20 FC        	jr nz,4B
 452+ 96FC 78           	ld a,b
 453+ 96FD 08           	ex af,af
 454+ 96FE 2A FA 86     	ld hl,(Indice_Sprite_izq)
 455+ 9701 23           5 inc hl
 456+ 9702 23           	inc hl
 457+ 9703 10 FC        	djnz 5B
 458+ 9705 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 459+ 9708 CD A3 89     	call Extrae_address
 460+ 970B 22 F2 86     	ld (Puntero_objeto),hl
 461+ 970E
 462+ 970E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 970E              ; _(Posicion_actual).
 464+ 970E
 465+ 970E 21 F0 86     	ld hl,Posicion_actual
 466+ 9711 35           	dec (hl)
 467+ 9712 08           	ex af,af
 468+ 9713 6F           	ld l,a
 469+ 9714 18 DD        	jr 6B
 470+ 9716
 471+ 9716              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9716
 473+ 9716 47           3 ld b,a
 474+ 9717 2A F8 86     	ld hl,(Indice_Sprite_der)
 475+ 971A 23           2 inc hl
 476+ 971B 23           	inc hl
 477+ 971C 10 FC        	djnz 2B
 478+ 971E 22 FC 86     	ld (Puntero_DESPLZ_der),hl
 479+ 9721 C9           8 ret
 480+ 9722
 481+ 9722              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9722              ;
 483+ 9722              ;	modifica_parametros_1er_DESPLZ
 484+ 9722              ;
 485+ 9722              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9722              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9722              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9722
 489+ 9722 3A F6 86     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9725 A7           	and a
 491+ 9726 20 1E        	jr nz,1F
 492+ 9728 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9729 32 F6 86         ld (CTRL_DESPLZ),a
 494+ 972C 21 EF 86     	ld hl,Columns
 495+ 972F 34           	inc (hl)
 496+ 9730 3A 02 87     	ld a,(Cuad_objeto)
 497+ 9733 E6 01        	and 1
 498+ 9735 20 0F        	jr nz,1F
 499+ 9737 2A F0 86     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 973A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 973B 22 F0 86     	ld (Posicion_actual),hl
 502+ 973E CD F8 97     	call Genera_coordenadas
 503+ 9741 CD 9D 97     	call Dec_CTRL_DESPLZ
 504+ 9744 18 03        	jr 2F
 505+ 9746 CD 9D 97     1 call Dec_CTRL_DESPLZ
 506+ 9749 C9           2 ret
 507+ 974A
 508+ 974A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 974A
 510+ 974A 3A F6 86     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 974D FE F7        	cp $f7
 512+ 974F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9751 30 2C        	jr nc,3F
 514+ 9753
 515+ 9753              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9753
 517+ 9753 06 00        	ld b,0
 518+ 9755 04           4 inc b
 519+ 9756 3C           	inc a
 520+ 9757 FE F7        	cp $f7
 521+ 9759 20 FA        	jr nz,4B
 522+ 975B 3E FF        	ld a,$ff
 523+ 975D 90           	sub b
 524+ 975E 32 F6 86     	ld (CTRL_DESPLZ),a
 525+ 9761 18 1C        	jr 3F
 526+ 9763
 527+ 9763              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9763
 529+ 9763 21 EF 86     1 ld hl,Columns
 530+ 9766 35           	dec (hl)
 531+ 9767 AF           	xor a
 532+ 9768 32 F6 86     	ld (CTRL_DESPLZ),a
 533+ 976B 3A 02 87     	ld a,(Cuad_objeto)
 534+ 976E E6 01        	and 1
 535+ 9770 28 0A        	jr z,2F
 536+ 9772 2A F0 86     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9775 2B           	dec hl
 538+ 9776 22 F0 86     	ld (Posicion_actual),hl
 539+ 9779 CD F8 97     	call Genera_coordenadas
 540+ 977C
 541+ 977C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 977C
 543+ 977C CD CD 89     2 call Inicia_puntero_objeto_izq
 544+ 977F C9           3 ret
 545+ 9780
 546+ 9780              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9780              ;
 548+ 9780              ;	19/10/22
 549+ 9780              ;
 550+ 9780              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9780              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9780
 553+ 9780 3A F4 86     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9783 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9785 C9           	ret
 556+ 9786
 557+ 9786              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9786              ;
 559+ 9786              ;	19/10/22
 560+ 9786              ;
 561+ 9786              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9786              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9786
 564+ 9786 3A F4 86     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 9789 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 978B C9           	ret
 567+ 978C
 568+ 978C              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 978C              ;
 570+ 978C              ;	24/7/22
 571+ 978C              ;
 572+ 978C              ;	Inc_CTRL_DESPLZ
 573+ 978C              ;
 574+ 978C              ;
 575+ 978C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 978C
 577+ 978C 21 F6 86     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 978F 3A 04 87     	ld a,(Vel_right)
 579+ 9792 A7           	and a
 580+ 9793 28 06        	jr z,1F
 581+ 9795 47           	ld b,a
 582+ 9796 34           3 inc (hl)
 583+ 9797 10 FD        	djnz 3B
 584+ 9799 18 01        	jr 2F
 585+ 979B 34           1 inc (hl)
 586+ 979C C9           2 ret
 587+ 979D
 588+ 979D              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 979D              ;
 590+ 979D              ;	5/2/23
 591+ 979D              ;
 592+ 979D              ;	Dec_CTRL_DESPLZ
 593+ 979D              ;
 594+ 979D              ;
 595+ 979D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 979D
 597+ 979D 21 F6 86     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 97A0 3A 03 87     	ld a,(Vel_left)
 599+ 97A3 A7           	and a
 600+ 97A4 28 06        	jr z,1F
 601+ 97A6 47           	ld b,a
 602+ 97A7 35           3 dec (hl)
 603+ 97A8 10 FD        	djnz 3B
 604+ 97AA 18 01        	jr 2F
 605+ 97AC 35           1 dec (hl)
 606+ 97AD C9           2 ret
 607+ 97AE
 608+ 97AE              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 97AE
 610+ 97AE 2A F0 86     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 97B1 01 1F 00     	ld bc,31
 612+ 97B4 A7           	and a
 613+ 97B5 ED 4A        	adc hl,bc
 614+ 97B7 22 F0 86     	ld (Posicion_actual),hl
 615+ 97BA 21 1C 87     	ld hl,Ctrl_0														; $xxx1
 616+ 97BD CB C6        	set 0,(hl)
 617+ 97BF C9           	ret
 618+ 97C0
 619+ 97C0              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 97C0
 621+ 97C0 2A F0 86     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 97C3 01 1F 00     	ld bc,31
 623+ 97C6 A7           	and a
 624+ 97C7 ED 42        	sbc hl,bc
 625+ 97C9 22 F0 86     	ld (Posicion_actual),hl 											; $xx1x
 626+ 97CC 21 1C 87     	ld hl,Ctrl_0
 627+ 97CF CB CE        	set 1,(hl)
 628+ 97D1 C9           	ret
 629+ 97D2
 630+ 97D2              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 97D2
 632+ 97D2 24           Reaparece_abajo inc h
 633+ 97D3 01 E0 17     	ld bc,$17e0
 634+ 97D6 A7           	and a
 635+ 97D7 ED 4A        	adc hl,bc
 636+ 97D9 22 F0 86     	ld (Posicion_actual),hl
 637+ 97DC 21 1C 87     	ld hl,Ctrl_0
 638+ 97DF CB D6        	set 2,(hl)
 639+ 97E1 C9           	ret
 640+ 97E2
 641+ 97E2              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 97E2
 643+ 97E2 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 97E5 A7           	and a
 645+ 97E6 ED 42        	sbc hl,bc
 646+ 97E8 22 F0 86     	ld (Posicion_actual),hl
 647+ 97EB 21 1C 87     	ld hl,Ctrl_0
 648+ 97EE CB DE        	set 3,(hl)
 649+ 97F0 C9           	ret
 650+ 97F1
 651+ 97F1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 97F1
 653+ 97F1 2A 00 87     Reinicio ld hl,(Posicion_inicio)
 654+ 97F4 22 F0 86     	ld (Posicion_actual),hl
 655+ 97F7 C9           	ret
# file closed: Direcciones.asm
1119  97F8              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 97F8              ; ------------------------------------------------------------------------
   2+ 97F8              ;
   3+ 97F8              ;	02/04/23
   4+ 97F8              ;
   5+ 97F8              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 97F8              ;	Fila superior "0", Columna izquierda "0".
   7+ 97F8              ;
   8+ 97F8              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 97F8              ;
  10+ 97F8              ;	Modifica: A,BC y DE.
  11+ 97F8
  12+ 97F8 C5           Genera_coordenadas push bc
  13+ 97F9 E5           	push hl
  14+ 97FA D5           	push de
  15+ 97FB
  16+ 97FB 2A F0 86     	ld hl,(Posicion_actual)
  17+ 97FE
  18+ 97FE 7D           	ld a,l
  19+ 97FF E6 1F        	and $1f
  20+ 9801 32 F4 86     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9804
  22+ 9804 CD CC 94     	call calcula_tercio
  23+ 9807 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9808
  25+ 9808 1E 00        	ld e,0
  26+ 980A 7D           	ld a,l
  27+ 980B E6 E0        	and $e0
  28+ 980D 28 01        	jr z,1F
  29+ 980F 04           	inc b
  30+ 9810
  31+ 9810 04           1 inc b
  32+ 9811 05           	dec b
  33+ 9812 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9814              ;														; _ , salimos.
  35+ 9814 1C           3 inc e
  36+ 9815 D6 20        	sub 32
  37+ 9817 20 FB        	jr nz,3B
  38+ 9819 10 F5        	djnz 1B
  39+ 981B
  40+ 981B 7B           2 ld a,e
  41+ 981C 32 F5 86     	ld (Coordenada_y),a
  42+ 981F
  43+ 981F D1           	pop de
  44+ 9820 E1           	pop hl
  45+ 9821 C1           	pop bc
  46+ 9822
  47+ 9822 C9           	ret
  48+ 9823
  49+ 9823              ; ------------------------------------------------------------------------
  50+ 9823              ;	28/03/23
  51+ 9823              ;
  52+ 9823              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9823              ;	Fila superior "0", Columna izquierda "0".
  54+ 9823              ;
  55+ 9823              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9823              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9823              ;
  58+ 9823              ;		DE="$120d"
  59+ 9823              ;
  60+ 9823              ;		D, (Coordenada_X), Columnas, $12
  61+ 9823              ;		E, (Coordenada_y), Filas, $0d
  62+ 9823              ;
  63+ 9823              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9823
  65+ 9823              ;	Modifica: A,BC y DE.
  66+ 9823
  67+ 9823
  68+ 9823              Genera_coordenadas_disparo
  69+ 9823
  70+ 9823              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9823
  72+ 9823 7D           	ld a,l
  73+ 9824 E6 1F        	and $1f
  74+ 9826 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9827 CD CC 94     	call calcula_tercio
  76+ 982A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 982B 1E 00        	ld e,0
  78+ 982D 7D           	ld a,l
  79+ 982E E6 E0        	and $e0
  80+ 9830 28 01        	jr z,1F
  81+ 9832 04           	inc b
  82+ 9833 1C           1 inc e
  83+ 9834 D6 20        	sub 32
  84+ 9836 20 FB        	jr nz,1B
  85+ 9838 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 983A C9           	ret
  87+ 983B
# file closed: Genera_coordenadas.asm
1120  983B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 983B
   2+ 983B
   3+ 983B              ;   11/8/22
   4+ 983B              ;
   5+ 983B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 983B              ;
   7+ 983B              ;   Mov_obj.asm
   8+ 983B              ;
   9+ 983B              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 983B              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 983B              ;
  12+ 983B              ;   Codificación:
  13+ 983B              ;
  14+ 983B              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 983B
  16+ 983B              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 983B
  18+ 983B 02 40 00     Arriba db 2,%01000000,0
  19+ 983E 02 80 00     Abajo db 2,%10000000,0
  20+ 9841 02 20 00     Derecha db 2,%00100000,0
  21+ 9844 02 10 00     Izquierda db 2,%00010000,0
  22+ 9847 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 984B 60 42 60 40
  22+ 984F 63
  23+ 9850 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9854 22 A3 80 A0
  24+ 9858 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 985C 84 A0 83 A0
  25+ 9860 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9864 80 A3 22 A0
  26+ 9868 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 986C 40 60 42 60
  27+ 9870 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9874
  29+ 9874 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9878 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 987C 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9880 84 00
  32+ 9882 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9886 84 00
  33+ 9888 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 988C 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9890 1F 1F 1F 1F
  35+ 9894 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9898 1F 1F 1F 1F
  35+ 989C 1F
  36+ 989D 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 98A1 2F 2F 2F 2F
  36+ 98A5 2F 2F
  37+ 98A7 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 98AB 2F 2F 00
  38+ 98AE
  39+ 98AE              ; ----- ----- ----- ----- -----
  40+ 98AE
  41+ 98AE 8C 98        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 98B0 88 98        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 98B2 44 98        Indice_mov_Izquierda defw Izquierda
  44+ 98B4 41 98        Indice_mov_Derecha defw Derecha
  45+ 98B6 3E 98        Indice_mov_Abajo defw Abajo
  46+ 98B8 3B 98        Indice_mov_Arriba defw Arriba
  47+ 98BA 78 98        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 98BC 7C 98        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 98BE 74 98        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 98C0 82 98        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 98C2 47 98        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 98C4              ; ----- ----- ----- ----- -----
  53+ 98C4
  54+ 98C4 3A 23 87     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 98C7 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 98C8 28 02            jr z,1F
  57+ 98CA 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 98CC 3A 24 87     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 98CF C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 98D1 32 24 87         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 98D4              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 98D4 2A 21 87         ld hl,(Puntero_mov)
  63+ 98D7 7E               ld a,(hl)
  64+ 98D8 32 23 87         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 98DB 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 98DC 22 21 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 98DF
  68+ 98DF 3A 25 87     Decoder ld a,(Repetimos_db)
  69+ 98E2 A7               and a
  70+ 98E3 20 0C            jr nz,12F
  71+ 98E5 2A 21 87         ld hl,(Puntero_mov)
  72+ 98E8 7E               ld a,(hl)
  73+ 98E9 A7               and a
  74+ 98EA 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 98EC E6 0F            and $0f
  76+ 98EE 32 25 87         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 98F1              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 98F1 2A 21 87     12 ld hl,(Puntero_mov)
  79+ 98F4 CB 7E            bit 7,(hl)
  80+ 98F6 28 03            jr z,2F
  81+ 98F8 CD EA 94         call Mov_down
  82+ 98FB 2A 21 87     2 ld hl, (Puntero_mov)
  83+ 98FE CB 76            bit 6,(hl)
  84+ 9900 28 03            jr z,3F
  85+ 9902 CD 18 95         call Mov_up
  86+ 9905 2A 21 87     3 ld hl, (Puntero_mov)
  87+ 9908 CB 6E            bit 5,(hl)
  88+ 990A 28 03            jr z,4F
  89+ 990C CD 46 95         call Mov_right
  90+ 990F 2A 21 87     4 ld hl, (Puntero_mov)
  91+ 9912 CB 66            bit 4,(hl)
  92+ 9914 28 03            jr z,5F
  93+ 9916 CD 64 96         call Mov_left
  94+ 9919
  95+ 9919              ; ---------- --------- --------- ---------- ----------
  96+ 9919
  97+ 9919 3A 25 87     5 ld a,(Repetimos_db)
  98+ 991C A7               and a
  99+ 991D 28 07            jr z,6F
 100+ 991F 3D               dec a
 101+ 9920 32 25 87         ld (Repetimos_db),a
 102+ 9923 28 01            jr z,6f
 103+ 9925 C9           11 ret
 104+ 9926 21 23 87     6 ld hl,Contador_db_mov
 105+ 9929 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 992A 2A 21 87         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 992D 23               inc hl
 108+ 992E 22 21 87         ld (Puntero_mov),hl
 109+ 9931 18 F2            jr 11B
 110+ 9933 2A 1F 87     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9936 3A 24 87         ld a,(Incrementa_puntero)
 112+ 9939 47               ld b,a
 113+ 993A 23           8 inc hl
 114+ 993B 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 993D 5E               ld e,(hl)
 116+ 993E 23               inc hl
 117+ 993F 56               ld d,(hl)
 118+ 9940 EB               ex de,hl
 119+ 9941 22 21 87         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9944 18 DF            jr 11B
 121+ 9946
 122+ 9946              ; ---------- --------- --------- ---------- ----------
 123+ 9946              ;
 124+ 9946              ;   11/8/22
 125+ 9946              ;
 126+ 9946              ;   Prepara_Puntero_mov
 127+ 9946
 128+ 9946 E5           Prepara_Puntero_mov push hl
 129+ 9947 D5               push de
 130+ 9948 2A 1F 87         ld hl,(Puntero_indice_mov)
 131+ 994B 5E               ld e,(hl)
 132+ 994C 23               inc hl
 133+ 994D 56               ld d,(hl)
 134+ 994E EB               ex de,hl
 135+ 994F 22 21 87         ld (Puntero_mov),hl
 136+ 9952 D1               pop de
 137+ 9953 E1               pop hl
 138+ 9954 C9               ret
 139+ 9955
 140+ 9955              ; ---------- --------- --------- ---------- ----------
 141+ 9955              ;
 142+ 9955              ;   11/8/22
 143+ 9955              ;
 144+ 9955              ;   Reinicia_el_movimiento
 145+ 9955
 146+ 9955 CD 46 99     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9958 AF               xor a
 148+ 9959 32 23 87         ld (Contador_db_mov),a
 149+ 995C 32 24 87         ld (Incrementa_puntero),a
 150+ 995F C3 C4 98         jp Movimiento
 151+ 9962 C9               ret
 152+ 9963              ; ---------- --------- --------- ---------- ----------
 153+ 9963
 154+ 9963
 155+ 9963
 156+ 9963
 157+ 9963
 158+ 9963
 159+ 9963
 160+ 9963
 161+ 9963
 162+ 9963
 163+ 9963
 164+ 9963
 165+ 9963
 166+ 9963
 167+ 9963
 168+ 9963
 169+ 9963
 170+ 9963
# file closed: Patrones_de_mov.asm
1121  9963              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9963              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9963              ;
   3+ 9963              ;	3/1/23
   4+ 9963              ;
   5+ 9963              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9963
   7+ 9963              ;	ADC HL,SP	LD (addr),SP
   8+ 9963              ;	ADD HL,SP	LD SP,(addr)
   9+ 9963              ;	ADD IX,SP	LD SP,nn
  10+ 9963              ; 	ADD IY,SP	LD SP,HL
  11+ 9963              ;				LD SP,IX
  12+ 9963              ;	DEC SP		LD SP,IY
  13+ 9963
  14+ 9963              ;	EX (SP),HL
  15+ 9963              ;	EX (SP),IX
  16+ 9963              ;	EX (SP),IY
  17+ 9963
  18+ 9963              ;	INC SP
  19+ 9963
  20+ 9963
  21+ 9963                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 38 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 2B 87         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 3E 87         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 3C 87     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 3E 87         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 3C 87     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 38 87  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1122  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1123  7FE6
1124  7FE6              	SAVESNA "Pruebas.sna", START
1125  7FE6
1126  7FE6
1127  7FE6
# file closed: Banco_de_pruebas.asm
