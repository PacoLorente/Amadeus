# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 0D 8B  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A 17 8B     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 1E        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20 CB 57        	bit 2,a
  41  AA22 28 1A        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  42  AA24
  43  AA24              ;! Debugg!!!!!!!
  44  AA24
  45  AA24 3A 1D 8B     	ld a,(Contador_de_frames_2)
  46  AA27 FE 03        	cp $03
  47  AA29 20 07        	jr nz,2F
  48  AA2B 3A 1C 8B     	ld a,(Contador_de_frames)
  49  AA2E FE 58        	cp $58
  50  AA30 28 FE        	jr z,$
  51  AA32
  52  AA32              ; Borramos:
  53  AA32
  54  AA32 CD 40 9C     2 call Pinta_Sprites
  55  AA35
  56  AA35              ; Pintamos:
  57  AA35
  58  AA35 2A 0F 8B     	ld hl,(Album_de_pintado)
  59  AA38 22 15 8B     	ld (Scanlines_album_SP),hl
  60  AA3B
  61  AA3B CD 40 9C     	call Pinta_Sprites
  62  AA3E
  63  AA3E              ;	ld a,6
  64  AA3E              ;	out ($fe),a
  65  AA3E              ;	call Pinta_Amadeus										; Borde amarillo.
  66  AA3E
  67  AA3E              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  68  AA3E              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  69  AA3E
  70  AA3E              ;	ld a,7
  71  AA3E              ;	out ($fe),a												; Borde blanco.
  72  AA3E              ;	call Guarda_parametros_DRAW
  73  AA3E              ;	call Restore_Amadeus
  74  AA3E
  75  AA3E              ; Posible colisión Entidad-Amadeus ???
  76  AA3E
  77  AA3E              ;	ld a,(Impacto2)
  78  AA3E              ;	bit 2,a
  79  AA3E              ;	jr z,1F
  80  AA3E
  81  AA3E              ;	call Detecta_colision_nave_entidad
  82  AA3E
  83  AA3E              ;1 ld a,4
  84  AA3E              ;	out ($fe),a
  85  AA3E              ;	call Gestiona_Amadeus
  86  AA3E
  87  AA3E              ;	ld a,7
  88  AA3E              ;	out ($fe),a											; Borde blanco.
  89  AA3E              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  90  AA3E              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  91  AA3E
  92  AA3E              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  93  AA3E
  94  AA3E              ;	call Recupera_parametros_DRAW
  95  AA3E
  96  AA3E CD 5E 8D     1 call Actualiza_relojes
  97  AA41
  98  AA41 21 17 8B     	ld hl,Ctrl_3
  99  AA44 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 100  AA46 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 101  AA48
 102  AA48 FD E1        	pop iy
 103  AA4A DD E1        	pop ix
 104  AA4C F1           	pop af
 105  AA4D C1           	pop bc
 106  AA4E D1           	pop de
 107  AA4F E1           	pop hl
 108  AA50 D9           	exx
 109  AA51 C1           	pop bc
 110  AA52 D1           	pop de
 111  AA53 E1           	pop hl
 112  AA54 08           	ex af,af'
 113  AA55 F1           	pop af
 114  AA56 08           	ex af,af'
 115  AA57 D9           	exx
 116  AA58
 117  AA58 ED 7B 0D 8B  	ld sp,(Stack_3)
 118  AA5C
 119  AA5C FB           	ei
 120  AA5D
 121  AA5D 3E 01        	ld a,1												; Borde azul.
 122  AA5F D3 FE        	out ($fe),a
 123  AA61
 124  AA61 C9           	ret
 125  AA62
 126  AA62              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 127  AA62
 128  AA62              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA62              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA62              ;
   3+ AA62              ;	17/02/23
   4+ AA62              ;
   5+ AA62              ;	Sprites e índices.
   6+ AA62
   7+ AA62              	org $8319
   8+ 8319
   9+ 8319              ; Disparo.
  10+ 8319
  11+ 8319 21 83        Indice_disparo defw Disparo_0
  12+ 831B 27 83        	defw Disparo_f9
  13+ 831D 2D 83        	defw Disparo_fb
  14+ 831F 33 83        	defw Disparo_fd
  15+ 8321
  16+ 8321              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8321 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8325 01 80
  18+ 8327              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8327 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 832B 00 60
  20+ 832D              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 832D 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8331 18 00
  22+ 8333              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8333 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8337 06 00
  24+ 8339
  25+ 8339              ; ----------------------------------------------------------------------------------------
  26+ 8339
  27+ 8339              ; Badsat_izq. 2x2.
  28+ 8339
  29+ 8339 49 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 833B C0 84        	defw Badsat_izq_fe
  31+ 833D 90 84        	defw Badsat_izq_fd
  32+ 833F 60 84        	defw Badsat_izq_fc
  33+ 8341 30 84        	defw Badsat_izq_fb
  34+ 8343 00 84        	defw Badsat_izq_fa
  35+ 8345 A9 83        	defw Badsat_izq_f9
  36+ 8347 79 83        	defw Badsat_izq_f8
  37+ 8349
  38+ 8349 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 834C 02 14 00     	DEFB 	$02,$14,$00
  40+ 834F 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8352 02 55 00     	DEFB 	$02,$55,$00
  42+ 8355 02 AA 00     	DEFB	$02,$AA,$00
  43+ 8358 02 54 00     	DEFB 	$02,$54,$00
  44+ 835B 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 835E 03 60 00     	DEFB 	$03,$60,$00
  46+ 8361 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 8364 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 8367 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 836A 54 40 00     	DEFB 	$54,$40,$00
  50+ 836D AA 60 00     	DEFB	$AA,$60,$00
  51+ 8370 54 00 00     	DEFB 	$54,$00,$00
  52+ 8373 28 00 00     	DEFB 	$28,$00,$00
  53+ 8376 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8379
  55+ 8379 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 837D 0A 00 01 15
  56+ 8381 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 8385 01 55 00 01
  57+ 8389 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 838D 00 01 B0 00
  58+ 8391 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 8395 FC 00 15 F4
  59+ 8399 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 839D 55 30 00 2A
  60+ 83A1 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83A5 00 08 00 00
  61+ 83A9
  62+ 83A9 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 83AD 85 00 00 8A
  63+ 83B1 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 83B5 00 AA 80 00
  64+ 83B9 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 83BD 00 00 D8 00
  65+ 83C1 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 83C5 FE 00 0A FA
  66+ 83C9 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 83CD 2A 98 00 15
  67+ 83D1 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 83D5 00 04 00 00
  68+ 83D9
  69+ 83D9
  70+ 83D9              ;! 23 bytes libres aquí !!!!!
  71+ 83D9
  72+ 83D9              	org $8400
  73+ 8400
  74+ 8400 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8404 42 80 00 45
  75+ 8408 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 840C 00 55 40 00
  76+ 8410 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8414 00 00 6C 00
  77+ 8418 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 841C FF 00 05 7D
  78+ 8420 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8424 15 4C 00 0A
  79+ 8428 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 842C 00 02 00 00
  80+ 8430
  81+ 8430 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8434 21 40 00 22
  82+ 8438 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 843C 00 2A A0 00
  83+ 8440 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8444 80 00 36 00
  84+ 8448 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 844C 7F 80 02 BE
  85+ 8450 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8454 0A A6 00 05
  86+ 8458 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 845C 00 01 00 00
  87+ 8460
  88+ 8460 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8464 10 A0 00 11
  89+ 8468 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 846C 00 15 50 00
  90+ 8470 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8474 40 00 1B 00
  91+ 8478 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 847C BF C0 01 5F
  92+ 8480 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8484 05 53 00 02
  93+ 8488 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 848C 00 00 80 00
  94+ 8490
  95+ 8490 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8494 08 50 00 08
  96+ 8498 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 849C 00 0A A8 00
  97+ 84A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 84A4 A0 00 0D 80
  98+ 84A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 84AC 5F F8 00 AF
  99+ 84B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 84B4 02 A9 00 01
 100+ 84B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 84BC 00 00 40 00
 101+ 84C0
 102+ 84C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 84C4 04 28 00 04
 103+ 84C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 84CC 00 05 54 00
 104+ 84D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 84D4 D0 00 06 C0
 105+ 84D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 84DC 2F FC 00 57
 106+ 84E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 84E4 01 54 80 00
 107+ 84E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 84EC 00 00 20 00
 108+ 84F0
 109+ 84F0
 110+ 84F0 00 85        Indice_Badsat_der defw Badsat_derecha
 111+ 84F2 30 85        	defw Badsat_der_f8
 112+ 84F4 60 85        	defw Badsat_der_f9
 113+ 84F6 90 85        	defw Badsat_der_fa
 114+ 84F8 C0 85        	defw Badsat_der_fb
 115+ 84FA 00 86        	defw Badsat_der_fc
 116+ 84FC 30 86        	defw Badsat_der_fd
 117+ 84FE 60 86        	defw Badsat_der_fe
 118+ 8500
 119+ 8500 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8503 28 40 00     	DEFB    $28,$40,$00
 121+ 8506 54 40 00     	DEFB	$54,$40,$00
 122+ 8509 AA 40 00     	DEFB	$AA,$40,$00
 123+ 850C 55 40 00     	DEFB	$55,$40,$00
 124+ 850F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8512 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8515 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8518 07 50 00     	DEFB	$07,$50,$00
 128+ 851B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 851E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8521 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8524 06 55 00     	DEFB	$06,$55,$00
 132+ 8527 00 2A 00     	DEFB	$00,$2A,$00
 133+ 852A 00 14 00     	DEFB	$00,$14,$00
 134+ 852D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8530
 136+ 8530 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8534 20 00 2A 20
 137+ 8538 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 853C 2A A0 00 15
 138+ 8540 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8544 00 03 60 00
 139+ 8548 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 854C F4 00 0B EA
 140+ 8550 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8554 03 2A 80 00
 141+ 8558 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 855C 00 00 04 00
 142+ 8560
 143+ 8560 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8564 10 00 15 10
 144+ 8568 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 856C 15 50 00 0A
 145+ 8570 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8574 80 01 B0 00
 146+ 8578 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 857C FA 00 05 F5
 147+ 8580 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8584 01 95 40 00
 148+ 8588 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 858C 00 00 02 00
 149+ 8590
 150+ 8590 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8594 08 00 0A 88
 151+ 8598 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 859C 0A A8 00 05
 152+ 85A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 85A4 C0 00 D8 00
 153+ 85A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 85AC FD 00 02 FA
 154+ 85B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 85B4 00 CA A0 00
 155+ 85B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 85BC 80 00 01 00
 156+ 85C0
 157+ 85C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 85C4 84 00 05 44
 158+ 85C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 85CC 05 54 00 02
 159+ 85D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 85D4 E0 00 6C 00
 160+ 85D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 85DC FE 80 01 7D
 161+ 85E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 85E4 00 65 50 00
 162+ 85E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 85EC 40 00 00 80
 163+ 85F0
 164+ 85F0              ;! 16 bytes libres aquí !!!!!
 165+ 85F0
 166+ 85F0              	org $8600
 167+ 8600
 168+ 8600 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8604 42 00 02 A2
 169+ 8608 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 860C 02 AA 00 01
 170+ 8610 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8614 F0 00 36 00
 171+ 8618 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 861C FF 40 00 BE
 172+ 8620 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8624 00 32 A8 00
 173+ 8628 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 862C A0 00 00 40
 174+ 8630
 175+ 8630 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8634 A1 00 01 51
 176+ 8638 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 863C 01 55 00 00
 177+ 8640 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8644 F8 00 1B 00
 178+ 8648 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 864C FF A0 00 1F
 179+ 8650 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8654 00 09 54 00
 180+ 8658 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 865C 50 00 00 20
 181+ 8660
 182+ 8660 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8664 50 80 00 A8
 183+ 8668 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 866C 00 AA 80 00
 184+ 8670 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8674 FC 00 0D 80
 185+ 8678 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 867C FF D0 00 0F
 186+ 8680 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8684 00 04 AA 00
 187+ 8688 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 868C 28 00 00 10
 188+ 8690
 189+ 8690              ; ----------------------------------------------------------------------------------------
 190+ 8690
 191+ 8690              ; Amadeus. 2x2.
 192+ 8690
 193+ 8690              	org $8119
 194+ 8119
 195+ 8119 39 81        Indice_Amadeus_der defw Amadeus
 196+ 811B 00 00        	defw 0
 197+ 811D 59 81        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 811F 00 00        	defw 0
 199+ 8121 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 8123 00 00        	defw 0
 201+ 8125 B9 81        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 8127 00 00        	defw 0	 								; (Fín de índice).
 203+ 8129
 204+ 8129 39 81        Indice_Amadeus_izq defw Amadeus
 205+ 812B 00 00        	defw 0
 206+ 812D B9 81        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 812F 00 00        	defw 0
 208+ 8131 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 8133 00 00        	defw 0
 210+ 8135 59 81        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 8137 00 00        	defw 0	 								; (Fín de índice).
 212+ 8139
 213+ 8139 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 213+ 813D 26 64 24 24
 214+ 8141 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 214+ 8145 6F F6 67 E6
 215+ 8149 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 215+ 814D F7 EF FF FF
 216+ 8151 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 216+ 8155 8B D1 71 8E
 217+ 8159
 218+ 8159 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 218+ 815D F1 00 09 99
 219+ 8161 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 219+ 8165 0B 0D 00 1B
 220+ 8169 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 220+ 816D 80 19 F9 80
 221+ 8171 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 221+ 8175 F3 C0 3D FB
 222+ 8179 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 222+ 817D 3E F7 C0 3E
 223+ 8181 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 223+ 8185 40 1C 63 80
 224+ 8189
 225+ 8189 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 225+ 818D 3C 40 02 66
 226+ 8191 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 226+ 8195 02 C3 40 06
 227+ 8199 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 227+ 819D 60 06 7E 60
 228+ 81A1 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 228+ 81A5 3C F0 0F 7E
 229+ 81A9 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 229+ 81AD 0F BD F0 0F
 230+ 81B1 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 230+ 81B5 10 07 18 E0
 231+ 81B9
 232+ 81B9 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 232+ 81BD 8F 10 00 99
 233+ 81C1 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 233+ 81C5 00 B0 D0 01
 234+ 81C9 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 234+ 81CD D8 01 9F 98
 235+ 81D1 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 235+ 81D5 CF 3C 03 DF
 236+ 81D9 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 236+ 81DD 03 EF 7C 03
 237+ 81E1 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 237+ 81E5 44 01 C6 38
 238+ 81E9
 239+ 81E9              ; ----------------------------------------------------------------------------------------
 240+ 81E9
 241+ 81E9              	org $8690
 242+ 8690
 243+ 8690 96 86        Indice_Explosion_2x3 defw Explosion_2x3_1
 244+ 8692 C6 86        	defw Explosion_2x3_2
 245+ 8694 F6 86        	defw Explosion_2x3_3
 246+ 8696
 247+ 8696 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 247+ 869A 10 00 04 38
 248+ 869E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 248+ 86A2 02 E6 80 01
 249+ 86A6 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 249+ 86AA 00 03 DD 80
 250+ 86AE 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 250+ 86B2 3B 80 01 9D
 251+ 86B6 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 251+ 86BA 02 FD 80 03
 252+ 86BE 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 252+ 86C2 00 08 00 00
 253+ 86C6
 254+ 86C6 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 254+ 86CA 38 10 03 BC
 255+ 86CE 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 255+ 86D2 04 06 C0 00
 256+ 86D6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 256+ 86DA 00 03 DD 80
 257+ 86DE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 257+ 86E2 3A 70 01 9C
 258+ 86E6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 258+ 86EA 04 F8 80 06
 259+ 86EE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 259+ 86F2 00 00 00 00
 260+ 86F6
 261+ 86F6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 261+ 86FA 00 20 08 00
 262+ 86FE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 262+ 8702 00 06 00 00
 263+ 8706 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 263+ 870A 00 00 14 30
 264+ 870E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 264+ 8712 38 00 01 08
 265+ 8716 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 265+ 871A 00 80 00 04
 266+ 871E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 266+ 8722 10 08 00 20
 267+ 8726
 268+ 8726              ; ------------------------------------------
 269+ 8726
 270+ 8726 2C 87        Indice_Explosion_2x2 defw Explosion_2x2_1
 271+ 8728 4C 87        	defw Explosion_2x2_2
 272+ 872A 6C 87        	defw Explosion_2x2_3
 273+ 872C
 274+ 872C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 274+ 8730 43 84 37 D8
 275+ 8734 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 275+ 8738 17 F0 3D D8
 276+ 873C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 276+ 8740 19 D0 1F 60
 277+ 8744 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 277+ 8748 40 00 80 00
 278+ 874C
 279+ 874C
 280+ 874C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 280+ 8750 3B C2 60 0C
 281+ 8754 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 281+ 8758 07 F0 3D D8
 282+ 875C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 282+ 8760 19 C6 1F 64
 283+ 8764 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 283+ 8768 80 00 00 00
 284+ 876C
 285+ 876C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 285+ 8770 88 04 10 0C
 286+ 8774 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 286+ 8778 81 E0 01 43
 287+ 877C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 287+ 8780 10 80 18 00
 288+ 8784 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 288+ 8788 60 01 80 02
 289+ 878C
 290+ 878C
 291+ 878C
 292+ 878C
 293+ 878C
# file closed: Sprites_e_indices.asm
 129  878C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 878C
   2+ 878C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 878C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 878C
   5+ 878C              ; 19/01/24
   6+ 878C
   7+ 878C FB 88        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 878E              ;	defw ...
   9+ 878E              ; 	defw ...
  10+ 878E 00 00        	defw 0
  11+ 8790
  12+ 8790              ; Control. %00000001 00000001
  13+ 8790              ;
  14+ 8790              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8790              ;                    _ hacen las entidades hacia abajo.
  16+ 8790              ;
  17+ 8790              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8790
  19+ 8790 96 87        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8792 9E 87        	defw Disparo_2A
  21+ 8794 A6 87        	defw Disparo_3A
  22+ 8796
  23+ 8796 00 00        Disparo_1A defw 0									; Control.
  24+ 8798 00 00        	defw 0											; Puntero objeto.
  25+ 879A 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 879C 00 00        	defw 0											; Rutina de impresión.
  27+ 879E
  28+ 879E 00 00        Disparo_2A defw 0									; Control.
  29+ 87A0 00 00        	defw 0											; Puntero objeto.
  30+ 87A2 00 00        	defw 0											; Puntero de impresión.
  31+ 87A4 00 00        	defw 0											; Rutina de impresión.
  32+ 87A6
  33+ 87A6 00 00        Disparo_3A defw 0
  34+ 87A8
  35+ 87A8 BE 87        Indice_de_disparos_entidades defw Disparo_1
  36+ 87AA C6 87        	defw Disparo_2
  37+ 87AC CE 87        	defw Disparo_3
  38+ 87AE D6 87        	defw Disparo_4
  39+ 87B0 DE 87        	defw Disparo_5
  40+ 87B2 E6 87        	defw Disparo_6
  41+ 87B4 EE 87        	defw Disparo_7
  42+ 87B6 F6 87        	defw Disparo_8
  43+ 87B8 FE 87        	defw Disparo_9
  44+ 87BA 06 88        	defw Disparo_10
  45+ 87BC 0E 88        	defw Disparo_11
  46+ 87BE
  47+ 87BE 00 00        Disparo_1 defw 0									; Control.
  48+ 87C0 00 00        	defw 0											; Puntero objeto.
  49+ 87C2 00 00        	defw 0											; Puntero de impresión.
  50+ 87C4 00 00        	defw 0											; Rutina de impresión.
  51+ 87C6
  52+ 87C6 00 00        Disparo_2 defw 0									; Control.
  53+ 87C8 00 00        	defw 0											; Puntero objeto.
  54+ 87CA 00 00        	defw 0											; Puntero de impresión.
  55+ 87CC 00 00        	defw 0											; Rutina de impresión.
  56+ 87CE
  57+ 87CE 00 00        Disparo_3 defw 0									; Control.
  58+ 87D0 00 00        	defw 0											; Puntero objeto.
  59+ 87D2 00 00        	defw 0											; Puntero de impresión.
  60+ 87D4 00 00        	defw 0											; Rutina de impresión.
  61+ 87D6
  62+ 87D6 00 00        Disparo_4 defw 0									; Control.
  63+ 87D8 00 00        	defw 0											; Puntero objeto.
  64+ 87DA 00 00        	defw 0											; Puntero de impresión.
  65+ 87DC 00 00        	defw 0											; Rutina de impresión.
  66+ 87DE
  67+ 87DE 00 00        Disparo_5 defw 0									; Control.
  68+ 87E0 00 00        	defw 0											; Puntero objeto.
  69+ 87E2 00 00        	defw 0											; Puntero de impresión.
  70+ 87E4 00 00        	defw 0											; Rutina de impresión.
  71+ 87E6
  72+ 87E6 00 00        Disparo_6 defw 0									; Control.
  73+ 87E8 00 00        	defw 0											; Puntero objeto.
  74+ 87EA 00 00        	defw 0											; Puntero de impresión.
  75+ 87EC 00 00        	defw 0											; Rutina de impresión.
  76+ 87EE
  77+ 87EE 00 00        Disparo_7 defw 0									; Control.
  78+ 87F0 00 00        	defw 0											; Puntero objeto.
  79+ 87F2 00 00        	defw 0											; Puntero de impresión.
  80+ 87F4 00 00        	defw 0											; Rutina de impresión.
  81+ 87F6
  82+ 87F6 00 00        Disparo_8 defw 0									; Control.
  83+ 87F8 00 00        	defw 0											; Puntero objeto.
  84+ 87FA 00 00        	defw 0											; Puntero de impresión.
  85+ 87FC 00 00        	defw 0											; Rutina de impresión.
  86+ 87FE
  87+ 87FE 00 00        Disparo_9 defw 0									; Control.
  88+ 8800 00 00        	defw 0											; Puntero objeto.
  89+ 8802 00 00        	defw 0											; Puntero de impresión.
  90+ 8804 00 00        	defw 0											; Rutina de impresión.
  91+ 8806
  92+ 8806 00 00        Disparo_10 defw 0									; Control.
  93+ 8808 00 00        	defw 0											; Puntero objeto.
  94+ 880A 00 00        	defw 0											; Puntero de impresión.
  95+ 880C 00 00        	defw 0											; Rutina de impresión.
  96+ 880E
  97+ 880E 00 00        Disparo_11 defw 0
  98+ 8810
  99+ 8810              ; -------------------------------------------------------------------------------------
 100+ 8810              ;
 101+ 8810              ;	Índice de cajas de entidades.
 102+ 8810              ;
 103+ 8810              ;	18/1/24
 104+ 8810              ;
 105+ 8810
 106+ 8810              Indice_de_cajas_de_entidades
 107+ 8810
 108+ 8810 58 88        	defw Caja_1
 109+ 8812 6B 88        	defw Caja_2
 110+ 8814 7E 88        	defw Caja_3
 111+ 8816 91 88        	defw Caja_4
 112+ 8818 A4 88        	defw Caja_5
 113+ 881A B7 88        	defw Caja_6
 114+ 881C CA 88        	defw Caja_7
 115+ 881E
 116+ 881E 00 00        	defw 0
 117+ 8820 00 00        	defw 0
 118+ 8822
 119+ 8822              ; ---------- ---------- ---------- ---------- ----------
 120+ 8822
 121+ 8822 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8825 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8827 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8829 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 882B
 126+ 882B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 882C 05           	db %00000101										; (Attr).
 128+ 882D 19 81        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 882F 29 81        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8831 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8833 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8835 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8837 04           	db 4 												; (Cuad_objeto).
 134+ 8838 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8839 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 883F
 137+ 883F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8841
 139+ 8841              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8841 00 00        	defw 0
 141+ 8843
 142+ 8843 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8845 40           	db $40												; (Ctrl_0).
 144+ 8846 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 884A 00 00
 145+ 884C 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 884F 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8851 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8852 00           	db 0 												; (Columnas).
 149+ 8853 00 00        	defw 0												; (Limite_horizontal).
 150+ 8855 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 8858
 152+ 8858              ; ---------- ---------- ---------- ---------- ----------
 153+ 8858              ;
 154+ 8858              ;	22/01/24
 155+ 8858              ;
 156+ 8858              ; 	Cada caja tiene 19 bytes !!!
 157+ 8858
 158+ 8858 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 885B 00           	db %00000000										; (Attr).
 160+ 885C              ;	db 0												; (Cuad_objeto).
 161+ 885C 00           	db 0												; (Impacto).
 162+ 885D 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8863 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8865 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 8867 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 8869 00           	db 0												; (Ctrl_0).
 167+ 886A 00           	db 0												; (Ctrl_2).
 168+ 886B
 169+ 886B              ; ---------- ---------- ---------- ---------- ----------
 170+ 886B
 171+ 886B 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 886E 00           	db %00000000										; (Attr).
 173+ 886F              ;	db 0												; (Cuad_objeto).
 174+ 886F 00           	db 0												; (Impacto).
 175+ 8870 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 8876 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 8878 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 887A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 887C 00           	db 0												; (Ctrl_0).
 180+ 887D 00           	db 0												; (Ctrl_2).
 181+ 887E
 182+ 887E              ; ---------- ---------- ---------- ---------- ----------
 183+ 887E
 184+ 887E 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8881 00           	db %00000000										; (Attr).
 186+ 8882              ;	db 0												; (Cuad_objeto).
 187+ 8882 00           	db 0												; (Impacto).
 188+ 8883 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 8889 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 888B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 888D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 888F 00           	db 0												; (Ctrl_0).
 193+ 8890 00           	db 0												; (Ctrl_2).
 194+ 8891
 195+ 8891              ; ---------- ---------- ---------- ---------- ----------
 196+ 8891
 197+ 8891 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8894 00           	db %00000000										; (Attr).
 199+ 8895              ;	db 0												; (Cuad_objeto).
 200+ 8895 00           	db 0												; (Impacto).
 201+ 8896 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 889C 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 889E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 88A0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 88A2 00           	db 0												; (Ctrl_0).
 206+ 88A3 00           	db 0												; (Ctrl_2).
 207+ 88A4
 208+ 88A4              ; ---------- ---------- ---------- ---------- ----------
 209+ 88A4
 210+ 88A4 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 88A7 00           	db %00000000										; (Attr).
 212+ 88A8              ;	db 0												; (Cuad_objeto).
 213+ 88A8 00           	db 0												; (Impacto).
 214+ 88A9 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 88AF 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 88B1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 88B3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 88B5 00           	db 0												; (Ctrl_0).
 219+ 88B6 00           	db 0												; (Ctrl_2).
 220+ 88B7
 221+ 88B7              ; ---------- ---------- ---------- ---------- ----------
 222+ 88B7
 223+ 88B7 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 88BA 00           	db %00000000										; (Attr).
 225+ 88BB              ;	db 0												; (Cuad_objeto).
 226+ 88BB 00           	db 0												; (Impacto).
 227+ 88BC 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 88C2 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 88C4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 88C6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 88C8 00           	db 0												; (Ctrl_0).
 232+ 88C9 00           	db 0												; (Ctrl_2).
 233+ 88CA
 234+ 88CA              ; ---------- ---------- ---------- ---------- ----------
 235+ 88CA
 236+ 88CA 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 88CD 00           	db %00000000										; (Attr).
 238+ 88CE              ;	db 0												; (Cuad_objeto).
 239+ 88CE 00           	db 0												; (Impacto).
 240+ 88CF 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 88D5 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 88D7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 88D9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 88DB 00           	db 0												; (Ctrl_0).
 245+ 88DC 00           	db 0												; (Ctrl_2).
 246+ 88DD
 247+ 88DD              ; -------------------------------------------------------------------------------------
 248+ 88DD              ;
 249+ 88DD              ;	11/1/24
 250+ 88DD              ;
 251+ 88DD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 88DD              ;
 253+ 88DD              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 88DD              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 88DD              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 88DD              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 88DD
 258+ 88DD              Indice_de_definiciones_de_entidades
 259+ 88DD
 260+ 88DD E1 88        	defw Entidad_1
 261+ 88DF EE 88        	defw Entidad_2
 262+ 88E1
 263+ 88E1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 88E1
 265+ 88E1              ;	BADSAT, (Satélite malvado).
 266+ 88E1
 267+ 88E1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 88E4 04           	db %00000100										; (Attr).
 269+ 88E5 F0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 88E7 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 88E9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 272+ 88EB 01           	db 1												; (Cuad_objeto).
 273+ 88EC 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 88EE
 275+ 88EE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 88F1 02           	db %00000010										; (Attr).
 277+ 88F2 F0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 88F4 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 88F6 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 88F8 01           	db 1												; (Cuad_objeto).
 281+ 88F9 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 88FB
# file closed: Cajas_y_disparos.asm
 130  88FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 88FB
   2+ 88FB
   3+ 88FB              ;   07/07/23
   4+ 88FB              ;
   5+ 88FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 88FB              ;
   7+ 88FB              ;   Codificación:
   8+ 88FB              ;
   9+ 88FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 88FB              ;
  11+ 88FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 88FB              ;
  13+ 88FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 88FB              ;
  15+ 88FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 88FB              ;
  17+ 88FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 88FB              ;                               ..... %01000010 Vel_up 4
  19+ 88FB              ;                                               Vel_down 2
  20+ 88FB              ;                               ..... $42
  21+ 88FB              ;
  22+ 88FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 88FB              ;
  24+ 88FB              ;                               ..... %01000010 Vel_left 4
  25+ 88FB              ;                                               Vel_right 2
  26+ 88FB              ;                               ..... $42
  27+ 88FB              ;
  28+ 88FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 88FB              ;
  30+ 88FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 88FB              ;
  32+ 88FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 88FB              ;
  34+ 88FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 88FB              ;                                     $53
  36+ 88FB              ;
  37+ 88FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 88FB              ;
  39+ 88FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 88FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 88FB              ;
  42+ 88FB              ;                       Arriba ..... $81
  43+ 88FB              ;                       Arriba - izquierda ..... $a1
  44+ 88FB              ;                       Arriba - derecha ..... $91
  45+ 88FB              ;
  46+ 88FB              ;                       Abajo ..... $41
  47+ 88FB              ;                       Abajo - izquierda ..... $61
  48+ 88FB              ;                       Abajo - derecha ..... $51
  49+ 88FB              ;
  50+ 88FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 88FB              ;
  52+ 88FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 88FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 88FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 88FB              ;
  56+ 88FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 88FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 88FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 88FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 88FB              ;
  61+ 88FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 88FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 88FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 88FB              ;
  65+ 88FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 88FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 88FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 88FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 88FB
  70+ 88FB              ; ----- ----- ----- ----- -----
  71+ 88FB
  72+ 88FB 27 89        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 88FD 2F 89            defw F_1
  74+ 88FF 39 89            defw F_2
  75+ 8901 43 89            defw Codo_abajo_derecha
  76+ 8903 77 89            defw Derecha_y_subiendo
  77+ 8905 81 89            defw Derecha_y_subiendo_1
  78+ 8907 8B 89            defw F_3
  79+ 8909 95 89            defw F_4
  80+ 890B 9F 89            defw Derecha_y_bajando
  81+ 890D A9 89            defw Derecha_y_bajando_1
  82+ 890F B3 89            defw Derecha_y_bajando_2
  83+ 8911 BD 89            defw Codo_derecha_abajo
  84+ 8913 ED 89            defw Codo_abajo_izq.
  85+ 8915 21 8A            defw Izquierda_y_subiendo
  86+ 8917 2B 8A            defw Izquierda_y_subiendo_1
  87+ 8919 35 8A            defw F_5
  88+ 891B 3F 8A            defw F_6
  89+ 891D 49 8A            defw Izquierda_y_bajando
  90+ 891F 53 8A            defw Izquierda_y_bajando_1
  91+ 8921 5D 8A            defw Izquierda_y_bajando_2
  92+ 8923 67 8A            defw Codo_izquierda_abajo
  93+ 8925 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8927
  95+ 8927 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 892B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 892F
  98+ 892F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8933 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8937 08 00
 100+ 8939
 101+ 8939 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 893D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8941 0F FE
 103+ 8943
 104+ 8943 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8947 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 894B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 894F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8953 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8957 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 895B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 895F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8963 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8967 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 896B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 896F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8973 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8977
 118+ 8977 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 897B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 897F 06 00
 120+ 8981
 121+ 8981 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8985 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8989 02 00
 123+ 898B
 124+ 898B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 898F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8993 04 00
 126+ 8995
 127+ 8995 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8999 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 899D 08 00
 129+ 899F
 130+ 899F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 89A3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 89A7 02 00
 132+ 89A9
 133+ 89A9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 89AD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 89B1 06 00
 135+ 89B3
 136+ 89B3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 89B7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 89BB 06 00
 138+ 89BD
 139+ 89BD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 89BD
 141+ 89BD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 89C1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 89C5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 89C9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 89CD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 89D1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 89D5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 89D9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 89DD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 89E1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 89E5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 89E9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 89ED
 154+ 89ED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 89F1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 89F5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 89F9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 89FD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8A01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8A05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8A09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8A0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8A11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8A15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8A19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8A1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8A21
 168+ 8A21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8A25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8A29 06 00
 170+ 8A2B
 171+ 8A2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8A2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8A33 02 00
 173+ 8A35
 174+ 8A35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8A39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8A3D 04 00
 176+ 8A3F
 177+ 8A3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8A43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8A47 08 00
 179+ 8A49
 180+ 8A49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8A4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8A51 02 00
 182+ 8A53
 183+ 8A53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8A57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8A5B 06 00
 185+ 8A5D
 186+ 8A5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8A61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8A65 06 00
 188+ 8A67
 189+ 8A67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8A6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8A6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8A73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8A77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8A7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8A7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8A83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8A87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8A8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8A8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8A93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8A97
 202+ 8A97
 203+ 8A97
 204+ 8A97
 205+ 8A97
 206+ 8A97
 207+ 8A97
 208+ 8A97
 209+ 8A97
 210+ 8A97
# file closed: Patrones_de_mov.asm
 131  8A97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8A97              ; 19/1/24
   2+ 8A97
   3+ 8A97              Indice_de_niveles
   4+ 8A97
   5+ 8A97 9F 8A        	defw Nivel_1
   6+ 8A99 A5 8A        	defw Nivel_2
   7+ 8A9B
   8+ 8A9B              ;	...
   9+ 8A9B              ;	...
  10+ 8A9B              ;	+ Niveles ...
  11+ 8A9B
  12+ 8A9B 00 00        	defw 0
  13+ 8A9D 00 00        	defw 0
  14+ 8A9F
  15+ 8A9F 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8AA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8AA4 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8AA5
  19+ 8AA5 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8AA6 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8AAA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8AAE 01 02
  22+ 8AB0 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8AB4 01 02
  23+ 8AB6
# file closed: Niveles.asm
 132  8AB6
 133  8AB6              ; ******************************************************************************************************************************************************************************************
 134  8AB6              ; Constantes.
 135  8AB6              ; ******************************************************************************************************************************************************************************************
 136  8AB6              ;
 137  8AB6              ; 09/03/24
 138  8AB6
 139  8AB6              ;
 140  8AB6              ; Constantes.
 141  8AB6              ;
 142  8AB6
 143  8AB6              Sprite_vacio equ $eae0
 144  8AB6
 145  8AB6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 146  8AB6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 147  8AB6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 148  8AB6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 149  8AB6
 150  8AB6              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 151  8AB6              ;Almacen_de_scanlines_masticados equ $e900
 152  8AB6              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 153  8AB6              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 154  8AB6              ;
 155  8AB6              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 156  8AB6
 157  8AB6              ;	($8119 - $81e8) = Índice y datos de Amadeus. "$d0", 208 bytes.
 158  8AB6
 159  8AB6
 160  8AB6              ;                                                       ;	35 bytes por entidad.
 161  8AB6              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 162  8AB6              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 163  8AB6              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 164  8AB6              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 165  8AB6
 166  8AB6              Scanlines_album_2 equ $8200    ;    (8200h - 8318h)
 167  8AB6
 168  8AB6              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 169  8AB6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 170  8AB6              ;														; 55 Bytes.
 171  8AB6
 172  8AB6              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 173  8AB6
 174  8AB6              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 175  8AB6
 176  8AB6
 177  8AB6              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 178  8AB6
 179  8AB6              ; ******************************************************************************************************************************************************************************************
 180  8AB6              ; Variables.
 181  8AB6              ; ******************************************************************************************************************************************************************************************
 182  8AB6              ;
 183  8AB6              ; 18/01/24
 184  8AB6              ;
 185  8AB6              ; Variables de DRAW. (Motor principal).	42 Bytes.
 186  8AB6              ;
 187  8AB6
 188  8AB6              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 189  8AB6
 190  8AB6 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 191  8AB7              ;															- Patrón de movimiento.
 192  8AB7              ;															- Aspecto
 193  8AB7 00           Filas db 0												; Filas. [DRAW]
 194  8AB8 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 195  8AB9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 196  8ABB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 197  8ABD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 198  8ABE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 199  8ABF
 200  8ABF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 201  8ABF
 202  8ABF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 203  8AC0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 204  8AC0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 205  8AC0 00           Attr db 0												; Atributos de la entidad:
 206  8AC1
 207  8AC1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 208  8AC1              ;
 209  8AC1              ;	COLORES: 0 ..... NEGRO
 210  8AC1              ;    		 1 ..... AZUL
 211  8AC1              ; 			 2 ..... ROJO
 212  8AC1              ;			 3 ..... MAGENTA
 213  8AC1              ; 			 4 ..... VERDE
 214  8AC1              ; 			 5 ..... CIAN
 215  8AC1              ;			 6 ..... AMARILLO
 216  8AC1              ; 			 7 ..... BLANCO
 217  8AC1
 218  8AC1 00 00        Indice_Sprite_der defw 0
 219  8AC3 00 00        Indice_Sprite_izq defw 0
 220  8AC5 00 00        Puntero_DESPLZ_der defw 0
 221  8AC7 00 00        Puntero_DESPLZ_izq defw 0
 222  8AC9
 223  8AC9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 224  8ACB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 225  8ACC
 226  8ACC              ; Variables de objeto. (Características).
 227  8ACC
 228  8ACC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 229  8ACD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 230  8ACD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 231  8ACD 00 00 00...  Variables_de_borrado ds 6
 232  8AD3
 233  8AD3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 234  8AD5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 235  8AD5
 236  8AD5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 237  8AD7
 238  8AD7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 239  8AD7              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 240  8AD7
 241  8AD7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 242  8AD9              ;														; _palabras que componen el "movimiento_masticado".
 243  8AD9
 244  8AD9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 245  8AD9
 246  8AD9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 247  8ADA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 248  8ADA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 249  8ADA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 250  8ADA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 251  8ADA              ;
 252  8ADA              ; 														DESCRIPCIÖN:
 253  8ADA              ;
 254  8ADA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 255  8ADA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 256  8ADA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 257  8ADA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 258  8ADA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 259  8ADA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 260  8ADA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 261  8ADA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 262  8ADA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 263  8ADA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 264  8ADA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 265  8ADA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 266  8ADA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 267  8ADA              ;
 268  8ADA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 269  8ADA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 270  8ADA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 271  8ADA
 272  8ADA              ; Variables de funcionamiento. [DRAW].
 273  8ADA
 274  8ADA 00           Columnas db 0
 275  8ADB 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 276  8ADD              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 277  8ADD 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8ADE
 279  8ADE              ; variables de control general.
 280  8ADE
 281  8ADE 00           Ctrl_2 db 0
 282  8ADF              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 283  8ADF              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 284  8ADF              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 285  8ADF              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 286  8ADF              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 287  8ADF              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 288  8ADF              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 289  8ADF              ;
 290  8ADF              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 291  8ADF              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 292  8ADF              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 293  8ADF              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 294  8ADF              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 295  8ADF              ;														BIT 4, ???
 296  8ADF              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 297  8ADF
 298  8ADF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 299  8AE0
 300  8AE0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 301  8AE0
 302  8AE0              ;					         		---------;      ;---------
 303  8AE0
 304  8AE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 305  8AE0
 306  8AE0              Perfiles_de_velocidad
 307  8AE0
 308  8AE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 309  8AE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 310  8AE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 311  8AE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 312  8AE4
 313  8AE4              ; Contadores de 16 bits.
 314  8AE4
 315  8AE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 316  8AE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 317  8AE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 318  8AEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 319  8AEC
 320  8AEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 321  8AEC
 322  8AEC              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 323  8AEC              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 324  8AEC              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 325  8AEC
 326  8AEC              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 327  8AEC
 328  8AEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 329  8AEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 330  8AF0 00 00        Puntero_indice_mov_bucle defw 0							;
 331  8AF2              ;
 332  8AF2              ;
 333  8AF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 334  8AF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 335  8AF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 336  8AF3 00           Incrementa_puntero_backup db 0
 337  8AF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 338  8AF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 339  8AF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 340  8AF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 341  8AF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 342  8AF8              ;
 343  8AF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 344  8AF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 345  8AF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 346  8AF8              ;
 347  8AF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 348  8AF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 349  8AF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 350  8AF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 351  8AF8              ;
 352  8AF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 353  8AF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 354  8AF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 355  8AF8              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 356  8AF8
 357  8AF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 358  8AF9
 359  8AF9              ;														DESCRIPCIÓN:
 360  8AF9              ;
 361  8AF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 362  8AF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 363  8AF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 364  8AF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 365  8AF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 366  8AF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 367  8AF9
 368  8AF9              ;														BIT 3, Recarga de nueva oleada.
 369  8AF9              ;														BIT 4, Recarga de nueva oleada.
 370  8AF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 371  8AF9              ;														BIT 6, **** Frame completo.
 372  8AF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 373  8AF9
 374  8AF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 375  8AFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 376  8AFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 377  8AFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 378  8AFB
 379  8AFB              ; Gestión de ENTIDADES y CAJAS.
 380  8AFB
 381  8AFB 00 00        Puntero_store_caja defw 0
 382  8AFD 00 00        Puntero_restore_caja defw 0
 383  8AFF 00 00        Indice_restore_caja defw 0
 384  8B01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 385  8B02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 386  8B03 00           Entidades_en_curso db 0									; ..... ..... .....
 387  8B04 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 388  8B05              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 389  8B05              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 390  8B05              ;														; _ (Numero_de_malotes)="0".
 391  8B05 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 392  8B07 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 393  8B09              ;														; _ puntero (Indice_entidades).
 394  8B09
 395  8B09              ;---------------------------------------------------------------------------------------------------------------
 396  8B09              ;
 397  8B09              ;	11/01/24
 398  8B09              ;
 399  8B09              ;	Álbumes.
 400  8B09
 401  8B09 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 402  8B0B              ;														; _variable para almacenar lo posición del puntero_
 403  8B0B              ; 														; _de pila, SP.
 404  8B0B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 405  8B0D              ;														; La utiliza la rutina [Extrae_foto_registros].
 406  8B0D 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 407  8B0F
 408  8B0F 00 00        Album_de_pintado defw 0
 409  8B11 00 00        Album_de_borrado defw 0
 410  8B13
 411  8B13              ;Techo_Scanlines_album defw 0
 412  8B13              ;Techo_Scanlines_album_2 defw 0
 413  8B13
 414  8B13 00 00        Techo defw 0
 415  8B15 00 00        Scanlines_album_SP defw 0
 416  8B17
 417  8B17 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 418  8B18              ;
 419  8B18              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 420  8B18              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 421  8B18              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 422  8B18              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 423  8B18              ;																Habilita el borrado/pintado de sprites.
 424  8B18
 425  8B18 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8B19              ;
 427  8B19              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8B19              ;
 429  8B19              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8B19              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8B19              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8B19              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8B19              ;
 434  8B19              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8B19              ;															_ masticados ya generados.
 436  8B19              ;
 437  8B19              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8B19              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8B19              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8B19              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8B19
 442  8B19
 443  8B19              ; Gestión de Disparos.
 444  8B19
 445  8B19              ;;Numero_de_disparotes db 0
 446  8B19              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 447  8B19              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 448  8B19              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 449  8B19              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 450  8B19              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 451  8B19              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8B19              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8B19              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 454  8B19              ;														; _produzca colisión.
 455  8B19              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 456  8B19              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8B19              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8B19              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 459  8B19 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8B1C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 461  8B1C              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 462  8B1C
 463  8B1C              ;---------------------------------------------------------------------------------------------------------------
 464  8B1C
 465  8B1C              ; Relojes y temporizaciones.
 466  8B1C
 467  8B1C 00           Contador_de_frames db 0
 468  8B1D 00           Contador_de_frames_2 db 0
 469  8B1E
 470  8B1E              ;Clock_explosion db 4
 471  8B1E 14           Clock_Entidades_en_curso db 20
 472  8B1F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 473  8B20              ;														; Repite la oleada de entidades.
 474  8B20              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 475  8B20              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 476  8B20              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 477  8B20
 478  8B20              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 479  8B20              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 480  8B20              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 481  8B20
 482  8B20              ;---------------------------------------------------------------------------------------------------------------
 483  8B20
 484  8B20              ; Gestión de NIVELES.
 485  8B20
 486  8B20 00           Nivel db 0												; Nivel actual del juego.
 487  8B21 00 00        Puntero_indice_NIVELES defw 0
 488  8B23 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 489  8B25              ; 														; _ que definen el NIVEL.
 490  8B25              ; Y todo comienza aquí .....
 491  8B25              ;
 492  8B25              ; 	INICIO  *************************************************************************************************************************************************************************
 493  8B25              ;
 494  8B25              ;	5/1/24
 495  8B25
 496  8B25              START
 497  8B25
 498  8B25 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 499  8B28 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 500  8B2A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 501  8B2C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 502  8B2E F3           	DI
 503  8B2F
 504  8B2F              ;	ld a,%00000111
 505  8B2F              ;	call Cls
 506  8B2F CD 4A 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 507  8B32
 508  8B32              ; INICIALIZACIÓN.
 509  8B32
 510  8B32              ;	Inicializa 1er Nivel.
 511  8B32
 512  8B32 21 97 8A     	ld hl,Indice_de_niveles
 513  8B35 22 21 8B     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 514  8B38 CD 70 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 515  8B3B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 516  8B3B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 517  8B3B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 518  8B3B
 519  8B3B              ;	Provisional, (para desarrollo).
 520  8B3B              	;-
 521  8B3B              ;	ld hl,Numero_parcial_de_entidades
 522  8B3B              ;	ld b,(hl)
 523  8B3B              ;	inc b
 524  8B3B              ;	dec b
 525  8B3B              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 526  8B3B
 527  8B3B CD 8D 8C     	call Inicia_albumes_de_lineas
 528  8B3E
 529  8B3E CD B5 8D     4 call Inicia_Entidades
 530  8B41
 531  8B41 CD A0 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 532  8B44              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 533  8B44              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 534  8B44              ; (Esto se dá cuando se inicia una nueva oleada).
 535  8B44
 536  8B44              ;	ld a,(Ctrl_1)
 537  8B44              ;	bit 3,a
 538  8B44              ;	jr nz,5F											 ; Loop
 539  8B44
 540  8B44              ; 	INICIA AMADEUS !!!!!
 541  8B44
 542  8B44              ;3 call Restore_Amadeus
 543  8B44              ;	call Inicia_Puntero_objeto
 544  8B44              ;	call Draw
 545  8B44
 546  8B44              ;	call Guarda_movimiento_masticado	;! Provisional
 547  8B44
 548  8B44              ;	call Genera_datos_de_impresion
 549  8B44              ;	call Guarda_datos_de_borrado_Amadeus
 550  8B44
 551  8B44              ;	ld de,Amadeus_db
 552  8B44              ;	call Store_Amadeus
 553  8B44
 554  8B44              ; 	INICIA DISPAROS !!!!!
 555  8B44
 556  8B44              ;	call Inicia_Puntero_Disparo_Entidades
 557  8B44              ;	call Inicia_Puntero_Disparo_Amadeus
 558  8B44
 559  8B44              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 560  8B44
 561  8B44              ;5 call Inicia_punteros_de_cajas
 562  8B44              ;	call Restore_entidad
 563  8B44
 564  8B44              ;	ld a,(Ctrl_1)
 565  8B44              ;	bit 3,a
 566  8B44              ;	jr z,6F
 567  8B44
 568  8B44              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 569  8B44
 570  8B44              ;	ld hl,Ctrl_1
 571  8B44              ;	res 3,(hl)
 572  8B44              ;	jr Main
 573  8B44
 574  8B44              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 575  8B44
 576  8B44              6
 577  8B44
 578  8B44              ;	call Calcula_numero_de_malotes
 579  8B44
 580  8B44              ; Damos por concluida la construcción del FRAME.
 581  8B44              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 582  8B44
 583  8B44 2A 15 8B     	ld hl,(Scanlines_album_SP)
 584  8B47 22 13 8B     	ld (Techo),hl
 585  8B4A              ;	ld (Techo_Scanlines_album),hl
 586  8B4A
 587  8B4A 2A 11 8B     	ld hl,(Album_de_borrado)
 588  8B4D 22 15 8B     	ld (Scanlines_album_SP),hl
 589  8B50
 590  8B50 21 17 8B     	ld hl,Ctrl_3
 591  8B53 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 592  8B55 CB D6        	set 2,(hl)
 593  8B57
 594  8B57 FB           	ei
 595  8B58 76           	halt
 596  8B59
 597  8B59              ; ------------------------------------
 598  8B59
 599  8B59              Main
 600  8B59              ;
 601  8B59              ;	11/12/23
 602  8B59
 603  8B59              ; Aparece nueva entidad ???
 604  8B59
 605  8B59              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 606  8B59              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 607  8B59              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 608  8B59              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 609  8B59              ;														; _un 2º bloque.
 610  8B59
 611  8B59              ;	call Genera_scanlines_masticados_a_borrar
 612  8B59              ;	call Limpia_Almacen_de_scanlines_masticados
 613  8B59
 614  8B59              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 615  8B59              ; 													 	; _(Scanlines_album_SP).
 616  8B59
 617  8B59 3A 1E 8B     45 ld a,(Clock_Entidades_en_curso)
 618  8B5C 47           	ld b,a
 619  8B5D 3A 1C 8B     	ld a,(Contador_de_frames)
 620  8B60 B8           	cp b
 621  8B61 20 18        	jr nz,13F
 622  8B63
 623  8B63              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 624  8B63              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 625  8B63
 626  8B63 3A 02 8B     21 ld a,(Numero_parcial_de_entidades)
 627  8B66 47           	ld b,a
 628  8B67 3A 03 8B     	ld a,(Entidades_en_curso)
 629  8B6A B8           	cp b
 630  8B6B 28 0E        	jr z,13F
 631  8B6D 30 0C        	jr nc,13F
 632  8B6F
 633  8B6F 3C           	inc a
 634  8B70 32 03 8B     	ld (Entidades_en_curso),a
 635  8B73
 636  8B73              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 637  8B73
 638  8B73 3A 1E 8B     	ld a,(Clock_Entidades_en_curso)
 639  8B76              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 640  8B76              ;! _ IMPREDECIBLE !!!!
 641  8B76 C6 64        	add 100
 642  8B78 32 1E 8B     	ld (Clock_Entidades_en_curso),a
 643  8B7B
 644  8B7B              ; -------------------------------------------------------------------------------------------------------------
 645  8B7B
 646  8B7B              ; Habilita disparos.
 647  8B7B
 648  8B7B              13
 649  8B7B
 650  8B7B              ;	ld hl,Disparo_Amadeus
 651  8B7B              ;	ld de,CLOCK_repone_disparo_Amadeus
 652  8B7B              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 653  8B7B
 654  8B7B              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 655  8B7B              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 656  8B7B              ;	call Habilita_disparos
 657  8B7B
 658  8B7B              ; COLISIONES.
 659  8B7B
 660  8B7B              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 661  8B7B
 662  8B7B              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 663  8B7B              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 664  8B7B              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 665  8B7B
 666  8B7B              ;	xor a
 667  8B7B              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 668  8B7B
 669  8B7B              ;	call Inicia_punteros_de_cajas
 670  8B7B              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 671  8B7B              ; 														; _ en DRAW.
 672  8B7B
 673  8B7B              ;	ld a,(Filas)
 674  8B7B              ;	and a
 675  8B7B              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 676  8B7B              ;	call Incrementa_punteros_de_cajas
 677  8B7B              ;	jr 12B
 678  8B7B
 679  8B7B              ; ---------------------------------------------------------------------------------------
 680  8B7B
 681  8B7B 3A 02 8B     10 ld a,(Numero_parcial_de_entidades)
 682  8B7E 47               ld b,a
 683  8B7F A7           	and a
 684  8B80 20 00        	jr nz,11F
 685  8B82
 686  8B82              ;	ld hl,Ctrl_1;
 687  8B82              ;	bit 4,(hl)
 688  8B82              ;	jp nz,16F
 689  8B82
 690  8B82              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 691  8B82
 692  8B82              ;	ld hl,Ctrl_1
 693  8B82              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 694  8B82
 695  8B82              ;	ld a,(Contador_de_frames)
 696  8B82              ;	inc a
 697  8B82              ;	ld (Activa_recarga_cajas),a
 698  8B82
 699  8B82              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 700  8B82
 701  8B82 3A 03 8B     11 ld a,(Entidades_en_curso)
 702  8B85 A7           	and a
 703  8B86 28 1C        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 704  8B88 47           	ld b,a												; No hay entidades que gestionar.
 705  8B89
 706  8B89              ; ( Código que ejecutamos con cada entidad: ).
 707  8B89
 708  8B89              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 709  8B89              ;
 710  8B89              ;	Se produce MOVIMIENTO.
 711  8B89
 712  8B89 21 17 8B     	ld hl,Ctrl_3
 713  8B8C CB D6        	set 2,(hl)
 714  8B8E CD BE 8B     	call Change
 715  8B91
 716  8B91 C5           15 push bc 												; Nº de entidades en curso.
 717  8B92
 718  8B92 CD 09 8D     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 719  8B95
 720  8B95              ; Existe "Entidad_guía" ???.
 721  8B95              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 722  8B95
 723  8B95              ;	ld a,(Ctrl_3)
 724  8B95              ;	bit 1,a
 725  8B95              ;	jr nz,22F
 726  8B95
 727  8B95              ; Almacén de "Movimientos_masticados" lleno ???
 728  8B95              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 729  8B95              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 730  8B95
 731  8B95              ;;	ld a,(Ctrl_3)
 732  8B95              ;;	bit 3,a
 733  8B95              ;;	jr nz,22F
 734  8B95
 735  8B95              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 736  8B95
 737  8B95              ;	ld hl,Ctrl_2
 738  8B95              ;	set 5,(hl)
 739  8B95              ;	ld hl,Ctrl_3
 740  8B95              ;	set 1,(hl)
 741  8B95
 742  8B95              ; Impacto ???
 743  8B95
 744  8B95              ;22 ld a,(Impacto)
 745  8B95              ;	and a
 746  8B95              ;	jr z,8F
 747  8B95
 748  8B95              ; Hay Impacto en esta entidad.
 749  8B95
 750  8B95              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 751  8B95              ;	dec (hl)
 752  8B95              ;	jp nz,17F
 753  8B95
 754  8B95              ;! Velocidad de la animación de la explosión.
 755  8B95
 756  8B95              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 757  8B95              ;														; _,(velocidad de la explosión).
 758  8B95              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 759  8B95
 760  8B95              ;	call Repone_datos_de_borrado
 761  8B95              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 762  8B95
 763  8B95              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 764  8B95
 765  8B95              ;	ld a,(Ctrl_2)
 766  8B95              ;	bit 1,a
 767  8B95              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 768  8B95
 769  8B95              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 770  8B95
 771  8B95              ;	ld a,(CTRL_DESPLZ)
 772  8B95              ;	and a
 773  8B95              ;	jr nz,18F
 774  8B95
 775  8B95              ;	ld hl,Indice_Explosion_2x2-2
 776  8B95              ;	ld (Puntero_DESPLZ_der),hl
 777  8B95              ;	jr 19F
 778  8B95
 779  8B95              ;18 ld hl,Indice_Explosion_2x3-2
 780  8B95              ;	ld (Puntero_DESPLZ_der),hl
 781  8B95
 782  8B95              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 783  8B95              ;	set 1,(hl)
 784  8B95              ;	jr 7F
 785  8B95
 786  8B95              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 787  8B95              ; _con las coordenadas de la entidad almacenada en DRAW.
 788  8B95
 789  8B95              ;8 ld a,(Ctrl_1)
 790  8B95              ;	bit 2,a
 791  8B95              ;	jr z,7F
 792  8B95
 793  8B95              ;	ld hl,(Coordenadas_disparo_certero)
 794  8B95              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 795  8B95              ;														; E contiene la coordenada_X del disparo.
 796  8B95              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 797  8B95              ;														; H FILA, (Coordenada_y de la entidad).
 798  8B95              ;	and a
 799  8B95              ;	sbc hl,de
 800  8B95
 801  8B95              ;	call Determina_resultado_comparativa
 802  8B95
 803  8B95              ;	ld a,b
 804  8B95              ;	and a
 805  8B95              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 806  8B95
 807  8B95              ; ----- ----- -----
 808  8B95
 809  8B95              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 810  8B95              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 811  8B95
 812  8B95              ;	ld hl,Ctrl_1
 813  8B95              ;	res 2,(hl)
 814  8B95
 815  8B95 CD BD 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 816  8B98
 817  8B98              ;	ld a,(Ctrl_0)
 818  8B98              ;	bit 4,a
 819  8B98              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 820  8B98
 821  8B98              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 822  8B98              ; [[[
 823  8B98              ;	call Detecta_disparo_entidad
 824  8B98              ; ]]]
 825  8B98
 826  8B98 CD 1F 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 827  8B9B
 828  8B9B              ;	ld hl,Ctrl_0
 829  8B9B              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 830  8B9B
 831  8B9B CD 0F 8E     17 call Store_Restore_cajas
 832  8B9E
 833  8B9E C1           	pop bc
 834  8B9F
 835  8B9F 10 F0        	djnz 15B
 836  8BA1
 837  8BA1 CD A0 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 838  8BA4
 839  8BA4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 840  8BA4              ; Hemos gestionado todas las unidades.
 841  8BA4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 842  8BA4
 843  8BA4              ;	ld hl,Ctrl_1
 844  8BA4              ;	res 2,(hl)
 845  8BA4
 846  8BA4              ;	call Borra_diferencia
 847  8BA4
 848  8BA4              16
 849  8BA4 2A 15 8B     	ld hl,(Scanlines_album_SP)
 850  8BA7 22 13 8B     	ld (Techo),hl
 851  8BAA
 852  8BAA 2A 11 8B     	ld hl,(Album_de_borrado)
 853  8BAD 22 15 8B     	ld (Scanlines_album_SP),hl
 854  8BB0
 855  8BB0 21 17 8B     	ld hl,Ctrl_3
 856  8BB3 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 857  8BB5
 858  8BB5 AF           	xor a
 859  8BB6 D3 FE        	out ($fe),a
 860  8BB8 76           	halt
 861  8BB9
 862  8BB9              ; ----------------------------------------
 863  8BB9
 864  8BB9              ;	ld a,(Ctrl_1) 										; Existe Loop?
 865  8BB9              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 866  8BB9 CA 59 8B     	jp z,Main
 867  8BBC
 868  8BBC              ; RECARGA DE NUEVA OLEADA.
 869  8BBC
 870  8BBC              ;	ld a,(Contador_de_frames)
 871  8BBC              ;	ld b,a
 872  8BBC              ;	ld a,(Activa_recarga_cajas)
 873  8BBC              ;	cp b
 874  8BBC              ;	jr z,20F
 875  8BBC
 876  8BBC              ;	ld hl,Ctrl_1
 877  8BBC              ;	set 4,(hl)
 878  8BBC              ;	jp Main
 879  8BBC
 880  8BBC              ;20 ld hl,Ctrl_1
 881  8BBC              ;	res 4,(hl)
 882  8BBC
 883  8BBC              ;	ld a,(Contador_de_frames)
 884  8BBC
 885  8BBC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 886  8BBC              ;! _ IMPREDECIBLE !!!!
 887  8BBC
 888  8BBC              ;	add 10
 889  8BBC              ;	ld (Clock_Entidades_en_curso),a
 890  8BBC
 891  8BBC              ;	jp 4B
 892  8BBC
 893  8BBC C9           	ret
 894  8BBD
 895  8BBD              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 896  8BBD              ;
 897  8BBD              ;	16/11/23
 898  8BBD
 899  8BBD              ;;Gestiona_Amadeus
 900  8BBD
 901  8BBD              ;! Activa/desactiva impacto con Amadeus.
 902  8BBD
 903  8BBD              ;	ld a,(Impacto)
 904  8BBD              ;	and a
 905  8BBD              ;	jr nz,2F
 906  8BBD
 907  8BBD              ;;	call Mov_Amadeus
 908  8BBD
 909  8BBD              ;;2 ld a,(Ctrl_0)
 910  8BBD              ;;	bit 4,a
 911  8BBD              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 912  8BBD
 913  8BBD              ;;	call Guarda_foto_entidad_a_pintar
 914  8BBD              ;;	call Guarda_datos_de_borrado_Amadeus
 915  8BBD
 916  8BBD              ;;1 ld hl,Ctrl_0
 917  8BBD              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 918  8BBD
 919  8BBD              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 920  8BBD
 921  8BBD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 922  8BBD
 923  8BBD              ;	call Calcula_numero_de_disparotes
 924  8BBD
 925  8BBD              ;;	ret
 926  8BBD
 927  8BBD              ; -----------------------------
 928  8BBD              ;
 929  8BBD              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 930  8BBD              ;
 931  8BBD              ;	INPUTS: B a de estar a "0".
 932  8BBD
 933  8BBD              ;Prepara_Borra_sprites
 934  8BBD
 935  8BBD              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 936  8BBD              ;	ld a,l
 937  8BBD              ;	ret z
 938  8BBD
 939  8BBD              ;	srl a
 940  8BBD
 941  8BBD              ;2 sub 16
 942  8BBD              ;	jr z,1F
 943  8BBD              ;	inc b
 944  8BBD              ;	jr 2B
 945  8BBD
 946  8BBD              ;1 inc b
 947  8BBD
 948  8BBD              ;	exx
 949  8BBD              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 950  8BBD              ;	exx
 951  8BBD
 952  8BBD              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 953  8BBD              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 954  8BBD
 955  8BBD              ;	ret
 956  8BBD
 957  8BBD              ; --------------------------------------------------------------------------------------------------------------
 958  8BBD              ;
 959  8BBD              ;	15/12/23
 960  8BBD
 961  8BBD              Mov_obj
 962  8BBD
 963  8BBD              ;	ld a,(Ctrl_2)
 964  8BBD              ;	bit 1,a
 965  8BBD              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 966  8BBD
 967  8BBD              ; Explosión:
 968  8BBD
 969  8BBD              ;	ld a,(Frames_explosion)
 970  8BBD              ;	and a
 971  8BBD              ;	jr nz,4F
 972  8BBD
 973  8BBD              ;!  Una alimaña menos!!!!!!!!!1
 974  8BBD
 975  8BBD              ; Se trataba de una Entidad_guía ???
 976  8BBD
 977  8BBD              ;	ld a,(Ctrl_2)
 978  8BBD              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 979  8BBD              ;	jr z,5F
 980  8BBD
 981  8BBD              ;	ld hl,Ctrl_3
 982  8BBD              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 983  8BBD
 984  8BBD              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 985  8BBD              ;!! _generado puede ser distinto, (aletoriedad).
 986  8BBD
 987  8BBD              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 988  8BBD              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 989  8BBD              ;	dec (hl)
 990  8BBD              ;	ld hl,Entidades_en_curso
 991  8BBD              ;	dec (hl)
 992  8BBD              ;	ld hl,Numero_de_entidades
 993  8BBD              ;	dec (hl)
 994  8BBD              ;	jr 3F
 995  8BBD
 996  8BBD              ; -----
 997  8BBD
 998  8BBD              ;	`Movemos´ la explosión.
 999  8BBD
1000  8BBD              ;4 ld hl,(Puntero_DESPLZ_der)
1001  8BBD              ;	inc hl
1002  8BBD              ;	inc hl
1003  8BBD              ;	call Extrae_address
1004  8BBD              ;;	ld (Puntero_objeto),hl
1005  8BBD
1006  8BBD              ;;	ld hl,Frames_explosion
1007  8BBD              ;;	dec (hl)
1008  8BBD
1009  8BBD              ;;	ld hl,Ctrl_0
1010  8BBD              ;;	set 4,(hl);;
1011  8BBD
1012  8BBD              ;;	jr 3F
1013  8BBD
1014  8BBD              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1015  8BBD
1016  8BBD              ;2 xor a
1017  8BBD              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1018  8BBD
1019  8BBD              ; Movemos Entidades malignas.
1020  8BBD              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1021  8BBD
1022  8BBD              ;	ld a,(Ctrl_2)
1023  8BBD              ;	bit 5,a
1024  8BBD              ;	jr nz,8F
1025  8BBD
1026  8BBD              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1027  8BBD              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1028  8BBD              ;	jr 7F
1029  8BBD
1030  8BBD              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1031  8BBD
1032  8BBD              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1033  8BBD              ;	bit 4,a
1034  8BBD              ;	ret z
1035  8BBD
1036  8BBD              ; Ha habido desplazamiento de la entidad maligna.
1037  8BBD              ; Ha llegado a zona de AMADEUS ???
1038  8BBD
1039  8BBD              ;7 ld a,(Coordenada_y)
1040  8BBD              ;	cp $14
1041  8BBD              ;	jr c,1F
1042  8BBD
1043  8BBD              ; ---------
1044  8BBD
1045  8BBD              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1046  8BBD              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1047  8BBD
1048  8BBD              ;	di
1049  8BBD              ;	call Genera_coordenadas_X
1050  8BBD              ;	call Compara_coordenadas_X
1051  8BBD              ;	ei
1052  8BBD
1053  8BBD              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1054  8BBD
1055  8BBD              ; ---------
1056  8BBD
1057  8BBD              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1058  8BBD              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1059  8BBD              ;	call Limpia_Variables_de_borrado
1060  8BBD
1061  8BBD C9           3 ret
1062  8BBE
1063  8BBE              ; --------------------------------------------------------------------------------------------------------------
1064  8BBE              ;
1065  8BBE              ;	29/1/23
1066  8BBE
1067  8BBE              ;Mov_Amadeus
1068  8BBE
1069  8BBE              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1070  8BBE
1071  8BBE              ;	call Mov_right
1072  8BBE
1073  8BBE              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1074  8BBE              ;	bit 4,a
1075  8BBE              ;	ret z
1076  8BBE
1077  8BBE              ; ---------
1078  8BBE
1079  8BBE              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1080  8BBE              ;	call Repone_datos_de_borrado_Amadeus
1081  8BBE              ;	call Limpia_Variables_de_borrado
1082  8BBE
1083  8BBE              ;	ret
1084  8BBE
1085  8BBE              ; --------------------------------------------------------------------------------------------------------------
1086  8BBE              ;
1087  8BBE              ;	17/3/24
1088  8BBE
1089  8BBE              Change
1090  8BBE
1091  8BBE 2A 0F 8B     	ld hl,(Album_de_pintado)
1092  8BC1 ED 5B 11 8B  	ld de,(Album_de_borrado)
1093  8BC5 EB           	ex de,hl
1094  8BC6 22 0F 8B     	ld (Album_de_pintado),hl
1095  8BC9 22 15 8B     	ld (Scanlines_album_SP),hl
1096  8BCC
1097  8BCC              ;	push hl
1098  8BCC
1099  8BCC ED 53 11 8B  	ld (Album_de_borrado),de
1100  8BD0
1101  8BD0 C9           	ret
1102  8BD1
1103  8BD1              ; ------------------------------------
1104  8BD1              ;
1105  8BD1              ; 18/03/24
1106  8BD1
1107  8BD1              Borra_diferencia
1108  8BD1
1109  8BD1 2A 15 8B     	ld hl,(Scanlines_album_SP)
1110  8BD4 ED 5B 13 8B  	ld de,(Techo)
1111  8BD8 7B           	ld a,e
1112  8BD9 95           	sub l
1113  8BDA C8           	ret z
1114  8BDB D8           	ret c
1115  8BDC
1116  8BDC              ; Nuevo techo, (más bajo que el anterior).
1117  8BDC
1118  8BDC 22 13 8B     	ld (Techo),hl
1119  8BDF
1120  8BDF              ; Borramos_diferencia.
1121  8BDF
1122  8BDF 47           	ld b,a
1123  8BE0 AF           	xor a
1124  8BE1
1125  8BE1 77           1 ld (hl),a
1126  8BE2 2C           	inc l
1127  8BE3 10 FC        	djnz 1B
1128  8BE5
1129  8BE5 F3           	di
1130  8BE6 18 FE        	jr $
1131  8BE8 FB           	ei
1132  8BE9
1133  8BE9 C9           	ret
1134  8BEA
1135  8BEA              ; -----------------------------------------------------------------------------------
1136  8BEA              ;
1137  8BEA              ;	20/01/24
1138  8BEA              ;
1139  8BEA              ;
1140  8BEA
1141  8BEA              Construye_movimientos_masticados_entidad
1142  8BEA
1143  8BEA 2A D5 8A     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1144  8BED E5           	push hl
1145  8BEE CD 31 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1146  8BF1              ;															; _ el (Contador_de_mov_masticados).
1147  8BF1 CD D4 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1148  8BF4              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1149  8BF4 CD D2 95     	call Recompone_posicion_inicio
1150  8BF7
1151  8BF7 CD 66 8F     1 call Draw
1152  8BFA CD 16 8C     	call Guarda_movimiento_masticado
1153  8BFD
1154  8BFD CD 4C 99     	call Movimiento
1155  8C00
1156  8C00 3A 17 8B     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1157  8C03 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1158  8C05 28 F0        	jr z,1B
1159  8C07
1160  8C07              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1161  8C07              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1162  8C07
1163  8C07 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1164  8C08 22 D5 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
1165  8C0B
1166  8C0B              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1167  8C0B
1168  8C0B CD B0 9A     	call Situa_en_contador_general_de_mov_masticados
1169  8C0E
1170  8C0E              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1171  8C0E              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1172  8C0E
1173  8C0E ED 4B D7 8A  	ld bc,(Contador_de_mov_masticados)
1174  8C12 71           	ld (hl),c
1175  8C13 23           	inc hl
1176  8C14 70           	ld (hl),b
1177  8C15
1178  8C15 C9           	ret
1179  8C16
1180  8C16              ; -----------------------------------------------------------------------------------
1181  8C16              ;
1182  8C16              ;	28/12/23
1183  8C16              ;
1184  8C16              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1185  8C16              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1186  8C16
1187  8C16              Guarda_movimiento_masticado
1188  8C16
1189  8C16 ED 73 09 8B  	ld (Stack),sp
1190  8C1A ED 7B D5 8A  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1191  8C1E
1192  8C1E              ;	push hl
1193  8C1E DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1194  8C20 FD E5            push iy 												; Pushea Puntero_objeto.
1195  8C22
1196  8C22 ED 7B 09 8B      ld sp,(Stack)
1197  8C26
1198  8C26 2A D7 8A        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1199  8C29 23           	inc hl
1200  8C2A 22 D7 8A     	ld (Contador_de_mov_masticados),hl
1201  8C2D
1202  8C2D CD 31 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1203  8C30              ;															; _ el (Contador_de_mov_masticados).
1204  8C30 C9               ret
1205  8C31
1206  8C31              ; --------------------------------------------------------------------------------------------------------------
1207  8C31              ;
1208  8C31              ;	12/1/24
1209  8C31              ;
1210  8C31              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1211  8C31
1212  8C31              Actualiza_Puntero_de_almacen_de_mov_masticados
1213  8C31
1214  8C31 2A D5 8A     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1215  8C34 01 04 00     	ld bc,4
1216  8C37 A7           	and a
1217  8C38 ED 4A        	adc hl,bc
1218  8C3A 22 D5 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
1219  8C3D C9           	ret
1220  8C3E
1221  8C3E              ; --------------------------------------------------------------------------------------------------------------
1222  8C3E              ;
1223  8C3E              ;	09/03/24
1224  8C3E              ;
1225  8C3E              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1226  8C3E              ;
1227  8C3E              ;	IX contiene el puntero de impresión.
1228  8C3E              ;	DE contiene (Puntero_objeto).
1229  8C3E
1230  8C3E
1231  8C3E ED 73 09 8B  Cargamos_registros_con_mov_masticado ld (Stack),sp
1232  8C42 ED 7B D5 8A  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1233  8C46
1234  8C46 D1           	pop de 															; DE contiene Puntero_objeto
1235  8C47 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1236  8C49
1237  8C49 ED 73 D5 8A  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1238  8C4D
1239  8C4D ED 7B 09 8B  	ld sp,(Stack)
1240  8C51
1241  8C51 C9           	ret
1242  8C52
1243  8C52              ; --------------------------------------------------------------------------------------------------------------
1244  8C52              ;
1245  8C52              ;	28/12/23
1246  8C52              ;
1247  8C52              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1248  8C52              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1249  8C52
1250  8C52              Guarda_foto_entidad_a_pintar
1251  8C52
1252  8C52 3A D9 8A     	ld a,(Ctrl_0)
1253  8C55 CB 77        	bit 6,a
1254  8C57 28 04        	jr z,5F
1255  8C59
1256  8C59              ;	Guarda la foto de Amadeus.
1257  8C59
1258  8C59              ;	call Draw
1259  8C59              ;	call Guarda_movimiento_masticado	;! Provisional
1260  8C59 CD 37 9B     	call Genera_datos_de_impresion
1261  8C5C C9           	ret
1262  8C5D
1263  8C5D              ; ENTIDADES!
1264  8C5D              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1265  8C5D
1266  8C5D 3A 17 8B     5 ld a,(Ctrl_3)
1267  8C60 CB 5F        	bit 3,a
1268  8C62 28 01        	jr z,1F
1269  8C64
1270  8C64              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1271  8C64
1272  8C64              4
1273  8C64              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1274  8C64 C9           	ret
1275  8C65
1276  8C65              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1277  8C65
1278  8C65 3A 17 8B     1 ld a,(Ctrl_3)
1279  8C68 CB 57        	bit 2,a
1280  8C6A 20 10        	jr nz,6F
1281  8C6C
1282  8C6C              ; Entidad guía o fantasma ???
1283  8C6C
1284  8C6C 3A DE 8A     	ld a,(Ctrl_2)
1285  8C6F CB 6F        	bit 5,a
1286  8C71 20 10        	jr nz,3F
1287  8C73
1288  8C73              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1289  8C73
1290  8C73 18 EF        	jr 4B
1291  8C75
1292  8C75              ; ENTIDAD_GUÍA:
1293  8C75              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1294  8C75              ; _guardando "movimientos_masticados".
1295  8C75
1296  8C75 3A 17 8B     2 ld a,(Ctrl_3)
1297  8C78 CB 57        	bit 2,a
1298  8C7A 28 07        	jr z,3F
1299  8C7C
1300  8C7C              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1301  8C7C              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1302  8C7C
1303  8C7C CB 97        6 res 2,a
1304  8C7E CB DF        	set 3,a
1305  8C80 32 17 8B     	ld (Ctrl_3),a
1306  8C83
1307  8C83
1308  8C83              ;	Esto sólo lo ejecuta una entidad guía.
1309  8C83
1310  8C83 CD 66 8F     3 	call Draw
1311  8C86 CD 16 8C     	call Guarda_movimiento_masticado
1312  8C89 CD 37 9B     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1313  8C8C
1314  8C8C              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1315  8C8C              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1316  8C8C
1317  8C8C              ;	call Convierte_guia_en_fantasma
1318  8C8C C9           	ret
1319  8C8D
1320  8C8D              ; ---------------------------------------------------------------------------------------------------------------------
1321  8C8D              ;
1322  8C8D              ;	13/03/24
1323  8C8D              ;
1324  8C8D
1325  8C8D              Inicia_albumes_de_lineas
1326  8C8D
1327  8C8D 21 00 80     	ld hl,Scanlines_album
1328  8C90 22 0F 8B     	ld (Album_de_pintado),hl
1329  8C93 22 15 8B     	ld (Scanlines_album_SP),hl
1330  8C96              ;	ld (Techo_Scanlines_album),hl
1331  8C96 22 13 8B     	ld (Techo),hl
1332  8C99
1333  8C99 21 00 82     	ld hl,Scanlines_album_2
1334  8C9C 22 11 8B     	ld (Album_de_borrado),hl
1335  8C9F              ;	ld (Techo_Scanlines_album_2),hl
1336  8C9F
1337  8C9F C9           	ret
1338  8CA0
1339  8CA0
1340  8CA0
1341  8CA0              ; ---------------------------------------------------------------------------------------------------------------------
1342  8CA0              ;
1343  8CA0              ; 8/1/23
1344  8CA0              ;
1345  8CA0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1346  8CA0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1347  8CA0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1348  8CA0
1349  8CA0              ; Destruye HL y DE !!!!!
1350  8CA0
1351  8CA0              Inicia_punteros_de_cajas
1352  8CA0
1353  8CA0 21 10 88     	ld hl,Indice_de_cajas_de_entidades
1354  8CA3 CD CE 8C         call Extrae_address
1355  8CA6 22 FB 8A         ld (Puntero_store_caja),hl
1356  8CA9 21 12 88     	ld hl,Indice_de_cajas_de_entidades+2
1357  8CAC 22 FF 8A     	ld (Indice_restore_caja),hl
1358  8CAF CD CE 8C     	call Extrae_address
1359  8CB2 22 FD 8A     	ld (Puntero_restore_caja),hl
1360  8CB5 C9               ret
1361  8CB6
1362  8CB6              ; *************************************************************************************************************************************************************
1363  8CB6              ;
1364  8CB6              ; 8/1/23
1365  8CB6              ;
1366  8CB6              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1367  8CB6
1368  8CB6              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1369  8CB6              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1370  8CB6              ;	ret
1371  8CB6              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1372  8CB6              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1373  8CB6              ;	ret
1374  8CB6
1375  8CB6              ; -------------------------------------------------------------------------------------------------------------
1376  8CB6              ;
1377  8CB6              ; 21/9/23
1378  8CB6              ;
1379  8CB6
1380  8CB6              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1381  8CB6
1382  8CB6              ;;Limpia_album_Amadeus
1383  8CB6              ;
1384  8CB6              ;;	ld hl,Scanlines_album_Amadeus
1385  8CB6              ;;	ld a,(hl)
1386  8CB6              ;;	and a
1387  8CB6              ;;	ret z
1388  8CB6
1389  8CB6              ;;	ld hl,Scanlines_album_Amadeus;
1390  8CB6              ;;	ld de,Scanlines_album_Amadeus+1
1391  8CB6              ;;	ld bc,11
1392  8CB6              ;;	xor a
1393  8CB6              ;;	ld (hl),a
1394  8CB6              ;;	ldir
1395  8CB6
1396  8CB6              ;;	ld hl,Scanlines_album_Amadeus
1397  8CB6              ;;	ld (End_Snapshot_Amadeus),hl
1398  8CB6
1399  8CB6              ;;	ret
1400  8CB6
1401  8CB6              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1402  8CB6              ;	ld de,Variables_de_borrado+1
1403  8CB6              ;	ld bc,5
1404  8CB6              ;	xor a
1405  8CB6              ;	ld (hl),a
1406  8CB6              ;	ldir
1407  8CB6              ;	ret
1408  8CB6
1409  8CB6              ; -------------------------------------------------------------------------------------------------------------
1410  8CB6              ;
1411  8CB6              ; 	21/02/24
1412  8CB6              ;
1413  8CB6              ;	MODIFICA: AF,HL,BC,DE
1414  8CB6              ;
1415  8CB6              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1416  8CB6              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1417  8CB6
1418  8CB6              Calcula_numero_de_malotes
1419  8CB6
1420  8CB6 21 00 80     	ld hl,Scanlines_album
1421  8CB9 EB           	ex de,hl
1422  8CBA 2A 15 8B     	ld hl,(Scanlines_album_SP)
1423  8CBD
1424  8CBD 06 00        	ld b,0
1425  8CBF 7D           	ld a,l
1426  8CC0 93           	sub e
1427  8CC1 28 07        	jr z,1F
1428  8CC3
1429  8CC3              ; Nº de malotes no es "0".
1430  8CC3
1431  8CC3 D6 06        2 sub 6
1432  8CC5 04           	inc b
1433  8CC6 A7           	and a
1434  8CC7 20 FA        	jr nz,2B
1435  8CC9 78           	ld a,b
1436  8CCA
1437  8CCA 32 04 8B     1 ld (Numero_de_malotes),a
1438  8CCD C9           	ret
1439  8CCE
1440  8CCE              ; *************************************************************************************************************************************************************
1441  8CCE              ;
1442  8CCE              ; 20/10/22
1443  8CCE              ;
1444  8CCE              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1445  8CCE              ;
1446  8CCE              ; Destruye el puntero y DE !!!!!
1447  8CCE
1448  8CCE 5E           Extrae_address ld e,(hl)
1449  8CCF 23           	inc hl
1450  8CD0 56           	ld d,(hl)
1451  8CD1 2B           	dec hl
1452  8CD2 EB           	ex de,hl
1453  8CD3 C9           	ret
1454  8CD4
1455  8CD4              ; *************************************************************************************************************************************************************
1456  8CD4              ;
1457  8CD4              ;	20/1/24
1458  8CD4              ;
1459  8CD4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1460  8CD4              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1461  8CD4              ;
1462  8CD4              ;   Destruye HL y BC !!!!!,
1463  8CD4              ;
1464  8CD4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1465  8CD4              ;					"0" ..... Izquierda.
1466  8CD4
1467  8CD4              Inicia_Puntero_objeto
1468  8CD4
1469  8CD4 3A CB 8A     	ld a,(Cuad_objeto)
1470  8CD7 E6 01        	and 1
1471  8CD9 F5           	push af
1472  8CDA CC F6 8C     	call z,Inicia_puntero_objeto_izq
1473  8CDD F1           	pop af
1474  8CDE C8           	ret z
1475  8CDF CD E3 8C     	call Inicia_puntero_objeto_der
1476  8CE2 C9           	ret
1477  8CE3
1478  8CE3              ; Arrancamos desde la parte izquierda de la pantalla.
1479  8CE3              ; Iniciamos (Indice_Sprite_der).
1480  8CE3
1481  8CE3 2A C1 8A     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1482  8CE6 22 C5 8A     	ld (Puntero_DESPLZ_der),hl
1483  8CE9 CD CE 8C     	call Extrae_address
1484  8CEC 22 BB 8A     	ld (Puntero_objeto),hl
1485  8CEF
1486  8CEF 2A C3 8A     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1487  8CF2 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
1488  8CF5 C9           	ret
1489  8CF6
1490  8CF6              ; Arrancamos desde la parte derecha de la pantalla.
1491  8CF6              ; Iniciamos (Indice_Sprite_izq).
1492  8CF6
1493  8CF6 2A C3 8A     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1494  8CF9 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
1495  8CFC CD CE 8C     	call Extrae_address
1496  8CFF 22 BB 8A     	ld (Puntero_objeto),hl
1497  8D02
1498  8D02 2A C1 8A     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1499  8D05 22 C5 8A     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1500  8D08 C9           	ret
1501  8D09
1502  8D09              ; **************************************************************************************************
1503  8D09              ;
1504  8D09              ;	31/01/24
1505  8D09              ;
1506  8D09              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1507  8D09
1508  8D09              Restore_entidad
1509  8D09
1510  8D09 2A FB 8A     	ld hl,(Puntero_store_caja)
1511  8D0C 11 B6 8A     	ld de,Bandeja_DRAW
1512  8D0F 7E           	ld a,(hl)
1513  8D10 12           	ld (de),a
1514  8D11 23           	inc hl 											; (Tipo).
1515  8D12
1516  8D12 11 BD 8A     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1517  8D15 01 02 00     	ld bc,2
1518  8D18 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1519  8D1A
1520  8D1A 13           	inc de
1521  8D1B 7E           	ld a,(hl)
1522  8D1C 12           	ld (de),a 										; Transferimos (Attr).
1523  8D1D 23           	inc hl
1524  8D1E
1525  8D1E 11 CC 8A     	ld de,Impacto
1526  8D21
1527  8D21 7E           	ld a,(hl)
1528  8D22 12           	ld (de),a 										; Transferimos (Impacto).
1529  8D23 23           	inc hl
1530  8D24
1531  8D24 13           	inc de
1532  8D25
1533  8D25 01 06 00     	ld bc,6
1534  8D28 ED B0        	ldir
1535  8D2A
1536  8D2A 01 07 00     	ld bc,7
1537  8D2D ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1538  8D2F              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1539  8D2F 11 DE 8A     	ld de,Ctrl_2
1540  8D32
1541  8D32 7E           	ld a,(hl)
1542  8D33 12           	ld (de),a 										; Transferimos (Ctrl_2).
1543  8D34
1544  8D34 C9           	ret
1545  8D35
1546  8D35              ; **************************************************************************************************
1547  8D35              ;
1548  8D35              ;	08/05/23
1549  8D35              ;
1550  8D35              ;	Incrementamos los dos punteros de entidades. (+1).
1551  8D35
1552  8D35              Incrementa_punteros_de_cajas
1553  8D35
1554  8D35 2A FD 8A     	ld hl,(Puntero_restore_caja)
1555  8D38 22 FB 8A     	ld (Puntero_store_caja),hl
1556  8D3B 2A FF 8A     	ld hl,(Indice_restore_caja)
1557  8D3E 23           	inc hl
1558  8D3F 23           	inc hl
1559  8D40 22 FF 8A     	ld (Indice_restore_caja),hl
1560  8D43 CD CE 8C         call Extrae_address
1561  8D46 22 FD 8A         ld (Puntero_restore_caja),hl
1562  8D49 C9               ret
1563  8D4A
1564  8D4A              ; **************************************************************************************************
1565  8D4A              ;
1566  8D4A              ;	21/12/23
1567  8D4A              ;
1568  8D4A              ;	Restore_Amadeus
1569  8D4A              ;
1570  8D4A              ;	Cargamos en DRAW los parámetros de Amadeus.
1571  8D4A              ;
1572  8D4A
1573  8D4A              ;Restore_Amadeus	push hl
1574  8D4A              ;	push de
1575  8D4A              ; 	push bc
1576  8D4A              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1577  8D4A              ;	ld de,Bandeja_DRAW
1578  8D4A              ;	ld bc,42
1579  8D4A              ;	ldir
1580  8D4A              ;	pop bc
1581  8D4A              ;	pop de
1582  8D4A              ;	pop hl
1583  8D4A              ;	ret
1584  8D4A
1585  8D4A              ; *************************************************************************************************************************************************************
1586  8D4A              ;
1587  8D4A              ;	21/12/23
1588  8D4A              ;
1589  8D4A              ;	Store_Amadeus
1590  8D4A              ;
1591  8D4A              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1592  8D4A              ;
1593  8D4A              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1594  8D4A              ;
1595  8D4A              ;	DESTRUYE: HL y BC y DE.
1596  8D4A
1597  8D4A              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1598  8D4A              ;	ld bc,42
1599  8D4A              ;	ldir
1600  8D4A              ;	ret
1601  8D4A
1602  8D4A              ; -----------------------------------------------------------
1603  8D4A              ;
1604  8D4A              ;	21/12/23
1605  8D4A              ;
1606  8D4A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1607  8D4A              ;
1608  8D4A              ;	Destruye: HL,BC,DE,A
1609  8D4A
1610  8D4A              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1611  8D4A              ;	ld bc,41
1612  8D4A              ;	xor a
1613  8D4A              ;	ld (hl),a;
1614  8D4A              ;	ld de,Bandeja_DRAW+1
1615  8D4A              ;	ldir
1616  8D4A              ;	ret
1617  8D4A
1618  8D4A              ; -----------------------------------------------------------
1619  8D4A
1620  8D4A              ; Teclado.
1621  8D4A
1622  8D4A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1623  8D4C DB FE        	in a,($fe)
1624  8D4E E6 01        	and $01
1625  8D50 28 02        	jr z,1f
1626  8D52 18 F6        	jr Pulsa_ENTER
1627  8D54 C9           1 ret
1628  8D55
1629  8D55              ; **************************************************************************************************
1630  8D55              ;
1631  8D55              ; Temporización.
1632  8D55
1633  8D55              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1634  8D55              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1635  8D55              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1636  8D55              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1637  8D55
1638  8D55              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1639  8D55              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1640  8D55              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1641  8D55
1642  8D55              ; A partir de $4f61 no hace falta DELAY.
1643  8D55
1644  8D55              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1645  8D55
1646  8D55 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1647  8D58 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1648  8D59 78           	LD A,B
1649  8D5A A7           	AND A
1650  8D5B 20 FB        	JR NZ,wait
1651  8D5D C9           	RET
1652  8D5E
1653  8D5E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1654  8D5E              ;
1655  8D5E              ;	5/3/23
1656  8D5E              ;
1657  8D5E              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1658  8D5E
1659  8D5E              ;Movimiento_Amadeus
1660  8D5E
1661  8D5E              ; Disparo.
1662  8D5E
1663  8D5E              ;	ld a,(Disparo_Amadeus)
1664  8D5E              ;	and a
1665  8D5E              ;	jr nz,1F
1666  8D5E              ;	jr 2F
1667  8D5E
1668  8D5E              ;1 ld a,$f7													; "5" para disparar.
1669  8D5E              ;	in a,($fe)
1670  8D5E              ;	and $10
1671  8D5E
1672  8D5E              ;	push af
1673  8D5E              ;	call z,Genera_disparo
1674  8D5E              ;	pop af
1675  8D5E              ;	jr nz,2F
1676  8D5E
1677  8D5E              ;	ld a,(Disparo_Amadeus)
1678  8D5E              ;	xor 1
1679  8D5E              ;	ld (Disparo_Amadeus),a
1680  8D5E              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1681  8D5E              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1682  8D5E              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1683  8D5E              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1684  8D5E
1685  8D5E              ;	ld a,$f7
1686  8D5E              ;	in a,($fe)
1687  8D5E              ;	and $01
1688  8D5E              ;	ret z
1689  8D5E
1690  8D5E              ;	ld a,$f7
1691  8D5E              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1692  8D5E              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1693  8D5E              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1694  8D5E              ;	ret
1695  8D5E
1696  8D5E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1697  8D5E              ;
1698  8D5E              ;	Rutina provisional para que los malotes cagen balas.
1699  8D5E
1700  8D5E              ;Detecta_disparo_entidad
1701  8D5E
1702  8D5E              ;	ld a,(Disparo_entidad)
1703  8D5E              ;	and a
1704  8D5E              ;	ret z
1705  8D5E
1706  8D5E              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1707  8D5E
1708  8D5E              ;	ld a,$7f				; Detecta SPACE.
1709  8D5E              ;	in a,($fe)
1710  8D5E              ;	and 1
1711  8D5E              ;	ret nz
1712  8D5E
1713  8D5E              ;	call Genera_disparo
1714  8D5E              ;	ret
1715  8D5E
1716  8D5E              ; ----------------------------------------------------------------------
1717  8D5E              ;
1718  8D5E              ;	8/9/23
1719  8D5E
1720  8D5E              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1721  8D5E              ; 	dec hl
1722  8D5E              ;	ld a,(hl)
1723  8D5E              ;	and a
1724  8D5E              ;	ret z										; Salimos si es álbum está vacío.
1725  8D5E
1726  8D5E              ;	ld de,Variables_de_borrado+5
1727  8D5E              ;	ld bc,6
1728  8D5E              ;	lddr
1729  8D5E              ;	ret
1730  8D5E
1731  8D5E              ; ----------------------------------------------------------------------
1732  8D5E              ;
1733  8D5E              ;	9/9/23
1734  8D5E
1735  8D5E              ;Repone_datos_de_borrado_Amadeus
1736  8D5E
1737  8D5E              ;	ld hl,Variables_de_borrado
1738  8D5E              ;	ld de,Scanlines_album_Amadeus
1739  8D5E              ;	ld bc,6
1740  8D5E              ;	ldir
1741  8D5E
1742  8D5E              ;	ex de,hl
1743  8D5E              ;	ld (End_Snapshot_Amadeus),hl
1744  8D5E
1745  8D5E              ;	ret
1746  8D5E
1747  8D5E              ; ----------------------------------------------------------------------
1748  8D5E              ;
1749  8D5E              ;	27/10/23
1750  8D5E              ;
1751  8D5E
1752  8D5E              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1753  8D5E              ;	_ Scanlines_album correspondiente.
1754  8D5E
1755  8D5E              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1756  8D5E              ;	_ durante el proceso de escritura.
1757  8D5E
1758  8D5E              ;Repone_datos_de_borrado
1759  8D5E
1760  8D5E              ;	ld de,(Scanlines_album_SP)
1761  8D5E              ;	ld hl,Variables_de_borrado
1762  8D5E              ;	ld bc,6
1763  8D5E              ;	ldir
1764  8D5E
1765  8D5E              ;	ex de,hl
1766  8D5E              ;	ld (Scanlines_album_SP),hl
1767  8D5E
1768  8D5E              ;	ret
1769  8D5E
1770  8D5E              ; --------------------------------------------------------------------------------------
1771  8D5E
1772  8D5E              ;Pinta_Amadeus
1773  8D5E
1774  8D5E              ;   	call Calcula_malotes_Amadeus
1775  8D5E              ;	call Extrae_foto_Amadeus
1776  8D5E              ;	call Limpia_album_Amadeus
1777  8D5E
1778  8D5E              ;	ret
1779  8D5E
1780  8D5E              ; -----------------------------------------------------------------------------------
1781  8D5E              ;
1782  8D5E              ;	10/12/23
1783  8D5E              ;
1784  8D5E              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1785  8D5E
1786  8D5E              Actualiza_relojes
1787  8D5E
1788  8D5E 3A 17 8B     	ld a,(Ctrl_3)
1789  8D61 CB 47        	bit 0,a
1790  8D63 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1791  8D64
1792  8D64 21 1C 8B     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1793  8D67 34           	inc (hl)
1794  8D68
1795  8D68 34           	inc (hl)
1796  8D69 35           	dec (hl)
1797  8D6A C0           	ret nz
1798  8D6B
1799  8D6B 21 1D 8B     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1800  8D6E 34           	inc (hl)
1801  8D6F C9           	ret
1802  8D70
1803  8D70              ; ---------------------------------------------------------------
1804  8D70
1805  8D70              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8D70              ;---------------------------------------------------------------------------------------------------------------
   2+ 8D70              ;
   3+ 8D70              ;   8/3/24
   4+ 8D70              ;
   5+ 8D70              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8D70              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8D70              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8D70              ;	_ de la 1ª entidad del Nivel.
   9+ 8D70              ;
  10+ 8D70              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8D70
  12+ 8D70              ;	MODIFICA: HL,DE y A.
  13+ 8D70              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8D70
  15+ 8D70              Inicializa_Nivel
  16+ 8D70
  17+ 8D70 2A 21 8B     	ld hl,(Puntero_indice_NIVELES)
  18+ 8D73 CD CE 8C     	call Extrae_address
  19+ 8D76 7E           	ld a,(hl)
  20+ 8D77 32 01 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8D7A 23           	inc hl
  22+ 8D7B CD 88 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8D7E 22 23 8B     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D81 CD 91 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8D84
  26+ 8D84 CD A2 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8D87 C9           	ret
  28+ 8D88
  29+ 8D88              ; ----------------------
  30+ 8D88
  31+ 8D88 11 E0 8A     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8D8B 01 04 00     	ld bc,4
  33+ 8D8E ED B0        	ldir
  34+ 8D90 C9           	ret
  35+ 8D91
  36+ 8D91 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8D92 CD E2 8E         call Calcula_salto_en_BC
  38+ 8D95 21 8C 87         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8D98 A7               and a
  40+ 8D99 ED 4A            adc hl,bc
  41+ 8D9B CD CE 8C         call Extrae_address
  42+ 8D9E 22 EC 8A         ld (Puntero_indice_mov),hl
  43+ 8DA1 C9               ret
  44+ 8DA2
  45+ 8DA2 3A B6 8A     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8DA5 CD E2 8E     	call Calcula_salto_en_BC
  47+ 8DA8 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8DAB A7               and a
  49+ 8DAC ED 4A            adc hl,bc
  50+ 8DAE CD CE 8C         call Extrae_address
  51+ 8DB1 22 D5 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8DB4 C9           	ret
  53+ 8DB5
  54+ 8DB5              ;---------------------------------------------------------------------------------------------------------------
  55+ 8DB5              ;
  56+ 8DB5              ;   5/1/24
  57+ 8DB5              ;
  58+ 8DB5              ;	Destruye A,BC,HL,DE
  59+ 8DB5
  60+ 8DB5              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8DB5              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8DB5
  63+ 8DB5              Inicia_Entidades
  64+ 8DB5
  65+ 8DB5              ; Preparamos los punteros de las cajas de entidades:
  66+ 8DB5
  67+ 8DB5 CD A0 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8DB8              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8DB8 CD 49 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8DBB
  71+ 8DBB 2A 23 8B     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8DBE
  73+ 8DBE 22 23 8B     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8DC1
  75+ 8DC1 CD 90 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8DC4
  77+ 8DC4 2A 23 8B     	ld hl,(Datos_de_nivel)
  78+ 8DC7
  79+ 8DC7              ; En este punto:
  80+ 8DC7              ;
  81+ 8DC7              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8DC7              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8DC7
  84+ 8DC7 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8DC8
  86+ 8DC8 7E           	ld a,(hl)
  87+ 8DC9 CD 05 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8DCC
  89+ 8DCC CD F4 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8DCF
  91+ 8DCF              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8DCF
  93+ 8DCF CD B2 8E     	call Busca_mov_masticados_segun_tipo
  94+ 8DD2
  95+ 8DD2 A7           	and a
  96+ 8DD3 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8DD5
  98+ 8DD5              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8DD5
 100+ 8DD5              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8DD5              ;	_ de este tipo de entidad.
 102+ 8DD5
 103+ 8DD5 CD B0 9A     	call Situa_en_contador_general_de_mov_masticados
 104+ 8DD8 CD BD 9A     	call Transfiere_datos_de_contadores
 105+ 8DDB
 106+ 8DDB 18 06        	jr 4F
 107+ 8DDD
 108+ 8DDD CD EA 8B     3 call Construye_movimientos_masticados_entidad
 109+ 8DE0
 110+ 8DE0              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8DE0              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8DE0              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8DE0              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8DE0              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8DE0
 116+ 8DE0 CD 70 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8DE3              ;																; _ Mov_masticados ya generados.
 118+ 8DE3 CD 1F 8E     4 call Guarda_foto_de_mov_masticado
 119+ 8DE6
 120+ 8DE6              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8DE6
 122+ 8DE6 2A D3 8A     	ld hl,(Puntero_de_impresion)
 123+ 8DE9 CD F3 9A     	call Genera_coordenadas
 124+ 8DEC CD 1B 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8DEF CD 29 8E     	call Limpiamos_bandeja_DRAW
 126+ 8DF2 CD 35 8D     	call Incrementa_punteros_de_cajas
 127+ 8DF5
 128+ 8DF5              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8DF5              ; _ entidad del Nivel.
 130+ 8DF5
 131+ 8DF5 3A 18 8B     	ld a,(Ctrl_4)
 132+ 8DF8 E6 F0        	and $f0
 133+ 8DFA 32 18 8B     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8DFD
 135+ 8DFD              ; Siguiente entidad del Nivel.
 136+ 8DFD
 137+ 8DFD 2A 23 8B     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8E00 23           	inc hl 														; _ entidad del Nivel.
 139+ 8E01
 140+ 8E01 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8E02
 142+ 8E02 10 BA        	djnz 2B
 143+ 8E04
 144+ 8E04 C9           	ret
 145+ 8E05
 146+ 8E05              ; ---------------------------------------------------------------------
 147+ 8E05              ;
 148+ 8E05              ;	10/02/24
 149+ 8E05              ;
 150+ 8E05              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8E05              ;
 152+ 8E05              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8E05
 154+ 8E05              Definicion_segun_tipo
 155+ 8E05
 156+ 8E05 CD E2 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8E08 21 DD 88     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8E0B CD EA 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8E0E C9           	ret
 160+ 8E0F
 161+ 8E0F              ; ---------------------------------------------------------------------
 162+ 8E0F              ;
 163+ 8E0F              ;	30/01/24
 164+ 8E0F
 165+ 8E0F
 166+ 8E0F              Store_Restore_cajas
 167+ 8E0F
 168+ 8E0F              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8E0F
 170+ 8E0F 2A D3 8A     	ld hl,(Puntero_de_impresion)
 171+ 8E12 CD F3 9A     	call Genera_coordenadas
 172+ 8E15
 173+ 8E15 CD 1B 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8E18 CD 29 8E     	call Limpiamos_bandeja_DRAW
 175+ 8E1B
 176+ 8E1B              ; 	Entidad_sospechosa. 20/4/23
 177+ 8E1B
 178+ 8E1B              ;	ld a,(Impacto)
 179+ 8E1B              ;	and a
 180+ 8E1B              ;	jr z,1F
 181+ 8E1B
 182+ 8E1B              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8E1B              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8E1B              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8E1B              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8E1B              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8E1B
 188+ 8E1B
 189+ 8E1B              ;1 ld hl,(Puntero_restore_caja)
 190+ 8E1B              ;	ld a,(hl)
 191+ 8E1B              ;	and a
 192+ 8E1B              ;	push af
 193+ 8E1B              ;	jr z,2F
 194+ 8E1B
 195+ 8E1B              ;	di
 196+ 8E1B              ;	ld de,Bandeja_DRAW
 197+ 8E1B              ;	ld bc,42
 198+ 8E1B              ;	ldir
 199+ 8E1B              ;	ei
 200+ 8E1B
 201+ 8E1B CD 35 8D     2 call Incrementa_punteros_de_cajas
 202+ 8E1E C9           	ret
 203+ 8E1F
 204+ 8E1F
 205+ 8E1F              ; ---------------------------------------------------------------------
 206+ 8E1F              ;
 207+ 8E1F              ;	29/01/24
 208+ 8E1F
 209+ 8E1F              Guarda_foto_de_mov_masticado
 210+ 8E1F
 211+ 8E1F CD 3E 8C     	call Cargamos_registros_con_mov_masticado
 212+ 8E22 CD 37 9B     	call Genera_datos_de_impresion
 213+ 8E25              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8E25              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8E25              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8E25              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8E25
 218+ 8E25 CD 34 8E     	call Decrementa_Contador_de_mov_masticados
 219+ 8E28 C9           	ret
 220+ 8E29
 221+ 8E29              ; ---------------------------------------------------------------------
 222+ 8E29              ;
 223+ 8E29              ;	25/01/24
 224+ 8E29
 225+ 8E29 21 B6 8A     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8E2C 06 2A        	ld b,42
 227+ 8E2E AF           	xor a
 228+ 8E2F
 229+ 8E2F 77           1 ld (hl),a
 230+ 8E30 23           	inc hl
 231+ 8E31 10 FC        	djnz 1B
 232+ 8E33
 233+ 8E33 C9           	ret
 234+ 8E34
 235+ 8E34              ; ---------------------------------------------------------------------
 236+ 8E34              ;
 237+ 8E34              ;	22/01/24
 238+ 8E34
 239+ 8E34 2A D7 8A     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8E37 2B           	dec hl
 241+ 8E38
 242+ 8E38 24           	inc h
 243+ 8E39 25           	dec h
 244+ 8E3A
 245+ 8E3A FC 41 8E     	call m,Reinicia_entidad_maliciosa
 246+ 8E3D
 247+ 8E3D              ;	jr nz,1F
 248+ 8E3D
 249+ 8E3D              ;	inc l
 250+ 8E3D              ;	dec l
 251+ 8E3D
 252+ 8E3D              ;	di
 253+ 8E3D              ;	jr z,$
 254+ 8E3D              ;	ei
 255+ 8E3D
 256+ 8E3D 22 D7 8A     1 ld (Contador_de_mov_masticados),hl
 257+ 8E40 C9           	ret
 258+ 8E41
 259+ 8E41              ; ---------------------------------------------------------------------
 260+ 8E41              ;
 261+ 8E41              ;	10/2/24
 262+ 8E41
 263+ 8E41              Reinicia_entidad_maliciosa
 264+ 8E41
 265+ 8E41              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8E41
 267+ 8E41 CD B0 9A     	call Situa_en_contador_general_de_mov_masticados
 268+ 8E44 CD BD 9A     	call Transfiere_datos_de_contadores
 269+ 8E47
 270+ 8E47              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8E47
 272+ 8E47 3A B6 8A     	ld a,(Tipo)
 273+ 8E4A CD 05 8E     	call Definicion_segun_tipo
 274+ 8E4D
 275+ 8E4D E5           	push hl
 276+ 8E4E DD E1        	pop ix
 277+ 8E50
 278+ 8E50 DD 6E 0B     	ld l,(ix+11)
 279+ 8E53 DD 66 0C     	ld h,(ix+12)
 280+ 8E56
 281+ 8E56 22 D5 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8E59
 283+ 8E59              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8E59              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8E59
 286+ 8E59 2A 15 8B     	ld hl,(Scanlines_album_SP)
 287+ 8E5C 01 06 00     	ld bc,6
 288+ 8E5F A7           	and a
 289+ 8E60 ED 42        	sbc hl,bc
 290+ 8E62 22 15 8B     	ld (Scanlines_album_SP),hl
 291+ 8E65
 292+ 8E65 CD 3E 8C     	call Cargamos_registros_con_mov_masticado
 293+ 8E68 CD 37 9B     	call Genera_datos_de_impresion
 294+ 8E6B
 295+ 8E6B 2A D7 8A     	ld hl,(Contador_de_mov_masticados)
 296+ 8E6E 2B           	dec hl
 297+ 8E6F
 298+ 8E6F C9           	ret
 299+ 8E70
 300+ 8E70
 301+ 8E70
 302+ 8E70
 303+ 8E70              ; ---------------------------------------------------------------------
 304+ 8E70              ;
 305+ 8E70              ;	22/01/24
 306+ 8E70
 307+ 8E70 21 18 8B     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8E73 CB 46        	bit 0,(hl)
 309+ 8E75 20 0D        	jr nz,1F
 310+ 8E77 CB 4E        	bit 1,(hl)
 311+ 8E79 20 0C        	jr nz,2F
 312+ 8E7B CB 56        	bit 2,(hl)
 313+ 8E7D 20 0B        	jr nz,3F
 314+ 8E7F CB 5E        	bit 3,(hl)
 315+ 8E81 20 0A        	jr nz,4F
 316+ 8E83 C9           	ret
 317+ 8E84
 318+ 8E84 CB E6        1 set 4,(hl)
 319+ 8E86 C9           	ret
 320+ 8E87 CB EE        2 set 5,(hl)
 321+ 8E89 C9           	ret
 322+ 8E8A CB F6        3 set 6,(hl)
 323+ 8E8C C9           	ret
 324+ 8E8D CB FE        4 set 7,(hl)
 325+ 8E8F C9           	ret
 326+ 8E90
 327+ 8E90              ; ---------------------------------------------------------------------
 328+ 8E90              ;
 329+ 8E90              ;	23/01/24
 330+ 8E90              ;
 331+ 8E90              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8E90              ;
 333+ 8E90              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8E90              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8E90              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8E90              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8E90
 338+ 8E90              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8E90
 340+ 8E90 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8E91 3D           	dec a
 342+ 8E92 20 06        	jr nz,1F
 343+ 8E94
 344+ 8E94              ; --- Tipo_1
 345+ 8E94
 346+ 8E94 21 18 8B     	ld hl,Ctrl_4
 347+ 8E97 CB C6        	set 0,(hl)
 348+ 8E99 C9           	ret
 349+ 8E9A
 350+ 8E9A 3D           1 dec a
 351+ 8E9B 20 06        	jr nz,2F
 352+ 8E9D
 353+ 8E9D              ; --- Tipo_2
 354+ 8E9D
 355+ 8E9D 21 18 8B     	ld hl,Ctrl_4
 356+ 8EA0 CB CE        	set 1,(hl)
 357+ 8EA2 C9           	ret
 358+ 8EA3
 359+ 8EA3 3D           2 dec a
 360+ 8EA4 20 06        	jr nz,3F
 361+ 8EA6
 362+ 8EA6              ; --- Tipo_3
 363+ 8EA6
 364+ 8EA6 21 18 8B     	ld hl,Ctrl_4
 365+ 8EA9 CB D6        	set 2,(hl)
 366+ 8EAB C9           	ret
 367+ 8EAC
 368+ 8EAC              ; --- Tipo_3
 369+ 8EAC
 370+ 8EAC 21 18 8B     3 ld hl,Ctrl_4
 371+ 8EAF CB D6        	set 2,(hl)
 372+ 8EB1 C9           	ret
 373+ 8EB2
 374+ 8EB2              ; ---------------------------------------------------------------------
 375+ 8EB2              ;
 376+ 8EB2              ;	22/01/24
 377+ 8EB2
 378+ 8EB2 21 18 8B     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8EB5 CB 46        	bit 0,(hl)
 380+ 8EB7 20 0E        	jr nz,1F
 381+ 8EB9
 382+ 8EB9 CB 4E        	bit 1,(hl)
 383+ 8EBB 20 10        	jr nz,2F
 384+ 8EBD
 385+ 8EBD CB 56        	bit 2,(hl)
 386+ 8EBF 20 12        	jr nz,3F
 387+ 8EC1
 388+ 8EC1 CB 5E        	bit 3,(hl)
 389+ 8EC3 20 14        	jr nz,4F
 390+ 8EC5 18 19        	jr 6F
 391+ 8EC7
 392+ 8EC7              ; Entidad_de_Tipo_1.
 393+ 8EC7
 394+ 8EC7 CB 66        1 bit 4,(hl)
 395+ 8EC9 28 15        	jr z,6F
 396+ 8ECB 18 10        	jr 5F
 397+ 8ECD
 398+ 8ECD              ; Entidad_de_Tipo_2.
 399+ 8ECD
 400+ 8ECD CB 6E        2 bit 5,(hl)
 401+ 8ECF 28 0F        	jr z,6F
 402+ 8ED1 18 0A        	jr 5F
 403+ 8ED3
 404+ 8ED3              ; Entidad_de_Tipo_3.
 405+ 8ED3
 406+ 8ED3 CB 76        3 bit 6,(hl)
 407+ 8ED5 28 09        	jr z,6F
 408+ 8ED7 18 04        	jr 5F
 409+ 8ED9
 410+ 8ED9              ; Entidad_de_Tipo_4.
 411+ 8ED9
 412+ 8ED9 CB 7E        4 bit 7,(hl)
 413+ 8EDB 28 03        	jr z,6F
 414+ 8EDD
 415+ 8EDD              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8EDD
 417+ 8EDD AF           5 xor a
 418+ 8EDE 3C           	inc a
 419+ 8EDF C9           	ret
 420+ 8EE0
 421+ 8EE0              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8EE0
 423+ 8EE0 AF           6 xor a
 424+ 8EE1 C9           	ret
 425+ 8EE2
 426+ 8EE2              ;	------------------------------------------------------------------------------------
 427+ 8EE2              ;
 428+ 8EE2              ;	12/01/24
 429+ 8EE2              ;
 430+ 8EE2              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8EE2              ;
 432+ 8EE2              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8EE2              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8EE2
 435+ 8EE2 CB 27        Calcula_salto_en_BC sla a
 436+ 8EE4 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8EE6 4F           	ld c,a
 438+ 8EE7 06 00        	ld b,0
 439+ 8EE9 C9           	ret
 440+ 8EEA
 441+ 8EEA              ; ------------------------------------------------------------------
 442+ 8EEA              ;
 443+ 8EEA              ;	19/1/24
 444+ 8EEA              ;
 445+ 8EEA              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8EEA              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8EEA
 448+ 8EEA A7           Situa_en_datos_de_definicion and a
 449+ 8EEB ED 4A        	adc hl,bc
 450+ 8EED CD CE 8C     	call Extrae_address
 451+ 8EF0 22 07 8B         ld (Datos_de_entidad),hl
 452+ 8EF3 C9           	ret
 453+ 8EF4
 454+ 8EF4              ; ------------------------------------------------------------------
 455+ 8EF4
 456+ 8EF4              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8EF4              ; 	inc de
 458+ 8EF4              ; 	inc de
 459+ 8EF4              ; 	ex de,hl
 460+ 8EF4              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8EF4              ; 	ret
 462+ 8EF4
 463+ 8EF4              ; ----------------------------------------------------------------------------------------------------------
 464+ 8EF4              ;
 465+ 8EF4              ;	31/1/24
 466+ 8EF4              ;
 467+ 8EF4              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8EF4              ;	_ de entidad.
 469+ 8EF4              ;
 470+ 8EF4              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8EF4              ;
 472+ 8EF4              ;
 473+ 8EF4              ;	MODIFICA: HL,DE y BC
 474+ 8EF4
 475+ 8EF4
 476+ 8EF4              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8EF4
 478+ 8EF4 11 B6 8A     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8EF7 01 03 00     	ld bc,3
 480+ 8EFA ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8EFC              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8EFC 11 C0 8A     	ld de,Attr									; DE en (Attr).
 483+ 8EFF 01 05 00     	ld bc,5
 484+ 8F02 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8F04              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8F04 11 C9 8A     	ld de,Posicion_inicio
 487+ 8F07 01 03 00     	ld bc,3
 488+ 8F0A ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8F0C              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8F0C 11 D5 8A     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8F0F 01 02 00     	ld bc,2
 492+ 8F12 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8F14
 494+ 8F14 11 DF 8A     	ld de,Frames_explosion
 495+ 8F17 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8F19 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8F1A
 498+ 8F1A C9           	ret
 499+ 8F1B
 500+ 8F1B              ; ----------------------------------------------------------------------------------------------------------
 501+ 8F1B              ;
 502+ 8F1B              ;	22/01/24
 503+ 8F1B              ;
 504+ 8F1B              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8F1B              ;
 506+ 8F1B              ;	Las cajas contienen entidades iniciadas:
 507+ 8F1B              ;
 508+ 8F1B              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8F1B              ;
 510+ 8F1B              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8F1B              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8F1B              ;
 513+ 8F1B              ;	MODIFICA: HL,DE y BC
 514+ 8F1B
 515+ 8F1B 21 B6 8A     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8F1E ED 5B FB 8A  	ld de,(Puntero_store_caja)
 517+ 8F22 7E           	ld a,(hl)
 518+ 8F23 12           	ld (de),a
 519+ 8F24 13           	inc de 													; (Tipo).
 520+ 8F25
 521+ 8F25 21 BD 8A     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8F28 01 02 00     	ld bc,2
 523+ 8F2B ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8F2D              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8F2D 23           	inc hl
 526+ 8F2E 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8F2F 12           	ld (de),a
 528+ 8F30 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8F31
 530+ 8F31 21 CC 8A     	ld hl,Impacto
 531+ 8F34 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8F35 12           	ld (de),a
 533+ 8F36 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8F37              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8F37 23           	inc hl
 536+ 8F38 01 06 00     	ld bc,6
 537+ 8F3B ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8F3D              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8F3D 01 07 00     	ld bc,7
 540+ 8F40 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8F42              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8F42              ;															; HL apunta ahora a (Columnas).
 543+ 8F42 21 DE 8A     	ld hl,Ctrl_2
 544+ 8F45 7E           	ld a,(hl)
 545+ 8F46 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8F47 13           	inc de
 547+ 8F48
 548+ 8F48 C9           	ret
 549+ 8F49
 550+ 8F49              ;---------------------------------------------------------------------------------------------------------------
 551+ 8F49              ;
 552+ 8F49              ;	5/1/24
 553+ 8F49              ;
 554+ 8F49              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8F49              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8F49              ;
 557+ 8F49              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8F49              ;
 559+ 8F49              ;	(Numero_parcial_de_entidades)="7".
 560+ 8F49              ;
 561+ 8F49              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8F49              ;
 563+ 8F49              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8F49              ;
 565+ 8F49              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8F49              ;	MODIFICA: A y B.
 567+ 8F49              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8F49
 569+ 8F49              Inicializa_Numero_parcial_de_entidades
 570+ 8F49
 571+ 8F49              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8F49
 573+ 8F49 3A 01 8B     	ld a,(Numero_de_entidades)
 574+ 8F4C A7           	and a
 575+ 8F4D
 576+ 8F4D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8F4D              ;	jr z,$
 578+ 8F4D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8F4D
 580+ 8F4D 20 03        	jr nz,3F
 581+ 8F4F
 582+ 8F4F              ; ---------- ---------- ----------
 583+ 8F4F
 584+ 8F4F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8F4F              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8F4F
 587+ 8F4F CD 70 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8F52
 589+ 8F52              ; ---------- ---------- ----------
 590+ 8F52
 591+ 8F52 3A 01 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8F55 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8F57 38 08        	jr c,1F
 594+ 8F59
 595+ 8F59              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8F59              ; Actualizamos variables.
 597+ 8F59
 598+ 8F59 3E 07        	ld a,7
 599+ 8F5B 32 02 8B     	ld (Numero_parcial_de_entidades),a
 600+ 8F5E 47           	ld b,a
 601+ 8F5F 18 04        	jr 2F
 602+ 8F61
 603+ 8F61              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8F61              ; (Numero_de_entidades)="0".
 605+ 8F61
 606+ 8F61 32 02 8B     1 ld (Numero_parcial_de_entidades),a
 607+ 8F64 47           	ld b,a
 608+ 8F65 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1806  8F66              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F66              ; ******************************************************************************************************************************************************************************************
   2+ 8F66              ;
   3+ 8F66              ; 26/06/23
   4+ 8F66              ;
   5+ 8F66              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F66
   7+ 8F66              Draw
   8+ 8F66
   9+ 8F66 CD 50 92     	call Prepara_draw
  10+ 8F69 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8F6A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8F6B 28 05        	jr z,2F
  13+ 8F6D
  14+ 8F6D 3A CB 8A     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8F70 18 0C        	jr 1F
  16+ 8F72
  17+ 8F72 2A C9 8A     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8F75 22 B9 8A     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8F78 CD 04 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8F7B              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8F7B
  22+ 8F7B CD 14 9A     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8F7E
  24+ 8F7E 3A D9 8A     1 ld a,(Ctrl_0)
  25+ 8F81 CB 6F        	bit 5,a
  26+ 8F83 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8F85
  28+ 8F85 CD 9A 8F     	call Comprueba_limite_horizontal
  29+ 8F88 CD 2A 90     	call Comprueba_limite_vertical
  30+ 8F8B
  31+ 8F8B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8F8B              ; -----------------------
  33+ 8F8B              ; -----------------------
  34+ 8F8B              ; -----------------------
  35+ 8F8B
  36+ 8F8B CD 80 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8F8E CD B7 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8F91              ;	call Define_rutina_de_impresion
  39+ 8F91
  40+ 8F91 3A D9 8A     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8F94 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8F96 32 D9 8A     	ld (Ctrl_0),a
  43+ 8F99
  44+ 8F99 C9           	ret
  45+ 8F9A
  46+ 8F9A              ; *******************************************************************************************************************************************************************************************
  47+ 8F9A              ;	21/01/23
  48+ 8F9A              ;
  49+ 8F9A              ; 	Comprueba_limite_horizontal.
  50+ 8F9A              ;
  51+ 8F9A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8F9A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8F9A              ;
  54+ 8F9A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8F9A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8F9A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8F9A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8F9A
  59+ 8F9A
  60+ 8F9A
  61+ 8F9A 3A D9 8A     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8F9D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8F9F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8FA1 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8FA3 32 D9 8A     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8FA6 18 09            jr 6F
  67+ 8FA8 CB 5F        1 bit 3,a
  68+ 8FAA 28 0A            jr z,2F
  69+ 8FAC E6 F7            and $f7
  70+ 8FAE 32 D9 8A         ld (Ctrl_0),a
  71+ 8FB1 CD 04 91     6 call Inicializacion
  72+ 8FB4 18 5B            jr 5F
  73+ 8FB6 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8FB7
  75+ 8FB7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8FB7              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8FB7
  78+ 8FB7 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8FB8 2A DB 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8FBB CD D5 9A     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8FBE 67           	ld h,a
  82+ 8FBF EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8FC0 CD D5 9A     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8FC3 67           	ld h,a
  85+ 8FC4 A7           	and a
  86+ 8FC5 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8FC7 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8FC8 3A CB 8A     	ld a,(Cuad_objeto)
  89+ 8FCB FE 02        	cp 2
  90+ 8FCD 38 1E        	jr c,3F
  91+ 8FCF 28 1C        	jr z,3F
  92+ 8FD1 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8FD2 28 23            jr z,7F
  94+ 8FD4 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8FD6 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8FD8 E1           	pop hl
  97+ 8FD9
  98+ 8FD9              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8FD9              ; _para indicar con E="2" en caso necesario.
 100+ 8FD9
 101+ 8FD9 E5               push hl
 102+ 8FDA C5               push bc
 103+ 8FDB CD D5 9A     	call calcula_tercio
 104+ 8FDE FE 01        	cp 1
 105+ 8FE0 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8FE2 CD 12 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8FE5 28 26            jr z,9F
 108+ 8FE7 38 24            jr c,9F
 109+ 8FE9 1E 00        11 ld e,0
 110+ 8FEB 18 22            jr 8F
 111+ 8FED 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8FEE 28 07        	jr z, 7F
 113+ 8FF0 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8FF2 1E 00         	ld e,0
 115+ 8FF4 E1           	pop hl
 116+ 8FF5 18 04        	jr 4F
 117+ 8FF7 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8FF9 18 15            jr 10F
 119+ 8FFB
 120+ 8FFB              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8FFB              ; _para indicar con E="2" en caso necesario.
 122+ 8FFB
 123+ 8FFB E5           4 push hl
 124+ 8FFC C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8FFD CD D5 9A     	call calcula_tercio
 126+ 9000 FE 01        	cp 1
 127+ 9002 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9004 CD 12 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9007 28 04            jr z,9F
 130+ 9009 30 02            jr nc,9F
 131+ 900B 18 02        	jr 8F
 132+ 900D 1E 02        9 ld e,2
 133+ 900F C1           8 pop bc
 134+ 9010 E1           10 pop hl
 135+ 9011 C9           5 ret
 136+ 9012
 137+ 9012              ; --------------------
 138+ 9012              ;
 139+ 9012              ; 25/08/22
 140+ 9012
 141+ 9012 CD D5 9A     Comprueba_centro call calcula_tercio
 142+ 9015 67               ld h,a
 143+ 9016 08           	ex af,af
 144+ 9017 FE 02        	cp 2
 145+ 9019 38 07        	jr c,1F
 146+ 901B 28 05        	jr z,1F
 147+ 901D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9020 18 03        	jr 2F
 149+ 9022 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9025 08           2 ex af,af
 151+ 9026 A7               and a
 152+ 9027 ED 42            sbc hl,bc
 153+ 9029 C9               ret
 154+ 902A
 155+ 902A              ; *********************************************************************************************************************************************************************************************
 156+ 902A              ;
 157+ 902A              ;   16/8/22
 158+ 902A              ;
 159+ 902A              ;	Comprueba_limite_vertical
 160+ 902A              ;
 161+ 902A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 902A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 902A              ;
 164+ 902A
 165+ 902A 2A B9 8A     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 902D 7D           	ld a,l
 167+ 902E E6 1F        	and $1F
 168+ 9030 57           	ld d,a
 169+ 9031 3A DD 8A     	ld a,(Limite_vertical)
 170+ 9034 BA           	cp d 											; Límite - Posición.
 171+ 9035 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9036 3A CB 8A     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9039 CB 47        	bit 0,a
 174+ 903B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 903D
 176+ 903D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 903D
 178+ 903D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 903E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9040
 181+ 9040              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9040              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9040
 184+ 9040 3A BD 8A         ld a,(Coordenada_X)
 185+ 9043 16 0F            ld d,Centro_izquierda
 186+ 9045 A7               and a
 187+ 9046 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 9047 28 1E            jr z,3F
 189+ 9049 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 904B              ;                                                    ; _salimos sin modificar nada.
 191+ 904B 18 0E            jr 2F
 192+ 904D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 904E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9050
 195+ 9050              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9050              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9050
 198+ 9050 3A BD 8A         ld a,(Coordenada_X)
 199+ 9053 16 10            ld d,Centro_derecha
 200+ 9055 A7               and a
 201+ 9056 92               sub d
 202+ 9057 28 0E            jr z,3F
 203+ 9059 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 905B              ;                                                    ; _salimos sin modificar nada.
 205+ 905B CB 43        2 bit 0,e
 206+ 905D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 905F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9060 CD F4 90         call Modificaccionne
 209+ 9063 C1           	pop bc
 210+ 9064 CD 04 91         call Inicializacion
 211+ 9067 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9068
 213+ 9068              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9068
 215+ 9068 C5           4 push bc
 216+ 9069 01 B8 8A     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 906C 0A           	ld a,(bc)
 218+ 906D 3D           	dec a
 219+ 906E 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 906F 7D           	ld a,l
 221+ 9070 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9071 CB 47        	bit 0,a
 223+ 9073 28 03        	jr z,5F
 224+ 9075 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9076 18 2E        	jr 7F
 226+ 9078
 227+ 9078              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9078
 229+ 9078 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9079 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 907A 3A D9 8A     	ld a,(Ctrl_0)
 232+ 907D CB 4F        	bit 1,a
 233+ 907F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9081 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9082
 236+ 9082              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9082
 238+ 9082 1C               inc e
 239+ 9083 1D               dec e
 240+ 9084 20 07            jr nz,12F
 241+ 9086 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9087 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9088 22 B9 8A     	ld (Posicion_actual),hl
 244+ 908B 18 44        13 jr 9F
 245+ 908D CB 43        12 bit 0,e
 246+ 908F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9091              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9091 C1           	pop bc
 249+ 9092 18 D3        	jr 3B
 250+ 9094 80           14 add b
 251+ 9095 6F               ld l,a
 252+ 9096 22 B9 8A     	ld (Posicion_actual),hl
 253+ 9099 CD F4 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 909C 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 909E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 90A0 32 D9 8A         ld (Ctrl_0),a
 257+ 90A3 F1           	pop af
 258+ 90A4 18 2B        	jr 9F
 259+ 90A6
 260+ 90A6              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 90A6
 262+ 90A6 F5           7 push af
 263+ 90A7 3A D9 8A     	ld a,(Ctrl_0)
 264+ 90AA CB 47        	bit 0,a
 265+ 90AC 20 1D        	jr nz,8F
 266+ 90AE F1           	pop af
 267+ 90AF
 268+ 90AF              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 90AF
 270+ 90AF 1C           	inc e
 271+ 90B0 1D               dec e
 272+ 90B1 20 07            jr nz,10F
 273+ 90B3 90           	sub b
 274+ 90B4 6F               ld l,a
 275+ 90B5 22 B9 8A     	ld (Posicion_actual),hl
 276+ 90B8 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 90BA              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 90BA CB 43        10 bit 0,e
 279+ 90BC 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 90BE              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 90BE C1           	pop bc
 282+ 90BF 18 A6        	jr 3B
 283+ 90C1 90           16 sub b
 284+ 90C2 6F               ld l,a
 285+ 90C3 22 B9 8A     	ld (Posicion_actual),hl
 286+ 90C6 CD F4 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 90C9 18 06            jr 9F
 288+ 90CB E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 90CD 32 D9 8A         ld (Ctrl_0),a
 290+ 90D0 F1           	pop af
 291+ 90D1 C1           9 pop bc
 292+ 90D2 1E 00        	ld e,0
 293+ 90D4 CD 04 91         call Inicializacion
 294+ 90D7 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 90D8 08           	ex af,af
 296+ 90D9 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 90DA 18 8B            jr 3B
 298+ 90DC
 299+ 90DC              ; --------------------
 300+ 90DC
 301+ 90DC 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 90DE CD 6B 92     1 call PreviousScan
 303+ 90E1 10 FB            djnz 1B
 304+ 90E3 22 B9 8A     	ld (Posicion_actual),hl
 305+ 90E6 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 90E7 C9           	ret
 307+ 90E8
 308+ 90E8              ; --------------------
 309+ 90E8
 310+ 90E8 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 90EA CD 5C 92     1 call NextScan
 312+ 90ED 10 FB            djnz 1B
 313+ 90EF 22 B9 8A     	ld (Posicion_actual),hl
 314+ 90F2 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 90F3 C9           	ret
 316+ 90F4
 317+ 90F4              ; --------------------
 318+ 90F4              ;
 319+ 90F4              ;	22/01/23
 320+ 90F4              ;
 321+ 90F4              ;	E="1". Hemos cambiado de cuadrante.
 322+ 90F4              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 90F4              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 90F4
 325+ 90F4
 326+ 90F4              Modificaccionne
 327+ 90F4
 328+ 90F4 3A CB 8A     	ld a,(Cuad_objeto)
 329+ 90F7 FE 02        	cp 2
 330+ 90F9 CC DC 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 90FC DC DC 90         call c,Modifica_Pos_actual
 332+ 90FF C8           	ret z
 333+ 9100 CD E8 90         call Modifica_Pos_actual2
 334+ 9103 C9               ret
 335+ 9104
 336+ 9104              ; *************************************************************************************************************************************************************************************************
 337+ 9104              ;
 338+ 9104              ;	13/8/22
 339+ 9104              ;
 340+ 9104              ;	Inicializacion
 341+ 9104              ;
 342+ 9104              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9104              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9104              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9104              ;
 346+ 9104              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9104              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9104              ;	_ desaparece/aparece.
 349+ 9104
 350+ 9104              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9104              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9104              ;
 353+ 9104              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9104              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9104              ; 		   [E] ="0"
 356+ 9104
 357+ 9104              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9104
 359+ 9104 CD D5 9A     Inicializacion call calcula_tercio
 360+ 9107 28 36        	jr z,primit
 361+ 9109 E6 02        	and 2
 362+ 910B 20 07        	jr nz,segmit
 363+ 910D 7D           	ld a,l
 364+ 910E FE 7F        	cp $7f
 365+ 9110 38 2D        	jr c,primit
 366+ 9112 28 2B        	jr z,primit
 367+ 9114 CD 7A 91     segmit call column
 368+ 9117 38 13        	jr c,tercuad
 369+ 9119 3E 04        cuarcuad ld a,4
 370+ 911B 32 CB 8A     	ld (Cuad_objeto),a
 371+ 911E 21 20 48     	ld hl,$4820
 372+ 9121 22 DB 8A     	ld (Limite_horizontal),hl
 373+ 9124 21 DD 8A     	ld hl,Limite_vertical
 374+ 9127 36 0D        	ld (hl),$0d
 375+ 9129 08           	ex af,af
 376+ 912A 18 3C        	jr 1F
 377+ 912C              tercuad
 378+ 912C 3E 03        	ld a,3
 379+ 912E 32 CB 8A     	ld (Cuad_objeto),a
 380+ 9131 21 20 48     	ld hl,$4820
 381+ 9134 22 DB 8A     	ld (Limite_horizontal),hl
 382+ 9137 21 DD 8A     	ld hl,Limite_vertical
 383+ 913A 36 12        	ld (hl),$12
 384+ 913C 08           	ex af,af
 385+ 913D 18 29        	jr 1F
 386+ 913F CD 7A 91     primit call column
 387+ 9142 38 13        	jr c, primcuad
 388+ 9144              segcuad
 389+ 9144 3E 02        	ld a,2
 390+ 9146 32 CB 8A     	ld (Cuad_objeto),a
 391+ 9149 21 C0 4F     	ld hl,$4fc0
 392+ 914C 22 DB 8A     	ld (Limite_horizontal),hl
 393+ 914F 21 DD 8A     	ld hl,Limite_vertical
 394+ 9152 36 0D        	ld (hl),$0d
 395+ 9154 08           	ex af,af
 396+ 9155 18 11        	jr 1F
 397+ 9157              primcuad
 398+ 9157 3E 01        	ld a,1
 399+ 9159 32 CB 8A     	ld (Cuad_objeto),a
 400+ 915C 21 C0 4F     	ld hl,$4fc0
 401+ 915F 22 DB 8A     	ld (Limite_horizontal),hl
 402+ 9162 21 DD 8A     	ld hl,Limite_vertical
 403+ 9165 36 12        	ld (hl),$12
 404+ 9167 08           	ex af,af
 405+ 9168
 406+ 9168 C5           1 push bc
 407+ 9169 E5           	push hl
 408+ 916A D5           	push de
 409+ 916B
 410+ 916B 2A B9 8A     	ld hl,(Posicion_actual)
 411+ 916E CD F3 9A     	call Genera_coordenadas
 412+ 9171
 413+ 9171 D1           	pop de
 414+ 9172 E1           	pop hl
 415+ 9173 C1           	pop bc
 416+ 9174
 417+ 9174 21 D9 8A     	ld hl,Ctrl_0
 418+ 9177 CB EE        	set 5,(hl)
 419+ 9179 C9           	ret
 420+ 917A
 421+ 917A              ; ------------------------------------------------------------------------------------------------------------------
 422+ 917A
 423+ 917A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 917A              ;
 425+ 917A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 917A
 427+ 917A 7D           column ld a,l
 428+ 917B E6 1F        	and $1f
 429+ 917D FE 10         	cp $10
 430+ 917F C9            	ret
 431+ 9180
 432+ 9180              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9180              ;
 434+ 9180              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9180              ;
 436+ 9180              ; 14/12/22
 437+ 9180              ;
 438+ 9180              ;	Modifica: A y BC.
 439+ 9180
 440+ 9180 3A CB 8A     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9183 E6 01        	and 1
 442+ 9185 28 17        	jr z,1F
 443+ 9187
 444+ 9187              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9187
 446+ 9187 3A BD 8A     	ld a,(Coordenada_X)
 447+ 918A 47           	ld b,a
 448+ 918B 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 918C 79           	ld a,c
 450+ 918D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 918E 38 08        	jr c,2F
 452+ 9190 47           	ld b,a
 453+ 9191 79           	ld a,c
 454+ 9192 90           	sub b
 455+ 9193 32 DA 8A     	ld (Columnas),a
 456+ 9196 18 1B        	jr 4F
 457+ 9198 79           2 ld a,c
 458+ 9199 32 DA 8A     	ld (Columnas),a
 459+ 919C 18 15        	jr 4F
 460+ 919E
 461+ 919E              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 919E
 463+ 919E 3A BD 8A     1 ld a,(Coordenada_X)
 464+ 91A1 81           	add c
 465+ 91A2 3D           	dec a
 466+ 91A3 D6 1F        	sub $1f
 467+ 91A5 38 08        	jr c,3F
 468+ 91A7 47           	ld b,a
 469+ 91A8 79           	ld a,c
 470+ 91A9 90           	sub b
 471+ 91AA 32 DA 8A     	ld (Columnas),a
 472+ 91AD 18 04        	jr 4F
 473+ 91AF 79           3 ld a,c
 474+ 91B0 32 DA 8A     	ld (Columnas),a
 475+ 91B3 D9           4 exx
 476+ 91B4 4F           	ld c,a
 477+ 91B5 D9           	exx
 478+ 91B6 C9            ret
 479+ 91B7
 480+ 91B7              ; --------------------------------------------------------------------------------------------------------------------
 481+ 91B7              ;
 482+ 91B7              ;   19/7/23
 483+ 91B7              ;
 484+ 91B7              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 91B7              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 91B7              ;
 487+ 91B7              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 91B7              ;			HL e IY Contienen (Puntero_objeto).
 489+ 91B7              ;
 490+ 91B7              ;	DESTRUYE: HL,B Y A.
 491+ 91B7
 492+ 91B7 3A CB 8A     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 91BA FE 02        	cp 2
 494+ 91BC 38 18        	jr c,1F
 495+ 91BE 28 16        	jr z,1F
 496+ 91C0 E6 01        	and 1
 497+ 91C2 28 0D        	jr z,3F
 498+ 91C4
 499+ 91C4              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 91C4
 501+ 91C4 CD 0A 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 91C7
 503+ 91C7 7D           9 ld a,l
 504+ 91C8 E6 1F        	and $1f
 505+ 91CA 28 2A        	jr z,7F
 506+ 91CC 2B           	dec hl
 507+ 91CD 10 F8        	djnz 9B
 508+ 91CF 18 25        	jr 7F
 509+ 91D1
 510+ 91D1              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 91D1
 512+ 91D1 2A B9 8A     3 ld hl,(Posicion_actual)
 513+ 91D4 18 20        	jr 7F
 514+ 91D6
 515+ 91D6 28 14        1 jr z,2F
 516+ 91D8
 517+ 91D8              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 91D8
 519+ 91D8 CD 0A 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 91DB
 521+ 91DB 7D           4 ld a,l
 522+ 91DC E6 1F        	and $1f
 523+ 91DE 28 03        	jr z,6F
 524+ 91E0 2B           	dec hl
 525+ 91E1 10 F8        	djnz 4B
 526+ 91E3 06 0F        6 ld b,15
 527+ 91E5 CD 6B 92     5 call PreviousScan
 528+ 91E8 10 FB        	djnz 5B
 529+ 91EA 18 0A        	jr 7F
 530+ 91EC
 531+ 91EC              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 91EC
 533+ 91EC CD 0A 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 91EF 06 0F        	ld b,15
 535+ 91F1 CD 6B 92     8 call PreviousScan
 536+ 91F4 10 FB        	djnz 8B
 537+ 91F6
 538+ 91F6 E5           7 push hl
 539+ 91F7 DD E1        	pop ix
 540+ 91F9
 541+ 91F9 2A BB 8A     	ld hl,(Puntero_objeto)
 542+ 91FC E5           	push hl
 543+ 91FD FD E1        	pop iy
 544+ 91FF
 545+ 91FF              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 91FF
 547+ 91FF 3A D9 8A     	ld a,(Ctrl_0)
 548+ 9202 CB 77        	bit 6,a
 549+ 9204 C8           	ret z
 550+ 9205
 551+ 9205              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9205              ; _ entidad / Amadeus´.
 553+ 9205
 554+ 9205 DD 22 3F 88  	ld (p.imp.amadeus),ix
 555+ 9209
 556+ 9209 C9           	ret
 557+ 920A
 558+ 920A              ; --------------------------------------------------------------------------------------------------------------------
 559+ 920A              ;
 560+ 920A              ;	2/1/23
 561+ 920A              ;
 562+ 920A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 920A              ;
 564+ 920A              ;	Tras esta rutina tenemos:
 565+ 920A              ;
 566+ 920A              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 920A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 920A              ;
 569+ 920A              ;	DESTRUYE!!!!! HL,B y A.
 570+ 920A
 571+ 920A 2A B9 8A     Operandos ld hl,(Posicion_actual)
 572+ 920D 3A DA 8A     	ld a,(Columnas)
 573+ 9210 3D           	dec a
 574+ 9211 20 01        	jr nz,1F
 575+ 9213 3C           	inc a
 576+ 9214 47           1 ld b,a
 577+ 9215 C9           	ret
 578+ 9216
 579+ 9216              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9216              ;
 581+ 9216              ;	3/1/23
 582+ 9216              ;
 583+ 9216              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9216              ;
 585+ 9216              ;	Destruye: A,B,HL y DE.
 586+ 9216
 587+ 9216              Define_rutina_de_impresion
 588+ 9216
 589+ 9216 3A B8 8A     	ld a,(Columns)
 590+ 9219 47           	ld b,a
 591+ 921A 3A DA 8A     	ld a,(Columnas)
 592+ 921D B8           	cp b
 593+ 921E 20 0D        	jr nz,2f
 594+ 9220
 595+ 9220              ;	La entidad se imprime entera.
 596+ 9220
 597+ 9220 21 BD 92     	ld hl, Indice_entidades_completas
 598+ 9223 E6 01        	and 1
 599+ 9225 28 02        	jr z,1F
 600+ 9227
 601+ 9227 23           	inc hl
 602+ 9228 23           	inc hl
 603+ 9229
 604+ 9229 CD CE 8C     1 call Extrae_address
 605+ 922C C9           	ret		;	ret
 606+ 922D
 607+ 922D              ;	La entidad no se imprime entera en pantalla.
 608+ 922D
 609+ 922D 3A CB 8A     2 ld a,(Cuad_objeto)
 610+ 9230 E6 01        	and 1
 611+ 9232 28 17        	jr z,3F
 612+ 9234
 613+ 9234              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9234
 615+ 9234 21 C1 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9237 3A B8 8A     4 ld a,(Columns)
 617+ 923A E6 01        	and 1
 618+ 923C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 923E
 620+ 923E 23           	inc hl
 621+ 923F 23           	inc hl
 622+ 9240
 623+ 9240 3A DA 8A     	ld a,(Columnas)
 624+ 9243 E6 01        	and 1
 625+ 9245 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9247
 627+ 9247 23           	inc hl
 628+ 9248 23           	inc hl
 629+ 9249
 630+ 9249 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 924B
 632+ 924B 21 C7 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 924E 18 E7        	jr 4B
 634+ 9250
 635+ 9250              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9250              ;
 637+ 9250              ;	Prepara_draw
 638+ 9250              ;
 639+ 9250              ;	Es una rutina de carga.
 640+ 9250              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9250              ;
 642+ 9250              ;	FUNCIONAMIENTO:
 643+ 9250              ;
 644+ 9250              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9250              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9250              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9250              ;
 648+ 9250              ;	DESTRUYE:
 649+ 9250              ;
 650+ 9250              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9250
 652+ 9250 21 B7 8A     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9253 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9254 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9255 4E           	ld c,(hl)
 656+ 9256 2A B9 8A     	ld hl,(Posicion_actual)
 657+ 9259 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 925B C9           	ret
 659+ 925C
 660+ 925C              ;----------------------------------------------------------------------------------------------------------------
 661+ 925C              ;
 662+ 925C              ;	5/08/22
 663+ 925C              ;
 664+ 925C              ;   NextScan.
 665+ 925C              ;
 666+ 925C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 925C              ;
 668+ 925C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 925C              ;
 670+ 925C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 925C              ;
 672+ 925C              ;       DESTRUIDOS: AF y HL !!!
 673+ 925C              ;
 674+ 925C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 925C              ;
 676+ 925C
 677+ 925C 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 925D 7C               ld a,h
 679+ 925E E6 07            and 7
 680+ 9260 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9261
 682+ 9261 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9262 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9264 6F               ld l,a
 685+ 9265 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9266
 687+ 9266 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9267 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9269 67               ld h,a
 690+ 926A C9               ret
 691+ 926B
 692+ 926B              ;----------------------------------------------------------------------------------------------------------------
 693+ 926B              ;
 694+ 926B              ;	5/08/22
 695+ 926B              ;
 696+ 926B              ;   PreviousScan.
 697+ 926B              ;
 698+ 926B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 926B              ;
 700+ 926B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 926B              ;
 702+ 926B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 926B              ;
 704+ 926B              ;       DESTRUIDOS: AF y HL !!!
 705+ 926B              ;
 706+ 926B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 926B              ;
 708+ 926B
 709+ 926B 7C           PreviousScan ld a,h
 710+ 926C 25               dec h               ; Dec H.
 711+ 926D E6 07            and 7
 712+ 926F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9270
 714+ 9270 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9271 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9273 6F               ld l,a
 717+ 9274 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9275
 719+ 9275 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9276 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9278 67               ld h,a
 722+ 9279 C9               ret
 723+ 927A
 724+ 927A              ; -----------------------------------------------------------------------------------
 725+ 927A              ;
 726+ 927A              ;	31/7/23
 727+ 927A              ;
 728+ 927A              ;	Rutina principal de pintado de entidades.
 729+ 927A              ;	Extrae la foto del frame, (entidades).
 730+ 927A
 731+ 927A              Extrae_Scanlines_album
 732+ 927A
 733+ 927A 21 01 80     	ld hl,Scanlines_album+1
 734+ 927D 7E           	ld a,(hl)
 735+ 927E A7           	and a
 736+ 927F C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 9280
 738+ 9280              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9280
 740+ 9280 3A 04 8B     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9283 A7           	and a
 742+ 9284 C8           	ret z
 743+ 9285
 744+ 9285              ; -----------------------------------
 745+ 9285
 746+ 9285 ED 73 09 8B  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 9289 31 00 80     	ld sp,Scanlines_album
 748+ 928C
 749+ 928C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 928E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 928F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9290
 753+ 9290 ED 73 0B 8B  	ld (Stack_2),sp
 754+ 9294 ED 7B 09 8B  	ld sp,(Stack)
 755+ 9298
 756+ 9298              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9298
 758+ 9298 3E CD        	ld a,$cd
 759+ 929A 32 A2 92     	ld (Imprime),a
 760+ 929D EB           	ex de,hl
 761+ 929E 22 A3 92     	ld (Imprime+1),hl
 762+ 92A1 EB           	ex de,hl
 763+ 92A2
 764+ 92A2              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 92A2
 766+ 92A2 00 00 00     Imprime db 0,0,0
 767+ 92A5
 768+ 92A5 ED 73 09 8B  	ld (Stack),sp
 769+ 92A9
 770+ 92A9 3A 04 8B     	ld a,(Numero_de_malotes)
 771+ 92AC 3D           	dec a
 772+ 92AD 28 09        	jr z,1F
 773+ 92AF 32 04 8B      	ld (Numero_de_malotes),a
 774+ 92B2
 775+ 92B2 ED 7B 0B 8B  	ld sp,(Stack_2)
 776+ 92B6 18 D4        	jr 2B
 777+ 92B8
 778+ 92B8 AF           1 xor a
 779+ 92B9 32 0B 8B     	ld (Stack_2),a
 780+ 92BC
 781+ 92BC C9           	ret
 782+ 92BD
 783+ 92BD              ; -----------------------------------------------------------------------------------
 784+ 92BD              ;
 785+ 92BD              ;	28/2/23
 786+ 92BD              ;
 787+ 92BD              ;	Pinta los disparos generados.
 788+ 92BD
 789+ 92BD              ;Extrae_foto_disparos
 790+ 92BD
 791+ 92BD              ;	ld hl,Scanlines_album_disparos+1
 792+ 92BD              ;    ld a,(hl)
 793+ 92BD              ;    and a
 794+ 92BD              ;    ret z
 795+ 92BD
 796+ 92BD              ;	ld a,(Numero_de_disparotes)
 797+ 92BD              ;	and a
 798+ 92BD              ;	ret z
 799+ 92BD              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 92BD              ;	ld sp,Scanlines_album_disparos
 801+ 92BD
 802+ 92BD              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 92BD              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 92BD              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 92BD
 806+ 92BD              ;	ld (Stack_2),sp
 807+ 92BD              ;	ld sp,(Stack)
 808+ 92BD
 809+ 92BD              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 92BD
 811+ 92BD              ;	ld a,$cd
 812+ 92BD              ;	ld (Imprime2),a
 813+ 92BD              ;	ex de,hl
 814+ 92BD              ;	ld (Imprime2+1),hl
 815+ 92BD              ;	ex de,hl
 816+ 92BD
 817+ 92BD              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 92BD
 819+ 92BD              ;Imprime2 db 0,0,0
 820+ 92BD
 821+ 92BD              ;	ld a,(Numero_de_disparotes)
 822+ 92BD              ;	dec a
 823+ 92BD              ;	jr z,1F
 824+ 92BD              ; 	ld (Numero_de_disparotes),a
 825+ 92BD
 826+ 92BD              ;	ld sp,(Stack_2)
 827+ 92BD              ;	jr 2B
 828+ 92BD
 829+ 92BD              ;1 xor a
 830+ 92BD              ;	ld (Stack_2),a
 831+ 92BD              ;	ret
 832+ 92BD
 833+ 92BD              ; -----------------------------------------------------------------------------------
 834+ 92BD              ;
 835+ 92BD              ;	4/9/23
 836+ 92BD              ;
 837+ 92BD              ;	Rutina principal de pintado de Amadeus.
 838+ 92BD              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 92BD
 840+ 92BD              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 92BD              ;	ld a,(hl)
 842+ 92BD              ;	and a
 843+ 92BD              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 92BD
 845+ 92BD              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 92BD              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 92BD              ;	ret z
 848+ 92BD
 849+ 92BD              ; -----------------------------------
 850+ 92BD
 851+ 92BD              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 92BD              ;	ld sp,Scanlines_album_Amadeus
 853+ 92BD
 854+ 92BD              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 92BD              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 92BD              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 92BD
 858+ 92BD              ;	ld (Stack_2),sp
 859+ 92BD              ;	ld sp,(Stack)
 860+ 92BD
 861+ 92BD              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 92BD
 863+ 92BD              ;	ld a,$cd
 864+ 92BD              ;	ld (Imprime_Amadeus),a
 865+ 92BD              ;	ex de,hl
 866+ 92BD              ;	ld (Imprime_Amadeus+1),hl
 867+ 92BD              ;	ex de,hl
 868+ 92BD
 869+ 92BD              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92BD
 871+ 92BD              ;Imprime_Amadeus db 0,0,0
 872+ 92BD
 873+ 92BD              ;	ld (Stack),sp
 874+ 92BD
 875+ 92BD              ;	ld a,(Numero_de_malotes)
 876+ 92BD              ;	dec a
 877+ 92BD              ;	jr z,1F
 878+ 92BD              ; 	ld (Numero_de_malotes),a
 879+ 92BD
 880+ 92BD              ;	ld sp,(Stack_2)
 881+ 92BD              ;	jr 2B
 882+ 92BD
 883+ 92BD              ;1 xor a
 884+ 92BD              ;	ld (Stack_2),a
 885+ 92BD
 886+ 92BD              ;	ret
 887+ 92BD
 888+ 92BD
 889+ 92BD
 890+ 92BD
 891+ 92BD
 892+ 92BD
# file closed: Draw_XOR.asm
1807  92BD              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92BD              ;   índices de Rutinas de impresión.
   2+ 92BD
   3+ 92BD CD 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92BF 61 93            defw Pinta_Amadeus_3x2
   5+ 92C1
   6+ 92C1 35 94        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92C3 D5 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92C5 89 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92C7
  10+ 92C7 5F 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92C9 63 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92CB 17 95            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92CD
  14+ 92CD
  15+ 92CD              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92CD              ;
  17+ 92CD              ;   28/2/24
  18+ 92CD              ;
  19+ 92CD              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 92CD              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92CD              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 92CD              ;
  23+ 92CD              ;   Modifica: AF,HL,BC y DE.
  24+ 92CD
  25+ 92CD              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 92CD
  27+ 92CD D9               exx
  28+ 92CE 36 01            ld (hl),1
  29+ 92D0 2C               inc l
  30+ 92D1 D9               exx
  31+ 92D2
  32+ 92D2 FD E5            push iy
  33+ 92D4 D1               pop de
  34+ 92D5
  35+ 92D5 ED 73 09 8B      ld (Stack),sp
  36+ 92D9 F9           	ld sp,hl
  37+ 92DA 06 10            ld b,16
  38+ 92DC
  39+ 92DC E1               pop hl
  40+ 92DD 1A               ld a,(de)
  41+ 92DE 77               ld (hl),a
  42+ 92DF 1C           	inc e
  43+ 92E0 2C               inc l
  44+ 92E1 1A               ld a,(de)
  45+ 92E2 77               ld (hl),a
  46+ 92E3 1C               inc e
  47+ 92E4
  48+ 92E4 E1               pop hl
  49+ 92E5 1A               ld a,(de)
  50+ 92E6 77               ld (hl),a
  51+ 92E7 1C           	inc e
  52+ 92E8 2C               inc l
  53+ 92E9 1A               ld a,(de)
  54+ 92EA 77               ld (hl),a
  55+ 92EB 1C               inc e
  56+ 92EC
  57+ 92EC E1               pop hl
  58+ 92ED 1A               ld a,(de)
  59+ 92EE 77               ld (hl),a
  60+ 92EF 1C           	inc e
  61+ 92F0 2C               inc l
  62+ 92F1 1A               ld a,(de)
  63+ 92F2 77               ld (hl),a
  64+ 92F3 1C               inc e
  65+ 92F4
  66+ 92F4 E1               pop hl
  67+ 92F5 1A               ld a,(de)
  68+ 92F6 77               ld (hl),a
  69+ 92F7 1C           	inc e
  70+ 92F8 2C               inc l
  71+ 92F9 1A               ld a,(de)
  72+ 92FA 77               ld (hl),a
  73+ 92FB 1C               inc e
  74+ 92FC
  75+ 92FC E1               pop hl
  76+ 92FD 1A               ld a,(de)
  77+ 92FE 77               ld (hl),a
  78+ 92FF 1C           	inc e
  79+ 9300 2C               inc l
  80+ 9301 1A               ld a,(de)
  81+ 9302 77               ld (hl),a
  82+ 9303 1C               inc e
  83+ 9304
  84+ 9304 E1               pop hl
  85+ 9305 1A               ld a,(de)
  86+ 9306 77               ld (hl),a
  87+ 9307 1C           	inc e
  88+ 9308 2C               inc l
  89+ 9309 1A               ld a,(de)
  90+ 930A 77               ld (hl),a
  91+ 930B 1C               inc e
  92+ 930C
  93+ 930C E1               pop hl
  94+ 930D 1A               ld a,(de)
  95+ 930E 77               ld (hl),a
  96+ 930F 1C           	inc e
  97+ 9310 2C               inc l
  98+ 9311 1A               ld a,(de)
  99+ 9312 77               ld (hl),a
 100+ 9313 1C               inc e
 101+ 9314
 102+ 9314 E1               pop hl
 103+ 9315 1A               ld a,(de)
 104+ 9316 77               ld (hl),a
 105+ 9317 1C           	inc e
 106+ 9318 2C               inc l
 107+ 9319 1A               ld a,(de)
 108+ 931A 77               ld (hl),a
 109+ 931B 1C               inc e
 110+ 931C
 111+ 931C E1               pop hl
 112+ 931D 1A               ld a,(de)
 113+ 931E 77               ld (hl),a
 114+ 931F 1C           	inc e
 115+ 9320 2C               inc l
 116+ 9321 1A               ld a,(de)
 117+ 9322 77               ld (hl),a
 118+ 9323 1C               inc e
 119+ 9324
 120+ 9324 E1               pop hl
 121+ 9325 1A               ld a,(de)
 122+ 9326 77               ld (hl),a
 123+ 9327 1C           	inc e
 124+ 9328 2C               inc l
 125+ 9329 1A               ld a,(de)
 126+ 932A 77               ld (hl),a
 127+ 932B 1C               inc e
 128+ 932C
 129+ 932C E1               pop hl
 130+ 932D 1A               ld a,(de)
 131+ 932E 77               ld (hl),a
 132+ 932F 1C           	inc e
 133+ 9330 2C               inc l
 134+ 9331 1A               ld a,(de)
 135+ 9332 77               ld (hl),a
 136+ 9333 1C               inc e
 137+ 9334
 138+ 9334 E1               pop hl
 139+ 9335 1A               ld a,(de)
 140+ 9336 77               ld (hl),a
 141+ 9337 1C           	inc e
 142+ 9338 2C               inc l
 143+ 9339 1A               ld a,(de)
 144+ 933A 77               ld (hl),a
 145+ 933B 1C               inc e
 146+ 933C
 147+ 933C E1               pop hl
 148+ 933D 1A               ld a,(de)
 149+ 933E 77               ld (hl),a
 150+ 933F 1C           	inc e
 151+ 9340 2C               inc l
 152+ 9341 1A               ld a,(de)
 153+ 9342 77               ld (hl),a
 154+ 9343 1C               inc e
 155+ 9344
 156+ 9344 E1               pop hl
 157+ 9345 1A               ld a,(de)
 158+ 9346 77               ld (hl),a
 159+ 9347 1C           	inc e
 160+ 9348 2C               inc l
 161+ 9349 1A               ld a,(de)
 162+ 934A 77               ld (hl),a
 163+ 934B 1C               inc e
 164+ 934C
 165+ 934C E1               pop hl
 166+ 934D 1A               ld a,(de)
 167+ 934E 77               ld (hl),a
 168+ 934F 1C           	inc e
 169+ 9350 2C               inc l
 170+ 9351 1A               ld a,(de)
 171+ 9352 77               ld (hl),a
 172+ 9353 1C               inc e
 173+ 9354
 174+ 9354 E1               pop hl
 175+ 9355 1A               ld a,(de)
 176+ 9356 77               ld (hl),a
 177+ 9357 1C           	inc e
 178+ 9358 2C               inc l
 179+ 9359 1A               ld a,(de)
 180+ 935A 77               ld (hl),a
 181+ 935B 1C               inc e
 182+ 935C
 183+ 935C ED 7B 09 8B      ld sp,(Stack)
 184+ 9360
 185+ 9360 C9           	ret
 186+ 9361
 187+ 9361              Pinta_Amadeus_3x2
 188+ 9361
 189+ 9361 D9               exx
 190+ 9362 36 02            ld (hl),2
 191+ 9364 2C               inc l
 192+ 9365 D9               exx
 193+ 9366
 194+ 9366 FD E5            push iy
 195+ 9368 D1               pop de
 196+ 9369
 197+ 9369 ED 73 09 8B      ld (Stack),sp
 198+ 936D F9               ld sp,hl
 199+ 936E 06 10            ld b,16
 200+ 9370
 201+ 9370 E1               pop hl
 202+ 9371 1A               ld a,(de)
 203+ 9372 77               ld (hl),a
 204+ 9373 1C               inc e
 205+ 9374 2C               inc l
 206+ 9375 1A               ld a,(de)
 207+ 9376 77               ld (hl),a
 208+ 9377 1C               inc e
 209+ 9378 2C               inc l
 210+ 9379 1A               ld a,(de)
 211+ 937A 77               ld (hl),a
 212+ 937B 1C               inc e
 213+ 937C
 214+ 937C E1               pop hl
 215+ 937D 1A               ld a,(de)
 216+ 937E 77               ld (hl),a
 217+ 937F 1C               inc e
 218+ 9380 2C               inc l
 219+ 9381 1A               ld a,(de)
 220+ 9382 77               ld (hl),a
 221+ 9383 1C               inc e
 222+ 9384 2C               inc l
 223+ 9385 1A               ld a,(de)
 224+ 9386 77               ld (hl),a
 225+ 9387 1C               inc e
 226+ 9388
 227+ 9388 E1               pop hl
 228+ 9389 1A               ld a,(de)
 229+ 938A 77               ld (hl),a
 230+ 938B 1C               inc e
 231+ 938C 2C               inc l
 232+ 938D 1A               ld a,(de)
 233+ 938E 77               ld (hl),a
 234+ 938F 1C               inc e
 235+ 9390 2C               inc l
 236+ 9391 1A               ld a,(de)
 237+ 9392 77               ld (hl),a
 238+ 9393 1C               inc e
 239+ 9394
 240+ 9394 E1               pop hl
 241+ 9395 1A               ld a,(de)
 242+ 9396 77               ld (hl),a
 243+ 9397 1C               inc e
 244+ 9398 2C               inc l
 245+ 9399 1A               ld a,(de)
 246+ 939A 77               ld (hl),a
 247+ 939B 1C               inc e
 248+ 939C 2C               inc l
 249+ 939D 1A               ld a,(de)
 250+ 939E 77               ld (hl),a
 251+ 939F 1C               inc e
 252+ 93A0
 253+ 93A0 E1               pop hl
 254+ 93A1 1A               ld a,(de)
 255+ 93A2 77               ld (hl),a
 256+ 93A3 1C               inc e
 257+ 93A4 2C               inc l
 258+ 93A5 1A               ld a,(de)
 259+ 93A6 77               ld (hl),a
 260+ 93A7 1C               inc e
 261+ 93A8 2C               inc l
 262+ 93A9 1A               ld a,(de)
 263+ 93AA 77               ld (hl),a
 264+ 93AB 1C               inc e
 265+ 93AC
 266+ 93AC E1               pop hl
 267+ 93AD 1A               ld a,(de)
 268+ 93AE 77               ld (hl),a
 269+ 93AF 1C               inc e
 270+ 93B0 2C               inc l
 271+ 93B1 1A               ld a,(de)
 272+ 93B2 77               ld (hl),a
 273+ 93B3 1C               inc e
 274+ 93B4 2C               inc l
 275+ 93B5 1A               ld a,(de)
 276+ 93B6 77               ld (hl),a
 277+ 93B7 1C               inc e
 278+ 93B8
 279+ 93B8 E1               pop hl
 280+ 93B9 1A               ld a,(de)
 281+ 93BA 77               ld (hl),a
 282+ 93BB 1C               inc e
 283+ 93BC 2C               inc l
 284+ 93BD 1A               ld a,(de)
 285+ 93BE 77               ld (hl),a
 286+ 93BF 1C               inc e
 287+ 93C0 2C               inc l
 288+ 93C1 1A               ld a,(de)
 289+ 93C2 77               ld (hl),a
 290+ 93C3 1C               inc e
 291+ 93C4
 292+ 93C4 E1               pop hl
 293+ 93C5 1A               ld a,(de)
 294+ 93C6 77               ld (hl),a
 295+ 93C7 1C               inc e
 296+ 93C8 2C               inc l
 297+ 93C9 1A               ld a,(de)
 298+ 93CA 77               ld (hl),a
 299+ 93CB 1C               inc e
 300+ 93CC 2C               inc l
 301+ 93CD 1A               ld a,(de)
 302+ 93CE 77               ld (hl),a
 303+ 93CF 1C               inc e
 304+ 93D0
 305+ 93D0 E1               pop hl
 306+ 93D1 1A               ld a,(de)
 307+ 93D2 77               ld (hl),a
 308+ 93D3 1C               inc e
 309+ 93D4 2C               inc l
 310+ 93D5 1A               ld a,(de)
 311+ 93D6 77               ld (hl),a
 312+ 93D7 1C               inc e
 313+ 93D8 2C               inc l
 314+ 93D9 1A               ld a,(de)
 315+ 93DA 77               ld (hl),a
 316+ 93DB 1C               inc e
 317+ 93DC
 318+ 93DC E1               pop hl
 319+ 93DD 1A               ld a,(de)
 320+ 93DE 77               ld (hl),a
 321+ 93DF 1C               inc e
 322+ 93E0 2C               inc l
 323+ 93E1 1A               ld a,(de)
 324+ 93E2 77               ld (hl),a
 325+ 93E3 1C               inc e
 326+ 93E4 2C               inc l
 327+ 93E5 1A               ld a,(de)
 328+ 93E6 77               ld (hl),a
 329+ 93E7 1C               inc e
 330+ 93E8
 331+ 93E8 E1               pop hl
 332+ 93E9 1A               ld a,(de)
 333+ 93EA 77               ld (hl),a
 334+ 93EB 1C               inc e
 335+ 93EC 2C               inc l
 336+ 93ED 1A               ld a,(de)
 337+ 93EE 77               ld (hl),a
 338+ 93EF 1C               inc e
 339+ 93F0 2C               inc l
 340+ 93F1 1A               ld a,(de)
 341+ 93F2 77               ld (hl),a
 342+ 93F3 1C               inc e
 343+ 93F4
 344+ 93F4 E1               pop hl
 345+ 93F5 1A               ld a,(de)
 346+ 93F6 77               ld (hl),a
 347+ 93F7 1C               inc e
 348+ 93F8 2C               inc l
 349+ 93F9 1A               ld a,(de)
 350+ 93FA 77               ld (hl),a
 351+ 93FB 1C               inc e
 352+ 93FC 2C               inc l
 353+ 93FD 1A               ld a,(de)
 354+ 93FE 77               ld (hl),a
 355+ 93FF 1C               inc e
 356+ 9400
 357+ 9400 E1               pop hl
 358+ 9401 1A               ld a,(de)
 359+ 9402 77               ld (hl),a
 360+ 9403 1C               inc e
 361+ 9404 2C               inc l
 362+ 9405 1A               ld a,(de)
 363+ 9406 77               ld (hl),a
 364+ 9407 1C               inc e
 365+ 9408 2C               inc l
 366+ 9409 1A               ld a,(de)
 367+ 940A 77               ld (hl),a
 368+ 940B 1C               inc e
 369+ 940C
 370+ 940C E1               pop hl
 371+ 940D 1A               ld a,(de)
 372+ 940E 77               ld (hl),a
 373+ 940F 1C               inc e
 374+ 9410 2C               inc l
 375+ 9411 1A               ld a,(de)
 376+ 9412 77               ld (hl),a
 377+ 9413 1C               inc e
 378+ 9414 2C               inc l
 379+ 9415 1A               ld a,(de)
 380+ 9416 77               ld (hl),a
 381+ 9417 1C               inc e
 382+ 9418
 383+ 9418 E1               pop hl
 384+ 9419 1A               ld a,(de)
 385+ 941A 77               ld (hl),a
 386+ 941B 1C               inc e
 387+ 941C 2C               inc l
 388+ 941D 1A               ld a,(de)
 389+ 941E 77               ld (hl),a
 390+ 941F 1C               inc e
 391+ 9420 2C               inc l
 392+ 9421 1A               ld a,(de)
 393+ 9422 77               ld (hl),a
 394+ 9423 1C               inc e
 395+ 9424
 396+ 9424 E1               pop hl
 397+ 9425 1A               ld a,(de)
 398+ 9426 77               ld (hl),a
 399+ 9427 1C               inc e
 400+ 9428 2C               inc l
 401+ 9429 1A               ld a,(de)
 402+ 942A 77               ld (hl),a
 403+ 942B 1C               inc e
 404+ 942C 2C               inc l
 405+ 942D 1A               ld a,(de)
 406+ 942E 77               ld (hl),a
 407+ 942F 1C               inc e
 408+ 9430
 409+ 9430 ED 7B 09 8B      ld sp,(Stack)
 410+ 9434
 411+ 9434 C9               ret
 412+ 9435
 413+ 9435              ; ---------------------------------------------------
 414+ 9435
 415+ 9435 ED 73 09 8B  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 9439 FD F9        	ld sp,iy
 417+ 943B
 418+ 943B              ; >>>
 419+ 943B
 420+ 943B 06 10            ld b,16
 421+ 943D D1           1 pop de
 422+ 943E 7A           	ld a,d
 423+ 943F AE           	xor (hl)
 424+ 9440 77           	ld (hl),a
 425+ 9441 24           	inc h
 426+ 9442 7C               ld a,h
 427+ 9443 E6 07            and 7
 428+ 9445 20 0C            jr nz,2F
 429+ 9447 7D               ld a,l
 430+ 9448 C6 20            add a,$20
 431+ 944A 6F               ld l,a
 432+ 944B 38 06            jr c,2F
 433+ 944D 7C               ld a,h
 434+ 944E D6 08            sub 8
 435+ 9450 67               ld h,a
 436+ 9451 18 00            jr 2F
 437+ 9453 7C           2 ld a,h
 438+ 9454 FE 58            cp $58
 439+ 9456 28 02            jr z,3F
 440+ 9458 10 E3            djnz 1B
 441+ 945A ED 7B 09 8B  3 ld sp,(Stack)
 442+ 945E C9           	ret
 443+ 945F
 444+ 945F ED 73 09 8B  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 9463 FD F9        	ld sp,iy
 446+ 9465
 447+ 9465              ; >>>
 448+ 9465
 449+ 9465 06 10            ld b,16
 450+ 9467 D1           1 pop de
 451+ 9468 7B           	ld a,e
 452+ 9469 AE           	xor (hl)
 453+ 946A 77           	ld (hl),a
 454+ 946B 24           	inc h
 455+ 946C 7C               ld a,h
 456+ 946D E6 07            and 7
 457+ 946F 20 0C            jr nz,2F
 458+ 9471 7D               ld a,l
 459+ 9472 C6 20            add a,$20
 460+ 9474 6F               ld l,a
 461+ 9475 38 06            jr c,2F
 462+ 9477 7C               ld a,h
 463+ 9478 D6 08            sub 8
 464+ 947A 67               ld h,a
 465+ 947B 18 00            jr 2F
 466+ 947D 7C           2 ld a,h
 467+ 947E FE 58            cp $58
 468+ 9480 28 02            jr z,3F
 469+ 9482 10 E3            djnz 1B
 470+ 9484 ED 7B 09 8B  3 ld sp,(Stack)
 471+ 9488 C9           	ret
 472+ 9489
 473+ 9489              ; ---------------------------------------------------
 474+ 9489
 475+ 9489 ED 73 09 8B  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 948D FD F9        	ld sp,iy
 477+ 948F 06 08            ld b,8
 478+ 9491 D1           1 pop de
 479+ 9492 7A           	ld a,d
 480+ 9493 AE           	xor (hl)
 481+ 9494 77           	ld (hl),a
 482+ 9495 23           	inc hl
 483+ 9496 D1           	pop de
 484+ 9497 7B           	ld a,e
 485+ 9498 AE           	xor (hl)
 486+ 9499 77           	ld (hl),a
 487+ 949A 2B           	dec hl
 488+ 949B 24            	inc h
 489+ 949C 7C               ld a,h
 490+ 949D E6 07            and 7
 491+ 949F 20 0A            jr nz,2F
 492+ 94A1 7D               ld a,l
 493+ 94A2 C6 20            add a,$20
 494+ 94A4 6F               ld l,a
 495+ 94A5 38 04            jr c,2F
 496+ 94A7 7C               ld a,h
 497+ 94A8 D6 08            sub 8
 498+ 94AA 67               ld h,a
 499+ 94AB 7C           2 ld a,h
 500+ 94AC FE 58            cp $58
 501+ 94AE 28 20            jr z,4F
 502+ 94B0 D1               pop de
 503+ 94B1 7B           	ld a,e
 504+ 94B2 AE           	xor (hl)
 505+ 94B3 77           	ld (hl),a
 506+ 94B4 23           	inc hl
 507+ 94B5 7A           	ld a,d
 508+ 94B6 AE           	xor (hl)
 509+ 94B7 77           	ld (hl),a
 510+ 94B8 2B           	dec hl
 511+ 94B9 24           	inc h
 512+ 94BA 7C               ld a,h
 513+ 94BB E6 07            and 7
 514+ 94BD 20 0A            jr nz,3F
 515+ 94BF 7D               ld a,l
 516+ 94C0 C6 20            add a,$20
 517+ 94C2 6F               ld l,a
 518+ 94C3 38 04            jr c,3F
 519+ 94C5 7C               ld a,h
 520+ 94C6 D6 08            sub 8
 521+ 94C8 67               ld h,a
 522+ 94C9 7C           3 ld a,h
 523+ 94CA FE 58            cp $58
 524+ 94CC 28 02            jr z,4F
 525+ 94CE 10 C1            djnz 1B
 526+ 94D0 ED 7B 09 8B  4 ld sp,(Stack)
 527+ 94D4 C9           	ret
 528+ 94D5
 529+ 94D5 ED 73 09 8B  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 94D9 FD F9        	ld sp,iy
 531+ 94DB 06 08            ld b,8
 532+ 94DD D1           1 pop de
 533+ 94DE D1           	pop de
 534+ 94DF 7B           	ld a,e
 535+ 94E0 AE           	xor (hl)
 536+ 94E1 77           	ld (hl),a
 537+ 94E2 24            	inc h
 538+ 94E3 7C               ld a,h
 539+ 94E4 E6 07            and 7
 540+ 94E6 20 0A            jr nz,2F
 541+ 94E8 7D               ld a,l
 542+ 94E9 C6 20            add a,$20
 543+ 94EB 6F               ld l,a
 544+ 94EC 38 04            jr c,2F
 545+ 94EE 7C               ld a,h
 546+ 94EF D6 08            sub 8
 547+ 94F1 67               ld h,a
 548+ 94F2 7C           2 ld a,h
 549+ 94F3 FE 58            cp $58
 550+ 94F5 28 1B            jr z,4F
 551+ 94F7 D1               pop de
 552+ 94F8 7A           	ld a,d
 553+ 94F9 AE           	xor (hl)
 554+ 94FA 77           	ld (hl),a
 555+ 94FB 24           	inc h
 556+ 94FC 7C               ld a,h
 557+ 94FD E6 07            and 7
 558+ 94FF 20 0A            jr nz,3F
 559+ 9501 7D               ld a,l
 560+ 9502 C6 20            add a,$20
 561+ 9504 6F               ld l,a
 562+ 9505 38 04            jr c,3F
 563+ 9507 7C               ld a,h
 564+ 9508 D6 08            sub 8
 565+ 950A 67               ld h,a
 566+ 950B 7C           3 ld a,h
 567+ 950C FE 58            cp $58
 568+ 950E 28 02            jr z,4F
 569+ 9510 10 CB            djnz 1B
 570+ 9512 ED 7B 09 8B  4 ld sp,(Stack)
 571+ 9516 C9           	ret
 572+ 9517
 573+ 9517 ED 73 09 8B  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 951B FD F9        	ld sp,iy
 575+ 951D 06 08            ld b,8
 576+ 951F D1           1 pop de
 577+ 9520 7B           	ld a,e
 578+ 9521 AE           	xor (hl)
 579+ 9522 77           	ld (hl),a
 580+ 9523 23           	inc hl
 581+ 9524 7A           	ld a,d
 582+ 9525 AE           	xor (hl)
 583+ 9526 77           	ld (hl),a
 584+ 9527 2B           	dec hl
 585+ 9528 24             	inc h
 586+ 9529 7C               ld a,h
 587+ 952A E6 07            and 7
 588+ 952C 20 0A            jr nz,2F
 589+ 952E 7D               ld a,l
 590+ 952F C6 20            add a,$20
 591+ 9531 6F               ld l,a
 592+ 9532 38 04            jr c,2F
 593+ 9534 7C               ld a,h
 594+ 9535 D6 08            sub 8
 595+ 9537 67               ld h,a
 596+ 9538 7C           2 ld a,h
 597+ 9539 FE 58            cp $58
 598+ 953B 28 21            jr z,4F
 599+ 953D D1               pop de
 600+ 953E 7A           	ld a,d
 601+ 953F AE           	xor (hl)
 602+ 9540 77           	ld (hl),a
 603+ 9541 23           	inc hl
 604+ 9542 D1               pop de
 605+ 9543 7B           	ld a,e
 606+ 9544 AE           	xor (hl)
 607+ 9545 77           	ld (hl),a
 608+ 9546 2B           	dec hl
 609+ 9547 24           	inc h
 610+ 9548 7C               ld a,h
 611+ 9549 E6 07            and 7
 612+ 954B 20 0A            jr nz,3F
 613+ 954D 7D               ld a,l
 614+ 954E C6 20            add a,$20
 615+ 9550 6F               ld l,a
 616+ 9551 38 04            jr c,3F
 617+ 9553 7C               ld a,h
 618+ 9554 D6 08            sub 8
 619+ 9556 67               ld h,a
 620+ 9557 7C           3 ld a,h
 621+ 9558 FE 58            cp $58
 622+ 955A 28 02            jr z,4F
 623+ 955C 10 C1            djnz 1B
 624+ 955E ED 7B 09 8B  4 ld sp,(Stack)
 625+ 9562 C9           	ret
 626+ 9563
 627+ 9563 ED 73 09 8B  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 9567 FD F9        	ld sp,iy
 629+ 9569 06 08            ld b,8
 630+ 956B D1           1 pop de
 631+ 956C 7B           	ld a,e
 632+ 956D AE           	xor (hl)
 633+ 956E 77           	ld (hl),a
 634+ 956F 24            	inc h
 635+ 9570 7C               ld a,h
 636+ 9571 E6 07            and 7
 637+ 9573 20 0A            jr nz,2F
 638+ 9575 7D               ld a,l
 639+ 9576 C6 20            add a,$20
 640+ 9578 6F               ld l,a
 641+ 9579 38 04            jr c,2F
 642+ 957B 7C               ld a,h
 643+ 957C D6 08            sub 8
 644+ 957E 67               ld h,a
 645+ 957F 7C           2 ld a,h
 646+ 9580 FE 58            cp $58
 647+ 9582 28 1C            jr z,4F
 648+ 9584 D1               pop de
 649+ 9585 7A           	ld a,d
 650+ 9586 AE           	xor (hl)
 651+ 9587 77           	ld (hl),a
 652+ 9588 24           	inc h
 653+ 9589 7C               ld a,h
 654+ 958A E6 07            and 7
 655+ 958C 20 0A            jr nz,3F
 656+ 958E 7D               ld a,l
 657+ 958F C6 20            add a,$20
 658+ 9591 6F               ld l,a
 659+ 9592 38 04            jr c,3F
 660+ 9594 7C               ld a,h
 661+ 9595 D6 08            sub 8
 662+ 9597 67               ld h,a
 663+ 9598 7C           3 ld a,h
 664+ 9599 FE 58            cp $58
 665+ 959B 28 03            jr z,4F
 666+ 959D D1               pop de
 667+ 959E 10 CB            djnz 1B
 668+ 95A0 ED 7B 09 8B  4 ld sp,(Stack)
 669+ 95A4 C9           	ret
 670+ 95A5
 671+ 95A5              ; ---------------------------------------------------
 672+ 95A5              ;
 673+ 95A5              ;   27/02/23
 674+ 95A5              ;
 675+ 95A5              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 95A5              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 95A5              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 95A5
 679+ 95A5 ED 73 09 8B  Pinta_Disparo ld (Stack),sp
 680+ 95A9 FD F9            ld sp,iy
 681+ 95AB 06 03            ld b,3
 682+ 95AD D1           1 pop de
 683+ 95AE 7B               ld a,e
 684+ 95AF AE               xor (hl)
 685+ 95B0 77               ld (hl),a
 686+ 95B1 23               inc hl
 687+ 95B2 7A               ld a,d
 688+ 95B3 AE               xor (hl)
 689+ 95B4 77               ld (hl),a
 690+ 95B5 2B               dec hl
 691+ 95B6
 692+ 95B6 24               inc h
 693+ 95B7 7C               ld a,h
 694+ 95B8 E6 07            and 7
 695+ 95BA 20 0A            jr nz,2F
 696+ 95BC 7D               ld a,l
 697+ 95BD C6 20            add a,$20
 698+ 95BF 6F               ld l,a
 699+ 95C0 38 04            jr c,2F
 700+ 95C2 7C               ld a,h
 701+ 95C3 D6 08            sub 8
 702+ 95C5 67               ld h,a
 703+ 95C6 7C           2 ld a,h
 704+ 95C7 FE 58            cp $58
 705+ 95C9 28 02            jr z,3F
 706+ 95CB
 707+ 95CB 10 E0            djnz 1B
 708+ 95CD ED 7B 09 8B  3 ld sp,(Stack)
 709+ 95D1 C9               ret
 710+ 95D2
# file closed: Rutinas_de_impresion_sprites.asm
1808  95D2              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 95D2
   2+ 95D2              ; ******************************************************************************************************************************************************************************************
   3+ 95D2              ;
   4+ 95D2              ;   20/05/23
   5+ 95D2              ;
   6+ 95D2              ;	Recompone_posicion_inicio
   7+ 95D2              ;
   8+ 95D2              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 95D2              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 95D2              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 95D2              ;	_ a una u otra rutina.
  12+ 95D2
  13+ 95D2              Recompone_posicion_inicio
  14+ 95D2
  15+ 95D2 2A C9 8A     	ld hl,(Posicion_inicio)
  16+ 95D5 7D           	ld a,l
  17+ 95D6 E6 1F        	and $1f
  18+ 95D8 28 16        	jr z,1F
  19+ 95DA
  20+ 95DA FE 1F        	cp $1f
  21+ 95DC 28 0D        	jr z,3F
  22+ 95DE
  23+ 95DE 21 DE 8A     	ld hl,Ctrl_2
  24+ 95E1 CB C6        	set 0,(hl)
  25+ 95E3 2A BB 8A     	ld hl,(Puntero_objeto)
  26+ 95E6 22 F9 8A     	ld (Repone_puntero_objeto),hl
  27+ 95E9 18 08        	jr 2F
  28+ 95EB
  29+ 95EB CD 99 97     3 call Mov_left
  30+ 95EE 18 03        	jr 2F
  31+ 95F0
  32+ 95F0 CD 76 96     1 call Mov_right
  33+ 95F3 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 95F6 22 BB 8A     	ld (Puntero_objeto),hl
  35+ 95F9 C9           	ret
  36+ 95FA
  37+ 95FA              ; ******************************************************************************************************************************************************************************************
  38+ 95FA              ;
  39+ 95FA              ;   27/05/23
  40+ 95FA              ;
  41+ 95FA              ;	Mov_down
  42+ 95FA              ;
  43+ 95FA              ; 	Mueve el Sprite X px hacia abajo.
  44+ 95FA              ;
  45+ 95FA              ;
  46+ 95FA              Mov_down
  47+ 95FA
  48+ 95FA CD 64 96     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 95FD              ;																	; _ repone (Puntero_objeto).
  50+ 95FD 21 D9 8A     	ld hl,Ctrl_0
  51+ 9600 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9602              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9602              ; 																	; _ en el caso de que no lo haya.
  54+ 9602 3A E3 8A     	ld a,(Vel_down)
  55+ 9605 47           	ld b,a
  56+ 9606 2A B9 8A         ld hl,(Posicion_actual)
  57+ 9609 CD D5 9A     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 960C E6 02        	and 2
  59+ 960E 28 17        	jr z,1F
  60+ 9610
  61+ 9610              ; Nos encontramos en el último tercio de pantalla.
  62+ 9610              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9610
  64+ 9610 7C           	ld a,h
  65+ 9611 FE 57        	cp $57
  66+ 9613 20 12        	jr nz,1F
  67+ 9615
  68+ 9615 7D           	ld a,l
  69+ 9616 C6 20        	add $20
  70+ 9618 30 0D        	jr nc,1F
  71+ 961A
  72+ 961A              ; ------------------------------
  73+ 961A              ;
  74+ 961A              ;	12/01/24
  75+ 961A
  76+ 961A              ;	call Reaparece_arriba
  77+ 961A CD 26 99     	call Reinicio
  78+ 961D
  79+ 961D              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 961D
  81+ 961D 3A 17 8B     	ld a,(Ctrl_3)
  82+ 9620 CB CF        	set 1,a
  83+ 9622 32 17 8B     	ld (Ctrl_3),a
  84+ 9625
  85+ 9625 18 08        	jr 3F
  86+ 9627              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9627              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9627              ; ------------------------------
  89+ 9627
  90+ 9627 CD 5C 92     1 call NextScan
  91+ 962A 22 B9 8A     	ld (Posicion_actual),hl
  92+ 962D 10 DA            djnz 2B
  93+ 962F CD F3 9A     3 call Genera_coordenadas
  94+ 9632 C9           	ret
  95+ 9633
  96+ 9633              ; ******************************************************************************************************************************************************************************************
  97+ 9633              ;
  98+ 9633              ;   27/05/23
  99+ 9633              ;
 100+ 9633              ;	Mov_up
 101+ 9633              ;
 102+ 9633              ; 	Mueve el Sprite hacia arriba.
 103+ 9633              ;
 104+ 9633              ;
 105+ 9633              Mov_up
 106+ 9633
 107+ 9633 CD 64 96     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9636              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9636 21 D9 8A     	ld hl,Ctrl_0
 110+ 9639 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 963B              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 963B              ; 																		; _ en el caso de que no lo haya.
 113+ 963B 3A E2 8A     	ld a,(Vel_up)
 114+ 963E 47           	ld b,a
 115+ 963F 2A B9 8A     	ld hl,(Posicion_actual)
 116+ 9642 CD D5 9A     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9645 A7           	and a
 118+ 9646 20 10        	jr nz,1F
 119+ 9648
 120+ 9648              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9648              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9648
 123+ 9648 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9649 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 964B 20 0B            jr nz,1F
 126+ 964D 7D               ld a,l
 127+ 964E D6 20            sub $20
 128+ 9650 30 06            jr nc,1F
 129+ 9652 25               dec h
 130+ 9653
 131+ 9653              ; -----------------------------
 132+ 9653 CD 07 99         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9656              ;	call Reinicio
 134+ 9656              ; -----------------------------
 135+ 9656
 136+ 9656 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9658 CD 6B 92     1 call PreviousScan
 138+ 965B 22 B9 8A     	ld (Posicion_actual),hl
 139+ 965E 10 E2            djnz 3B
 140+ 9660 CD F3 9A     2 call Genera_coordenadas
 141+ 9663 C9           	ret
 142+ 9664
 143+ 9664              ; -----------------------------
 144+ 9664              ;
 145+ 9664              ;	27/5/23
 146+ 9664              ;
 147+ 9664              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9664              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9664              ;
 150+ 9664              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9664              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9664              ;
 153+ 9664              ;	Modifica: A y (Puntero_objeto).
 154+ 9664
 155+ 9664 3A DE 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9667 CB 47        	bit 0,a
 157+ 9669 C8           	ret z
 158+ 966A CB 87        	res 0,a
 159+ 966C 32 DE 8A     	ld (Ctrl_2),a
 160+ 966F 2A F9 8A     	ld hl,(Repone_puntero_objeto)
 161+ 9672 22 BB 8A     	ld (Puntero_objeto),hl
 162+ 9675 C9           	ret
 163+ 9676
 164+ 9676              ; ******************************************************************************************************************************************************************************************
 165+ 9676              ;
 166+ 9676              ;	19/10/22
 167+ 9676              ;
 168+ 9676              ;	Mov_right.
 169+ 9676              ;
 170+ 9676              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9676              ;
 172+ 9676
 173+ 9676 3A D9 8A     Mov_right ld a,(Ctrl_0)
 174+ 9679 CB 77        	bit 6,a
 175+ 967B 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 967D
 177+ 967D CD B5 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9680 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9681
 180+ 9681 21 D9 8A     	ld hl,Ctrl_0
 181+ 9684 CB E6        	set 4,(hl)
 182+ 9686 18 52        	jr 8F
 183+ 9688
 184+ 9688 21 D9 8A     10 ld hl,Ctrl_0
 185+ 968B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 968D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 968D              ; 																	; _ en el caso de que no lo haya.
 188+ 968D 3A BD 8A     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9690 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9692 20 46        	jr nz,8F
 191+ 9694
 192+ 9694 3A BF 8A     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9697 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9698 28 40        	jr z,8F
 195+ 969A
 196+ 969A              ; ---------- ---------- ----------
 197+ 969A              ;
 198+ 969A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 969A
 200+ 969A 3A E1 8A     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 969D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 969F 28 11        	jr z,1F
 203+ 96A1 38 06        	jr c,6F
 204+ 96A3 FE 04        	cp 4
 205+ 96A5 28 14        	jr z,7F
 206+ 96A7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 96A9
 208+ 96A9              ; ---------- ---------- ----------
 209+ 96A9              ;
 210+ 96A9              ; Perfiles de velocidad
 211+ 96A9              ;
 212+ 96A9
 213+ 96A9 3A BF 8A     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 96AC FE FE        	cp $fe
 215+ 96AE 20 2A        	jr nz,8F
 216+ 96B0 18 10        	jr 3F
 217+ 96B2 3A BF 8A     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 96B5 FE FD        	cp $fd
 219+ 96B7 20 21        	jr nz,8F
 220+ 96B9 18 07        	jr 3F
 221+ 96BB 3A BF 8A     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 96BE FE FB        	cp $fb
 223+ 96C0 20 18        	jr nz,8F
 224+ 96C2
 225+ 96C2              ; ---------- ---------- ----------
 226+ 96C2
 227+ 96C2              3
 228+ 96C2 CD F5 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 96C5              ;	call Reinicio
 230+ 96C5
 231+ 96C5              ; ---------- ---------- ----------
 232+ 96C5              ;
 233+ 96C5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 96C5
 235+ 96C5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 96C7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 96C8 CD E1 96     	call DESPLZ_DER
 238+ 96CB C1           	pop bc
 239+ 96CC 10 F9        	djnz 5B
 240+ 96CE 2A B9 8A     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 96D1 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 96D2 22 B9 8A     	ld (Posicion_actual),hl
 243+ 96D5 CD F3 9A     	call Genera_coordenadas
 244+ 96D8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 96DA
 246+ 96DA              ; ---------- ---------- ----------
 247+ 96DA
 248+ 96DA 2A B9 8A     8 ld hl,(Posicion_actual)
 249+ 96DD CD E1 96     	call DESPLZ_DER
 250+ 96E0 C9           2 ret
 251+ 96E1
 252+ 96E1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 96E1              ;
 254+ 96E1              ;	22/9/22
 255+ 96E1              ;
 256+ 96E1
 257+ 96E1 CD F0 96     DESPLZ_DER call Desplaza_derecha
 258+ 96E4 CD 3C 97         call modifica_parametros_1er_DESPLZ_2
 259+ 96E7 CD 65 97         call Ciclo_completo
 260+ 96EA 21 D9 8A     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 96ED CB FE        	set 7,(hl)
 262+ 96EF C9           	ret
 263+ 96F0
 264+ 96F0              ; ******************************************************************************************************************************************************************************************
 265+ 96F0              ;	15/02/23
 266+ 96F0              ;
 267+ 96F0
 268+ 96F0 3A E1 8A     Desplaza_derecha ld a,(Vel_right)
 269+ 96F3 47           	ld b,a
 270+ 96F4 2A C5 8A     	ld hl,(Puntero_DESPLZ_der)
 271+ 96F7 23           1 inc hl
 272+ 96F8 23           	inc hl
 273+ 96F9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 96FB 22 C5 8A     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 96FE CD CE 8C     	call Extrae_address
 276+ 9701 22 BB 8A     	ld (Puntero_objeto),hl
 277+ 9704
 278+ 9704              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9704
 280+ 9704              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9704              ; Cuántos movimientos hemos hecho ??
 282+ 9704              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9704
 284+ 9704 2A C1 8A     7 ld hl,(Indice_Sprite_der)
 285+ 9707 EB           	ex de,hl
 286+ 9708 A7           	and a
 287+ 9709 ED 52        	sbc hl,de
 288+ 970B CB 3D        	srl l
 289+ 970D 3E 08        6 ld a,8
 290+ 970F 95           	sub l
 291+ 9710 30 1E        	jr nc,3F
 292+ 9712
 293+ 9712              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9712              ; B="0".
 295+ 9712
 296+ 9712 04           4 inc b
 297+ 9713 3C           	inc a
 298+ 9714 20 FC        	jr nz,4B
 299+ 9716 78           	ld a,b
 300+ 9717 08           	ex af,af
 301+ 9718 2A C1 8A     	ld hl,(Indice_Sprite_der)
 302+ 971B 23           5 inc hl
 303+ 971C 23           	inc hl
 304+ 971D 10 FC        	djnz 5B
 305+ 971F 22 C5 8A     	ld (Puntero_DESPLZ_der),hl
 306+ 9722 CD CE 8C     	call Extrae_address
 307+ 9725 22 BB 8A     	ld (Puntero_objeto),hl
 308+ 9728
 309+ 9728              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9728              ; _(Posicion_actual).
 311+ 9728
 312+ 9728 21 B9 8A     	ld hl,Posicion_actual
 313+ 972B 34           	inc (hl)
 314+ 972C 08               ex af,af
 315+ 972D 6F           	ld l,a
 316+ 972E 18 DD        	jr 6B
 317+ 9730
 318+ 9730              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9730
 320+ 9730 47           3 ld b,a
 321+ 9731 2A C3 8A     	ld hl,(Indice_Sprite_izq)
 322+ 9734 23           2 inc hl
 323+ 9735 23           	inc hl
 324+ 9736 10 FC        	djnz 2B
 325+ 9738 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
 326+ 973B C9           8 ret
 327+ 973C
 328+ 973C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 973C              ;
 330+ 973C              ;	24/7/22
 331+ 973C              ;
 332+ 973C              ;	modifica_parametros_1er_DESPLZ_2
 333+ 973C              ;
 334+ 973C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 973C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 973C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 973C
 338+ 973C 3A BF 8A     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 973F A7           	and a
 340+ 9740 20 1F        	jr nz,1F
 341+ 9742 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9744 32 BF 8A         ld (CTRL_DESPLZ),a
 343+ 9747
 344+ 9747 21 B8 8A     	ld hl,Columns
 345+ 974A 34           	inc (hl)
 346+ 974B 3A CB 8A     	ld a,(Cuad_objeto)
 347+ 974E E6 01        	and 1
 348+ 9750 28 0F        	jr z,1F
 349+ 9752 2A B9 8A     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9755 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9756 22 B9 8A     	ld (Posicion_actual),hl
 352+ 9759 CD F3 9A     	call Genera_coordenadas
 353+ 975C CD C1 98     	call Inc_CTRL_DESPLZ
 354+ 975F 18 03        	jr 2F
 355+ 9761 CD C1 98     1 call Inc_CTRL_DESPLZ
 356+ 9764 C9           2 ret
 357+ 9765
 358+ 9765              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9765              ;
 360+ 9765              ;	24/7/22
 361+ 9765              ;
 362+ 9765              ;	Ciclo_completo.
 363+ 9765              ;
 364+ 9765              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9765              ;
 366+ 9765              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9765              ; 	Decrementamos (Columns).
 368+ 9765              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9765              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9765
 371+ 9765
 372+ 9765 3A BF 8A     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9768 FE FF        	cp $ff
 374+ 976A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 976C E6 F0        	and $f0
 376+ 976E 20 28        	jr nz,3F
 377+ 9770
 378+ 9770              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9770
 380+ 9770 3A BF 8A     	ld a,(CTRL_DESPLZ)
 381+ 9773 47           	ld b,a
 382+ 9774 3E F8        	ld a,$f8
 383+ 9776 80           	add b
 384+ 9777 32 BF 8A     	ld (CTRL_DESPLZ),a
 385+ 977A 18 1C        	jr 3F
 386+ 977C 21 B8 8A     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 977F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9780 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9781 32 BF 8A     	ld (CTRL_DESPLZ),a
 390+ 9784 3A CB 8A     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9787 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9789 20 0A        	jr nz,2F
 393+ 978B 2A B9 8A     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 978E 23           	inc hl
 395+ 978F 22 B9 8A     	ld (Posicion_actual),hl
 396+ 9792 CD F3 9A     	call Genera_coordenadas
 397+ 9795
 398+ 9795              ; Inicia el puntero de Sprite.
 399+ 9795
 400+ 9795 CD E3 8C     2 call Inicia_puntero_objeto_der
 401+ 9798 C9           3 ret
 402+ 9799
 403+ 9799              ; ******************************************************************************************************************************************************************************************
 404+ 9799              ;
 405+ 9799              ;	15/02/23
 406+ 9799              ;
 407+ 9799              ;	Mov_left.
 408+ 9799              ;
 409+ 9799              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9799              ;
 411+ 9799              Mov_left
 412+ 9799
 413+ 9799 21 D9 8A     	ld hl,Ctrl_0
 414+ 979C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 979E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 979E              ; 																	; _ en el caso de que no lo haya.
 417+ 979E 3A D9 8A     	ld a,(Ctrl_0)
 418+ 97A1 CB 77        	bit 6,a
 419+ 97A3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 97A5
 421+ 97A5 CD BB 98     	call Stop_Amadeus_left
 422+ 97A8 C8           	ret z
 423+ 97A9 20 4A        	jr nz,8F
 424+ 97AB
 425+ 97AB 3A BD 8A     11 ld a,(Coordenada_X)
 426+ 97AE A7           	and a
 427+ 97AF 20 44        	jr nz,8F
 428+ 97B1
 429+ 97B1 3A BF 8A     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 97B4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 97B5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 97B7
 433+ 97B7              ; ---------- ---------- ----------
 434+ 97B7
 435+ 97B7 3A E0 8A     	ld a,(Vel_left)
 436+ 97BA FE 02        	cp 2
 437+ 97BC 28 0F        	jr z,1F
 438+ 97BE 38 04        	jr c,6F
 439+ 97C0 FE 04        	cp 4
 440+ 97C2 28 12        	jr z,7F
 441+ 97C4
 442+ 97C4              ; ---------- ---------- ----------
 443+ 97C4
 444+ 97C4 3A BF 8A     6 ld a,(CTRL_DESPLZ)
 445+ 97C7 FE F8        	cp $f8
 446+ 97C9 20 2A        	jr nz,8F
 447+ 97CB 18 10        	jr 4F
 448+ 97CD 3A BF 8A     1 ld a,(CTRL_DESPLZ)
 449+ 97D0 FE F9        	cp $f9
 450+ 97D2 20 21        	jr nz,8F
 451+ 97D4 18 07        	jr 4F
 452+ 97D6 3A BF 8A     7 ld a,(CTRL_DESPLZ)
 453+ 97D9 FE FB        	cp $fb
 454+ 97DB 20 18        	jr nz,8F
 455+ 97DD
 456+ 97DD              ; ---------- ---------- ----------
 457+ 97DD
 458+ 97DD              4
 459+ 97DD CD E3 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 97E0              ;	call Reinicio
 461+ 97E0
 462+ 97E0              ; ---------- ---------- ----------
 463+ 97E0
 464+ 97E0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 97E2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 97E3
 467+ 97E3              ;	ld hl,(Indice_Sprite_izq)
 468+ 97E3              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 97E3
 470+ 97E3 CD FC 97     	call DESPLZ_IZQ
 471+ 97E6 C1           	pop bc
 472+ 97E7 10 F9        	djnz 5B
 473+ 97E9 2A B9 8A     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 97EC 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 97ED 22 B9 8A     	ld (Posicion_actual),hl
 476+ 97F0 CD F3 9A     	call Genera_coordenadas
 477+ 97F3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 97F5
 479+ 97F5              ; ---------- ---------- ----------
 480+ 97F5
 481+ 97F5              ; Movemos, no hay recolocación.
 482+ 97F5
 483+ 97F5 2A B9 8A     8 ld hl,(Posicion_actual)
 484+ 97F8 CD FC 97     	call DESPLZ_IZQ
 485+ 97FB C9           2 ret
 486+ 97FC
 487+ 97FC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 97FC              ;
 489+ 97FC              ;	22/9/22
 490+ 97FC
 491+ 97FC              DESPLZ_IZQ
 492+ 97FC
 493+ 97FC CD 0B 98     	call Desplaza_izquierda
 494+ 97FF CD 57 98         call modifica_parametros_1er_DESPLZ
 495+ 9802 CD 7F 98     	call Ciclo_completo_2
 496+ 9805 21 D9 8A     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9808 CB BE        	res 7,(hl)
 498+ 980A C9           	ret
 499+ 980B
 500+ 980B              Desplaza_izquierda
 501+ 980B
 502+ 980B 3A E0 8A     	ld a,(Vel_left)
 503+ 980E 47           	ld b,a
 504+ 980F 2A C7 8A     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9812 23           1 inc hl
 506+ 9813 23           	inc hl
 507+ 9814 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9816 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
 509+ 9819 CD CE 8C     	call Extrae_address
 510+ 981C 22 BB 8A     	ld (Puntero_objeto),hl
 511+ 981F
 512+ 981F              ; Modifica (Puntero_DESPLZ_der).
 513+ 981F
 514+ 981F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 981F              ; Cuántos movimientos hemos hecho ??
 516+ 981F              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 981F
 518+ 981F 2A C3 8A     7 ld hl,(Indice_Sprite_izq)
 519+ 9822 EB           	ex de,hl
 520+ 9823 A7           	and a
 521+ 9824 ED 52        	sbc hl,de
 522+ 9826 CB 3D        	srl l
 523+ 9828 3E 08        6 ld a,8
 524+ 982A 95           	sub l
 525+ 982B 30 1E        	jr nc,3F
 526+ 982D
 527+ 982D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 982D              ; B="0".
 529+ 982D
 530+ 982D 04           4 inc b
 531+ 982E 3C           	inc a
 532+ 982F 20 FC        	jr nz,4B
 533+ 9831 78           	ld a,b
 534+ 9832 08           	ex af,af
 535+ 9833 2A C3 8A     	ld hl,(Indice_Sprite_izq)
 536+ 9836 23           5 inc hl
 537+ 9837 23           	inc hl
 538+ 9838 10 FC        	djnz 5B
 539+ 983A 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
 540+ 983D CD CE 8C     	call Extrae_address
 541+ 9840 22 BB 8A     	ld (Puntero_objeto),hl
 542+ 9843
 543+ 9843              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9843              ; _(Posicion_actual).
 545+ 9843
 546+ 9843 21 B9 8A     	ld hl,Posicion_actual
 547+ 9846 35           	dec (hl)
 548+ 9847 08           	ex af,af
 549+ 9848 6F           	ld l,a
 550+ 9849 18 DD        	jr 6B
 551+ 984B
 552+ 984B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 984B
 554+ 984B 47           3 ld b,a
 555+ 984C 2A C1 8A     	ld hl,(Indice_Sprite_der)
 556+ 984F 23           2 inc hl
 557+ 9850 23           	inc hl
 558+ 9851 10 FC        	djnz 2B
 559+ 9853 22 C5 8A     	ld (Puntero_DESPLZ_der),hl
 560+ 9856 C9           8 ret
 561+ 9857
 562+ 9857              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9857              ;
 564+ 9857              ;	modifica_parametros_1er_DESPLZ
 565+ 9857              ;
 566+ 9857              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9857              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9857              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9857
 570+ 9857 3A BF 8A     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 985A A7           	and a
 572+ 985B 20 1E        	jr nz,1F
 573+ 985D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 985E 32 BF 8A         ld (CTRL_DESPLZ),a
 575+ 9861 21 B8 8A     	ld hl,Columns
 576+ 9864 34           	inc (hl)
 577+ 9865 3A CB 8A     	ld a,(Cuad_objeto)
 578+ 9868 E6 01        	and 1
 579+ 986A 20 0F        	jr nz,1F
 580+ 986C 2A B9 8A     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 986F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9870 22 B9 8A     	ld (Posicion_actual),hl
 583+ 9873 CD F3 9A     	call Genera_coordenadas
 584+ 9876 CD D2 98     	call Dec_CTRL_DESPLZ
 585+ 9879 18 03        	jr 2F
 586+ 987B CD D2 98     1 call Dec_CTRL_DESPLZ
 587+ 987E C9           2 ret
 588+ 987F
 589+ 987F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 987F
 591+ 987F 3A BF 8A     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9882 FE F7        	cp $f7
 593+ 9884 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9886 30 2C        	jr nc,3F
 595+ 9888
 596+ 9888              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9888
 598+ 9888 06 00        	ld b,0
 599+ 988A 04           4 inc b
 600+ 988B 3C           	inc a
 601+ 988C FE F7        	cp $f7
 602+ 988E 20 FA        	jr nz,4B
 603+ 9890 3E FF        	ld a,$ff
 604+ 9892 90           	sub b
 605+ 9893 32 BF 8A     	ld (CTRL_DESPLZ),a
 606+ 9896 18 1C        	jr 3F
 607+ 9898
 608+ 9898              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9898
 610+ 9898 21 B8 8A     1 ld hl,Columns
 611+ 989B 35           	dec (hl)
 612+ 989C AF           	xor a
 613+ 989D 32 BF 8A     	ld (CTRL_DESPLZ),a
 614+ 98A0 3A CB 8A     	ld a,(Cuad_objeto)
 615+ 98A3 E6 01        	and 1
 616+ 98A5 28 0A        	jr z,2F
 617+ 98A7 2A B9 8A     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 98AA 2B           	dec hl
 619+ 98AB 22 B9 8A     	ld (Posicion_actual),hl
 620+ 98AE CD F3 9A     	call Genera_coordenadas
 621+ 98B1
 622+ 98B1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 98B1
 624+ 98B1 CD F6 8C     2 call Inicia_puntero_objeto_izq
 625+ 98B4 C9           3 ret
 626+ 98B5
 627+ 98B5              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 98B5              ;
 629+ 98B5              ;	19/10/22
 630+ 98B5              ;
 631+ 98B5              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 98B5              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 98B5
 634+ 98B5 3A BD 8A     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 98B8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 98BA C9           	ret
 637+ 98BB
 638+ 98BB              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 98BB              ;
 640+ 98BB              ;	19/10/22
 641+ 98BB              ;
 642+ 98BB              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 98BB              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 98BB
 645+ 98BB 3A BD 8A     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 98BE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 98C0 C9           	ret
 648+ 98C1
 649+ 98C1              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 98C1              ;
 651+ 98C1              ;	24/7/22
 652+ 98C1              ;
 653+ 98C1              ;	Inc_CTRL_DESPLZ
 654+ 98C1              ;
 655+ 98C1              ;
 656+ 98C1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 98C1
 658+ 98C1 21 BF 8A     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 98C4 3A E1 8A     	ld a,(Vel_right)
 660+ 98C7 A7           	and a
 661+ 98C8 28 06        	jr z,1F
 662+ 98CA 47           	ld b,a
 663+ 98CB 34           3 inc (hl)
 664+ 98CC 10 FD        	djnz 3B
 665+ 98CE 18 01        	jr 2F
 666+ 98D0 34           1 inc (hl)
 667+ 98D1 C9           2 ret
 668+ 98D2
 669+ 98D2              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 98D2              ;
 671+ 98D2              ;	5/2/23
 672+ 98D2              ;
 673+ 98D2              ;	Dec_CTRL_DESPLZ
 674+ 98D2              ;
 675+ 98D2              ;
 676+ 98D2              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 98D2
 678+ 98D2 21 BF 8A     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 98D5 3A E0 8A     	ld a,(Vel_left)
 680+ 98D8 A7           	and a
 681+ 98D9 28 06        	jr z,1F
 682+ 98DB 47           	ld b,a
 683+ 98DC 35           3 dec (hl)
 684+ 98DD 10 FD        	djnz 3B
 685+ 98DF 18 01        	jr 2F
 686+ 98E1 35           1 dec (hl)
 687+ 98E2 C9           2 ret
 688+ 98E3
 689+ 98E3              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 98E3
 691+ 98E3 2A B9 8A     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 98E6 01 1F 00     	ld bc,31
 693+ 98E9 A7           	and a
 694+ 98EA ED 4A        	adc hl,bc
 695+ 98EC 22 B9 8A     	ld (Posicion_actual),hl
 696+ 98EF 21 D9 8A     	ld hl,Ctrl_0														; $xxx1
 697+ 98F2 CB C6        	set 0,(hl)
 698+ 98F4 C9           	ret
 699+ 98F5
 700+ 98F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 98F5
 702+ 98F5 2A B9 8A     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 98F8 01 1F 00     	ld bc,31
 704+ 98FB A7           	and a
 705+ 98FC ED 42        	sbc hl,bc
 706+ 98FE 22 B9 8A     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9901 21 D9 8A     	ld hl,Ctrl_0
 708+ 9904 CB CE        	set 1,(hl)
 709+ 9906 C9           	ret
 710+ 9907
 711+ 9907              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9907
 713+ 9907 24           Reaparece_abajo inc h
 714+ 9908 01 E0 17     	ld bc,$17e0
 715+ 990B A7           	and a
 716+ 990C ED 4A        	adc hl,bc
 717+ 990E 22 B9 8A     	ld (Posicion_actual),hl
 718+ 9911 21 D9 8A     	ld hl,Ctrl_0
 719+ 9914 CB D6        	set 2,(hl)
 720+ 9916 C9           	ret
 721+ 9917
 722+ 9917              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9917
 724+ 9917 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 991A A7           	and a
 726+ 991B ED 42        	sbc hl,bc
 727+ 991D 22 B9 8A     	ld (Posicion_actual),hl
 728+ 9920 21 D9 8A     	ld hl,Ctrl_0
 729+ 9923 CB DE        	set 3,(hl)
 730+ 9925 C9           	ret
 731+ 9926
 732+ 9926              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9926              ;
 734+ 9926              ;	15/07/23
 735+ 9926
 736+ 9926              Reinicio
 737+ 9926
 738+ 9926              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9926
 740+ 9926 AF           	xor a
 741+ 9927 21 F0 8A     	ld hl,Puntero_indice_mov_bucle
 742+ 992A CD 48 99     	call Limpia_contenido_hl
 743+ 992D
 744+ 992D 21 B9 8A     	ld hl,Posicion_actual
 745+ 9930 CD 48 99     	call Limpia_contenido_hl
 746+ 9933
 747+ 9933 CD 91 8D     	call Inicializa_Puntero_indice_mov
 748+ 9936 CD 14 9A     	call Inicia_Puntero_mov
 749+ 9939
 750+ 9939 21 F2 8A     	ld hl,Incrementa_puntero
 751+ 993C 06 05        	ld b,5
 752+ 993E 77           1 ld (hl),a
 753+ 993F 23           	inc hl
 754+ 9940 10 FC        	djnz 1B
 755+ 9942
 756+ 9942 21 DE 8A     	ld hl,Ctrl_2
 757+ 9945 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9947
 759+ 9947 C9           	ret
 760+ 9948
 761+ 9948 77           Limpia_contenido_hl	ld (hl),a
 762+ 9949 23           	inc hl
 763+ 994A 77           	ld (hl),a
 764+ 994B C9           	ret
 765+ 994C
 766+ 994C
# file closed: Direcciones.asm
1809  994C              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 994C              ; ----- ----- ----- ----- -----
   2+ 994C              ;
   3+ 994C              ;   28/12/23
   4+ 994C
   5+ 994C              Movimiento
   6+ 994C
   7+ 994C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 994C
   9+ 994C 3A DE 8A         ld a,(Ctrl_2)
  10+ 994F CB 57            bit 2,a
  11+ 9951 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9953
  13+ 9953 2A EE 8A         ld hl,(Puntero_mov)
  14+ 9956 7E               ld a,(hl)
  15+ 9957
  16+ 9957              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9957
  18+ 9957              Inicia_desplazamiento.
  19+ 9957
  20+ 9957              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9957
  22+ 9957 CD 4A 9A         call Ajusta_velocidad_desplazamiento
  23+ 995A
  24+ 995A              ; Iniciamos (Repetimos_mov).
  25+ 995A
  26+ 995A 7E               ld a,(hl)
  27+ 995B E6 0F            and $0f
  28+ 995D 32 F4 8A         ld (Repetimos_desplazamiento),a
  29+ 9960 32 F5 8A         ld (Repetimos_desplazamiento_backup),a
  30+ 9963
  31+ 9963              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9963
  33+ 9963 23               inc hl
  34+ 9964 7E               ld a,(hl)
  35+ 9965 32 F7 8A         ld (Cola_de_desplazamiento),a
  36+ 9968 2B               dec hl
  37+ 9969
  38+ 9969 21 DE 8A         ld hl,Ctrl_2
  39+ 996C CB D6            set 2,(hl)
  40+ 996E
  41+ 996E              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 996E              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 996E
  44+ 996E              Desplazamiento_iniciado
  45+ 996E
  46+ 996E CD 1E 9A         call Aplica_desplazamiento
  47+ 9971
  48+ 9971              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9971
  50+ 9971 3A 17 8B         ld a,(Ctrl_3)
  51+ 9974 CB 4F            bit 1,a
  52+ 9976 C0               ret nz
  53+ 9977
  54+ 9977 21 F4 8A     3 ld hl,Repetimos_desplazamiento
  55+ 997A 35               dec (hl)
  56+ 997B C0               ret nz
  57+ 997C
  58+ 997C              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 997C              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 997C              ; Analiza (Cola_de_desplazamiento).
  61+ 997C
  62+ 997C 3A F7 8A     Cola ld a,(Cola_de_desplazamiento)
  63+ 997F A7               and a
  64+ 9980 CC 73 9A         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9983 28 30            jr z,Reinicia_el_movimiento
  66+ 9985
  67+ 9985 FE FF            cp $ff
  68+ 9987 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9989
  70+ 9989 FE FE            cp $fe
  71+ 998B CC F8 99         call z,Fijamos_bucle
  72+ 998E 28 25            jr z,Reinicia_el_movimiento
  73+ 9990
  74+ 9990 FE FD            cp $fd
  75+ 9992 20 11            jr nz,1F
  76+ 9994
  77+ 9994              ; ---
  78+ 9994              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9994
  80+ 9994 3A DE 8A         ld a,(Ctrl_2)
  81+ 9997 CB 5F            bit 3,a
  82+ 9999 20 1A            jr nz,Reinicia_el_movimiento
  83+ 999B
  84+ 999B              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 999B
  86+ 999B 21 DE 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 999E CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 99A0
  89+ 99A0 CD 09 9A         call Inicia_Repetimos_movimiento
  90+ 99A3 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 99A5              ; ---
  92+ 99A5
  93+ 99A5 FE 01        1 cp 1
  94+ 99A7 CA E2 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 99AA
  96+ 99AA 3D               dec a
  97+ 99AB 32 F7 8A         ld (Cola_de_desplazamiento),a
  98+ 99AE
  99+ 99AE 3A F5 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 99B1 32 F4 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 99B4              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 99B4 C9               ret
 103+ 99B5
 104+ 99B5              Reinicia_el_movimiento
 105+ 99B5
 106+ 99B5 3A DE 8A         ld a,(Ctrl_2)
 107+ 99B8 CB 5F            bit 3,a
 108+ 99BA 28 1B            jr z,2F
 109+ 99BC
 110+ 99BC              ; (Cola_de_desplazamiento)="254".
 111+ 99BC
 112+ 99BC 21 F6 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 99BF 35               dec (hl)
 114+ 99C0 20 15            jr nz,2F
 115+ 99C2
 116+ 99C2              ; Fin de las repeticiones del último movimiento.
 117+ 99C2
 118+ 99C2 21 DE 8A         ld hl,Ctrl_2
 119+ 99C5 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 99C7
 121+ 99C7 2A EE 8A         ld hl,(Puntero_mov)
 122+ 99CA 23               inc hl
 123+ 99CB 23               inc hl
 124+ 99CC 23               inc hl
 125+ 99CD 22 EE 8A         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 99D0              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 99D0 7E               ld a,(hl)
 128+ 99D1 32 F7 8A         ld (Cola_de_desplazamiento),a
 129+ 99D4
 130+ 99D4 C3 7C 99         jp Cola
 131+ 99D7
 132+ 99D7 CD 14 9A     2 call Inicia_Puntero_mov
 133+ 99DA
 134+ 99DA 21 DE 8A         ld hl,Ctrl_2
 135+ 99DD CB 96            res 2,(hl)
 136+ 99DF
 137+ 99DF C3 4C 99         jp Movimiento
 138+ 99E2
 139+ 99E2              Siguiente_desplazamiento
 140+ 99E2
 141+ 99E2              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 99E2              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 99E2
 144+ 99E2 21 DE 8A         ld hl,Ctrl_2
 145+ 99E5 CB 96            res 2,(hl)
 146+ 99E7
 147+ 99E7 2A EE 8A         ld hl,(Puntero_mov)
 148+ 99EA 23               inc hl
 149+ 99EB 23               inc hl
 150+ 99EC 22 EE 8A         ld (Puntero_mov),hl
 151+ 99EF
 152+ 99EF 7E               ld a,(hl)
 153+ 99F0 A7               and a
 154+ 99F1 CC 73 9A         call z,Incrementa_Puntero_indice_mov
 155+ 99F4 CA B5 99         jp z,Reinicia_el_movimiento
 156+ 99F7
 157+ 99F7 C9               ret
 158+ 99F8
 159+ 99F8              ; Subrutinas -----------------------------------------
 160+ 99F8              ; ---------- --------- --------- ---------- ----------
 161+ 99F8              ;
 162+ 99F8              ;   24/07/23
 163+ 99F8              ;
 164+ 99F8              ;   Fijamos_bucle
 165+ 99F8              ;
 166+ 99F8              ;
 167+ 99F8
 168+ 99F8              Fijamos_bucle
 169+ 99F8
 170+ 99F8 3A F2 8A         ld a,(Incrementa_puntero)
 171+ 99FB 3C               inc a
 172+ 99FC 32 F3 8A         ld (Incrementa_puntero_backup),a
 173+ 99FF
 174+ 99FF CD 73 9A         call Incrementa_Puntero_indice_mov
 175+ 9A02 2A EC 8A         ld hl,(Puntero_indice_mov)
 176+ 9A05 22 F0 8A         ld (Puntero_indice_mov_bucle),hl
 177+ 9A08 C9               ret
 178+ 9A09
 179+ 9A09              ; ---------- --------- --------- ---------- ----------
 180+ 9A09              ;
 181+ 9A09              ;   07/7/23
 182+ 9A09              ;
 183+ 9A09              ;   Inicia_Repetimos_movimiento
 184+ 9A09              ;
 185+ 9A09              ;
 186+ 9A09
 187+ 9A09              Inicia_Repetimos_movimiento
 188+ 9A09
 189+ 9A09              ; Iniciamos (Repetimos_movimiento).
 190+ 9A09
 191+ 9A09 DD 2A EE 8A      ld ix,(Puntero_mov)
 192+ 9A0D DD 7E 02         ld a,(ix+2)
 193+ 9A10 32 F6 8A         ld (Repetimos_movimiento),a
 194+ 9A13
 195+ 9A13 C9               ret
 196+ 9A14
 197+ 9A14              ; ---------- --------- --------- ---------- ----------
 198+ 9A14              ;
 199+ 9A14              ;   26/6/23
 200+ 9A14              ;
 201+ 9A14              ;   Inicia_Puntero_mov
 202+ 9A14              ;
 203+ 9A14              ;
 204+ 9A14
 205+ 9A14 2A EC 8A     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9A17 CD CE 8C         call Extrae_address
 207+ 9A1A 22 EE 8A         ld (Puntero_mov),hl
 208+ 9A1D C9               ret
 209+ 9A1E
 210+ 9A1E              ; ---------- --------- --------- ---------- ----------
 211+ 9A1E              ;
 212+ 9A1E              ;   27/06/23
 213+ 9A1E              ;
 214+ 9A1E              ;   Aplica_movimiento.
 215+ 9A1E
 216+ 9A1E              Aplica_desplazamiento
 217+ 9A1E
 218+ 9A1E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9A1E
 220+ 9A1E 2A EE 8A         ld hl, (Puntero_mov)
 221+ 9A21
 222+ 9A21 7E               ld a,(hl)
 223+ 9A22 E6 F0            and $f0
 224+ 9A24 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9A25
 226+ 9A25 CB 7E            bit 7,(hl)
 227+ 9A27 28 03            jr z,1F
 228+ 9A29 CD 33 96         call Mov_up
 229+ 9A2C 2A EE 8A     1 ld hl, (Puntero_mov)
 230+ 9A2F CB 76            bit 6,(hl)
 231+ 9A31 28 03            jr z,2F
 232+ 9A33 CD FA 95         call Mov_down
 233+ 9A36
 234+ 9A36              ; Se ha aplicado reinicio ???
 235+ 9A36              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9A36
 237+ 9A36              ;    ld a,(Ctrl_3)
 238+ 9A36              ;    bit 1,a
 239+ 9A36              ;    ret nz
 240+ 9A36
 241+ 9A36 2A EE 8A     2 ld hl, (Puntero_mov)
 242+ 9A39 CB 6E            bit 5,(hl)
 243+ 9A3B 28 03            jr z,3F
 244+ 9A3D CD 99 97         call Mov_left
 245+ 9A40 2A EE 8A     3 ld hl, (Puntero_mov)
 246+ 9A43 CB 66            bit 4,(hl)
 247+ 9A45 C8               ret z
 248+ 9A46 CD 76 96         call Mov_right
 249+ 9A49 C9               ret
 250+ 9A4A
 251+ 9A4A              ; ---------- --------- --------- ---------- ----------
 252+ 9A4A              ;
 253+ 9A4A              ;   26/06/23
 254+ 9A4A              ;
 255+ 9A4A              ;   Ajusta_velocidad_desplazamiento.
 256+ 9A4A
 257+ 9A4A              Ajusta_velocidad_desplazamiento
 258+ 9A4A
 259+ 9A4A              ; 1er byte de la cadena de movimiento.
 260+ 9A4A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9A4A
 262+ 9A4A CD 68 9A         call Extrae_nibble_alto
 263+ 9A4D
 264+ 9A4D 32 E2 8A         ld (Vel_up),a
 265+ 9A50 79               ld a,c
 266+ 9A51 E6 0F            and $0f
 267+ 9A53 32 E3 8A         ld (Vel_down),a
 268+ 9A56
 269+ 9A56              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9A56              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9A56
 272+ 9A56 23               inc hl
 273+ 9A57 CD 68 9A         call Extrae_nibble_alto
 274+ 9A5A
 275+ 9A5A 32 E0 8A         ld (Vel_left),a
 276+ 9A5D 79               ld a,c
 277+ 9A5E E6 0F            and $0f
 278+ 9A60 32 E1 8A         ld (Vel_right),a
 279+ 9A63
 280+ 9A63              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9A63
 282+ 9A63 23               inc hl
 283+ 9A64 22 EE 8A         ld (Puntero_mov),hl
 284+ 9A67 C9               ret
 285+ 9A68
 286+ 9A68 06 04        Extrae_nibble_alto ld b,4
 287+ 9A6A 7E               ld a,(hl)
 288+ 9A6B 4F               ld c,a
 289+ 9A6C E6 F0            and $f0
 290+ 9A6E CB 3F        1 srl a
 291+ 9A70 10 FC            djnz 1B
 292+ 9A72 C9               ret
 293+ 9A73
 294+ 9A73              ; ---------- --------- --------- ---------- ----------
 295+ 9A73              ;
 296+ 9A73              ;   5/7/23
 297+ 9A73              ;
 298+ 9A73              ;   Incrementa_Puntero_indice_mov
 299+ 9A73
 300+ 9A73              Incrementa_Puntero_indice_mov
 301+ 9A73
 302+ 9A73 21 F2 8A         ld hl,Incrementa_puntero
 303+ 9A76 34               inc (hl)
 304+ 9A77
 305+ 9A77 2A EC 8A         ld hl,(Puntero_indice_mov)
 306+ 9A7A 01 02 00         ld bc,2
 307+ 9A7D A7               and a
 308+ 9A7E 09               add hl,bc
 309+ 9A7F 22 EC 8A         ld (Puntero_indice_mov),hl
 310+ 9A82
 311+ 9A82 7E               ld a,(hl)
 312+ 9A83 A7               and a
 313+ 9A84
 314+ 9A84              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9A84
 316+ 9A84              ;    jr z,$
 317+ 9A84
 318+ 9A84              ;! Reinicia el Patrón de movimiento.
 319+ 9A84
 320+ 9A84 CC 89 9A         call z,Inicializa_Puntero_indice_mov_2
 321+ 9A87
 322+ 9A87 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9A88
 324+ 9A88 C9               ret
 325+ 9A89
 326+ 9A89              ; ---------- --------- --------- ---------- ----------
 327+ 9A89              ;
 328+ 9A89              ;   15/01/24
 329+ 9A89              ;
 330+ 9A89              ;   Inicializa_Puntero_indice_mov
 331+ 9A89
 332+ 9A89              Inicializa_Puntero_indice_mov_2
 333+ 9A89
 334+ 9A89              ; Existe etiqueta de bucle principal???
 335+ 9A89
 336+ 9A89 2A F0 8A         ld hl,(Puntero_indice_mov_bucle)
 337+ 9A8C 24               inc h
 338+ 9A8D 25               dec h
 339+ 9A8E 28 05            jr z,2F
 340+ 9A90
 341+ 9A90 22 EC 8A         ld (Puntero_indice_mov),hl
 342+ 9A93 18 14            jr 3F
 343+ 9A95
 344+ 9A95              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9A95
 346+ 9A95 3A F2 8A     2 ld a,(Incrementa_puntero)
 347+ 9A98 47               ld b,a
 348+ 9A99
 349+ 9A99 2A EC 8A         ld hl,(Puntero_indice_mov)
 350+ 9A9C 2B           1 dec hl
 351+ 9A9D 2B               dec hl
 352+ 9A9E 10 FC            djnz 1B
 353+ 9AA0 22 EC 8A         ld (Puntero_indice_mov),hl
 354+ 9AA3
 355+ 9AA3 AF               xor a
 356+ 9AA4 32 F2 8A         ld (Incrementa_puntero),a
 357+ 9AA7 18 06            jr 4F
 358+ 9AA9
 359+ 9AA9 3A F3 8A     3 ld a,(Incrementa_puntero_backup)
 360+ 9AAC 32 F2 8A         ld (Incrementa_puntero),a
 361+ 9AAF C9           4 ret
 362+ 9AB0
 363+ 9AB0              ; ----------------------------------------------------------------------
 364+ 9AB0              ;
 365+ 9AB0              ;   30/01/24
 366+ 9AB0              ;
 367+ 9AB0              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9AB0
 369+ 9AB0 3A B6 8A     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9AB3 CD E2 8E         call Calcula_salto_en_BC
 371+ 9AB6 21 E4 8A         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9AB9 A7               and a
 373+ 9ABA ED 4A            adc hl,bc
 374+ 9ABC C9               ret
 375+ 9ABD
 376+ 9ABD              ; ----------------------------------------------------------------------
 377+ 9ABD              ;
 378+ 9ABD              ;   30/01/24
 379+ 9ABD              ;
 380+ 9ABD              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9ABD              ;
 382+ 9ABD              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9ABD
 384+ 9ABD 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9ABE 23               inc hl
 386+ 9ABF 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9AC0 69               ld l,c
 388+ 9AC1 60               ld h,b
 389+ 9AC2 22 D7 8A         ld (Contador_de_mov_masticados),hl
 390+ 9AC5 C9               ret
 391+ 9AC6
# file closed: Movimiento.asm
1810  9AC6              ;	include "Disparo.asm"
1811  9AC6              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9AC6              ; Relojes y temporizaciones.
   2+ 9AC6
   3+ 9AC6              ; ------------------------------------------------------
   4+ 9AC6              ;
   5+ 9AC6              ;	16/7/23
   6+ 9AC6              ;
   7+ 9AC6              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9AC6              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9AC6              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9AC6              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9AC6              ;
  12+ 9AC6              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9AC6              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9AC6
  15+ 9AC6              ; Disparo_entidad db 1
  16+ 9AC6              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9AC6              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9AC6
  19+ 9AC6              Habilita_disparos
  20+ 9AC6
  21+ 9AC6 7E           	ld a,(hl)
  22+ 9AC7 A7           	and a
  23+ 9AC8 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9AC9
  25+ 9AC9 EB           	ex de,hl
  26+ 9ACA
  27+ 9ACA 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9ACB C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9ACC
  30+ 9ACC              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9ACC
  32+ 9ACC 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9ACD 7E           	ld a,(hl)
  34+ 9ACE 23           	inc hl
  35+ 9ACF 77           	ld (hl),a
  36+ 9AD0
  37+ 9AD0 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9AD1 3E 01        	ld a,1
  39+ 9AD3 77           	ld (hl),a
  40+ 9AD4 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1812  9AD5              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9AD5              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9AD5              ;
   3+ 9AD5              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9AD5              ;
   5+ 9AD5              ; *****************************************************************************************************************************************************************************************
   6+ 9AD5              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9AD5
   8+ 9AD5 7C           calcula_tercio ld a,h
   9+ 9AD6 E6 18        	and $18
  10+ 9AD8 CB 2F        	sra a
  11+ 9ADA CB 2F        	sra a
  12+ 9ADC CB 2F        	sra a
  13+ 9ADE C9           	ret
  14+ 9ADF
# file closed: calcula_tercio.asm
1813  9ADF              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9ADF              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9ADF              ;
   3+ 9ADF              ;
   4+ 9ADF              ;	CLS.
   5+ 9ADF              ;
   6+ 9ADF              ;	Limpia la pantalla y define sus atributos.
   7+ 9ADF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9ADF              ;
   9+ 9ADF              ;	COLORES: 0 ..... NEGRO
  10+ 9ADF              ;    		 1 ..... AZUL
  11+ 9ADF              ; 			 2 ..... ROJO
  12+ 9ADF              ;			 3 ..... MAGENTA
  13+ 9ADF              ; 			 4 ..... VERDE
  14+ 9ADF              ; 			 5 ..... CIAN
  15+ 9ADF              ;			 6 ..... AMARILLO
  16+ 9ADF              ; 			 7 ..... BLANCO
  17+ 9ADF              ;
  18+ 9ADF              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9ADF              ;
  20+ 9ADF              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9ADF
  22+ 9ADF
  23+ 9ADF 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9AE2 11 01 40     	LD DE,$4001
  25+ 9AE5 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9AE8 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9AEA ED B0        	LDIR
  28+ 9AEC 01 FF 02     	LD BC,767
  29+ 9AEF 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9AF0 ED B0        	LDIR
  31+ 9AF2 C9           	ret
  32+ 9AF3
# file closed: Cls.asm
1814  9AF3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9AF3              ; ------------------------------------------------------------------------
   2+ 9AF3              ;
   3+ 9AF3              ;	30/1/24
   4+ 9AF3              ;
   5+ 9AF3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9AF3              ;	Fila superior "0", Columna izquierda "0".
   7+ 9AF3              ;
   8+ 9AF3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9AF3              ;
  10+ 9AF3              ;	Modifica: A,BC y DE.
  11+ 9AF3
  12+ 9AF3 7D           Genera_coordenadas ld a,l
  13+ 9AF4 E6 1F        	and $1f
  14+ 9AF6 32 BD 8A     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9AF9
  16+ 9AF9 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9AFA FE 40        	cp $40
  18+ 9AFC 38 1C        	jr c,4F
  19+ 9AFE
  20+ 9AFE CD D5 9A     	call calcula_tercio
  21+ 9B01 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9B02
  23+ 9B02 1E 00        	ld e,0
  24+ 9B04 7D           	ld a,l
  25+ 9B05 E6 E0        	and $e0
  26+ 9B07 28 01        	jr z,1F
  27+ 9B09 04           	inc b
  28+ 9B0A
  29+ 9B0A 04           1 inc b
  30+ 9B0B 05           	dec b
  31+ 9B0C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9B0E              ;														; _ , salimos.
  33+ 9B0E 1C           3 inc e
  34+ 9B0F D6 20        	sub 32
  35+ 9B11 20 FB        	jr nz,3B
  36+ 9B13 10 F5        	djnz 1B
  37+ 9B15
  38+ 9B15 7B           2 ld a,e
  39+ 9B16 32 BE 8A     	ld (Coordenada_y),a
  40+ 9B19 C9           	ret
  41+ 9B1A
  42+ 9B1A AF           4 xor a
  43+ 9B1B 32 BE 8A     	ld (Coordenada_y),a
  44+ 9B1E C9           	ret
  45+ 9B1F
  46+ 9B1F              ; ------------------------------------------------------------------------
  47+ 9B1F              ;	28/05/23
  48+ 9B1F              ;
  49+ 9B1F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9B1F              ;	Fila superior "0", Columna izquierda "0".
  51+ 9B1F              ;
  52+ 9B1F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9B1F              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9B1F              ;
  55+ 9B1F              ;		DE="$120d"
  56+ 9B1F              ;
  57+ 9B1F              ;		D, (Coordenada_X), Columnas, $12
  58+ 9B1F              ;		E, (Coordenada_y), Filas, $0d
  59+ 9B1F              ;
  60+ 9B1F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9B1F
  62+ 9B1F              ;	Modifica: A,BC y DE.
  63+ 9B1F
  64+ 9B1F
  65+ 9B1F              Genera_coordenadas_disparo
  66+ 9B1F
  67+ 9B1F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9B1F
  69+ 9B1F 7D           	ld a,l
  70+ 9B20 E6 1F        	and $1f
  71+ 9B22 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9B23 CD D5 9A     	call calcula_tercio
  73+ 9B26 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9B27 1E 00        	ld e,0
  75+ 9B29 7D           	ld a,l
  76+ 9B2A E6 E0        	and $e0
  77+ 9B2C 28 01        	jr z,1F
  78+ 9B2E 04           	inc b
  79+ 9B2F 1C           1 inc e
  80+ 9B30 D6 20        	sub 32
  81+ 9B32 20 FB        	jr nz,1B
  82+ 9B34 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9B36 C9           	ret
  84+ 9B37
# file closed: Genera_coordenadas.asm
1815  9B37              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9B37              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9B37              ;
   3+ 9B37              ;	11/03/24
   4+ 9B37              ;
   5+ 9B37              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9B37              ;   DE contiene Puntero_objeto.
   7+ 9B37              ;   IX contiene el Puntero de impresión.
   8+ 9B37
   9+ 9B37              Genera_datos_de_impresion
  10+ 9B37
  11+ 9B37 ED 73 09 8B      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9B3B 31 D5 8A         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ 9B3E DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ 9B40
  15+ 9B40 2A 15 8B         ld hl,(Scanlines_album_SP)
  16+ 9B43
  17+ 9B43 3E 05            ld a,5
  18+ 9B45 85               add l
  19+ 9B46 6F               ld l,a
  20+ 9B47
  21+ 9B47 F9               ld sp,hl
  22+ 9B48 22 15 8B         ld (Scanlines_album_SP),hl
  23+ 9B4B
  24+ 9B4B 21 00 00         ld hl,0
  25+ 9B4E
  26+ 9B4E DD E5            push ix
  27+ 9B50 3B               dec sp
  28+ 9B51 ED 7A            adc hl,sp
  29+ 9B53 D5               push de
  30+ 9B54
  31+ 9B54              ; Recuperamos SP.
  32+ 9B54
  33+ 9B54 ED 7B 09 8B      ld sp,(Stack)
  34+ 9B58
  35+ 9B58 E5               push hl
  36+ 9B59 F1               pop af
  37+ 9B5A 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ 9B5B
  39+ 9B5B              ; Tenemos el encabezado listo.
  40+ 9B5B              ; Preparamos registros para generar los scanlines.
  41+ 9B5B
  42+ 9B5B DD E5            push ix
  43+ 9B5D E1               pop hl                                          ; 1er scanline en HL.
  44+ 9B5E
  45+ 9B5E ED 5B 15 8B      ld de,(Scanlines_album_SP)
  46+ 9B62
  47+ 9B62              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ 9B62              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ 9B62
  50+ 9B62 7C               ld a,h
  51+ 9B63 FE 50            cp $50
  52+ 9B65 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ 9B67
  54+ 9B67 20 05            jr nz,2F
  55+ 9B69
  56+ 9B69 7D               ld a,l
  57+ 9B6A FE E0            cp $e0
  58+ 9B6C 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ 9B6E
  60+ 9B6E 7D           2 ld a,l
  61+ 9B6F FE C0            cp $c0
  62+ 9B71 D2 03 9C         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ 9B74
  64+ 9B74              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ 9B74
  66+ 9B74 CD 5C 92         call NextScan
  67+ 9B77 EB               ex de,hl
  68+ 9B78
  69+ 9B78 73               ld (hl),e
  70+ 9B79 2C               inc l
  71+ 9B7A 72               ld (hl),d
  72+ 9B7B 2C               inc l
  73+ 9B7C
  74+ 9B7C EB               ex de,hl
  75+ 9B7D
  76+ 9B7D CD 5C 92         call NextScan
  77+ 9B80 EB               ex de,hl
  78+ 9B81
  79+ 9B81 73               ld (hl),e
  80+ 9B82 2C               inc l
  81+ 9B83 72               ld (hl),d
  82+ 9B84 2C               inc l
  83+ 9B85
  84+ 9B85 EB               ex de,hl
  85+ 9B86
  86+ 9B86 CD 5C 92         call NextScan
  87+ 9B89 EB               ex de,hl
  88+ 9B8A
  89+ 9B8A 73               ld (hl),e
  90+ 9B8B 2C               inc l
  91+ 9B8C 72               ld (hl),d
  92+ 9B8D 2C               inc l
  93+ 9B8E
  94+ 9B8E EB               ex de,hl
  95+ 9B8F
  96+ 9B8F CD 5C 92         call NextScan
  97+ 9B92 EB               ex de,hl
  98+ 9B93
  99+ 9B93 73               ld (hl),e
 100+ 9B94 2C               inc l
 101+ 9B95 72               ld (hl),d
 102+ 9B96 2C               inc l
 103+ 9B97
 104+ 9B97 EB               ex de,hl
 105+ 9B98
 106+ 9B98 CD 5C 92         call NextScan
 107+ 9B9B EB               ex de,hl
 108+ 9B9C
 109+ 9B9C 73               ld (hl),e
 110+ 9B9D 2C               inc l
 111+ 9B9E 72               ld (hl),d
 112+ 9B9F 2C               inc l
 113+ 9BA0
 114+ 9BA0 EB               ex de,hl
 115+ 9BA1
 116+ 9BA1 CD 5C 92         call NextScan
 117+ 9BA4 EB               ex de,hl
 118+ 9BA5
 119+ 9BA5 73               ld (hl),e
 120+ 9BA6 2C               inc l
 121+ 9BA7 72               ld (hl),d
 122+ 9BA8 2C               inc l
 123+ 9BA9
 124+ 9BA9 EB               ex de,hl
 125+ 9BAA
 126+ 9BAA CD 5C 92         call NextScan
 127+ 9BAD EB               ex de,hl
 128+ 9BAE
 129+ 9BAE 73               ld (hl),e
 130+ 9BAF 2C               inc l
 131+ 9BB0 72               ld (hl),d
 132+ 9BB1 2C               inc l
 133+ 9BB2
 134+ 9BB2 EB               ex de,hl
 135+ 9BB3
 136+ 9BB3 CD 5C 92         call NextScan
 137+ 9BB6 EB               ex de,hl
 138+ 9BB7
 139+ 9BB7 73               ld (hl),e
 140+ 9BB8 2C               inc l
 141+ 9BB9 72               ld (hl),d
 142+ 9BBA 2C               inc l
 143+ 9BBB
 144+ 9BBB EB               ex de,hl
 145+ 9BBC
 146+ 9BBC CD 5C 92         call NextScan
 147+ 9BBF EB               ex de,hl
 148+ 9BC0
 149+ 9BC0 73               ld (hl),e
 150+ 9BC1 2C               inc l
 151+ 9BC2 72               ld (hl),d
 152+ 9BC3 2C               inc l
 153+ 9BC4
 154+ 9BC4 EB               ex de,hl
 155+ 9BC5
 156+ 9BC5 CD 5C 92         call NextScan
 157+ 9BC8 EB               ex de,hl
 158+ 9BC9
 159+ 9BC9 73               ld (hl),e
 160+ 9BCA 2C               inc l
 161+ 9BCB 72               ld (hl),d
 162+ 9BCC 2C               inc l
 163+ 9BCD
 164+ 9BCD EB               ex de,hl
 165+ 9BCE
 166+ 9BCE CD 5C 92         call NextScan
 167+ 9BD1 EB               ex de,hl
 168+ 9BD2
 169+ 9BD2 73               ld (hl),e
 170+ 9BD3 2C               inc l
 171+ 9BD4 72               ld (hl),d
 172+ 9BD5 2C               inc l
 173+ 9BD6
 174+ 9BD6 EB               ex de,hl
 175+ 9BD7
 176+ 9BD7 CD 5C 92         call NextScan
 177+ 9BDA EB               ex de,hl
 178+ 9BDB
 179+ 9BDB 73               ld (hl),e
 180+ 9BDC 2C               inc l
 181+ 9BDD 72               ld (hl),d
 182+ 9BDE 2C               inc l
 183+ 9BDF
 184+ 9BDF EB               ex de,hl
 185+ 9BE0
 186+ 9BE0 CD 5C 92         call NextScan
 187+ 9BE3 EB               ex de,hl
 188+ 9BE4
 189+ 9BE4 73               ld (hl),e
 190+ 9BE5 2C               inc l
 191+ 9BE6 72               ld (hl),d
 192+ 9BE7 2C               inc l
 193+ 9BE8
 194+ 9BE8 EB               ex de,hl
 195+ 9BE9
 196+ 9BE9 CD 5C 92         call NextScan
 197+ 9BEC EB               ex de,hl
 198+ 9BED
 199+ 9BED 73               ld (hl),e
 200+ 9BEE 2C               inc l
 201+ 9BEF 72               ld (hl),d
 202+ 9BF0 2C               inc l
 203+ 9BF1
 204+ 9BF1 EB               ex de,hl
 205+ 9BF2
 206+ 9BF2 CD 5C 92         call NextScan
 207+ 9BF5 EB               ex de,hl
 208+ 9BF6
 209+ 9BF6 73               ld (hl),e
 210+ 9BF7 2C               inc l
 211+ 9BF8 72               ld (hl),d
 212+ 9BF9 2C               inc l
 213+ 9BFA
 214+ 9BFA              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ 9BFA
 216+ 9BFA 22 15 8B         ld (Scanlines_album_SP),hl
 217+ 9BFD
 218+ 9BFD              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ 9BFD
 220+ 9BFD 08               ex af,af
 221+ 9BFE
 222+ 9BFE F5               push af
 223+ 9BFF E1               pop hl
 224+ 9C00
 225+ 9C00 36 10            ld (hl),16
 226+ 9C02
 227+ 9C02 C9               ret
 228+ 9C03
 229+ 9C03              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ 9C03
 231+ 9C03              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ 9C03
 233+ 9C03 3E 57            ld a,$57
 234+ 9C05 94               sub h
 235+ 9C06 20 04            jr nz,4F
 236+ 9C08
 237+ 9C08 0E 01            ld c,1
 238+ 9C0A 18 1B            jr 5F
 239+ 9C0C
 240+ 9C0C 47           4 ld b,a
 241+ 9C0D
 242+ 9C0D 3E DF            ld a,$df
 243+ 9C0F BD               cp l
 244+ 9C10 38 04            jr c,1F
 245+ 9C12
 246+ 9C12 3E 08            ld a,8
 247+ 9C14 80               add b
 248+ 9C15 47               ld b,a
 249+ 9C16
 250+ 9C16              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 251+ 9C16              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 252+ 9C16
 253+ 9C16 48           1 ld c,b
 254+ 9C17 0C               inc c
 255+ 9C18
 256+ 9C18 CD 5C 92     3 call NextScan
 257+ 9C1B EB               ex de,hl
 258+ 9C1C
 259+ 9C1C 73               ld (hl),e
 260+ 9C1D 2C               inc l
 261+ 9C1E 72               ld (hl),d
 262+ 9C1F 2C               inc l
 263+ 9C20
 264+ 9C20 EB               ex de,hl
 265+ 9C21
 266+ 9C21 10 F5            djnz 3B
 267+ 9C23
 268+ 9C23 ED 53 15 8B      ld (Scanlines_album_SP),de
 269+ 9C27
 270+ 9C27 08           5 ex af,af
 271+ 9C28 F5               push af
 272+ 9C29 E1               pop hl
 273+ 9C2A
 274+ 9C2A 71               ld (hl),c
 275+ 9C2B
 276+ 9C2B C9               ret
 277+ 9C2C
 278+ 9C2C              ; -----------------------------------------------------------------------------
 279+ 9C2C              ;
 280+ 9C2C              ;   21/11/23
 281+ 9C2C
 282+ 9C2C              Limpia_y_reinicia_Scanlines_album
 283+ 9C2C
 284+ 9C2C              ;   Limpia Scanlines_album.
 285+ 9C2C
 286+ 9C2C 2A 15 8B         ld hl,(Scanlines_album_SP)
 287+ 9C2F 7D               ld a,l
 288+ 9C30 A7               and a
 289+ 9C31 C8               ret z   ;   Salimos si el álbum está vacío.
 290+ 9C32
 291+ 9C32 47               ld b,a
 292+ 9C33 04               inc b
 293+ 9C34
 294+ 9C34 36 00        1 ld (hl),0
 295+ 9C36 2D               dec l
 296+ 9C37 10 FB            djnz 1B
 297+ 9C39
 298+ 9C39              ;   Reinicializa (Scanlines_album_SP).
 299+ 9C39
 300+ 9C39 21 00 80         ld hl,Scanlines_album
 301+ 9C3C 22 15 8B         ld (Scanlines_album_SP),hl
 302+ 9C3F
 303+ 9C3F C9               ret
 304+ 9C40
 305+ 9C40              ; -----------------------------------------------------------------------------
 306+ 9C40              ;
 307+ 9C40              ;   11/03/24
 308+ 9C40              ;
 309+ 9C40
 310+ 9C40              Pinta_Sprites
 311+ 9C40
 312+ 9C40 2A 15 8B         ld hl,(Scanlines_album_SP)
 313+ 9C43 CD CE 8C         call Extrae_address
 314+ 9C46
 315+ 9C46 24               inc h
 316+ 9C47 25               dec h
 317+ 9C48 C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
 318+ 9C49
 319+ 9C49 ED 73 09 8B      ld (Stack),sp
 320+ 9C4D
 321+ 9C4D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
 322+ 9C4E              ;                                       ; DE se encuentra en los datos del sprite.
 323+ 9C4E 2C               inc l
 324+ 9C4F 2C               inc l
 325+ 9C50
 326+ 9C50 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
 327+ 9C51
 328+ 9C51 2C               inc l
 329+ 9C52 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
 330+ 9C53
 331+ 9C53              ;   Seleccionamos rutina de impresión:
 332+ 9C53
 333+ 9C53 3E 10            ld a,16
 334+ 9C55 B8               cp b
 335+ 9C56 C2 54 9D         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 336+ 9C59
 337+ 9C59              ;   Rutinas:
 338+ 9C59
 339+ 9C59              Pinta_rapido    ;   1520 t/states.
 340+ 9C59
 341+ 9C59 E1               pop hl
 342+ 9C5A
 343+ 9C5A 1A               ld a,(de)
 344+ 9C5B AE               xor (hl)
 345+ 9C5C 77               ld (hl),a
 346+ 9C5D 2C               inc l
 347+ 9C5E 1C               inc e
 348+ 9C5F 1A               ld a,(de)
 349+ 9C60 AE               xor (hl)
 350+ 9C61 77               ld (hl),a
 351+ 9C62 2C               inc l
 352+ 9C63 1C               inc e
 353+ 9C64 1A               ld a,(de)
 354+ 9C65 AE               xor (hl)
 355+ 9C66 77               ld (hl),a
 356+ 9C67 13               inc de
 357+ 9C68
 358+ 9C68 E1               pop hl
 359+ 9C69
 360+ 9C69 1A               ld a,(de)
 361+ 9C6A AE               xor (hl)
 362+ 9C6B 77               ld (hl),a
 363+ 9C6C 2C               inc l
 364+ 9C6D 1C               inc e
 365+ 9C6E 1A               ld a,(de)
 366+ 9C6F AE               xor (hl)
 367+ 9C70 77               ld (hl),a
 368+ 9C71 2C               inc l
 369+ 9C72 1C               inc e
 370+ 9C73 1A               ld a,(de)
 371+ 9C74 AE               xor (hl)
 372+ 9C75 77               ld (hl),a
 373+ 9C76 13               inc de
 374+ 9C77
 375+ 9C77 E1               pop hl
 376+ 9C78
 377+ 9C78 1A               ld a,(de)
 378+ 9C79 AE               xor (hl)
 379+ 9C7A 77               ld (hl),a
 380+ 9C7B 2C               inc l
 381+ 9C7C 1C               inc e
 382+ 9C7D 1A               ld a,(de)
 383+ 9C7E AE               xor (hl)
 384+ 9C7F 77               ld (hl),a
 385+ 9C80 2C               inc l
 386+ 9C81 1C               inc e
 387+ 9C82 1A               ld a,(de)
 388+ 9C83 AE               xor (hl)
 389+ 9C84 77               ld (hl),a
 390+ 9C85 13               inc de
 391+ 9C86
 392+ 9C86 E1               pop hl
 393+ 9C87
 394+ 9C87 1A               ld a,(de)
 395+ 9C88 AE               xor (hl)
 396+ 9C89 77               ld (hl),a
 397+ 9C8A 2C               inc l
 398+ 9C8B 1C               inc e
 399+ 9C8C 1A               ld a,(de)
 400+ 9C8D AE               xor (hl)
 401+ 9C8E 77               ld (hl),a
 402+ 9C8F 2C               inc l
 403+ 9C90 1C               inc e
 404+ 9C91 1A               ld a,(de)
 405+ 9C92 AE               xor (hl)
 406+ 9C93 77               ld (hl),a
 407+ 9C94 13               inc de
 408+ 9C95
 409+ 9C95 E1               pop hl
 410+ 9C96
 411+ 9C96 1A               ld a,(de)
 412+ 9C97 AE               xor (hl)
 413+ 9C98 77               ld (hl),a
 414+ 9C99 2C               inc l
 415+ 9C9A 1C               inc e
 416+ 9C9B 1A               ld a,(de)
 417+ 9C9C AE               xor (hl)
 418+ 9C9D 77               ld (hl),a
 419+ 9C9E 2C               inc l
 420+ 9C9F 1C               inc e
 421+ 9CA0 1A               ld a,(de)
 422+ 9CA1 AE               xor (hl)
 423+ 9CA2 77               ld (hl),a
 424+ 9CA3 13               inc de
 425+ 9CA4
 426+ 9CA4 E1               pop hl
 427+ 9CA5
 428+ 9CA5 1A               ld a,(de)
 429+ 9CA6 AE               xor (hl)
 430+ 9CA7 77               ld (hl),a
 431+ 9CA8 2C               inc l
 432+ 9CA9 1C               inc e
 433+ 9CAA 1A               ld a,(de)
 434+ 9CAB AE               xor (hl)
 435+ 9CAC 77               ld (hl),a
 436+ 9CAD 2C               inc l
 437+ 9CAE 1C               inc e
 438+ 9CAF 1A               ld a,(de)
 439+ 9CB0 AE               xor (hl)
 440+ 9CB1 77               ld (hl),a
 441+ 9CB2 13               inc de
 442+ 9CB3
 443+ 9CB3 E1               pop hl
 444+ 9CB4
 445+ 9CB4 1A               ld a,(de)
 446+ 9CB5 AE               xor (hl)
 447+ 9CB6 77               ld (hl),a
 448+ 9CB7 2C               inc l
 449+ 9CB8 1C               inc e
 450+ 9CB9 1A               ld a,(de)
 451+ 9CBA AE               xor (hl)
 452+ 9CBB 77               ld (hl),a
 453+ 9CBC 2C               inc l
 454+ 9CBD 1C               inc e
 455+ 9CBE 1A               ld a,(de)
 456+ 9CBF AE               xor (hl)
 457+ 9CC0 77               ld (hl),a
 458+ 9CC1 13               inc de
 459+ 9CC2
 460+ 9CC2 E1               pop hl
 461+ 9CC3
 462+ 9CC3 1A               ld a,(de)
 463+ 9CC4 AE               xor (hl)
 464+ 9CC5 77               ld (hl),a
 465+ 9CC6 2C               inc l
 466+ 9CC7 1C               inc e
 467+ 9CC8 1A               ld a,(de)
 468+ 9CC9 AE               xor (hl)
 469+ 9CCA 77               ld (hl),a
 470+ 9CCB 2C               inc l
 471+ 9CCC 1C               inc e
 472+ 9CCD 1A               ld a,(de)
 473+ 9CCE AE               xor (hl)
 474+ 9CCF 77               ld (hl),a
 475+ 9CD0 13               inc de
 476+ 9CD1
 477+ 9CD1 E1               pop hl
 478+ 9CD2
 479+ 9CD2 1A               ld a,(de)
 480+ 9CD3 AE               xor (hl)
 481+ 9CD4 77               ld (hl),a
 482+ 9CD5 2C               inc l
 483+ 9CD6 1C               inc e
 484+ 9CD7 1A               ld a,(de)
 485+ 9CD8 AE               xor (hl)
 486+ 9CD9 77               ld (hl),a
 487+ 9CDA 2C               inc l
 488+ 9CDB 1C               inc e
 489+ 9CDC 1A               ld a,(de)
 490+ 9CDD AE               xor (hl)
 491+ 9CDE 77               ld (hl),a
 492+ 9CDF 13               inc de
 493+ 9CE0
 494+ 9CE0 E1               pop hl
 495+ 9CE1
 496+ 9CE1 1A               ld a,(de)
 497+ 9CE2 AE               xor (hl)
 498+ 9CE3 77               ld (hl),a
 499+ 9CE4 2C               inc l
 500+ 9CE5 1C               inc e
 501+ 9CE6 1A               ld a,(de)
 502+ 9CE7 AE               xor (hl)
 503+ 9CE8 77               ld (hl),a
 504+ 9CE9 2C               inc l
 505+ 9CEA 1C               inc e
 506+ 9CEB 1A               ld a,(de)
 507+ 9CEC AE               xor (hl)
 508+ 9CED 77               ld (hl),a
 509+ 9CEE 13               inc de
 510+ 9CEF
 511+ 9CEF E1               pop hl
 512+ 9CF0
 513+ 9CF0 1A               ld a,(de)
 514+ 9CF1 AE               xor (hl)
 515+ 9CF2 77               ld (hl),a
 516+ 9CF3 2C               inc l
 517+ 9CF4 1C               inc e
 518+ 9CF5 1A               ld a,(de)
 519+ 9CF6 AE               xor (hl)
 520+ 9CF7 77               ld (hl),a
 521+ 9CF8 2C               inc l
 522+ 9CF9 1C               inc e
 523+ 9CFA 1A               ld a,(de)
 524+ 9CFB AE               xor (hl)
 525+ 9CFC 77               ld (hl),a
 526+ 9CFD 13               inc de
 527+ 9CFE
 528+ 9CFE E1               pop hl
 529+ 9CFF
 530+ 9CFF 1A               ld a,(de)
 531+ 9D00 AE               xor (hl)
 532+ 9D01 77               ld (hl),a
 533+ 9D02 2C               inc l
 534+ 9D03 1C               inc e
 535+ 9D04 1A               ld a,(de)
 536+ 9D05 AE               xor (hl)
 537+ 9D06 77               ld (hl),a
 538+ 9D07 2C               inc l
 539+ 9D08 1C               inc e
 540+ 9D09 1A               ld a,(de)
 541+ 9D0A AE               xor (hl)
 542+ 9D0B 77               ld (hl),a
 543+ 9D0C 13               inc de
 544+ 9D0D
 545+ 9D0D E1               pop hl
 546+ 9D0E
 547+ 9D0E 1A               ld a,(de)
 548+ 9D0F AE               xor (hl)
 549+ 9D10 77               ld (hl),a
 550+ 9D11 2C               inc l
 551+ 9D12 1C               inc e
 552+ 9D13 1A               ld a,(de)
 553+ 9D14 AE               xor (hl)
 554+ 9D15 77               ld (hl),a
 555+ 9D16 2C               inc l
 556+ 9D17 1C               inc e
 557+ 9D18 1A               ld a,(de)
 558+ 9D19 AE               xor (hl)
 559+ 9D1A 77               ld (hl),a
 560+ 9D1B 13               inc de
 561+ 9D1C
 562+ 9D1C E1               pop hl
 563+ 9D1D
 564+ 9D1D 1A               ld a,(de)
 565+ 9D1E AE               xor (hl)
 566+ 9D1F 77               ld (hl),a
 567+ 9D20 2C               inc l
 568+ 9D21 1C               inc e
 569+ 9D22 1A               ld a,(de)
 570+ 9D23 AE               xor (hl)
 571+ 9D24 77               ld (hl),a
 572+ 9D25 2C               inc l
 573+ 9D26 1C               inc e
 574+ 9D27 1A               ld a,(de)
 575+ 9D28 AE               xor (hl)
 576+ 9D29 77               ld (hl),a
 577+ 9D2A 13               inc de
 578+ 9D2B
 579+ 9D2B E1               pop hl
 580+ 9D2C
 581+ 9D2C 1A               ld a,(de)
 582+ 9D2D AE               xor (hl)
 583+ 9D2E 77               ld (hl),a
 584+ 9D2F 2C               inc l
 585+ 9D30 1C               inc e
 586+ 9D31 1A               ld a,(de)
 587+ 9D32 AE               xor (hl)
 588+ 9D33 77               ld (hl),a
 589+ 9D34 2C               inc l
 590+ 9D35 1C               inc e
 591+ 9D36 1A               ld a,(de)
 592+ 9D37 AE               xor (hl)
 593+ 9D38 77               ld (hl),a
 594+ 9D39 13               inc de
 595+ 9D3A
 596+ 9D3A E1               pop hl
 597+ 9D3B
 598+ 9D3B 1A               ld a,(de)
 599+ 9D3C AE               xor (hl)
 600+ 9D3D 77               ld (hl),a
 601+ 9D3E 2C               inc l
 602+ 9D3F 1C               inc e
 603+ 9D40 1A               ld a,(de)
 604+ 9D41 AE               xor (hl)
 605+ 9D42 77               ld (hl),a
 606+ 9D43 2C               inc l
 607+ 9D44 1C               inc e
 608+ 9D45 1A               ld a,(de)
 609+ 9D46 AE               xor (hl)
 610+ 9D47 77               ld (hl),a
 611+ 9D48 13               inc de
 612+ 9D49
 613+ 9D49 ED 73 15 8B  2 ld (Scanlines_album_SP),sp
 614+ 9D4D ED 7B 09 8B      ld sp,(Stack)
 615+ 9D51 C3 40 9C         jp Pinta_Sprites
 616+ 9D54
 617+ 9D54              Pinta_lento
 618+ 9D54
 619+ 9D54 E1           1 pop hl
 620+ 9D55
 621+ 9D55 1A               ld a,(de)
 622+ 9D56 AE               xor (hl)
 623+ 9D57 77               ld (hl),a
 624+ 9D58 2C               inc l
 625+ 9D59 1C               inc e
 626+ 9D5A 1A               ld a,(de)
 627+ 9D5B AE               xor (hl)
 628+ 9D5C 77               ld (hl),a
 629+ 9D5D 2C               inc l
 630+ 9D5E 1C               inc e
 631+ 9D5F 1A               ld a,(de)
 632+ 9D60 AE               xor (hl)
 633+ 9D61 77               ld (hl),a
 634+ 9D62 13               inc de
 635+ 9D63
 636+ 9D63 10 EF            djnz 1B
 637+ 9D65
 638+ 9D65 18 E2            jr 2B
# file closed: Genera_datos_de_impresion.asm
1816  9D67
1817  9D67              	SAVESNA "Pruebas.sna", START
1818  9D67
1819  9D67
1820  9D67
1821  9D67
# file closed: Banco_de_pruebas.asm
