# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 62 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD E9 A4     	call Pinta_disparos_Amadeus
  74  82F6 CD B4 A1     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8B 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 46 92     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 89 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 89 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 8C 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 64 92     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 24								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8918
  20+ 8918              ;	db 0, defw 0, db 0
  21+ 8918              ;	.....
  22+ 8918
  23+ 8918 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  24+ 891A 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  25+ 891C              ;	defw ...
  26+ 891C              ; 	defw ...
  27+ 891C 00 00        	defw 0
  28+ 891E
  29+ 891E 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  30+ 8920              ;	defw ...
  31+ 8920              ; 	defw ...
  32+ 8920 00 00        	defw 0
  33+ 8922
  34+ 8922              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  35+ 8922
  36+ 8922 00 00        Disparo_Amad defw 0									; Puntero objeto.
  37+ 8924 00 00        	defw 0											; Puntero de impresión.
  38+ 8926
  39+ 8926 5D 89        Indice_de_disparos_entidades defw Disparo_1
  40+ 8928 57 89        	defw Disparo_2
  41+ 892A 51 89        	defw Disparo_3
  42+ 892C 4B 89        	defw Disparo_4
  43+ 892E 45 89        	defw Disparo_5
  44+ 8930 3F 89        	defw Disparo_6
  45+ 8932 39 89        	defw Disparo_7
  46+ 8934
  47+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  48+ 8937 00 00        	defw 0									; Puntero de impresión.
  49+ 8939 00           Disparo_7 db 0	     						; Control.
  50+ 893A
  51+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  52+ 893D 00 00        	defw 0									; Puntero de impresión.
  53+ 893F 00           Disparo_6 db 0		    					; Control.
  54+ 8940
  55+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  56+ 8943 00 00        	defw 0									; Puntero de impresión.
  57+ 8945 00           Disparo_5 db 0			    				; Control.
  58+ 8946
  59+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  60+ 8949 00 00        	defw 0									; Puntero de impresión.
  61+ 894B 00           Disparo_4 db 0				     			; Control.
  62+ 894C
  63+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  64+ 894F 00 00        	defw 0									; Puntero de impresión.
  65+ 8951 00           Disparo_3 db 0					    		; Control.
  66+ 8952
  67+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  68+ 8955 00 00        	defw 0									; Puntero de impresión.
  69+ 8957 00           Disparo_2 db 0						    	; Control.
  70+ 8958
  71+ 8958 00 00 00     	db 0,0,0								; Puntero objeto.
  72+ 895B 00 00        	defw 0									; Puntero de impresión.
  73+ 895D 00           Disparo_1 db 0							    ; Control.
  74+ 895E
  75+ 895E              ; -------------------------------------------------------------------------------------
  76+ 895E              ;
  77+ 895E              ;	Índice de cajas_Masters.
  78+ 895E              ;
  79+ 895E              ;	11/11/24
  80+ 895E              ;
  81+ 895E              ;	12 bytes.
  82+ 895E
  83+ 895E              Indice_de_cajas_master
  84+ 895E
  85+ 895E 68 89        	defw Caja_master_1
  86+ 8960 74 89        	defw Caja_master_2
  87+ 8962 80 89        	defw Caja_master_3
  88+ 8964 8C 89        	defw Caja_master_4
  89+ 8966 98 89        	defw Caja_master_5
  90+ 8968
  91+ 8968 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  92+ 896B 00           	db 0												; (Contador_de_vueltas).
  93+ 896C 00           	db 0												; (Impacto).
  94+ 896D 00 00        	defw 0												; (Puntero_de_impresion).
  95+ 896F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
  96+ 8971 00 00        	defw 0 												; (Contador_de_mov_masticados).
  97+ 8973 00           	db 0												; (Velocidad).
  98+ 8974
  99+ 8974              ; ---------- ---------- ---------- ---------- ----------
 100+ 8974
 101+ 8974 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 102+ 8977 00           	db 0 												; (Contador_de_vueltas).
 103+ 8978 00           	db 0												; (Impacto).
 104+ 8979 00 00        	defw 0												; (Puntero_de_impresion).
 105+ 897B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 106+ 897D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 107+ 897F 00           	db 0												; (Velocidad).
 108+ 8980
 109+ 8980              ; ---------- ---------- ---------- ---------- ----------
 110+ 8980
 111+ 8980 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 112+ 8983 00           	db 0 												; (Contador_de_vueltas).
 113+ 8984 00           	db 0												; (Impacto).
 114+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 115+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 116+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 117+ 898B 00           	db 0												; (Velocidad).
 118+ 898C
 119+ 898C              ; ---------- ---------- ---------- ---------- ----------
 120+ 898C
 121+ 898C 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 122+ 898F 00           	db 0 												; (Contador_de_vueltas).
 123+ 8990 00           	db 0												; (Impacto).
 124+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 125+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 126+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 127+ 8997 00           	db 0												; (Velocidad).
 128+ 8998
 129+ 8998              ; ---------- ---------- ---------- ---------- ----------
 130+ 8998
 131+ 8998 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 132+ 899B 00           	db 0 												; (Contador_de_vueltas).
 133+ 899C 00           	db 0												; (Impacto).
 134+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 135+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 136+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 137+ 89A3 00           	db 0												; (Velocidad).
 138+ 89A4
 139+ 89A4              ; -------------------------------------------------------------------------------------
 140+ 89A4              ;
 141+ 89A4              ;	Índice de cajas de entidades.
 142+ 89A4              ;
 143+ 89A4              ;	18/1/24
 144+ 89A4              ;
 145+ 89A4
 146+ 89A4              Indice_de_cajas_de_entidades
 147+ 89A4
 148+ 89A4 C0 89        	defw Caja_1
 149+ 89A6 CC 89        	defw Caja_2
 150+ 89A8 D8 89        	defw Caja_3
 151+ 89AA E4 89        	defw Caja_4
 152+ 89AC F0 89        	defw Caja_5
 153+ 89AE 00 8A        	defw Caja_6
 154+ 89B0              ;	defw Caja_7
 155+ 89B0
 156+ 89B0 00 00        	defw 0
 157+ 89B2 00 00        	defw 0
 158+ 89B4
 159+ 89B4              ; -------------------------
 160+ 89B4
 161+ 89B4              ; Relleno para que no se corrompa el movimiento. ?????
 162+ 89B4
 163+ 89B4              ;	db 0
 164+ 89B4
 165+ 89B4              ; ---------- ---------- ---------- ---------- ----------
 166+ 89B4              ;
 167+ 89B4              ;	28/05/24
 168+ 89B4              ;
 169+ 89B4              ; 	Cada caja tiene 14 bytes !!!
 170+ 89B4              ;
 171+ 89B4              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 172+ 89B4
 173+ 89B4 00           Amadeus_BOX db 0										; (Tipo).
 174+ 89B5 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 175+ 89B7 00           	db 0												; (Contador_de_vueltas).
 176+ 89B8 00           Impacto_Amadeus	db 0									; (Impacto).
 177+ 89B9 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 178+ 89BB 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 179+ 89BD 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 180+ 89BF 00           	db 0												; (Velocidad).
 181+ 89C0
 182+ 89C0              ; ---------- ---------- ---------- ---------- ----------
 183+ 89C0              ;
 184+ 89C0              ;	22/01/24
 185+ 89C0              ;
 186+ 89C0              ; 	Cada caja tiene 12 bytes !!!
 187+ 89C0              ;
 188+ 89C0              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 189+ 89C0
 190+ 89C0
 191+ 89C0 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 192+ 89C3 00           	db 0												; (Contador_de_vueltas).
 193+ 89C4 00           	db 0												; (Impacto).
 194+ 89C5 00 00        	defw 0												; (Puntero_de_impresion).
 195+ 89C7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 196+ 89C9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 197+ 89CB 00           	db 0												; (Velocidad).
 198+ 89CC
 199+ 89CC              ; ---------- ---------- ---------- ---------- ----------
 200+ 89CC
 201+ 89CC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 202+ 89CF 00           	db 0 												; (Contador_de_vueltas).
 203+ 89D0 00           	db 0												; (Impacto).
 204+ 89D1 00 00        	defw 0												; (Puntero_de_impresion).
 205+ 89D3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 206+ 89D5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 207+ 89D7 00           	db 0												; (Velocidad).
 208+ 89D8
 209+ 89D8              ; ---------- ---------- ---------- ---------- ----------
 210+ 89D8
 211+ 89D8 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 212+ 89DB 00           	db 0 												; (Contador_de_vueltas).
 213+ 89DC 00           	db 0												; (Impacto).
 214+ 89DD 00 00        	defw 0												; (Puntero_de_impresion).
 215+ 89DF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 216+ 89E1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 217+ 89E3 00           	db 0												; (Velocidad).
 218+ 89E4
 219+ 89E4              ; ---------- ---------- ---------- ---------- ----------
 220+ 89E4
 221+ 89E4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 222+ 89E7 00           	db 0 												; (Contador_de_vueltas).
 223+ 89E8 00           	db 0												; (Impacto).
 224+ 89E9 00 00        	defw 0												; (Puntero_de_impresion).
 225+ 89EB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 226+ 89ED 00 00        	defw 0 												; (Contador_de_mov_masticados).
 227+ 89EF 00           	db 0												; (Velocidad).
 228+ 89F0
 229+ 89F0              ; ---------- ---------- ---------- ---------- ----------
 230+ 89F0
 231+ 89F0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 232+ 89F3 00           	db 0 												; (Contador_de_vueltas).
 233+ 89F4 00           	db 0												; (Impacto).
 234+ 89F5 00 00        	defw 0												; (Puntero_de_impresion).
 235+ 89F7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 236+ 89F9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 237+ 89FB 00           	db 0												; (Velocidad).
 238+ 89FC
 239+ 89FC              	org $8a00
 240+ 8A00
 241+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 242+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 243+ 8A04 00           	db 0												; (Impacto).
 244+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 245+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 246+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 247+ 8A0B 00           	db 0												; (Velocidad).
 248+ 8A0C
 249+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 250+ 8A0C
 251+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 252+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 253+ 8A0C              ;	db 0												; (Impacto).
 254+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 255+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 256+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 257+ 8A0C              ;	db 0												; (Velocidad).
 258+ 8A0C
 259+ 8A0C              ; -------------------------------------------------------------------------------------
 260+ 8A0C              ;
 261+ 8A0C              ;	06/12/24
 262+ 8A0C              ;
 263+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 264+ 8A0C              ;
 265+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 266+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 267+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 268+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 269+ 8A0C
 270+ 8A0C              Indice_de_definiciones_de_entidades
 271+ 8A0C
 272+ 8A0C 10 8A        	defw Entidad_1
 273+ 8A0E 1D 8A        	defw Entidad_2
 274+ 8A10
 275+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 276+ 8A10
 277+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 278+ 8A10
 279+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 280+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 281+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 282+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 283+ 8A18
 284+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 285+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 286+ 8A18
 287+ 8A18 14 40        Pos_inicio_entidad1	defw $4014	                        ; (Posicion_inicio).
 288+ 8A1A 00           	db 0												; (Cuad_objeto).
 289+ 8A1B
 290+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 291+ 8A1D
 292+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 293+ 8A1D
 294+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 295+ 8A20 01           	db 1												; (Contador_de_vueltas).
 296+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 297+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 298+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 299+ 8A27 01           	db 1												; (Cuad_objeto).
 300+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 301+ 8A2A
 302+ 8A2A              ; -------------------------------------------------------------------------------------
 303+ 8A2A              ;
 304+ 8A2A              ;	28/05/24
 305+ 8A2A              ;
 306+ 8A2A              ;	Definición de Amadeus.
 307+ 8A2A              ;
 308+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 309+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 310+ 8A2A
 311+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 312+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 313+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 314+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 315+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 316+ 8A34 03           	db 3												; (Cuad_objeto).
 317+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  96+ 8A63
  97+ 8A63              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  98+ 8A63
  99+ 8A63              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
 100+ 8A63              ;                               Izquierda_y_subiendo+8 (11)
 101+ 8A63              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
 102+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 103+ 8A63              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
 104+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 105+ 8A63              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
 106+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 107+ 8A63              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
 108+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 109+ 8A63              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
 110+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 111+ 8A63              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
 112+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 113+ 8A63              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
 114+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 115+ 8A63
 116+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 117+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 118+ 8A6B
 119+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 120+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 120+ 8A73 08 00
 121+ 8A75
 122+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 123+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 123+ 8A7D 0F FE
 124+ 8A7F
 125+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 126+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 127+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 128+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 129+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 130+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 131+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 132+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 133+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 134+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 135+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 136+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 137+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 138+ 8AB3
 139+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 140+ 8AB7 11 11 91 FD      db $11,$11,$91,253,15,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 140+ 8ABB 0F 00
 141+ 8ABD
 142+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 143+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 143+ 8AC5 02 00
 144+ 8AC7
 145+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 146+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 146+ 8ACF 04 00
 147+ 8AD1
 148+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 149+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 149+ 8AD9 08 00
 150+ 8ADB
 151+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 152+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 152+ 8AE3 02 00
 153+ 8AE5
 154+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 155+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 155+ 8AED 06 00
 156+ 8AEF
 157+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 158+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 158+ 8AF7 06 00
 159+ 8AF9
 160+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 161+ 8AF9
 162+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 163+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 164+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 165+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 166+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 167+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 168+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 169+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 170+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 171+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 172+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 173+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 174+ 8B29
 175+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 176+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 177+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 178+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 179+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 180+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 181+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 182+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 183+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 184+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 185+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 186+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 187+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 188+ 8B5D
 189+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 190+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,15,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 190+ 8B65 0F 00
 191+ 8B67
 192+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 193+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 193+ 8B6F 02 00
 194+ 8B71
 195+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 196+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 196+ 8B79 04 00
 197+ 8B7B
 198+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 199+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 199+ 8B83 08 00
 200+ 8B85
 201+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 202+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 202+ 8B8D 02 00
 203+ 8B8F
 204+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 205+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 205+ 8B97 06 00
 206+ 8B99
 207+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 208+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 208+ 8BA1 06 00
 209+ 8BA3
 210+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 211+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 212+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 213+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 214+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 215+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 216+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 217+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 218+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 219+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 220+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 221+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 222+ 8BD3
 223+ 8BD3
 224+ 8BD3
 225+ 8BD3
 226+ 8BD3
 227+ 8BD3
 228+ 8BD3
 229+ 8BD3
 230+ 8BD3
 231+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 DD 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BDC 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BDD
  18+ 8BDD 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BDE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE2 01 02
  20+ 8BE4 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BE8 01 02
  21+ 8BEA
# file closed: Niveles.asm
 150  8BEA
 151  8BEA              ; --------------------------------------------------------------------------------
 152  8BEA              ;
 153  8BEA              ; 12/05/24
 154  8BEA              ;
 155  8BEA              ; Parámetros DRAW.
 156  8BEA              ;
 157  8BEA
 158  8BEA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEA
 160  8BEA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEB              ;															- Patrón de movimiento.
 162  8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BEC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BED
 165  8BED 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BEE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BEE
 168  8BEE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BEE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BEE              ; Ejemplos.
 171  8BEE
 172  8BEE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BEE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BEE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BEE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BEE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BEE
 178  8BEE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BEF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BEF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BEF
 182  8BEF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF1
 185  8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF3
 187  8BF3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF3
 189  8BF3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF5              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF5
 192  8BF5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF5
 194  8BF5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF6
 200  8BF6 00           Ctrl_2 db 0
 201  8BF7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF7              ;
 209  8BF7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF7              ;														BIT 4, ???
 215  8BF7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF7
 217  8BF7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF8              ;
 223  8BF8              ; 														DESCRIPCIÖN:
 224  8BF8              ;
 225  8BF8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BF8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BF8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BF8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BF8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BF8              ;
 239  8BF8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BF8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BF8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BF8
 243  8BF8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BF8
 245  8BF8 00           Filas db 0												; Filas. [DRAW]
 246  8BF9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BFC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BFE
 250  8BFE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BFE
 252  8BFE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BFF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BFF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BFF
 256  8BFF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BFF
 258  8BFF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BFF              ;
 260  8BFF              ;	COLORES: 0 ..... NEGRO
 261  8BFF              ;    		 1 ..... AZUL
 262  8BFF              ; 			 2 ..... ROJO
 263  8BFF              ;			 3 ..... MAGENTA
 264  8BFF              ; 			 4 ..... VERDE
 265  8BFF              ; 			 5 ..... CIAN
 266  8BFF              ;			 6 ..... AMARILLO
 267  8BFF              ; 			 7 ..... BLANCO
 268  8BFF
 269  8BFF 00 00        Indice_Sprite_der defw 0
 270  8C01 00 00        Indice_Sprite_izq defw 0
 271  8C03 00 00        Puntero_DESPLZ_der defw 0
 272  8C05 00 00        Puntero_DESPLZ_izq defw 0
 273  8C07
 274  8C07 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C09 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0A 00           Columnas db 0
 277  8C0B
 278  8C0B 00           Columnitas db 0
 279  8C0C
 280  8C0C 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 281  8C0E              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 282  8C0E 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 283  8C0F
 284  8C0F              ; variables de control general.
 285  8C0F
 286  8C0F 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 287  8C10
 288  8C10              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 289  8C10
 290  8C10              Perfiles_de_velocidad
 291  8C10
 292  8C10 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 293  8C11 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 294  8C12 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 295  8C13 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 296  8C14
 297  8C14              ; Contadores de 16 bits.
 298  8C14
 299  8C14 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 300  8C16 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 301  8C18 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 302  8C1A 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 303  8C1C
 304  8C1C              ; Movimiento. ------------------------------------------------------------------------------------------------------
 305  8C1C
 306  8C1C 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 307  8C1E 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 308  8C20 00 00        Puntero_indice_mov_bucle defw 0							;
 309  8C22              ;
 310  8C22              ;
 311  8C22 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 312  8C23              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 313  8C23              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 314  8C23 00           Incrementa_puntero_backup db 0
 315  8C24 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 316  8C25              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 317  8C25 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 318  8C26 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 319  8C27 00           Cola_de_desplazamiento db 0								; Este byte indica:
 320  8C28              ;
 321  8C28              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 322  8C28              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 323  8C28              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 324  8C28              ;
 325  8C28              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 326  8C28              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 327  8C28              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 328  8C28              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 329  8C28              ;
 330  8C28              ;														;	"$ff" ..... Bucle infinito de repetición.
 331  8C28              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 332  8C28              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 333  8C28
 334  8C28 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 335  8C29
 336  8C29              ;														DESCRIPCIÓN:
 337  8C29              ;
 338  8C29              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 339  8C29              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 340  8C29              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 341  8C29              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 342  8C29              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 343  8C29              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 344  8C29
 345  8C29              ;														BIT 3, Recarga de nueva oleada.
 346  8C29              ;														BIT 4, Recarga de nueva oleada.
 347  8C29              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 348  8C29              ;														BIT 6, **** Frame completo.
 349  8C29              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 350  8C29
 351  8C29 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 352  8C2B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 353  8C2B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 354  8C2B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 355  8C2B
 356  8C2B              ; Gestión de ENTIDADES y CAJAS.
 357  8C2B
 358  8C2B 00 00        Puntero_store_caja defw 0
 359  8C2D 00 00        Puntero_restore_caja defw 0
 360  8C2F 00 00        Indice_restore_caja defw 0
 361  8C31 00 00        Puntero_indice_master defw 0
 362  8C33
 363  8C33 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 364  8C34 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 365  8C35 00           Entidades_en_curso db 0									; Entidades en pantalla.
 366  8C36
 367  8C36 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 368  8C38 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 369  8C3A              ;														; _ puntero (Indice_entidades).
 370  8C3A
 371  8C3A              ;---------------------------------------------------------------------------------------------------------------
 372  8C3A              ;
 373  8C3A              ;	13/10/24
 374  8C3A              ;
 375  8C3A              ;	Álbumes.
 376  8C3A
 377  8C3A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 378  8C3C              ;														; _variable para almacenar lo posición del puntero_
 379  8C3C              ; 														; _de pila, SP.
 380  8C3C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 381  8C3E              ;														; La utiliza la rutina [Extrae_foto_registros].
 382  8C3E
 383  8C3E              ; Impresión. ----------------------------------------------------------------------------------------------------
 384  8C3E
 385  8C3E 00 00        Album_de_pintado defw 0
 386  8C40 00 00        Album_de_borrado defw 0
 387  8C42 00 00        Album_de_pintado_Amadeus defw 0
 388  8C44 00 00        Album_de_borrado_Amadeus defw 0
 389  8C46
 390  8C46 00 00        Album_de_pintado_disparos_Amadeus defw 0
 391  8C48 00 00        Album_de_borrado_disparos_Amadeus defw 0
 392  8C4A
 393  8C4A 00 00        Album_de_pintado_disparos_Entidades defw 0
 394  8C4C 00 00        Album_de_borrado_disparos_Entidades defw 0
 395  8C4E
 396  8C4E
 397  8C4E 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 398  8C50
 399  8C50 00           Num_de_bytes_album_de_disparos db 0
 400  8C51 00           Num_de_bytes_album_de_disparos_borrado db 0
 401  8C52
 402  8C52 07           Numero_de_disparos_de_entidades db 7
 403  8C53
 404  8C53 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 405  8C54 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 406  8C55
 407  8C55 00 00        Techo_Scanlines_album defw 0
 408  8C57 00 00        Techo_Scanlines_album_2 defw 0
 409  8C59 00           Switch db 0
 410  8C5A 00 00        Techo defw 0
 411  8C5C 00 00        Scanlines_album_SP defw 0
 412  8C5E 00 89        India_SP defw Tabla_de_pintado
 413  8C60 03 89        India_2_SP defw Tabla_de_pintado+3
 414  8C62
 415  8C62 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 416  8C63              ;
 417  8C63              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 418  8C63              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 419  8C63              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 420  8C63              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 421  8C63              ;																Habilita el borrado/pintado de sprites.
 422  8C63              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 423  8C63              ;																_ a la baja.
 424  8C63              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 425  8C63              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 426  8C63              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 427  8C63              ; 																_ el último frame de la explosión de nuestra nave.
 428  8C63              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 429  8C63              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 430  8C63
 431  8C63 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 432  8C64              ;
 433  8C64              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 434  8C64
 435  8C64 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 436  8C65              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 437  8C65              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 438  8C65
 439  8C65              ; Gestión de Disparos.
 440  8C65
 441  8C65 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 442  8C67 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 443  8C69 00           Impacto2 db 0											; Byte de control de impactos.
 444  8C6A
 445  8C6A              ;
 446  8C6A              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 447  8C6A              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 448  8C6A              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 449  8C6A              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 450  8C6A
 451  8C6A
 452  8C6A
 453  8C6A
 454  8C6A
 455  8C6A
 456  8C6A
 457  8C6A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 458  8C6C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 459  8C6C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 460  8C6C
 461  8C6C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 462  8C6E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 463  8C6E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C71              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 465  8C71 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C74              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 467  8C74
 468  8C74              ;---------------------------------------------------------------------------------------------------------------
 469  8C74
 470  8C74              ; Relojes y temporizaciones.
 471  8C74
 472  8C74 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 473  8C75 05           Clock_explosion_Amadeus db 5
 474  8C76 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 475  8C77
 476  8C77 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 477  8C79 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 478  8C7B 00           Numero_rnd_disparos db 0
 479  8C7C
 480  8C7C 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 481  8C7E A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 482  8C7F A0           CLOCK_disparos_de_entidades db $a0
 483  8C80
 484  8C80              ;---------------------------------------------------------------------------------------------------------------
 485  8C80
 486  8C80              ; Gestión de NIVELES.
 487  8C80
 488  8C80 00           Nivel db 0												; Nivel actual del juego.
 489  8C81 00 00        Puntero_indice_NIVELES defw 0
 490  8C83 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 491  8C85              ; 														; _ que definen el NIVEL.
 492  8C85
 493  8C85              ; ---------------------------------------------------------------------------------------------------------------
 494  8C85
 495  8C85              ; Temporizaciones Shield.
 496  8C85
 497  8C85 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 498  8C89 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 499  8C8B 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 500  8C8C 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 501  8C8D 00           Shield_3 db 0
 502  8C8E
 503  8C8E 07           Lives db 7
 504  8C8F
 505  8C8F              ; 	INICIO  *************************************************************************************************************************************************************************
 506  8C8F              ;
 507  8C8F              ;	13/11/24
 508  8C8F
 509  8C8F              START
 510  8C8F
 511  8C8F 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 512  8C92 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 513  8C94 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 514  8C96 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 515  8C98 F3           	DI
 516  8C99
 517  8C99              ; Limpiamos pantalla.
 518  8C99
 519  8C99              ;	ld a,%00000111
 520  8C99              ;	call Cls
 521  8C99 CD 3B 92     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 522  8C9C
 523  8C9C              INICIALIZACION
 524  8C9C
 525  8C9C 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 526  8C9E CD 07 94     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 527  8CA1 CD 23 8F     	call Extrae_numero_aleatorio_y_avanza
 528  8CA4 6F           	ld l,a
 529  8CA5 26 00        	ld h,0
 530  8CA7 22 7C 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 531  8CAA
 532  8CAA              ;	Inicia los álbumes de líneas.
 533  8CAA
 534  8CAA CD 8D 91     	call Inicia_albumes_de_lineas
 535  8CAD CD 9D 91     	call Inicia_albumes_de_lineas_Amadeus
 536  8CB0 CD AA 91     	call Inicia_albumes_de_disparos
 537  8CB3
 538  8CB3              ;	Inicia 1er Nivel.
 539  8CB3
 540  8CB3 CD 69 94     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 541  8CB6 CD 37 94     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 542  8CB9              ;														   _reponiendo entidades eliminadas.
 543  8CB9 CD 9D 94     	call Prepara_Cajas_de_Entidades
 544  8CBC
 545  8CBC CD ED 94     	call Inicia_Amadeus
 546  8CBF
 547  8CBF              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 548  8CBF              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 549  8CBF              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 550  8CBF 11 B4 89     	ld de,Amadeus_BOX
 551  8CC2 CD DC 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CC5 CD 30 95     	call Limpiamos_bandeja_DRAW
 553  8CC8
 554  8CC8              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CC8
 556  8CC8 06 3C        	ld b,60
 557  8CCA CD 06 A0     2 call Amadeus_a_izquierda
 558  8CCD 10 FB        	djnz 2B
 559  8CCF
 560  8CCF CD 6B 91     	call Genera_datos_de_impresion_Amadeus
 561  8CD2
 562  8CD2              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CD2
 564  8CD2 CD C6 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CD5
 566  8CD5 CD 46 92     	call Inicia_Shield
 567  8CD8
 568  8CD8 2A 5C 8C     6 ld hl,(Scanlines_album_SP)
 569  8CDB 22 55 8C     	ld (Techo_Scanlines_album),hl
 570  8CDE
 571  8CDE 2A 40 8C     	ld hl,(Album_de_borrado)
 572  8CE1 22 5C 8C     	ld (Scanlines_album_SP),hl
 573  8CE4
 574  8CE4 21 00 89     	ld hl,Tabla_de_pintado
 575  8CE7 22 5E 8C     	ld (India_SP),hl
 576  8CEA
 577  8CEA 21 62 8C     	ld hl,Ctrl_3
 578  8CED CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CEF CB D6        	set 2,(hl)
 580  8CF1 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CF3
 582  8CF3 FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CF4
 584  8CF4 76           	halt
 585  8CF5
 586  8CF5              ; ------------------------------------
 587  8CF5
 588  8CF5              Main
 589  8CF5
 590  8CF5              ;
 591  8CF5              ; 07/11/24.
 592  8CF5
 593  8CF5              ; Gestión de disparos.
 594  8CF5
 595  8CF5 CD F8 8E     25 call Change_Disparos								; Intercambiamos los álbumes de disparos.
 596  8CF8 CD FA A1     	call Motor_de_disparos_entidades
 597  8CFB CD 95 A4     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 598  8CFE
 599  8CFE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 600  8CFE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 601  8CFE              ; Este hecho lo indica el bit2 de (Impacto2).
 602  8CFE
 603  8CFE CD 36 A6     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 604  8D01
 605  8D01              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 606  8D01
 607  8D01 21 7F 8C     	ld hl,CLOCK_disparos_de_entidades
 608  8D04 35           	dec (hl)
 609  8D05 CC 39 8E     	call z,Autoriza_disparo_de_entidades
 610  8D08
 611  8D08 2A 7C 8C     	ld hl,(Clock_next_entity)
 612  8D0B ED 4B 78 5C  	ld bc,(FRAMES)
 613  8D0F A7           	and a
 614  8D10 ED 42        	sbc hl,bc
 615  8D12 20 21        	jr nz,1F
 616  8D14
 617  8D14              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 618  8D14
 619  8D14 CD 23 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 620  8D17 CD 3A 8F     	call Define_Clock_next_entity
 621  8D1A
 622  8D1A              ; GESTIÓN DE ENTIDADES.
 623  8D1A
 624  8D1A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 625  8D1A              ; _ (Clock_next_entity) para la siguiente entidad.
 626  8D1A
 627  8D1A              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 628  8D1A              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 629  8D1A              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 630  8D1A
 631  8D1A 21 34 8C     	ld hl,Numero_parcial_de_entidades
 632  8D1D 46           	ld b,(hl)
 633  8D1E
 634  8D1E 04           	inc b
 635  8D1F 05           	dec b
 636  8D20
 637  8D20 F3           	di
 638  8D21 28 FE        	jr z,$													;! Nivel superado !!!!!
 639  8D23 FB           	ei
 640  8D24
 641  8D24 3A 35 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 642  8D27 B8           	cp b
 643  8D28 28 0B        	jr z,1F
 644  8D2A 30 09        	jr nc,1F
 645  8D2C
 646  8D2C              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 647  8D2C
 648  8D2C 3C           	inc a
 649  8D2D 32 35 8C     	ld (Entidades_en_curso),a
 650  8D30
 651  8D30 21 63 8C     	ld hl,Ctrl_4
 652  8D33 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 653  8D35
 654  8D35              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 655  8D35
 656  8D35              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 657  8D35              ;	call Define_Clock_next_entity
 658  8D35
 659  8D35 3A 35 8C     1 ld a,(Entidades_en_curso)
 660  8D38 A7           	and a
 661  8D39 CA DF 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 662  8D3C 47           	ld b,a													; No hay entidades que gestionar.
 663  8D3D
 664  8D3D              ; ( Código que ejecutamos con cada entidad: ).
 665  8D3D
 666  8D3D              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 667  8D3D              ;
 668  8D3D              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 669  8D3D
 670  8D3D 21 00 89     	ld hl,Tabla_de_pintado
 671  8D40 22 5E 8C     	ld (India_SP),hl
 672  8D43
 673  8D43 21 62 8C     	ld hl,Ctrl_3
 674  8D46 CB D6        	set 2,(hl)
 675  8D48 CD CD 8E     	call Change
 676  8D4B
 677  8D4B C5           2 push bc 												; Nº de entidades en curso.
 678  8D4C
 679  8D4C DD 2A 2B 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 680  8D50 CD 17 92     	call Salta_caja_de_entidades_vacia
 681  8D53
 682  8D53              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 683  8D53
 684  8D53 DD 7E 00     	ld a,(ix+0)
 685  8D56 CB 7F        	bit 7,a
 686  8D58 28 11        	jr z,5F
 687  8D5A
 688  8D5A              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 689  8D5A
 690  8D5A 21 63 8C     	ld hl,Ctrl_4
 691  8D5D CB 46        	bit 0,(hl)
 692  8D5F CC 26 92     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 693  8D62 28 E8        	jr z,6B
 694  8D64
 695  8D64 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 696  8D66 CB BF        	res 7,a
 697  8D68 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 698  8D6B
 699  8D6B              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 700  8D6B              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 701  8D6B
 702  8D6B 3A 69 8C     5 ld a,(Impacto2)
 703  8D6E CB 5F        	bit 3,a
 704  8D70 C4 2C A4     	call nz,Compara_con_coordenadas_de_disparo
 705  8D73
 706  8D73              ; Existe colisión entre esta entidad y Amadeus ???
 707  8D73
 708  8D73 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 709  8D76 CB 4F        	bit 1,a
 710  8D78 C4 62 93     	call nz,Genera_explosion
 711  8D7B 20 45        	jr nz,Gestiona_siguiente_entidad
 712  8D7D
 713  8D7D DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 714  8D80 A7           	and a
 715  8D81 28 0C        	jr z,3F
 716  8D83
 717  8D83              ; IMPACTO en entidad por colisión con Amadeus.
 718  8D83
 719  8D83              ; 5/7/24
 720  8D83              ; Nota importante:
 721  8D83              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 722  8D83              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 723  8D83              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 724  8D83
 725  8D83 3A B8 89     	ld a,(Impacto_Amadeus)
 726  8D86 A7           	and a
 727  8D87 C4 62 93     	call nz,Genera_explosion
 728  8D8A 20 36        	jr nz,Gestiona_siguiente_entidad
 729  8D8C
 730  8D8C              ; Falsa colisión !!!
 731  8D8C
 732  8D8C 32 EE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 733  8D8F
 734  8D8F              ; -------------------------------------------
 735  8D8F
 736  8D8F CD E5 90     3 call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 737  8D92
 738  8D92 D5           	push de
 739  8D93 CD 7E 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 740  8D96 CD A5 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 741  8D99 D1           	pop de
 742  8D9A
 743  8D9A DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 744  8D9C DD 2A EF 8B  	ld ix,(Puntero_de_impresion)
 745  8DA0 CD 4D 96     	call Genera_datos_de_impresion
 746  8DA3 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 747  8DA5
 748  8DA5 CD 53 95     	call Decrementa_Contador_de_mov_masticados
 749  8DA8
 750  8DA8              ; -------------------------------------------
 751  8DA8
 752  8DA8              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 753  8DA8
 754  8DA8 2A EF 8B     	ld hl,(Puntero_de_impresion)
 755  8DAB CD 21 96     	call Genera_coordenadas
 756  8DAE
 757  8DAE ED 4B EB 8B  	ld bc,(Coordenada_X)
 758  8DB2
 759  8DB2 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 760  8DB5 DD 70 02     	ld (ix+2),b
 761  8DB8
 762  8DB8              ; TODO: Generamos disparo ???
 763  8DB8
 764  8DB8 3A 54 8C     	ld a,(Permiso_de_disparo_Entidades)
 765  8DBB A7           	and a
 766  8DBC C4 4E 8E     	call nz,Entidad_genera_disparo_si_procede
 767  8DBF
 768  8DBF CD B0 A5     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 769  8DC2
 770  8DC2              Gestiona_siguiente_entidad
 771  8DC2
 772  8DC2 CD 26 92     	call Incrementa_punteros_de_cajas
 773  8DC5
 774  8DC5 C1           	pop bc
 775  8DC6 10 83        	djnz 2B
 776  8DC8
 777  8DC8              ; Hemos gestionado todas las entidades.
 778  8DC8              ; ----- ----- -----
 779  8DC8
 780  8DC8 CD 97 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 781  8DCB CD AE 8F     	call Ordena_tabla_de_impresion
 782  8DCE CD C6 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 783  8DD1
 784  8DD1 CD 4F 8F     	call Borra_diferencia
 785  8DD4
 786  8DD4 3A 62 8C     	ld a,(Ctrl_3)
 787  8DD7 CB 5F        	bit 3,a
 788  8DD9 20 04        	jr nz,Gestion_de_Amadeus
 789  8DDB
 790  8DDB EB           	ex de,hl
 791  8DDC 71           	ld (hl),c
 792  8DDD 2C           	inc l
 793  8DDE 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 794  8DDF
 795  8DDF              ;! GESTIONA AMADEUS !!!!!!!!!!
 796  8DDF
 797  8DDF              Gestion_de_Amadeus
 798  8DDF
 799  8DDF 21 62 8C     	ld hl,Ctrl_3
 800  8DE2 CB 76        	bit 6,(hl)
 801  8DE4 28 13        	jr z,Amadeus_vivo
 802  8DE6
 803  8DE6              ; Amadeus ha sido destruido.
 804  8DE6              ; Decrementa (Temp_new_live).
 805  8DE6
 806  8DE6 21 76 8C     	ld hl,Temp_new_live
 807  8DE9 35           	dec (hl)
 808  8DEA 20 26        	jr nz,End_frame
 809  8DEC
 810  8DEC              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 811  8DEC
 812  8DEC 21 8E 8C     	ld hl,Lives
 813  8DEF 35           	dec (hl)
 814  8DF0
 815  8DF0              ;! Fin del juego
 816  8DF0
 817  8DF0 F3           	di
 818  8DF1 28 FE        	jr z,$														;! GAME OVER !!!!!
 819  8DF3 FB           	ei
 820  8DF4
 821  8DF4              ; Nueva nave.
 822  8DF4
 823  8DF4 CD 6B 8E     	call Reinicia_Amadeus
 824  8DF7 18 19        	jr End_frame
 825  8DF9
 826  8DF9              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 827  8DF9
 828  8DF9              Amadeus_vivo
 829  8DF9
 830  8DF9 3A B8 89     	ld a,(Impacto_Amadeus)
 831  8DFC A7           	and a
 832  8DFD C4 D2 93     	call nz, Genera_explosion_Amadeus
 833  8E00 20 10        	jr nz, End_frame
 834  8E02
 835  8E02 CD 3F 93     	call Teclado
 836  8E05 21 62 8C     	ld hl,Ctrl_3
 837  8E08
 838  8E08 CB 6E        	bit 5,(hl)
 839  8E0A 28 06        	jr z,End_frame
 840  8E0C
 841  8E0C              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 842  8E0C
 843  8E0C CD E8 8E     	call Change_Amadeus
 844  8E0F CD 6B 91     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 845  8E12
 846  8E12              End_frame
 847  8E12
 848  8E12              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 849  8E12              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 850  8E12
 851  8E12 CD 57 A3     	call Genera_datos_de_impresion_disparos_Entidades
 852  8E15 CD 1B A5     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 853  8E18 CD 71 A4     	call Calcula_bytes_pintado_disparos
 854  8E1B CD 7E A4     	call Limpia_album_de_pintado_disparos_entidades
 855  8E1E
 856  8E1E              ; ------------ ------------- --------------
 857  8E1E
 858  8E1E 2A 40 8C     	ld hl,(Album_de_borrado)
 859  8E21 22 5C 8C     	ld (Scanlines_album_SP),hl
 860  8E24
 861  8E24 21 62 8C     	ld hl,Ctrl_3
 862  8E27 CB C6        	set 0,(hl) 											; Indica Frame completo.
 863  8E29 CB 9E        	res 3,(hl)
 864  8E2B CB A6        	res 4,(hl)
 865  8E2D
 866  8E2D 21 63 8C     	ld hl,Ctrl_4
 867  8E30 CB 86        	res 0,(hl)
 868  8E32
 869  8E32 AF           	xor a
 870  8E33 D3 FE        	out ($fe),a
 871  8E35
 872  8E35 76           	halt
 873  8E36
 874  8E36 C3 F5 8C     	jp Main
 875  8E39
 876  8E39              ;------------------------------------------
 877  8E39              ;
 878  8E39              ;	07/11/24
 879  8E39
 880  8E39              Autoriza_disparo_de_entidades
 881  8E39
 882  8E39 3E 01        	ld a,1
 883  8E3B 32 54 8C     	ld (Permiso_de_disparo_Entidades),a
 884  8E3E
 885  8E3E 3A 7E 8C     	ld a,(Repone_CLOCK_disparos)
 886  8E41 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 887  8E43 38 02        	jr c,1F
 888  8E45
 889  8E45              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 890  8E45              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 891  8E45              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 892  8E45
 893  8E45 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 894  8E47
 895  8E47 32 7E 8C     1 ld (Repone_CLOCK_disparos),a
 896  8E4A 32 7F 8C     	ld (CLOCK_disparos_de_entidades),a
 897  8E4D
 898  8E4D C9           	ret
 899  8E4E
 900  8E4E              ;------------------------------------------
 901  8E4E              ;
 902  8E4E              ;	14/09/24
 903  8E4E              ;
 904  8E4E              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 905  8E4E
 906  8E4E              Entidad_genera_disparo_si_procede
 907  8E4E
 908  8E4E 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 909  8E51 CB 06        	rlc (hl)
 910  8E53
 911  8E53 DC A7 A3     	call c,Genera_disparo_de_entidad_maldosa
 912  8E56
 913  8E56 C9           	ret
 914  8E57
 915  8E57              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 916  8E57              ;
 917  8E57              ;	30/09/24
 918  8E57
 919  8E57              Actuaiza_sp_de_disparos_de_entidades
 920  8E57
 921  8E57 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 922  8E5A 23           	inc hl
 923  8E5B 22 79 8C     	ld (Puntero_num_aleatorios_disparos),hl
 924  8E5E
 925  8E5E 11 FD 88     	ld de,Numeros_aleatorios+7
 926  8E61 7B           	ld a,e
 927  8E62 95           	sub l
 928  8E63 C0           	ret nz
 929  8E64
 930  8E64 21 F6 88     1 ld hl,Numeros_aleatorios
 931  8E67 22 79 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 932  8E6A C9           	ret
 933  8E6B
 934  8E6B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 935  8E6B              ;
 936  8E6B              ;	24/07/24
 937  8E6B
 938  8E6B              Reinicia_Amadeus
 939  8E6B
 940  8E6B              ;	Reinicia posición y estado.
 941  8E6B
 942  8E6B 21 CF 50     	ld hl,$50cf
 943  8E6E 22 B9 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 944  8E71 21 CC DC     	ld hl,$dccc
 945  8E74 22 BB 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 946  8E77 21 3D 00     	ld hl,$003d
 947  8E7A 22 BD 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 948  8E7D
 949  8E7D              ;	limpiamos el álbum de borrado.
 950  8E7D
 951  8E7D 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
 952  8E80
 953  8E80 AF           	xor a
 954  8E81 77           	ld (hl),a
 955  8E82
 956  8E82 E5           	push hl
 957  8E83 D1           	pop de
 958  8E84 13           	inc de
 959  8E85
 960  8E85 01 23 00     	ld bc,35
 961  8E88 ED B0        	ldir
 962  8E8A
 963  8E8A CD 6B 91     	call Genera_datos_de_impresion_Amadeus
 964  8E8D
 965  8E8D              ;	Reinicia temporizaciones.
 966  8E8D
 967  8E8D CD 46 92     	call Inicia_Shield
 968  8E90
 969  8E90 3E 5A        	ld a,90
 970  8E92 32 8B 8C     	ld (Shield),a
 971  8E95
 972  8E95 3E 64        	ld a,100
 973  8E97 32 76 8C     	ld (Temp_new_live),a
 974  8E9A
 975  8E9A              ; 	Restauramos el FLAG: Amadeus vivo.
 976  8E9A
 977  8E9A 21 62 8C     	ld hl,Ctrl_3
 978  8E9D CB B6        	res 6,(hl)
 979  8E9F
 980  8E9F              ;	Fuerza la impresión de la nave en el siguiente frame.
 981  8E9F
 982  8E9F 21 62 8C      	ld hl,Ctrl_3
 983  8EA2 CB EE        	set 5,(hl)
 984  8EA4
 985  8EA4 C9           	ret
 986  8EA5
 987  8EA5              ; --------------------------------------------------------------------------------------------------------------
 988  8EA5              ;
 989  8EA5              ;	23/11/24
 990  8EA5
 991  8EA5              Ajusta_velocidad_entidad
 992  8EA5
 993  8EA5 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 994  8EA8 A7           	and a
 995  8EA9 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 996  8EAA              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 997  8EAA              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 998  8EAA
 999  8EAA
1000  8EAA              ; Incrementa (Contador_de_vueltas)x2.
1001  8EAA              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
1002  8EAA
1003  8EAA              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
1004  8EAA              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
1005  8EAA              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
1006  8EAA              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1007  8EAA              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1008  8EAA
1009  8EAA
1010  8EAA CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1011  8EAC DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1012  8EAF E6 10        	and $10
1013  8EB1 C8           	ret z
1014  8EB2
1015  8EB2              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1016  8EB2
1017  8EB2 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1018  8EB5 CB 2F        	sra a
1019  8EB7 CB 2F        	sra a
1020  8EB9 DD 77 0B     	ld (ix+11),a
1021  8EBC
1022  8EBC DD 6E 07     	ld l,(ix+7)
1023  8EBF DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1024  8EC2
1025  8EC2              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1026  8EC2 23           	inc hl
1027  8EC3 23           	inc hl
1028  8EC4 23           	inc hl
1029  8EC5 23           	inc hl
1030  8EC6              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1031  8EC6
1032  8EC6 DD 75 07     	ld (ix+7),l
1033  8EC9 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1034  8ECC
1035  8ECC C9           	ret
1036  8ECD
1037  8ECD              ; --------------------------------------------------------------------------------------------------------------
1038  8ECD              ;
1039  8ECD              ;	25/08/24
1040  8ECD
1041  8ECD              Change
1042  8ECD
1043  8ECD 3A 59 8C     	ld a,(Switch)
1044  8ED0 EE 01        	xor 1
1045  8ED2 32 59 8C     	ld (Switch),a
1046  8ED5 2A 3E 8C     	ld hl,(Album_de_pintado)
1047  8ED8 ED 5B 40 8C  	ld de,(Album_de_borrado)
1048  8EDC EB           	ex de,hl
1049  8EDD 22 3E 8C     	ld (Album_de_pintado),hl
1050  8EE0 22 5C 8C     	ld (Scanlines_album_SP),hl
1051  8EE3 ED 53 40 8C  	ld (Album_de_borrado),de
1052  8EE7 C9           	ret
1053  8EE8
1054  8EE8              Change_Amadeus
1055  8EE8
1056  8EE8 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1057  8EEB ED 5B 44 8C  	ld de,(Album_de_borrado_Amadeus)
1058  8EEF EB           	ex de,hl
1059  8EF0 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1060  8EF3 ED 53 44 8C  	ld (Album_de_borrado_Amadeus),de
1061  8EF7 C9           	ret
1062  8EF8
1063  8EF8              Change_Disparos
1064  8EF8
1065  8EF8              ; Álbumes de Amadeus.
1066  8EF8
1067  8EF8 2A 46 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1068  8EFB ED 5B 48 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1069  8EFF EB           	ex de,hl
1070  8F00 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1071  8F03 ED 53 48 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1072  8F07 CD 66 A4     	call Limpia_album_de_pintado_disparos_Amadeus
1073  8F0A
1074  8F0A              ; Álbumes de entidades.
1075  8F0A
1076  8F0A 2A 4A 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1077  8F0D ED 5B 4C 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1078  8F11 EB           	ex de,hl
1079  8F12 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1080  8F15 ED 53 4C 8C  	ld (Album_de_borrado_disparos_Entidades),de
1081  8F19 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1082  8F1C
1083  8F1C 3A 50 8C     	ld a,(Num_de_bytes_album_de_disparos)
1084  8F1F 32 51 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1085  8F22
1086  8F22 C9           	ret
1087  8F23
1088  8F23              ; ------------------------------------
1089  8F23              ;
1090  8F23              ; 1/05/24
1091  8F23
1092  8F23              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1093  8F23              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1094  8F23
1095  8F23              ;	DESTRUYE: HL,DE,A
1096  8F23              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1097  8F23
1098  8F23              ;	Variables implicadas: (RND_SP).
1099  8F23
1100  8F23              Extrae_numero_aleatorio_y_avanza
1101  8F23
1102  8F23 21 FD 88     	ld hl,Numeros_aleatorios+7
1103  8F26 EB           	ex de,hl
1104  8F27 2A 77 8C     	ld hl,(RND_SP)
1105  8F2A
1106  8F2A 7B           	ld a,e
1107  8F2B 95           	sub l
1108  8F2C 20 06        	jr nz,1F
1109  8F2E
1110  8F2E              ; Sitúa HL al principio de la tabla de nº aleatorios.
1111  8F2E
1112  8F2E 21 F6 88     	ld hl,Numeros_aleatorios
1113  8F31 22 77 8C     	ld (RND_SP),HL
1114  8F34
1115  8F34              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1116  8F34
1117  8F34 7E           1 ld a,(hl)
1118  8F35 23           	inc hl
1119  8F36 22 77 8C     	ld (RND_SP),hl
1120  8F39 C9           	ret
1121  8F3A
1122  8F3A              ; ------------------------------------
1123  8F3A              ;
1124  8F3A              ; 1/05/24
1125  8F3A
1126  8F3A              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1127  8F3A              ; (1 a 4 segundos).
1128  8F3A              ; Actualizamos (Clock_next_entity) con A.
1129  8F3A
1130  8F3A              ;	DESTRUYE: A y B.
1131  8F3A              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1132  8F3A              ;			 Actualiza (Clock_next_entity) con A.
1133  8F3A
1134  8F3A              ;	Variables implicadas: (Clock_next_entity).
1135  8F3A
1136  8F3A              ; Notas:
1137  8F3A
1138  8F3A              ; 	$32 1 seg.
1139  8F3A              ; 	$64 2 seg.
1140  8F3A              ; 	$96 3 seg.
1141  8F3A              ; 	$c8 4 seg.
1142  8F3A              ; 	$fa 5 seg.
1143  8F3A
1144  8F3A              ; $ffff 1310,7 seg, 22 minutos.
1145  8F3A
1146  8F3A              ;	$0100  5 seg. aproximadamente.
1147  8F3A              ;	$0200 10 seg. aproximadamente.
1148  8F3A              ;	$0300 15 seg. aproximadamente.
1149  8F3A              ;	$0400 20 seg. aproximadamente.
1150  8F3A              ;	$0500 25 seg. aproximadamente.
1151  8F3A              ;	$0600 30 seg. aproximadamente.
1152  8F3A
1153  8F3A              Define_Clock_next_entity
1154  8F3A
1155  8F3A FE 34        	cp $34
1156  8F3C 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1157  8F3E
1158  8F3E              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1159  8F3E
1160  8F3E 4F           3 ld c,a
1161  8F3F 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1162  8F41 2A 78 5C     	ld hl,(FRAMES)
1163  8F44 A7           	and a
1164  8F45 ED 4A        	adc hl,bc
1165  8F47 22 7C 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1166  8F4A C9           	ret
1167  8F4B
1168  8F4B 3E 34        1 ld a,$34
1169  8F4D 18 EF        	jr 3B
1170  8F4F
1171  8F4F              ; ------------------------------------
1172  8F4F              ;
1173  8F4F              ; 18/03/24
1174  8F4F
1175  8F4F              Borra_diferencia
1176  8F4F
1177  8F4F ED 4B 5C 8C  	ld bc,(Scanlines_album_SP)
1178  8F53
1179  8F53 3A 59 8C     	ld a,(Switch)
1180  8F56 A7           	and a
1181  8F57 28 08        	jr z,2F
1182  8F59
1183  8F59 2A 57 8C     	ld hl,(Techo_Scanlines_album_2)
1184  8F5C 11 57 8C     	ld de,Techo_Scanlines_album_2
1185  8F5F 18 06        	jr 3F
1186  8F61
1187  8F61 2A 55 8C     2 ld hl,(Techo_Scanlines_album)
1188  8F64 11 55 8C     	ld de,Techo_Scanlines_album
1189  8F67
1190  8F67              ; Diferencia.
1191  8F67
1192  8F67 ED 42        3 sbc hl,bc
1193  8F69
1194  8F69 C8           	ret z
1195  8F6A D8           	ret c
1196  8F6B
1197  8F6B              ; Nuevo techo, (más bajo que el anterior).
1198  8F6B              ; Fijamos nuevo techo y borramos bytes sobrantes.
1199  8F6B
1200  8F6B EB           	ex de,hl
1201  8F6C
1202  8F6C 71           	ld (hl),c
1203  8F6D 2C           	inc l
1204  8F6E 70           	ld (hl),b
1205  8F6F
1206  8F6F AF           	xor a
1207  8F70 43           	ld b,e
1208  8F71
1209  8F71 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1210  8F74
1211  8F74 77           1 ld (hl),a
1212  8F75 23           	inc hl
1213  8F76 10 FC        	djnz 1B
1214  8F78
1215  8F78              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1216  8F78
1217  8F78 21 62 8C     	ld hl,Ctrl_3
1218  8F7B CB DE        	set 3,(hl)
1219  8F7D
1220  8F7D C9           	ret
1221  8F7E
1222  8F7E              ; --------------------------------------------------------------------------------------------------------------
1223  8F7E              ;
1224  8F7E              ;	23/11/24
1225  8F7E              ;
1226  8F7E              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1227  8F7E
1228  8F7E              Entidad_a_Tabla_de_pintado
1229  8F7E
1230  8F7E              ; Almacena la Coordenada Y de la entidad en curso.
1231  8F7E
1232  8F7E              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1233  8F7E
1234  8F7E DD 7E 02     	ld a,(ix+2)
1235  8F81 2A 5E 8C     	ld hl,(India_SP)
1236  8F84 77           	ld (hl),a
1237  8F85 2C           	inc l
1238  8F86
1239  8F86              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1240  8F86
1241  8F86 ED 5B 5C 8C  	ld de,(Scanlines_album_SP)
1242  8F8A
1243  8F8A 73           	ld (hl),e
1244  8F8B 2C           	inc l
1245  8F8C 72           	ld (hl),d
1246  8F8D 2C           	inc l
1247  8F8E
1248  8F8E              ; El 4º .db de la tabla será (Columnas).
1249  8F8E
1250  8F8E 3A 0A 8C     	ld a,(Columnas)
1251  8F91 77           	ld (hl),a
1252  8F92 2C           	inc l
1253  8F93 22 5E 8C     	ld (India_SP),hl
1254  8F96
1255  8F96 C9           	ret
1256  8F97
1257  8F97              ; --------------------------------------------------------------------------------------------------------------
1258  8F97              ;
1259  8F97              ;	27/03/24
1260  8F97              ;
1261  8F97
1262  8F97              Inicializa_India_y_limpia_Tabla_de_impresion
1263  8F97
1264  8F97 2A 5E 8C     	ld hl,(India_SP)
1265  8F9A 01 17 89     	ld bc,Indice_de_almacenes_de_mov_masticados-1							; Bytes de (Tabla_de_pintado)-1.
1266  8F9D
1267  8F9D 79           	ld a,c
1268  8F9E 95           	sub l
1269  8F9F 28 06        	jr z,2F
1270  8FA1 47           	ld b,a																	; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1271  8FA2              ;																			; _ y pasamos a inicializar (India_SP).
1272  8FA2 AF           	xor a
1273  8FA3
1274  8FA3 77           1 ld (hl),a
1275  8FA4 2C           	inc l
1276  8FA5 10 FC        	djnz 1B																	; Limpia Tabla.
1277  8FA7
1278  8FA7 21 00 89     2 ld hl,Tabla_de_pintado													; Inicializa (India_SP).
1279  8FAA 22 5E 8C     	ld (India_SP),hl
1280  8FAD
1281  8FAD C9           	ret
1282  8FAE
1283  8FAE              ; --------------------------------------------------------------------------------------------------------------
1284  8FAE              ;
1285  8FAE              ;	31/3/24
1286  8FAE
1287  8FAE              Ordena_tabla_de_impresion
1288  8FAE
1289  8FAE              ; 5794 T/states.
1290  8FAE              ; 6278 T/states.
1291  8FAE              ; 5310 T/states.
1292  8FAE
1293  8FAE              ; Inicializamos punteros (India_SP) e (India_2_SP).
1294  8FAE              ; Inicializamos contador de comparaciones, [C].
1295  8FAE              ; Cargamos los registros A y B para efectuar comparación.
1296  8FAE
1297  8FAE FD 2E 00     	ld iyl,0
1298  8FB1
1299  8FB1 3A 35 8C     	ld a,(Entidades_en_curso)
1300  8FB4 FE 04        	cp 4 	;	4
1301  8FB6 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1302  8FB7
1303  8FB7 3D           	dec a
1304  8FB8 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1305  8FB9 51           	ld d,c 										; Copia de respaldo.
1306  8FBA
1307  8FBA 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1308  8FBB
1309  8FBB 21 04 89     	ld hl,Tabla_de_pintado+4
1310  8FBE 46           	ld b,(hl)
1311  8FBF 22 60 8C     	ld (India_2_SP),hl
1312  8FC2
1313  8FC2 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1314  8FC3 DC EB 8F     	call c, Avanza_India_2_SP
1315  8FC6 CC EB 8F     	call z, Avanza_India_2_SP
1316  8FC9
1317  8FC9 FD 2D        	dec iyl
1318  8FCB 28 18        	jr z,2F
1319  8FCD
1320  8FCD
1321  8FCD              ; --------------------------------------------------------------------------------------------------------------
1322  8FCD              ;
1323  8FCD              ;	7/4/24
1324  8FCD
1325  8FCD              Trueque
1326  8FCD
1327  8FCD              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1328  8FCD              ;  			A contiene en nº de fila de (India_SP).
1329  8FCD              ;			HL contiene (India_2_SP).
1330  8FCD
1331  8FCD D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1332  8FCE E5           	push hl										; Preservo (India_2_SP).
1333  8FCF
1334  8FCF ED 5B 5E 8C  	ld de,(India_SP)
1335  8FD3 EB           	ex de,hl
1336  8FD4 70           	ld (hl),b
1337  8FD5 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1338  8FD6
1339  8FD6 CD 1A 90     	call Intercambia_1_byte
1340  8FD9 CD 1A 90     	call Intercambia_1_byte
1341  8FDC
1342  8FDC
1343  8FDC              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1344  8FDC              ; Recuperamos (India_2_SP) en HL.
1345  8FDC
1346  8FDC 2A 5E 8C     	ld hl,(India_SP)
1347  8FDF 7E           	ld a,(hl)
1348  8FE0
1349  8FE0 E1           	pop hl
1350  8FE1 D1           	pop de
1351  8FE2
1352  8FE2              ; --------------------------------------------------------------------------------------------------------------
1353  8FE2
1354  8FE2 CD EB 8F     	call Avanza_India_2_SP
1355  8FE5
1356  8FE5 14           2 inc d
1357  8FE6 15           	dec d
1358  8FE7 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1359  8FE8 18 D8        	jr 1B
1360  8FEA
1361  8FEA C9           	ret
1362  8FEB
1363  8FEB              ; ----- ----- ----- ----- -----
1364  8FEB
1365  8FEB              Avanza_India_2_SP
1366  8FEB
1367  8FEB 0D           	dec c
1368  8FEC 28 0B        	jr z,Avanza_punteros_indios
1369  8FEE
1370  8FEE FD 2C        	inc iyl
1371  8FF0
1372  8FF0 2C           	inc l
1373  8FF1 2C           	inc l
1374  8FF2 2C           	inc l
1375  8FF3 2C           	inc l
1376  8FF4
1377  8FF4 46           	ld b,(hl)
1378  8FF5 22 60 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1379  8FF8
1380  8FF8 C9           	ret
1381  8FF9
1382  8FF9              ; ----- ----- ----- ----- -----
1383  8FF9
1384  8FF9              Avanza_punteros_indios
1385  8FF9
1386  8FF9 15           	dec d
1387  8FFA 28 17        	jr z,Prepara_salida
1388  8FFC
1389  8FFC 4A           	ld c,d
1390  8FFD
1391  8FFD 2A 5E 8C     	ld hl,(India_SP)
1392  9000
1393  9000 2C           	inc l
1394  9001 2C           	inc l
1395  9002 2C           	inc l
1396  9003 2C           	inc l
1397  9004
1398  9004 7E           	ld a,(hl)
1399  9005 22 5E 8C     	ld (India_SP),hl
1400  9008
1401  9008 2C           	inc l
1402  9009 2C           	inc l
1403  900A 2C           	inc l
1404  900B 2C           	inc l
1405  900C
1406  900C 46           	ld b,(hl)
1407  900D 22 60 8C     	ld (India_2_SP),hl
1408  9010
1409  9010 FD 2C        	inc iyl
1410  9012
1411  9012 C9           	ret
1412  9013
1413  9013              Prepara_salida
1414  9013
1415  9013 21 00 89     	ld hl,Tabla_de_pintado
1416  9016 22 5E 8C     	ld (India_SP),hl
1417  9019 C9           	ret
1418  901A
1419  901A
1420  901A 2C           Intercambia_1_byte inc l
1421  901B 1C           	inc e
1422  901C 46           	ld b,(hl)
1423  901D 1A           	ld a,(de)
1424  901E EB           	ex de,hl
1425  901F 70           	ld (hl),b
1426  9020 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1427  9021 C9           	ret
1428  9022
1429  9022              ; -----------------------------------------------------------------------------------
1430  9022              ;
1431  9022              ;	20/01/24
1432  9022              ;
1433  9022              ;
1434  9022
1435  9022              Construye_movimientos_masticados_entidad
1436  9022
1437  9022 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1438  9025 E5           	push hl
1439  9026 CD D8 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1440  9029              ;															; _ el (Contador_de_mov_masticados).
1441  9029 CD E2 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1442  902C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1443  902C CD A3 9C     	call Recompone_posicion_inicio
1444  902F
1445  902F CD D3 99     1 call Draw	;  $902f Para breakpoint.
1446  9032
1447  9032              ;	IX contiene (Puntero_de_impresion)
1448  9032              ;	IY contiene (Puntero_objeto)
1449  9032
1450  9032 CD 79 90     	call Calcula_Columnitas
1451  9035 CD 9E 90     	call Codifica_Puntero_de_impresion
1452  9038
1453  9038 2A FA 8B     	ld hl,(Posicion_actual)
1454  903B 7D           	ld a,l
1455  903C E6 1F        	and $1f
1456  903E FE 01        	cp 1
1457  9040 28 FE        	jr z,$
1458  9042
1459  9042              ; debug !!!!!!!!!!!!!!!!!!!
1460  9042
1461  9042              ;	Puntero_de_impresion $8bef ..... $4780 ..... $4780 ..... $4680 ..... $4680
1462  9042              ;	Columns $8bf9 	  		   ..... 3	   ..... 3	   ..... 2	   ..... 3
1463  9042              ;	Posicion_actual $8bfa	   ..... $46c0 ..... $46c0 ..... $45c0 ..... $45c1
1464  9042              ;	CTRL_DESPLZ $8bfe		   ..... $fa   ..... $fc   ..... $00   ..... $f9
1465  9042              ;	Puntero_objeto $8bfc	   ..... $85d2 ..... $8632 ..... $8541 ..... $85a1
1466  9042              ;	Puntero_DESPLZ_der $8c03   ..... $8536 ..... $853a ..... $8530 ..... $8534
1467  9042              ;	Puntero_DESPLZ_izq $8c05   ..... $8398 ..... $8394 ..... $838e ..... $839a
1468  9042              ;	Cuad_objeto $8c09		   ..... 1	   ..... 1	   ..... 1	   ..... 1								; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
1469  9042              ;	Columnas $8c0a			   ..... 1     ..... 1     ..... 1     ..... 2
1470  9042              ;	Columnitas $8c0b		   ..... 1	   ..... 1     ..... 1     ..... 2
1471  9042              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df74 ..... $df78 ..... $df7c ..... $df80
1472  9042
1473  9042 CD 5E 90     	call Guarda_movimiento_masticado
1474  9045
1475  9045 CD 39 A0     	call Movimiento
1476  9048
1477  9048 3A 62 8C     	ld a,(Ctrl_3)																					; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1478  904B CB 4F        	bit 1,a 																						; _ que corresponde a esta entidad.
1479  904D 28 E0        	jr z,1B
1480  904F
1481  904F              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1482  904F              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1483  904F
1484  904F E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1485  9050 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1486  9053
1487  9053              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1488  9053
1489  9053 CD 9D A1     	call Situa_en_contador_general_de_mov_masticados
1490  9056
1491  9056              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1492  9056              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1493  9056
1494  9056 ED 4B F3 8B  	ld bc,(Contador_de_mov_masticados)
1495  905A
1496  905A 71           	ld (hl),c
1497  905B 23           	inc hl
1498  905C 70           	ld (hl),b
1499  905D
1500  905D C9           	ret
1501  905E
1502  905E              ; -----------------------------------------------------------------------------------
1503  905E              ;
1504  905E              ;	28/12/23
1505  905E              ;
1506  905E              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1507  905E              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1508  905E
1509  905E              Guarda_movimiento_masticado
1510  905E
1511  905E ED 73 3A 8C  	ld (Stack),sp
1512  9062 ED 7B F1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1513  9066
1514  9066 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1515  9068 FD E5            push iy 												; Pushea Puntero_objeto.
1516  906A
1517  906A ED 7B 3A 8C      ld sp,(Stack)
1518  906E
1519  906E 2A F3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1520  9071 23           	inc hl
1521  9072 22 F3 8B     	ld (Contador_de_mov_masticados),hl
1522  9075
1523  9075 CD D8 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1524  9078              ;															; _ el (Contador_de_mov_masticados).
1525  9078 C9               ret
1526  9079
1527  9079              ; --------------------------------------------------------------------------------------------------------------
1528  9079              ;
1529  9079              ;	27/01/2025
1530  9079              ;
1531  9079              ;	INPUTS: IX contiene (Puntero_de_impresion)
1532  9079              ;			IY contiene (Puntero_objeto)
1533  9079
1534  9079              Calcula_Columnitas
1535  9079
1536  9079 3E 03        	ld a,3
1537  907B 32 0B 8C     	ld (Columnitas),a
1538  907E
1539  907E 2A FA 8B     	ld hl,(Posicion_actual)
1540  9081 7D           	ld a,l
1541  9082 E6 1F        	and $1f
1542  9084 A7           	and a
1543  9085 28 11        	jr z,Una_columnita
1544  9087 3D           	dec a
1545  9088 28 0A        	jr z,Dos_columnitas
1546  908A 3C           	inc a
1547  908B
1548  908B FE 1D        	cp $1d
1549  908D D8           	ret c
1550  908E C8           	ret z
1551  908F
1552  908F 3C           	inc a
1553  9090 E6 1F        	and $1f
1554  9092 28 04        	jr z,Una_columnita
1555  9094
1556  9094 3E 02        Dos_columnitas ld a,2
1557  9096 18 02        	jr 1F
1558  9098 3E 01        Una_columnita ld a,1
1559  909A 32 0B 8C     1 ld (Columnitas),a
1560  909D
1561  909D C9           	ret
1562  909E
1563  909E              ; --------------------------------------------------------------------------------------------------------------
1564  909E              ;
1565  909E              ;	26/01/25
1566  909E              ;
1567  909E              ;	INPUTS: IX contiene (Puntero_de_impresion)
1568  909E              ;			IY contiene (Puntero_objeto)
1569  909E
1570  909E              Codifica_Puntero_de_impresion
1571  909E
1572  909E              ; 	En 1er lugar verificamos si estamos en zona de video, RET si no es así.
1573  909E
1574  909E DD 7C        	ld a,ixh
1575  90A0 CB 77        	bit 6,a
1576  90A2 C8           	ret z
1577  90A3
1578  90A3              ;	Correcciones:
1579  90A3
1580  90A3              ; 	Posicion_actual $8bfa
1581  90A3              ;	CTRL_DESPLZ $8bfe
1582  90A3              ;	Puntero_DESPLZ_der $8c03
1583  90A3              ; 	Puntero_DESPLZ_izq $8c05
1584  90A3              ;	Puntero_de_almacen_de_mov_masticados $8bf1
1585  90A3              ;	Cuad_objeto $8c09
1586  90A3              ;	Columnitas $8c0b
1587  90A3              ;	Columns $8bf9
1588  90A3
1589  90A3              ;	Codificamos (Puntero_de_impresion) en función del nº de (Columnitas) a imprimir.
1590  90A3
1591  90A3 3A 0B 8C     	ld a,(Columnitas)
1592  90A6 3D           	dec a
1593  90A7 28 14        	jr z,Codificamos_una_Columnita
1594  90A9
1595  90A9 3D           	dec a
1596  90AA 28 01        	jr z,Codificamos_dos_Columnitas
1597  90AC
1598  90AC C9           	ret
1599  90AD
1600  90AD              Codificamos_dos_Columnitas
1601  90AD
1602  90AD DD 7C        	ld a,ixh
1603  90AF CB FF        	set 7,a
1604  90B1 DD 67        	ld ixh,a
1605  90B3
1606  90B3              ;	Si nos encontramos en el lado derecho de la pantalla no modificamos (Puntero_objeto).
1607  90B3
1608  90B3 3A 09 8C     1 ld a,(Cuad_objeto)
1609  90B6 E6 01        	and 1
1610  90B8 C8           	ret z
1611  90B9
1612  90B9 CD C5 90     	call Ajusta_Puntero_objeto
1613  90BC
1614  90BC C9           	ret
1615  90BD
1616  90BD              Codificamos_una_Columnita
1617  90BD
1618  90BD DD 7C        	ld a,ixh
1619  90BF CB EF        	set 5,a
1620  90C1 DD 67        	ld ixh,a
1621  90C3
1622  90C3 18 EE        	jr 1B
1623  90C5
1624  90C5              ; ----- ----- ----- ----- -----
1625  90C5
1626  90C5              Ajusta_Puntero_objeto
1627  90C5
1628  90C5 3A 0B 8C     	ld a,(Columnitas)
1629  90C8 47           	ld b,a
1630  90C9
1631  90C9 3A F9 8B     	ld a,(Columns)
1632  90CC 90           	sub b
1633  90CD C8           	ret z
1634  90CE
1635  90CE 47           	ld b,a
1636  90CF
1637  90CF FD 2C        1 inc iyl
1638  90D1 10 FC        	djnz 1B
1639  90D3
1640  90D3 FD 22 FC 8B  	ld (Puntero_objeto),iy
1641  90D7
1642  90D7 C9           	ret
1643  90D8
1644  90D8              ; --------------------------------------------------------------------------------------------------------------
1645  90D8              ;
1646  90D8              ;	12/1/24
1647  90D8              ;
1648  90D8              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1649  90D8
1650  90D8              Actualiza_Puntero_de_almacen_de_mov_masticados
1651  90D8
1652  90D8 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1653  90DB 01 04 00     	ld bc,4
1654  90DE A7           	and a
1655  90DF ED 4A        	adc hl,bc
1656  90E1 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1657  90E4 C9           	ret
1658  90E5
1659  90E5              ; ------------------------------------------
1660  90E5              ;
1661  90E5              ;	23/11/24
1662  90E5              ;
1663  90E5              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1664  90E5
1665  90E5
1666  90E5              Obtenemos_puntero_de_impresion
1667  90E5
1668  90E5 DD 6E 07     	ld l,(ix+7)
1669  90E8 DD 66 08     	ld h,(ix+8)
1670  90EB
1671  90EB              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1672  90EB
1673  90EB ED 73 3A 8C  	ld (Stack),sp
1674  90EF F9           	ld sp,hl
1675  90F0
1676  90F0 AF           	xor a
1677  90F1 67           	ld h,a
1678  90F2 6C           	ld l,h															; ld hl,"0"
1679  90F3
1680  90F3 D1           	pop de															; (Puntero_objeto) en DE.
1681  90F4 C1           	pop bc															; (Puntero_de_impresion) codificado en BC.
1682  90F5
1683  90F5              ; Decodificamos (Puntero_de_impresion) para almacenarlo correctamente.
1684  90F5
1685  90F5              ; ----- ----- ----- ----- -----
1686  90F5
1687  90F5              Decodifica_Puntero_de_impresion
1688  90F5
1689  90F5 3E 02        	ld a,2
1690  90F7 32 0A 8C     	ld (Columnas),a
1691  90FA
1692  90FA CB 70        	bit 6,b
1693  90FC 28 1C        	jr z,1F 															; Entidad en ROM.
1694  90FE
1695  90FE 3C           	inc a
1696  90FF 32 0A 8C     	ld (Columnas),a
1697  9102
1698  9102              ;	(Puntero_de_impresión) codificado.
1699  9102
1700  9102 CB 78        	bit 7,b
1701  9104 28 09        	jr z,2F
1702  9106
1703  9106              ;	Decodifica 2 Columnas.
1704  9106
1705  9106 CB B8        	res 7,b
1706  9108 3E 02        	ld a,2
1707  910A 32 0A 8C     	ld (Columnas),a
1708  910D 18 0B        	jr 1F
1709  910F
1710  910F              ;	Decodifica 1 Columna.
1711  910F
1712  910F CB 68        2 bit 5,b
1713  9111 28 07        	jr z,1F
1714  9113
1715  9113 CB A8        	res 5,b
1716  9115 3E 01        	ld a,1
1717  9117 32 0A 8C     	ld (Columnas),a
1718  911A
1719  911A              ; 	Almacena (Puntero_de_impresion) en caja.
1720  911A
1721  911A DD 71 05     1 ld (ix+5),c
1722  911D DD 70 06     	ld (ix+6),b
1723  9120
1724  9120 ED 43 EF 8B  	ld (Puntero_de_impresion),bc
1725  9124
1726  9124              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1727  9124
1728  9124 39           	add hl,sp
1729  9125 DD 75 07     	ld (ix+7),l
1730  9128 DD 74 08     	ld (ix+8),h
1731  912B
1732  912B C1           	pop bc
1733  912C
1734  912C 79           	ld a,c
1735  912D 80           	add b															; Comprueba si ya no hay datos en el almacén.
1736  912E
1737  912E ED 7B 3A 8C  	ld sp,(Stack)
1738  9132
1739  9132 CC 61 95     	call z,Reinicia_entidad_maliciosa
1740  9135
1741  9135 C9           	ret
1742  9136
1743  9136              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1744  9136              ;
1745  9136              ;	25/11/24
1746  9136
1747  9136              Cargamos_registros_con_explosion
1748  9136
1749  9136 DD 6E 07     	ld l,(ix+7)
1750  9139 DD 66 08     	ld h,(ix+8)
1751  913C CD DC 91     	call Extrae_address
1752  913F EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1753  9140
1754  9140 DD 6E 05     	ld l,(ix+5)
1755  9143 DD 66 06     	ld h,(ix+6)
1756  9146
1757  9146 E5           	push hl
1758  9147 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1759  9149
1760  9149 C9           	ret
1761  914A
1762  914A
1763  914A              Cargamos_registros_con_explosion_Amadeus
1764  914A
1765  914A 2A BB 89     	ld hl,(Pamm_Amadeus)
1766  914D CD DC 91     	call Extrae_address
1767  9150
1768  9150 5D           	ld e,l
1769  9151 54           	ld d,h
1770  9152
1771  9152 DD 2A B9 89  	ld ix,(p.imp.amadeus)
1772  9156
1773  9156 C9           	ret
1774  9157
1775  9157              ; --------------------------------------------------------------------------------------------------------------
1776  9157              ;
1777  9157              ;	17/06/24
1778  9157              ;
1779  9157              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1780  9157              ;
1781  9157              ;	IX contiene el puntero de impresión.
1782  9157              ;	DE contiene (Puntero_objeto).
1783  9157
1784  9157
1785  9157              Cargamos_registros_con_mov_masticado_Amadeus
1786  9157
1787  9157 ED 73 3A 8C  	ld (Stack),sp
1788  915B ED 7B BB 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1789  915F D1           	pop de 															; DE contiene Puntero_objeto
1790  9160 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1791  9162 DD 22 B9 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1792  9166 ED 7B 3A 8C  	ld sp,(Stack)
1793  916A C9           	ret
1794  916B
1795  916B              ; ---------------------------------------------------------------------------------------------------------------------
1796  916B              ;
1797  916B              ;	18/6/24
1798  916B              ;
1799  916B              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1800  916B
1801  916B              Genera_datos_de_impresion_Amadeus
1802  916B
1803  916B 3A B8 89     	ld a,(Impacto_Amadeus)
1804  916E A7           	and a
1805  916F 20 03        	jr nz,1F
1806  9171
1807  9171              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1808  9171              ; _apuntando a la correspondiente explosión.
1809  9171
1810  9171 CD 57 91     	call Cargamos_registros_con_mov_masticado_Amadeus
1811  9174
1812  9174 DD 7D        1 ld a,ixl
1813  9176 E6 1F        	and $1f
1814  9178 32 B5 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1815  917B
1816  917B 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1817  917E E5           	push hl
1818  917F
1819  917F 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1820  9182 22 5C 8C     	ld (Scanlines_album_SP),hl
1821  9185
1822  9185 CD 4D 96     	call Genera_datos_de_impresion
1823  9188
1824  9188 E1           	pop hl
1825  9189 22 5C 8C     	ld (Scanlines_album_SP),hl
1826  918C
1827  918C C9           	ret
1828  918D
1829  918D              ; ---------------------------------------------------------------------------------------------------------------------
1830  918D              ;
1831  918D              ;	13/03/24
1832  918D              ;
1833  918D              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1834  918D
1835  918D              Inicia_albumes_de_lineas
1836  918D
1837  918D 21 00 80     	ld hl,Scanlines_album
1838  9190 22 3E 8C     	ld (Album_de_pintado),hl
1839  9193 22 5C 8C     	ld (Scanlines_album_SP),hl
1840  9196
1841  9196 21 1A 81     	ld hl,Scanlines_album_2
1842  9199 22 40 8C     	ld (Album_de_borrado),hl
1843  919C
1844  919C C9           	ret
1845  919D
1846  919D              Inicia_albumes_de_lineas_Amadeus
1847  919D
1848  919D 21 34 82     	ld hl,Amadeus_scanlines_album
1849  91A0 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1850  91A3 21 58 82     	ld hl,Amadeus_scanlines_album_2
1851  91A6 22 44 8C     	ld (Album_de_borrado_Amadeus),hl
1852  91A9
1853  91A9 C9           	ret
1854  91AA
1855  91AA              Inicia_albumes_de_disparos
1856  91AA
1857  91AA 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1858  91AD 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1859  91B0 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1860  91B3 22 48 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1861  91B6
1862  91B6 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1863  91B9 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1864  91BC 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1865  91BF
1866  91BF 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1867  91C2 22 4C 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1868  91C5
1869  91C5 C9           	ret
1870  91C6
1871  91C6              ; ---------------------------------------------------------------------------------------------------------------------
1872  91C6              ;
1873  91C6              ; 8/1/23
1874  91C6              ;
1875  91C6              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1876  91C6              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1877  91C6              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1878  91C6
1879  91C6              ; Destruye HL y DE !!!!!
1880  91C6
1881  91C6              Inicia_punteros_de_cajas
1882  91C6
1883  91C6 21 A4 89     	ld hl,Indice_de_cajas_de_entidades
1884  91C9 CD DC 91         call Extrae_address
1885  91CC 22 2B 8C         ld (Puntero_store_caja),hl
1886  91CF 21 A6 89     	ld hl,Indice_de_cajas_de_entidades+2
1887  91D2 22 2F 8C     	ld (Indice_restore_caja),hl
1888  91D5 CD DC 91     	call Extrae_address
1889  91D8 22 2D 8C     	ld (Puntero_restore_caja),hl
1890  91DB C9               ret
1891  91DC
1892  91DC              ; *************************************************************************************************************************************************************
1893  91DC
1894  91DC              ;
1895  91DC              ; 20/10/22
1896  91DC              ;
1897  91DC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1898  91DC              ;
1899  91DC              ; Destruye el puntero y DE !!!!!
1900  91DC
1901  91DC 5E           Extrae_address ld e,(hl)
1902  91DD 23           	inc hl
1903  91DE 56           	ld d,(hl)
1904  91DF 2B           	dec hl
1905  91E0 EB           	ex de,hl
1906  91E1 C9           	ret
1907  91E2
1908  91E2              ; *************************************************************************************************************************************************************
1909  91E2              ;
1910  91E2              ;	20/1/24
1911  91E2              ;
1912  91E2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1913  91E2              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1914  91E2              ;
1915  91E2              ;   Destruye HL y BC !!!!!,
1916  91E2              ;
1917  91E2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1918  91E2              ;					"0" ..... Izquierda.
1919  91E2
1920  91E2              Inicia_Puntero_objeto
1921  91E2
1922  91E2 3A 09 8C     	ld a,(Cuad_objeto)
1923  91E5 E6 01        	and 1
1924  91E7 F5           	push af
1925  91E8 CC 04 92     	call z,Inicia_puntero_objeto_izq
1926  91EB F1           	pop af
1927  91EC C8           	ret z
1928  91ED CD F1 91     	call Inicia_puntero_objeto_der
1929  91F0 C9           	ret
1930  91F1
1931  91F1              ; Arrancamos desde la parte izquierda de la pantalla.
1932  91F1              ; Iniciamos (Indice_Sprite_der).
1933  91F1
1934  91F1 2A FF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1935  91F4 22 03 8C     	ld (Puntero_DESPLZ_der),hl
1936  91F7 CD DC 91     	call Extrae_address
1937  91FA 22 FC 8B     	ld (Puntero_objeto),hl
1938  91FD
1939  91FD 2A 01 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1940  9200 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1941  9203 C9           	ret
1942  9204
1943  9204              ; Arrancamos desde la parte derecha de la pantalla.
1944  9204              ; Iniciamos (Indice_Sprite_izq).
1945  9204
1946  9204 2A 01 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1947  9207 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1948  920A CD DC 91     	call Extrae_address
1949  920D 22 FC 8B     	ld (Puntero_objeto),hl
1950  9210
1951  9210 2A FF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1952  9213 22 03 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1953  9216 C9           	ret
1954  9217
1955  9217              ; **************************************************************************************************
1956  9217              ;
1957  9217              ;	27/11/24
1958  9217              ;
1959  9217              ;	INPUT: IX contiene (Puntero_store_caja).
1960  9217              ;
1961  9217              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1962  9217
1963  9217              Salta_caja_de_entidades_vacia
1964  9217
1965  9217 DD 7E 00     	ld a,(ix+0)
1966  921A A7           	and a
1967  921B C0           	ret nz
1968  921C
1969  921C CD 26 92     	call Incrementa_punteros_de_cajas
1970  921F DD 2A 2B 8C  	ld ix,(Puntero_store_caja)
1971  9223 18 F2        	jr Salta_caja_de_entidades_vacia
1972  9225
1973  9225 C9           	ret
1974  9226
1975  9226              ; **************************************************************************************************
1976  9226              ;
1977  9226              ;	08/05/23
1978  9226              ;
1979  9226              ;	Incrementamos los dos punteros de entidades. (+1).
1980  9226
1981  9226              Incrementa_punteros_de_cajas
1982  9226
1983  9226 2A 2D 8C     	ld hl,(Puntero_restore_caja)
1984  9229 22 2B 8C     	ld (Puntero_store_caja),hl
1985  922C 2A 2F 8C     	ld hl,(Indice_restore_caja)
1986  922F 23           	inc hl
1987  9230 23           	inc hl
1988  9231 22 2F 8C     	ld (Indice_restore_caja),hl
1989  9234 CD DC 91         call Extrae_address
1990  9237 22 2D 8C         ld (Puntero_restore_caja),hl
1991  923A C9               ret
1992  923B
1993  923B              ; -----------------------------------------------------------
1994  923B
1995  923B              ; Teclado.
1996  923B
1997  923B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1998  923D DB FE        	in a,($fe)
1999  923F E6 01        	and $01
2000  9241 28 02        	jr z,1f
2001  9243 18 F6        	jr Pulsa_ENTER
2002  9245 C9           1 ret
2003  9246
2004  9246              ; **************************************************************************************************
2005  9246              ;
2006  9246              ; Temporización.
2007  9246
2008  9246              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
2009  9246              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
2010  9246              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
2011  9246              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
2012  9246
2013  9246              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
2014  9246              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
2015  9246              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
2016  9246
2017  9246              ; A partir de $4f61 no hace falta DELAY.
2018  9246
2019  9246              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2020  9246
2021  9246              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2022  9246              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2023  9246              ;	LD A,B
2024  9246              ;	AND A
2025  9246              ;	JR NZ,wait
2026  9246              ;	RET
2027  9246
2028  9246              ; ---------------------------------------------------------------------------------------------------------------
2029  9246              ;
2030  9246              ;	13/07/24
2031  9246              ;
2032  9246
2033  9246              Inicia_Shield
2034  9246
2035  9246 21 85 8C     	ld hl,Datos_Shield
2036  9249 22 89 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2037  924C
2038  924C 7E           	ld a,(hl)
2039  924D 32 8C 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2040  9250
2041  9250 3E 01        	ld a,1
2042  9252 32 8D 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2043  9255
2044  9255 C9           	ret
2045  9256
2046  9256              ; ---------- ---------- ---------- ---------- ----------
2047  9256              ;
2048  9256              ;	30/11/24
2049  9256              ;
2050  9256              ;	Limpia la caja de entidades de una entidad eliminada.
2051  9256              ;
2052  9256              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
2053  9256              ;	MODIFY: A,BC,DE y HL.
2054  9256
2055  9256              Limpia_caja_de_entidades
2056  9256
2057  9256 DD E5        	push ix
2058  9258 E1           	pop hl
2059  9259 AF           	xor a
2060  925A 77           	ld (hl),a
2061  925B 5D           	ld e,l
2062  925C 54           	ld d,h
2063  925D 1C           	inc e
2064  925E 01 0B 00     	ld bc,11
2065  9261 ED B0        	ldir
2066  9263 C9           	ret
2067  9264
2068  9264              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2069  9264              ;
2070  9264              ;	26/01/25
2071  9264              ;
2072  9264              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2073  9264              ;
2074  9264              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2075  9264              ;
2076  9264
2077  9264              Actualiza_pantalla
2078  9264
2079  9264 3E 02        	ld a,2
2080  9266 D3 FE        	out ($fe),a
2081  9268
2082  9268 3A 62 8C     	ld a,(Ctrl_3)
2083  926B CB 57        	bit 2,a
2084  926D 28 54        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2085  926F
2086  926F              ;	Inicializamos el (Puntero_de_columnas) para el borrado, (Puntero_indice_mov).
2087  926F
2088  926F 01 00 8C     	ld bc,Indice_Sprite_der+1
2089  9272 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2090  9276
2091  9276              Borrando_entidades
2092  9276
2093  9276 2A 5C 8C     	ld hl,(Scanlines_album_SP)
2094  9279 CD DC 91     	call Extrae_address
2095  927C 24           	inc h
2096  927D 25           	dec h
2097  927E 28 14        	jr z,Pintando_entidades
2098  9280
2099  9280              ;	Borramos entidades, pero antes... indicamos (Columnas).
2100  9280
2101  9280 ED 4B 1C 8C  	ld bc,(Puntero_indice_mov)
2102  9284 0A           	ld a,(bc)
2103  9285 32 0B 8C     	ld (Columnitas),a
2104  9288
2105  9288 AF           	xor a
2106  9289 02           	ld (bc),a
2107  928A 0C           	inc c
2108  928B ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2109  928F
2110  928F CD 41 97     	call Pinta_Sprites
2111  9292 18 E2        	jr Borrando_entidades
2112  9294
2113  9294              Pintando_entidades
2114  9294
2115  9294              ;	Inicializamos el (Puntero_de_columnas) para el borrado, (Puntero_indice_mov).
2116  9294
2117  9294 01 00 8C     	ld bc,Indice_Sprite_der+1
2118  9297 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2119  929B
2120  929B 2A 5E 8C     	ld hl,(India_SP)
2121  929E 2C           	inc l
2122  929F CD DC 91     	call Extrae_address
2123  92A2 24           	inc h
2124  92A3 25           	dec h
2125  92A4 28 1D        	jr z,Ejecuta_escudo
2126  92A6
2127  92A6              ;	Adquiere (Columnas).
2128  92A6
2129  92A6 1C           	inc e
2130  92A7 1C           	inc e
2131  92A8
2132  92A8 1A           	ld a,(de)
2133  92A9 32 0B 8C     	ld (Columnitas),a
2134  92AC
2135  92AC ED 4B 1C 8C  	ld bc,(Puntero_indice_mov)
2136  92B0 02           	ld (bc),a
2137  92B1 0C           	inc c
2138  92B2 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2139  92B6
2140  92B6 1C           	inc e
2141  92B7 ED 53 5E 8C  	ld (India_SP),de
2142  92BB
2143  92BB CD DC 91     	call Extrae_address
2144  92BE CD 41 97     	call Pinta_Sprites
2145  92C1
2146  92C1 18 D1        	jr Pintando_entidades
2147  92C3
2148  92C3              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2149  92C3
2150  92C3              Ejecuta_escudo
2151  92C3
2152  92C3 3A 8B 8C     	ld a,(Shield)
2153  92C6 A7           	and a
2154  92C7 20 34        	jr nz,Aplica_Shield
2155  92C9
2156  92C9              Borrando_Amadeus
2157  92C9
2158  92C9 21 62 8C     	ld hl,Ctrl_3
2159  92CC CB 6E        	bit 5,(hl)
2160  92CE 28 1F        	jr z,1F												; No borramos. No ha habido movimiento.
2161  92D0
2162  92D0 3E 03        	ld a,3
2163  92D2 32 0B 8C     	ld (Columnitas),a
2164  92D5
2165  92D5 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
2166  92D8 CD DC 91     	call Extrae_address
2167  92DB 24           	inc h
2168  92DC 25           	dec h
2169  92DD 28 03        	jr z,Pintando_Amadeus
2170  92DF CD 41 97     	call Pinta_Sprites
2171  92E2
2172  92E2              Pintando_Amadeus
2173  92E2
2174  92E2 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
2175  92E5 CD DC 91     	call Extrae_address
2176  92E8 24           	inc h
2177  92E9 25           	dec h
2178  92EA 28 03        	jr z,1F
2179  92EC CD 41 97     	call Pinta_Sprites
2180  92EF
2181  92EF              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2182  92EF
2183  92EF 21 62 8C     1 ld hl,Ctrl_3
2184  92F2 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2185  92F4 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2186  92F6 CB AE        	res 5,(hl)
2187  92F8
2188  92F8 3E 01        	ld a,1												; Borde azul.
2189  92FA D3 FE        	out ($fe),a
2190  92FC
2191  92FC C9           	ret
2192  92FD
2193  92FD              Aplica_Shield
2194  92FD
2195  92FD              ;	Bit 1 "1" (Shield_3) Sólo borra.
2196  92FD              ;		  "0"     ""     Borra/Pinta.
2197  92FD              ;	Bit 2    ""  RET.	 No borra, no pinta.
2198  92FD
2199  92FD 21 8D 8C     	ld hl,Shield_3
2200  9300
2201  9300 CB 5E        	bit 3,(hl)
2202  9302 20 DE        	jr nz,Pintando_Amadeus
2203  9304
2204  9304 CB 56        	bit 2,(hl)
2205  9306 20 E7        	jr nz,1B
2206  9308
2207  9308 CB 4E        	bit 1,(hl)
2208  930A C4 11 93     	call nz,Borra_Amadeus_shield
2209  930D
2210  930D 28 BA        	jr z,Borrando_Amadeus
2211  930F 18 DE        	jr 1B
2212  9311
2213  9311              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2214  9311
2215  9311              Borra_Amadeus_shield
2216  9311
2217  9311 3A 62 8C     	ld a,(Ctrl_3)
2218  9314 CB 6F        	bit 5,a
2219  9316 28 08        	jr z,1F
2220  9318
2221  9318 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
2222  931B CD DC 91     	call Extrae_address
2223  931E 18 06        	jr 2F
2224  9320
2225  9320 2A 42 8C     1 ld hl,(Album_de_pintado_Amadeus)
2226  9323 CD DC 91     	call Extrae_address
2227  9326
2228  9326 CD 41 97     2 call Pinta_Sprites
2229  9329
2230  9329 AF           	xor a
2231  932A 3C           	inc a											; Asegura NZ en la salida de la rutina.
2232  932B
2233  932B C9           	ret
2234  932C
2235  932C              Pinta_Amadeus_shield
2236  932C
2237  932C 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
2238  932F CD DC 91     	call Extrae_address
2239  9332 CD 41 97     	call Pinta_Sprites
2240  9335
2241  9335 AF           	xor a
2242  9336 3C           	inc a											; Asegura NZ en la salida de la rutina.
2243  9337
2244  9337 C9           	ret
2245  9338
2246  9338              Borra_Pinta_Amadeus_shield
2247  9338
2248  9338 CD 11 93     	call Borra_Amadeus_shield
2249  933B CD 2C 93     	call Pinta_Amadeus_shield
2250  933E C9           	ret
2251  933F
2252  933F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2253  933F              ;
2254  933F              ;	19/6/24
2255  933F              ;
2256  933F
2257  933F              Teclado
2258  933F
2259  933F              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2260  933F
2261  933F 3E F7        	ld a,$f7												; "5" para disparar.
2262  9341 DB FE        	in a,($fe)
2263  9343 E6 10        	and $10
2264  9345
2265  9345 CC 3A A5     	call z,Genera_disparo_Amadeus
2266  9348
2267  9348 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2268  934A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2269  934C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2270  934E CC 06 A0         call z,Amadeus_a_izquierda
2271  9351
2272  9351 3E F7        	ld a,$f7
2273  9353 DB FE        	in a,($fe)
2274  9355 E6 01        	and $01
2275  9357 C8           	ret z
2276  9358
2277  9358 3E F7        	ld a,$f7
2278  935A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2279  935C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2280  935E CC 1E A0     	call z,Amadeus_a_derecha
2281  9361
2282  9361 C9           	ret
2283  9362
2284  9362              ; ------------------------------------------------------------------------------------------------------------------------
2285  9362              ;
2286  9362              ;	06/07/24
2287  9362              ;
2288  9362
2289  9362              Genera_explosion
2290  9362
2291  9362 21 74 8C     	ld hl,Clock_explosion
2292  9365 35           	dec (hl)
2293  9366 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2294  9368
2295  9368              Borra_entidad_colisionada
2296  9368
2297  9368 CD 7E 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2298  936B
2299  936B DD E5        	push ix
2300  936D CD 36 91     	call Cargamos_registros_con_explosion
2301  9370 CD 4D 96     	call Genera_datos_de_impresion
2302  9373 DD E1        	pop ix
2303  9375
2304  9375 AF           	xor a
2305  9376 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2306  9377
2307  9377 C9           	ret
2308  9378
2309  9378              Siguiente_frame_explosion
2310  9378
2311  9378 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2312  937A
2313  937A              ; Avanza Frame de explosión.
2314  937A
2315  937A DD 6E 07     	ld l,(ix+7)
2316  937D DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2317  9380
2318  9380 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2319  9383
2320  9383 79           	ld a,c
2321  9384 95           	sub l
2322  9385 20 41        	jr nz,1F
2323  9387
2324  9387
2325  9387              ; Fín de la entidad !!!!!!!!!!!!!
2326  9387              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2327  9387
2328  9387              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2329  9387              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2330  9387              ; Entidades_en_curso db 0								; Entidades en pantalla.
2331  9387
2332  9387              ; La entidad eliminada, es la última del nivel ?
2333  9387
2334  9387 3A 33 8C     	ld a,(Numero_de_entidades)
2335  938A A7           	and a
2336  938B 28 30        	jr z,2F
2337  938D
2338  938D              ; Decrementa (Numero_de_entidades)
2339  938D
2340  938D 3D           	dec a
2341  938E 32 33 8C     	ld (Numero_de_entidades),a
2342  9391 21 35 8C     	ld hl,Entidades_en_curso
2343  9394 35           	dec (hl)
2344  9395
2345  9395              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2346  9395              ; IX apunta al 1er .db de la entidad eliminada.
2347  9395
2348  9395 2A 31 8C     	ld hl,(Puntero_indice_master)
2349  9398 CD DC 91     	call Extrae_address
2350  939B
2351  939B DD E5        	push ix
2352  939D D1           	pop de
2353  939E
2354  939E 01 0C 00     	ld bc,12
2355  93A1 ED B0        	ldir
2356  93A3
2357  93A3              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2358  93A3
2359  93A3 CD E5 90     	call Obtenemos_puntero_de_impresion
2360  93A6
2361  93A6 DD 6E 05     	ld l,(ix+5)
2362  93A9 2C           	inc l
2363  93AA DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2364  93AD
2365  93AD CD 21 96     	call Genera_coordenadas
2366  93B0
2367  93B0 ED 4B EB 8B  	ld bc,(Coordenada_X)
2368  93B4
2369  93B4 DD 71 01     	ld (ix+1),c
2370  93B7 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2371  93BA
2372  93BA AF           	xor a
2373  93BB 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2374  93BC
2375  93BC C9           	ret
2376  93BD
2377  93BD              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2378  93BD
2379  93BD 21 34 8C     2 ld hl,Numero_parcial_de_entidades
2380  93C0 35           	dec (hl)
2381  93C1 23           	inc hl
2382  93C2 35           	dec (hl)
2383  93C3
2384  93C3 CD 56 92     	call Limpia_caja_de_entidades
2385  93C6 18 A0        	jr Borra_entidad_colisionada
2386  93C8
2387  93C8 23           1 inc hl
2388  93C9 23           	inc hl
2389  93CA
2390  93CA DD 75 07     	ld (ix+7),l
2391  93CD DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2392  93D0
2393  93D0 18 96        	jr Borra_entidad_colisionada
2394  93D2
2395  93D2              ; ----- ----- ----- ----- -----
2396  93D2
2397  93D2              Genera_explosion_Amadeus
2398  93D2
2399  93D2 21 75 8C     	ld hl,Clock_explosion_Amadeus
2400  93D5 35           	dec (hl)
2401  93D6 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2402  93D8
2403  93D8              Borra_Amadeus_impactado
2404  93D8
2405  93D8 CD E8 8E     	call Change_Amadeus
2406  93DB CD 4A 91     	call Cargamos_registros_con_explosion_Amadeus
2407  93DE CD 6B 91     	call Genera_datos_de_impresion_Amadeus
2408  93E1
2409  93E1 21 62 8C     	ld hl,Ctrl_3
2410  93E4 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2411  93E6
2412  93E6 AF           	xor a
2413  93E7 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2414  93E8
2415  93E8 C9           	ret
2416  93E9
2417  93E9              Siguiente_frame_explosion_Amadeus
2418  93E9
2419  93E9 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2420  93EB
2421  93EB              ; Avanza Frame de explosión.
2422  93EB
2423  93EB 2A BB 89     	ld hl,(Pamm_Amadeus)
2424  93EE 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2425  93F1
2426  93F1 79           	ld a,c
2427  93F2 95           	sub l
2428  93F3 20 0B        	jr nz,1F
2429  93F5
2430  93F5              ; Fín de Amadeus !!!!!!!!!!!!!
2431  93F5              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2432  93F5
2433  93F5 AF           	xor a
2434  93F6 32 B8 89     	ld (Impacto_Amadeus),a
2435  93F9 21 62 8C     	ld hl,Ctrl_3
2436  93FC CB F6        	set 6,(hl)
2437  93FE
2438  93FE 18 D8        	jr Borra_Amadeus_impactado
2439  9400
2440  9400 23           1 inc hl
2441  9401 23           	inc hl
2442  9402 22 BB 89     	ld (Pamm_Amadeus),hl
2443  9405 18 D1        	jr Borra_Amadeus_impactado
2444  9407
2445  9407              ; ---------------------------------------------------------------
2446  9407
2447  9407              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9407              ; ******************************************************************************************************************************************************************************************
   2+ 9407              ;
   3+ 9407              ;   21/04/24
   4+ 9407              ;
   5+ 9407              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9407              ;   (XOR) bit a bit.
   7+ 9407              ;
   8+ 9407              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9407
  10+ 9407              Derivando_RND
  11+ 9407
  12+ 9407 21 F6 88         ld hl,Numeros_aleatorios
  13+ 940A
  14+ 940A ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 940C C5               push bc
  16+ 940D              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 940D 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9410              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9410
  20+ 9410 A7           6 and a                                 ; Carry a "0".
  21+ 9411 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9413 30 02            jr nc,1F
  23+ 9415
  24+ 9415 CB C1            set 0,c
  25+ 9417
  26+ 9417 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9418 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 941A 5F               ld e,a
  29+ 941B
  30+ 941B 7A               ld a,d
  31+ 941C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 941E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9420
  34+ 9420 CB 3F            srl a
  35+ 9422
  36+ 9422 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9423
  38+ 9423 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9424 28 04            jr z,4F
  40+ 9426
  41+ 9426 CB FF            set 7,a
  42+ 9428 18 02            jr 5F
  43+ 942A
  44+ 942A CB BF        4 res 7,a
  45+ 942C
  46+ 942C CB 21        5 sla c
  47+ 942E 10 E0            djnz 6B
  48+ 9430
  49+ 9430 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9431
  51+ 9431 77               ld (hl),a
  52+ 9432 23               inc hl
  53+ 9433 C1               pop bc
  54+ 9434 10 D4            djnz 3B
  55+ 9436
  56+ 9436 C9               ret
  57+ 9437
  58+ 9437
  59+ 9437
# file closed: RND_Derivando.asm
2448  9437              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9437              ;---------------------------------------------------------------------------------------------------------------
   2+ 9437              ;
   3+ 9437              ;   13/11/24
   4+ 9437
   5+ 9437              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9437
   7+ 9437              Genera_movimientos_masticados_del_nivel
   8+ 9437
   9+ 9437              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9437
  11+ 9437              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9437              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9437              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9437
  15+ 9437 2D           	dec l
  16+ 9438 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9439 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 943A 4E           	ld c,(hl)
  19+ 943B
  20+ 943B E5           1 push hl														; Push (Datos_de_nivel).
  21+ 943C C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 943D
  23+ 943D              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 943D
  25+ 943D 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 943E
  27+ 943E CD 7C 94     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9441
  29+ 9441              ;	Caja Master inicializada ???
  30+ 9441
  31+ 9441 7E           	ld a,(hl)
  32+ 9442 A7           	and a
  33+ 9443 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9445
  35+ 9445              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9445
  37+ 9445 C1           	pop bc
  38+ 9446 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9447 C5           	push bc
  40+ 9448
  41+ 9448 CD 1B 95     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 944B CD AF 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 944E
  44+ 944E 3A EA 8B     	ld a,(Tipo)
  45+ 9451 CD 8C 94     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9454
  47+ 9454              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9454
  49+ 9454              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9454              ;	ld a,(hl)
  51+ 9454              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9454
  53+ 9454              ;	ld hl,Posicion_inicio
  54+ 9454              ;	ld (hl),a
  55+ 9454
  56+ 9454              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9454              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9454
  59+ 9454 CD 22 90     	call Construye_movimientos_masticados_entidad
  60+ 9457
  61+ 9457 2A 31 8C     	ld hl,(Puntero_indice_master)
  62+ 945A CD DC 91     	call Extrae_address
  63+ 945D
  64+ 945D 5D           	ld e,l
  65+ 945E 54           	ld d,h
  66+ 945F
  67+ 945F CD DC 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9462
  69+ 9462              Movimientos_masticados_construidos
  70+ 9462
  71+ 9462 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9463
  73+ 9463 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9464 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9465
  76+ 9465 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9466 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9468
  79+ 9468 C9           	ret
  80+ 9469
  81+ 9469              ;---------------------------------------------------------------------------------------------------------------
  82+ 9469              ;
  83+ 9469              ;   9/11/24
  84+ 9469              ;
  85+ 9469              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9469              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9469              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9469              ;	_ de la 1ª entidad del Nivel.
  89+ 9469              ;
  90+ 9469              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9469
  92+ 9469              ;	MODIFICA: HL,DE y A.
  93+ 9469              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9469
  95+ 9469              Inicializa_1er_Nivel
  96+ 9469
  97+ 9469              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9469
  99+ 9469 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 946C CD DC 91     	call Extrae_address
 101+ 946F ED 53 81 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9473
 103+ 9473 7E           	ld a,(hl)
 104+ 9474 32 33 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9477
 106+ 9477 2C           	inc l
 107+ 9478 22 83 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 947B
 109+ 947B C9           	ret
 110+ 947C
 111+ 947C              ; ----------------------
 112+ 947C              ;
 113+ 947C              ;	13/11/24
 114+ 947C              ;
 115+ 947C
 116+ 947C              Situa_en_Caja_Master
 117+ 947C
 118+ 947C CD 9A 95         call Calcula_salto_en_BC
 119+ 947F 21 5E 89         ld hl,Indice_de_cajas_master
 120+ 9482 A7               and a
 121+ 9483 ED 4A            adc hl,bc
 122+ 9485 22 31 8C       	ld (Puntero_indice_master),hl
 123+ 9488 CD DC 91     	call Extrae_address
 124+ 948B C9           	ret
 125+ 948C
 126+ 948C              ; ----------------------
 127+ 948C
 128+ 948C              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 948C              ; 	ld bc,4
 130+ 948C              ; 	ldir
 131+ 948C              ; 	ret
 132+ 948C
 133+ 948C 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 948D CD 9A 95         call Calcula_salto_en_BC
 135+ 9490 21 1E 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 9493 A7               and a
 137+ 9494 ED 4A            adc hl,bc
 138+ 9496 CD DC 91         call Extrae_address
 139+ 9499 22 1C 8C         ld (Puntero_indice_mov),hl
 140+ 949C C9               ret
 141+ 949D
 142+ 949D              ;---------------------------------------------------------------------------------------------------------------
 143+ 949D              ;
 144+ 949D              ;   13/11/24
 145+ 949D              ;
 146+ 949D              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 949D
 148+ 949D
 149+ 949D              Prepara_Cajas_de_Entidades
 150+ 949D
 151+ 949D              ; Preparamos los punteros de las cajas de entidades:
 152+ 949D
 153+ 949D CD C6 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 94A0              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 94A0 CD E5 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 94A3
 157+ 94A3 2A 83 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 94A6
 159+ 94A6              ; En este punto:
 160+ 94A6              ;
 161+ 94A6              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 94A6              ; B contiene (Numero_parcial_de_entidades).
 163+ 94A6
 164+ 94A6 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 94A7
 166+ 94A7 7E           	ld a,(hl)
 167+ 94A8
 168+ 94A8 CD 7C 94     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 94AB
 170+ 94AB ED 5B 2B 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 94AF
 172+ 94AF D5           	push de
 173+ 94B0 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 94B2
 175+ 94B2 01 0C 00     	ld bc,12
 176+ 94B5 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 94B7              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 94B7
 179+ 94B7              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 94B7              ;
 181+ 94B7              ;
 182+ 94B7              ; ------------------------------------------------------ IX
 183+ 94B7              ; ------------------------------------------------------ IX
 184+ 94B7              ; ------------------------------------------------------ IX
 185+ 94B7              ; ------------------------------------------------------ IX
 186+ 94B7
 187+ 94B7 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 94B9
 189+ 94B9 CD E5 90     	call Obtenemos_puntero_de_impresion
 190+ 94BC
 191+ 94BC DD 6E 05     	ld l,(ix+5)
 192+ 94BF DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 193+ 94C2
 194+ 94C2 D5           	push de														; Push (Puntero_objeto).
 195+ 94C3 E5           	push hl														; Push (Puntero_de_impresion).
 196+ 94C4
 197+ 94C4 CD 21 96     	call Genera_coordenadas
 198+ 94C7
 199+ 94C7 ED 4B EB 8B  	ld bc,(Coordenada_X)
 200+ 94CB
 201+ 94CB DD 71 01     	ld (ix+1),c
 202+ 94CE DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 203+ 94D1
 204+ 94D1 CD 7E 8F      	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 205+ 94D4
 206+ 94D4 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 207+ 94D6 D1           	pop de														; Pop (Puntero_objeto) en DE.
 208+ 94D7
 209+ 94D7 CD 4D 96     	call Genera_datos_de_impresion
 210+ 94DA
 211+ 94DA DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 212+ 94DC
 213+ 94DC              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 214+ 94DC
 215+ 94DC CD 53 95     	call Decrementa_Contador_de_mov_masticados
 216+ 94DF CD 30 95     	call Limpiamos_bandeja_DRAW
 217+ 94E2 CD 26 92     	call Incrementa_punteros_de_cajas
 218+ 94E5
 219+ 94E5              ; Siguiente entidad del Nivel.
 220+ 94E5
 221+ 94E5 2A 83 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 222+ 94E8 23           	inc hl 														; _ entidad del Nivel.
 223+ 94E9
 224+ 94E9 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 225+ 94EA
 226+ 94EA 10 BA        	djnz 1B
 227+ 94EC
 228+ 94EC C9           	ret
 229+ 94ED
 230+ 94ED              ; -------------------------------------------------------------------------------------------------------------------
 231+ 94ED              ;
 232+ 94ED              ;	27/5/24
 233+ 94ED              ;
 234+ 94ED              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 235+ 94ED              ;
 236+ 94ED
 237+ 94ED              ; 	Cargamos la definición de Amadeus en DRAW.
 238+ 94ED              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 239+ 94ED
 240+ 94ED 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 241+ 94F0 CD AF 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 242+ 94F3
 243+ 94F3
 244+ 94F3              Construye_movimientos_masticados_Amadeus
 245+ 94F3
 246+ 94F3 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 247+ 94F6 CD D8 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 248+ 94F9              ;															; _ el (Contador_de_mov_masticados).
 249+ 94F9 CD E2 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 250+ 94FC              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 251+ 94FC
 252+ 94FC              ; Generamos movimientos masticados de Amadeus.
 253+ 94FC
 254+ 94FC 06 79        	ld b,121												; $0079, 121d.
 255+ 94FE
 256+ 94FE C5           1 push bc
 257+ 94FF CD D3 99     	call Draw
 258+ 9502 CD 5E 90     	call Guarda_movimiento_masticado
 259+ 9505
 260+ 9505 CD 3D 9D     	call Mov_right
 261+ 9508 CD 3D 9D     	call Mov_right											; Amadeus se mueve x2 pixel.
 262+ 950B
 263+ 950B C1           	pop bc
 264+ 950C 10 F0        	djnz 1B
 265+ 950E
 266+ 950E              ; Todos los movimientos masticados de Amadeus se han creado.
 267+ 950E
 268+ 950E              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 269+ 950E              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 270+ 950E
 271+ 950E 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 272+ 9511 01 08 00     	ld bc,8
 273+ 9514 A7           	and a
 274+ 9515 ED 42        	sbc hl,bc
 275+ 9517 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 276+ 951A
 277+ 951A C9           	ret
 278+ 951B
 279+ 951B              ; ---------------------------------------------------------------------
 280+ 951B              ;
 281+ 951B              ;	10/02/24
 282+ 951B              ;
 283+ 951B              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 284+ 951B              ;
 285+ 951B              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 286+ 951B
 287+ 951B              Definicion_segun_tipo
 288+ 951B
 289+ 951B CD 9A 95     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 290+ 951E 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 291+ 9521 CD A5 95     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 292+ 9524 C9           	ret
 293+ 9525
 294+ 9525              ; ---------------------------------------------------------------------
 295+ 9525              ;
 296+ 9525              ;	6/7/24
 297+ 9525
 298+ 9525
 299+ 9525              Store_Restore_cajas
 300+ 9525
 301+ 9525 ED 5B 2B 8C  	ld de,(Puntero_store_caja)
 302+ 9529 CD DC 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 303+ 952C CD 26 92     	call Incrementa_punteros_de_cajas
 304+ 952F C9           	ret
 305+ 9530
 306+ 9530              ; ---------------------------------------------------------------------
 307+ 9530              ;
 308+ 9530              ;	23/6/24
 309+ 9530              ;
 310+ 9530              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 311+ 9530              ;
 312+ 9530              ;	MODIFY: HL
 313+ 9530
 314+ 9530              Limpiamos_bandeja_DRAW
 315+ 9530
 316+ 9530 ED 73 3A 8C  	ld (Stack),sp
 317+ 9534 31 10 8C     	ld sp,Vel_left
 318+ 9537
 319+ 9537 AF           	xor a
 320+ 9538 67           	ld h,a
 321+ 9539 6F           	ld l,a
 322+ 953A
 323+ 953A E5           	push hl
 324+ 953B E5           	push hl
 325+ 953C E5           	push hl
 326+ 953D E5           	push hl
 327+ 953E E5           	push hl
 328+ 953F E5           	push hl
 329+ 9540 E5           	push hl
 330+ 9541 E5           	push hl
 331+ 9542 E5           	push hl
 332+ 9543 E5           	push hl
 333+ 9544 E5           	push hl
 334+ 9545 E5           	push hl
 335+ 9546 E5           	push hl
 336+ 9547 E5           	push hl
 337+ 9548 E5           	push hl
 338+ 9549 E5           	push hl
 339+ 954A E5           	push hl
 340+ 954B E5           	push hl
 341+ 954C
 342+ 954C 33           	inc sp
 343+ 954D
 344+ 954D E5           	push hl
 345+ 954E ED 7B 3A 8C  	ld sp,(Stack)
 346+ 9552
 347+ 9552 C9           	ret
 348+ 9553
 349+ 9553              ; ---------------------------------------------------------------------
 350+ 9553              ;
 351+ 9553              ;	23/11/24
 352+ 9553              ;
 353+ 9553              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 354+ 9553
 355+ 9553              Decrementa_Contador_de_mov_masticados
 356+ 9553
 357+ 9553 DD 6E 09     	ld l,(ix+9)
 358+ 9556 DD 66 0A     	ld h,(ix+10)
 359+ 9559
 360+ 9559 2B           	dec hl
 361+ 955A
 362+ 955A DD 75 09     	ld (ix+9),l
 363+ 955D DD 74 0A     	ld (ix+10),h
 364+ 9560
 365+ 9560 C9           	ret
 366+ 9561
 367+ 9561              ; ---------------------------------------------------------------------
 368+ 9561              ;
 369+ 9561              ;	24/11/24
 370+ 9561
 371+ 9561              Reinicia_entidad_maliciosa
 372+ 9561
 373+ 9561              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 374+ 9561
 375+ 9561 CD 9D A1     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 376+ 9564 CD AA A1     	call Transfiere_datos_de_contadores
 377+ 9567
 378+ 9567              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 379+ 9567
 380+ 9567 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 381+ 956A CD 1B 95     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 382+ 956D
 383+ 956D 7D           	ld a,l
 384+ 956E C6 0B        	add 11
 385+ 9570 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 386+ 9571
 387+ 9571 CD DC 91     	call Extrae_address
 388+ 9574
 389+ 9574 DD 75 07     	ld (ix+7),l
 390+ 9577 DD 74 08     	ld (ix+8),h
 391+ 957A
 392+ 957A CD E5 90     	call Obtenemos_puntero_de_impresion
 393+ 957D
 394+ 957D              ; Incrementa (Contador_de_vueltas)x2.
 395+ 957D              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 396+ 957D
 397+ 957D              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 398+ 957D              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 399+ 957D              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 400+ 957D              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 401+ 957D              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 402+ 957D
 403+ 957D DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 404+ 9581
 405+ 9581 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 406+ 9584 CB 2F        	sra a
 407+ 9586 CB 2F        	sra a
 408+ 9588
 409+ 9588 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 410+ 958B
 411+ 958B 3E 40        	ld a,$40
 412+ 958D DD BE 03     	cp (ix+3)
 413+ 9590 C0           	ret nz
 414+ 9591
 415+ 9591              ; Límitador.
 416+ 9591
 417+ 9591              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 418+ 9591
 419+ 9591 DD CB 03 2E  	sra (ix+3)
 420+ 9595 DD CB 0B 2E  	sra (ix+11)
 421+ 9599
 422+ 9599 C9           	ret
 423+ 959A
 424+ 959A              ;	------------------------------------------------------------------------------------
 425+ 959A              ;
 426+ 959A              ;	09/11/24
 427+ 959A              ;
 428+ 959A              ;	INPUTS:	A contiene el (Tipo) de entidad.
 429+ 959A              ;
 430+ 959A              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 431+ 959A              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 432+ 959A
 433+ 959A A7           Calcula_salto_en_BC and a
 434+ 959B 28 04        	jr z,1F
 435+ 959D CB 27        	sla a
 436+ 959F D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 95A1 4F           1 ld c,a
 438+ 95A2 06 00        	ld b,0
 439+ 95A4 C9           	ret
 440+ 95A5
 441+ 95A5              ; ------------------------------------------------------------------
 442+ 95A5              ;
 443+ 95A5              ;	19/1/24
 444+ 95A5              ;
 445+ 95A5              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 95A5              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 95A5
 448+ 95A5 A7           Situa_en_datos_de_definicion and a
 449+ 95A6 ED 4A        	adc hl,bc
 450+ 95A8 CD DC 91     	call Extrae_address
 451+ 95AB 22 38 8C         ld (Datos_de_entidad),hl
 452+ 95AE C9           	ret
 453+ 95AF
 454+ 95AF              ; ----------------------------------------------------------------------------------------------------------
 455+ 95AF              ;
 456+ 95AF              ;	24/6/24
 457+ 95AF              ;
 458+ 95AF              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 459+ 95AF              ;	_ de entidad.
 460+ 95AF              ;
 461+ 95AF              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 462+ 95AF              ;
 463+ 95AF              ;
 464+ 95AF              ;	MODIFICA: HL,DE y BC
 465+ 95AF
 466+ 95AF
 467+ 95AF              Definicion_de_entidad_a_bandeja_DRAW
 468+ 95AF
 469+ 95AF 11 EA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 470+ 95B2 7E           	ld a,(hl) 									; Volcamos Tipo.
 471+ 95B3 12           	ld (de),a
 472+ 95B4 23           	inc hl
 473+ 95B5              ;
 474+ 95B5 11 F8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 475+ 95B8 01 02 00     	ld bc,2
 476+ 95BB ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 477+ 95BD              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 478+ 95BD 11 ED 8B     	ld de,Contador_de_vueltas
 479+ 95C0 7E           	ld a,(hl)
 480+ 95C1 12           	ld (de),a
 481+ 95C2 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 482+ 95C3
 483+ 95C3 11 FF 8B     	ld de,Indice_Sprite_der
 484+ 95C6 01 04 00     	ld bc,4
 485+ 95C9 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 486+ 95CB
 487+ 95CB 11 07 8C     	ld de,Posicion_inicio
 488+ 95CE 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 489+ 95D1 ED B0        	ldir 									; Vuelco (Frames_explosion).
 490+ 95D3
 491+ 95D3 11 F1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 492+ 95D6 01 02 00     	ld bc,2
 493+ 95D9 ED B0        	ldir
 494+ 95DB
 495+ 95DB C9           	ret
 496+ 95DC
 497+ 95DC              ; ----------------------------------------------------------------------------------------------------------
 498+ 95DC              ;
 499+ 95DC              ;	1/8/24
 500+ 95DC              ;
 501+ 95DC
 502+ 95DC              Parametros_de_bandeja_DRAW_a_caja
 503+ 95DC
 504+ 95DC 21 EA 8B     	ld hl,Bandeja_DRAW
 505+ 95DF 01 0C 00     	ld bc,12
 506+ 95E2 ED B0        	ldir
 507+ 95E4 C9           	ret
 508+ 95E5
 509+ 95E5              ;---------------------------------------------------------------------------------------------------------------
 510+ 95E5              ;
 511+ 95E5              ;	13/11/24
 512+ 95E5              ;
 513+ 95E5              ;	INICIALIZA (Numero_parcial_de_entidades).
 514+ 95E5              ;
 515+ 95E5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 516+ 95E5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 517+ 95E5
 518+ 95E5              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 519+ 95E5              ;			- Actualiza (Numero_de_entidades).
 520+ 95E5
 521+ 95E5              ;	MODIFICA: A y B.
 522+ 95E5
 523+ 95E5
 524+ 95E5              Inicializa_Numero_parcial_de_entidades
 525+ 95E5
 526+ 95E5 3A 33 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 527+ 95E8 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 528+ 95EA 38 0E        	jr c,1F
 529+ 95EC 28 0C        	jr z,1F
 530+ 95EE
 531+ 95EE              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 532+ 95EE              ; Actualizamos variables.
 533+ 95EE
 534+ 95EE D6 06        	sub 6
 535+ 95F0 32 33 8C     	ld (Numero_de_entidades),a
 536+ 95F3 3E 06        	ld a,6
 537+ 95F5 32 34 8C     	ld (Numero_parcial_de_entidades),a
 538+ 95F8 47           	ld b,a
 539+ 95F9 C9           	ret
 540+ 95FA
 541+ 95FA              ; El nº total de entidades no supera el nº de cajas de entidades.
 542+ 95FA              ; (Numero_de_entidades)="0".
 543+ 95FA
 544+ 95FA 32 34 8C     1 ld (Numero_parcial_de_entidades),a
 545+ 95FD 47           	ld b,a
 546+ 95FE AF           	xor a
 547+ 95FF 32 33 8C     	ld (Numero_de_entidades),a
 548+ 9602 C9           	ret
 549+ 9603
# file closed: Rutinas_de_inicio_y_niveles.asm
2449  9603              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9603              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9603              ;
   3+ 9603              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9603              ;
   5+ 9603              ; *****************************************************************************************************************************************************************************************
   6+ 9603              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9603
   8+ 9603 7C           calcula_tercio ld a,h
   9+ 9604 E6 18        	and $18
  10+ 9606 CB 2F        	sra a
  11+ 9608 CB 2F        	sra a
  12+ 960A CB 2F        	sra a
  13+ 960C C9           	ret
  14+ 960D
# file closed: calcula_tercio.asm
2450  960D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 960D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 960D              ;
   3+ 960D              ;
   4+ 960D              ;	CLS.
   5+ 960D              ;
   6+ 960D              ;	Limpia la pantalla y define sus atributos.
   7+ 960D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 960D              ;
   9+ 960D              ;	COLORES: 0 ..... NEGRO
  10+ 960D              ;    		 1 ..... AZUL
  11+ 960D              ; 			 2 ..... ROJO
  12+ 960D              ;			 3 ..... MAGENTA
  13+ 960D              ; 			 4 ..... VERDE
  14+ 960D              ; 			 5 ..... CIAN
  15+ 960D              ;			 6 ..... AMARILLO
  16+ 960D              ; 			 7 ..... BLANCO
  17+ 960D              ;
  18+ 960D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 960D              ;
  20+ 960D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 960D
  22+ 960D
  23+ 960D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9610 11 01 40     	LD DE,$4001
  25+ 9613 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9616 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9618 ED B0        	LDIR
  28+ 961A 01 FF 02     	LD BC,767
  29+ 961D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 961E ED B0        	LDIR
  31+ 9620 C9           	ret
  32+ 9621
# file closed: Cls.asm
2451  9621              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9621              ; ------------------------------------------------------------------------
   2+ 9621              ;
   3+ 9621              ;	30/1/24
   4+ 9621              ;
   5+ 9621              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9621              ;	Fila superior "0", Columna izquierda "0".
   7+ 9621              ;
   8+ 9621              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9621              ;
  10+ 9621              ;	Modifica: A,BC y DE.
  11+ 9621
  12+ 9621              Genera_coordenadas
  13+ 9621
  14+ 9621 7D           	ld a,l
  15+ 9622 E6 1F        	and $1f
  16+ 9624
  17+ 9624 32 EB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9627
  19+ 9627 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9628 FE 40        	cp $40
  21+ 962A 38 1C        	jr c,4F
  22+ 962C
  23+ 962C CD 03 96     	call calcula_tercio
  24+ 962F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9630
  26+ 9630 1E 00        	ld e,0
  27+ 9632 7D           	ld a,l
  28+ 9633 E6 E0        	and $e0
  29+ 9635 28 01        	jr z,1F
  30+ 9637 04           	inc b
  31+ 9638
  32+ 9638 04           1 inc b
  33+ 9639 05           	dec b
  34+ 963A 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 963C              ;														; _ , salimos.
  36+ 963C 1C           3 inc e
  37+ 963D D6 20        	sub 32
  38+ 963F 20 FB        	jr nz,3B
  39+ 9641 10 F5        	djnz 1B
  40+ 9643
  41+ 9643 7B           2 ld a,e
  42+ 9644 32 EC 8B     	ld (Coordenada_y),a
  43+ 9647 C9           	ret
  44+ 9648
  45+ 9648 AF           4 xor a
  46+ 9649 32 EC 8B     	ld (Coordenada_y),a
  47+ 964C C9           	ret
  48+ 964D
# file closed: Genera_coordenadas.asm
2452  964D              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 964D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 964D              ;
   3+ 964D              ;	20/09/24
   4+ 964D              ;
   5+ 964D              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 964D              ;   DE contiene Puntero_objeto.
   7+ 964D              ;   IX contiene el Puntero de impresión.
   8+ 964D
   9+ 964D              Genera_datos_de_impresion
  10+ 964D
  11+ 964D ED 73 3A 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9651
  13+ 9651 2A 5C 8C         ld hl,(Scanlines_album_SP)
  14+ 9654
  15+ 9654 3E 05            ld a,5
  16+ 9656 85               add l
  17+ 9657 6F               ld l,a
  18+ 9658
  19+ 9658 F9               ld sp,hl
  20+ 9659 22 5C 8C         ld (Scanlines_album_SP),hl
  21+ 965C
  22+ 965C 21 00 00         ld hl,0
  23+ 965F
  24+ 965F DD E5            push ix
  25+ 9661 3B               dec sp
  26+ 9662 ED 7A            adc hl,sp
  27+ 9664 D5               push de
  28+ 9665
  29+ 9665              ; Recuperamos SP.
  30+ 9665
  31+ 9665 ED 7B 3A 8C      ld sp,(Stack)
  32+ 9669
  33+ 9669 E5               push hl
  34+ 966A F1               pop af
  35+ 966B 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 966C
  37+ 966C              ; Tenemos el encabezado listo.
  38+ 966C              ; Preparamos registros para generar los scanlines.
  39+ 966C
  40+ 966C DD E5            push ix
  41+ 966E E1               pop hl                                          ; 1er scanline en HL.
  42+ 966F
  43+ 966F ED 5B 5C 8C      ld de,(Scanlines_album_SP)
  44+ 9673
  45+ 9673              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 9673              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 9673
  48+ 9673 7C               ld a,h
  49+ 9674 FE 50            cp $50
  50+ 9676 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9678
  52+ 9678 20 05            jr nz,2F
  53+ 967A
  54+ 967A 7D               ld a,l
  55+ 967B FE E0            cp $e0
  56+ 967D 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 967F
  58+ 967F 7D           2 ld a,l
  59+ 9680 FE C0            cp $c0
  60+ 9682 D2 18 97         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 9685
  62+ 9685              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 9685
  64+ 9685 CD 85 9C         call NextScan
  65+ 9688 EB               ex de,hl
  66+ 9689
  67+ 9689 73               ld (hl),e
  68+ 968A 23               inc hl
  69+ 968B 72               ld (hl),d
  70+ 968C 23               inc hl
  71+ 968D
  72+ 968D EB               ex de,hl
  73+ 968E
  74+ 968E CD 85 9C         call NextScan
  75+ 9691 EB               ex de,hl
  76+ 9692
  77+ 9692 73               ld (hl),e
  78+ 9693 23               inc hl
  79+ 9694 72               ld (hl),d
  80+ 9695 23               inc hl
  81+ 9696
  82+ 9696 EB               ex de,hl
  83+ 9697
  84+ 9697 CD 85 9C         call NextScan
  85+ 969A EB               ex de,hl
  86+ 969B
  87+ 969B 73               ld (hl),e
  88+ 969C 23               inc hl
  89+ 969D 72               ld (hl),d
  90+ 969E 23               inc hl
  91+ 969F
  92+ 969F EB               ex de,hl
  93+ 96A0
  94+ 96A0 CD 85 9C         call NextScan
  95+ 96A3 EB               ex de,hl
  96+ 96A4
  97+ 96A4 73               ld (hl),e
  98+ 96A5 23               inc hl
  99+ 96A6 72               ld (hl),d
 100+ 96A7 23               inc hl
 101+ 96A8
 102+ 96A8 EB               ex de,hl
 103+ 96A9
 104+ 96A9 CD 85 9C         call NextScan
 105+ 96AC EB               ex de,hl
 106+ 96AD
 107+ 96AD 73               ld (hl),e
 108+ 96AE 23               inc hl
 109+ 96AF 72               ld (hl),d
 110+ 96B0 23               inc hl
 111+ 96B1
 112+ 96B1 EB               ex de,hl
 113+ 96B2
 114+ 96B2 CD 85 9C         call NextScan
 115+ 96B5 EB               ex de,hl
 116+ 96B6
 117+ 96B6 73               ld (hl),e
 118+ 96B7 23               inc hl
 119+ 96B8 72               ld (hl),d
 120+ 96B9 23               inc hl
 121+ 96BA
 122+ 96BA EB               ex de,hl
 123+ 96BB
 124+ 96BB CD 85 9C         call NextScan
 125+ 96BE EB               ex de,hl
 126+ 96BF
 127+ 96BF 73               ld (hl),e
 128+ 96C0 23               inc hl
 129+ 96C1 72               ld (hl),d
 130+ 96C2 23               inc hl
 131+ 96C3
 132+ 96C3 EB               ex de,hl
 133+ 96C4
 134+ 96C4 CD 85 9C         call NextScan
 135+ 96C7 EB               ex de,hl
 136+ 96C8
 137+ 96C8 73               ld (hl),e
 138+ 96C9 23               inc hl
 139+ 96CA 72               ld (hl),d
 140+ 96CB 23               inc hl
 141+ 96CC
 142+ 96CC EB               ex de,hl
 143+ 96CD
 144+ 96CD CD 85 9C         call NextScan
 145+ 96D0 EB               ex de,hl
 146+ 96D1
 147+ 96D1 73               ld (hl),e
 148+ 96D2 23               inc hl
 149+ 96D3 72               ld (hl),d
 150+ 96D4 23               inc hl
 151+ 96D5
 152+ 96D5 EB               ex de,hl
 153+ 96D6
 154+ 96D6 CD 85 9C         call NextScan
 155+ 96D9 EB               ex de,hl
 156+ 96DA
 157+ 96DA 73               ld (hl),e
 158+ 96DB 23               inc hl
 159+ 96DC 72               ld (hl),d
 160+ 96DD 23               inc hl
 161+ 96DE
 162+ 96DE EB               ex de,hl
 163+ 96DF
 164+ 96DF CD 85 9C         call NextScan
 165+ 96E2 EB               ex de,hl
 166+ 96E3
 167+ 96E3 73               ld (hl),e
 168+ 96E4 23               inc hl
 169+ 96E5 72               ld (hl),d
 170+ 96E6 23               inc hl
 171+ 96E7
 172+ 96E7 EB               ex de,hl
 173+ 96E8
 174+ 96E8 CD 85 9C         call NextScan
 175+ 96EB EB               ex de,hl
 176+ 96EC
 177+ 96EC 73               ld (hl),e
 178+ 96ED 23               inc hl
 179+ 96EE 72               ld (hl),d
 180+ 96EF 23               inc hl
 181+ 96F0
 182+ 96F0 EB               ex de,hl
 183+ 96F1
 184+ 96F1 CD 85 9C         call NextScan
 185+ 96F4 EB               ex de,hl
 186+ 96F5
 187+ 96F5 73               ld (hl),e
 188+ 96F6 23               inc hl
 189+ 96F7 72               ld (hl),d
 190+ 96F8 23               inc hl
 191+ 96F9
 192+ 96F9 EB               ex de,hl
 193+ 96FA
 194+ 96FA CD 85 9C         call NextScan
 195+ 96FD EB               ex de,hl
 196+ 96FE
 197+ 96FE 73               ld (hl),e
 198+ 96FF 23               inc hl
 199+ 9700 72               ld (hl),d
 200+ 9701 23               inc hl
 201+ 9702
 202+ 9702 EB               ex de,hl
 203+ 9703
 204+ 9703 CD 85 9C         call NextScan
 205+ 9706 EB               ex de,hl
 206+ 9707
 207+ 9707              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 9707              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 9707              ;   _ generar sus scanlines.
 210+ 9707
 211+ 9707              ;    ld (Puntero_de_impresion_disparo),de
 212+ 9707
 213+ 9707 73               ld (hl),e
 214+ 9708 23               inc hl
 215+ 9709 72               ld (hl),d
 216+ 970A 23               inc hl
 217+ 970B
 218+ 970B              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 970B
 220+ 970B 22 5C 8C         ld (Scanlines_album_SP),hl
 221+ 970E
 222+ 970E EB               ex de,hl
 223+ 970F
 224+ 970F              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 970F
 226+ 970F              ;    call NextScan
 227+ 970F              ;    call NextScan
 228+ 970F
 229+ 970F 22 67 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9712
 231+ 9712              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9712
 233+ 9712 08               ex af,af
 234+ 9713
 235+ 9713 F5               push af
 236+ 9714 E1               pop hl
 237+ 9715
 238+ 9715 36 10            ld (hl),16
 239+ 9717
 240+ 9717 C9               ret
 241+ 9718
 242+ 9718              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9718
 244+ 9718              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9718
 246+ 9718 3E 57            ld a,$57
 247+ 971A 94               sub h
 248+ 971B 47               ld b,a
 249+ 971C
 250+ 971C 3E DF            ld a,$df
 251+ 971E BD               cp l
 252+ 971F 38 04            jr c,1F
 253+ 9721
 254+ 9721 3E 08            ld a,8
 255+ 9723 80               add b
 256+ 9724 47               ld b,a
 257+ 9725
 258+ 9725              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 9725              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 9725
 261+ 9725 48           1 ld c,b
 262+ 9726 0C               inc c
 263+ 9727
 264+ 9727 04               inc b
 265+ 9728 05               dec b
 266+ 9729 20 02            jr nz,3F
 267+ 972B
 268+ 972B 18 0B            jr 6F
 269+ 972D
 270+ 972D CD 85 9C     3 call NextScan
 271+ 9730 EB               ex de,hl
 272+ 9731
 273+ 9731 73               ld (hl),e
 274+ 9732 23               inc hl
 275+ 9733 72               ld (hl),d
 276+ 9734 23               inc hl
 277+ 9735
 278+ 9735 EB               ex de,hl
 279+ 9736 10 F5            djnz 3B
 280+ 9738
 281+ 9738 ED 53 5C 8C  6 ld (Scanlines_album_SP),de
 282+ 973C
 283+ 973C 08           5 ex af,af
 284+ 973D F5               push af
 285+ 973E E1               pop hl
 286+ 973F
 287+ 973F 71               ld (hl),c
 288+ 9740
 289+ 9740 C9               ret
 290+ 9741
# file closed: Genera_datos_de_impresion.asm
2453  9741              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9741              ; -----------------------------------------------------------------------------
   2+ 9741              ;
   3+ 9741              ;   15/1/25
   4+ 9741              ;
   5+ 9741
   6+ 9741              Pinta_Sprites
   7+ 9741
   8+ 9741 ED 73 3A 8C      ld (Stack),sp
   9+ 9745
  10+ 9745 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  11+ 9746              ;                                       ; DE se encuentra en los datos del sprite.
  12+ 9746 2C               inc l
  13+ 9747 2C               inc l
  14+ 9748
  15+ 9748 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  16+ 9749
  17+ 9749 2C               inc l
  18+ 974A F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  19+ 974B
  20+ 974B              ;   Seleccionamos rutina de impresión:
  21+ 974B
  22+ 974B 08               ex af,af                            ; (Columnas) en AF´.
  23+ 974C
  24+ 974C 3E 10            ld a,16
  25+ 974E B8               cp b
  26+ 974F C2 88 99         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  27+ 9752
  28+ 9752              ;   Rutinas:
  29+ 9752
  30+ 9752              Pinta_rapido                            ;   1520 t/states.
  31+ 9752
  32+ 9752 3A 0B 8C         ld a,(Columnitas)
  33+ 9755 3D               dec a
  34+ 9756 CA 0F 99         jp z,Pinta_rapido_1_Columna
  35+ 9759 3D               dec a
  36+ 975A CA 56 98         jp z,Pinta_rapido_2_Columnas
  37+ 975D
  38+ 975D              Pinta_rapido_3_Columnas
  39+ 975D
  40+ 975D E1               pop hl
  41+ 975E
  42+ 975E 1A               ld a,(de)
  43+ 975F AE               xor (hl)
  44+ 9760 77               ld (hl),a
  45+ 9761 2C               inc l
  46+ 9762 1C               inc e
  47+ 9763 1A               ld a,(de)
  48+ 9764 AE               xor (hl)
  49+ 9765 77               ld (hl),a
  50+ 9766 2C               inc l
  51+ 9767 1C               inc e
  52+ 9768 1A               ld a,(de)
  53+ 9769 AE               xor (hl)
  54+ 976A 77               ld (hl),a
  55+ 976B 1C               inc e
  56+ 976C
  57+ 976C E1               pop hl
  58+ 976D
  59+ 976D 1A               ld a,(de)
  60+ 976E AE               xor (hl)
  61+ 976F 77               ld (hl),a
  62+ 9770 2C               inc l
  63+ 9771 1C               inc e
  64+ 9772 1A               ld a,(de)
  65+ 9773 AE               xor (hl)
  66+ 9774 77               ld (hl),a
  67+ 9775 2C               inc l
  68+ 9776 1C               inc e
  69+ 9777 1A               ld a,(de)
  70+ 9778 AE               xor (hl)
  71+ 9779 77               ld (hl),a
  72+ 977A 1C               inc e
  73+ 977B
  74+ 977B E1               pop hl
  75+ 977C
  76+ 977C 1A               ld a,(de)
  77+ 977D AE               xor (hl)
  78+ 977E 77               ld (hl),a
  79+ 977F 2C               inc l
  80+ 9780 1C               inc e
  81+ 9781 1A               ld a,(de)
  82+ 9782 AE               xor (hl)
  83+ 9783 77               ld (hl),a
  84+ 9784 2C               inc l
  85+ 9785 1C               inc e
  86+ 9786 1A               ld a,(de)
  87+ 9787 AE               xor (hl)
  88+ 9788 77               ld (hl),a
  89+ 9789 1C               inc e
  90+ 978A
  91+ 978A E1               pop hl
  92+ 978B
  93+ 978B 1A               ld a,(de)
  94+ 978C AE               xor (hl)
  95+ 978D 77               ld (hl),a
  96+ 978E 2C               inc l
  97+ 978F 1C               inc e
  98+ 9790 1A               ld a,(de)
  99+ 9791 AE               xor (hl)
 100+ 9792 77               ld (hl),a
 101+ 9793 2C               inc l
 102+ 9794 1C               inc e
 103+ 9795 1A               ld a,(de)
 104+ 9796 AE               xor (hl)
 105+ 9797 77               ld (hl),a
 106+ 9798 1C               inc e
 107+ 9799
 108+ 9799 E1               pop hl
 109+ 979A
 110+ 979A 1A               ld a,(de)
 111+ 979B AE               xor (hl)
 112+ 979C 77               ld (hl),a
 113+ 979D 2C               inc l
 114+ 979E 1C               inc e
 115+ 979F 1A               ld a,(de)
 116+ 97A0 AE               xor (hl)
 117+ 97A1 77               ld (hl),a
 118+ 97A2 2C               inc l
 119+ 97A3 1C               inc e
 120+ 97A4 1A               ld a,(de)
 121+ 97A5 AE               xor (hl)
 122+ 97A6 77               ld (hl),a
 123+ 97A7 1C               inc e
 124+ 97A8
 125+ 97A8 E1               pop hl
 126+ 97A9
 127+ 97A9 1A               ld a,(de)
 128+ 97AA AE               xor (hl)
 129+ 97AB 77               ld (hl),a
 130+ 97AC 2C               inc l
 131+ 97AD 1C               inc e
 132+ 97AE 1A               ld a,(de)
 133+ 97AF AE               xor (hl)
 134+ 97B0 77               ld (hl),a
 135+ 97B1 2C               inc l
 136+ 97B2 1C               inc e
 137+ 97B3 1A               ld a,(de)
 138+ 97B4 AE               xor (hl)
 139+ 97B5 77               ld (hl),a
 140+ 97B6 1C               inc e
 141+ 97B7
 142+ 97B7 E1               pop hl
 143+ 97B8
 144+ 97B8 1A               ld a,(de)
 145+ 97B9 AE               xor (hl)
 146+ 97BA 77               ld (hl),a
 147+ 97BB 2C               inc l
 148+ 97BC 1C               inc e
 149+ 97BD 1A               ld a,(de)
 150+ 97BE AE               xor (hl)
 151+ 97BF 77               ld (hl),a
 152+ 97C0 2C               inc l
 153+ 97C1 1C               inc e
 154+ 97C2 1A               ld a,(de)
 155+ 97C3 AE               xor (hl)
 156+ 97C4 77               ld (hl),a
 157+ 97C5 1C               inc e
 158+ 97C6
 159+ 97C6 E1               pop hl
 160+ 97C7
 161+ 97C7 1A               ld a,(de)
 162+ 97C8 AE               xor (hl)
 163+ 97C9 77               ld (hl),a
 164+ 97CA 2C               inc l
 165+ 97CB 1C               inc e
 166+ 97CC 1A               ld a,(de)
 167+ 97CD AE               xor (hl)
 168+ 97CE 77               ld (hl),a
 169+ 97CF 2C               inc l
 170+ 97D0 1C               inc e
 171+ 97D1 1A               ld a,(de)
 172+ 97D2 AE               xor (hl)
 173+ 97D3 77               ld (hl),a
 174+ 97D4 1C               inc e
 175+ 97D5
 176+ 97D5 E1               pop hl
 177+ 97D6
 178+ 97D6 1A               ld a,(de)
 179+ 97D7 AE               xor (hl)
 180+ 97D8 77               ld (hl),a
 181+ 97D9 2C               inc l
 182+ 97DA 1C               inc e
 183+ 97DB 1A               ld a,(de)
 184+ 97DC AE               xor (hl)
 185+ 97DD 77               ld (hl),a
 186+ 97DE 2C               inc l
 187+ 97DF 1C               inc e
 188+ 97E0 1A               ld a,(de)
 189+ 97E1 AE               xor (hl)
 190+ 97E2 77               ld (hl),a
 191+ 97E3 1C               inc e
 192+ 97E4
 193+ 97E4 E1               pop hl
 194+ 97E5
 195+ 97E5 1A               ld a,(de)
 196+ 97E6 AE               xor (hl)
 197+ 97E7 77               ld (hl),a
 198+ 97E8 2C               inc l
 199+ 97E9 1C               inc e
 200+ 97EA 1A               ld a,(de)
 201+ 97EB AE               xor (hl)
 202+ 97EC 77               ld (hl),a
 203+ 97ED 2C               inc l
 204+ 97EE 1C               inc e
 205+ 97EF 1A               ld a,(de)
 206+ 97F0 AE               xor (hl)
 207+ 97F1 77               ld (hl),a
 208+ 97F2 1C               inc e
 209+ 97F3
 210+ 97F3 E1               pop hl
 211+ 97F4
 212+ 97F4 1A               ld a,(de)
 213+ 97F5 AE               xor (hl)
 214+ 97F6 77               ld (hl),a
 215+ 97F7 2C               inc l
 216+ 97F8 1C               inc e
 217+ 97F9 1A               ld a,(de)
 218+ 97FA AE               xor (hl)
 219+ 97FB 77               ld (hl),a
 220+ 97FC 2C               inc l
 221+ 97FD 1C               inc e
 222+ 97FE 1A               ld a,(de)
 223+ 97FF AE               xor (hl)
 224+ 9800 77               ld (hl),a
 225+ 9801 1C               inc e
 226+ 9802
 227+ 9802 E1               pop hl
 228+ 9803
 229+ 9803 1A               ld a,(de)
 230+ 9804 AE               xor (hl)
 231+ 9805 77               ld (hl),a
 232+ 9806 2C               inc l
 233+ 9807 1C               inc e
 234+ 9808 1A               ld a,(de)
 235+ 9809 AE               xor (hl)
 236+ 980A 77               ld (hl),a
 237+ 980B 2C               inc l
 238+ 980C 1C               inc e
 239+ 980D 1A               ld a,(de)
 240+ 980E AE               xor (hl)
 241+ 980F 77               ld (hl),a
 242+ 9810 1C               inc e
 243+ 9811
 244+ 9811 E1               pop hl
 245+ 9812
 246+ 9812 1A               ld a,(de)
 247+ 9813 AE               xor (hl)
 248+ 9814 77               ld (hl),a
 249+ 9815 2C               inc l
 250+ 9816 1C               inc e
 251+ 9817 1A               ld a,(de)
 252+ 9818 AE               xor (hl)
 253+ 9819 77               ld (hl),a
 254+ 981A 2C               inc l
 255+ 981B 1C               inc e
 256+ 981C 1A               ld a,(de)
 257+ 981D AE               xor (hl)
 258+ 981E 77               ld (hl),a
 259+ 981F 1C               inc e
 260+ 9820
 261+ 9820 E1               pop hl
 262+ 9821
 263+ 9821 1A               ld a,(de)
 264+ 9822 AE               xor (hl)
 265+ 9823 77               ld (hl),a
 266+ 9824 2C               inc l
 267+ 9825 1C               inc e
 268+ 9826 1A               ld a,(de)
 269+ 9827 AE               xor (hl)
 270+ 9828 77               ld (hl),a
 271+ 9829 2C               inc l
 272+ 982A 1C               inc e
 273+ 982B 1A               ld a,(de)
 274+ 982C AE               xor (hl)
 275+ 982D 77               ld (hl),a
 276+ 982E 1C               inc e
 277+ 982F
 278+ 982F E1               pop hl
 279+ 9830
 280+ 9830 1A               ld a,(de)
 281+ 9831 AE               xor (hl)
 282+ 9832 77               ld (hl),a
 283+ 9833 2C               inc l
 284+ 9834 1C               inc e
 285+ 9835 1A               ld a,(de)
 286+ 9836 AE               xor (hl)
 287+ 9837 77               ld (hl),a
 288+ 9838 2C               inc l
 289+ 9839 1C               inc e
 290+ 983A 1A               ld a,(de)
 291+ 983B AE               xor (hl)
 292+ 983C 77               ld (hl),a
 293+ 983D 1C               inc e
 294+ 983E
 295+ 983E E1               pop hl
 296+ 983F
 297+ 983F 1A               ld a,(de)
 298+ 9840 AE               xor (hl)
 299+ 9841 77               ld (hl),a
 300+ 9842 2C               inc l
 301+ 9843 1C               inc e
 302+ 9844 1A               ld a,(de)
 303+ 9845 AE               xor (hl)
 304+ 9846 77               ld (hl),a
 305+ 9847 2C               inc l
 306+ 9848 1C               inc e
 307+ 9849 1A               ld a,(de)
 308+ 984A AE               xor (hl)
 309+ 984B 77               ld (hl),a
 310+ 984C 1C               inc e
 311+ 984D
 312+ 984D ED 73 5C 8C      ld (Scanlines_album_SP),sp
 313+ 9851 ED 7B 3A 8C      ld sp,(Stack)
 314+ 9855
 315+ 9855 C9               ret
 316+ 9856
 317+ 9856              Pinta_rapido_2_Columnas
 318+ 9856
 319+ 9856 E1               pop hl
 320+ 9857
 321+ 9857 1A               ld a,(de)
 322+ 9858 AE               xor (hl)
 323+ 9859 77               ld (hl),a
 324+ 985A 2C               inc l
 325+ 985B 1C               inc e
 326+ 985C 1A               ld a,(de)
 327+ 985D AE               xor (hl)
 328+ 985E 77               ld (hl),a
 329+ 985F 1C               inc e
 330+ 9860 1C               inc e
 331+ 9861
 332+ 9861 E1               pop hl
 333+ 9862
 334+ 9862 1A               ld a,(de)
 335+ 9863 AE               xor (hl)
 336+ 9864 77               ld (hl),a
 337+ 9865 2C               inc l
 338+ 9866 1C               inc e
 339+ 9867 1A               ld a,(de)
 340+ 9868 AE               xor (hl)
 341+ 9869 77               ld (hl),a
 342+ 986A 1C               inc e
 343+ 986B 1C               inc e
 344+ 986C
 345+ 986C E1               pop hl
 346+ 986D
 347+ 986D 1A               ld a,(de)
 348+ 986E AE               xor (hl)
 349+ 986F 77               ld (hl),a
 350+ 9870 2C               inc l
 351+ 9871 1C               inc e
 352+ 9872 1A               ld a,(de)
 353+ 9873 AE               xor (hl)
 354+ 9874 77               ld (hl),a
 355+ 9875 1C               inc e
 356+ 9876 1C               inc e
 357+ 9877
 358+ 9877 E1               pop hl
 359+ 9878
 360+ 9878 1A               ld a,(de)
 361+ 9879 AE               xor (hl)
 362+ 987A 77               ld (hl),a
 363+ 987B 2C               inc l
 364+ 987C 1C               inc e
 365+ 987D 1A               ld a,(de)
 366+ 987E AE               xor (hl)
 367+ 987F 77               ld (hl),a
 368+ 9880 1C               inc e
 369+ 9881 1C               inc e
 370+ 9882
 371+ 9882 E1               pop hl
 372+ 9883
 373+ 9883 1A               ld a,(de)
 374+ 9884 AE               xor (hl)
 375+ 9885 77               ld (hl),a
 376+ 9886 2C               inc l
 377+ 9887 1C               inc e
 378+ 9888 1A               ld a,(de)
 379+ 9889 AE               xor (hl)
 380+ 988A 77               ld (hl),a
 381+ 988B 1C               inc e
 382+ 988C 1C               inc e
 383+ 988D
 384+ 988D E1               pop hl
 385+ 988E
 386+ 988E 1A               ld a,(de)
 387+ 988F AE               xor (hl)
 388+ 9890 77               ld (hl),a
 389+ 9891 2C               inc l
 390+ 9892 1C               inc e
 391+ 9893 1A               ld a,(de)
 392+ 9894 AE               xor (hl)
 393+ 9895 77               ld (hl),a
 394+ 9896 1C               inc e
 395+ 9897 1C               inc e
 396+ 9898
 397+ 9898 E1               pop hl
 398+ 9899
 399+ 9899 1A               ld a,(de)
 400+ 989A AE               xor (hl)
 401+ 989B 77               ld (hl),a
 402+ 989C 2C               inc l
 403+ 989D 1C               inc e
 404+ 989E 1A               ld a,(de)
 405+ 989F AE               xor (hl)
 406+ 98A0 77               ld (hl),a
 407+ 98A1 1C               inc e
 408+ 98A2 1C               inc e
 409+ 98A3
 410+ 98A3 E1               pop hl
 411+ 98A4
 412+ 98A4 1A               ld a,(de)
 413+ 98A5 AE               xor (hl)
 414+ 98A6 77               ld (hl),a
 415+ 98A7 2C               inc l
 416+ 98A8 1C               inc e
 417+ 98A9 1A               ld a,(de)
 418+ 98AA AE               xor (hl)
 419+ 98AB 77               ld (hl),a
 420+ 98AC 1C               inc e
 421+ 98AD 1C               inc e
 422+ 98AE
 423+ 98AE E1               pop hl
 424+ 98AF
 425+ 98AF 1A               ld a,(de)
 426+ 98B0 AE               xor (hl)
 427+ 98B1 77               ld (hl),a
 428+ 98B2 2C               inc l
 429+ 98B3 1C               inc e
 430+ 98B4 1A               ld a,(de)
 431+ 98B5 AE               xor (hl)
 432+ 98B6 77               ld (hl),a
 433+ 98B7 1C               inc e
 434+ 98B8 1C               inc e
 435+ 98B9
 436+ 98B9 E1               pop hl
 437+ 98BA
 438+ 98BA 1A               ld a,(de)
 439+ 98BB AE               xor (hl)
 440+ 98BC 77               ld (hl),a
 441+ 98BD 2C               inc l
 442+ 98BE 1C               inc e
 443+ 98BF 1A               ld a,(de)
 444+ 98C0 AE               xor (hl)
 445+ 98C1 77               ld (hl),a
 446+ 98C2 1C               inc e
 447+ 98C3 1C               inc e
 448+ 98C4
 449+ 98C4 E1               pop hl
 450+ 98C5
 451+ 98C5 1A               ld a,(de)
 452+ 98C6 AE               xor (hl)
 453+ 98C7 77               ld (hl),a
 454+ 98C8 2C               inc l
 455+ 98C9 1C               inc e
 456+ 98CA 1A               ld a,(de)
 457+ 98CB AE               xor (hl)
 458+ 98CC 77               ld (hl),a
 459+ 98CD 1C               inc e
 460+ 98CE 1C               inc e
 461+ 98CF
 462+ 98CF E1               pop hl
 463+ 98D0
 464+ 98D0 1A               ld a,(de)
 465+ 98D1 AE               xor (hl)
 466+ 98D2 77               ld (hl),a
 467+ 98D3 2C               inc l
 468+ 98D4 1C               inc e
 469+ 98D5 1A               ld a,(de)
 470+ 98D6 AE               xor (hl)
 471+ 98D7 77               ld (hl),a
 472+ 98D8 1C               inc e
 473+ 98D9 1C               inc e
 474+ 98DA
 475+ 98DA E1               pop hl
 476+ 98DB
 477+ 98DB 1A               ld a,(de)
 478+ 98DC AE               xor (hl)
 479+ 98DD 77               ld (hl),a
 480+ 98DE 2C               inc l
 481+ 98DF 1C               inc e
 482+ 98E0 1A               ld a,(de)
 483+ 98E1 AE               xor (hl)
 484+ 98E2 77               ld (hl),a
 485+ 98E3 1C               inc e
 486+ 98E4 1C               inc e
 487+ 98E5
 488+ 98E5 E1               pop hl
 489+ 98E6
 490+ 98E6 1A               ld a,(de)
 491+ 98E7 AE               xor (hl)
 492+ 98E8 77               ld (hl),a
 493+ 98E9 2C               inc l
 494+ 98EA 1C               inc e
 495+ 98EB 1A               ld a,(de)
 496+ 98EC AE               xor (hl)
 497+ 98ED 77               ld (hl),a
 498+ 98EE 1C               inc e
 499+ 98EF 1C               inc e
 500+ 98F0
 501+ 98F0 E1               pop hl
 502+ 98F1
 503+ 98F1 1A               ld a,(de)
 504+ 98F2 AE               xor (hl)
 505+ 98F3 77               ld (hl),a
 506+ 98F4 2C               inc l
 507+ 98F5 1C               inc e
 508+ 98F6 1A               ld a,(de)
 509+ 98F7 AE               xor (hl)
 510+ 98F8 77               ld (hl),a
 511+ 98F9 1C               inc e
 512+ 98FA 1C               inc e
 513+ 98FB
 514+ 98FB E1               pop hl
 515+ 98FC
 516+ 98FC 1A               ld a,(de)
 517+ 98FD AE               xor (hl)
 518+ 98FE 77               ld (hl),a
 519+ 98FF 2C               inc l
 520+ 9900 1C               inc e
 521+ 9901 1A               ld a,(de)
 522+ 9902 AE               xor (hl)
 523+ 9903 77               ld (hl),a
 524+ 9904 1C               inc e
 525+ 9905 1C               inc e
 526+ 9906
 527+ 9906 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 528+ 990A ED 7B 3A 8C      ld sp,(Stack)
 529+ 990E
 530+ 990E C9               ret
 531+ 990F
 532+ 990F              Pinta_rapido_1_Columna
 533+ 990F
 534+ 990F E1               pop hl
 535+ 9910
 536+ 9910 1A               ld a,(de)
 537+ 9911 AE               xor (hl)
 538+ 9912 77               ld (hl),a
 539+ 9913 1C               inc e
 540+ 9914 1C               inc e
 541+ 9915 1C               inc e
 542+ 9916
 543+ 9916 E1               pop hl
 544+ 9917
 545+ 9917 1A               ld a,(de)
 546+ 9918 AE               xor (hl)
 547+ 9919 77               ld (hl),a
 548+ 991A 1C               inc e
 549+ 991B 1C               inc e
 550+ 991C 1C               inc e
 551+ 991D
 552+ 991D E1               pop hl
 553+ 991E
 554+ 991E 1A               ld a,(de)
 555+ 991F AE               xor (hl)
 556+ 9920 77               ld (hl),a
 557+ 9921 1C               inc e
 558+ 9922 1C               inc e
 559+ 9923 1C               inc e
 560+ 9924
 561+ 9924 E1               pop hl
 562+ 9925
 563+ 9925 1A               ld a,(de)
 564+ 9926 AE               xor (hl)
 565+ 9927 77               ld (hl),a
 566+ 9928 1C               inc e
 567+ 9929 1C               inc e
 568+ 992A 1C               inc e
 569+ 992B
 570+ 992B E1               pop hl
 571+ 992C
 572+ 992C 1A               ld a,(de)
 573+ 992D AE               xor (hl)
 574+ 992E 77               ld (hl),a
 575+ 992F 1C               inc e
 576+ 9930 1C               inc e
 577+ 9931 1C               inc e
 578+ 9932
 579+ 9932 E1               pop hl
 580+ 9933
 581+ 9933 1A               ld a,(de)
 582+ 9934 AE               xor (hl)
 583+ 9935 77               ld (hl),a
 584+ 9936 1C               inc e
 585+ 9937 1C               inc e
 586+ 9938 1C               inc e
 587+ 9939
 588+ 9939 E1               pop hl
 589+ 993A
 590+ 993A 1A               ld a,(de)
 591+ 993B AE               xor (hl)
 592+ 993C 77               ld (hl),a
 593+ 993D 1C               inc e
 594+ 993E 1C               inc e
 595+ 993F 1C               inc e
 596+ 9940
 597+ 9940 E1               pop hl
 598+ 9941
 599+ 9941 1A               ld a,(de)
 600+ 9942 AE               xor (hl)
 601+ 9943 77               ld (hl),a
 602+ 9944 1C               inc e
 603+ 9945 1C               inc e
 604+ 9946 1C               inc e
 605+ 9947
 606+ 9947 E1               pop hl
 607+ 9948
 608+ 9948 1A               ld a,(de)
 609+ 9949 AE               xor (hl)
 610+ 994A 77               ld (hl),a
 611+ 994B 1C               inc e
 612+ 994C 1C               inc e
 613+ 994D 1C               inc e
 614+ 994E
 615+ 994E E1               pop hl
 616+ 994F
 617+ 994F 1A               ld a,(de)
 618+ 9950 AE               xor (hl)
 619+ 9951 77               ld (hl),a
 620+ 9952 1C               inc e
 621+ 9953 1C               inc e
 622+ 9954 1C               inc e
 623+ 9955
 624+ 9955 E1               pop hl
 625+ 9956
 626+ 9956 1A               ld a,(de)
 627+ 9957 AE               xor (hl)
 628+ 9958 77               ld (hl),a
 629+ 9959 1C               inc e
 630+ 995A 1C               inc e
 631+ 995B 1C               inc e
 632+ 995C
 633+ 995C E1               pop hl
 634+ 995D
 635+ 995D 1A               ld a,(de)
 636+ 995E AE               xor (hl)
 637+ 995F 77               ld (hl),a
 638+ 9960 1C               inc e
 639+ 9961 1C               inc e
 640+ 9962 1C               inc e
 641+ 9963
 642+ 9963 E1               pop hl
 643+ 9964
 644+ 9964 1A               ld a,(de)
 645+ 9965 AE               xor (hl)
 646+ 9966 77               ld (hl),a
 647+ 9967 1C               inc e
 648+ 9968 1C               inc e
 649+ 9969 1C               inc e
 650+ 996A E1               pop hl
 651+ 996B
 652+ 996B 1A               ld a,(de)
 653+ 996C AE               xor (hl)
 654+ 996D 77               ld (hl),a
 655+ 996E 1C               inc e
 656+ 996F 1C               inc e
 657+ 9970 1C               inc e
 658+ 9971
 659+ 9971 E1               pop hl
 660+ 9972
 661+ 9972 1A               ld a,(de)
 662+ 9973 AE               xor (hl)
 663+ 9974 77               ld (hl),a
 664+ 9975 1C               inc e
 665+ 9976 1C               inc e
 666+ 9977 1C               inc e
 667+ 9978
 668+ 9978 E1               pop hl
 669+ 9979
 670+ 9979 1A               ld a,(de)
 671+ 997A AE               xor (hl)
 672+ 997B 77               ld (hl),a
 673+ 997C 1C               inc e
 674+ 997D 1C               inc e
 675+ 997E 1C               inc e
 676+ 997F
 677+ 997F ED 73 5C 8C      ld (Scanlines_album_SP),sp
 678+ 9983 ED 7B 3A 8C      ld sp,(Stack)
 679+ 9987
 680+ 9987 C9               ret
 681+ 9988
 682+ 9988              Pinta_lento
 683+ 9988
 684+ 9988 3A 0B 8C         ld a,(Columnitas)
 685+ 998B 3D               dec a
 686+ 998C 28 33            jr z,Pinta_lento_1_Columna
 687+ 998E 3D               dec a
 688+ 998F 28 1A            jr z,Pinta_lento_2_Columnas
 689+ 9991
 690+ 9991              Pinta_lento_3_Columnas
 691+ 9991
 692+ 9991 E1           1 pop hl
 693+ 9992
 694+ 9992 1A               ld a,(de)
 695+ 9993 AE               xor (hl)
 696+ 9994 77               ld (hl),a
 697+ 9995 2C               inc l
 698+ 9996 1C               inc e
 699+ 9997 1A               ld a,(de)
 700+ 9998 AE               xor (hl)
 701+ 9999 77               ld (hl),a
 702+ 999A 2C               inc l
 703+ 999B 1C               inc e
 704+ 999C 1A               ld a,(de)
 705+ 999D AE               xor (hl)
 706+ 999E 77               ld (hl),a
 707+ 999F 13               inc de
 708+ 99A0
 709+ 99A0 10 EF            djnz 1B
 710+ 99A2
 711+ 99A2 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 712+ 99A6 ED 7B 3A 8C      ld sp,(Stack)
 713+ 99AA C9               ret
 714+ 99AB
 715+ 99AB              Pinta_lento_2_Columnas
 716+ 99AB
 717+ 99AB E1           2 pop hl
 718+ 99AC
 719+ 99AC 1A               ld a,(de)
 720+ 99AD AE               xor (hl)
 721+ 99AE 77               ld (hl),a
 722+ 99AF 2C               inc l
 723+ 99B0 1C               inc e
 724+ 99B1 1A               ld a,(de)
 725+ 99B2 AE               xor (hl)
 726+ 99B3 77               ld (hl),a
 727+ 99B4 1C               inc e
 728+ 99B5 1C               inc e
 729+ 99B6
 730+ 99B6 10 F3            djnz 2B
 731+ 99B8
 732+ 99B8 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 733+ 99BC ED 7B 3A 8C      ld sp,(Stack)
 734+ 99C0 C9               ret
 735+ 99C1
 736+ 99C1              Pinta_lento_1_Columna
 737+ 99C1
 738+ 99C1 E1           3 pop hl
 739+ 99C2
 740+ 99C2 1A               ld a,(de)
 741+ 99C3 AE               xor (hl)
 742+ 99C4 77               ld (hl),a
 743+ 99C5 1C               inc e
 744+ 99C6 1C               inc e
 745+ 99C7 1C               inc e
 746+ 99C8
 747+ 99C8 10 F7            djnz 3B
 748+ 99CA
 749+ 99CA ED 73 5C 8C      ld (Scanlines_album_SP),sp
 750+ 99CE ED 7B 3A 8C      ld sp,(Stack)
 751+ 99D2 C9               ret
# file closed: Pinta_Sprites.asm
2454  99D3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 99D3              ; ******************************************************************************************************************************************************************************************
   2+ 99D3              ;
   3+ 99D3              ; 26/06/23
   4+ 99D3              ;
   5+ 99D3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 99D3
   7+ 99D3              Draw
   8+ 99D3
   9+ 99D3 CD 79 9C     	call Prepara_draw
  10+ 99D6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 99D7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 99D8 28 05        	jr z,2F
  13+ 99DA
  14+ 99DA 3A 09 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 99DD 18 0C        	jr 1F
  16+ 99DF
  17+ 99DF 2A 07 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 99E2 22 FA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 99E5 CD 71 9B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 99E8              ;													; _la esquina superior izquierda de la pantalla.
  21+ 99E8
  22+ 99E8 CD 01 A1     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 99EB
  24+ 99EB 3A F7 8B     1 ld a,(Ctrl_0)
  25+ 99EE CB 6F        	bit 5,a
  26+ 99F0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 99F2
  28+ 99F2 CD 07 9A     	call Comprueba_limite_horizontal
  29+ 99F5 CD 97 9A     	call Comprueba_limite_vertical
  30+ 99F8
  31+ 99F8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 99F8              ; -----------------------
  33+ 99F8              ; -----------------------
  34+ 99F8              ; -----------------------
  35+ 99F8
  36+ 99F8 CD ED 9B     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 99FB CD 24 9C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 99FE
  39+ 99FE 3A F7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9A01 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9A03 32 F7 8B     	ld (Ctrl_0),a
  42+ 9A06
  43+ 9A06 C9           	ret
  44+ 9A07
  45+ 9A07              ; *******************************************************************************************************************************************************************************************
  46+ 9A07              ;	21/01/23
  47+ 9A07              ;
  48+ 9A07              ; 	Comprueba_limite_horizontal.
  49+ 9A07              ;
  50+ 9A07              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9A07              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9A07              ;
  53+ 9A07              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9A07              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9A07              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9A07              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9A07
  58+ 9A07
  59+ 9A07
  60+ 9A07 3A F7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9A0A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9A0C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9A0E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9A10 32 F7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9A13 18 09            jr 6F
  66+ 9A15 CB 5F        1 bit 3,a
  67+ 9A17 28 0A            jr z,2F
  68+ 9A19 E6 F7            and $f7
  69+ 9A1B 32 F7 8B         ld (Ctrl_0),a
  70+ 9A1E CD 71 9B     6 call Inicializacion
  71+ 9A21 18 5B            jr 5F
  72+ 9A23 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9A24
  74+ 9A24              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9A24              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9A24
  77+ 9A24 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9A25 2A 0C 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9A28 CD 03 96     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9A2B 67           	ld h,a
  81+ 9A2C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9A2D CD 03 96     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9A30 67           	ld h,a
  84+ 9A31 A7           	and a
  85+ 9A32 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9A34 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9A35 3A 09 8C     	ld a,(Cuad_objeto)
  88+ 9A38 FE 02        	cp 2
  89+ 9A3A 38 1E        	jr c,3F
  90+ 9A3C 28 1C        	jr z,3F
  91+ 9A3E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9A3F 28 23            jr z,7F
  93+ 9A41 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9A43 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9A45 E1           	pop hl
  96+ 9A46
  97+ 9A46              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9A46              ; _para indicar con E="2" en caso necesario.
  99+ 9A46
 100+ 9A46 E5               push hl
 101+ 9A47 C5               push bc
 102+ 9A48 CD 03 96     	call calcula_tercio
 103+ 9A4B FE 01        	cp 1
 104+ 9A4D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9A4F CD 7F 9A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9A52 28 26            jr z,9F
 107+ 9A54 38 24            jr c,9F
 108+ 9A56 1E 00        11 ld e,0
 109+ 9A58 18 22            jr 8F
 110+ 9A5A 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9A5B 28 07        	jr z, 7F
 112+ 9A5D 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9A5F 1E 00         	ld e,0
 114+ 9A61 E1           	pop hl
 115+ 9A62 18 04        	jr 4F
 116+ 9A64 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9A66 18 15            jr 10F
 118+ 9A68
 119+ 9A68              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9A68              ; _para indicar con E="2" en caso necesario.
 121+ 9A68
 122+ 9A68 E5           4 push hl
 123+ 9A69 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9A6A CD 03 96     	call calcula_tercio
 125+ 9A6D FE 01        	cp 1
 126+ 9A6F 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9A71 CD 7F 9A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9A74 28 04            jr z,9F
 129+ 9A76 30 02            jr nc,9F
 130+ 9A78 18 02        	jr 8F
 131+ 9A7A 1E 02        9 ld e,2
 132+ 9A7C C1           8 pop bc
 133+ 9A7D E1           10 pop hl
 134+ 9A7E C9           5 ret
 135+ 9A7F
 136+ 9A7F              ; --------------------
 137+ 9A7F              ;
 138+ 9A7F              ; 25/08/22
 139+ 9A7F
 140+ 9A7F CD 03 96     Comprueba_centro call calcula_tercio
 141+ 9A82 67               ld h,a
 142+ 9A83 08           	ex af,af
 143+ 9A84 FE 02        	cp 2
 144+ 9A86 38 07        	jr c,1F
 145+ 9A88 28 05        	jr z,1F
 146+ 9A8A 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9A8D 18 03        	jr 2F
 148+ 9A8F 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9A92 08           2 ex af,af
 150+ 9A93 A7               and a
 151+ 9A94 ED 42            sbc hl,bc
 152+ 9A96 C9               ret
 153+ 9A97
 154+ 9A97              ; *********************************************************************************************************************************************************************************************
 155+ 9A97              ;
 156+ 9A97              ;   16/8/22
 157+ 9A97              ;
 158+ 9A97              ;	Comprueba_limite_vertical
 159+ 9A97              ;
 160+ 9A97              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9A97              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9A97              ;
 163+ 9A97
 164+ 9A97 2A FA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9A9A 7D           	ld a,l
 166+ 9A9B E6 1F        	and $1F
 167+ 9A9D 57           	ld d,a
 168+ 9A9E 3A 0E 8C     	ld a,(Limite_vertical)
 169+ 9AA1 BA           	cp d 											; Límite - Posición.
 170+ 9AA2 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9AA3 3A 09 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9AA6 CB 47        	bit 0,a
 173+ 9AA8 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9AAA
 175+ 9AAA              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9AAA
 177+ 9AAA 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9AAB 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9AAD
 180+ 9AAD              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9AAD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9AAD
 183+ 9AAD 3A EB 8B         ld a,(Coordenada_X)
 184+ 9AB0 16 0F            ld d,Centro_izquierda
 185+ 9AB2 A7               and a
 186+ 9AB3 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9AB4 28 1E            jr z,3F
 188+ 9AB6 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9AB8              ;                                                    ; _salimos sin modificar nada.
 190+ 9AB8 18 0E            jr 2F
 191+ 9ABA 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9ABB 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9ABD
 194+ 9ABD              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9ABD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9ABD
 197+ 9ABD 3A EB 8B         ld a,(Coordenada_X)
 198+ 9AC0 16 10            ld d,Centro_derecha
 199+ 9AC2 A7               and a
 200+ 9AC3 92               sub d
 201+ 9AC4 28 0E            jr z,3F
 202+ 9AC6 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9AC8              ;                                                    ; _salimos sin modificar nada.
 204+ 9AC8 CB 43        2 bit 0,e
 205+ 9ACA 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9ACC C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9ACD CD 61 9B         call Modificaccionne
 208+ 9AD0 C1           	pop bc
 209+ 9AD1 CD 71 9B         call Inicializacion
 210+ 9AD4 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9AD5
 212+ 9AD5              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9AD5
 214+ 9AD5 C5           4 push bc
 215+ 9AD6 01 F9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9AD9 0A           	ld a,(bc)
 217+ 9ADA 3D           	dec a
 218+ 9ADB 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9ADC 7D           	ld a,l
 220+ 9ADD 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9ADE CB 47        	bit 0,a
 222+ 9AE0 28 03        	jr z,5F
 223+ 9AE2 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9AE3 18 2E        	jr 7F
 225+ 9AE5
 226+ 9AE5              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9AE5
 228+ 9AE5 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9AE6 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9AE7 3A F7 8B     	ld a,(Ctrl_0)
 231+ 9AEA CB 4F        	bit 1,a
 232+ 9AEC 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9AEE F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9AEF
 235+ 9AEF              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9AEF
 237+ 9AEF 1C               inc e
 238+ 9AF0 1D               dec e
 239+ 9AF1 20 07            jr nz,12F
 240+ 9AF3 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9AF4 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9AF5 22 FA 8B     	ld (Posicion_actual),hl
 243+ 9AF8 18 44        13 jr 9F
 244+ 9AFA CB 43        12 bit 0,e
 245+ 9AFC 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9AFE              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9AFE C1           	pop bc
 248+ 9AFF 18 D3        	jr 3B
 249+ 9B01 80           14 add b
 250+ 9B02 6F               ld l,a
 251+ 9B03 22 FA 8B     	ld (Posicion_actual),hl
 252+ 9B06 CD 61 9B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9B09 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9B0B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9B0D 32 F7 8B         ld (Ctrl_0),a
 256+ 9B10 F1           	pop af
 257+ 9B11 18 2B        	jr 9F
 258+ 9B13
 259+ 9B13              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9B13
 261+ 9B13 F5           7 push af
 262+ 9B14 3A F7 8B     	ld a,(Ctrl_0)
 263+ 9B17 CB 47        	bit 0,a
 264+ 9B19 20 1D        	jr nz,8F
 265+ 9B1B F1           	pop af
 266+ 9B1C
 267+ 9B1C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9B1C
 269+ 9B1C 1C           	inc e
 270+ 9B1D 1D               dec e
 271+ 9B1E 20 07            jr nz,10F
 272+ 9B20 90           	sub b
 273+ 9B21 6F               ld l,a
 274+ 9B22 22 FA 8B     	ld (Posicion_actual),hl
 275+ 9B25 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9B27              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9B27 CB 43        10 bit 0,e
 278+ 9B29 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9B2B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9B2B C1           	pop bc
 281+ 9B2C 18 A6        	jr 3B
 282+ 9B2E 90           16 sub b
 283+ 9B2F 6F               ld l,a
 284+ 9B30 22 FA 8B     	ld (Posicion_actual),hl
 285+ 9B33 CD 61 9B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9B36 18 06            jr 9F
 287+ 9B38 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9B3A 32 F7 8B         ld (Ctrl_0),a
 289+ 9B3D F1           	pop af
 290+ 9B3E C1           9 pop bc
 291+ 9B3F 1E 00        	ld e,0
 292+ 9B41 CD 71 9B         call Inicializacion
 293+ 9B44 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9B45 08           	ex af,af
 295+ 9B46 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9B47 18 8B            jr 3B
 297+ 9B49
 298+ 9B49              ; --------------------
 299+ 9B49
 300+ 9B49 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9B4B CD 94 9C     1 call PreviousScan
 302+ 9B4E 10 FB            djnz 1B
 303+ 9B50 22 FA 8B     	ld (Posicion_actual),hl
 304+ 9B53 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9B54 C9           	ret
 306+ 9B55
 307+ 9B55              ; --------------------
 308+ 9B55
 309+ 9B55 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9B57 CD 85 9C     1 call NextScan
 311+ 9B5A 10 FB            djnz 1B
 312+ 9B5C 22 FA 8B     	ld (Posicion_actual),hl
 313+ 9B5F AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9B60 C9           	ret
 315+ 9B61
 316+ 9B61              ; --------------------
 317+ 9B61              ;
 318+ 9B61              ;	22/01/23
 319+ 9B61              ;
 320+ 9B61              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9B61              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9B61              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9B61
 324+ 9B61
 325+ 9B61              Modificaccionne
 326+ 9B61
 327+ 9B61 3A 09 8C     	ld a,(Cuad_objeto)
 328+ 9B64 FE 02        	cp 2
 329+ 9B66 CC 49 9B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9B69 DC 49 9B         call c,Modifica_Pos_actual
 331+ 9B6C C8           	ret z
 332+ 9B6D CD 55 9B         call Modifica_Pos_actual2
 333+ 9B70 C9               ret
 334+ 9B71
 335+ 9B71              ; *************************************************************************************************************************************************************************************************
 336+ 9B71              ;
 337+ 9B71              ;	13/8/22
 338+ 9B71              ;
 339+ 9B71              ;	Inicializacion
 340+ 9B71              ;
 341+ 9B71              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9B71              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9B71              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9B71              ;
 345+ 9B71              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9B71              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9B71              ;	_ desaparece/aparece.
 348+ 9B71
 349+ 9B71              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9B71              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9B71              ;
 352+ 9B71              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9B71              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9B71              ; 		   [E] ="0"
 355+ 9B71
 356+ 9B71              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9B71
 358+ 9B71 CD 03 96     Inicializacion call calcula_tercio
 359+ 9B74 28 36        	jr z,primit
 360+ 9B76 E6 02        	and 2
 361+ 9B78 20 07        	jr nz,segmit
 362+ 9B7A 7D           	ld a,l
 363+ 9B7B FE 7F        	cp $7f
 364+ 9B7D 38 2D        	jr c,primit
 365+ 9B7F 28 2B        	jr z,primit
 366+ 9B81 CD E7 9B     segmit call column
 367+ 9B84 38 13        	jr c,tercuad
 368+ 9B86 3E 04        cuarcuad ld a,4
 369+ 9B88 32 09 8C     	ld (Cuad_objeto),a
 370+ 9B8B 21 20 48     	ld hl,$4820
 371+ 9B8E 22 0C 8C     	ld (Limite_horizontal),hl
 372+ 9B91 21 0E 8C     	ld hl,Limite_vertical
 373+ 9B94 36 0D        	ld (hl),$0d
 374+ 9B96 08           	ex af,af
 375+ 9B97 18 3C        	jr 1F
 376+ 9B99              tercuad
 377+ 9B99 3E 03        	ld a,3
 378+ 9B9B 32 09 8C     	ld (Cuad_objeto),a
 379+ 9B9E 21 20 48     	ld hl,$4820
 380+ 9BA1 22 0C 8C     	ld (Limite_horizontal),hl
 381+ 9BA4 21 0E 8C     	ld hl,Limite_vertical
 382+ 9BA7 36 12        	ld (hl),$12
 383+ 9BA9 08           	ex af,af
 384+ 9BAA 18 29        	jr 1F
 385+ 9BAC CD E7 9B     primit call column
 386+ 9BAF 38 13        	jr c, primcuad
 387+ 9BB1              segcuad
 388+ 9BB1 3E 02        	ld a,2
 389+ 9BB3 32 09 8C     	ld (Cuad_objeto),a
 390+ 9BB6 21 C0 4F     	ld hl,$4fc0
 391+ 9BB9 22 0C 8C     	ld (Limite_horizontal),hl
 392+ 9BBC 21 0E 8C     	ld hl,Limite_vertical
 393+ 9BBF 36 0D        	ld (hl),$0d
 394+ 9BC1 08           	ex af,af
 395+ 9BC2 18 11        	jr 1F
 396+ 9BC4              primcuad
 397+ 9BC4 3E 01        	ld a,1
 398+ 9BC6 32 09 8C     	ld (Cuad_objeto),a
 399+ 9BC9 21 C0 4F     	ld hl,$4fc0
 400+ 9BCC 22 0C 8C     	ld (Limite_horizontal),hl
 401+ 9BCF 21 0E 8C     	ld hl,Limite_vertical
 402+ 9BD2 36 12        	ld (hl),$12
 403+ 9BD4 08           	ex af,af
 404+ 9BD5
 405+ 9BD5 C5           1 push bc
 406+ 9BD6 E5           	push hl
 407+ 9BD7 D5           	push de
 408+ 9BD8
 409+ 9BD8 2A FA 8B     	ld hl,(Posicion_actual)
 410+ 9BDB CD 21 96     	call Genera_coordenadas
 411+ 9BDE
 412+ 9BDE D1           	pop de
 413+ 9BDF E1           	pop hl
 414+ 9BE0 C1           	pop bc
 415+ 9BE1
 416+ 9BE1 21 F7 8B     	ld hl,Ctrl_0
 417+ 9BE4 CB EE        	set 5,(hl)
 418+ 9BE6 C9           	ret
 419+ 9BE7
 420+ 9BE7              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9BE7
 422+ 9BE7              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9BE7              ;
 424+ 9BE7              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9BE7
 426+ 9BE7 7D           column ld a,l
 427+ 9BE8 E6 1F        	and $1f
 428+ 9BEA FE 10         	cp $10
 429+ 9BEC C9            	ret
 430+ 9BED
 431+ 9BED              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9BED              ;
 433+ 9BED              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9BED              ;
 435+ 9BED              ; 14/12/22
 436+ 9BED              ;
 437+ 9BED              ;	Modifica: A y BC.
 438+ 9BED
 439+ 9BED 3A 09 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9BF0 E6 01        	and 1
 441+ 9BF2 28 17        	jr z,1F
 442+ 9BF4
 443+ 9BF4              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9BF4
 445+ 9BF4 3A EB 8B     	ld a,(Coordenada_X)
 446+ 9BF7 47           	ld b,a
 447+ 9BF8 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9BF9 79           	ld a,c
 449+ 9BFA 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9BFB 38 08        	jr c,2F
 451+ 9BFD 47           	ld b,a
 452+ 9BFE 79           	ld a,c
 453+ 9BFF 90           	sub b
 454+ 9C00 32 0A 8C     	ld (Columnas),a
 455+ 9C03 18 1B        	jr 4F
 456+ 9C05 79           2 ld a,c
 457+ 9C06 32 0A 8C     	ld (Columnas),a
 458+ 9C09 18 15        	jr 4F
 459+ 9C0B
 460+ 9C0B              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9C0B
 462+ 9C0B 3A EB 8B     1 ld a,(Coordenada_X)
 463+ 9C0E 81           	add c
 464+ 9C0F 3D           	dec a
 465+ 9C10 D6 1F        	sub $1f
 466+ 9C12 38 08        	jr c,3F
 467+ 9C14 47           	ld b,a
 468+ 9C15 79           	ld a,c
 469+ 9C16 90           	sub b
 470+ 9C17 32 0A 8C     	ld (Columnas),a
 471+ 9C1A 18 04        	jr 4F
 472+ 9C1C 79           3 ld a,c
 473+ 9C1D 32 0A 8C     	ld (Columnas),a
 474+ 9C20 D9           4 exx
 475+ 9C21 4F           	ld c,a
 476+ 9C22 D9           	exx
 477+ 9C23 C9            ret
 478+ 9C24
 479+ 9C24              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9C24              ;
 481+ 9C24              ;   19/7/23
 482+ 9C24              ;
 483+ 9C24              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9C24              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9C24              ;
 486+ 9C24              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9C24              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9C24              ;
 489+ 9C24              ;	DESTRUYE: HL,B Y A.
 490+ 9C24
 491+ 9C24 3A 09 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9C27 FE 02        	cp 2
 493+ 9C29 38 18        	jr c,1F
 494+ 9C2B 28 16        	jr z,1F
 495+ 9C2D E6 01        	and 1
 496+ 9C2F 28 0D        	jr z,3F
 497+ 9C31
 498+ 9C31              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9C31
 500+ 9C31 CD 6D 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9C34
 502+ 9C34 7D           9 ld a,l
 503+ 9C35 E6 1F        	and $1f
 504+ 9C37 28 2A        	jr z,7F
 505+ 9C39 2B           	dec hl
 506+ 9C3A 10 F8        	djnz 9B
 507+ 9C3C 18 25        	jr 7F
 508+ 9C3E
 509+ 9C3E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9C3E
 511+ 9C3E 2A FA 8B     3 ld hl,(Posicion_actual)
 512+ 9C41 18 20        	jr 7F
 513+ 9C43
 514+ 9C43 28 14        1 jr z,2F
 515+ 9C45
 516+ 9C45              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9C45
 518+ 9C45 CD 6D 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9C48
 520+ 9C48 7D           4 ld a,l
 521+ 9C49 E6 1F        	and $1f
 522+ 9C4B 28 03        	jr z,6F
 523+ 9C4D 2B           	dec hl
 524+ 9C4E 10 F8        	djnz 4B
 525+ 9C50 06 0F        6 ld b,15
 526+ 9C52 CD 94 9C     5 call PreviousScan
 527+ 9C55 10 FB        	djnz 5B
 528+ 9C57 18 0A        	jr 7F
 529+ 9C59
 530+ 9C59              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9C59
 532+ 9C59 CD 6D 9C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9C5C 06 0F        	ld b,15
 534+ 9C5E CD 94 9C     8 call PreviousScan
 535+ 9C61 10 FB        	djnz 8B
 536+ 9C63
 537+ 9C63 E5           7 push hl
 538+ 9C64 DD E1        	pop ix
 539+ 9C66
 540+ 9C66 2A FC 8B     	ld hl,(Puntero_objeto)
 541+ 9C69 E5           	push hl
 542+ 9C6A FD E1        	pop iy
 543+ 9C6C
 544+ 9C6C C9           	ret
 545+ 9C6D
 546+ 9C6D              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9C6D              ;
 548+ 9C6D              ;	2/1/23
 549+ 9C6D              ;
 550+ 9C6D              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9C6D              ;
 552+ 9C6D              ;	Tras esta rutina tenemos:
 553+ 9C6D              ;
 554+ 9C6D              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9C6D              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9C6D              ;
 557+ 9C6D              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9C6D
 559+ 9C6D 2A FA 8B     Operandos ld hl,(Posicion_actual)
 560+ 9C70 3A 0A 8C     	ld a,(Columnas)
 561+ 9C73 3D           	dec a
 562+ 9C74 20 01        	jr nz,1F
 563+ 9C76 3C           	inc a
 564+ 9C77 47           1 ld b,a
 565+ 9C78 C9           	ret
 566+ 9C79
 567+ 9C79              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9C79              ;
 569+ 9C79              ;	Prepara_draw
 570+ 9C79              ;
 571+ 9C79              ;	Es una rutina de carga.
 572+ 9C79              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9C79              ;
 574+ 9C79              ;	FUNCIONAMIENTO:
 575+ 9C79              ;
 576+ 9C79              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9C79              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9C79              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9C79              ;
 580+ 9C79              ;	DESTRUYE:
 581+ 9C79              ;
 582+ 9C79              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9C79
 584+ 9C79 21 F8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9C7C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9C7D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9C7E 4E           	ld c,(hl)
 588+ 9C7F 2A FA 8B     	ld hl,(Posicion_actual)
 589+ 9C82 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9C84 C9           	ret
 591+ 9C85
 592+ 9C85              ;----------------------------------------------------------------------------------------------------------------
 593+ 9C85              ;
 594+ 9C85              ;	5/08/22
 595+ 9C85              ;
 596+ 9C85              ;   NextScan.
 597+ 9C85              ;
 598+ 9C85              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9C85              ;
 600+ 9C85              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9C85              ;
 602+ 9C85              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9C85              ;
 604+ 9C85              ;       DESTRUIDOS: AF y HL !!!
 605+ 9C85              ;
 606+ 9C85              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9C85              ;
 608+ 9C85
 609+ 9C85 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9C86 7C               ld a,h
 611+ 9C87 E6 07            and 7
 612+ 9C89 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9C8A
 614+ 9C8A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9C8B C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9C8D 6F               ld l,a
 617+ 9C8E D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9C8F
 619+ 9C8F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9C90 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9C92 67               ld h,a
 622+ 9C93 C9               ret
 623+ 9C94
 624+ 9C94              ;----------------------------------------------------------------------------------------------------------------
 625+ 9C94              ;
 626+ 9C94              ;	5/08/22
 627+ 9C94              ;
 628+ 9C94              ;   PreviousScan.
 629+ 9C94              ;
 630+ 9C94              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9C94              ;
 632+ 9C94              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9C94              ;
 634+ 9C94              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9C94              ;
 636+ 9C94              ;       DESTRUIDOS: AF y HL !!!
 637+ 9C94              ;
 638+ 9C94              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9C94              ;
 640+ 9C94
 641+ 9C94 7C           PreviousScan ld a,h
 642+ 9C95 25               dec h               ; Dec H.
 643+ 9C96 E6 07            and 7
 644+ 9C98 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9C99
 646+ 9C99 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9C9A D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9C9C 6F               ld l,a
 649+ 9C9D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9C9E
 651+ 9C9E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9C9F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9CA1 67               ld h,a
 654+ 9CA2 C9               ret
 655+ 9CA3
 656+ 9CA3
 657+ 9CA3
 658+ 9CA3
 659+ 9CA3
 660+ 9CA3
 661+ 9CA3
 662+ 9CA3
 663+ 9CA3
 664+ 9CA3
 665+ 9CA3
 666+ 9CA3
# file closed: Draw_XOR.asm
2455  9CA3              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9CA3
   2+ 9CA3              ; ******************************************************************************************************************************************************************************************
   3+ 9CA3              ;
   4+ 9CA3              ;   20/05/23
   5+ 9CA3              ;
   6+ 9CA3              ;	Recompone_posicion_inicio
   7+ 9CA3              ;
   8+ 9CA3              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9CA3              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9CA3              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9CA3              ;	_ a una u otra rutina.
  12+ 9CA3
  13+ 9CA3              Recompone_posicion_inicio
  14+ 9CA3
  15+ 9CA3 2A 07 8C     	ld hl,(Posicion_inicio)
  16+ 9CA6 7D           	ld a,l
  17+ 9CA7 E6 1F        	and $1f
  18+ 9CA9 28 16        	jr z,1F
  19+ 9CAB
  20+ 9CAB FE 1F        	cp $1f
  21+ 9CAD 28 0D        	jr z,3F
  22+ 9CAF
  23+ 9CAF 21 F6 8B     	ld hl,Ctrl_2
  24+ 9CB2 CB C6        	set 0,(hl)
  25+ 9CB4 2A FC 8B     	ld hl,(Puntero_objeto)
  26+ 9CB7 22 29 8C     	ld (Repone_puntero_objeto),hl
  27+ 9CBA 18 08        	jr 2F
  28+ 9CBC
  29+ 9CBC CD 58 9E     3 call Mov_left
  30+ 9CBF 18 03        	jr 2F
  31+ 9CC1
  32+ 9CC1 CD 3D 9D     1 call Mov_right
  33+ 9CC4 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9CC7 22 FC 8B     	ld (Puntero_objeto),hl
  35+ 9CCA C9           	ret
  36+ 9CCB
  37+ 9CCB              ; ******************************************************************************************************************************************************************************************
  38+ 9CCB              ;
  39+ 9CCB              ;   27/05/23
  40+ 9CCB              ;
  41+ 9CCB              ;	Mov_down
  42+ 9CCB              ;
  43+ 9CCB              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9CCB              ;
  45+ 9CCB              ;
  46+ 9CCB              Mov_down
  47+ 9CCB
  48+ 9CCB CD 2B 9D     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9CCE              ;																	; _ repone (Puntero_objeto).
  50+ 9CCE              ;	ld hl,Ctrl_0
  51+ 9CCE              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9CCE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9CCE              ; 																	; _ en el caso de que no lo haya.
  54+ 9CCE 3A 13 8C     	ld a,(Vel_down)
  55+ 9CD1 47           	ld b,a
  56+ 9CD2 2A FA 8B         ld hl,(Posicion_actual)
  57+ 9CD5 CD 03 96     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9CD8 E6 02        	and 2
  59+ 9CDA 28 17        	jr z,1F
  60+ 9CDC
  61+ 9CDC              ; Nos encontramos en el último tercio de pantalla.
  62+ 9CDC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9CDC
  64+ 9CDC 7C           	ld a,h
  65+ 9CDD FE 57        	cp $57
  66+ 9CDF 20 12        	jr nz,1F
  67+ 9CE1
  68+ 9CE1 7D           	ld a,l
  69+ 9CE2 C6 20        	add $20
  70+ 9CE4 30 0D        	jr nc,1F
  71+ 9CE6
  72+ 9CE6              ; ------------------------------
  73+ 9CE6              ;
  74+ 9CE6              ;	12/01/24
  75+ 9CE6
  76+ 9CE6              ;	call Reaparece_arriba
  77+ 9CE6 CD E0 9F     	call Reinicio
  78+ 9CE9
  79+ 9CE9              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9CE9
  81+ 9CE9 3A 62 8C     	ld a,(Ctrl_3)
  82+ 9CEC CB CF        	set 1,a
  83+ 9CEE 32 62 8C     	ld (Ctrl_3),a
  84+ 9CF1
  85+ 9CF1 18 08        	jr 3F
  86+ 9CF3              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9CF3              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9CF3              ; ------------------------------
  89+ 9CF3
  90+ 9CF3 CD 85 9C     1 call NextScan
  91+ 9CF6 22 FA 8B     	ld (Posicion_actual),hl
  92+ 9CF9 10 DA            djnz 2B
  93+ 9CFB CD 21 96     3 call Genera_coordenadas
  94+ 9CFE C9           	ret
  95+ 9CFF
  96+ 9CFF              ; ******************************************************************************************************************************************************************************************
  97+ 9CFF              ;
  98+ 9CFF              ;   27/05/23
  99+ 9CFF              ;
 100+ 9CFF              ;	Mov_up
 101+ 9CFF              ;
 102+ 9CFF              ; 	Mueve el Sprite hacia arriba.
 103+ 9CFF              ;
 104+ 9CFF              ;
 105+ 9CFF              Mov_up
 106+ 9CFF
 107+ 9CFF CD 2B 9D     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9D02              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9D02              ;	ld hl,Ctrl_0
 110+ 9D02              ;	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9D02              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9D02              ; 																		; _ en el caso de que no lo haya.
 113+ 9D02 3A 12 8C     	ld a,(Vel_up)
 114+ 9D05 47           	ld b,a
 115+ 9D06 2A FA 8B     	ld hl,(Posicion_actual)
 116+ 9D09 CD 03 96     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9D0C A7           	and a
 118+ 9D0D 20 10        	jr nz,1F
 119+ 9D0F
 120+ 9D0F              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9D0F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9D0F
 123+ 9D0F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9D10 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9D12 20 0B            jr nz,1F
 126+ 9D14 7D               ld a,l
 127+ 9D15 D6 20            sub $20
 128+ 9D17 30 06            jr nc,1F
 129+ 9D19 25               dec h
 130+ 9D1A
 131+ 9D1A              ; -----------------------------
 132+ 9D1A CD C1 9F         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9D1D              ;	call Reinicio
 134+ 9D1D              ; -----------------------------
 135+ 9D1D
 136+ 9D1D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9D1F CD 94 9C     1 call PreviousScan
 138+ 9D22 22 FA 8B     	ld (Posicion_actual),hl
 139+ 9D25 10 E2            djnz 3B
 140+ 9D27 CD 21 96     2 call Genera_coordenadas
 141+ 9D2A C9           	ret
 142+ 9D2B
 143+ 9D2B              ; -----------------------------
 144+ 9D2B              ;
 145+ 9D2B              ;	27/5/23
 146+ 9D2B              ;
 147+ 9D2B              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9D2B              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9D2B              ;
 150+ 9D2B              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9D2B              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9D2B              ;
 153+ 9D2B              ;	Modifica: A y (Puntero_objeto).
 154+ 9D2B
 155+ 9D2B 3A F6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9D2E CB 47        	bit 0,a
 157+ 9D30 C8           	ret z
 158+ 9D31 CB 87        	res 0,a
 159+ 9D33 32 F6 8B     	ld (Ctrl_2),a
 160+ 9D36 2A 29 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9D39 22 FC 8B     	ld (Puntero_objeto),hl
 162+ 9D3C C9           	ret
 163+ 9D3D
 164+ 9D3D              ; ******************************************************************************************************************************************************************************************
 165+ 9D3D              ;
 166+ 9D3D              ;	19/10/22
 167+ 9D3D              ;
 168+ 9D3D              ;	Mov_right.
 169+ 9D3D              ;
 170+ 9D3D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9D3D              ;
 172+ 9D3D
 173+ 9D3D 3A F7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9D40 CB 77        	bit 6,a
 175+ 9D42 28 06        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9D44
 177+ 9D44 CD 6F 9F     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9D47 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9D48 18 4F        	jr 8F
 180+ 9D4A
 181+ 9D4A 3A EB 8B     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 182+ 9D4D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 183+ 9D4F 20 48        	jr nz,8F
 184+ 9D51
 185+ 9D51 3A FE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 186+ 9D54 A7           	and a 															; _[3] para continuar con el DESPLZ.
 187+ 9D55 28 42        	jr z,8F
 188+ 9D57
 189+ 9D57              ; ---------- ---------- ----------
 190+ 9D57              ;
 191+ 9D57              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 192+ 9D57
 193+ 9D57 3A 11 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 194+ 9D5A FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 195+ 9D5C 28 11        	jr z,1F
 196+ 9D5E 38 06        	jr c,6F
 197+ 9D60 FE 04        	cp 4
 198+ 9D62 28 14        	jr z,7F
 199+ 9D64 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 200+ 9D66
 201+ 9D66              ; ---------- ---------- ----------
 202+ 9D66              ;
 203+ 9D66              ; Perfiles de velocidad
 204+ 9D66              ;
 205+ 9D66
 206+ 9D66 3A FE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 207+ 9D69 FE FE        	cp $fe
 208+ 9D6B 38 2C        	jr c,8F
 209+ 9D6D 18 10        	jr 3F
 210+ 9D6F
 211+ 9D6F 3A FE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 212+ 9D72 FE FD        	cp $fd
 213+ 9D74 38 23        	jr c,8F
 214+ 9D76 18 07        	jr 3F
 215+ 9D78
 216+ 9D78 3A FE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 217+ 9D7B FE FB        	cp $fb
 218+ 9D7D 38 1A        	jr c,8F
 219+ 9D7F
 220+ 9D7F              ; ---------- ---------- ----------
 221+ 9D7F
 222+ 9D7F              3
 223+ 9D7F CD AF 9F     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 224+ 9D82 CD D3 99     	call Draw
 225+ 9D85
 226+ 9D85              ; 	debug !!!!!!!!!!!!!!!!!!!
 227+ 9D85
 228+ 9D85              ;	Puntero_de_impresion $8bef ..... $0000 ..... $4780
 229+ 9D85              ;	Columns $8bf9 	  		   ..... 3	   ..... 3
 230+ 9D85              ;	Posicion_actual $8bfa	   ..... $46c0 ..... $46c0
 231+ 9D85              ;	CTRL_DESPLZ $8bfe		   ..... $fe   ..... $fe
 232+ 9D85              ;	Puntero_objeto $8bfc	   ..... $8690 ..... $8690
 233+ 9D85              ;	Puntero_DESPLZ_der $8c03   ..... $853e ..... $853e
 234+ 9D85              ;	Puntero_DESPLZ_izq $8c05   ..... $8390 ..... $8390
 235+ 9D85              ;	Cuad_objeto $8c09		   ..... 2	   ..... 1								; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 236+ 9D85              ;	Columnas $8c0a			   ..... 1     ..... 1
 237+ 9D85              ;	Columnitas $8c0b		   ..... 1	   ..... 1
 238+ 9D85              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df74
 239+ 9D85
 240+ 9D85              ;	jr $
 241+ 9D85
 242+ 9D85              ;	call Reinicio
 243+ 9D85
 244+ 9D85              ; ---------- ---------- ----------
 245+ 9D85              ;
 246+ 9D85              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 247+ 9D85
 248+ 9D85 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 249+ 9D87 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 250+ 9D88 CD A0 9D     	call DESPLZ_DER
 251+ 9D8B C1           	pop bc
 252+ 9D8C 10 F9        	djnz 5B
 253+ 9D8E 2A FA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 254+ 9D91 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 255+ 9D92 22 FA 8B     	ld (Posicion_actual),hl
 256+ 9D95 CD 21 96     	call Genera_coordenadas
 257+ 9D98
 258+ 9D98              ; 	debug !!!!!!!!!!!!!!!!!!!
 259+ 9D98
 260+ 9D98              ;	Puntero_de_impresion $8bef ..... $0000 ..... $4780 ..... $4780
 261+ 9D98              ;	Columns $8bf9 	  		   ..... 3	   ..... 3	   ..... 3
 262+ 9D98              ;	Posicion_actual $8bfa	   ..... $46c0 ..... $46c0 ..... $46c0
 263+ 9D98              ;	CTRL_DESPLZ $8bfe		   ..... $fe   ..... $fe   ..... $fa
 264+ 9D98              ;	Puntero_objeto $8bfc	   ..... $8690 ..... $8690 ..... $85d0
 265+ 9D98              ;	Puntero_DESPLZ_der $8c03   ..... $853e ..... $853e ..... $8536
 266+ 9D98              ;	Puntero_DESPLZ_izq $8c05   ..... $8390 ..... $8390 ..... $8398
 267+ 9D98              ;	Cuad_objeto $8c09		   ..... 2	   ..... 1	   ..... 1						; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 268+ 9D98              ;	Columnas $8c0a			   ..... 1     ..... 1     ..... 1
 269+ 9D98              ;	Columnitas $8c0b		   ..... 1	   ..... 1     ..... 1
 270+ 9D98              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df74 ..... $df74
 271+ 9D98
 272+ 9D98 C9           	ret
 273+ 9D99
 274+ 9D99              ; ---------- ---------- ---------
 275+ 9D99
 276+ 9D99 2A FA 8B     8 ld hl,(Posicion_actual)
 277+ 9D9C CD A0 9D     	call DESPLZ_DER
 278+ 9D9F C9           2 ret
 279+ 9DA0
 280+ 9DA0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 281+ 9DA0              ;
 282+ 9DA0              ;	22/9/22
 283+ 9DA0              ;
 284+ 9DA0
 285+ 9DA0 CD AF 9D     DESPLZ_DER call Desplaza_derecha
 286+ 9DA3 CD FB 9D         call modifica_parametros_1er_DESPLZ_2
 287+ 9DA6 CD 24 9E         call Ciclo_completo
 288+ 9DA9 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 289+ 9DAC CB FE        	set 7,(hl)
 290+ 9DAE C9           	ret
 291+ 9DAF
 292+ 9DAF              ; ******************************************************************************************************************************************************************************************
 293+ 9DAF              ;	15/02/23
 294+ 9DAF              ;
 295+ 9DAF
 296+ 9DAF 3A 11 8C     Desplaza_derecha ld a,(Vel_right)
 297+ 9DB2 47           	ld b,a
 298+ 9DB3 2A 03 8C     	ld hl,(Puntero_DESPLZ_der)
 299+ 9DB6 23           1 inc hl
 300+ 9DB7 23           	inc hl
 301+ 9DB8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 302+ 9DBA 22 03 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 303+ 9DBD CD DC 91     	call Extrae_address
 304+ 9DC0 22 FC 8B     	ld (Puntero_objeto),hl
 305+ 9DC3
 306+ 9DC3              ; Modifica (Puntero_DESPLZ_izq).
 307+ 9DC3
 308+ 9DC3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 309+ 9DC3              ; Cuántos movimientos hemos hecho ??
 310+ 9DC3              ; DE contiene (Puntero_DESPLZ_der).
 311+ 9DC3
 312+ 9DC3 2A FF 8B     7 ld hl,(Indice_Sprite_der)
 313+ 9DC6 EB           	ex de,hl
 314+ 9DC7 A7           	and a
 315+ 9DC8 ED 52        	sbc hl,de
 316+ 9DCA CB 3D        	srl l
 317+ 9DCC 3E 08        6 ld a,8
 318+ 9DCE 95           	sub l
 319+ 9DCF 30 1E        	jr nc,3F
 320+ 9DD1
 321+ 9DD1              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 322+ 9DD1              ; B="0".
 323+ 9DD1
 324+ 9DD1 04           4 inc b
 325+ 9DD2 3C           	inc a
 326+ 9DD3 20 FC        	jr nz,4B
 327+ 9DD5 78           	ld a,b
 328+ 9DD6 08           	ex af,af
 329+ 9DD7 2A FF 8B     	ld hl,(Indice_Sprite_der)
 330+ 9DDA 23           5 inc hl
 331+ 9DDB 23           	inc hl
 332+ 9DDC 10 FC        	djnz 5B
 333+ 9DDE 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 334+ 9DE1 CD DC 91     	call Extrae_address
 335+ 9DE4 22 FC 8B     	ld (Puntero_objeto),hl
 336+ 9DE7
 337+ 9DE7              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 338+ 9DE7              ; _(Posicion_actual).
 339+ 9DE7
 340+ 9DE7 21 FA 8B     	ld hl,Posicion_actual
 341+ 9DEA 34           	inc (hl)
 342+ 9DEB 08               ex af,af
 343+ 9DEC 6F           	ld l,a
 344+ 9DED 18 DD        	jr 6B
 345+ 9DEF
 346+ 9DEF              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 347+ 9DEF
 348+ 9DEF 47           3 ld b,a
 349+ 9DF0 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 350+ 9DF3 23           2 inc hl
 351+ 9DF4 23           	inc hl
 352+ 9DF5 10 FC        	djnz 2B
 353+ 9DF7 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 354+ 9DFA C9           8 ret
 355+ 9DFB
 356+ 9DFB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 357+ 9DFB              ;
 358+ 9DFB              ;	24/7/22
 359+ 9DFB              ;
 360+ 9DFB              ;	modifica_parametros_1er_DESPLZ_2
 361+ 9DFB              ;
 362+ 9DFB              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 363+ 9DFB              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 364+ 9DFB              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 365+ 9DFB
 366+ 9DFB 3A FE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 367+ 9DFE A7           	and a
 368+ 9DFF 20 1F        	jr nz,1F
 369+ 9E01 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 370+ 9E03 32 FE 8B         ld (CTRL_DESPLZ),a
 371+ 9E06
 372+ 9E06 21 F9 8B     	ld hl,Columns
 373+ 9E09 34           	inc (hl)
 374+ 9E0A
 375+ 9E0A 3A 09 8C     	ld a,(Cuad_objeto)
 376+ 9E0D E6 01        	and 1
 377+ 9E0F 28 0F        	jr z,1F
 378+ 9E11
 379+ 9E11 2A FA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 380+ 9E14 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 381+ 9E15 22 FA 8B     	ld (Posicion_actual),hl
 382+ 9E18
 383+ 9E18 CD 21 96     	call Genera_coordenadas
 384+ 9E1B
 385+ 9E1B CD 7B 9F     	call Inc_CTRL_DESPLZ
 386+ 9E1E 18 03        	jr 2F
 387+ 9E20 CD 7B 9F     1 call Inc_CTRL_DESPLZ
 388+ 9E23 C9           2 ret
 389+ 9E24
 390+ 9E24              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 391+ 9E24              ;
 392+ 9E24              ;	24/7/22
 393+ 9E24              ;
 394+ 9E24              ;	Ciclo_completo.
 395+ 9E24              ;
 396+ 9E24              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 397+ 9E24              ;
 398+ 9E24              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 399+ 9E24              ; 	Decrementamos (Columns).
 400+ 9E24              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 401+ 9E24              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 402+ 9E24
 403+ 9E24
 404+ 9E24 3A FE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 405+ 9E27 FE FF        	cp $ff
 406+ 9E29 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 407+ 9E2B E6 F0        	and $f0
 408+ 9E2D 20 28        	jr nz,3F
 409+ 9E2F
 410+ 9E2F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 411+ 9E2F
 412+ 9E2F 3A FE 8B     	ld a,(CTRL_DESPLZ)
 413+ 9E32 47           	ld b,a
 414+ 9E33 3E F8        	ld a,$f8
 415+ 9E35 80           	add b
 416+ 9E36 32 FE 8B     	ld (CTRL_DESPLZ),a
 417+ 9E39 18 1C        	jr 3F
 418+ 9E3B
 419+ 9E3B 21 F9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 420+ 9E3E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 421+ 9E3F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 422+ 9E40 32 FE 8B     	ld (CTRL_DESPLZ),a
 423+ 9E43
 424+ 9E43 3A 09 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 425+ 9E46 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 426+ 9E48 20 0A        	jr nz,2F
 427+ 9E4A
 428+ 9E4A 2A FA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 429+ 9E4D 23           	inc hl
 430+ 9E4E 22 FA 8B     	ld (Posicion_actual),hl
 431+ 9E51 CD 21 96     	call Genera_coordenadas
 432+ 9E54
 433+ 9E54              ; Inicia el puntero de Sprite.
 434+ 9E54
 435+ 9E54 CD F1 91     2 call Inicia_puntero_objeto_der
 436+ 9E57 C9           3 ret
 437+ 9E58
 438+ 9E58              ; ******************************************************************************************************************************************************************************************
 439+ 9E58              ;
 440+ 9E58              ;	15/02/23
 441+ 9E58              ;
 442+ 9E58              ;	Mov_left.
 443+ 9E58              ;
 444+ 9E58              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 445+ 9E58              ;
 446+ 9E58              Mov_left
 447+ 9E58
 448+ 9E58              ;	ld hl,Ctrl_0
 449+ 9E58              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 450+ 9E58              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 451+ 9E58              ; 																	; _ en el caso de que no lo haya.
 452+ 9E58 3A F7 8B     	ld a,(Ctrl_0)
 453+ 9E5B CB 77        	bit 6,a
 454+ 9E5D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 455+ 9E5F
 456+ 9E5F CD 75 9F     	call Stop_Amadeus_left
 457+ 9E62 C8           	ret z
 458+ 9E63 20 4A        	jr nz,8F
 459+ 9E65
 460+ 9E65 3A EB 8B     11 ld a,(Coordenada_X)
 461+ 9E68 A7           	and a
 462+ 9E69 20 44        	jr nz,8F
 463+ 9E6B
 464+ 9E6B 3A FE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 465+ 9E6E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 466+ 9E6F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 467+ 9E71
 468+ 9E71              ; ---------- ---------- ----------
 469+ 9E71
 470+ 9E71 3A 10 8C     	ld a,(Vel_left)
 471+ 9E74 FE 02        	cp 2
 472+ 9E76 28 0F        	jr z,1F
 473+ 9E78 38 04        	jr c,6F
 474+ 9E7A FE 04        	cp 4
 475+ 9E7C 28 12        	jr z,7F
 476+ 9E7E
 477+ 9E7E              ; ---------- ---------- ----------
 478+ 9E7E
 479+ 9E7E 3A FE 8B     6 ld a,(CTRL_DESPLZ)
 480+ 9E81 FE F8        	cp $f8
 481+ 9E83 20 2A        	jr nz,8F
 482+ 9E85 18 10        	jr 4F
 483+ 9E87 3A FE 8B     1 ld a,(CTRL_DESPLZ)
 484+ 9E8A FE F9        	cp $f9
 485+ 9E8C 20 21        	jr nz,8F
 486+ 9E8E 18 07        	jr 4F
 487+ 9E90 3A FE 8B     7 ld a,(CTRL_DESPLZ)
 488+ 9E93 FE FB        	cp $fb
 489+ 9E95 20 18        	jr nz,8F
 490+ 9E97
 491+ 9E97              ; ---------- ---------- ----------
 492+ 9E97
 493+ 9E97              4
 494+ 9E97 CD 9D 9F     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 495+ 9E9A              ;	call Reinicio
 496+ 9E9A
 497+ 9E9A              ; ---------- ---------- ----------
 498+ 9E9A
 499+ 9E9A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 500+ 9E9C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 501+ 9E9D
 502+ 9E9D              ;	ld hl,(Indice_Sprite_izq)
 503+ 9E9D              ;	ld (Puntero_DESPLZ_izq),hl
 504+ 9E9D
 505+ 9E9D CD B6 9E     	call DESPLZ_IZQ
 506+ 9EA0 C1           	pop bc
 507+ 9EA1 10 F9        	djnz 5B
 508+ 9EA3 2A FA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 509+ 9EA6 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 510+ 9EA7 22 FA 8B     	ld (Posicion_actual),hl
 511+ 9EAA CD 21 96     	call Genera_coordenadas
 512+ 9EAD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 513+ 9EAF
 514+ 9EAF              ; ---------- ---------- ----------
 515+ 9EAF
 516+ 9EAF              ; Movemos, no hay recolocación.
 517+ 9EAF
 518+ 9EAF 2A FA 8B     8 ld hl,(Posicion_actual)
 519+ 9EB2 CD B6 9E     	call DESPLZ_IZQ
 520+ 9EB5 C9           2 ret
 521+ 9EB6
 522+ 9EB6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 523+ 9EB6              ;
 524+ 9EB6              ;	22/9/22
 525+ 9EB6
 526+ 9EB6              DESPLZ_IZQ
 527+ 9EB6
 528+ 9EB6 CD C5 9E     	call Desplaza_izquierda
 529+ 9EB9 CD 11 9F         call modifica_parametros_1er_DESPLZ
 530+ 9EBC CD 39 9F     	call Ciclo_completo_2
 531+ 9EBF 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 532+ 9EC2 CB BE        	res 7,(hl)
 533+ 9EC4 C9           	ret
 534+ 9EC5
 535+ 9EC5              Desplaza_izquierda
 536+ 9EC5
 537+ 9EC5 3A 10 8C     	ld a,(Vel_left)
 538+ 9EC8 47           	ld b,a
 539+ 9EC9 2A 05 8C     	ld hl,(Puntero_DESPLZ_izq)
 540+ 9ECC 23           1 inc hl
 541+ 9ECD 23           	inc hl
 542+ 9ECE 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 543+ 9ED0 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 544+ 9ED3 CD DC 91     	call Extrae_address
 545+ 9ED6 22 FC 8B     	ld (Puntero_objeto),hl
 546+ 9ED9
 547+ 9ED9              ; Modifica (Puntero_DESPLZ_der).
 548+ 9ED9
 549+ 9ED9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 550+ 9ED9              ; Cuántos movimientos hemos hecho ??
 551+ 9ED9              ; DE contiene (Puntero_DESPLZ_izq).
 552+ 9ED9
 553+ 9ED9 2A 01 8C     7 ld hl,(Indice_Sprite_izq)
 554+ 9EDC EB           	ex de,hl
 555+ 9EDD A7           	and a
 556+ 9EDE ED 52        	sbc hl,de
 557+ 9EE0 CB 3D        	srl l
 558+ 9EE2 3E 08        6 ld a,8
 559+ 9EE4 95           	sub l
 560+ 9EE5 30 1E        	jr nc,3F
 561+ 9EE7
 562+ 9EE7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 563+ 9EE7              ; B="0".
 564+ 9EE7
 565+ 9EE7 04           4 inc b
 566+ 9EE8 3C           	inc a
 567+ 9EE9 20 FC        	jr nz,4B
 568+ 9EEB 78           	ld a,b
 569+ 9EEC 08           	ex af,af
 570+ 9EED 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 571+ 9EF0 23           5 inc hl
 572+ 9EF1 23           	inc hl
 573+ 9EF2 10 FC        	djnz 5B
 574+ 9EF4 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 575+ 9EF7 CD DC 91     	call Extrae_address
 576+ 9EFA 22 FC 8B     	ld (Puntero_objeto),hl
 577+ 9EFD
 578+ 9EFD              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 579+ 9EFD              ; _(Posicion_actual).
 580+ 9EFD
 581+ 9EFD 21 FA 8B     	ld hl,Posicion_actual
 582+ 9F00 35           	dec (hl)
 583+ 9F01 08           	ex af,af
 584+ 9F02 6F           	ld l,a
 585+ 9F03 18 DD        	jr 6B
 586+ 9F05
 587+ 9F05              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 588+ 9F05
 589+ 9F05 47           3 ld b,a
 590+ 9F06 2A FF 8B     	ld hl,(Indice_Sprite_der)
 591+ 9F09 23           2 inc hl
 592+ 9F0A 23           	inc hl
 593+ 9F0B 10 FC        	djnz 2B
 594+ 9F0D 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 595+ 9F10 C9           8 ret
 596+ 9F11
 597+ 9F11              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 598+ 9F11              ;
 599+ 9F11              ;	modifica_parametros_1er_DESPLZ
 600+ 9F11              ;
 601+ 9F11              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 602+ 9F11              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 603+ 9F11              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 604+ 9F11
 605+ 9F11 3A FE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 606+ 9F14 A7           	and a
 607+ 9F15 20 1E        	jr nz,1F
 608+ 9F17 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 609+ 9F18 32 FE 8B         ld (CTRL_DESPLZ),a
 610+ 9F1B 21 F9 8B     	ld hl,Columns
 611+ 9F1E 34           	inc (hl)
 612+ 9F1F 3A 09 8C     	ld a,(Cuad_objeto)
 613+ 9F22 E6 01        	and 1
 614+ 9F24 20 0F        	jr nz,1F
 615+ 9F26 2A FA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 616+ 9F29 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 617+ 9F2A 22 FA 8B     	ld (Posicion_actual),hl
 618+ 9F2D CD 21 96     	call Genera_coordenadas
 619+ 9F30 CD 8C 9F     	call Dec_CTRL_DESPLZ
 620+ 9F33 18 03        	jr 2F
 621+ 9F35 CD 8C 9F     1 call Dec_CTRL_DESPLZ
 622+ 9F38 C9           2 ret
 623+ 9F39
 624+ 9F39              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 625+ 9F39
 626+ 9F39 3A FE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 627+ 9F3C FE F7        	cp $f7
 628+ 9F3E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 629+ 9F40 30 2C        	jr nc,3F
 630+ 9F42
 631+ 9F42              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 632+ 9F42
 633+ 9F42 06 00        	ld b,0
 634+ 9F44 04           4 inc b
 635+ 9F45 3C           	inc a
 636+ 9F46 FE F7        	cp $f7
 637+ 9F48 20 FA        	jr nz,4B
 638+ 9F4A 3E FF        	ld a,$ff
 639+ 9F4C 90           	sub b
 640+ 9F4D 32 FE 8B     	ld (CTRL_DESPLZ),a
 641+ 9F50 18 1C        	jr 3F
 642+ 9F52
 643+ 9F52              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 644+ 9F52
 645+ 9F52 21 F9 8B     1 ld hl,Columns
 646+ 9F55 35           	dec (hl)
 647+ 9F56 AF           	xor a
 648+ 9F57 32 FE 8B     	ld (CTRL_DESPLZ),a
 649+ 9F5A 3A 09 8C     	ld a,(Cuad_objeto)
 650+ 9F5D E6 01        	and 1
 651+ 9F5F 28 0A        	jr z,2F
 652+ 9F61 2A FA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 653+ 9F64 2B           	dec hl
 654+ 9F65 22 FA 8B     	ld (Posicion_actual),hl
 655+ 9F68 CD 21 96     	call Genera_coordenadas
 656+ 9F6B
 657+ 9F6B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 658+ 9F6B
 659+ 9F6B CD 04 92     2 call Inicia_puntero_objeto_izq
 660+ 9F6E C9           3 ret
 661+ 9F6F
 662+ 9F6F              ; ---------- ---------- ---------- ---------- ---------- ----------
 663+ 9F6F              ;
 664+ 9F6F              ;	19/10/22
 665+ 9F6F              ;
 666+ 9F6F              ;	(cp 29) para un Amadeus de 3 Columns.
 667+ 9F6F              ;	(cp 30)   ""  ""    ""     2 Columns.
 668+ 9F6F
 669+ 9F6F 3A EB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 670+ 9F72 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 671+ 9F74 C9           	ret
 672+ 9F75
 673+ 9F75              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9F75              ;
 675+ 9F75              ;	19/10/22
 676+ 9F75              ;
 677+ 9F75              ;	(cp 2) para un Amadeus de 3 Columns.
 678+ 9F75              ;	(cp 1)   ""  ""    ""     2 Columns.
 679+ 9F75
 680+ 9F75 3A EB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 681+ 9F78 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 682+ 9F7A C9           	ret
 683+ 9F7B
 684+ 9F7B              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9F7B              ;
 686+ 9F7B              ;	24/7/22
 687+ 9F7B              ;
 688+ 9F7B              ;	Inc_CTRL_DESPLZ
 689+ 9F7B              ;
 690+ 9F7B              ;
 691+ 9F7B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 692+ 9F7B
 693+ 9F7B 21 FE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 694+ 9F7E 3A 11 8C     	ld a,(Vel_right)
 695+ 9F81 A7           	and a
 696+ 9F82 28 06        	jr z,1F
 697+ 9F84 47           	ld b,a
 698+ 9F85 34           3 inc (hl)
 699+ 9F86 10 FD        	djnz 3B
 700+ 9F88 18 01        	jr 2F
 701+ 9F8A 34           1 inc (hl)
 702+ 9F8B C9           2 ret
 703+ 9F8C
 704+ 9F8C              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9F8C              ;
 706+ 9F8C              ;	5/2/23
 707+ 9F8C              ;
 708+ 9F8C              ;	Dec_CTRL_DESPLZ
 709+ 9F8C              ;
 710+ 9F8C              ;
 711+ 9F8C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 712+ 9F8C
 713+ 9F8C 21 FE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 714+ 9F8F 3A 10 8C     	ld a,(Vel_left)
 715+ 9F92 A7           	and a
 716+ 9F93 28 06        	jr z,1F
 717+ 9F95 47           	ld b,a
 718+ 9F96 35           3 dec (hl)
 719+ 9F97 10 FD        	djnz 3B
 720+ 9F99 18 01        	jr 2F
 721+ 9F9B 35           1 dec (hl)
 722+ 9F9C C9           2 ret
 723+ 9F9D
 724+ 9F9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 725+ 9F9D
 726+ 9F9D 2A FA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 727+ 9FA0 01 1F 00     	ld bc,31
 728+ 9FA3 A7           	and a
 729+ 9FA4 ED 4A        	adc hl,bc
 730+ 9FA6 22 FA 8B     	ld (Posicion_actual),hl
 731+ 9FA9 21 F7 8B     	ld hl,Ctrl_0														; $xxx1
 732+ 9FAC CB C6        	set 0,(hl)
 733+ 9FAE C9           	ret
 734+ 9FAF
 735+ 9FAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 736+ 9FAF
 737+ 9FAF              Reaparece_izquierda
 738+ 9FAF
 739+ 9FAF 2A FA 8B     	ld hl,(Posicion_actual)
 740+ 9FB2 01 1F 00     	ld bc,31
 741+ 9FB5 A7           	and a
 742+ 9FB6 ED 42        	sbc hl,bc
 743+ 9FB8 22 FA 8B     	ld (Posicion_actual),hl 											; $xx1x
 744+ 9FBB 21 F7 8B     	ld hl,Ctrl_0
 745+ 9FBE CB CE        	set 1,(hl)
 746+ 9FC0 C9           	ret
 747+ 9FC1
 748+ 9FC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 749+ 9FC1
 750+ 9FC1 24           Reaparece_abajo inc h
 751+ 9FC2 01 E0 17     	ld bc,$17e0
 752+ 9FC5 A7           	and a
 753+ 9FC6 ED 4A        	adc hl,bc
 754+ 9FC8 22 FA 8B     	ld (Posicion_actual),hl
 755+ 9FCB 21 F7 8B     	ld hl,Ctrl_0
 756+ 9FCE CB D6        	set 2,(hl)
 757+ 9FD0 C9           	ret
 758+ 9FD1
 759+ 9FD1              ; ---------- ---------- ---------- ---------- ---------- ----------
 760+ 9FD1
 761+ 9FD1 01 E0 17     Reaparece_arriba ld bc,$17e0
 762+ 9FD4 A7           	and a
 763+ 9FD5 ED 42        	sbc hl,bc
 764+ 9FD7 22 FA 8B     	ld (Posicion_actual),hl
 765+ 9FDA 21 F7 8B     	ld hl,Ctrl_0
 766+ 9FDD CB DE        	set 3,(hl)
 767+ 9FDF C9           	ret
 768+ 9FE0
 769+ 9FE0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 770+ 9FE0              ;
 771+ 9FE0              ;	15/07/23
 772+ 9FE0
 773+ 9FE0              Reinicio
 774+ 9FE0
 775+ 9FE0              ; Vamos a reiniciar los punteros y variables de movimiento.
 776+ 9FE0
 777+ 9FE0 AF           	xor a
 778+ 9FE1 21 20 8C     	ld hl,Puntero_indice_mov_bucle
 779+ 9FE4 CD 02 A0     	call Limpia_contenido_hl
 780+ 9FE7
 781+ 9FE7 21 FA 8B     	ld hl,Posicion_actual
 782+ 9FEA CD 02 A0     	call Limpia_contenido_hl
 783+ 9FED
 784+ 9FED CD 8C 94     	call Situa_Puntero_indice_mov
 785+ 9FF0 CD 01 A1     	call Inicia_Puntero_mov
 786+ 9FF3
 787+ 9FF3 21 22 8C     	ld hl,Incrementa_puntero
 788+ 9FF6 06 05        	ld b,5
 789+ 9FF8 77           1 ld (hl),a
 790+ 9FF9 23           	inc hl
 791+ 9FFA 10 FC        	djnz 1B
 792+ 9FFC
 793+ 9FFC 21 F6 8B     	ld hl,Ctrl_2
 794+ 9FFF CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 795+ A001
 796+ A001 C9           	ret
 797+ A002
 798+ A002 77           Limpia_contenido_hl	ld (hl),a
 799+ A003 23           	inc hl
 800+ A004 77           	ld (hl),a
 801+ A005 C9           	ret
 802+ A006
 803+ A006              ; ----------------------------------------------------------------------------------------------------------------
 804+ A006              ;
 805+ A006              ;	18/6/24
 806+ A006              ;
 807+ A006
 808+ A006              Amadeus_a_izquierda
 809+ A006
 810+ A006              ;	Actualiza contador de movimientos.
 811+ A006
 812+ A006 21 BD 89     	ld hl,Comm_Amadeus
 813+ A009 35           	dec (hl)
 814+ A00A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 815+ A00C
 816+ A00C 2A BB 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 817+ A00F 2B           	dec hl
 818+ A010 2B           	dec hl
 819+ A011 2B           	dec hl
 820+ A012 2B           	dec hl
 821+ A013 22 BB 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 822+ A016
 823+ A016 21 62 8C     	ld hl,Ctrl_3
 824+ A019 CB EE        	set 5,(hl)
 825+ A01B
 826+ A01B C9           	ret
 827+ A01C
 828+ A01C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 829+ A01D C9           	ret
 830+ A01E
 831+ A01E
 832+ A01E              Amadeus_a_derecha
 833+ A01E
 834+ A01E              ;	Actualiza contador de movimientos.
 835+ A01E
 836+ A01E 21 BD 89     	ld hl,Comm_Amadeus
 837+ A021 34           	inc (hl)
 838+ A022 3E 7A        	ld a,$7a
 839+ A024 BE           	cp (hl)
 840+ A025 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 841+ A027
 842+ A027 2A BB 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 843+ A02A 23           	inc hl
 844+ A02B 23           	inc hl
 845+ A02C 23           	inc hl
 846+ A02D 23           	inc hl
 847+ A02E 22 BB 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 848+ A031
 849+ A031 21 62 8C     	ld hl,Ctrl_3
 850+ A034 CB EE        	set 5,(hl)
 851+ A036 C9           	ret
 852+ A037
 853+ A037 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 854+ A038 C9           	ret
# file closed: Direcciones.asm
2456  A039              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ A039              ; ----- ----- ----- ----- -----
   2+ A039              ;
   3+ A039              ;   28/12/23
   4+ A039
   5+ A039              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
   6+ A039
   7+ A039              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
   8+ A039
   9+ A039              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  10+ A039              ;                               Izquierda_y_subiendo+8 (11)
  11+ A039              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  12+ A039              ;                               Izquierda_y_subiendo+8 (8)
  13+ A039              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  14+ A039              ;                               Izquierda_y_subiendo+8 (8)
  15+ A039              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  16+ A039              ;                               Izquierda_y_subiendo+8 (8)
  17+ A039              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  18+ A039              ;                               Izquierda_y_subiendo+8 (8)
  19+ A039              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  20+ A039              ;                               Izquierda_y_subiendo+8 (7)
  21+ A039              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  22+ A039              ;                               Izquierda_y_subiendo+8 (7)
  23+ A039              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  24+ A039              ;                               Izquierda_y_subiendo+8 (7)
  25+ A039              Movimiento
  26+ A039
  27+ A039              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
  28+ A039
  29+ A039 3A F6 8B         ld a,(Ctrl_2)
  30+ A03C CB 57            bit 2,a
  31+ A03E 20 1B            jr nz, Desplazamiento_iniciado
  32+ A040
  33+ A040 2A 1E 8C         ld hl,(Puntero_mov)
  34+ A043 7E               ld a,(hl)
  35+ A044
  36+ A044              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  37+ A044
  38+ A044              Inicia_desplazamiento.
  39+ A044
  40+ A044              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  41+ A044
  42+ A044 CD 37 A1         call Ajusta_velocidad_desplazamiento
  43+ A047
  44+ A047              ; Iniciamos (Repetimos_mov).
  45+ A047
  46+ A047 7E               ld a,(hl)
  47+ A048 E6 0F            and $0f
  48+ A04A 32 24 8C         ld (Repetimos_desplazamiento),a
  49+ A04D 32 25 8C         ld (Repetimos_desplazamiento_backup),a
  50+ A050
  51+ A050              ; Iniciamos (Cola_de_desplazamiento).
  52+ A050
  53+ A050 23               inc hl
  54+ A051 7E               ld a,(hl)
  55+ A052 32 27 8C         ld (Cola_de_desplazamiento),a
  56+ A055 2B               dec hl
  57+ A056
  58+ A056 21 F6 8B         ld hl,Ctrl_2
  59+ A059 CB D6            set 2,(hl)
  60+ A05B
  61+ A05B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  62+ A05B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  63+ A05B
  64+ A05B              Desplazamiento_iniciado
  65+ A05B
  66+ A05B CD 0B A1         call Aplica_desplazamiento
  67+ A05E
  68+ A05E              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  69+ A05E
  70+ A05E 3A 62 8C         ld a,(Ctrl_3)
  71+ A061 CB 4F            bit 1,a
  72+ A063 C0               ret nz
  73+ A064
  74+ A064 21 24 8C     3 ld hl,Repetimos_desplazamiento
  75+ A067 35               dec (hl)
  76+ A068 C0               ret nz
  77+ A069
  78+ A069              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  79+ A069              ; Hay que volver a ejecutar este desplazamiento ???.
  80+ A069              ; Analiza (Cola_de_desplazamiento).
  81+ A069
  82+ A069 3A 27 8C     Cola ld a,(Cola_de_desplazamiento)
  83+ A06C A7               and a
  84+ A06D CC 60 A1         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  85+ A070 28 30            jr z,Reinicia_el_movimiento
  86+ A072
  87+ A072 FE FF            cp $ff
  88+ A074 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  89+ A076
  90+ A076 FE FE            cp $fe
  91+ A078 CC E5 A0         call z,Fijamos_bucle
  92+ A07B 28 25            jr z,Reinicia_el_movimiento
  93+ A07D
  94+ A07D FE FD            cp $fd
  95+ A07F 20 11            jr nz,1F
  96+ A081
  97+ A081              ; ---
  98+ A081              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  99+ A081
 100+ A081 3A F6 8B         ld a,(Ctrl_2)
 101+ A084 CB 5F            bit 3,a
 102+ A086 20 1A            jr nz,Reinicia_el_movimiento
 103+ A088
 104+ A088              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 105+ A088
 106+ A088 21 F6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 107+ A08B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 108+ A08D
 109+ A08D CD F6 A0         call Inicia_Repetimos_movimiento
 110+ A090 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 111+ A092              ; ---
 112+ A092
 113+ A092 FE 01        1 cp 1
 114+ A094 CA CF A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 115+ A097
 116+ A097 3D               dec a
 117+ A098 32 27 8C         ld (Cola_de_desplazamiento),a
 118+ A09B
 119+ A09B 3A 25 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 120+ A09E 32 24 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 121+ A0A1              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 122+ A0A1 C9               ret
 123+ A0A2
 124+ A0A2              Reinicia_el_movimiento
 125+ A0A2
 126+ A0A2 3A F6 8B         ld a,(Ctrl_2)
 127+ A0A5 CB 5F            bit 3,a
 128+ A0A7 28 1B            jr z,2F
 129+ A0A9
 130+ A0A9              ; (Cola_de_desplazamiento)="254".
 131+ A0A9
 132+ A0A9 21 26 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 133+ A0AC 35               dec (hl)
 134+ A0AD 20 15            jr nz,2F
 135+ A0AF
 136+ A0AF              ; Fin de las repeticiones del último movimiento.
 137+ A0AF
 138+ A0AF 21 F6 8B         ld hl,Ctrl_2
 139+ A0B2 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 140+ A0B4
 141+ A0B4 2A 1E 8C         ld hl,(Puntero_mov)
 142+ A0B7 23               inc hl
 143+ A0B8 23               inc hl
 144+ A0B9 23               inc hl
 145+ A0BA 22 1E 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 146+ A0BD              ;                                                               ; _ para ejecutar su mandato. :)
 147+ A0BD 7E               ld a,(hl)
 148+ A0BE 32 27 8C         ld (Cola_de_desplazamiento),a
 149+ A0C1
 150+ A0C1 C3 69 A0         jp Cola
 151+ A0C4
 152+ A0C4 CD 01 A1     2 call Inicia_Puntero_mov
 153+ A0C7
 154+ A0C7 21 F6 8B         ld hl,Ctrl_2
 155+ A0CA CB 96            res 2,(hl)
 156+ A0CC
 157+ A0CC C3 39 A0         jp Movimiento
 158+ A0CF
 159+ A0CF              Siguiente_desplazamiento
 160+ A0CF
 161+ A0CF              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 162+ A0CF              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 163+ A0CF
 164+ A0CF 21 F6 8B         ld hl,Ctrl_2
 165+ A0D2 CB 96            res 2,(hl)
 166+ A0D4
 167+ A0D4 2A 1E 8C         ld hl,(Puntero_mov)
 168+ A0D7 23               inc hl
 169+ A0D8 23               inc hl
 170+ A0D9 22 1E 8C         ld (Puntero_mov),hl
 171+ A0DC
 172+ A0DC 7E               ld a,(hl)
 173+ A0DD A7               and a
 174+ A0DE CC 60 A1         call z,Incrementa_Puntero_indice_mov
 175+ A0E1 CA A2 A0         jp z,Reinicia_el_movimiento
 176+ A0E4
 177+ A0E4 C9               ret
 178+ A0E5
 179+ A0E5              ; Subrutinas -----------------------------------------
 180+ A0E5              ; ---------- --------- --------- ---------- ----------
 181+ A0E5              ;
 182+ A0E5              ;   24/07/23
 183+ A0E5              ;
 184+ A0E5              ;   Fijamos_bucle
 185+ A0E5              ;
 186+ A0E5              ;
 187+ A0E5
 188+ A0E5              Fijamos_bucle
 189+ A0E5
 190+ A0E5 3A 22 8C         ld a,(Incrementa_puntero)
 191+ A0E8 3C               inc a
 192+ A0E9 32 23 8C         ld (Incrementa_puntero_backup),a
 193+ A0EC
 194+ A0EC CD 60 A1         call Incrementa_Puntero_indice_mov
 195+ A0EF 2A 1C 8C         ld hl,(Puntero_indice_mov)
 196+ A0F2 22 20 8C         ld (Puntero_indice_mov_bucle),hl
 197+ A0F5 C9               ret
 198+ A0F6
 199+ A0F6              ; ---------- --------- --------- ---------- ----------
 200+ A0F6              ;
 201+ A0F6              ;   07/7/23
 202+ A0F6              ;
 203+ A0F6              ;   Inicia_Repetimos_movimiento
 204+ A0F6              ;
 205+ A0F6              ;
 206+ A0F6
 207+ A0F6              Inicia_Repetimos_movimiento
 208+ A0F6
 209+ A0F6              ; Iniciamos (Repetimos_movimiento).
 210+ A0F6
 211+ A0F6 DD 2A 1E 8C      ld ix,(Puntero_mov)
 212+ A0FA DD 7E 02         ld a,(ix+2)
 213+ A0FD 32 26 8C         ld (Repetimos_movimiento),a
 214+ A100
 215+ A100 C9               ret
 216+ A101
 217+ A101              ; ---------- --------- --------- ---------- ----------
 218+ A101              ;
 219+ A101              ;   26/6/23
 220+ A101              ;
 221+ A101              ;   Inicia_Puntero_mov
 222+ A101              ;
 223+ A101              ;
 224+ A101
 225+ A101 2A 1C 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 226+ A104 CD DC 91         call Extrae_address
 227+ A107 22 1E 8C         ld (Puntero_mov),hl
 228+ A10A C9               ret
 229+ A10B
 230+ A10B              ; ---------- --------- --------- ---------- ----------
 231+ A10B              ;
 232+ A10B              ;   27/06/23
 233+ A10B              ;
 234+ A10B              ;   Aplica_movimiento.
 235+ A10B
 236+ A10B              Aplica_desplazamiento
 237+ A10B
 238+ A10B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 239+ A10B
 240+ A10B 2A 1E 8C         ld hl, (Puntero_mov)
 241+ A10E
 242+ A10E 7E               ld a,(hl)
 243+ A10F E6 F0            and $f0
 244+ A111 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 245+ A112
 246+ A112 CB 7E            bit 7,(hl)
 247+ A114 28 03            jr z,1F
 248+ A116 CD FF 9C         call Mov_up
 249+ A119 2A 1E 8C     1 ld hl, (Puntero_mov)
 250+ A11C CB 76            bit 6,(hl)
 251+ A11E 28 03            jr z,2F
 252+ A120 CD CB 9C         call Mov_down
 253+ A123
 254+ A123              ; Se ha aplicado reinicio ???
 255+ A123              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 256+ A123
 257+ A123              ;    ld a,(Ctrl_3)
 258+ A123              ;    bit 1,a
 259+ A123              ;    ret nz
 260+ A123
 261+ A123 2A 1E 8C     2 ld hl, (Puntero_mov)
 262+ A126 CB 6E            bit 5,(hl)
 263+ A128 28 03            jr z,3F
 264+ A12A CD 58 9E         call Mov_left
 265+ A12D 2A 1E 8C     3 ld hl, (Puntero_mov)
 266+ A130 CB 66            bit 4,(hl)
 267+ A132 C8               ret z
 268+ A133 CD 3D 9D         call Mov_right
 269+ A136 C9               ret
 270+ A137
 271+ A137              ; ---------- --------- --------- ---------- ----------
 272+ A137              ;
 273+ A137              ;   26/06/23
 274+ A137              ;
 275+ A137              ;   Ajusta_velocidad_desplazamiento.
 276+ A137
 277+ A137              Ajusta_velocidad_desplazamiento
 278+ A137
 279+ A137              ; 1er byte de la cadena de movimiento.
 280+ A137              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 281+ A137
 282+ A137 CD 55 A1         call Extrae_nibble_alto
 283+ A13A
 284+ A13A 32 12 8C         ld (Vel_up),a
 285+ A13D 79               ld a,c
 286+ A13E E6 0F            and $0f
 287+ A140 32 13 8C         ld (Vel_down),a
 288+ A143
 289+ A143              ; Saltamos al 2º byte de la cadena de movimiento.
 290+ A143              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 291+ A143
 292+ A143 23               inc hl
 293+ A144 CD 55 A1         call Extrae_nibble_alto
 294+ A147
 295+ A147 32 10 8C         ld (Vel_left),a
 296+ A14A 79               ld a,c
 297+ A14B E6 0F            and $0f
 298+ A14D 32 11 8C         ld (Vel_right),a
 299+ A150
 300+ A150              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 301+ A150
 302+ A150 23               inc hl
 303+ A151 22 1E 8C         ld (Puntero_mov),hl
 304+ A154 C9               ret
 305+ A155
 306+ A155 06 04        Extrae_nibble_alto ld b,4
 307+ A157 7E               ld a,(hl)
 308+ A158 4F               ld c,a
 309+ A159 E6 F0            and $f0
 310+ A15B CB 3F        1 srl a
 311+ A15D 10 FC            djnz 1B
 312+ A15F C9               ret
 313+ A160
 314+ A160              ; ---------- --------- --------- ---------- ----------
 315+ A160              ;
 316+ A160              ;   5/7/23
 317+ A160              ;
 318+ A160              ;   Incrementa_Puntero_indice_mov
 319+ A160
 320+ A160              Incrementa_Puntero_indice_mov
 321+ A160
 322+ A160 21 22 8C         ld hl,Incrementa_puntero
 323+ A163 34               inc (hl)
 324+ A164
 325+ A164 2A 1C 8C         ld hl,(Puntero_indice_mov)
 326+ A167 01 02 00         ld bc,2
 327+ A16A A7               and a
 328+ A16B 09               add hl,bc
 329+ A16C 22 1C 8C         ld (Puntero_indice_mov),hl
 330+ A16F
 331+ A16F 7E               ld a,(hl)
 332+ A170 A7               and a
 333+ A171
 334+ A171              ;! STOP. Fin del patrón de movimiento de la entidad.
 335+ A171
 336+ A171              ;    jr z,$
 337+ A171
 338+ A171              ;! Reinicia el Patrón de movimiento.
 339+ A171
 340+ A171 CC 76 A1         call z,Inicializa_Puntero_indice_mov_2
 341+ A174
 342+ A174 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 343+ A175
 344+ A175 C9               ret
 345+ A176
 346+ A176              ; ---------- --------- --------- ---------- ----------
 347+ A176              ;
 348+ A176              ;   15/01/24
 349+ A176              ;
 350+ A176              ;   Inicializa_Puntero_indice_mov
 351+ A176
 352+ A176              Inicializa_Puntero_indice_mov_2
 353+ A176
 354+ A176              ; Existe etiqueta de bucle principal???
 355+ A176
 356+ A176 2A 20 8C         ld hl,(Puntero_indice_mov_bucle)
 357+ A179 24               inc h
 358+ A17A 25               dec h
 359+ A17B 28 05            jr z,2F
 360+ A17D
 361+ A17D 22 1C 8C         ld (Puntero_indice_mov),hl
 362+ A180 18 14            jr 3F
 363+ A182
 364+ A182              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 365+ A182
 366+ A182 3A 22 8C     2 ld a,(Incrementa_puntero)
 367+ A185 47               ld b,a
 368+ A186
 369+ A186 2A 1C 8C         ld hl,(Puntero_indice_mov)
 370+ A189 2B           1 dec hl
 371+ A18A 2B               dec hl
 372+ A18B 10 FC            djnz 1B
 373+ A18D 22 1C 8C         ld (Puntero_indice_mov),hl
 374+ A190
 375+ A190 AF               xor a
 376+ A191 32 22 8C         ld (Incrementa_puntero),a
 377+ A194 18 06            jr 4F
 378+ A196
 379+ A196 3A 23 8C     3 ld a,(Incrementa_puntero_backup)
 380+ A199 32 22 8C         ld (Incrementa_puntero),a
 381+ A19C C9           4 ret
 382+ A19D
 383+ A19D              ; ----------------------------------------------------------------------
 384+ A19D              ;
 385+ A19D              ;   24/11/24
 386+ A19D              ;
 387+ A19D              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 388+ A19D
 389+ A19D DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 390+ A1A0 CD 9A 95         call Calcula_salto_en_BC
 391+ A1A3 21 14 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 392+ A1A6 A7               and a
 393+ A1A7 ED 4A            adc hl,bc
 394+ A1A9 C9               ret
 395+ A1AA
 396+ A1AA              ; ----------------------------------------------------------------------
 397+ A1AA              ;
 398+ A1AA              ;   24/11/24
 399+ A1AA              ;
 400+ A1AA              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 401+ A1AA              ;
 402+ A1AA              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 403+ A1AA
 404+ A1AA 4E           Transfiere_datos_de_contadores ld c,(hl)
 405+ A1AB 23               inc hl
 406+ A1AC 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 407+ A1AD DD 71 09         ld (ix+9),c
 408+ A1B0 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 409+ A1B3 C9               ret
 410+ A1B4
# file closed: Movimiento.asm
2457  A1B4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A1B4              ; --------------------------------------------------------------------------------------
   2+ A1B4              ;
   3+ A1B4              ;   25/10/24
   4+ A1B4              ;
   5+ A1B4
   6+ A1B4              Pinta_disparos_Entidades
   7+ A1B4
   8+ A1B4 ED 73 3A 8C      ld (Stack),sp
   9+ A1B8 ED 7B 4C 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A1BC
  11+ A1BC 3E 02            ld a,2
  12+ A1BE 08               ex af,af
  13+ A1BF
  14+ A1BF 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A1C1              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A1C1              ;                                     _ No encontraría "0".
  17+ A1C1 FD E1        4 pop iy
  18+ A1C3 D1               pop de                          ; 1er .db IYL
  19+ A1C4              ;                                   ; 2º  .db IYH
  20+ A1C4              ;                                   ; 3er .db E.
  21+ A1C4              ;   Album vacío ???
  22+ A1C4
  23+ A1C4 FD 7D            ld a,iyl
  24+ A1C6 FD 84            add iyh
  25+ A1C8 83               add e
  26+ A1C9 28 1F            jr z,1F
  27+ A1CB
  28+ A1CB              ;   Imprime album, (contiene datos).
  29+ A1CB
  30+ A1CB 3B               dec sp
  31+ A1CC
  32+ A1CC E1               pop hl                          ; Puntero de impresión en HL.
  33+ A1CD
  34+ A1CD              ; Imprime el 1er scanline del disparo.
  35+ A1CD
  36+ A1CD FD 7D            ld a,iyl
  37+ A1CF AE               xor (hl)
  38+ A1D0 77               ld (hl),a
  39+ A1D1
  40+ A1D1 2C               inc l
  41+ A1D2
  42+ A1D2 FD 7C            ld a,iyh
  43+ A1D4 AE               xor (hl)
  44+ A1D5 77               ld (hl),a
  45+ A1D6
  46+ A1D6 2C               inc l
  47+ A1D7
  48+ A1D7 7B               ld a,e
  49+ A1D8 AE               xor (hl)
  50+ A1D9 77               ld (hl),a
  51+ A1DA
  52+ A1DA              ; Imprime el 2º scanline del disparo.
  53+ A1DA
  54+ A1DA E1               pop hl
  55+ A1DB
  56+ A1DB FD 7D            ld a,iyl
  57+ A1DD AE               xor (hl)
  58+ A1DE 77               ld (hl),a
  59+ A1DF
  60+ A1DF 2C               inc l
  61+ A1E0
  62+ A1E0 FD 7C            ld a,iyh
  63+ A1E2 AE               xor (hl)
  64+ A1E3 77               ld (hl),a
  65+ A1E4
  66+ A1E4 2C               inc l
  67+ A1E5
  68+ A1E5 7B               ld a,e
  69+ A1E6 AE               xor (hl)
  70+ A1E7 77               ld (hl),a
  71+ A1E8
  72+ A1E8 10 D7            djnz 4B
  73+ A1EA
  74+ A1EA 08           1 ex af,af
  75+ A1EB 3D               dec a
  76+ A1EC 20 05            jr nz,2F
  77+ A1EE
  78+ A1EE ED 7B 3A 8C      ld sp,(Stack)
  79+ A1F2 C9               ret
  80+ A1F3
  81+ A1F3 ED 7B 4A 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A1F7 08               ex af,af
  83+ A1F8 18 C5            jr 3B
  84+ A1FA
  85+ A1FA              ; --------------------------------------------------------------------------------------
  86+ A1FA              ;
  87+ A1FA              ;   2/12/24
  88+ A1FA              ;
  89+ A1FA
  90+ A1FA              Motor_de_disparos_entidades
  91+ A1FA
  92+ A1FA 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A1FD FE 07            cp 7
  94+ A1FF C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A200
  96+ A200 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A202 21 26 89         ld hl,Indice_de_disparos_entidades
  98+ A205
  99+ A205 CD DC 91     1 call Extrae_address
 100+ A208 1C               inc e
 101+ A209 1C               inc e
 102+ A20A ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A20E
 104+ A20E               ; Caja vacía ???
 105+ A20E
 106+ A20E 2D               dec l
 107+ A20F 7E               ld a,(hl)
 108+ A210 A7               and a
 109+ A211 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A213
 111+ A213              ; --- Trabajamos con caja:
 112+ A213
 113+ A213 2C               inc l
 114+ A214
 115+ A214              ; --- Existe posibilidad de impacto ???
 116+ A214
 117+ A214 3A 8B 8C         ld a,(Shield)
 118+ A217 A7               and a
 119+ A218 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A21A
 121+ A21A CB 46            bit 0,(hl)
 122+ A21C C4 5C A2         call nz, Comprueba_impacto_con_Amadeus
 123+ A21F 20 37            jr nz,3F
 124+ A221
 125+ A221 CD E3 A2     6 call Rota_disparo_si_procede
 126+ A224
 127+ A224              ; ------------------------------------------------------------
 128+ A224
 129+ A224 2D               dec l
 130+ A225 2D               dec l
 131+ A226
 132+ A226 CD DC 91         call Extrae_address
 133+ A229
 134+ A229              ;   (Puntero_de_impresion) del disparo en HL
 135+ A229              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A229
 137+ A229 3A 64 8C         ld a,(Ctrl_5)
 138+ A22C CB 57            bit 2,a
 139+ A22E 28 09            jr z,4F
 140+ A230
 141+ A230 CB 97            res 2,a
 142+ A232 32 64 8C         ld (Ctrl_5),a
 143+ A235 2C               inc l
 144+ A236 2C               inc l
 145+ A237 18 0C            jr 5F
 146+ A239
 147+ A239 CB 5F        4 bit 3,a
 148+ A23B 28 08            jr z,5F
 149+ A23D
 150+ A23D CB 9F            res 3,a
 151+ A23F 32 64 8C         ld (Ctrl_5),a
 152+ A242 2D               dec l
 153+ A243 2D               dec l
 154+ A244 2D               dec l
 155+ A245
 156+ A245              ; ---------------------------------------------------------------------
 157+ A245
 158+ A245              ;! Velocidad del disparo de entidades.
 159+ A245
 160+ A245 CD 85 9C     5 call NextScan
 161+ A248 CD 85 9C         call NextScan
 162+ A24B
 163+ A24B              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A24B
 165+ A24B CD C0 A2         call Fin_de_disparo_de_entidad
 166+ A24E
 167+ A24E EB               ex de,hl
 168+ A24F
 169+ A24F 73               ld (hl),e
 170+ A250 23               inc hl
 171+ A251 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A252
 173+ A252 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A255 18 02            jr 2F
 175+ A257
 176+ A257 C9               ret
 177+ A258
 178+ A258 EB           3 ex de,hl
 179+ A259 10 AA        2 djnz 1B
 180+ A25B
 181+ A25B C9               ret
 182+ A25C
 183+ A25C              ; ------------- ------------- ------------
 184+ A25C              ;
 185+ A25C              ;   1/11/24
 186+ A25C
 187+ A25C              Comprueba_impacto_con_Amadeus
 188+ A25C
 189+ A25C              ;   El disparo se encuentra en zona de Amadeus.
 190+ A25C              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A25C
 192+ A25C              ;   Modificamos registros, así que guardamos ...
 193+ A25C
 194+ A25C C5               push bc
 195+ A25D E5               push hl
 196+ A25E D5               push de
 197+ A25F
 198+ A25F 2D               dec l
 199+ A260 2D               dec l
 200+ A261
 201+ A261 CD DC 91         call Extrae_address
 202+ A264
 203+ A264 3A B5 89         ld a,(CX_Amadeus)
 204+ A267 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A268
 206+ A268 7D               ld a,l
 207+ A269 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A26B
 209+ A26B 06 03            ld b,3
 210+ A26D
 211+ A26D B9           1 cp c
 212+ A26E 28 15            jr z,Coincidencia
 213+ A270 0C               inc c
 214+ A271 10 FA            djnz 1B
 215+ A273
 216+ A273 0D               dec c
 217+ A274 0D               dec c
 218+ A275 0D               dec c
 219+ A276
 220+ A276 3C               inc a
 221+ A277 B9               cp c
 222+ A278 28 0B            jr z,Coincidencia
 223+ A27A
 224+ A27A 3C               inc a
 225+ A27B B9               cp c
 226+ A27C 28 07            jr z,Coincidencia
 227+ A27E
 228+ A27E D1           2 pop de
 229+ A27F E1               pop hl
 230+ A280 C1               pop bc
 231+ A281
 232+ A281              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A281
 234+ A281 CB 86            res 0,(hl)
 235+ A283 AF               xor a                       ; Z before RET.
 236+ A284 C9               ret
 237+ A285
 238+ A285              Coincidencia
 239+ A285
 240+ A285              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A285              ;   Existe posibilidad de impacto.
 242+ A285              ;   Vamos a averiguarlo ...
 243+ A285
 244+ A285 1D               dec e
 245+ A286 1D               dec e
 246+ A287 1D               dec e
 247+ A288
 248+ A288              ; DE en Puntero_objeto del disparo.
 249+ A288              ; HL en Puntero_de_impresión del disparo.
 250+ A288
 251+ A288              ; Comparador:
 252+ A288
 253+ A288 06 03            ld b,3
 254+ A28A
 255+ A28A 1A           3 ld a,(de)
 256+ A28B 4F               ld c,a
 257+ A28C A6               and (hl)
 258+ A28D B9               cp c
 259+ A28E 20 06            jr nz,Amadeus_impactado
 260+ A290
 261+ A290 2C               inc l
 262+ A291 1C               inc e
 263+ A292
 264+ A292 10 F6            djnz 3B
 265+ A294
 266+ A294 18 E8            jr 2B
 267+ A296
 268+ A296              Amadeus_impactado
 269+ A296
 270+ A296              ; Borramos disparo.
 271+ A296
 272+ A296              ;   Exclusion.
 273+ A296
 274+ A296 D1               pop de
 275+ A297 E1               pop hl
 276+ A298
 277+ A298 E5               push hl
 278+ A299 D5               push de
 279+ A29A
 280+ A29A CD 4E A3         call Borra_6_bytes
 281+ A29D
 282+ A29D 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A2A0 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A2A1
 285+ A2A1              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A2A1
 287+ A2A1 21 B8 89         ld hl,Impacto_Amadeus
 288+ A2A4 36 01            ld (hl),1
 289+ A2A6
 290+ A2A6              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A2A6              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A2A6
 293+ A2A6 3A B9 89         ld a,(p.imp.amadeus)
 294+ A2A9 FE DE            cp $de
 295+ A2AB 20 04            jr nz,1F
 296+ A2AD
 297+ A2AD 3D               dec a
 298+ A2AE 32 B9 89         ld (p.imp.amadeus),a
 299+ A2B1
 300+ A2B1              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A2B1
 302+ A2B1 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A2B4 21 BB 89         ld hl,Pamm_Amadeus
 304+ A2B7
 305+ A2B7 73               ld (hl),e
 306+ A2B8 23               inc hl
 307+ A2B9 72               ld (hl),d
 308+ A2BA
 309+ A2BA D1               pop de
 310+ A2BB E1               pop hl
 311+ A2BC C1               pop bc
 312+ A2BD
 313+ A2BD AF               xor a
 314+ A2BE 3C               inc a               ; NZ before RET.
 315+ A2BF C9               ret
 316+ A2C0
 317+ A2C0              ; ------------- ------------- ------------
 318+ A2C0              ;
 319+ A2C0              ;   31/10/24
 320+ A2C0
 321+ A2C0              Fin_de_disparo_de_entidad
 322+ A2C0
 323+ A2C0              ; Estamos en zona de Amadeus ??
 324+ A2C0
 325+ A2C0 7C               ld a,h
 326+ A2C1 FE 54            cp $54
 327+ A2C3 38 0D            jr c,1F
 328+ A2C5
 329+ A2C5 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A2C6
 331+ A2C6 5D               ld e,l
 332+ A2C7 54               ld d,h
 333+ A2C8
 334+ A2C8 21 E0 57         ld hl,$57e0
 335+ A2CB ED 52            sbc hl,de
 336+ A2CD
 337+ A2CD 38 6F            jr c,Elimina_disparo_entidad
 338+ A2CF
 339+ A2CF 6B               ld l,e
 340+ A2D0 62               ld h,d
 341+ A2D1
 342+ A2D1 D1               pop de
 343+ A2D2
 344+ A2D2 7C           1 ld a,h
 345+ A2D3 FE 50            cp $50
 346+ A2D5 D8               ret c
 347+ A2D6
 348+ A2D6 7D               ld a,l
 349+ A2D7 FE C0            cp $c0
 350+ A2D9 D8               ret c
 351+ A2DA
 352+ A2DA              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A2DA              ; Así podremos comprobar si hay colisión más adelante.
 354+ A2DA
 355+ A2DA 1C               inc e
 356+ A2DB 1C               inc e
 357+ A2DC
 358+ A2DC EB               ex de,hl
 359+ A2DD CB C6            set 0,(hl)
 360+ A2DF EB               ex de,hl
 361+ A2E0
 362+ A2E0 1D               dec e
 363+ A2E1 1D               dec e
 364+ A2E2
 365+ A2E2 C9               ret
 366+ A2E3
 367+ A2E3              ; ----------------------------------------------------------
 368+ A2E3              ;
 369+ A2E3              ;   08/10/24
 370+ A2E3
 371+ A2E3              ;   Estructura de un disparo de entidades.
 372+ A2E3
 373+ A2E3              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A2E3              ; 	defw 0											; Puntero de impresión.
 375+ A2E3              ;	defw 0											; Control.
 376+ A2E3
 377+ A2E3              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A2E3              ;   _de la entidad en el momento de disparar.
 379+ A2E3
 380+ A2E3              ;   El byte alto muestra la siguiente información:
 381+ A2E3              ;
 382+ A2E3              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A2E3              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A2E3              ;
 385+ A2E3              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A2E3              ;
 387+ A2E3              ;                        10xx ..... Izquierda.
 388+ A2E3              ;                        01xx ..... Derecha.
 389+ A2E3              ;                        00xx ..... Recto.
 390+ A2E3
 391+ A2E3              Rota_disparo_si_procede
 392+ A2E3
 393+ A2E3              ;   Nos situamos en el byte alto de (Control).
 394+ A2E3
 395+ A2E3 CB 76            bit 6,(hl)
 396+ A2E5 20 2D            jr nz,Rota_a_derecha
 397+ A2E7 CB 7E            bit 7,(hl)
 398+ A2E9 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A2EA
 400+ A2EA              Rota_a_izq
 401+ A2EA
 402+ A2EA E5               push hl
 403+ A2EB
 404+ A2EB 7D               ld a,l
 405+ A2EC D6 05            sub 5
 406+ A2EE 6F               ld l,a
 407+ A2EF
 408+ A2EF E5               push hl
 409+ A2F0 FD E1            pop iy
 410+ A2F2
 411+ A2F2 A7               and a
 412+ A2F3
 413+ A2F3 FD CB 02 16      rl (iy+02)
 414+ A2F7 FD CB 01 16      rl (iy+01)
 415+ A2FB FD CB 00 16      rl (iy+00)
 416+ A2FF
 417+ A2FF 30 3B            jr nc,Exit
 418+ A301
 419+ A301              ; Desplazamiento completo hasta Carry.
 420+ A301              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A301
 422+ A301 FD 36 02 03      ld (iy+02),$03
 423+ A305 FD 36 01 00      ld (iy+01),$00
 424+ A309 FD 36 00 00      ld (iy+00),$00
 425+ A30D
 426+ A30D 21 64 8C         ld hl,Ctrl_5
 427+ A310 CB DE            set 3,(hl)
 428+ A312
 429+ A312 18 28            jr Exit
 430+ A314
 431+ A314              Rota_a_derecha
 432+ A314
 433+ A314 E5               push hl
 434+ A315
 435+ A315 7D               ld a,l
 436+ A316 D6 05            sub 5
 437+ A318 6F               ld l,a
 438+ A319
 439+ A319 E5               push hl
 440+ A31A FD E1            pop iy
 441+ A31C
 442+ A31C A7               and a
 443+ A31D
 444+ A31D FD CB 00 1E      rr (iy+00)
 445+ A321 FD CB 01 1E      rr (iy+01)
 446+ A325 FD CB 02 1E      rr (iy+02)
 447+ A329
 448+ A329 30 11            jr nc,Exit
 449+ A32B
 450+ A32B              ; Desplazamiento completo hasta Carry.
 451+ A32B              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A32B
 453+ A32B FD 36 00 01      ld (iy+00),$01
 454+ A32F FD 36 01 80      ld (iy+01),$80
 455+ A333 FD 36 02 00      ld (iy+02),$00
 456+ A337
 457+ A337 21 64 8C         ld hl,Ctrl_5
 458+ A33A CB D6            set 2,(hl)
 459+ A33C
 460+ A33C E1           Exit pop hl
 461+ A33D C9               ret
 462+ A33E
 463+ A33E              ; ------------ ----------- ------------
 464+ A33E              ;
 465+ A33E              ;   25/9/24
 466+ A33E
 467+ A33E              Elimina_disparo_entidad
 468+ A33E
 469+ A33E 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A341 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A342
 472+ A342 E1               pop hl
 473+ A343 E5               push hl
 474+ A344
 475+ A344 2C               inc l
 476+ A345 2C               inc l
 477+ A346
 478+ A346 CD 4E A3         call Borra_6_bytes
 479+ A349
 480+ A349 D1               pop de
 481+ A34A
 482+ A34A 21 00 00         ld hl,0
 483+ A34D
 484+ A34D C9               ret
 485+ A34E
 486+ A34E              ; ----- ----- ----- ----- -----
 487+ A34E
 488+ A34E              Borra_6_bytes
 489+ A34E
 490+ A34E 16 06            ld d,6                                                    ; Contador
 491+ A350 AF               xor a                                                     ; Borrador
 492+ A351 77           1 ld (hl),a
 493+ A352 2D               dec l
 494+ A353 15               dec d
 495+ A354 20 FB            jr nz,1B
 496+ A356
 497+ A356 C9               ret
 498+ A357
 499+ A357              ; --------------------------------------------------------------------------------------
 500+ A357              ;
 501+ A357              ;   12/10/24
 502+ A357              ;
 503+ A357
 504+ A357              Genera_datos_de_impresion_disparos_Entidades
 505+ A357
 506+ A357 3E 07            ld a,7
 507+ A359 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A35A
 509+ A35A              ; ---------------
 510+ A35A
 511+ A35A              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A35A
 513+ A35A 21 26 89          ld hl,Indice_de_disparos_entidades
 514+ A35D
 515+ A35D CD DC 91     1 call Extrae_address
 516+ A360
 517+ A360 13               inc de
 518+ A361 13               inc de
 519+ A362
 520+ A362 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A366
 522+ A366 2D               dec l
 523+ A367 7E               ld a,(hl)
 524+ A368 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A369 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A36B
 527+ A36B              ; ----- ----- ----- -----
 528+ A36B
 529+ A36B 2D               dec l
 530+ A36C CD DC 91         call Extrae_address
 531+ A36F E5               push hl
 532+ A370
 533+ A370 1D               dec e
 534+ A371
 535+ A371 EB               ex de,hl
 536+ A372
 537+ A372 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A373 2D               dec l
 539+ A374 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A375 2D               dec l
 541+ A376 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A377
 543+ A377 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A378
 545+ A378              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A378
 547+ A378 FD 2A 4E 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A37C FD 73 00         ld (iy+0),e
 549+ A37F FD 70 01         ld (iy+1),b
 550+ A382 FD 71 02         ld (iy+2),c
 551+ A385
 552+ A385 FD 75 03         ld (iy+3),l
 553+ A388 FD 74 04         ld (iy+4),h
 554+ A38B
 555+ A38B CD 85 9C         call NextScan
 556+ A38E
 557+ A38E FD 75 05         ld (iy+5),l
 558+ A391 FD 74 06         ld (iy+6),h
 559+ A394
 560+ A394 FD E5            push iy
 561+ A396 E1               pop hl
 562+ A397
 563+ A397 3E 07            ld a,7
 564+ A399 85               add l
 565+ A39A 6F               ld l,a
 566+ A39B
 567+ A39B 22 4E 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A39E
 569+ A39E              ; ----- ----- ----- -----
 570+ A39E
 571+ A39E              Situa_en_siguiente_caja
 572+ A39E
 573+ A39E 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A39F 3D               dec a
 575+ A3A0 C8               ret z
 576+ A3A1
 577+ A3A1 08               ex af,af
 578+ A3A2 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A3A5 18 B6            jr 1B
 580+ A3A7
 581+ A3A7              ; --------------------------------------------------------------------------------------
 582+ A3A7              ;
 583+ A3A7              ;   12/10/24
 584+ A3A7              ;
 585+ A3A7
 586+ A3A7              Genera_disparo_de_entidad_maldosa
 587+ A3A7
 588+ A3A7              ;   Estructura de un disparo de entidades.
 589+ A3A7
 590+ A3A7              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A3A7              ; 	defw 0											; Puntero de impresión.
 592+ A3A7              ;	defw 0											; Control.
 593+ A3A7
 594+ A3A7              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A3A7              ;   _de la entidad en el momento de disparar.
 596+ A3A7
 597+ A3A7              ;   El byte de control muestra la siguiente información:
 598+ A3A7
 599+ A3A7              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A3A7              ;
 601+ A3A7              ;                        10xx ..... Izquierda.
 602+ A3A7              ;                        01xx ..... Derecha.
 603+ A3A7              ;                        00xx ..... Recto.
 604+ A3A7
 605+ A3A7              ;*  Exclusiones.
 606+ A3A7
 607+ A3A7              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A3A7              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A3A7
 610+ A3A7 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A3AA A7               and a
 612+ A3AB C8               ret z
 613+ A3AC
 614+ A3AC 3A EC 8B         ld a,(Coordenada_y)
 615+ A3AF A7               and a
 616+ A3B0 C8               ret z
 617+ A3B1
 618+ A3B1 3D               dec a
 619+ A3B2 C8               ret z
 620+ A3B3
 621+ A3B3 FE 10            cp 16
 622+ A3B5 D0               ret nc
 623+ A3B6
 624+ A3B6              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A3B6              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A3B6              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A3B6
 628+ A3B6 21 54 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A3B9 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A3BA
 631+ A3BA              ;   Decrementa el numero de disparos de entidades.
 632+ A3BA
 633+ A3BA 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A3BD 35               dec (hl)
 635+ A3BE
 636+ A3BE 21 26 89         ld hl,Indice_de_disparos_entidades
 637+ A3C1
 638+ A3C1 CD DC 91     1 call Extrae_address
 639+ A3C4
 640+ A3C4 13               inc de
 641+ A3C5 13               inc de
 642+ A3C6
 643+ A3C6 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A3CA
 645+ A3CA              ;   Comprobamos si la caja está vacía.
 646+ A3CA
 647+ A3CA 2D               dec l
 648+ A3CB 7E               ld a,(hl)
 649+ A3CC A7               and a
 650+ A3CD 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A3CF 2C               inc l
 652+ A3D0
 653+ A3D0              ;   Caja vacía, vamos a generar un disparo.
 654+ A3D0              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A3D0
 656+ A3D0 CD F1 A3         call Genera_byte_inclinacion
 657+ A3D3
 658+ A3D3 7E               ld a,(hl)
 659+ A3D4 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A3D5
 661+ A3D5 2D               dec l
 662+ A3D6
 663+ A3D6 CD 0D A4         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A3D9
 665+ A3D9 70               ld (hl),b
 666+ A3DA 2D               dec l
 667+ A3DB 71               ld (hl),c
 668+ A3DC
 669+ A3DC 2D               dec l
 670+ A3DD
 671+ A3DD              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A3DD
 673+ A3DD FD 7E 02         ld a,(iy+02)
 674+ A3E0 77               ld (hl),a
 675+ A3E1 2D               dec l
 676+ A3E2
 677+ A3E2 FD 7E 01         ld a,(iy+01)
 678+ A3E5 77               ld (hl),a
 679+ A3E6 2D               dec l
 680+ A3E7
 681+ A3E7 FD 7E 00         ld a,(iy+00)
 682+ A3EA 77               ld (hl),a
 683+ A3EB
 684+ A3EB C9               ret
 685+ A3EC
 686+ A3EC              ;   --- --- ---
 687+ A3EC
 688+ A3EC              Situa_en_siguiente_disparo
 689+ A3EC
 690+ A3EC 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A3EF 18 D0            jr 1B
 692+ A3F1
 693+ A3F1              ; --------------------------------------------------------------------------------------
 694+ A3F1              ;
 695+ A3F1              ;   09/10/24
 696+ A3F1              ;
 697+ A3F1
 698+ A3F1              Genera_byte_inclinacion
 699+ A3F1
 700+ A3F1              ; Determina tendencia del disparo.
 701+ A3F1
 702+ A3F1 3A B5 89         ld a,(CX_Amadeus)
 703+ A3F4 47               ld b,a
 704+ A3F5 3A EB 8B         ld a,(Coordenada_X)
 705+ A3F8 90               sub b
 706+ A3F9 38 07            jr c,Disparo_a_derecha
 707+ A3FB
 708+ A3FB FE 06        Disparo_a_izquierda cp 6
 709+ A3FD
 710+ A3FD D8               ret c
 711+ A3FE C8               ret z
 712+ A3FF
 713+ A3FF CB FE            set 7,(hl)
 714+ A401 C9               ret
 715+ A402
 716+ A402 47           Disparo_a_derecha ld b,a
 717+ A403 3E FF            ld a,$ff
 718+ A405 90               sub b
 719+ A406
 720+ A406 FE 05            cp 5
 721+ A408
 722+ A408 D8               ret c
 723+ A409 C8               ret z
 724+ A40A
 725+ A40A CB F6            set 6,(hl)
 726+ A40C C9               ret
 727+ A40D
 728+ A40D              ; --------------------------------------------------------------------------------------
 729+ A40D              ;
 730+ A40D              ;   09/10/24
 731+ A40D              ;
 732+ A40D
 733+ A40D              Modifica_puntero_de_impresion
 734+ A40D
 735+ A40D              ;   Puntero de impresión del disparo en BC.
 736+ A40D
 737+ A40D E5               push hl
 738+ A40E
 739+ A40E 2A 67 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A411 CD 85 9C         call NextScan
 741+ A414
 742+ A414 4D               ld c,l
 743+ A415 44               ld b,h
 744+ A416
 745+ A416 E1               pop hl
 746+ A417
 747+ A417 08               ex af,af
 748+ A418 CB 77            bit 6,a
 749+ A41A 28 06            jr z,1F
 750+ A41C
 751+ A41C FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A420 0C               inc c
 753+ A421 C9               ret
 754+ A422
 755+ A422 CB 7F        1 bit 7,a
 756+ A424 28 F6            jr z,2B
 757+ A426
 758+ A426 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A42A 0D               dec c
 760+ A42B
 761+ A42B C9               ret
 762+ A42C
 763+ A42C              ; --------------------------------------------------------------------------------------
 764+ A42C              ;
 765+ A42C              ;   28/11/24
 766+ A42C              ;
 767+ A42C
 768+ A42C              Compara_con_coordenadas_de_disparo
 769+ A42C
 770+ A42C DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A42F 47               ld b,a
 772+ A430 3A 6C 8C         ld a,(Coordenadas_disparo_certero)
 773+ A433 90               sub b
 774+ A434
 775+ A434              ; A = "0" ok
 776+ A434              ; A = "1" ok
 777+ A434
 778+ A434 28 08            jr z,Comprueba_coordenada_X
 779+ A436 3D               dec a
 780+ A437 28 05            jr z,Comprueba_coordenada_X
 781+ A439
 782+ A439              ; A = "$ff" ok
 783+ A439
 784+ A439 FE FE            cp $fe
 785+ A43B 28 01            jr z,Comprueba_coordenada_X
 786+ A43D
 787+ A43D C9               ret
 788+ A43E
 789+ A43E              Comprueba_coordenada_X
 790+ A43E
 791+ A43E DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A441 47               ld b,a
 793+ A442 21 6D 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A445 7E               ld a,(hl)
 795+ A446 90               sub b
 796+ A447
 797+ A447              ; A = "0" ok
 798+ A447              ; A = "1" ok
 799+ A447
 800+ A447 28 09            jr z,Activa_Impacto_en_entidad
 801+ A449 3D               dec a
 802+ A44A 28 06            jr z,Activa_Impacto_en_entidad
 803+ A44C
 804+ A44C              ; A = "2" ok
 805+ A44C
 806+ A44C 3D               dec a
 807+ A44D 28 03            jr z,Activa_Impacto_en_entidad
 808+ A44F
 809+ A44F              ; A = "$ff"
 810+ A44F
 811+ A44F FE FD            cp $fd
 812+ A451 C0               ret nz
 813+ A452
 814+ A452              Activa_Impacto_en_entidad
 815+ A452
 816+ A452              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A452
 818+ A452 3E 02            ld a,2
 819+ A454 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A457
 821+ A457              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A457
 823+ A457 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A45A
 825+ A45A DD 73 07         ld (ix+7),e
 826+ A45D DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A460
 828+ A460              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A460
 830+ A460 21 69 8C         ld hl,Impacto2
 831+ A463 CB 9E            res 3,(hl)
 832+ A465
 833+ A465 C9               ret
 834+ A466
 835+ A466              ; --------------------------------------------------------------------------------------
 836+ A466              ;
 837+ A466              ;   13/10/24
 838+ A466              ;
 839+ A466
 840+ A466              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A466
 842+ A466              Limpia_album_de_pintado_disparos_Amadeus
 843+ A466
 844+ A466 2A 46 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A469 06 06            ld b,6
 846+ A46B AF               xor a
 847+ A46C 77           1 ld (hl),a
 848+ A46D 2C               inc l
 849+ A46E 10 FC            djnz 1B
 850+ A470
 851+ A470 C9               ret
 852+ A471
 853+ A471              ; --------------------------------------------------------------------------------------
 854+ A471              ;
 855+ A471              ;   29/09/24
 856+ A471              ;
 857+ A471
 858+ A471              Calcula_bytes_pintado_disparos
 859+ A471
 860+ A471 2A 4A 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A474 45               ld b,l
 862+ A475 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A478 7D               ld a,l
 864+ A479
 865+ A479 90               sub b
 866+ A47A 32 50 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A47D
 868+ A47D C9               ret
 869+ A47E
 870+ A47E              ; --------------------------------------------------------------------------------------
 871+ A47E              ;
 872+ A47E              ;   26/10/24
 873+ A47E              ;
 874+ A47E              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A47E              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A47E              ;   _disparos que el álbum del FRAME actual).
 877+ A47E
 878+ A47E              Limpia_album_de_pintado_disparos_entidades
 879+ A47E
 880+ A47E 21 51 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A481 7E               ld a,(hl)
 882+ A482 2D               dec l
 883+ A483 46               ld b,(hl)
 884+ A484 90               sub b
 885+ A485
 886+ A485 D8               ret c
 887+ A486 C8               ret z
 888+ A487
 889+ A487 F5               push af
 890+ A488 80               add b
 891+ A489 77               ld (hl),a
 892+ A48A F1               pop af
 893+ A48B
 894+ A48B              ; Clean.
 895+ A48B
 896+ A48B 47           2 ld b,a
 897+ A48C AF               xor a
 898+ A48D 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A490 77           1 ld (hl),a
 900+ A491 23               inc hl
 901+ A492 10 FC            djnz 1B
 902+ A494
 903+ A494 C9               ret
 904+ A495
 905+ A495              ; --------------------------------------------------------------------------------------
 906+ A495              ;
 907+ A495              ;   29/09/24
 908+ A495              ;
 909+ A495
 910+ A495              Motor_Disparos_Amadeus
 911+ A495
 912+ A495 21 23 89         ld hl,Disparo_Amad+1
 913+ A498
 914+ A498 34               inc (hl)
 915+ A499 35               dec (hl)
 916+ A49A
 917+ A49A C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A49B
 919+ A49B              ;   Esta caja contiene un disparo.
 920+ A49B
 921+ A49B CD A2 A4         call Consulta_Impacto
 922+ A49E CC BB A4         call z,Mueve_disparo_Amadeus
 923+ A4A1
 924+ A4A1 C9               ret
 925+ A4A2
 926+ A4A2              ; ----------------------
 927+ A4A2              ;
 928+ A4A2              ;
 929+ A4A2              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A4A2              ;
 931+ A4A2              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A4A2
 933+ A4A2
 934+ A4A2              Consulta_Impacto
 935+ A4A2
 936+ A4A2              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A4A2              ;   _sea lo más coherente posible.
 938+ A4A2
 939+ A4A2 E5               push hl
 940+ A4A3 2B               dec hl
 941+ A4A4 CD 97 A5         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A4A7 E1               pop hl
 943+ A4A8 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A4A9
 945+ A4A9 C8               ret z
 946+ A4AA
 947+ A4AA 3A 69 8C         ld a,(Impacto2)
 948+ A4AD CB DF            set 3,a
 949+ A4AF 32 69 8C         ld (Impacto2),a
 950+ A4B2
 951+ A4B2 E5               push hl
 952+ A4B3 CD 84 A5         call Genera_coordenadas_de_disparo_Amadeus
 953+ A4B6 E1               pop hl
 954+ A4B7 CD D4 A4         call Elimina_disparo_Amadeus
 955+ A4BA
 956+ A4BA C9               ret
 957+ A4BB
 958+ A4BB              ; ----------------------
 959+ A4BB              ;
 960+ A4BB              ;
 961+ A4BB              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A4BB
 963+ A4BB              Mueve_disparo_Amadeus
 964+ A4BB
 965+ A4BB CD DC 91         call Extrae_address
 966+ A4BE
 967+ A4BE CD 94 9C         call PreviousScan
 968+ A4C1 CD 94 9C         call PreviousScan
 969+ A4C4 CD 94 9C         call PreviousScan
 970+ A4C7 CD 94 9C         call PreviousScan
 971+ A4CA
 972+ A4CA              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A4CA
 974+ A4CA 7C               ld a,h
 975+ A4CB D6 40            sub $40
 976+ A4CD EB               ex de,hl
 977+ A4CE 38 04            jr c,Elimina_disparo_Amadeus
 978+ A4D0
 979+ A4D0               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A4D0
 981+ A4D0 73               ld (hl),e
 982+ A4D1 23               inc hl
 983+ A4D2 72               ld (hl),d
 984+ A4D3
 985+ A4D3 C9               ret
 986+ A4D4
 987+ A4D4              ; ----------------------
 988+ A4D4              ;
 989+ A4D4              ;   29/9/24
 990+ A4D4
 991+ A4D4              Elimina_disparo_Amadeus
 992+ A4D4
 993+ A4D4              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A4D4              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A4D4
 996+ A4D4              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A4D4              ;   	defw 0											; Puntero de impresión.
 998+ A4D4
 999+ A4D4 2B               dec hl
1000+ A4D5 2B               dec hl
1001+ A4D6
1002+ A4D6 AF               xor a
1003+ A4D7 77               ld (hl),a
1004+ A4D8 23               inc hl
1005+ A4D9 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A4DA
1007+ A4DA 23               inc hl
1008+ A4DB 77               ld (hl),a
1009+ A4DC 23               inc hl
1010+ A4DD 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A4DE
1012+ A4DE 3E 01            ld a,1
1013+ A4E0 32 53 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A4E3
1015+ A4E3 CD 66 A4         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A4E6
1017+ A4E6 AF               xor a
1018+ A4E7 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A4E8
1020+ A4E8 C9               ret
1021+ A4E9
1022+ A4E9              ; --------------------------------------------------------------------------------------
1023+ A4E9              ;
1024+ A4E9              ;   13/10/24
1025+ A4E9              ;
1026+ A4E9
1027+ A4E9              Pinta_disparos_Amadeus
1028+ A4E9
1029+ A4E9 06 02            ld b,2
1030+ A4EB ED 73 3A 8C      ld (Stack),sp
1031+ A4EF ED 7B 48 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A4F3 D1           3 pop de
1033+ A4F4 14               inc d
1034+ A4F5 15               dec d
1035+ A4F6 28 1C            jr z,1F
1036+ A4F8 E1               pop hl
1037+ A4F9
1038+ A4F9              Imprime_scanlines_en_pantalla
1039+ A4F9
1040+ A4F9              ; 1er scanline
1041+ A4F9
1042+ A4F9 1A               ld a,(de)
1043+ A4FA AE               xor (hl)
1044+ A4FB 77               ld (hl),a
1045+ A4FC
1046+ A4FC 1C               inc e
1047+ A4FD 2C               inc l
1048+ A4FE
1049+ A4FE 1A               ld a,(de)
1050+ A4FF AE               xor (hl)
1051+ A500 77               ld (hl),a
1052+ A501
1053+ A501 1D               dec e
1054+ A502 E1               pop hl
1055+ A503
1056+ A503              ; 2º scanline
1057+ A503
1058+ A503 1A               ld a,(de)
1059+ A504 AE               xor (hl)
1060+ A505 77               ld (hl),a
1061+ A506
1062+ A506 1C               inc e
1063+ A507 2C               inc l
1064+ A508
1065+ A508 1A               ld a,(de)
1066+ A509 AE               xor (hl)
1067+ A50A 77               ld (hl),a
1068+ A50B
1069+ A50B 1D               dec e
1070+ A50C
1071+ A50C 18 06            jr 1F
1072+ A50E
1073+ A50E ED 7B 46 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A512 18 DF            jr 3B
1075+ A514 10 F8        1 djnz 2B
1076+ A516 ED 7B 3A 8C      ld sp,(Stack)
1077+ A51A C9               ret
1078+ A51B
1079+ A51B              ; --------------------------------------------------------------------------------------
1080+ A51B              ;
1081+ A51B              ;   13/10/24
1082+ A51B              ;
1083+ A51B              ;   Modifica: HL,BC y DE.
1084+ A51B
1085+ A51B
1086+ A51B              Genera_datos_de_impresion_disparos_Amadeus
1087+ A51B
1088+ A51B ED 73 3A 8C      ld (Stack),sp
1089+ A51F 31 22 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A522 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A523
1092+ A523 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A524 15               dec d
1094+ A525
1095+ A525 28 0E            jr z,Salida
1096+ A527
1097+ A527              Genera_scanlines_de_disparo_Amadeus
1098+ A527
1099+ A527 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A528              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A528 ED 7B 46 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A52C
1103+ A52C C1               pop bc
1104+ A52D C1               pop bc
1105+ A52E C1               pop bc
1106+ A52F
1107+ A52F E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A530 CD 94 9C         call PreviousScan
1109+ A533 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A534 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A535
1112+ A535              Salida
1113+ A535
1114+ A535 ED 7B 3A 8C      ld sp,(Stack)
1115+ A539
1116+ A539 C9               ret
1117+ A53A
1118+ A53A              ; --------------------------------------------------------------------------------------
1119+ A53A              ;
1120+ A53A              ;   12/09/24
1121+ A53A              ;
1122+ A53A
1123+ A53A              Genera_disparo_Amadeus
1124+ A53A
1125+ A53A              ;*  Exclusiones.
1126+ A53A
1127+ A53A 3A 53 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A53D A7               and a
1129+ A53E C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A53F
1131+ A53F 3D               dec a
1132+ A540 32 53 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A543
1134+ A543              Define_puntero_objeto_disparo
1135+ A543
1136+ A543              ;   Inicializamos contador.
1137+ A543
1138+ A543 06 00            ld b,0
1139+ A545
1140+ A545 2A B9 89         ld hl,(p.imp.amadeus)
1141+ A548 2C               inc l
1142+ A549
1143+ A549 3E 80            ld a,$80
1144+ A54B BE               cp (hl)
1145+ A54C 28 0D            jr z,1F
1146+ A54E
1147+ A54E 04               inc b
1148+ A54F
1149+ A54F 3E 60            ld a,$60
1150+ A551 BE               cp (hl)
1151+ A552 28 07            jr z,1F
1152+ A554
1153+ A554
1154+ A554 04               inc b
1155+ A555
1156+ A555 3E 18            ld a,$18
1157+ A557 BE               cp (hl)
1158+ A558 28 01            jr z,1F
1159+ A55A
1160+ A55A 04               inc b
1161+ A55B
1162+ A55B              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A55B
1164+ A55B              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A55B
1166+ A55B CD 94 9C     1 call PreviousScan
1167+ A55E
1168+ A55E 78               ld a,b
1169+ A55F CB 3F            srl a
1170+ A561 28 03            jr z,4F
1171+ A563
1172+ A563              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A563 E5               push hl
1174+ A564 18 02            jr 5F
1175+ A566 2D           4 dec l
1176+ A567 E5               push hl
1177+ A568              ; ---
1178+ A568
1179+ A568              ;   Calcula el Puntero_objeto del disparo.
1180+ A568
1181+ A568 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A56B 04               inc b
1183+ A56C 05               dec b
1184+ A56D 28 04            jr z,2F
1185+ A56F
1186+ A56F              ;   Nos desplazamos por el índice de disparos.
1187+ A56F
1188+ A56F 2C           3 inc l
1189+ A570 2C               inc l
1190+ A571 10 FC            djnz 3B
1191+ A573
1192+ A573              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A573 CD DC 91     2 call Extrae_address
1194+ A576 E5               push hl
1195+ A577              ; ---
1196+ A577
1197+ A577              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A577              ; HL en el 1er .db de la caja.
1199+ A577
1200+ A577 21 22 89         ld hl,Disparo_Amad
1201+ A57A
1202+ A57A 06 02            ld b,2
1203+ A57C
1204+ A57C D1           6 pop de
1205+ A57D 73               ld (hl),e
1206+ A57E 23               inc hl
1207+ A57F 72               ld (hl),d
1208+ A580 23               inc hl
1209+ A581
1210+ A581 10 F9            djnz 6B
1211+ A583
1212+ A583 C9               ret
1213+ A584
1214+ A584              Genera_coordenadas_de_disparo_Amadeus
1215+ A584
1216+ A584              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A584              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A584              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A584
1220+ A584 CD DC 91         call Extrae_address
1221+ A587 CD 21 96         call Genera_coordenadas
1222+ A58A
1223+ A58A 3D               dec a
1224+ A58B
1225+ A58B 21 6C 8C         ld hl,Coordenadas_disparo_certero
1226+ A58E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A58F 23               inc hl
1228+ A590 3A EB 8B         ld a,(Coordenada_X)
1229+ A593 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A594
1231+ A594 AF               xor a
1232+ A595 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A596
1234+ A596 C9               ret
1235+ A597
1236+ A597              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A597              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A597              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A597
1240+ A597              ; ----------------------------------------------
1241+ A597              ;
1242+ A597              ;   27/08/24
1243+ A597              ;
1244+ A597              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A597              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A597
1247+ A597              Detecta_impacto_en_disparo_de_Amadeus
1248+ A597
1249+ A597              Extraccion_de_datos
1250+ A597
1251+ A597 13               inc de
1252+ A598 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A599
1254+ A599 5E               ld e,(hl)
1255+ A59A 23               inc hl
1256+ A59B 56               ld d,(hl)
1257+ A59C
1258+ A59C 23               inc hl
1259+ A59D
1260+ A59D 4E               ld c,(hl)
1261+ A59E 23               inc hl
1262+ A59F 46               ld b,(hl)
1263+ A5A0
1264+ A5A0 C5               push bc
1265+ A5A1 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A5A2
1267+ A5A2              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A5A2
1269+ A5A2 CD 94 9C         call PreviousScan
1270+ A5A5 CD 94 9C         call PreviousScan
1271+ A5A8
1272+ A5A8              Detecta_impacto_
1273+ A5A8
1274+ A5A8 1A               ld a,(de)
1275+ A5A9 A6               and (hl)
1276+ A5AA C0               ret nz
1277+ A5AB
1278+ A5AB 13               inc de
1279+ A5AC 23               inc hl
1280+ A5AD
1281+ A5AD 1A               ld a,(de)
1282+ A5AE A6               and (hl)
1283+ A5AF C9               ret
1284+ A5B0
1285+ A5B0              ; -------------------------------------------------------------------------------------------------------------
1286+ A5B0              ;
1287+ A5B0              ;   25/11//24
1288+ A5B0              ;
1289+ A5B0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A5B0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A5B0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A5B0              ;
1293+ A5B0              ;   MODIFICA: HL,DE,BC y A.
1294+ A5B0              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A5B0              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A5B0
1297+ A5B0              Colision_Entidad_Amadeus
1298+ A5B0
1299+ A5B0              ; Posible contacto de entidad con Amadeus. ?????
1300+ A5B0
1301+ A5B0              ; Exclusiones:
1302+ A5B0
1303+ A5B0 3A 8B 8C         ld a,(Shield)
1304+ A5B3 A7               and a
1305+ A5B4 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A5B5
1307+ A5B5 21 62 8C         ld hl,Ctrl_3
1308+ A5B8 CB 76            bit 6,(hl)
1309+ A5BA C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A5BB
1311+ A5BB 21 69 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A5BE CB 56            bit 2,(hl)
1313+ A5C0 C0               ret nz
1314+ A5C1
1315+ A5C1 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A5C4 FE 14        	cp $14
1317+ A5C6 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A5C7
1319+ A5C7 3A B8 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A5CA A7               and a
1321+ A5CB C0               ret nz
1322+ A5CC
1323+ A5CC              Genera_coordenadas_X
1324+ A5CC
1325+ A5CC              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A5CC              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A5CC
1328+ A5CC              ;   Limpiamos almacenes.
1329+ A5CC
1330+ A5CC              ;    call Limpia_Coordenadas_X
1331+ A5CC
1332+ A5CC              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A5CC
1334+ A5CC 21 6E 8C         ld hl,Coordenadas_X_Entidad
1335+ A5CF DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A5D2 CD F8 A5         call Guarda_coordenadas_X
1337+ A5D5
1338+ A5D5              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A5D5
1340+ A5D5 3A B5 89         ld a,(CX_Amadeus)
1341+ A5D8 CD F8 A5         call Guarda_coordenadas_X
1342+ A5DB
1343+ A5DB DD E5            push ix
1344+ A5DD CD 0C A6         call Compara_coordenadas_X
1345+ A5E0 DD E1            pop ix
1346+ A5E2
1347+ A5E2 C0               ret nz
1348+ A5E3
1349+ A5E3 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A5E5 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A5E8
1352+ A5E8 DD 7D            ld a,ixl
1353+ A5EA C6 04            add 4
1354+ A5EC DD 6F            ld ixl,a
1355+ A5EE
1356+ A5EE DD 22 6A 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A5F2
1358+ A5F2 21 69 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A5F5 CB D6            set 2,(hl)
1360+ A5F7
1361+ A5F7 C9               ret
1362+ A5F8
1363+ A5F8               ; ----- ----- ----- ----- -----
1364+ A5F8
1365+ A5F8 77           Guarda_coordenadas_X ld (hl),a
1366+ A5F9 3C               inc a
1367+ A5FA 2C               inc l
1368+ A5FB 77               ld (hl),a
1369+ A5FC 3C               inc a
1370+ A5FD 2C               inc l
1371+ A5FE 77               ld (hl),a
1372+ A5FF 2C               inc l
1373+ A600 C9               ret
1374+ A601
1375+ A601 AF           Limpia_Coordenadas_X xor a
1376+ A602 06 06            ld b,6
1377+ A604 21 71 8C         ld hl,Coordenadas_X_Amadeus
1378+ A607 77           1 ld (hl),a
1379+ A608 23               inc hl
1380+ A609 10 FC            djnz 1B
1381+ A60B C9               ret
1382+ A60C
1383+ A60C              ; ----- ----- ----- ----- -----
1384+ A60C
1385+ A60C              Compara_coordenadas_X
1386+ A60C
1387+ A60C DD 21 6E 8C      ld ix,Coordenadas_X_Entidad
1388+ A610 DD 7E 00         ld a,(ix+0)
1389+ A613 CD 21 A6         call Comparando
1390+ A616 C8               ret z
1391+ A617
1392+ A617 3C               inc a
1393+ A618 CD 30 A6         call Comparando_1
1394+ A61B C8               ret z
1395+ A61C
1396+ A61C 3C               inc a
1397+ A61D CD 30 A6         call Comparando_1
1398+ A620 C9               ret
1399+ A621
1400+ A621              ; ----- ----- ----- ----- -----
1401+ A621              ;
1402+ A621              ;   4/12/23
1403+ A621              ;
1404+ A621              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A621
1406+ A621              Comparando
1407+ A621
1408+ A621 DD 2C            inc ixl
1409+ A623 DD 2C            inc ixl
1410+ A625 DD 2C            inc ixl
1411+ A627
1412+ A627 DD 46 00         ld b,(ix+0)
1413+ A62A DD 4E 01         ld c,(ix+1)
1414+ A62D DD 56 02         ld d,(ix+2)
1415+ A630
1416+ A630 B8           Comparando_1 cp b
1417+ A631 C8               ret z
1418+ A632 B9               cp c
1419+ A633 C8               ret z
1420+ A634 BA               cp d
1421+ A635 C9               ret
1422+ A636
1423+ A636              ; -----------------------------------------------------------------------
1424+ A636              ;
1425+ A636              ;   04/7/24
1426+ A636              ;
1427+ A636
1428+ A636              Detecta_colision_nave_entidad
1429+ A636
1430+ A636              ; Exclusiones:
1431+ A636
1432+ A636              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A636
1434+ A636 21 69 8C     	ld hl,Impacto2
1435+ A639 CB 56        	bit 2,(hl)
1436+ A63B C8           	ret z
1437+ A63C
1438+ A63C              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A63C
1440+ A63C 2A BB 89         ld hl,(Pamm_Amadeus)
1441+ A63F CD DC 91         call Extrae_address
1442+ A642 54               ld d,h
1443+ A643 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A644
1445+ A644 2A B9 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A647 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A649 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A64C
1449+ A64C C5           1 push bc
1450+ A64D 06 03            ld b,3
1451+ A64F E5               push hl
1452+ A650
1453+ A650              ; .db
1454+ A650
1455+ A650 1A           3 ld a,(de)
1456+ A651 A7               and a
1457+ A652 20 03            jr nz,4F
1458+ A654
1459+ A654 2C               inc l
1460+ A655 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A657
1462+ A657 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A659 28 04            jr z,2F
1464+ A65B
1465+ A65B              ; Impacto.
1466+ A65B FD 2D            dec iyl
1467+ A65D 28 22            jr z,5F
1468+ A65F
1469+ A65F 1C           2 inc e
1470+ A660 10 EE            djnz 3B
1471+ A662
1472+ A662 E1               pop hl
1473+ A663
1474+ A663              ; Hay salto de línea en el puntero de impresión ???
1475+ A663
1476+ A663 7C               ld a,h
1477+ A664 D6 57            sub $57
1478+ A666 20 0A            jr nz,6F
1479+ A668
1480+ A668              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A668
1482+ A668 2A B9 89         ld hl,(p.imp.amadeus)
1483+ A66B 3E 20            ld a,$20
1484+ A66D A7               and a
1485+ A66E 85               add l
1486+ A66F 6F               ld l,a
1487+ A670 18 01            jr 7F
1488+ A672
1489+ A672 24           6 inc h
1490+ A673
1491+ A673 C1           7 pop bc
1492+ A674 10 D6            djnz 1B
1493+ A676
1494+ A676              ;   Fin de la comparativa.
1495+ A676
1496+ A676              ;   NO HAY COLISIÓN !!!!!.
1497+ A676              ;
1498+ A676              ;   .db (Impacto) de Amadeus a "0".
1499+ A676              ;   RES el bit2 de (Impacto2).
1500+ A676              ;
1501+ A676              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A676              ;   Lo colocamos a "0".
1503+ A676
1504+ A676 21 69 8C         ld hl,Impacto2
1505+ A679 CB 96            res 2,(hl)
1506+ A67B 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A67E 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A680 C9               ret
1509+ A681
1510+ A681              ;   COLISIÓN !!!!!.
1511+ A681              ;
1512+ A681              ;   .db (Impacto) de Amadeus a "1".
1513+ A681              ;   SET el bit3 de (Impacto2).
1514+ A681              ;
1515+ A681              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A681
1517+ A681 E1           5 pop hl
1518+ A682 C1               pop bc
1519+ A683
1520+ A683 21 B8 89         ld hl,Impacto_Amadeus
1521+ A686 36 01            ld (hl),1
1522+ A688 21 69 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A68B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A68D
1525+ A68D 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A690 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A693
1528+ A693 23               inc hl
1529+ A694 23               inc hl
1530+ A695 23               inc hl
1531+ A696
1532+ A696 73               ld (hl),e
1533+ A697 23               inc hl
1534+ A698 72               ld (hl),d
1535+ A699
1536+ A699              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A699
1538+ A699 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A69C 21 BB 89         ld hl,Pamm_Amadeus
1540+ A69F
1541+ A69F 73               ld (hl),e
1542+ A6A0 23               inc hl
1543+ A6A1 72               ld (hl),d
1544+ A6A2
1545+ A6A2 C9               ret
1546+ A6A3
1547+ A6A3
1548+ A6A3
# file closed: Disparo.asm
2458  A6A3
2459  A6A3              	SAVESNA "Pruebas.sna", START
2460  A6A3
2461  A6A3
2462  A6A3
2463  A6A3
# file closed: Banco_de_pruebas.asm
