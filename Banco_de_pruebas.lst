# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	IM_2 *************************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	20/6/24
   8  0000
   9  0000              	org $a9ff
  10  A9FF
  11  A9FF 01 AA        	defw $aa01
  12  AA01
  13  AA01              ;	Incrementa FRAMES. (ROM).
  14  AA01
  15  AA01 F5           	push af
  16  AA02 E5           	push hl
  17  AA03
  18  AA03              ; -------------------
  19  AA03 21 10 8A     	ld hl,Ctrl_3	;	STOP si no hemos terminado de construir el FRAME.
  20  AA06 CB 46        	bit 0,(hl)
  21  AA08 28 FE        	jr z,$
  22  AA0A              ; -------------------
  23  AA0A
  24  AA0A 2A 78 5C     	ld hl,(FRAMES)
  25  AA0D 23           	inc hl
  26  AA0E 22 78 5C     	ld (FRAMES),hl
  27  AA11
  28  AA11 7C           	ld a,h
  29  AA12 B5           	or l
  30  AA13 20 04        	jr nz,1F
  31  AA15
  32  AA15 21 7A 5C     	ld hl,FRAMES_3
  33  AA18 34           	inc (hl)
  34  AA19
  35  AA19 D5           1 push de
  36  AA1A C5           	push bc
  37  AA1B
  38  AA1B CD D2 8D     	call Actualiza_pantalla
  39  AA1E
  40  AA1E C1           	pop bc
  41  AA1F D1           	pop de
  42  AA20 E1           	pop hl
  43  AA21 F1           	pop af
  44  AA22
  45  AA22 FB           	ei
  46  AA23
  47  AA23 C9           	ret
  48  AA24
  49  AA24              ; --------------------------------------------------------------------------------
  50  AA24
  51  AA24              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA24              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA24              ;
   3+ AA24              ;	17/02/23
   4+ AA24              ;
   5+ AA24              ;	Sprites e índices.
   6+ AA24
   7+ AA24              	org $8168
   8+ 8168
   9+ 8168              ; Disparo.
  10+ 8168
  11+ 8168 70 81        Indice_disparo defw Disparo_0
  12+ 816A 76 81        	defw Disparo_f9
  13+ 816C 7C 81        	defw Disparo_fb
  14+ 816E 82 81        	defw Disparo_fd
  15+ 8170
  16+ 8170              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8170 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8174 01 80
  18+ 8176              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8176 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 817A 00 60
  20+ 817C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 817C 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8180 18 00
  22+ 8182              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8182 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8186 06 00
  24+ 8188
  25+ 8188              ; ----------------------------------------------------------------------------------------
  26+ 8188
  27+ 8188              ; Badsat_izq. 2x2.
  28+ 8188
  29+ 8188 98 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 818A 00 83        	defw Badsat_izq_fe
  31+ 818C C0 82        	defw Badsat_izq_fd
  32+ 818E 90 82        	defw Badsat_izq_fc
  33+ 8190 60 82        	defw Badsat_izq_fb
  34+ 8192 30 82        	defw Badsat_izq_fa
  35+ 8194 00 82        	defw Badsat_izq_f9
  36+ 8196 C8 81        	defw Badsat_izq_f8
  37+ 8198
  38+ 8198 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 819B 02 14 00     	DEFB 	$02,$14,$00
  40+ 819E 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 81A1 02 55 00     	DEFB 	$02,$55,$00
  42+ 81A4 02 AA 00     	DEFB	$02,$AA,$00
  43+ 81A7 02 54 00     	DEFB 	$02,$54,$00
  44+ 81AA 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 81AD 03 60 00     	DEFB 	$03,$60,$00
  46+ 81B0 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 81B3 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 81B6 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 81B9 54 40 00     	DEFB 	$54,$40,$00
  50+ 81BC AA 60 00     	DEFB	$AA,$60,$00
  51+ 81BF 54 00 00     	DEFB 	$54,$00,$00
  52+ 81C2 28 00 00     	DEFB 	$28,$00,$00
  53+ 81C5 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 81C8
  55+ 81C8 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 81CC 0A 00 01 15
  56+ 81D0 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 81D4 01 55 00 01
  57+ 81D8 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 81DC 00 01 B0 00
  58+ 81E0 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 81E4 FC 00 15 F4
  59+ 81E8 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 81EC 55 30 00 2A
  60+ 81F0 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81F4 00 08 00 00
  61+ 81F8
  62+ 81F8              	org $8200
  63+ 8200
  64+ 8200 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8204 85 00 00 8A
  65+ 8208 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 820C 00 AA 80 00
  66+ 8210 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8214 00 00 D8 00
  67+ 8218 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 821C FE 00 0A FA
  68+ 8220 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8224 2A 98 00 15
  69+ 8228 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 822C 00 04 00 00
  70+ 8230
  71+ 8230 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8234 42 80 00 45
  72+ 8238 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 823C 00 55 40 00
  73+ 8240 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8244 00 00 6C 00
  74+ 8248 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 824C FF 00 05 7D
  75+ 8250 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8254 15 4C 00 0A
  76+ 8258 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 825C 00 02 00 00
  77+ 8260
  78+ 8260 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8264 21 40 00 22
  79+ 8268 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 826C 00 2A A0 00
  80+ 8270 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8274 80 00 36 00
  81+ 8278 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 827C 7F 80 02 BE
  82+ 8280 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8284 0A A6 00 05
  83+ 8288 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 828C 00 01 00 00
  84+ 8290
  85+ 8290 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8294 10 A0 00 11
  86+ 8298 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 829C 00 15 50 00
  87+ 82A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 82A4 40 00 1B 00
  88+ 82A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 82AC BF C0 01 5F
  89+ 82B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 82B4 05 53 00 02
  90+ 82B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 82BC 00 00 80 00
  91+ 82C0
  92+ 82C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 82C4 08 50 00 08
  93+ 82C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 82CC 00 0A A8 00
  94+ 82D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 82D4 A0 00 0D 80
  95+ 82D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 82DC 5F F8 00 AF
  96+ 82E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 82E4 02 A9 00 01
  97+ 82E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 82EC 00 00 40 00
  98+ 82F0
  99+ 82F0              	org $8300
 100+ 8300
 101+ 8300 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8304 04 28 00 04
 102+ 8308 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 830C 00 05 54 00
 103+ 8310 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8314 D0 00 06 C0
 104+ 8318 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 831C 2F FC 00 57
 105+ 8320 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8324 01 54 80 00
 106+ 8328 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 832C 00 00 20 00
 107+ 8330
 108+ 8330
 109+ 8330 40 83        Indice_Badsat_der defw Badsat_derecha
 110+ 8332 70 83        	defw Badsat_der_f8
 111+ 8334 A0 83        	defw Badsat_der_f9
 112+ 8336 D0 83        	defw Badsat_der_fa
 113+ 8338 00 84        	defw Badsat_der_fb
 114+ 833A 00 84        	defw Badsat_der_fc
 115+ 833C 30 84        	defw Badsat_der_fd
 116+ 833E 60 84        	defw Badsat_der_fe
 117+ 8340
 118+ 8340 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8343 28 40 00     	DEFB    $28,$40,$00
 120+ 8346 54 40 00     	DEFB	$54,$40,$00
 121+ 8349 AA 40 00     	DEFB	$AA,$40,$00
 122+ 834C 55 40 00     	DEFB	$55,$40,$00
 123+ 834F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8352 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8355 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8358 07 50 00     	DEFB	$07,$50,$00
 127+ 835B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 835E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8361 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8364 06 55 00     	DEFB	$06,$55,$00
 131+ 8367 00 2A 00     	DEFB	$00,$2A,$00
 132+ 836A 00 14 00     	DEFB	$00,$14,$00
 133+ 836D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8370
 135+ 8370 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8374 20 00 2A 20
 136+ 8378 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 837C 2A A0 00 15
 137+ 8380 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8384 00 03 60 00
 138+ 8388 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 838C F4 00 0B EA
 139+ 8390 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8394 03 2A 80 00
 140+ 8398 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 839C 00 00 04 00
 141+ 83A0
 142+ 83A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 83A4 10 00 15 10
 143+ 83A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 83AC 15 50 00 0A
 144+ 83B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 83B4 80 01 B0 00
 145+ 83B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 83BC FA 00 05 F5
 146+ 83C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 83C4 01 95 40 00
 147+ 83C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 83CC 00 00 02 00
 148+ 83D0
 149+ 83D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 83D4 08 00 0A 88
 150+ 83D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 83DC 0A A8 00 05
 151+ 83E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 83E4 C0 00 D8 00
 152+ 83E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 83EC FD 00 02 FA
 153+ 83F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 83F4 00 CA A0 00
 154+ 83F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 83FC 80 00 01 00
 155+ 8400
 156+ 8400 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8404 84 00 05 44
 157+ 8408 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 840C 05 54 00 02
 158+ 8410 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8414 E0 00 6C 00
 159+ 8418 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 841C FE 80 01 7D
 160+ 8420 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8424 00 65 50 00
 161+ 8428 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 842C 40 00 00 80
 162+ 8430
 163+ 8430              ;! 16 bytes libres aquí !!!!!
 164+ 8430
 165+ 8430              	org $8400
 166+ 8400
 167+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 167+ 8404 42 00 02 A2
 168+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 168+ 840C 02 AA 00 01
 169+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 169+ 8414 F0 00 36 00
 170+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 170+ 841C FF 40 00 BE
 171+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 171+ 8424 00 32 A8 00
 172+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 172+ 842C A0 00 00 40
 173+ 8430
 174+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 174+ 8434 A1 00 01 51
 175+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 175+ 843C 01 55 00 00
 176+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 176+ 8444 F8 00 1B 00
 177+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 177+ 844C FF A0 00 1F
 178+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 178+ 8454 00 09 54 00
 179+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 179+ 845C 50 00 00 20
 180+ 8460
 181+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 181+ 8464 50 80 00 A8
 182+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 182+ 846C 00 AA 80 00
 183+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 183+ 8474 FC 00 0D 80
 184+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 184+ 847C FF D0 00 0F
 185+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 185+ 8484 00 04 AA 00
 186+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 186+ 848C 28 00 00 10
 187+ 8490
 188+ 8490              ; ----------------------------------------------------------------------------------------
 189+ 8490
 190+ 8490              ; Amadeus. 2x2.
 191+ 8490
 192+ 8490              ;	org $8119
 193+ 8490
 194+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 195+ 8492 00 00        	defw 0
 196+ 8494 00 85        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 8496 00 00        	defw 0
 198+ 8498 30 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 849A 00 00        	defw 0
 200+ 849C 60 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 849E 00 00        	defw 0	 								; (Fín de índice).
 202+ 84A0
 203+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 204+ 84A2 00 00        	defw 0
 205+ 84A4 60 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 84A6 00 00        	defw 0
 207+ 84A8 30 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 84AA 00 00        	defw 0
 209+ 84AC 00 85        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 211+ 84B0
 212+ 84B0 01 80 00     Amadeus DEFB $01,$80,0
 213+ 84B3 23 C4 00     	DEFB	$23,$C4,0
 214+ 84B6 26 64 00     	DEFB	$26,$64,0
 215+ 84B9 24 24 00     	DEFB	$24,$24,0
 216+ 84BC 2C 34 00     	DEFB	$2C,$34,0
 217+ 84BF 6D B6 00     	DEFB	$6D,$B6,0
 218+ 84C2 6F F6 00     	DEFB	$6F,$F6,0
 219+ 84C5 67 E6 00     	DEFB	$67,$E6,0
 220+ 84C8 E7 E7 00     	DEFB	$E7,$E7,0
 221+ 84CB F3 CF 00     	DEFB	$F3,$CF,0
 222+ 84CE F7 EF 00     	DEFB	$F7,$EF,0
 223+ 84D1 FF FF 00     	DEFB	$FF,$FF,0
 224+ 84D4 FB DF 00     	DEFB	$FB,$DF,0
 225+ 84D7 FB DF 00     	DEFB	$FB,$DF,0
 226+ 84DA 8B D1 00     	DEFB	$8B,$D1,0
 227+ 84DD 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 228+ 84E0
 229+ 84E0              	org $8500
 230+ 8500
 231+ 8500 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8504 F1 00 09 99
 232+ 8508 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 850C 0B 0D 00 1B
 233+ 8510 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8514 80 19 F9 80
 234+ 8518 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 851C F3 C0 3D FB
 235+ 8520 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8524 3E F7 C0 3E
 236+ 8528 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 852C 40 1C 63 80
 237+ 8530
 238+ 8530 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8534 3C 40 02 66
 239+ 8538 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 853C 02 C3 40 06
 240+ 8540 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8544 60 06 7E 60
 241+ 8548 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 854C 3C F0 0F 7E
 242+ 8550 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8554 0F BD F0 0F
 243+ 8558 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 855C 10 07 18 E0
 244+ 8560
 245+ 8560 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8564 8F 10 00 99
 246+ 8568 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 856C 00 B0 D0 01
 247+ 8570 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 8574 D8 01 9F 98
 248+ 8578 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 857C CF 3C 03 DF
 249+ 8580 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 8584 03 EF 7C 03
 250+ 8588 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 858C 44 01 C6 38
 251+ 8590
 252+ 8590              ; ----------------------------------------------------------------------------------------
 253+ 8590
 254+ 8590              ;	org $8690
 255+ 8590
 256+ 8590 96 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 257+ 8592 C6 85        	defw Explosion_2x3_2
 258+ 8594 00 86        	defw Explosion_2x3_3
 259+ 8596
 260+ 8596 00 10 00     Explosion_2x3_1 DEFB $00,$10,$00
 261+ 8599 08 10 00     	DEFB 	$08,$10,$00
 262+ 859C 04 38 40     	DEFB	$04,$38,$40
 263+ 859F 03 7D 80     	DEFB	$03,$7D,$80
 264+ 85A2 02 E6 80     	DEFB	$02,$E6,$80
 265+ 85A5 01 B7 00     	DEFB	$01,$B7,$00
 266+ 85A8 01 7F 00     	DEFB	$01,$7F,$00
 267+ 85AB 03 DD 80     	DEFB	$03,$DD,$80
 268+ 85AE 0F FF E0     	DEFB	$0F,$FF,$E0
 269+ 85B1 03 3B 80     	DEFB	$03,$3B,$80
 270+ 85B4 01 9D 00     	DEFB	$01,$9D,$00
 271+ 85B7 01 F6 00     	DEFB	$01,$F6,$00
 272+ 85BA 02 FD 80     	DEFB	$02,$FD,$80
 273+ 85BD 03 00 40     	DEFB	$03,$00,$40
 274+ 85C0 04 00 00     	DEFB	$04,$00,$00
 275+ 85C3 08 00 00     	DEFB	$08,$00,$00
 276+ 85C6
 277+ 85C6 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 85CA 38 10 03 BC
 278+ 85CE 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 85D2 04 06 C0 00
 279+ 85D6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 85DA 00 03 DD 80
 280+ 85DE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 85E2 3A 70 01 9C
 281+ 85E6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 85EA 04 F8 80 06
 282+ 85EE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 85F2 00 00 00 00
 283+ 85F6
 284+ 85F6              	org $8600
 285+ 8600
 286+ 8600 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 286+ 8604 00 20 08 00
 287+ 8608 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 287+ 860C 00 06 00 00
 288+ 8610 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 288+ 8614 00 00 14 30
 289+ 8618 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 289+ 861C 38 00 01 08
 290+ 8620 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 290+ 8624 00 80 00 04
 291+ 8628 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 291+ 862C 10 08 00 20
 292+ 8630
 293+ 8630              ; ------------------------------------------
 294+ 8630
 295+ 8630 36 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 296+ 8632 56 86        	defw Explosion_2x2_2
 297+ 8634 76 86        	defw Explosion_2x2_3
 298+ 8636
 299+ 8636 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 299+ 863A 43 84 37 D8
 300+ 863E 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 300+ 8642 17 F0 3D D8
 301+ 8646 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 301+ 864A 19 D0 1F 60
 302+ 864E 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 302+ 8652 40 00 80 00
 303+ 8656
 304+ 8656
 305+ 8656 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 305+ 865A 3B C2 60 0C
 306+ 865E 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 306+ 8662 07 F0 3D D8
 307+ 8666 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 307+ 866A 19 C6 1F 64
 308+ 866E 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 308+ 8672 80 00 00 00
 309+ 8676
 310+ 8676 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 310+ 867A 88 04 10 0C
 311+ 867E 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 311+ 8682 81 E0 01 43
 312+ 8686 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 312+ 868A 10 80 18 00
 313+ 868E 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 313+ 8692 60 01 80 02
 314+ 8696
 315+ 8696
 316+ 8696
 317+ 8696
 318+ 8696
# file closed: Sprites_e_indices.asm
  52  8696              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8696              ; ---------------------------------------------------------------------
   2+ 8696              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8696              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8696              ; ---------------------------------------------------------------------
   5+ 8696
   6+ 8696              ; 30/05/24
   7+ 8696              ;
   8+ 8696              ;	En esta tabla iremos almacenando:
   9+ 8696              ;
  10+ 8696              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 8696              ;
  12+ 8696              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 8696
  14+ 8696 00 00 00...  Numeros_aleatorios ds 7
  15+ 869D
  16+ 869D 00 00 00...  Tabla_de_pintado ds 27
  17+ 86B8
  18+ 86B8              ;	db 0, defw 0
  19+ 86B8              ;	db 0, defw 0
  20+ 86B8              ;	db 0, defw 0
  21+ 86B8              ;	db 0, defw 0
  22+ 86B8              ;	db 0, defw 0
  23+ 86B8              ;	db 0, defw 0
  24+ 86B8              ;	db 0, defw 0
  25+ 86B8
  26+ 86B8 EA 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  27+ 86BA              ;	defw ...
  28+ 86BA              ; 	defw ...
  29+ 86BA 00 00        	defw 0
  30+ 86BC
  31+ 86BC              ; Control. %00000001 00000001
  32+ 86BC              ;
  33+ 86BC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  34+ 86BC              ;                    _ hacen las entidades hacia abajo.
  35+ 86BC              ;
  36+ 86BC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  37+ 86BC
  38+ 86BC C2 86        Indice_de_disparos_Amadeus defw Disparo_1A
  39+ 86BE CA 86        	defw Disparo_2A
  40+ 86C0 D2 86        	defw Disparo_3A
  41+ 86C2
  42+ 86C2 00 00        Disparo_1A defw 0									; Control.
  43+ 86C4 00 00        	defw 0											; Puntero objeto.
  44+ 86C6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  45+ 86C8 00 00        	defw 0											; Rutina de impresión.
  46+ 86CA
  47+ 86CA 00 00        Disparo_2A defw 0									; Control.
  48+ 86CC 00 00        	defw 0											; Puntero objeto.
  49+ 86CE 00 00        	defw 0											; Puntero de impresión.
  50+ 86D0 00 00        	defw 0											; Rutina de impresión.
  51+ 86D2
  52+ 86D2 00 00        Disparo_3A defw 0
  53+ 86D4
  54+ 86D4 EA 86        Indice_de_disparos_entidades defw Disparo_1
  55+ 86D6 F2 86        	defw Disparo_2
  56+ 86D8 FA 86        	defw Disparo_3
  57+ 86DA 02 87        	defw Disparo_4
  58+ 86DC 0A 87        	defw Disparo_5
  59+ 86DE 12 87        	defw Disparo_6
  60+ 86E0 1A 87        	defw Disparo_7
  61+ 86E2 22 87        	defw Disparo_8
  62+ 86E4 2A 87        	defw Disparo_9
  63+ 86E6 32 87        	defw Disparo_10
  64+ 86E8 3A 87        	defw Disparo_11
  65+ 86EA
  66+ 86EA 00 00        Disparo_1 defw 0									; Control.
  67+ 86EC 00 00        	defw 0											; Puntero objeto.
  68+ 86EE 00 00        	defw 0											; Puntero de impresión.
  69+ 86F0 00 00        	defw 0											; Rutina de impresión.
  70+ 86F2
  71+ 86F2 00 00        Disparo_2 defw 0									; Control.
  72+ 86F4 00 00        	defw 0											; Puntero objeto.
  73+ 86F6 00 00        	defw 0											; Puntero de impresión.
  74+ 86F8 00 00        	defw 0											; Rutina de impresión.
  75+ 86FA
  76+ 86FA 00 00        Disparo_3 defw 0									; Control.
  77+ 86FC 00 00        	defw 0											; Puntero objeto.
  78+ 86FE 00 00        	defw 0											; Puntero de impresión.
  79+ 8700 00 00        	defw 0											; Rutina de impresión.
  80+ 8702
  81+ 8702 00 00        Disparo_4 defw 0									; Control.
  82+ 8704 00 00        	defw 0											; Puntero objeto.
  83+ 8706 00 00        	defw 0											; Puntero de impresión.
  84+ 8708 00 00        	defw 0											; Rutina de impresión.
  85+ 870A
  86+ 870A 00 00        Disparo_5 defw 0									; Control.
  87+ 870C 00 00        	defw 0											; Puntero objeto.
  88+ 870E 00 00        	defw 0											; Puntero de impresión.
  89+ 8710 00 00        	defw 0											; Rutina de impresión.
  90+ 8712
  91+ 8712 00 00        Disparo_6 defw 0									; Control.
  92+ 8714 00 00        	defw 0											; Puntero objeto.
  93+ 8716 00 00        	defw 0											; Puntero de impresión.
  94+ 8718 00 00        	defw 0											; Rutina de impresión.
  95+ 871A
  96+ 871A 00 00        Disparo_7 defw 0									; Control.
  97+ 871C 00 00        	defw 0											; Puntero objeto.
  98+ 871E 00 00        	defw 0											; Puntero de impresión.
  99+ 8720 00 00        	defw 0											; Rutina de impresión.
 100+ 8722
 101+ 8722 00 00        Disparo_8 defw 0									; Control.
 102+ 8724 00 00        	defw 0											; Puntero objeto.
 103+ 8726 00 00        	defw 0											; Puntero de impresión.
 104+ 8728 00 00        	defw 0											; Rutina de impresión.
 105+ 872A
 106+ 872A 00 00        Disparo_9 defw 0									; Control.
 107+ 872C 00 00        	defw 0											; Puntero objeto.
 108+ 872E 00 00        	defw 0											; Puntero de impresión.
 109+ 8730 00 00        	defw 0											; Rutina de impresión.
 110+ 8732
 111+ 8732 00 00        Disparo_10 defw 0									; Control.
 112+ 8734 00 00        	defw 0											; Puntero objeto.
 113+ 8736 00 00        	defw 0											; Puntero de impresión.
 114+ 8738 00 00        	defw 0											; Rutina de impresión.
 115+ 873A
 116+ 873A 00 00        Disparo_11 defw 0
 117+ 873C
 118+ 873C              ; -------------------------------------------------------------------------------------
 119+ 873C              ;
 120+ 873C              ;	Índice de cajas de entidades.
 121+ 873C              ;
 122+ 873C              ;	18/1/24
 123+ 873C              ;
 124+ 873C
 125+ 873C              Indice_de_cajas_de_entidades
 126+ 873C
 127+ 873C 5D 87        	defw Caja_1
 128+ 873E 6B 87        	defw Caja_2
 129+ 8740 79 87        	defw Caja_3
 130+ 8742 87 87        	defw Caja_4
 131+ 8744 95 87        	defw Caja_5
 132+ 8746 A3 87        	defw Caja_6
 133+ 8748 B1 87        	defw Caja_7
 134+ 874A
 135+ 874A 00 00        	defw 0
 136+ 874C 00 00        	defw 0
 137+ 874E
 138+ 874E              ; -------------------------
 139+ 874E
 140+ 874E              ; Relleno para que no se corrompa el movimiento. ?????
 141+ 874E
 142+ 874E 00           	db 0
 143+ 874F
 144+ 874F              ; ---------- ---------- ---------- ---------- ----------
 145+ 874F              ;
 146+ 874F              ;	28/05/24
 147+ 874F              ;
 148+ 874F              ; 	Cada caja tiene 14 bytes !!!
 149+ 874F              ;
 150+ 874F              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 151+ 874F
 152+ 874F 00           Amadeus_BOX db 0										; (Tipo).
 153+ 8750 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 154+ 8752 00           	db 0												; (Contador_de_vueltas).
 155+ 8753 00           Impacto_Amadeus	db 0									; (Impacto).
 156+ 8754 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 157+ 8756 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 158+ 8758 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 159+ 875A 00           	db 0												; (Ctrl_0).
 160+ 875B 00           	db 0												; (Ctrl_2).
 161+ 875C 00           	db 0												; (Velocidad).
 162+ 875D
 163+ 875D              ; ---------- ---------- ---------- ---------- ----------
 164+ 875D              ;
 165+ 875D              ;	22/01/24
 166+ 875D              ;
 167+ 875D              ; 	Cada caja tiene 14 bytes !!!
 168+ 875D
 169+ 875D 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 8760 00           	db 0												; (Contador_de_vueltas).
 171+ 8761 00           	db 0												; (Impacto).
 172+ 8762 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 8764 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 8766 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 8768 00           	db 0												; (Ctrl_0).
 176+ 8769 00           	db 0												; (Ctrl_2).
 177+ 876A 00           	db 0												; (Velocidad).
 178+ 876B
 179+ 876B              ; ---------- ---------- ---------- ---------- ----------
 180+ 876B
 181+ 876B 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 182+ 876E 00           	db 0 												; (Contador_de_vueltas).
 183+ 876F 00           	db 0												; (Impacto).
 184+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 185+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 186+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 187+ 8776 00           	db 0												; (Ctrl_0).
 188+ 8777 00           	db 0												; (Ctrl_2).
 189+ 8778 00           	db 0												; (Velocidad).
 190+ 8779
 191+ 8779              ; ---------- ---------- ---------- ---------- ----------
 192+ 8779
 193+ 8779 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 877C 00           	db 0 												; (Contador_de_vueltas).
 195+ 877D 00           	db 0												; (Impacto).
 196+ 877E 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 8780 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 8782 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 8784 00           	db 0												; (Ctrl_0).
 200+ 8785 00           	db 0												; (Ctrl_2).
 201+ 8786 00           	db 0												; (Velocidad).
 202+ 8787
 203+ 8787              ; ---------- ---------- ---------- ---------- ----------
 204+ 8787
 205+ 8787 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 206+ 878A 00           	db 0 												; (Contador_de_vueltas).
 207+ 878B 00           	db 0												; (Impacto).
 208+ 878C 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 878E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 8790 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 8792 00           	db 0												; (Ctrl_0).
 212+ 8793 00           	db 0												; (Ctrl_2).
 213+ 8794 00           	db 0												; (Velocidad).
 214+ 8795
 215+ 8795              ; ---------- ---------- ---------- ---------- ----------
 216+ 8795
 217+ 8795 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 218+ 8798 00           	db 0 												; (Contador_de_vueltas).
 219+ 8799 00           	db 0												; (Impacto).
 220+ 879A 00 00        	defw 0												; (Puntero_de_impresion).
 221+ 879C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 222+ 879E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 223+ 87A0 00           	db 0												; (Ctrl_0).
 224+ 87A1 00           	db 0												; (Ctrl_2).
 225+ 87A2 00           	db 0												; (Velocidad).
 226+ 87A3
 227+ 87A3              ; ---------- ---------- ---------- ---------- ----------
 228+ 87A3
 229+ 87A3 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 230+ 87A6 00           	db 0 												; (Contador_de_vueltas).
 231+ 87A7 00           	db 0												; (Impacto).
 232+ 87A8 00 00        	defw 0												; (Puntero_de_impresion).
 233+ 87AA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 234+ 87AC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 235+ 87AE 00           	db 0												; (Ctrl_0).
 236+ 87AF 00           	db 0												; (Ctrl_2).
 237+ 87B0 00           	db 0												; (Velocidad).
 238+ 87B1
 239+ 87B1              ; ---------- ---------- ---------- ---------- ----------
 240+ 87B1
 241+ 87B1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 242+ 87B4 00           	db 0 												; (Contador_de_vueltas).
 243+ 87B5 00           	db 0												; (Impacto).
 244+ 87B6 00 00        	defw 0												; (Puntero_de_impresion).
 245+ 87B8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 246+ 87BA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 247+ 87BC 00           	db 0												; (Ctrl_0).
 248+ 87BD 00           	db 0												; (Ctrl_2).
 249+ 87BE 00           	db 0												; (Velocidad).
 250+ 87BF
 251+ 87BF              ; -------------------------------------------------------------------------------------
 252+ 87BF              ;
 253+ 87BF              ;	11/1/24
 254+ 87BF              ;
 255+ 87BF              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 256+ 87BF              ;
 257+ 87BF              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 258+ 87BF              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 259+ 87BF              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 260+ 87BF              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 261+ 87BF
 262+ 87BF              Indice_de_definiciones_de_entidades
 263+ 87BF
 264+ 87BF C3 87        	defw Entidad_1
 265+ 87C1 D0 87        	defw Entidad_2
 266+ 87C3
 267+ 87C3              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 268+ 87C3
 269+ 87C3              ;	BADSAT, (Satélite malvado).
 270+ 87C3
 271+ 87C3 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 272+ 87C6 01           	db 1												; (Contador_de_vueltas).
 273+ 87C7 30 83        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 274+ 87C9 88 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 275+ 87CB 03 40        	defw $4003	                                     	; (Posicion_inicio).
 276+ 87CD 01           	db 1												; (Cuad_objeto).
 277+ 87CE 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 278+ 87D0
 279+ 87D0 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 280+ 87D3 01           	db 1												; (Contador_de_vueltas).
 281+ 87D4 30 83        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 282+ 87D6 88 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 283+ 87D8 40 50        	defw $5040                                      	; (Posicion_inicio).
 284+ 87DA 01           	db 1												; (Cuad_objeto).
 285+ 87DB 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 286+ 87DD
 287+ 87DD              ; -------------------------------------------------------------------------------------
 288+ 87DD              ;
 289+ 87DD              ;	28/05/24
 290+ 87DD              ;
 291+ 87DD              ;	Definición de Amadeus.
 292+ 87DD              ;
 293+ 87DD              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 294+ 87DD              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 295+ 87DD
 296+ 87DD 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 297+ 87E0 00           	db 0												; (Contador_de_vueltas).
 298+ 87E1 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 299+ 87E3 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 300+ 87E5 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 301+ 87E7 03           	db 3												; (Cuad_objeto).
 302+ 87E8 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
  53  87EA              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87EA
   2+ 87EA
   3+ 87EA              ;   07/07/23
   4+ 87EA              ;
   5+ 87EA              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87EA              ;
   7+ 87EA              ;   Codificación:
   8+ 87EA              ;
   9+ 87EA              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87EA              ;
  11+ 87EA              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87EA              ;
  13+ 87EA              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87EA              ;
  15+ 87EA              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87EA              ;
  17+ 87EA              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87EA              ;                               ..... %01000010 Vel_up 4
  19+ 87EA              ;                                               Vel_down 2
  20+ 87EA              ;                               ..... $42
  21+ 87EA              ;
  22+ 87EA              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87EA              ;
  24+ 87EA              ;                               ..... %01000010 Vel_left 4
  25+ 87EA              ;                                               Vel_right 2
  26+ 87EA              ;                               ..... $42
  27+ 87EA              ;
  28+ 87EA              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87EA              ;
  30+ 87EA              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87EA              ;
  32+ 87EA              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87EA              ;
  34+ 87EA              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87EA              ;                                     $53
  36+ 87EA              ;
  37+ 87EA              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87EA              ;
  39+ 87EA              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87EA              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87EA              ;
  42+ 87EA              ;                       Arriba ..... $81
  43+ 87EA              ;                       Arriba - izquierda ..... $a1
  44+ 87EA              ;                       Arriba - derecha ..... $91
  45+ 87EA              ;
  46+ 87EA              ;                       Abajo ..... $41
  47+ 87EA              ;                       Abajo - izquierda ..... $61
  48+ 87EA              ;                       Abajo - derecha ..... $51
  49+ 87EA              ;
  50+ 87EA              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87EA              ;
  52+ 87EA              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87EA              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87EA              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87EA              ;
  56+ 87EA              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87EA              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87EA              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87EA              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87EA              ;
  61+ 87EA              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87EA              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87EA              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87EA              ;
  65+ 87EA              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87EA              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87EA              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87EA              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87EA
  70+ 87EA              ; ----- ----- ----- ----- -----
  71+ 87EA
  72+ 87EA 16 88        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87EC 1E 88            defw F_1
  74+ 87EE 28 88            defw F_2
  75+ 87F0 32 88            defw Codo_abajo_derecha
  76+ 87F2 66 88            defw Derecha_y_subiendo
  77+ 87F4 70 88            defw Derecha_y_subiendo_1
  78+ 87F6 7A 88            defw F_3
  79+ 87F8 84 88            defw F_4
  80+ 87FA 8E 88            defw Derecha_y_bajando
  81+ 87FC 98 88            defw Derecha_y_bajando_1
  82+ 87FE A2 88            defw Derecha_y_bajando_2
  83+ 8800 AC 88            defw Codo_derecha_abajo
  84+ 8802 DC 88            defw Codo_abajo_izq.
  85+ 8804 10 89            defw Izquierda_y_subiendo
  86+ 8806 1A 89            defw Izquierda_y_subiendo_1
  87+ 8808 24 89            defw F_5
  88+ 880A 2E 89            defw F_6
  89+ 880C 38 89            defw Izquierda_y_bajando
  90+ 880E 42 89            defw Izquierda_y_bajando_1
  91+ 8810 4C 89            defw Izquierda_y_bajando_2
  92+ 8812 56 89            defw Codo_izquierda_abajo
  93+ 8814 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8816
  95+ 8816 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 881A 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 881E
  98+ 881E 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8822 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8826 08 00
 100+ 8828
 101+ 8828 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 882C 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8830 0F FE
 103+ 8832
 104+ 8832 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8836 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 883A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 883E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8842 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8846 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 884A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 884E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8852 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8856 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 885A 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 885E 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8862 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8866
 118+ 8866 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 886A 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 886E 06 00
 120+ 8870
 121+ 8870 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8874 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8878 02 00
 123+ 887A
 124+ 887A 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 887E 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8882 04 00
 126+ 8884
 127+ 8884 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8888 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 888C 08 00
 129+ 888E
 130+ 888E 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8892 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8896 02 00
 132+ 8898
 133+ 8898 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 889C 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 88A0 06 00
 135+ 88A2
 136+ 88A2 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 88A6 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 88AA 06 00
 138+ 88AC
 139+ 88AC              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 88AC
 141+ 88AC 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 88B0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 88B4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 88B8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88BC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88C0 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88C4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88C8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88CC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88D0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88D4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88D8 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88DC
 154+ 88DC 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88E0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88E4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88E8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88EC 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88F0 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88F4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88F8 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88FC 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8900 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8904 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8908 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 890C 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8910
 168+ 8910 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8914 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8918 06 00
 170+ 891A
 171+ 891A 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 891E 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8922 02 00
 173+ 8924
 174+ 8924 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8928 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 892C 04 00
 176+ 892E
 177+ 892E 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8932 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8936 08 00
 179+ 8938
 180+ 8938 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 893C 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8940 02 00
 182+ 8942
 183+ 8942 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8946 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 894A 06 00
 185+ 894C
 186+ 894C 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8950 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8954 06 00
 188+ 8956
 189+ 8956 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 895A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 895E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8962 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8966 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 896A 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 896E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8972 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8976 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 897A 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 897E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8982 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8986
 202+ 8986
 203+ 8986
 204+ 8986
 205+ 8986
 206+ 8986
 207+ 8986
 208+ 8986
 209+ 8986
 210+ 8986
# file closed: Patrones_de_mov.asm
  54  8986              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8986              ; 19/1/24
   2+ 8986
   3+ 8986              Indice_de_niveles
   4+ 8986
   5+ 8986 8E 89        	defw Nivel_1
   6+ 8988 98 89        	defw Nivel_2
   7+ 898A
   8+ 898A              ;	...
   9+ 898A              ;	...
  10+ 898A              ;	+ Niveles ...
  11+ 898A
  12+ 898A 00 00        	defw 0
  13+ 898C 00 00        	defw 0
  14+ 898E
  15+ 898E 05           Nivel_1 db 5									; Nº de entidades.
  16+ 898F 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8993 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8997 01
  18+ 8998
  19+ 8998 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8999 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 899D 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 89A1 01 02
  22+ 89A3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 89A7 01 02
  23+ 89A9
# file closed: Niveles.asm
  55  89A9
  56  89A9              ; ******************************************************************************************************************************************************************************************
  57  89A9              ; Constantes.
  58  89A9              ; ******************************************************************************************************************************************************************************************
  59  89A9              ;
  60  89A9              ; 09/03/24
  61  89A9
  62  89A9              ;
  63  89A9              ; Constantes.
  64  89A9              ;
  65  89A9
  66  89A9              ;Variables ROM. FRAMES y KEYBOARD. Rutina Interrupción mascarable $0038.
  67  89A9
  68  89A9              FRAMES equ $5c78										; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  69  89A9              FRAMES_3 equ $5c7a
  70  89A9
  71  89A9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  72  89A9
  73  89A9              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
  74  89A9
  75  89A9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  76  89A9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  77  89A9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  78  89A9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  79  89A9
  80  89A9              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb20 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
  81  89A9              Almacen_de_movimientos_masticados_Amadeus equ $e000		; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  82  89A9
  83  89A9              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
  84  89A9              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
  85  89A9              Amadeus_scanlines_album equ $8120	;	($8120 - $8142)
  86  89A9              Amadeus_scanlines_album_2 equ $8143	;	($8143 - $8166)
  87  89A9
  88  89A9              ;                                                       ; 35 bytes por entidad.
  89  89A9              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  90  89A9              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  91  89A9              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  92  89A9              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  93  89A9
  94  89A9
  95  89A9              ; ******************************************************************************************************************************************************************************************
  96  89A9              ; Variables.
  97  89A9              ; ******************************************************************************************************************************************************************************************
  98  89A9
  99  89A9              ;
 100  89A9              ; 12/05/24
 101  89A9              ;
 102  89A9              ; Variables de DRAW. (Motor principal).	44 Bytes.
 103  89A9              ;
 104  89A9
 105  89A9              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 106  89A9
 107  89A9 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 108  89AA              ;															- Patrón de movimiento.
 109  89AA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 110  89AB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 111  89AC
 112  89AC 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 113  89AD              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 114  89AD
 115  89AD              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 116  89AD              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 117  89AD              ; Ejemplos.
 118  89AD
 119  89AD              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 120  89AD              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 121  89AD              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 122  89AD              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 123  89AD              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 124  89AD
 125  89AD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 126  89AE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 127  89AE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 128  89AE
 129  89AE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 130  89B0              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 131  89B0
 132  89B0 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 133  89B2
 134  89B2              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 135  89B2              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 136  89B2
 137  89B2 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 138  89B4              ;														; _palabras que componen el "movimiento_masticado".
 139  89B4
 140  89B4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 141  89B4
 142  89B4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 143  89B5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 144  89B5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 145  89B5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 146  89B5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 147  89B5              ;
 148  89B5              ; 														DESCRIPCIÖN:
 149  89B5              ;
 150  89B5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 151  89B5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 152  89B5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 153  89B5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 154  89B5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 155  89B5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 156  89B5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 157  89B5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 158  89B5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 159  89B5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 160  89B5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 161  89B5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 162  89B5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 163  89B5              ;
 164  89B5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 165  89B5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 166  89B5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 167  89B5
 168  89B5 00           Ctrl_2 db 0
 169  89B6              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 170  89B6              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 171  89B6              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 172  89B6              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 173  89B6              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 174  89B6              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 175  89B6              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 176  89B6              ;
 177  89B6              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 178  89B6              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 179  89B6              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 180  89B6              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 181  89B6              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 182  89B6              ;														BIT 4, ???
 183  89B6              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 184  89B6
 185  89B6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 186  89B7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 187  89B7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 188  89B7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 189  89B7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 190  89B7
 191  89B7              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 192  89B7
 193  89B7 00           Filas db 0												; Filas. [DRAW]
 194  89B8 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 195  89B9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 196  89BB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 197  89BD
 198  89BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 199  89BD
 200  89BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 201  89BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 202  89BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 203  89BE
 204  89BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 205  89BE
 206  89BE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 207  89BE              ;
 208  89BE              ;	COLORES: 0 ..... NEGRO
 209  89BE              ;    		 1 ..... AZUL
 210  89BE              ; 			 2 ..... ROJO
 211  89BE              ;			 3 ..... MAGENTA
 212  89BE              ; 			 4 ..... VERDE
 213  89BE              ; 			 5 ..... CIAN
 214  89BE              ;			 6 ..... AMARILLO
 215  89BE              ; 			 7 ..... BLANCO
 216  89BE
 217  89BE 00 00        Indice_Sprite_der defw 0
 218  89C0 00 00        Indice_Sprite_izq defw 0
 219  89C2 00 00        Puntero_DESPLZ_der defw 0
 220  89C4 00 00        Puntero_DESPLZ_izq defw 0
 221  89C6
 222  89C6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 223  89C8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 224  89C9
 225  89C9              ; Variables de objeto. (Características).
 226  89C9
 227  89C9              ; Variables_de_borrado ds 6
 228  89C9
 229  89C9
 230  89C9              ; Variables de funcionamiento. [DRAW].
 231  89C9
 232  89C9 00           Columnas db 0
 233  89CA 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 234  89CC              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 235  89CC 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 236  89CD
 237  89CD              ; variables de control general.
 238  89CD
 239  89CD 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 240  89CE
 241  89CE              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 242  89CE
 243  89CE              Perfiles_de_velocidad
 244  89CE
 245  89CE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 246  89CF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 247  89D0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 248  89D1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 249  89D2
 250  89D2              ; Contadores de 16 bits.
 251  89D2
 252  89D2 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 253  89D4 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 254  89D6 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 255  89D8 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 256  89DA
 257  89DA              ; Movimiento. ------------------------------------------------------------------------------------------------------
 258  89DA
 259  89DA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 260  89DC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 261  89DE 00 00        Puntero_indice_mov_bucle defw 0							;
 262  89E0              ;
 263  89E0              ;
 264  89E0 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 265  89E1              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 266  89E1              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 267  89E1 00           Incrementa_puntero_backup db 0
 268  89E2 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 269  89E3              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 270  89E3 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 271  89E4 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 272  89E5 00           Cola_de_desplazamiento db 0								; Este byte indica:
 273  89E6              ;
 274  89E6              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 275  89E6              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 276  89E6              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 277  89E6              ;
 278  89E6              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 279  89E6              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 280  89E6              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 281  89E6              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 282  89E6              ;
 283  89E6              ;														;	"$ff" ..... Bucle infinito de repetición.
 284  89E6              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 285  89E6              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 286  89E6
 287  89E6 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 288  89E7
 289  89E7              ;														DESCRIPCIÓN:
 290  89E7              ;
 291  89E7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 292  89E7              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 293  89E7              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 294  89E7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 295  89E7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 296  89E7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 297  89E7
 298  89E7              ;														BIT 3, Recarga de nueva oleada.
 299  89E7              ;														BIT 4, Recarga de nueva oleada.
 300  89E7              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 301  89E7              ;														BIT 6, **** Frame completo.
 302  89E7              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 303  89E7
 304  89E7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 305  89E9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 306  89E9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 307  89E9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 308  89E9
 309  89E9              ; Gestión de ENTIDADES y CAJAS.
 310  89E9
 311  89E9 00 00        Puntero_store_caja defw 0
 312  89EB 00 00        Puntero_restore_caja defw 0
 313  89ED 00 00        Indice_restore_caja defw 0
 314  89EF 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 315  89F0 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 316  89F1 00           Entidades_en_curso db 0									; ..... ..... .....
 317  89F2 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  89F3              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 319  89F3              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 320  89F3              ;														; _ (Numero_de_malotes)="0".
 321  89F3 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  89F5 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  89F7              ;														; _ puntero (Indice_entidades).
 324  89F7
 325  89F7              ;---------------------------------------------------------------------------------------------------------------
 326  89F7              ;
 327  89F7              ;	02/07/24
 328  89F7              ;
 329  89F7              ;	Álbumes.
 330  89F7
 331  89F7 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 332  89F9              ;														; _variable para almacenar lo posición del puntero_
 333  89F9              ; 														; _de pila, SP.
 334  89F9 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 335  89FB              ;														; La utiliza la rutina [Extrae_foto_registros].
 336  89FB
 337  89FB              ; Impresión. ----------------------------------------------------------------------------------------------------
 338  89FB
 339  89FB 00 00        Album_de_pintado defw 0
 340  89FD 00 00        Album_de_borrado defw 0
 341  89FF 00 00        Album_de_pintado_Amadeus defw 0
 342  8A01 00 00        Album_de_borrado_Amadeus defw 0
 343  8A03 00 00        Techo_Scanlines_album defw 0
 344  8A05 00 00        Techo_Scanlines_album_2 defw 0
 345  8A07 00           Switch db 0
 346  8A08 00 00        Techo defw 0
 347  8A0A 00 00        Scanlines_album_SP defw 0
 348  8A0C 9D 86        India_SP defw Tabla_de_pintado
 349  8A0E A0 86        India_2_SP defw Tabla_de_pintado+3
 350  8A10
 351  8A10 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 352  8A11              ;
 353  8A11              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 354  8A11              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 355  8A11              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 356  8A11              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 357  8A11              ;																Habilita el borrado/pintado de sprites.
 358  8A11              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 359  8A11              ;																_ a la baja.
 360  8A11              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 361  8A11              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 362  8A11
 363  8A11
 364  8A11 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 365  8A12              ;
 366  8A12              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 367  8A12              ;
 368  8A12              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 369  8A12              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 370  8A12              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 371  8A12              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 372  8A12              ;
 373  8A12              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 374  8A12              ;															_ masticados ya generados.
 375  8A12              ;
 376  8A12              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 377  8A12              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 378  8A12              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 379  8A12              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 380  8A12
 381  8A12
 382  8A12              ; Gestión de Disparos.
 383  8A12
 384  8A12              ;Numero_de_disparotes db 0
 385  8A12              ;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 386  8A12              ;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 387  8A12 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 388  8A13              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 389  8A13              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 390  8A13              ;
 391  8A13              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 392  8A13              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 393  8A13              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 394  8A13
 395  8A13 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 396  8A15              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 397  8A15              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 398  8A15
 399  8A15              ;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 400  8A15              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 401  8A15 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 402  8A18              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 403  8A18 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 404  8A1B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 405  8A1B              ;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 406  8A1B
 407  8A1B              ;---------------------------------------------------------------------------------------------------------------
 408  8A1B
 409  8A1B              ; Relojes y temporizaciones.
 410  8A1B
 411  8A1B 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 412  8A1C
 413  8A1C 96 86        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 414  8A1E
 415  8A1E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 416  8A20 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 417  8A21              ;														; Repite la oleada de entidades.
 418  8A21 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 419  8A22
 420  8A22              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 421  8A22              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 422  8A22
 423  8A22              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 424  8A22              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 425  8A22              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 426  8A22
 427  8A22              ;---------------------------------------------------------------------------------------------------------------
 428  8A22
 429  8A22              ; Gestión de NIVELES.
 430  8A22
 431  8A22 00           Nivel db 0												; Nivel actual del juego.
 432  8A23 00 00        Puntero_indice_NIVELES defw 0
 433  8A25 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 434  8A27              ; 														; _ que definen el NIVEL.
 435  8A27
 436  8A27              ; 	INICIO  *************************************************************************************************************************************************************************
 437  8A27              ;
 438  8A27              ;	5/1/24
 439  8A27
 440  8A27              START
 441  8A27
 442  8A27 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 443  8A2A 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 444  8A2C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 445  8A2E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 446  8A30 F3           	DI
 447  8A31
 448  8A31              ; Limpiamos pantalla.
 449  8A31
 450  8A31 3E 07        	ld a,%00000111
 451  8A33              ;	call Cls
 452  8A33 CD BE 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 453  8A36
 454  8A36              ; INICIALIZACIÓN.
 455  8A36
 456  8A36 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 457  8A38 CD 7F AA     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 458  8A3B CD 87 8B     	call Extrae_numero_aleatorio_y_avanza
 459  8A3E
 460  8A3E 6F           	ld l,a
 461  8A3F 26 00        	ld h,0
 462  8A41 22 1E 8A     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 463  8A44
 464  8A44              ;	Inicializa 1er Nivel.
 465  8A44
 466  8A44 21 86 89     	ld hl,Indice_de_niveles
 467  8A47 22 23 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 468  8A4A CD AF AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 469  8A4D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 470  8A4D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 471  8A4D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 472  8A4D              	;	Provisional, (para desarrollo).
 473  8A4D              	;-
 474  8A4D              ;	ld hl,Numero_parcial_de_entidades
 475  8A4D              ;	ld b,(hl)
 476  8A4D              ;	inc b
 477  8A4D              ;	dec b
 478  8A4D              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 479  8A4D
 480  8A4D CD 29 8D     	call Inicia_albumes_de_lineas						 ; (Album_de_pintado) contiene $8000
 481  8A50              ;														 ; (Album_de_borrado) contiene $9000
 482  8A50
 483  8A50 CD F4 AA     4 call Inicia_Entidades
 484  8A53 CD 57 AB     	call Inicia_Amadeus
 485  8A56
 486  8A56              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 487  8A56              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 488  8A56              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 489  8A56
 490  8A56 11 4F 87     	ld de,Amadeus_BOX
 491  8A59 CD AA AC     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 492  8A5C CD 9A AB     	call Limpiamos_bandeja_DRAW
 493  8A5F
 494  8A5F              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 495  8A5F
 496  8A5F 06 3C        	ld b,60
 497  8A61 CD 86 98     2 call Amadeus_a_izquierda
 498  8A64 10 FB        	djnz 2B
 499  8A66
 500  8A66 CD 0D 8D     	call Genera_datos_de_impresion_Amadeus
 501  8A69
 502  8A69              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 503  8A69
 504  8A69 CD 45 8D     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 505  8A6C              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 506  8A6C              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 507  8A6C              ; (Esto se dá cuando se inicia una nueva oleada).
 508  8A6C
 509  8A6C              ;	ld a,(Ctrl_1)
 510  8A6C              ;	bit 3,a
 511  8A6C              ;	jr nz,5F											 ; Loop
 512  8A6C
 513  8A6C              ;	ld de,Amadeus_db
 514  8A6C              ;	call Store_Amadeus
 515  8A6C
 516  8A6C              ; 	INICIA DISPAROS !!!!!
 517  8A6C
 518  8A6C              ;	call Inicia_Puntero_Disparo_Entidades
 519  8A6C              ;	call Inicia_Puntero_Disparo_Amadeus
 520  8A6C
 521  8A6C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 522  8A6C
 523  8A6C              ;5 call Inicia_punteros_de_cajas
 524  8A6C              ;	call Restore_entidad
 525  8A6C
 526  8A6C              ;	ld a,(Ctrl_1)
 527  8A6C              ;	bit 3,a
 528  8A6C              ;	jr z,6F
 529  8A6C
 530  8A6C              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 531  8A6C
 532  8A6C              ;	ld hl,Ctrl_1
 533  8A6C              ;	res 3,(hl)
 534  8A6C              ;	jr Main
 535  8A6C
 536  8A6C              ; Damos por concluida la construcción del FRAME.
 537  8A6C              ;
 538  8A6C
 539  8A6C 2A 0A 8A     6 ld hl,(Scanlines_album_SP)
 540  8A6F 22 03 8A     	ld (Techo_Scanlines_album),hl
 541  8A72
 542  8A72 2A FD 89     	ld hl,(Album_de_borrado)
 543  8A75 22 0A 8A     	ld (Scanlines_album_SP),hl
 544  8A78
 545  8A78 21 9D 86     	ld hl,Tabla_de_pintado
 546  8A7B 22 0C 8A     	ld (India_SP),hl
 547  8A7E
 548  8A7E 21 10 8A     	ld hl,Ctrl_3
 549  8A81 CB C6        	set 0,(hl) 											; Indica Frame completo.
 550  8A83 CB D6        	set 2,(hl)
 551  8A85 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 552  8A87
 553  8A87 FB           	ei 													; Ha de apuntar a $5c3a.
 554  8A88
 555  8A88 76           	halt
 556  8A89
 557  8A89              ; ------------------------------------
 558  8A89
 559  8A89              Main
 560  8A89              ;
 561  8A89              ; 13/05/24
 562  8A89
 563  8A89              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 564  8A89              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 565  8A89              ; Este hecho lo indica el bit2 de (Impacto2).
 566  8A89
 567  8A89 CD A4 9A     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (SET 3 Impacto2 - RES 2 Impacto2).
 568  8A8C
 569  8A8C 2A 1E 8A     16 ld hl,(Clock_next_entity)
 570  8A8F ED 4B 78 5C  	ld bc,(FRAMES)
 571  8A93 A7           	and a
 572  8A94 ED 42        	sbc hl,bc
 573  8A96 20 16        	jr nz,13F
 574  8A98
 575  8A98              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 576  8A98              ; _ (Clock_next_entity) para la siguiente entidad.
 577  8A98
 578  8A98 3A F0 89     21 ld a,(Numero_parcial_de_entidades)
 579  8A9B 47           	ld b,a
 580  8A9C 3A F1 89     	ld a,(Entidades_en_curso)
 581  8A9F B8           	cp b
 582  8AA0 28 0C        	jr z,13F
 583  8AA2 30 0A        	jr nc,13F
 584  8AA4
 585  8AA4 3C           	inc a
 586  8AA5 32 F1 89     	ld (Entidades_en_curso),a
 587  8AA8
 588  8AA8              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 589  8AA8
 590  8AA8 CD 87 8B     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 591  8AAB CD A3 8B     	call Define_Clock_next_entity
 592  8AAE
 593  8AAE              ; -------------------------------------------------------------------------------------------------------------
 594  8AAE
 595  8AAE              ; Habilita disparos.
 596  8AAE
 597  8AAE              13
 598  8AAE
 599  8AAE              ;	ld hl,Disparo_Amadeus
 600  8AAE              ;	ld de,CLOCK_repone_disparo_Amadeus
 601  8AAE              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 602  8AAE
 603  8AAE              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 604  8AAE              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 605  8AAE              ;	call Habilita_disparos
 606  8AAE
 607  8AAE              ; COLISIONES.
 608  8AAE
 609  8AAE              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 610  8AAE
 611  8AAE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 612  8AAE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 613  8AAE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 614  8AAE
 615  8AAE              ;	xor a
 616  8AAE              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 617  8AAE
 618  8AAE              ;	call Inicia_punteros_de_cajas
 619  8AAE              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 620  8AAE              ; 														; _ en DRAW.
 621  8AAE
 622  8AAE              ;	ld a,(Filas)
 623  8AAE              ;	and a
 624  8AAE              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 625  8AAE              ;	call Incrementa_punteros_de_cajas
 626  8AAE              ;	jr 12B
 627  8AAE
 628  8AAE              ; ---------------------------------------------------------------------------------------
 629  8AAE
 630  8AAE              ;10 ld a,(Numero_parcial_de_entidades)
 631  8AAE              ;    ld b,a
 632  8AAE              ;	and a
 633  8AAE              ;	jr nz,11F
 634  8AAE
 635  8AAE              ;	ld hl,Ctrl_1;
 636  8AAE              ;	bit 4,(hl)
 637  8AAE              ;	jp nz,16F
 638  8AAE
 639  8AAE              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 640  8AAE
 641  8AAE              ;	ld hl,Ctrl_1
 642  8AAE              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 643  8AAE
 644  8AAE              ;	ld a,(Contador_de_frames)
 645  8AAE              ;	inc a
 646  8AAE              ;	ld (Activa_recarga_cajas),a
 647  8AAE
 648  8AAE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 649  8AAE
 650  8AAE 3A F1 89     11 ld a,(Entidades_en_curso)
 651  8AB1 A7           	and a
 652  8AB2 CA 15 8B     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 653  8AB5 47           	ld b,a												; No hay entidades que gestionar.
 654  8AB6
 655  8AB6              ; ( Código que ejecutamos con cada entidad: ).
 656  8AB6
 657  8AB6              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 658  8AB6              ;
 659  8AB6              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 660  8AB6
 661  8AB6 21 9D 86     	ld hl,Tabla_de_pintado
 662  8AB9 22 0C 8A     	ld (India_SP),hl
 663  8ABC
 664  8ABC 21 10 8A     	ld hl,Ctrl_3
 665  8ABF CB D6        	set 2,(hl)
 666  8AC1 CD 5C 8B     	call Change
 667  8AC4
 668  8AC4 C5           15 push bc 												; Nº de entidades en curso.
 669  8AC5
 670  8AC5 CD 96 8D     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 671  8AC8 ED 5B 0A 8A  	ld de,(Scanlines_album_SP)
 672  8ACC
 673  8ACC              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 674  8ACC
 675  8ACC              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 676  8ACC
 677  8ACC 3A AD 89     	ld a,(Impacto)
 678  8ACF A7           	and a
 679  8AD0 28 0E        	jr z,8F
 680  8AD2
 681  8AD2              ; 5/7/24
 682  8AD2              ; Nota importante:
 683  8AD2              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 684  8AD2              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 685  8AD2              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 686  8AD2
 687  8AD2 3A 53 87     	ld a,(Impacto_Amadeus)
 688  8AD5 A7           	and a
 689  8AD6 C4 6C 8E     	call nz,Genera_explosion
 690  8AD9 18 1D        	jr Gestiona_siguiente_entidad
 691  8ADB
 692  8ADB              ; Falsa colisión !!!
 693  8ADB
 694  8ADB 32 AD 89     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 695  8ADE 18 00        	jr 8F
 696  8AE0
 697  8AE0              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 698  8AE0              ;	set 1,(hl)
 699  8AE0              ;	jr 7F
 700  8AE0
 701  8AE0              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 702  8AE0              ; _con las coordenadas de la entidad almacenada en DRAW.
 703  8AE0
 704  8AE0              ;	ld a,(Ctrl_1)
 705  8AE0              ;	bit 2,a
 706  8AE0              ;	jr z,7F
 707  8AE0
 708  8AE0              ;	ld hl,(Coordenadas_disparo_certero)
 709  8AE0              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 710  8AE0              ;														; E contiene la coordenada_X del disparo.
 711  8AE0              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 712  8AE0              ;														; H FILA, (Coordenada_y de la entidad).
 713  8AE0              ;	and a
 714  8AE0              ;	sbc hl,de
 715  8AE0
 716  8AE0              ;	call Determina_resultado_comparativa
 717  8AE0
 718  8AE0              ;	ld a,b
 719  8AE0              ;	and a
 720  8AE0              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 721  8AE0
 722  8AE0              ; ----- ----- -----
 723  8AE0
 724  8AE0              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 725  8AE0              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 726  8AE0
 727  8AE0              ;	ld hl,Ctrl_1
 728  8AE0              ;	res 2,(hl)
 729  8AE0
 730  8AE0              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 731  8AE0
 732  8AE0              ;	ld a,(Ctrl_0)
 733  8AE0              ;	bit 4,a
 734  8AE0              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 735  8AE0
 736  8AE0              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 737  8AE0              ; [[[
 738  8AE0              ;	call Detecta_disparo_entidad
 739  8AE0              ; ]]]
 740  8AE0
 741  8AE0              ;	dec a
 742  8AE0              ;	ld (Impacto),a
 743  8AE0
 744  8AE0              ; Existe "Entidad_guía" ???.
 745  8AE0              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 746  8AE0
 747  8AE0              ;	ld a,(Ctrl_3)
 748  8AE0              ;	bit 1,a
 749  8AE0              ;	jr nz,22F
 750  8AE0
 751  8AE0              ; Almacén de "Movimientos_masticados" lleno ???
 752  8AE0              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 753  8AE0              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 754  8AE0
 755  8AE0              ;;	ld a,(Ctrl_3)
 756  8AE0              ;;	bit 3,a
 757  8AE0              ;;	jr nz,22F
 758  8AE0
 759  8AE0              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 760  8AE0
 761  8AE0              ;	ld hl,Ctrl_2
 762  8AE0              ;	set 5,(hl)
 763  8AE0              ;	ld hl,Ctrl_3
 764  8AE0              ;	set 1,(hl)
 765  8AE0
 766  8AE0              ; -------------------------------------------
 767  8AE0
 768  8AE0 CD E7 8B     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 769  8AE3 CD 3C 8B     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 770  8AE6 CD D3 8C     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 771  8AE9 CD 41 AD     	call Genera_datos_de_impresion
 772  8AEC CD BD AB     	call Decrementa_Contador_de_mov_masticados
 773  8AEF
 774  8AEF              ; -------------------------------------------
 775  8AEF
 776  8AEF              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 777  8AEF
 778  8AEF 2A AE 89     	ld hl,(Puntero_de_impresion)
 779  8AF2 CD EE AC     	call Genera_coordenadas
 780  8AF5
 781  8AF5 CD 33 9A     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 782  8AF8
 783  8AF8              ;	ld hl,Ctrl_0
 784  8AF8              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 785  8AF8
 786  8AF8              Gestiona_siguiente_entidad
 787  8AF8
 788  8AF8 CD 8F AB      	call Store_Restore_cajas
 789  8AFB C1           	pop bc
 790  8AFC 10 C6        	djnz 15B
 791  8AFE
 792  8AFE              ; Hemos gestionado todas las entidades.
 793  8AFE
 794  8AFE CD F7 8B     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 795  8B01 CD 0E 8C     	call Ordena_tabla_de_impresion
 796  8B04 CD 45 8D     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 797  8B07
 798  8B07              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 799  8B07              ; Hemos gestionado todas las unidades.
 800  8B07              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 801  8B07
 802  8B07              ;	ld hl,Ctrl_1
 803  8B07              ;	res 2,(hl)
 804  8B07
 805  8B07 CD B8 8B     	call Borra_diferencia
 806  8B0A
 807  8B0A 3A 10 8A     	ld a,(Ctrl_3)
 808  8B0D CB 5F        	bit 3,a
 809  8B0F 20 04        	jr nz,Gestion_de_Amadeus
 810  8B11
 811  8B11 EB           	ex de,hl
 812  8B12 71           	ld (hl),c
 813  8B13 2C           	inc l
 814  8B14 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 815  8B15
 816  8B15
 817  8B15              ;! GESTIONA AMADEUS !!!!!!!!!!
 818  8B15
 819  8B15              Gestion_de_Amadeus
 820  8B15
 821  8B15              ; Existe movimiento???, Disparamos???, Pausamos el juego???
 822  8B15
 823  8B15 CD 38 8E     	call Teclado
 824  8B18
 825  8B18 21 10 8A     	ld hl,Ctrl_3
 826  8B1B CB 6E        	bit 5,(hl)
 827  8B1D 28 06        	jr z,End_frame
 828  8B1F
 829  8B1F              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 830  8B1F
 831  8B1F CD 77 8B     	call Change_Amadeus
 832  8B22 CD 0D 8D     	call Genera_datos_de_impresion_Amadeus
 833  8B25
 834  8B25              End_frame
 835  8B25
 836  8B25 2A FD 89     	ld hl,(Album_de_borrado)
 837  8B28 22 0A 8A     	ld (Scanlines_album_SP),hl
 838  8B2B
 839  8B2B 21 10 8A     	ld hl,Ctrl_3
 840  8B2E CB C6        	set 0,(hl) 											; Indica Frame completo.
 841  8B30 CB 9E        	res 3,(hl)
 842  8B32 CB A6        	res 4,(hl)
 843  8B34
 844  8B34 AF           	xor a
 845  8B35 D3 FE        	out ($fe),a
 846  8B37
 847  8B37 76           	halt
 848  8B38
 849  8B38              ; ----------------------------------------
 850  8B38
 851  8B38              ;	ld a,(Ctrl_1) 										; Existe Loop?
 852  8B38              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 853  8B38 CA 89 8A     	jp z,Main
 854  8B3B
 855  8B3B              ; RECARGA DE NUEVA OLEADA.
 856  8B3B
 857  8B3B              ;	ld a,(Contador_de_frames)
 858  8B3B              ;	ld b,a
 859  8B3B              ;	ld a,(Activa_recarga_cajas)
 860  8B3B              ;	cp b
 861  8B3B              ;	jr z,20F
 862  8B3B
 863  8B3B              ;	ld hl,Ctrl_1
 864  8B3B              ;	set 4,(hl)
 865  8B3B              ;	jp Main
 866  8B3B
 867  8B3B              ;20 ld hl,Ctrl_1
 868  8B3B              ;	res 4,(hl)
 869  8B3B
 870  8B3B              ;	ld a,(Contador_de_frames)
 871  8B3B
 872  8B3B              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 873  8B3B              ;! _ IMPREDECIBLE !!!!
 874  8B3B
 875  8B3B              ;	add 10
 876  8B3B              ;	ld (Clock_next_entity),a
 877  8B3B
 878  8B3B              ;	jp 4B
 879  8B3B
 880  8B3B C9           	ret
 881  8B3C
 882  8B3C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 883  8B3C              ;
 884  8B3C              ;	16/11/23
 885  8B3C
 886  8B3C              ;;Gestiona_Amadeus
 887  8B3C
 888  8B3C              ;! Activa/desactiva impacto con Amadeus.
 889  8B3C
 890  8B3C              ;	ld a,(Impacto)
 891  8B3C              ;	and a
 892  8B3C              ;	jr nz,2F
 893  8B3C
 894  8B3C              ;;	call Mov_Amadeus
 895  8B3C
 896  8B3C              ;;2 ld a,(Ctrl_0)
 897  8B3C              ;;	bit 4,a
 898  8B3C              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 899  8B3C
 900  8B3C              ;;	call Guarda_foto_entidad_a_pintar
 901  8B3C              ;;	call Guarda_datos_de_borrado_Amadeus
 902  8B3C
 903  8B3C              ;;1 ld hl,Ctrl_0
 904  8B3C              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 905  8B3C
 906  8B3C              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 907  8B3C
 908  8B3C              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 909  8B3C
 910  8B3C              ;	call Calcula_numero_de_disparotes
 911  8B3C
 912  8B3C              ;;	ret
 913  8B3C
 914  8B3C              ; -----------------------------
 915  8B3C              ;
 916  8B3C              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 917  8B3C              ;
 918  8B3C              ;	INPUTS: B a de estar a "0".
 919  8B3C
 920  8B3C              ;Prepara_Borra_sprites
 921  8B3C
 922  8B3C              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 923  8B3C              ;	ld a,l
 924  8B3C              ;	ret z
 925  8B3C
 926  8B3C              ;	srl a
 927  8B3C
 928  8B3C              ;2 sub 16
 929  8B3C              ;	jr z,1F
 930  8B3C              ;	inc b
 931  8B3C              ;	jr 2B
 932  8B3C
 933  8B3C              ;1 inc b
 934  8B3C
 935  8B3C              ;	exx
 936  8B3C              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 937  8B3C              ;	exx
 938  8B3C
 939  8B3C              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 940  8B3C              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 941  8B3C
 942  8B3C              ;	ret
 943  8B3C
 944  8B3C              ; --------------------------------------------------------------------------------------------------------------
 945  8B3C              ;
 946  8B3C              ;	15/12/23
 947  8B3C
 948  8B3C              ;Mov_obj
 949  8B3C
 950  8B3C              ;	ld a,(Ctrl_2)
 951  8B3C              ;	bit 1,a
 952  8B3C              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 953  8B3C
 954  8B3C              ; Explosión:
 955  8B3C
 956  8B3C              ;	ld a,(Frames_explosion)
 957  8B3C              ;	and a
 958  8B3C              ;	jr nz,4F
 959  8B3C
 960  8B3C              ;!  Una alimaña menos!!!!!!!!!1
 961  8B3C
 962  8B3C              ; Se trataba de una Entidad_guía ???
 963  8B3C
 964  8B3C              ;	ld a,(Ctrl_2)
 965  8B3C              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 966  8B3C              ;	jr z,5F
 967  8B3C
 968  8B3C              ;	ld hl,Ctrl_3
 969  8B3C              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 970  8B3C
 971  8B3C              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 972  8B3C              ;!! _generado puede ser distinto, (aletoriedad).
 973  8B3C
 974  8B3C              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 975  8B3C              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 976  8B3C              ;	dec (hl)
 977  8B3C              ;	ld hl,Entidades_en_curso
 978  8B3C              ;	dec (hl)
 979  8B3C              ;	ld hl,Numero_de_entidades
 980  8B3C              ;	dec (hl)
 981  8B3C              ;	jr 3F
 982  8B3C
 983  8B3C              ; -----
 984  8B3C
 985  8B3C              ;	`Movemos´ la explosión.
 986  8B3C
 987  8B3C              ;4 ld hl,(Puntero_DESPLZ_der)
 988  8B3C              ;	inc hl
 989  8B3C              ;	inc hl
 990  8B3C              ;	call Extrae_address
 991  8B3C              ;;	ld (Puntero_objeto),hl
 992  8B3C
 993  8B3C              ;;	ld hl,Frames_explosion
 994  8B3C              ;;	dec (hl)
 995  8B3C
 996  8B3C              ;;	ld hl,Ctrl_0
 997  8B3C              ;;	set 4,(hl);;
 998  8B3C
 999  8B3C              ;;	jr 3F
1000  8B3C
1001  8B3C              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1002  8B3C
1003  8B3C              ;2 xor a
1004  8B3C              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1005  8B3C
1006  8B3C              ; Movemos Entidades malignas.
1007  8B3C              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1008  8B3C
1009  8B3C              ;	ld a,(Ctrl_2)
1010  8B3C              ;	bit 5,a
1011  8B3C              ;	jr nz,8F
1012  8B3C
1013  8B3C              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1014  8B3C              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1015  8B3C              ;	jr 7F
1016  8B3C
1017  8B3C              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1018  8B3C
1019  8B3C              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1020  8B3C              ;	bit 4,a
1021  8B3C              ;	ret z
1022  8B3C
1023  8B3C              ; Ha habido desplazamiento de la entidad maligna.
1024  8B3C              ; Ha llegado a zona de AMADEUS ???
1025  8B3C
1026  8B3C              ;7 ld a,(Coordenada_y)
1027  8B3C              ;	cp $14
1028  8B3C              ;	jr c,1F
1029  8B3C
1030  8B3C              ; ---------
1031  8B3C
1032  8B3C              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1033  8B3C              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1034  8B3C
1035  8B3C              ;	di
1036  8B3C              ;	call Genera_coordenadas_X
1037  8B3C              ;	call Compara_coordenadas_X
1038  8B3C              ;	ei
1039  8B3C
1040  8B3C              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1041  8B3C
1042  8B3C              ; ---------
1043  8B3C
1044  8B3C              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1045  8B3C              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1046  8B3C              ;	call Limpia_Variables_de_borrado
1047  8B3C
1048  8B3C              ;3 ret
1049  8B3C
1050  8B3C              ; --------------------------------------------------------------------------------------------------------------
1051  8B3C              ;
1052  8B3C              ;	12/05/24
1053  8B3C
1054  8B3C 3A B6 89     Ajusta_velocidad_entidad ld a,(Velocidad)
1055  8B3F CB 27        	sla a
1056  8B41 32 B6 89     	ld (Velocidad),a
1057  8B44 E6 10        	and $10
1058  8B46 C8           	ret z
1059  8B47
1060  8B47              ; Restaura (Velocidad) a razón del nº de vueltas.
1061  8B47
1062  8B47 3A AC 89     	ld a,(Contador_de_vueltas)
1063  8B4A CB 2F        	sra a
1064  8B4C CB 2F        	sra a
1065  8B4E 32 B6 89     	ld (Velocidad),a
1066  8B51
1067  8B51 2A B0 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1068  8B54 23           	inc hl
1069  8B55 23           	inc hl
1070  8B56 23           	inc hl
1071  8B57 23           	inc hl
1072  8B58 22 B0 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1073  8B5B
1074  8B5B C9           	ret
1075  8B5C
1076  8B5C              ; --------------------------------------------------------------------------------------------------------------
1077  8B5C              ;
1078  8B5C              ;	18/06/24
1079  8B5C
1080  8B5C              Change
1081  8B5C
1082  8B5C 3A 07 8A     	ld a,(Switch)
1083  8B5F EE 01        	xor 1
1084  8B61 32 07 8A     	ld (Switch),a
1085  8B64 2A FB 89     	ld hl,(Album_de_pintado)
1086  8B67 ED 5B FD 89  	ld de,(Album_de_borrado)
1087  8B6B EB           	ex de,hl
1088  8B6C 22 FB 89     	ld (Album_de_pintado),hl
1089  8B6F 22 0A 8A     	ld (Scanlines_album_SP),hl
1090  8B72 ED 53 FD 89  	ld (Album_de_borrado),de
1091  8B76 C9           	ret
1092  8B77
1093  8B77              Change_Amadeus
1094  8B77
1095  8B77 2A FF 89     	ld hl,(Album_de_pintado_Amadeus)
1096  8B7A ED 5B 01 8A  	ld de,(Album_de_borrado_Amadeus)
1097  8B7E EB           	ex de,hl
1098  8B7F 22 FF 89     	ld (Album_de_pintado_Amadeus),hl
1099  8B82 ED 53 01 8A  	ld (Album_de_borrado_Amadeus),de
1100  8B86 C9           	ret
1101  8B87
1102  8B87              ; ------------------------------------
1103  8B87              ;
1104  8B87              ; 1/05/24
1105  8B87
1106  8B87              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1107  8B87              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1108  8B87
1109  8B87              ;	DESTRUYE: HL,DE,A
1110  8B87              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1111  8B87
1112  8B87              ;	Variables implicadas: (RND_SP).
1113  8B87
1114  8B87              Extrae_numero_aleatorio_y_avanza
1115  8B87
1116  8B87 21 9D 86     	ld hl,Tabla_de_pintado
1117  8B8A EB           	ex de,hl
1118  8B8B 2A 1C 8A     	ld hl,(RND_SP)
1119  8B8E EB           	ex de,hl
1120  8B8F A7           	and a
1121  8B90 ED 52        	sbc hl,de
1122  8B92
1123  8B92 2A 1C 8A     	ld hl,(RND_SP)
1124  8B95 20 06        	jr nz,1F
1125  8B97
1126  8B97              ; Sitúa HL al principio de la tabla de nº aleatorios.
1127  8B97
1128  8B97 21 96 86     	ld hl,Numeros_aleatorios
1129  8B9A 22 1C 8A     	ld (RND_SP),HL
1130  8B9D
1131  8B9D              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1132  8B9D
1133  8B9D 7E           1 ld a,(hl)
1134  8B9E 23           	inc hl
1135  8B9F 22 1C 8A     	ld (RND_SP),hl
1136  8BA2 C9           	ret
1137  8BA3
1138  8BA3              ; ------------------------------------
1139  8BA3              ;
1140  8BA3              ; 1/05/24
1141  8BA3
1142  8BA3              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1143  8BA3              ; (1 a 4 segundos).
1144  8BA3              ; Actualizamos (Clock_next_entity) con A.
1145  8BA3
1146  8BA3              ;	DESTRUYE: A y B.
1147  8BA3              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1148  8BA3              ;			 Actualiza (Clock_next_entity) con A.
1149  8BA3
1150  8BA3              ;	Variables implicadas: (Clock_next_entity).
1151  8BA3
1152  8BA3              ; Notas:
1153  8BA3
1154  8BA3              ; 	$32 1 seg.
1155  8BA3              ; 	$64 2 seg.
1156  8BA3              ; 	$96 3 seg.
1157  8BA3              ; 	$c8 4 seg.
1158  8BA3              ; 	$fa 5 seg.
1159  8BA3
1160  8BA3              ; $ffff 1310,7 seg, 22 minutos.
1161  8BA3
1162  8BA3              ;	$0100  5 seg. aproximadamente.
1163  8BA3              ;	$0200 10 seg. aproximadamente.
1164  8BA3              ;	$0300 15 seg. aproximadamente.
1165  8BA3              ;	$0400 20 seg. aproximadamente.
1166  8BA3              ;	$0500 25 seg. aproximadamente.
1167  8BA3              ;	$0600 30 seg. aproximadamente.
1168  8BA3
1169  8BA3              Define_Clock_next_entity
1170  8BA3
1171  8BA3 FE 34        	cp $34
1172  8BA5 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1173  8BA7
1174  8BA7              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1175  8BA7
1176  8BA7 4F           3 ld c,a
1177  8BA8 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1178  8BAA 2A 78 5C     	ld hl,(FRAMES)
1179  8BAD A7           	and a
1180  8BAE ED 4A        	adc hl,bc
1181  8BB0 22 1E 8A     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1182  8BB3 C9           	ret
1183  8BB4
1184  8BB4 3E 34        1 ld a,$34
1185  8BB6 18 EF        	jr 3B
1186  8BB8
1187  8BB8              ; ------------------------------------
1188  8BB8              ;
1189  8BB8              ; 18/03/24
1190  8BB8
1191  8BB8              Borra_diferencia
1192  8BB8
1193  8BB8 ED 4B 0A 8A  	ld bc,(Scanlines_album_SP)
1194  8BBC
1195  8BBC 3A 07 8A     	ld a,(Switch)
1196  8BBF A7           	and a
1197  8BC0 28 08        	jr z,2F
1198  8BC2
1199  8BC2 2A 05 8A     	ld hl,(Techo_Scanlines_album_2)
1200  8BC5 11 05 8A     	ld de,Techo_Scanlines_album_2
1201  8BC8 18 06        	jr 3F
1202  8BCA
1203  8BCA 2A 03 8A     2 ld hl,(Techo_Scanlines_album)
1204  8BCD 11 03 8A     	ld de,Techo_Scanlines_album
1205  8BD0
1206  8BD0              ; Diferencia.
1207  8BD0
1208  8BD0 ED 42        3 sbc hl,bc
1209  8BD2
1210  8BD2 C8           	ret z
1211  8BD3 D8           	ret c
1212  8BD4
1213  8BD4              ; Nuevo techo, (más bajo que el anterior).
1214  8BD4              ; Fijamos nuevo techo y borramos bytes sobrantes.
1215  8BD4
1216  8BD4 EB           	ex de,hl
1217  8BD5
1218  8BD5 71           	ld (hl),c
1219  8BD6 2C           	inc l
1220  8BD7 70           	ld (hl),b
1221  8BD8
1222  8BD8 AF           	xor a
1223  8BD9 43           	ld b,e
1224  8BDA
1225  8BDA 2A 0A 8A     	ld hl,(Scanlines_album_SP)
1226  8BDD
1227  8BDD 77           1 ld (hl),a
1228  8BDE 23           	inc hl
1229  8BDF 10 FC        	djnz 1B
1230  8BE1
1231  8BE1              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1232  8BE1
1233  8BE1 21 10 8A     	ld hl,Ctrl_3
1234  8BE4 CB DE        	set 3,(hl)
1235  8BE6
1236  8BE6 C9           	ret
1237  8BE7
1238  8BE7              ; --------------------------------------------------------------------------------------------------------------
1239  8BE7              ;
1240  8BE7              ;	26/3/24
1241  8BE7
1242  8BE7              Recauda_informacion_de_entidad_en_curso
1243  8BE7
1244  8BE7              ; Almacena la Coordenada Y de la entidad en curso.
1245  8BE7
1246  8BE7              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1247  8BE7
1248  8BE7 3A AB 89     	ld a,(Coordenada_y)
1249  8BEA 2A 0C 8A     	ld hl,(India_SP)
1250  8BED 77           	ld (hl),a
1251  8BEE 2C           	inc l
1252  8BEF
1253  8BEF              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1254  8BEF
1255  8BEF              ;	ld de,(Scanlines_album_SP)
1256  8BEF
1257  8BEF 73           	ld (hl),e
1258  8BF0 2C           	inc l
1259  8BF1 72           	ld (hl),d
1260  8BF2 2C           	inc l
1261  8BF3
1262  8BF3 22 0C 8A     	ld (India_SP),hl
1263  8BF6
1264  8BF6 C9           	ret
1265  8BF7
1266  8BF7              ; --------------------------------------------------------------------------------------------------------------
1267  8BF7              ;
1268  8BF7              ;	27/03/24
1269  8BF7              ;
1270  8BF7
1271  8BF7              Inicializa_India_y_limpia_Tabla_de_impresion
1272  8BF7
1273  8BF7 2A 0C 8A     	ld hl,(India_SP)
1274  8BFA 01 B5 86     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1275  8BFD
1276  8BFD 79           	ld a,c
1277  8BFE 95           	sub l
1278  8BFF 28 06        	jr z,2F
1279  8C01 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1280  8C02              ;														; _ y pasamos a inicializar (India_SP).
1281  8C02 AF           	xor a
1282  8C03
1283  8C03 77           1 ld (hl),a
1284  8C04 2C           	inc l
1285  8C05 10 FC        	djnz 1B												; Limpia Tabla.
1286  8C07
1287  8C07 21 9D 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1288  8C0A 22 0C 8A     	ld (India_SP),hl
1289  8C0D
1290  8C0D C9           	ret
1291  8C0E
1292  8C0E              ; --------------------------------------------------------------------------------------------------------------
1293  8C0E              ;
1294  8C0E              ;	31/3/24
1295  8C0E
1296  8C0E              Ordena_tabla_de_impresion
1297  8C0E
1298  8C0E              ; 5794 T/states.
1299  8C0E              ; 6278 T/states.
1300  8C0E              ; 5310 T/states.
1301  8C0E
1302  8C0E              ; Inicializamos punteros (India_SP) e (India_2_SP).
1303  8C0E              ; Inicializamos contador de comparaciones, [C].
1304  8C0E              ; Cargamos los registros A y B para efectuar comparación.
1305  8C0E
1306  8C0E FD 2E 00     	ld iyl,0
1307  8C11
1308  8C11 3A F1 89     	ld a,(Entidades_en_curso)
1309  8C14 FE 04        	cp 4 	;	4
1310  8C16 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1311  8C17
1312  8C17 3D           	dec a
1313  8C18 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1314  8C19 51           	ld d,c 										; Copia de respaldo.
1315  8C1A
1316  8C1A 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1317  8C1B
1318  8C1B 21 A0 86     	ld hl,Tabla_de_pintado+3
1319  8C1E 46           	ld b,(hl)
1320  8C1F 22 0E 8A     	ld (India_2_SP),hl
1321  8C22
1322  8C22 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1323  8C23 DC 4B 8C     	call c, Avanza_India_2_SP
1324  8C26 CC 4B 8C     	call z, Avanza_India_2_SP
1325  8C29
1326  8C29 FD 2D        	dec iyl
1327  8C2B 28 18        	jr z,2F
1328  8C2D
1329  8C2D
1330  8C2D              ; --------------------------------------------------------------------------------------------------------------
1331  8C2D              ;
1332  8C2D              ;	7/4/24
1333  8C2D
1334  8C2D              Trueque
1335  8C2D
1336  8C2D              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1337  8C2D              ;  			A contiene en nº de fila de (India_SP).
1338  8C2D              ;			HL contiene (India_2_SP).
1339  8C2D
1340  8C2D D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1341  8C2E E5           	push hl										; Preservo (India_2_SP).
1342  8C2F
1343  8C2F ED 5B 0C 8A  	ld de,(India_SP)
1344  8C33 EB           	ex de,hl
1345  8C34 70           	ld (hl),b
1346  8C35 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1347  8C36
1348  8C36 CD 77 8C     	call Intercambia_1_byte
1349  8C39 CD 77 8C     	call Intercambia_1_byte
1350  8C3C
1351  8C3C
1352  8C3C              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1353  8C3C              ; Recuperamos (India_2_SP) en HL.
1354  8C3C
1355  8C3C 2A 0C 8A     	ld hl,(India_SP)
1356  8C3F 7E           	ld a,(hl)
1357  8C40
1358  8C40 E1           	pop hl
1359  8C41 D1           	pop de
1360  8C42
1361  8C42              ; --------------------------------------------------------------------------------------------------------------
1362  8C42
1363  8C42 CD 4B 8C     	call Avanza_India_2_SP
1364  8C45
1365  8C45 14           2 inc d
1366  8C46 15           	dec d
1367  8C47 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1368  8C48 18 D8        	jr 1B
1369  8C4A
1370  8C4A C9           	ret
1371  8C4B
1372  8C4B              ; ----- ----- ----- ----- -----
1373  8C4B
1374  8C4B              Avanza_India_2_SP
1375  8C4B
1376  8C4B 0D           	dec c
1377  8C4C 28 0A        	jr z,Avanza_punteros_indios
1378  8C4E
1379  8C4E FD 2C        	inc iyl
1380  8C50
1381  8C50 2C           	inc l
1382  8C51 2C           	inc l
1383  8C52 2C           	inc l
1384  8C53
1385  8C53 46           	ld b,(hl)
1386  8C54 22 0E 8A     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1387  8C57
1388  8C57 C9           	ret
1389  8C58
1390  8C58              ; ----- ----- ----- ----- -----
1391  8C58
1392  8C58              Avanza_punteros_indios
1393  8C58
1394  8C58 15           	dec d
1395  8C59 28 15        	jr z,Prepara_salida
1396  8C5B
1397  8C5B 4A           	ld c,d
1398  8C5C
1399  8C5C 2A 0C 8A     	ld hl,(India_SP)
1400  8C5F 2C           	inc l
1401  8C60 2C           	inc l
1402  8C61 2C           	inc l
1403  8C62 7E           	ld a,(hl)
1404  8C63 22 0C 8A     	ld (India_SP),hl
1405  8C66
1406  8C66 2C           	inc l
1407  8C67 2C           	inc l
1408  8C68 2C           	inc l
1409  8C69 46           	ld b,(hl)
1410  8C6A 22 0E 8A     	ld (India_2_SP),hl
1411  8C6D
1412  8C6D FD 2C        	inc iyl
1413  8C6F
1414  8C6F C9           	ret
1415  8C70
1416  8C70              Prepara_salida
1417  8C70
1418  8C70 21 9D 86     	ld hl,Tabla_de_pintado
1419  8C73 22 0C 8A     	ld (India_SP),hl
1420  8C76 C9           	ret
1421  8C77
1422  8C77
1423  8C77 2C           Intercambia_1_byte inc l
1424  8C78 1C           	inc e
1425  8C79 46           	ld b,(hl)
1426  8C7A 1A           	ld a,(de)
1427  8C7B EB           	ex de,hl
1428  8C7C 70           	ld (hl),b
1429  8C7D 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1430  8C7E C9           	ret
1431  8C7F
1432  8C7F              ; -----------------------------------------------------------------------------------
1433  8C7F              ;
1434  8C7F              ;	20/01/24
1435  8C7F              ;
1436  8C7F              ;
1437  8C7F
1438  8C7F              Construye_movimientos_masticados_entidad
1439  8C7F
1440  8C7F 2A B0 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1441  8C82 E5           	push hl
1442  8C83 CD C6 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1443  8C86              ;															; _ el (Contador_de_mov_masticados).
1444  8C86 CD 61 8D     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1445  8C89              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1446  8C89 CD 0C 95     	call Recompone_posicion_inicio
1447  8C8C
1448  8C8C CD 3C 92     1 call Draw
1449  8C8F CD AB 8C     	call Guarda_movimiento_masticado
1450  8C92
1451  8C92 CD B9 98     	call Movimiento
1452  8C95
1453  8C95 3A 10 8A     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1454  8C98 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1455  8C9A 28 F0        	jr z,1B
1456  8C9C
1457  8C9C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1458  8C9C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1459  8C9C
1460  8C9C E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1461  8C9D 22 B0 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1462  8CA0
1463  8CA0              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1464  8CA0
1465  8CA0 CD 1D 9A     	call Situa_en_contador_general_de_mov_masticados
1466  8CA3
1467  8CA3              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1468  8CA3              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1469  8CA3
1470  8CA3 ED 4B B2 89  	ld bc,(Contador_de_mov_masticados)
1471  8CA7
1472  8CA7 71           	ld (hl),c
1473  8CA8 23           	inc hl
1474  8CA9 70           	ld (hl),b
1475  8CAA
1476  8CAA C9           	ret
1477  8CAB
1478  8CAB              ; -----------------------------------------------------------------------------------
1479  8CAB              ;
1480  8CAB              ;	28/12/23
1481  8CAB              ;
1482  8CAB              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1483  8CAB              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1484  8CAB
1485  8CAB              Guarda_movimiento_masticado
1486  8CAB
1487  8CAB ED 73 F7 89  	ld (Stack),sp
1488  8CAF ED 7B B0 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1489  8CB3
1490  8CB3 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1491  8CB5 FD E5            push iy 												; Pushea Puntero_objeto.
1492  8CB7
1493  8CB7 ED 7B F7 89      ld sp,(Stack)
1494  8CBB
1495  8CBB 2A B2 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1496  8CBE 23           	inc hl
1497  8CBF 22 B2 89     	ld (Contador_de_mov_masticados),hl
1498  8CC2
1499  8CC2 CD C6 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1500  8CC5              ;															; _ el (Contador_de_mov_masticados).
1501  8CC5 C9               ret
1502  8CC6
1503  8CC6              ; --------------------------------------------------------------------------------------------------------------
1504  8CC6              ;
1505  8CC6              ;	12/1/24
1506  8CC6              ;
1507  8CC6              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1508  8CC6
1509  8CC6              Actualiza_Puntero_de_almacen_de_mov_masticados
1510  8CC6
1511  8CC6 2A B0 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1512  8CC9 01 04 00     	ld bc,4
1513  8CCC A7           	and a
1514  8CCD ED 4A        	adc hl,bc
1515  8CCF 22 B0 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1516  8CD2 C9           	ret
1517  8CD3
1518  8CD3              ; --------------------------------------------------------------------------------------------------------------
1519  8CD3              ;
1520  8CD3              ;	24/03/24
1521  8CD3              ;
1522  8CD3              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1523  8CD3              ;
1524  8CD3              ;	IX contiene el puntero de impresión.
1525  8CD3              ;	DE contiene (Puntero_objeto).
1526  8CD3
1527  8CD3
1528  8CD3              Cargamos_registros_con_mov_masticado
1529  8CD3
1530  8CD3 ED 73 F7 89  	ld (Stack),sp
1531  8CD7 ED 7B B0 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1532  8CDB
1533  8CDB D1           	pop de 															; DE contiene Puntero_objeto
1534  8CDC DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1535  8CDE
1536  8CDE ED 73 B0 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1537  8CE2 ED 7B F7 89  	ld sp,(Stack)
1538  8CE6
1539  8CE6 7B           	ld a,e
1540  8CE7 82           	add d															; Comprueba si ya no hay datos en el almacén.
1541  8CE8
1542  8CE8 CC C5 AB     	call z,Reinicia_entidad_maliciosa
1543  8CEB
1544  8CEB C9           	ret
1545  8CEC
1546  8CEC              ;	6/7/24
1547  8CEC
1548  8CEC              Cargamos_registros_con_explosion
1549  8CEC
1550  8CEC 2A B0 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1551  8CEF CD 5B 8D     	call Extrae_address
1552  8CF2
1553  8CF2 5D           	ld e,l
1554  8CF3 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1555  8CF4
1556  8CF4 DD 2A AE 89  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1557  8CF8
1558  8CF8 C9           	ret
1559  8CF9
1560  8CF9              ; --------------------------------------------------------------------------------------------------------------
1561  8CF9              ;
1562  8CF9              ;	17/06/24
1563  8CF9              ;
1564  8CF9              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1565  8CF9              ;
1566  8CF9              ;	IX contiene el puntero de impresión.
1567  8CF9              ;	DE contiene (Puntero_objeto).
1568  8CF9
1569  8CF9
1570  8CF9              Cargamos_registros_con_mov_masticado_Amadeus
1571  8CF9
1572  8CF9 ED 73 F7 89  	ld (Stack),sp
1573  8CFD ED 7B 56 87  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1574  8D01 D1           	pop de 															; DE contiene Puntero_objeto
1575  8D02 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1576  8D04 DD 22 54 87  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1577  8D08 ED 7B F7 89  	ld sp,(Stack)
1578  8D0C C9           	ret
1579  8D0D
1580  8D0D              ; ---------------------------------------------------------------------------------------------------------------------
1581  8D0D              ;
1582  8D0D              ;	18/6/24
1583  8D0D              ;
1584  8D0D              ;	Genera la coordenada X de Amadeus y los datos de impresión en la nave en su (Album_de_pintado_Amadeus).
1585  8D0D
1586  8D0D              Genera_datos_de_impresion_Amadeus
1587  8D0D
1588  8D0D CD F9 8C     	call Cargamos_registros_con_mov_masticado_Amadeus
1589  8D10
1590  8D10 DD 7D        	ld a,ixl
1591  8D12 E6 1F        	and $1f
1592  8D14 32 50 87     	ld (CX_Amadeus),a 													; Coordenada X del Amadeus, (0-$1f). Columnas.
1593  8D17
1594  8D17 2A 0A 8A     	ld hl,(Scanlines_album_SP)
1595  8D1A E5           	push hl
1596  8D1B
1597  8D1B 2A FF 89     	ld hl,(Album_de_pintado_Amadeus)
1598  8D1E 22 0A 8A     	ld (Scanlines_album_SP),hl
1599  8D21
1600  8D21 CD 41 AD     	call Genera_datos_de_impresion
1601  8D24
1602  8D24 E1           	pop hl
1603  8D25 22 0A 8A     	ld (Scanlines_album_SP),hl
1604  8D28
1605  8D28 C9           	ret
1606  8D29
1607  8D29              ; ---------------------------------------------------------------------------------------------------------------------
1608  8D29              ;
1609  8D29              ;	13/03/24
1610  8D29              ;
1611  8D29
1612  8D29              Inicia_albumes_de_lineas
1613  8D29
1614  8D29              ;	Entidades.
1615  8D29
1616  8D29 21 00 80     	ld hl,Scanlines_album
1617  8D2C 22 FB 89     	ld (Album_de_pintado),hl
1618  8D2F 22 0A 8A     	ld (Scanlines_album_SP),hl
1619  8D32
1620  8D32 21 00 90     	ld hl,Scanlines_album_2
1621  8D35 22 FD 89     	ld (Album_de_borrado),hl
1622  8D38
1623  8D38              ;	Amadeus.
1624  8D38
1625  8D38 21 20 81     	ld hl,Amadeus_scanlines_album
1626  8D3B 22 FF 89     	ld (Album_de_pintado_Amadeus),hl
1627  8D3E 21 43 81     	ld hl,Amadeus_scanlines_album_2
1628  8D41 22 01 8A     	ld (Album_de_borrado_Amadeus),hl
1629  8D44
1630  8D44 C9           	ret
1631  8D45
1632  8D45
1633  8D45
1634  8D45              ; ---------------------------------------------------------------------------------------------------------------------
1635  8D45              ;
1636  8D45              ; 8/1/23
1637  8D45              ;
1638  8D45              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1639  8D45              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1640  8D45              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1641  8D45
1642  8D45              ; Destruye HL y DE !!!!!
1643  8D45
1644  8D45              Inicia_punteros_de_cajas
1645  8D45
1646  8D45 21 3C 87     	ld hl,Indice_de_cajas_de_entidades
1647  8D48 CD 5B 8D         call Extrae_address
1648  8D4B 22 E9 89         ld (Puntero_store_caja),hl
1649  8D4E 21 3E 87     	ld hl,Indice_de_cajas_de_entidades+2
1650  8D51 22 ED 89     	ld (Indice_restore_caja),hl
1651  8D54 CD 5B 8D     	call Extrae_address
1652  8D57 22 EB 89     	ld (Puntero_restore_caja),hl
1653  8D5A C9               ret
1654  8D5B
1655  8D5B              ; *************************************************************************************************************************************************************
1656  8D5B              ;
1657  8D5B              ; 8/1/23
1658  8D5B              ;
1659  8D5B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1660  8D5B
1661  8D5B              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1662  8D5B              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1663  8D5B              ;	ret
1664  8D5B              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1665  8D5B              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1666  8D5B              ;	ret
1667  8D5B
1668  8D5B              ; *************************************************************************************************************************************************************
1669  8D5B              ;
1670  8D5B              ; 20/10/22
1671  8D5B              ;
1672  8D5B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1673  8D5B              ;
1674  8D5B              ; Destruye el puntero y DE !!!!!
1675  8D5B
1676  8D5B 5E           Extrae_address ld e,(hl)
1677  8D5C 23           	inc hl
1678  8D5D 56           	ld d,(hl)
1679  8D5E 2B           	dec hl
1680  8D5F EB           	ex de,hl
1681  8D60 C9           	ret
1682  8D61
1683  8D61              ; *************************************************************************************************************************************************************
1684  8D61              ;
1685  8D61              ;	20/1/24
1686  8D61              ;
1687  8D61              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1688  8D61              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1689  8D61              ;
1690  8D61              ;   Destruye HL y BC !!!!!,
1691  8D61              ;
1692  8D61              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1693  8D61              ;					"0" ..... Izquierda.
1694  8D61
1695  8D61              Inicia_Puntero_objeto
1696  8D61
1697  8D61 3A C8 89     	ld a,(Cuad_objeto)
1698  8D64 E6 01        	and 1
1699  8D66 F5           	push af
1700  8D67 CC 83 8D     	call z,Inicia_puntero_objeto_izq
1701  8D6A F1           	pop af
1702  8D6B C8           	ret z
1703  8D6C CD 70 8D     	call Inicia_puntero_objeto_der
1704  8D6F C9           	ret
1705  8D70
1706  8D70              ; Arrancamos desde la parte izquierda de la pantalla.
1707  8D70              ; Iniciamos (Indice_Sprite_der).
1708  8D70
1709  8D70 2A BE 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1710  8D73 22 C2 89     	ld (Puntero_DESPLZ_der),hl
1711  8D76 CD 5B 8D     	call Extrae_address
1712  8D79 22 BB 89     	ld (Puntero_objeto),hl
1713  8D7C
1714  8D7C 2A C0 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1715  8D7F 22 C4 89     	ld (Puntero_DESPLZ_izq),hl
1716  8D82 C9           	ret
1717  8D83
1718  8D83              ; Arrancamos desde la parte derecha de la pantalla.
1719  8D83              ; Iniciamos (Indice_Sprite_izq).
1720  8D83
1721  8D83 2A C0 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1722  8D86 22 C4 89     	ld (Puntero_DESPLZ_izq),hl
1723  8D89 CD 5B 8D     	call Extrae_address
1724  8D8C 22 BB 89     	ld (Puntero_objeto),hl
1725  8D8F
1726  8D8F 2A BE 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1727  8D92 22 C2 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1728  8D95 C9           	ret
1729  8D96
1730  8D96              ; **************************************************************************************************
1731  8D96              ;
1732  8D96              ;	06/07/24
1733  8D96              ;
1734  8D96              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1735  8D96
1736  8D96              Restore_entidad
1737  8D96
1738  8D96 2A E9 89     	ld hl,(Puntero_store_caja)
1739  8D99 7E           	ld a,(hl)
1740  8D9A A7           	and a
1741  8D9B CC A9 8D     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1742  8D9E 28 F6        	jr z,Restore_entidad
1743  8DA0
1744  8DA0 11 A9 89     	ld de,Bandeja_DRAW
1745  8DA3 01 0E 00     	ld bc,14
1746  8DA6 ED B0        	ldir
1747  8DA8 C9           	ret
1748  8DA9
1749  8DA9              ; **************************************************************************************************
1750  8DA9              ;
1751  8DA9              ;	08/05/23
1752  8DA9              ;
1753  8DA9              ;	Incrementamos los dos punteros de entidades. (+1).
1754  8DA9
1755  8DA9              Incrementa_punteros_de_cajas
1756  8DA9
1757  8DA9 2A EB 89     	ld hl,(Puntero_restore_caja)
1758  8DAC 22 E9 89     	ld (Puntero_store_caja),hl
1759  8DAF 2A ED 89     	ld hl,(Indice_restore_caja)
1760  8DB2 23           	inc hl
1761  8DB3 23           	inc hl
1762  8DB4 22 ED 89     	ld (Indice_restore_caja),hl
1763  8DB7 CD 5B 8D         call Extrae_address
1764  8DBA 22 EB 89         ld (Puntero_restore_caja),hl
1765  8DBD C9               ret
1766  8DBE
1767  8DBE              ; -----------------------------------------------------------
1768  8DBE
1769  8DBE              ; Teclado.
1770  8DBE
1771  8DBE 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1772  8DC0 DB FE        	in a,($fe)
1773  8DC2 E6 01        	and $01
1774  8DC4 28 02        	jr z,1f
1775  8DC6 18 F6        	jr Pulsa_ENTER
1776  8DC8 C9           1 ret
1777  8DC9
1778  8DC9              ; **************************************************************************************************
1779  8DC9              ;
1780  8DC9              ; Temporización.
1781  8DC9
1782  8DC9              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1783  8DC9              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1784  8DC9              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1785  8DC9              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1786  8DC9
1787  8DC9              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1788  8DC9              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1789  8DC9              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1790  8DC9
1791  8DC9              ; A partir de $4f61 no hace falta DELAY.
1792  8DC9
1793  8DC9              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1794  8DC9
1795  8DC9 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1796  8DCC 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1797  8DCD 78           	LD A,B
1798  8DCE A7           	AND A
1799  8DCF 20 FB        	JR NZ,wait
1800  8DD1 C9           	RET
1801  8DD2
1802  8DD2              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1803  8DD2              ;
1804  8DD2              ;	4/6/24
1805  8DD2              ;
1806  8DD2              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1807  8DD2              ;
1808  8DD2              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1809  8DD2              ;
1810  8DD2
1811  8DD2              Actualiza_pantalla
1812  8DD2
1813  8DD2 3E 02        	ld a,2
1814  8DD4 D3 FE        	out ($fe),a
1815  8DD6
1816  8DD6 3A 10 8A     	ld a,(Ctrl_3)
1817  8DD9 CB 47        	bit 0,a
1818  8DDB 28 2C        	jr z,Ejecuta_shield												; No pintamos si el FRAME no se ha completado.
1819  8DDD CB 57        	bit 2,a
1820  8DDF 28 28        	jr z,Ejecuta_shield                                             ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
1821  8DE1
1822  8DE1              Borrando_entidades
1823  8DE1
1824  8DE1 2A 0A 8A     	ld hl,(Scanlines_album_SP)
1825  8DE4 CD 5B 8D     	call Extrae_address
1826  8DE7 24           	inc h
1827  8DE8 25           	dec h
1828  8DE9 28 05        	jr z,Pintando_entidades
1829  8DEB CD 19 91     	call Pinta_Sprites
1830  8DEE 18 F1        	jr Borrando_entidades
1831  8DF0
1832  8DF0              Pintando_entidades
1833  8DF0
1834  8DF0 2A 0C 8A     	ld hl,(India_SP)
1835  8DF3 2C           	inc l
1836  8DF4 CD 5B 8D     	call Extrae_address
1837  8DF7 24           	inc h
1838  8DF8 25           	dec h
1839  8DF9 28 0E        	jr z,Borrando_Amadeus
1840  8DFB 1C           	inc e
1841  8DFC 1C           	inc e
1842  8DFD ED 53 0C 8A  	ld (India_SP),de
1843  8E01 CD 5B 8D     	call Extrae_address
1844  8E04 CD 19 91     	call Pinta_Sprites
1845  8E07 18 E7        	jr Pintando_entidades
1846  8E09
1847  8E09              Ejecuta_shield
1848  8E09
1849  8E09
1850  8E09
1851  8E09
1852  8E09
1853  8E09
1854  8E09              Borrando_Amadeus
1855  8E09
1856  8E09 21 10 8A     	ld hl,Ctrl_3
1857  8E0C CB 6E        	bit 5,(hl)
1858  8E0E 28 1A        	jr z,1F															; No pintamos. No hay movimiento.
1859  8E10
1860  8E10 2A 01 8A     	ld hl,(Album_de_borrado_Amadeus)
1861  8E13 CD 5B 8D     	call Extrae_address
1862  8E16 24           	inc h
1863  8E17 25           	dec h
1864  8E18 28 03        	jr z,Pintando_Amadeus
1865  8E1A CD 19 91     	call Pinta_Sprites
1866  8E1D
1867  8E1D              Pintando_Amadeus
1868  8E1D
1869  8E1D 2A FF 89     	ld hl,(Album_de_pintado_Amadeus)
1870  8E20 CD 5B 8D     	call Extrae_address
1871  8E23 24           	inc h
1872  8E24 25           	dec h
1873  8E25 28 03        	jr z,1F
1874  8E27 CD 19 91     	call Pinta_Sprites
1875  8E2A
1876  8E2A 21 10 8A     1 ld hl,Ctrl_3
1877  8E2D CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1878  8E2F CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1879  8E31 CB AE        	res 5,(hl)
1880  8E33
1881  8E33 3E 01        	ld a,1												; Borde azul.
1882  8E35 D3 FE        	out ($fe),a
1883  8E37
1884  8E37 C9           	ret
1885  8E38
1886  8E38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1887  8E38              ;
1888  8E38              ;	19/6/24
1889  8E38              ;
1890  8E38
1891  8E38              Teclado
1892  8E38
1893  8E38              ; Examina_disparo
1894  8E38
1895  8E38 3A 21 8A     	ld a,(Disparo_Amadeus)
1896  8E3B 3D           	dec a
1897  8E3C 20 14        	jr nz,1F
1898  8E3E
1899  8E3E 3E F7        	ld a,$f7													; "5" para disparar.
1900  8E40 DB FE        	in a,($fe)
1901  8E42 E6 10        	and $10
1902  8E44
1903  8E44              ;	push af
1904  8E44              ;	call z,Genera_disparo
1905  8E44              ;	pop af
1906  8E44
1907  8E44 20 0C        	jr nz,1F
1908  8E46
1909  8E46 3A 21 8A     	ld a,(Disparo_Amadeus)
1910  8E49 EE 01        	xor 1
1911  8E4B 32 21 8A     	ld (Disparo_Amadeus),a
1912  8E4E
1913  8E4E F3           	di
1914  8E4F 18 FE        	jr $
1915  8E51 FB           	ei
1916  8E52
1917  8E52 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1918  8E54 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1919  8E56 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1920  8E58 CC 86 98         call z,Amadeus_a_izquierda
1921  8E5B
1922  8E5B 3E F7        	ld a,$f7
1923  8E5D DB FE        	in a,($fe)
1924  8E5F E6 01        	and $01
1925  8E61 C8           	ret z
1926  8E62
1927  8E62 3E F7        	ld a,$f7
1928  8E64 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1929  8E66 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1930  8E68 CC 9E 98     	call z,Amadeus_a_derecha
1931  8E6B
1932  8E6B C9           	ret
1933  8E6C
1934  8E6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1935  8E6C              ;
1936  8E6C              ;	Rutina provisional para que los malotes cagen balas.
1937  8E6C
1938  8E6C              ;Detecta_disparo_entidad
1939  8E6C
1940  8E6C              ;	ld a,(Disparo_entidad)
1941  8E6C              ;	and a
1942  8E6C              ;	ret z
1943  8E6C
1944  8E6C              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1945  8E6C
1946  8E6C              ;	ld a,$7f				; Detecta SPACE.
1947  8E6C              ;	in a,($fe)
1948  8E6C              ;	and 1
1949  8E6C              ;	ret nz
1950  8E6C
1951  8E6C              ;	call Genera_disparo
1952  8E6C              ;	ret
1953  8E6C              ; ------------------------------------------------------------------------------------------------------------------------
1954  8E6C              ;
1955  8E6C              ;	06/07/24
1956  8E6C              ;
1957  8E6C
1958  8E6C              Genera_explosion
1959  8E6C
1960  8E6C 21 1B 8A     	ld hl,Clock_explosion
1961  8E6F 35           	dec (hl)
1962  8E70 28 0A        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1963  8E72
1964  8E72              Borra_entidad_colisionada
1965  8E72
1966  8E72 CD E7 8B     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1967  8E75 CD EC 8C     	call Cargamos_registros_con_explosion
1968  8E78 CD 41 AD     	call Genera_datos_de_impresion
1969  8E7B C9           	ret
1970  8E7C
1971  8E7C              Siguiente_frame_explosion
1972  8E7C
1973  8E7C 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1974  8E7E
1975  8E7E              ; Avanza Frame de explosión.
1976  8E7E
1977  8E7E 2A B0 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1978  8E81 01 94 85     	ld bc,Explosion_2x3_1-2
1979  8E84 79           	ld a,c
1980  8E85 95           	sub l
1981  8E86 20 07        	jr nz,1F
1982  8E88
1983  8E88              ; Fín de la entidad !!!!!!!!!!!!!
1984  8E88
1985  8E88 21 F1 89     	ld hl,Entidades_en_curso
1986  8E8B 35           	dec (hl)
1987  8E8C
1988  8E8C CD 9A AB     	call Limpiamos_bandeja_DRAW
1989  8E8F
1990  8E8F              ;	ld hl,Impacto2
1991  8E8F              ;	set 3,(hl)
1992  8E8F              ;	ret
1993  8E8F
1994  8E8F 2C           1 inc l
1995  8E90 2C           	inc l
1996  8E91 22 B0 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1997  8E94
1998  8E94 CD E7 8B     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1999  8E97 CD EC 8C     	call Cargamos_registros_con_explosion
2000  8E9A CD 41 AD     	call Genera_datos_de_impresion
2001  8E9D C9           	ret
2002  8E9E
2003  8E9E              ; ---------------------------------------------------------------
2004  8E9E
2005  8E9E              	org $aa7f
2006  AA7F
2007  AA7F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ AA7F              ; ******************************************************************************************************************************************************************************************
   2+ AA7F              ;
   3+ AA7F              ;   21/04/24
   4+ AA7F              ;
   5+ AA7F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ AA7F              ;   (XOR) bit a bit.
   7+ AA7F              ;
   8+ AA7F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ AA7F
  10+ AA7F              Derivando_RND
  11+ AA7F
  12+ AA7F 21 96 86         ld hl,Numeros_aleatorios
  13+ AA82
  14+ AA82 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ AA84 C5               push bc
  16+ AA85              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ AA85 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ AA88              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ AA88
  20+ AA88 A7           6 and a                                 ; Carry a "0".
  21+ AA89 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ AA8B 30 02            jr nc,1F
  23+ AA8D
  24+ AA8D CB C1            set 0,c
  25+ AA8F
  26+ AA8F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ AA90 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ AA92 5F               ld e,a
  29+ AA93
  30+ AA93 7A               ld a,d
  31+ AA94 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ AA96 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ AA98
  34+ AA98 CB 3F            srl a
  35+ AA9A
  36+ AA9A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ AA9B
  38+ AA9B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ AA9C 28 04            jr z,4F
  40+ AA9E
  41+ AA9E CB FF            set 7,a
  42+ AAA0 18 02            jr 5F
  43+ AAA2
  44+ AAA2 CB BF        4 res 7,a
  45+ AAA4
  46+ AAA4 CB 21        5 sla c
  47+ AAA6 10 E0            djnz 6B
  48+ AAA8
  49+ AAA8 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ AAA9
  51+ AAA9 77               ld (hl),a
  52+ AAAA 23               inc hl
  53+ AAAB C1               pop bc
  54+ AAAC 10 D4            djnz 3B
  55+ AAAE
  56+ AAAE C9               ret
  57+ AAAF
  58+ AAAF
  59+ AAAF
# file closed: RND_Derivando.asm
2008  AAAF              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AAAF              ;---------------------------------------------------------------------------------------------------------------
   2+ AAAF              ;
   3+ AAAF              ;   8/3/24
   4+ AAAF              ;
   5+ AAAF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AAAF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AAAF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AAAF              ;	_ de la 1ª entidad del Nivel.
   9+ AAAF              ;
  10+ AAAF              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AAAF
  12+ AAAF              ;	MODIFICA: HL,DE y A.
  13+ AAAF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AAAF
  15+ AAAF              Inicializa_Nivel
  16+ AAAF
  17+ AAAF 2A 23 8A     	ld hl,(Puntero_indice_NIVELES)
  18+ AAB2 CD 5B 8D     	call Extrae_address
  19+ AAB5 7E           	ld a,(hl)
  20+ AAB6 32 EF 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AAB9 23           	inc hl
  22+ AABA CD C7 AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AABD 22 25 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AAC0 CD D0 AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AAC3
  26+ AAC3 CD E1 AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AAC6 C9           	ret
  28+ AAC7
  29+ AAC7              ; ----------------------
  30+ AAC7
  31+ AAC7 11 CE 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AACA 01 04 00     	ld bc,4
  33+ AACD ED B0        	ldir
  34+ AACF C9           	ret
  35+ AAD0
  36+ AAD0 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AAD1 CD 6B AC         call Calcula_salto_en_BC
  38+ AAD4 21 B8 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AAD7 A7               and a
  40+ AAD8 ED 4A            adc hl,bc
  41+ AADA CD 5B 8D         call Extrae_address
  42+ AADD 22 DA 89         ld (Puntero_indice_mov),hl
  43+ AAE0 C9               ret
  44+ AAE1
  45+ AAE1 3A A9 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AAE4 CD 6B AC     	call Calcula_salto_en_BC
  47+ AAE7 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AAEA A7               and a
  49+ AAEB ED 4A            adc hl,bc
  50+ AAED CD 5B 8D         call Extrae_address
  51+ AAF0 22 B0 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AAF3 C9           	ret
  53+ AAF4
  54+ AAF4              ;---------------------------------------------------------------------------------------------------------------
  55+ AAF4              ;
  56+ AAF4              ;   5/1/24
  57+ AAF4              ;
  58+ AAF4              ;	Destruye A,BC,HL,DE
  59+ AAF4
  60+ AAF4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AAF4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AAF4
  63+ AAF4              Inicia_Entidades
  64+ AAF4
  65+ AAF4              ; Preparamos los punteros de las cajas de entidades:
  66+ AAF4
  67+ AAF4 CD 45 8D     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AAF7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AAF7 CD B3 AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AAFA
  71+ AAFA 2A 25 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AAFD
  73+ AAFD 22 25 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AB00
  75+ AB00 CD 19 AC     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AB03
  77+ AB03 2A 25 8A     	ld hl,(Datos_de_nivel)
  78+ AB06
  79+ AB06              ; En este punto:
  80+ AB06              ;
  81+ AB06              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AB06              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AB06
  84+ AB06 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AB07
  86+ AB07 7E           	ld a,(hl)
  87+ AB08 CD 85 AB     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AB0B
  89+ AB0B CD 7D AC     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AB0E
  91+ AB0E              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AB0E
  93+ AB0E CD 3B AC     	call Busca_mov_masticados_segun_tipo
  94+ AB11
  95+ AB11 A7           	and a
  96+ AB12 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AB14
  98+ AB14              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AB14
 100+ AB14              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AB14              ;	_ de este tipo de entidad.
 102+ AB14
 103+ AB14 CD 1D 9A     	call Situa_en_contador_general_de_mov_masticados
 104+ AB17 CD 2A 9A     	call Transfiere_datos_de_contadores
 105+ AB1A
 106+ AB1A 18 06        	jr 4F
 107+ AB1C
 108+ AB1C CD 7F 8C     3 call Construye_movimientos_masticados_entidad
 109+ AB1F
 110+ AB1F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AB1F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AB1F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AB1F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AB1F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AB1F
 116+ AB1F CD F9 AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AB22              ;																; _ Mov_masticados ya generados.
 118+ AB22
 119+ AB22 CD D3 8C     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ AB25
 121+ AB25 DD E5        	push ix
 122+ AB27 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ AB28
 124+ AB28 D5           	push de
 125+ AB29 CD EE AC     	call Genera_coordenadas
 126+ AB2C
 127+ AB2C ED 5B 0A 8A  	ld de,(Scanlines_album_SP)
 128+ AB30 CD E7 8B     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ AB33 D1           	pop de
 130+ AB34
 131+ AB34 CD 41 AD     	call Genera_datos_de_impresion
 132+ AB37              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ AB37              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ AB37              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ AB37              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ AB37
 137+ AB37 CD BD AB     	call Decrementa_Contador_de_mov_masticados
 138+ AB3A
 139+ AB3A              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ AB3A
 141+ AB3A ED 5B E9 89  	ld de,(Puntero_store_caja)
 142+ AB3E CD AA AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ AB41
 144+ AB41 CD 9A AB     	call Limpiamos_bandeja_DRAW
 145+ AB44 CD A9 8D     	call Incrementa_punteros_de_cajas
 146+ AB47
 147+ AB47              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ AB47              ; _ entidad del Nivel.
 149+ AB47
 150+ AB47 3A 11 8A     	ld a,(Ctrl_4)
 151+ AB4A E6 F0        	and $f0
 152+ AB4C 32 11 8A     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ AB4F
 154+ AB4F              ; Siguiente entidad del Nivel.
 155+ AB4F
 156+ AB4F 2A 25 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ AB52 23           	inc hl 														; _ entidad del Nivel.
 158+ AB53
 159+ AB53 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ AB54
 161+ AB54 10 A7        	djnz 2B
 162+ AB56
 163+ AB56 C9           	ret
 164+ AB57
 165+ AB57              ; -------------------------------------------------------------------------------------------------------------------
 166+ AB57              ;
 167+ AB57              ;	27/5/24
 168+ AB57              ;
 169+ AB57              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ AB57              ;
 171+ AB57
 172+ AB57              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ AB57              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ AB57
 175+ AB57 21 DD 87     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ AB5A CD 7D AC     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ AB5D
 178+ AB5D
 179+ AB5D              Construye_movimientos_masticados_Amadeus
 180+ AB5D
 181+ AB5D 2A B0 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ AB60 CD C6 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ AB63              ;															; _ el (Contador_de_mov_masticados).
 184+ AB63 CD 61 8D     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ AB66              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ AB66
 187+ AB66              ; Generamos movimientos masticados de Amadeus.
 188+ AB66
 189+ AB66 06 79        	ld b,121												; $0079, 121d.
 190+ AB68
 191+ AB68 C5           1 push bc
 192+ AB69 CD 3C 92     	call Draw
 193+ AB6C CD AB 8C     	call Guarda_movimiento_masticado
 194+ AB6F
 195+ AB6F CD B0 95     	call Mov_right
 196+ AB72 CD B0 95     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ AB75
 198+ AB75 C1           	pop bc
 199+ AB76 10 F0        	djnz 1B
 200+ AB78
 201+ AB78              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ AB78
 203+ AB78              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ AB78              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ AB78
 206+ AB78 2A B0 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ AB7B 01 08 00     	ld bc,8
 208+ AB7E A7           	and a
 209+ AB7F ED 42        	sbc hl,bc
 210+ AB81 22 B0 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ AB84
 212+ AB84 C9           	ret
 213+ AB85
 214+ AB85              ; ---------------------------------------------------------------------
 215+ AB85              ;
 216+ AB85              ;	10/02/24
 217+ AB85              ;
 218+ AB85              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ AB85              ;
 220+ AB85              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ AB85
 222+ AB85              Definicion_segun_tipo
 223+ AB85
 224+ AB85 CD 6B AC     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ AB88 21 BF 87     	ld hl,Indice_de_definiciones_de_entidades
 226+ AB8B CD 73 AC     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ AB8E C9           	ret
 228+ AB8F
 229+ AB8F              ; ---------------------------------------------------------------------
 230+ AB8F              ;
 231+ AB8F              ;	6/7/24
 232+ AB8F
 233+ AB8F
 234+ AB8F              Store_Restore_cajas
 235+ AB8F
 236+ AB8F ED 5B E9 89  	ld de,(Puntero_store_caja)
 237+ AB93 CD AA AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ AB96 CD A9 8D     	call Incrementa_punteros_de_cajas
 239+ AB99 C9           	ret
 240+ AB9A
 241+ AB9A              ; ---------------------------------------------------------------------
 242+ AB9A              ;
 243+ AB9A              ;	23/6/24
 244+ AB9A              ;
 245+ AB9A              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ AB9A              ;
 247+ AB9A              ;	MODIFY: HL
 248+ AB9A
 249+ AB9A              Limpiamos_bandeja_DRAW
 250+ AB9A
 251+ AB9A ED 73 F7 89  	ld (Stack),sp
 252+ AB9E 31 CE 89     	ld sp,Vel_left
 253+ ABA1
 254+ ABA1 AF           	xor a
 255+ ABA2 67           	ld h,a
 256+ ABA3 6F           	ld l,a
 257+ ABA4
 258+ ABA4 E5           	push hl
 259+ ABA5 E5           	push hl
 260+ ABA6 E5           	push hl
 261+ ABA7 E5           	push hl
 262+ ABA8 E5           	push hl
 263+ ABA9 E5           	push hl
 264+ ABAA E5           	push hl
 265+ ABAB E5           	push hl
 266+ ABAC E5           	push hl
 267+ ABAD E5           	push hl
 268+ ABAE E5           	push hl
 269+ ABAF E5           	push hl
 270+ ABB0 E5           	push hl
 271+ ABB1 E5           	push hl
 272+ ABB2 E5           	push hl
 273+ ABB3 E5           	push hl
 274+ ABB4 E5           	push hl
 275+ ABB5 E5           	push hl
 276+ ABB6
 277+ ABB6 33           	inc sp
 278+ ABB7
 279+ ABB7 E5           	push hl
 280+ ABB8 ED 7B F7 89  	ld sp,(Stack)
 281+ ABBC
 282+ ABBC C9           	ret
 283+ ABBD
 284+ ABBD              ; ---------------------------------------------------------------------
 285+ ABBD              ;
 286+ ABBD              ;	24/03/24
 287+ ABBD
 288+ ABBD 2A B2 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ ABC0 2B           	dec hl
 290+ ABC1 22 B2 89     	ld (Contador_de_mov_masticados),hl
 291+ ABC4 C9           	ret
 292+ ABC5
 293+ ABC5              ; ---------------------------------------------------------------------
 294+ ABC5              ;
 295+ ABC5              ;	8/5/24
 296+ ABC5
 297+ ABC5              Reinicia_entidad_maliciosa
 298+ ABC5
 299+ ABC5              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ ABC5
 301+ ABC5 CD 1D 9A     	call Situa_en_contador_general_de_mov_masticados
 302+ ABC8 CD 2A 9A     	call Transfiere_datos_de_contadores
 303+ ABCB
 304+ ABCB              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ ABCB
 306+ ABCB 3A A9 89     	ld a,(Tipo)
 307+ ABCE CD 85 AB     	call Definicion_segun_tipo
 308+ ABD1
 309+ ABD1 E5           	push hl
 310+ ABD2 DD E1        	pop ix
 311+ ABD4
 312+ ABD4 DD 6E 0B     	ld l,(ix+11)
 313+ ABD7 DD 66 0C     	ld h,(ix+12)
 314+ ABDA
 315+ ABDA 22 B0 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ ABDD
 317+ ABDD CD D3 8C     	call Cargamos_registros_con_mov_masticado
 318+ ABE0
 319+ ABE0              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ ABE0              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ ABE0              ; Ejemplos.
 322+ ABE0
 323+ ABE0              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ ABE0              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ ABE0              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ ABE0              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ ABE0              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ ABE0
 329+ ABE0 21 AC 89     	ld hl,Contador_de_vueltas
 330+ ABE3 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ ABE5
 332+ ABE5 7E           	ld a,(hl)
 333+ ABE6 CB 2F        	sra a
 334+ ABE8 CB 2F        	sra a
 335+ ABEA
 336+ ABEA 32 B6 89     	ld (Velocidad),a
 337+ ABED
 338+ ABED 3E 40        	ld a,$40
 339+ ABEF BE           	cp (hl)
 340+ ABF0 C0           	ret nz
 341+ ABF1
 342+ ABF1              ; Límitador.
 343+ ABF1
 344+ ABF1              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ ABF1
 346+ ABF1 CB 2E        	sra (hl)
 347+ ABF3 21 B6 89     	ld hl,Velocidad
 348+ ABF6 CB 2E        	sra (hl)
 349+ ABF8
 350+ ABF8 C9           	ret
 351+ ABF9
 352+ ABF9              ; ---------------------------------------------------------------------
 353+ ABF9              ;
 354+ ABF9              ;	22/01/24
 355+ ABF9
 356+ ABF9 21 11 8A     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ ABFC CB 46        	bit 0,(hl)
 358+ ABFE 20 0D        	jr nz,1F
 359+ AC00 CB 4E        	bit 1,(hl)
 360+ AC02 20 0C        	jr nz,2F
 361+ AC04 CB 56        	bit 2,(hl)
 362+ AC06 20 0B        	jr nz,3F
 363+ AC08 CB 5E        	bit 3,(hl)
 364+ AC0A 20 0A        	jr nz,4F
 365+ AC0C C9           	ret
 366+ AC0D
 367+ AC0D CB E6        1 set 4,(hl)
 368+ AC0F C9           	ret
 369+ AC10 CB EE        2 set 5,(hl)
 370+ AC12 C9           	ret
 371+ AC13 CB F6        3 set 6,(hl)
 372+ AC15 C9           	ret
 373+ AC16 CB FE        4 set 7,(hl)
 374+ AC18 C9           	ret
 375+ AC19
 376+ AC19              ; ---------------------------------------------------------------------
 377+ AC19              ;
 378+ AC19              ;	23/01/24
 379+ AC19              ;
 380+ AC19              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ AC19              ;
 382+ AC19              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ AC19              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ AC19              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ AC19              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ AC19
 387+ AC19              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ AC19
 389+ AC19 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ AC1A 3D           	dec a
 391+ AC1B 20 06        	jr nz,1F
 392+ AC1D
 393+ AC1D              ; --- Tipo_1
 394+ AC1D
 395+ AC1D 21 11 8A     	ld hl,Ctrl_4
 396+ AC20 CB C6        	set 0,(hl)
 397+ AC22 C9           	ret
 398+ AC23
 399+ AC23 3D           1 dec a
 400+ AC24 20 06        	jr nz,2F
 401+ AC26
 402+ AC26              ; --- Tipo_2
 403+ AC26
 404+ AC26 21 11 8A     	ld hl,Ctrl_4
 405+ AC29 CB CE        	set 1,(hl)
 406+ AC2B C9           	ret
 407+ AC2C
 408+ AC2C 3D           2 dec a
 409+ AC2D 20 06        	jr nz,3F
 410+ AC2F
 411+ AC2F              ; --- Tipo_3
 412+ AC2F
 413+ AC2F 21 11 8A     	ld hl,Ctrl_4
 414+ AC32 CB D6        	set 2,(hl)
 415+ AC34 C9           	ret
 416+ AC35
 417+ AC35              ; --- Tipo_3
 418+ AC35
 419+ AC35 21 11 8A     3 ld hl,Ctrl_4
 420+ AC38 CB D6        	set 2,(hl)
 421+ AC3A C9           	ret
 422+ AC3B
 423+ AC3B              ; ---------------------------------------------------------------------
 424+ AC3B              ;
 425+ AC3B              ;	22/01/24
 426+ AC3B
 427+ AC3B 21 11 8A     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ AC3E CB 46        	bit 0,(hl)
 429+ AC40 20 0E        	jr nz,1F
 430+ AC42
 431+ AC42 CB 4E        	bit 1,(hl)
 432+ AC44 20 10        	jr nz,2F
 433+ AC46
 434+ AC46 CB 56        	bit 2,(hl)
 435+ AC48 20 12        	jr nz,3F
 436+ AC4A
 437+ AC4A CB 5E        	bit 3,(hl)
 438+ AC4C 20 14        	jr nz,4F
 439+ AC4E 18 19        	jr 6F
 440+ AC50
 441+ AC50              ; Entidad_de_Tipo_1.
 442+ AC50
 443+ AC50 CB 66        1 bit 4,(hl)
 444+ AC52 28 15        	jr z,6F
 445+ AC54 18 10        	jr 5F
 446+ AC56
 447+ AC56              ; Entidad_de_Tipo_2.
 448+ AC56
 449+ AC56 CB 6E        2 bit 5,(hl)
 450+ AC58 28 0F        	jr z,6F
 451+ AC5A 18 0A        	jr 5F
 452+ AC5C
 453+ AC5C              ; Entidad_de_Tipo_3.
 454+ AC5C
 455+ AC5C CB 76        3 bit 6,(hl)
 456+ AC5E 28 09        	jr z,6F
 457+ AC60 18 04        	jr 5F
 458+ AC62
 459+ AC62              ; Entidad_de_Tipo_4.
 460+ AC62
 461+ AC62 CB 7E        4 bit 7,(hl)
 462+ AC64 28 03        	jr z,6F
 463+ AC66
 464+ AC66              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ AC66
 466+ AC66 AF           5 xor a
 467+ AC67 3C           	inc a
 468+ AC68 C9           	ret
 469+ AC69
 470+ AC69              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ AC69
 472+ AC69 AF           6 xor a
 473+ AC6A C9           	ret
 474+ AC6B
 475+ AC6B              ;	------------------------------------------------------------------------------------
 476+ AC6B              ;
 477+ AC6B              ;	12/01/24
 478+ AC6B              ;
 479+ AC6B              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ AC6B              ;
 481+ AC6B              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ AC6B              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ AC6B
 484+ AC6B CB 27        Calcula_salto_en_BC sla a
 485+ AC6D D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ AC6F 4F           	ld c,a
 487+ AC70 06 00        	ld b,0
 488+ AC72 C9           	ret
 489+ AC73
 490+ AC73              ; ------------------------------------------------------------------
 491+ AC73              ;
 492+ AC73              ;	19/1/24
 493+ AC73              ;
 494+ AC73              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ AC73              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ AC73
 497+ AC73 A7           Situa_en_datos_de_definicion and a
 498+ AC74 ED 4A        	adc hl,bc
 499+ AC76 CD 5B 8D     	call Extrae_address
 500+ AC79 22 F5 89         ld (Datos_de_entidad),hl
 501+ AC7C C9           	ret
 502+ AC7D
 503+ AC7D              ; ------------------------------------------------------------------
 504+ AC7D
 505+ AC7D              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ AC7D              ; 	inc de
 507+ AC7D              ; 	inc de
 508+ AC7D              ; 	ex de,hl
 509+ AC7D              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ AC7D              ; 	ret
 511+ AC7D
 512+ AC7D              ; ----------------------------------------------------------------------------------------------------------
 513+ AC7D              ;
 514+ AC7D              ;	24/6/24
 515+ AC7D              ;
 516+ AC7D              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ AC7D              ;	_ de entidad.
 518+ AC7D              ;
 519+ AC7D              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ AC7D              ;
 521+ AC7D              ;
 522+ AC7D              ;	MODIFICA: HL,DE y BC
 523+ AC7D
 524+ AC7D
 525+ AC7D              Definicion_de_entidad_a_bandeja_DRAW
 526+ AC7D
 527+ AC7D 11 A9 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ AC80 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ AC81 12           	ld (de),a
 530+ AC82 23           	inc hl
 531+ AC83              ;
 532+ AC83 11 B7 89     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ AC86 01 02 00     	ld bc,2
 534+ AC89 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ AC8B              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ AC8B 11 AC 89     	ld de,Contador_de_vueltas
 537+ AC8E 7E           	ld a,(hl)
 538+ AC8F 12           	ld (de),a
 539+ AC90 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ AC91
 541+ AC91 11 BE 89     	ld de,Indice_Sprite_der
 542+ AC94 01 04 00     	ld bc,4
 543+ AC97 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ AC99
 545+ AC99 11 C6 89     	ld de,Posicion_inicio
 546+ AC9C 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ AC9F ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ ACA1
 549+ ACA1 11 B0 89     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ ACA4 01 02 00     	ld bc,2
 551+ ACA7 ED B0        	ldir
 552+ ACA9
 553+ ACA9 C9           	ret
 554+ ACAA
 555+ ACAA              ; ----------------------------------------------------------------------------------------------------------
 556+ ACAA              ;
 557+ ACAA              ;	24/6/24
 558+ ACAA              ;
 559+ ACAA
 560+ ACAA              Parametros_de_bandeja_DRAW_a_caja
 561+ ACAA
 562+ ACAA 21 A9 89     	ld hl,Bandeja_DRAW
 563+ ACAD 01 0E 00     	ld bc,14
 564+ ACB0 ED B0        	ldir													; Hemos volcado (Ctrl_2) y (Velocidad).
 565+ ACB2
 566+ ACB2 C9           	ret
 567+ ACB3
 568+ ACB3              ;---------------------------------------------------------------------------------------------------------------
 569+ ACB3              ;
 570+ ACB3              ;	5/1/24
 571+ ACB3              ;
 572+ ACB3              ;	INICIALIZA (Numero_parcial_de_entidades).
 573+ ACB3              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 574+ ACB3              ;
 575+ ACB3              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 576+ ACB3              ;
 577+ ACB3              ;	(Numero_parcial_de_entidades)="7".
 578+ ACB3              ;
 579+ ACB3              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 580+ ACB3              ;
 581+ ACB3              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 582+ ACB3              ;
 583+ ACB3              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 584+ ACB3              ;	MODIFICA: A y B.
 585+ ACB3              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 586+ ACB3
 587+ ACB3              Inicializa_Numero_parcial_de_entidades
 588+ ACB3
 589+ ACB3              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 590+ ACB3
 591+ ACB3 3A EF 89     	ld a,(Numero_de_entidades)
 592+ ACB6 A7           	and a
 593+ ACB7
 594+ ACB7              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 595+ ACB7              ;	jr z,$
 596+ ACB7              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 597+ ACB7
 598+ ACB7 20 03        	jr nz,3F
 599+ ACB9
 600+ ACB9              ; ---------- ---------- ----------
 601+ ACB9
 602+ ACB9              ;! RESET para pruebas. Omitir esta línea en modo normal.
 603+ ACB9              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 604+ ACB9
 605+ ACB9 CD AF AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 606+ ACBC
 607+ ACBC              ; ---------- ---------- ----------
 608+ ACBC
 609+ ACBC 3A EF 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 610+ ACBF FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 611+ ACC1 38 08        	jr c,1F
 612+ ACC3
 613+ ACC3              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 614+ ACC3              ; Actualizamos variables.
 615+ ACC3
 616+ ACC3 3E 07        	ld a,7
 617+ ACC5 32 F0 89     	ld (Numero_parcial_de_entidades),a
 618+ ACC8 47           	ld b,a
 619+ ACC9 18 04        	jr 2F
 620+ ACCB
 621+ ACCB              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 622+ ACCB              ; (Numero_de_entidades)="0".
 623+ ACCB
 624+ ACCB 32 F0 89     1 ld (Numero_parcial_de_entidades),a
 625+ ACCE 47           	ld b,a
 626+ ACCF C9           2 ret
 627+ ACD0
# file closed: Rutinas_de_inicio_y_niveles.asm
2009  ACD0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ ACD0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ ACD0              ;
   3+ ACD0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ ACD0              ;
   5+ ACD0              ; *****************************************************************************************************************************************************************************************
   6+ ACD0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ ACD0
   8+ ACD0 7C           calcula_tercio ld a,h
   9+ ACD1 E6 18        	and $18
  10+ ACD3 CB 2F        	sra a
  11+ ACD5 CB 2F        	sra a
  12+ ACD7 CB 2F        	sra a
  13+ ACD9 C9           	ret
  14+ ACDA
# file closed: calcula_tercio.asm
2010  ACDA              	include "Cls.asm"
# file opened: Cls.asm
   1+ ACDA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ ACDA              ;
   3+ ACDA              ;
   4+ ACDA              ;	CLS.
   5+ ACDA              ;
   6+ ACDA              ;	Limpia la pantalla y define sus atributos.
   7+ ACDA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ ACDA              ;
   9+ ACDA              ;	COLORES: 0 ..... NEGRO
  10+ ACDA              ;    		 1 ..... AZUL
  11+ ACDA              ; 			 2 ..... ROJO
  12+ ACDA              ;			 3 ..... MAGENTA
  13+ ACDA              ; 			 4 ..... VERDE
  14+ ACDA              ; 			 5 ..... CIAN
  15+ ACDA              ;			 6 ..... AMARILLO
  16+ ACDA              ; 			 7 ..... BLANCO
  17+ ACDA              ;
  18+ ACDA              ;	INPUT: A contiene los atributos de pantalla.
  19+ ACDA              ;
  20+ ACDA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ ACDA
  22+ ACDA
  23+ ACDA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ ACDD 11 01 40     	LD DE,$4001
  25+ ACE0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ ACE3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ ACE5 ED B0        	LDIR
  28+ ACE7 01 FF 02     	LD BC,767
  29+ ACEA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ ACEB ED B0        	LDIR
  31+ ACED C9           	ret
  32+ ACEE
# file closed: Cls.asm
2011  ACEE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ ACEE              ; ------------------------------------------------------------------------
   2+ ACEE              ;
   3+ ACEE              ;	30/1/24
   4+ ACEE              ;
   5+ ACEE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ ACEE              ;	Fila superior "0", Columna izquierda "0".
   7+ ACEE              ;
   8+ ACEE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ ACEE              ;
  10+ ACEE              ;	Modifica: A,BC y DE.
  11+ ACEE
  12+ ACEE 7D           Genera_coordenadas ld a,l
  13+ ACEF E6 1F        	and $1f
  14+ ACF1 32 AA 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ ACF4
  16+ ACF4 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ ACF5 FE 40        	cp $40
  18+ ACF7 38 1C        	jr c,4F
  19+ ACF9
  20+ ACF9 CD D0 AC     	call calcula_tercio
  21+ ACFC 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ ACFD
  23+ ACFD 1E 00        	ld e,0
  24+ ACFF 7D           	ld a,l
  25+ AD00 E6 E0        	and $e0
  26+ AD02 28 01        	jr z,1F
  27+ AD04 04           	inc b
  28+ AD05
  29+ AD05 04           1 inc b
  30+ AD06 05           	dec b
  31+ AD07 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ AD09              ;														; _ , salimos.
  33+ AD09 1C           3 inc e
  34+ AD0A D6 20        	sub 32
  35+ AD0C 20 FB        	jr nz,3B
  36+ AD0E 10 F5        	djnz 1B
  37+ AD10
  38+ AD10 7B           2 ld a,e
  39+ AD11 32 AB 89     	ld (Coordenada_y),a
  40+ AD14 C9           	ret
  41+ AD15
  42+ AD15 AF           4 xor a
  43+ AD16 32 AB 89     	ld (Coordenada_y),a
  44+ AD19 C9           	ret
  45+ AD1A
  46+ AD1A              ; ------------------------------------------------------------------------
  47+ AD1A              ;	28/05/23
  48+ AD1A              ;
  49+ AD1A              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ AD1A              ;	Fila superior "0", Columna izquierda "0".
  51+ AD1A              ;
  52+ AD1A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ AD1A              ;	Output: DE contendrá las coordenadas del disparo:
  54+ AD1A              ;
  55+ AD1A              ;		DE="$120d"
  56+ AD1A              ;
  57+ AD1A              ;		D, (Coordenada_X), Columnas, $12
  58+ AD1A              ;		E, (Coordenada_y), Filas, $0d
  59+ AD1A              ;
  60+ AD1A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ AD1A
  62+ AD1A              ;	Modifica: A,BC y DE.
  63+ AD1A
  64+ AD1A
  65+ AD1A              Genera_coordenadas_disparo
  66+ AD1A
  67+ AD1A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ AD1A
  69+ AD1A 7D           	ld a,l
  70+ AD1B E6 1F        	and $1f
  71+ AD1D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ AD1E CD D0 AC     	call calcula_tercio
  73+ AD21 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ AD22 1E 00        	ld e,0
  75+ AD24 7D           	ld a,l
  76+ AD25 E6 E0        	and $e0
  77+ AD27 28 01        	jr z,1F
  78+ AD29 04           	inc b
  79+ AD2A 1C           1 inc e
  80+ AD2B D6 20        	sub 32
  81+ AD2D 20 FB        	jr nz,1B
  82+ AD2F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ AD31 C9           	ret
  84+ AD32
# file closed: Genera_coordenadas.asm
2012  AD32              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ AD32              ; Relojes y temporizaciones.
   2+ AD32
   3+ AD32              ; ------------------------------------------------------
   4+ AD32              ;
   5+ AD32              ;	16/7/23
   6+ AD32              ;
   7+ AD32              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ AD32              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ AD32              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ AD32              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ AD32              ;
  12+ AD32              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ AD32              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ AD32
  15+ AD32              ; Disparo_entidad db 1
  16+ AD32              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ AD32              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ AD32
  19+ AD32              Habilita_disparos
  20+ AD32
  21+ AD32 7E           	ld a,(hl)
  22+ AD33 A7           	and a
  23+ AD34 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ AD35
  25+ AD35 EB           	ex de,hl
  26+ AD36
  27+ AD36 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ AD37 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ AD38
  30+ AD38              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ AD38
  32+ AD38 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ AD39 7E           	ld a,(hl)
  34+ AD3A 23           	inc hl
  35+ AD3B 77           	ld (hl),a
  36+ AD3C
  37+ AD3C EB           	ex de,hl						; Habilitamos disparo.
  38+ AD3D 3E 01        	ld a,1
  39+ AD3F 77           	ld (hl),a
  40+ AD40 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2013  AD41              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ AD41              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AD41              ;
   3+ AD41              ;	11/03/24
   4+ AD41              ;
   5+ AD41              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ AD41              ;   DE contiene Puntero_objeto.
   7+ AD41              ;   IX contiene el Puntero de impresión.
   8+ AD41
   9+ AD41              Genera_datos_de_impresion
  10+ AD41
  11+ AD41 ED 73 F7 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ AD45
  13+ AD45 31 B0 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ AD48 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ AD4A
  16+ AD4A 2A 0A 8A         ld hl,(Scanlines_album_SP)
  17+ AD4D
  18+ AD4D 3E 05            ld a,5
  19+ AD4F 85               add l
  20+ AD50 6F               ld l,a
  21+ AD51
  22+ AD51 F9               ld sp,hl
  23+ AD52 22 0A 8A         ld (Scanlines_album_SP),hl
  24+ AD55
  25+ AD55 21 00 00         ld hl,0
  26+ AD58
  27+ AD58 DD E5            push ix
  28+ AD5A 3B               dec sp
  29+ AD5B ED 7A            adc hl,sp
  30+ AD5D D5               push de
  31+ AD5E
  32+ AD5E              ; Recuperamos SP.
  33+ AD5E
  34+ AD5E ED 7B F7 89      ld sp,(Stack)
  35+ AD62
  36+ AD62 E5               push hl
  37+ AD63 F1               pop af
  38+ AD64 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ AD65
  40+ AD65              ; Tenemos el encabezado listo.
  41+ AD65              ; Preparamos registros para generar los scanlines.
  42+ AD65
  43+ AD65 DD E5            push ix
  44+ AD67 E1               pop hl                                          ; 1er scanline en HL.
  45+ AD68
  46+ AD68 ED 5B 0A 8A      ld de,(Scanlines_album_SP)
  47+ AD6C
  48+ AD6C              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ AD6C              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ AD6C
  51+ AD6C 7C               ld a,h
  52+ AD6D FE 50            cp $50
  53+ AD6F 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ AD71
  55+ AD71 20 05            jr nz,2F
  56+ AD73
  57+ AD73 7D               ld a,l
  58+ AD74 FE E0            cp $e0
  59+ AD76 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ AD78
  61+ AD78 7D           2 ld a,l
  62+ AD79 FE C0            cp $c0
  63+ AD7B D2 0D AE         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ AD7E
  65+ AD7E              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ AD7E
  67+ AD7E CD EE 94         call NextScan
  68+ AD81 EB               ex de,hl
  69+ AD82
  70+ AD82 73               ld (hl),e
  71+ AD83 23               inc hl
  72+ AD84 72               ld (hl),d
  73+ AD85 23               inc hl
  74+ AD86
  75+ AD86 EB               ex de,hl
  76+ AD87
  77+ AD87 CD EE 94         call NextScan
  78+ AD8A EB               ex de,hl
  79+ AD8B
  80+ AD8B 73               ld (hl),e
  81+ AD8C 23               inc hl
  82+ AD8D 72               ld (hl),d
  83+ AD8E 23               inc hl
  84+ AD8F
  85+ AD8F EB               ex de,hl
  86+ AD90
  87+ AD90 CD EE 94         call NextScan
  88+ AD93 EB               ex de,hl
  89+ AD94
  90+ AD94 73               ld (hl),e
  91+ AD95 23               inc hl
  92+ AD96 72               ld (hl),d
  93+ AD97 23               inc hl
  94+ AD98
  95+ AD98 EB               ex de,hl
  96+ AD99
  97+ AD99 CD EE 94         call NextScan
  98+ AD9C EB               ex de,hl
  99+ AD9D
 100+ AD9D 73               ld (hl),e
 101+ AD9E 23               inc hl
 102+ AD9F 72               ld (hl),d
 103+ ADA0 23               inc hl
 104+ ADA1
 105+ ADA1 EB               ex de,hl
 106+ ADA2
 107+ ADA2 CD EE 94         call NextScan
 108+ ADA5 EB               ex de,hl
 109+ ADA6
 110+ ADA6 73               ld (hl),e
 111+ ADA7 23               inc hl
 112+ ADA8 72               ld (hl),d
 113+ ADA9 23               inc hl
 114+ ADAA
 115+ ADAA EB               ex de,hl
 116+ ADAB
 117+ ADAB CD EE 94         call NextScan
 118+ ADAE EB               ex de,hl
 119+ ADAF
 120+ ADAF 73               ld (hl),e
 121+ ADB0 23               inc hl
 122+ ADB1 72               ld (hl),d
 123+ ADB2 23               inc hl
 124+ ADB3
 125+ ADB3 EB               ex de,hl
 126+ ADB4
 127+ ADB4 CD EE 94         call NextScan
 128+ ADB7 EB               ex de,hl
 129+ ADB8
 130+ ADB8 73               ld (hl),e
 131+ ADB9 23               inc hl
 132+ ADBA 72               ld (hl),d
 133+ ADBB 23               inc hl
 134+ ADBC
 135+ ADBC EB               ex de,hl
 136+ ADBD
 137+ ADBD CD EE 94         call NextScan
 138+ ADC0 EB               ex de,hl
 139+ ADC1
 140+ ADC1 73               ld (hl),e
 141+ ADC2 23               inc hl
 142+ ADC3 72               ld (hl),d
 143+ ADC4 23               inc hl
 144+ ADC5
 145+ ADC5 EB               ex de,hl
 146+ ADC6
 147+ ADC6 CD EE 94         call NextScan
 148+ ADC9 EB               ex de,hl
 149+ ADCA
 150+ ADCA 73               ld (hl),e
 151+ ADCB 23               inc hl
 152+ ADCC 72               ld (hl),d
 153+ ADCD 23               inc hl
 154+ ADCE
 155+ ADCE EB               ex de,hl
 156+ ADCF
 157+ ADCF CD EE 94         call NextScan
 158+ ADD2 EB               ex de,hl
 159+ ADD3
 160+ ADD3 73               ld (hl),e
 161+ ADD4 23               inc hl
 162+ ADD5 72               ld (hl),d
 163+ ADD6 23               inc hl
 164+ ADD7
 165+ ADD7 EB               ex de,hl
 166+ ADD8
 167+ ADD8 CD EE 94         call NextScan
 168+ ADDB EB               ex de,hl
 169+ ADDC
 170+ ADDC 73               ld (hl),e
 171+ ADDD 23               inc hl
 172+ ADDE 72               ld (hl),d
 173+ ADDF 23               inc hl
 174+ ADE0
 175+ ADE0 EB               ex de,hl
 176+ ADE1
 177+ ADE1 CD EE 94         call NextScan
 178+ ADE4 EB               ex de,hl
 179+ ADE5
 180+ ADE5 73               ld (hl),e
 181+ ADE6 23               inc hl
 182+ ADE7 72               ld (hl),d
 183+ ADE8 23               inc hl
 184+ ADE9
 185+ ADE9 EB               ex de,hl
 186+ ADEA
 187+ ADEA CD EE 94         call NextScan
 188+ ADED EB               ex de,hl
 189+ ADEE
 190+ ADEE 73               ld (hl),e
 191+ ADEF 23               inc hl
 192+ ADF0 72               ld (hl),d
 193+ ADF1 23               inc hl
 194+ ADF2
 195+ ADF2 EB               ex de,hl
 196+ ADF3
 197+ ADF3 CD EE 94         call NextScan
 198+ ADF6 EB               ex de,hl
 199+ ADF7
 200+ ADF7 73               ld (hl),e
 201+ ADF8 23               inc hl
 202+ ADF9 72               ld (hl),d
 203+ ADFA 23               inc hl
 204+ ADFB
 205+ ADFB EB               ex de,hl
 206+ ADFC
 207+ ADFC CD EE 94         call NextScan
 208+ ADFF EB               ex de,hl
 209+ AE00
 210+ AE00 73               ld (hl),e
 211+ AE01 23               inc hl
 212+ AE02 72               ld (hl),d
 213+ AE03 23               inc hl
 214+ AE04
 215+ AE04              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ AE04
 217+ AE04 22 0A 8A         ld (Scanlines_album_SP),hl
 218+ AE07
 219+ AE07              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ AE07
 221+ AE07 08               ex af,af
 222+ AE08
 223+ AE08 F5               push af
 224+ AE09 E1               pop hl
 225+ AE0A
 226+ AE0A 36 10            ld (hl),16
 227+ AE0C
 228+ AE0C C9               ret
 229+ AE0D
 230+ AE0D              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ AE0D
 232+ AE0D              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ AE0D
 234+ AE0D 3E 57            ld a,$57
 235+ AE0F 94               sub h
 236+ AE10 47               ld b,a
 237+ AE11
 238+ AE11 3E DF            ld a,$df
 239+ AE13 BD               cp l
 240+ AE14 38 04            jr c,1F
 241+ AE16
 242+ AE16 3E 08            ld a,8
 243+ AE18 80               add b
 244+ AE19 47               ld b,a
 245+ AE1A
 246+ AE1A              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ AE1A              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ AE1A
 249+ AE1A 48           1 ld c,b
 250+ AE1B 0C               inc c
 251+ AE1C
 252+ AE1C 04               inc b
 253+ AE1D 05               dec b
 254+ AE1E 20 02            jr nz,3F
 255+ AE20
 256+ AE20 18 0B            jr 6F
 257+ AE22
 258+ AE22 CD EE 94     3 call NextScan
 259+ AE25 EB               ex de,hl
 260+ AE26
 261+ AE26 73               ld (hl),e
 262+ AE27 23               inc hl
 263+ AE28 72               ld (hl),d
 264+ AE29 23               inc hl
 265+ AE2A
 266+ AE2A EB               ex de,hl
 267+ AE2B 10 F5            djnz 3B
 268+ AE2D
 269+ AE2D ED 53 0A 8A  6 ld (Scanlines_album_SP),de
 270+ AE31
 271+ AE31 08           5 ex af,af
 272+ AE32 F5               push af
 273+ AE33 E1               pop hl
 274+ AE34
 275+ AE34 71               ld (hl),c
 276+ AE35
 277+ AE35 C9               ret
 278+ AE36
# file closed: Genera_datos_de_impresion.asm
2014  AE36
2015  AE36              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ AE36              ; -----------------------------------------------------------------------------
   2+ AE36              ;
   3+ AE36              ;   11/03/24
   4+ AE36              ;
   5+ AE36
   6+ AE36                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 F7 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 0A 8A      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B F7 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 0A 8A      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B F7 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
2016  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD E2 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A C8 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A C6 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 B9 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 81 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A B4 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A B4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 B4 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A B4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 B4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 B4 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A CA 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD D0 AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD D0 AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A C8 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD D0 AC     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD D0 AC     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD D0 AC     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A B9 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A CC 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A C8 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A AA 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A AA 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 B8 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A B4 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 B9 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 B9 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 B4 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A B4 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 B9 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 B9 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 B4 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD FD 94     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 B9 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD EE 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 B9 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A C8 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD D0 AC     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 C8 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 CA 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 CC 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 C8 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 CA 89     	ld (Limite_horizontal),hl
 381+ 940D 21 CC 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 C8 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 CA 89     	ld (Limite_horizontal),hl
 392+ 9425 21 CC 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 C8 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 CA 89     	ld (Limite_horizontal),hl
 401+ 9438 21 CC 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A B9 89     	ld hl,(Posicion_actual)
 410+ 9444 CD EE AC     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 B4 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A C8 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A AA 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 C9 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 C9 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A AA 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 C9 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 C9 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A C8 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD D6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A B9 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD D6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD FD 94     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD D6 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD FD 94     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A BB 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5 C9           	ret
 545+ 94D6
 546+ 94D6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 94D6              ;
 548+ 94D6              ;	2/1/23
 549+ 94D6              ;
 550+ 94D6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 94D6              ;
 552+ 94D6              ;	Tras esta rutina tenemos:
 553+ 94D6              ;
 554+ 94D6              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 94D6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 94D6              ;
 557+ 94D6              ;	DESTRUYE!!!!! HL,B y A.
 558+ 94D6
 559+ 94D6 2A B9 89     Operandos ld hl,(Posicion_actual)
 560+ 94D9 3A C9 89     	ld a,(Columnas)
 561+ 94DC 3D           	dec a
 562+ 94DD 20 01        	jr nz,1F
 563+ 94DF 3C           	inc a
 564+ 94E0 47           1 ld b,a
 565+ 94E1 C9           	ret
 566+ 94E2
 567+ 94E2              ; --------------------------------------------------------------------------------------------------------------------
 568+ 94E2              ;
 569+ 94E2              ;	Prepara_draw
 570+ 94E2              ;
 571+ 94E2              ;	Es una rutina de carga.
 572+ 94E2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 94E2              ;
 574+ 94E2              ;	FUNCIONAMIENTO:
 575+ 94E2              ;
 576+ 94E2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 94E2              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 94E2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 94E2              ;
 580+ 94E2              ;	DESTRUYE:
 581+ 94E2              ;
 582+ 94E2              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 94E2
 584+ 94E2 21 B7 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 94E5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 94E6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 94E7 4E           	ld c,(hl)
 588+ 94E8 2A B9 89     	ld hl,(Posicion_actual)
 589+ 94EB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 94ED C9           	ret
 591+ 94EE
 592+ 94EE              ;----------------------------------------------------------------------------------------------------------------
 593+ 94EE              ;
 594+ 94EE              ;	5/08/22
 595+ 94EE              ;
 596+ 94EE              ;   NextScan.
 597+ 94EE              ;
 598+ 94EE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 94EE              ;
 600+ 94EE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 94EE              ;
 602+ 94EE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 94EE              ;
 604+ 94EE              ;       DESTRUIDOS: AF y HL !!!
 605+ 94EE              ;
 606+ 94EE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 94EE              ;
 608+ 94EE
 609+ 94EE 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 94EF 7C               ld a,h
 611+ 94F0 E6 07            and 7
 612+ 94F2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 94F3
 614+ 94F3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 94F4 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 94F6 6F               ld l,a
 617+ 94F7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 94F8
 619+ 94F8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 94F9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 94FB 67               ld h,a
 622+ 94FC C9               ret
 623+ 94FD
 624+ 94FD              ;----------------------------------------------------------------------------------------------------------------
 625+ 94FD              ;
 626+ 94FD              ;	5/08/22
 627+ 94FD              ;
 628+ 94FD              ;   PreviousScan.
 629+ 94FD              ;
 630+ 94FD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 94FD              ;
 632+ 94FD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 94FD              ;
 634+ 94FD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 94FD              ;
 636+ 94FD              ;       DESTRUIDOS: AF y HL !!!
 637+ 94FD              ;
 638+ 94FD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 94FD              ;
 640+ 94FD
 641+ 94FD 7C           PreviousScan ld a,h
 642+ 94FE 25               dec h               ; Dec H.
 643+ 94FF E6 07            and 7
 644+ 9501 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9502
 646+ 9502 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9503 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9505 6F               ld l,a
 649+ 9506 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9507
 651+ 9507 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9508 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 950A 67               ld h,a
 654+ 950B C9               ret
 655+ 950C
 656+ 950C
 657+ 950C
 658+ 950C
 659+ 950C
 660+ 950C
 661+ 950C
 662+ 950C
 663+ 950C
 664+ 950C
 665+ 950C
 666+ 950C
# file closed: Draw_XOR.asm
2017  950C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 950C
   2+ 950C              ; ******************************************************************************************************************************************************************************************
   3+ 950C              ;
   4+ 950C              ;   20/05/23
   5+ 950C              ;
   6+ 950C              ;	Recompone_posicion_inicio
   7+ 950C              ;
   8+ 950C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 950C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 950C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 950C              ;	_ a una u otra rutina.
  12+ 950C
  13+ 950C              Recompone_posicion_inicio
  14+ 950C
  15+ 950C 2A C6 89     	ld hl,(Posicion_inicio)
  16+ 950F 7D           	ld a,l
  17+ 9510 E6 1F        	and $1f
  18+ 9512 28 16        	jr z,1F
  19+ 9514
  20+ 9514 FE 1F        	cp $1f
  21+ 9516 28 0D        	jr z,3F
  22+ 9518
  23+ 9518 21 B5 89     	ld hl,Ctrl_2
  24+ 951B CB C6        	set 0,(hl)
  25+ 951D 2A BB 89     	ld hl,(Puntero_objeto)
  26+ 9520 22 E7 89     	ld (Repone_puntero_objeto),hl
  27+ 9523 18 08        	jr 2F
  28+ 9525
  29+ 9525 CD D3 96     3 call Mov_left
  30+ 9528 18 03        	jr 2F
  31+ 952A
  32+ 952A CD B0 95     1 call Mov_right
  33+ 952D 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9530 22 BB 89     	ld (Puntero_objeto),hl
  35+ 9533 C9           	ret
  36+ 9534
  37+ 9534              ; ******************************************************************************************************************************************************************************************
  38+ 9534              ;
  39+ 9534              ;   27/05/23
  40+ 9534              ;
  41+ 9534              ;	Mov_down
  42+ 9534              ;
  43+ 9534              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9534              ;
  45+ 9534              ;
  46+ 9534              Mov_down
  47+ 9534
  48+ 9534 CD 9E 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9537              ;																	; _ repone (Puntero_objeto).
  50+ 9537 21 B4 89     	ld hl,Ctrl_0
  51+ 953A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 953C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 953C              ; 																	; _ en el caso de que no lo haya.
  54+ 953C 3A D1 89     	ld a,(Vel_down)
  55+ 953F 47           	ld b,a
  56+ 9540 2A B9 89         ld hl,(Posicion_actual)
  57+ 9543 CD D0 AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9546 E6 02        	and 2
  59+ 9548 28 17        	jr z,1F
  60+ 954A
  61+ 954A              ; Nos encontramos en el último tercio de pantalla.
  62+ 954A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 954A
  64+ 954A 7C           	ld a,h
  65+ 954B FE 57        	cp $57
  66+ 954D 20 12        	jr nz,1F
  67+ 954F
  68+ 954F 7D           	ld a,l
  69+ 9550 C6 20        	add $20
  70+ 9552 30 0D        	jr nc,1F
  71+ 9554
  72+ 9554              ; ------------------------------
  73+ 9554              ;
  74+ 9554              ;	12/01/24
  75+ 9554
  76+ 9554              ;	call Reaparece_arriba
  77+ 9554 CD 60 98     	call Reinicio
  78+ 9557
  79+ 9557              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9557
  81+ 9557 3A 10 8A     	ld a,(Ctrl_3)
  82+ 955A CB CF        	set 1,a
  83+ 955C 32 10 8A     	ld (Ctrl_3),a
  84+ 955F
  85+ 955F 18 08        	jr 3F
  86+ 9561              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9561              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9561              ; ------------------------------
  89+ 9561
  90+ 9561 CD EE 94     1 call NextScan
  91+ 9564 22 B9 89     	ld (Posicion_actual),hl
  92+ 9567 10 DA            djnz 2B
  93+ 9569 CD EE AC     3 call Genera_coordenadas
  94+ 956C C9           	ret
  95+ 956D
  96+ 956D              ; ******************************************************************************************************************************************************************************************
  97+ 956D              ;
  98+ 956D              ;   27/05/23
  99+ 956D              ;
 100+ 956D              ;	Mov_up
 101+ 956D              ;
 102+ 956D              ; 	Mueve el Sprite hacia arriba.
 103+ 956D              ;
 104+ 956D              ;
 105+ 956D              Mov_up
 106+ 956D
 107+ 956D CD 9E 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9570              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9570 21 B4 89     	ld hl,Ctrl_0
 110+ 9573 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9575              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9575              ; 																		; _ en el caso de que no lo haya.
 113+ 9575 3A D0 89     	ld a,(Vel_up)
 114+ 9578 47           	ld b,a
 115+ 9579 2A B9 89     	ld hl,(Posicion_actual)
 116+ 957C CD D0 AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 957F A7           	and a
 118+ 9580 20 10        	jr nz,1F
 119+ 9582
 120+ 9582              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9582              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9582
 123+ 9582 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9583 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9585 20 0B            jr nz,1F
 126+ 9587 7D               ld a,l
 127+ 9588 D6 20            sub $20
 128+ 958A 30 06            jr nc,1F
 129+ 958C 25               dec h
 130+ 958D
 131+ 958D              ; -----------------------------
 132+ 958D CD 41 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9590              ;	call Reinicio
 134+ 9590              ; -----------------------------
 135+ 9590
 136+ 9590 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9592 CD FD 94     1 call PreviousScan
 138+ 9595 22 B9 89     	ld (Posicion_actual),hl
 139+ 9598 10 E2            djnz 3B
 140+ 959A CD EE AC     2 call Genera_coordenadas
 141+ 959D C9           	ret
 142+ 959E
 143+ 959E              ; -----------------------------
 144+ 959E              ;
 145+ 959E              ;	27/5/23
 146+ 959E              ;
 147+ 959E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 959E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 959E              ;
 150+ 959E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 959E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 959E              ;
 153+ 959E              ;	Modifica: A y (Puntero_objeto).
 154+ 959E
 155+ 959E 3A B5 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95A1 CB 47        	bit 0,a
 157+ 95A3 C8           	ret z
 158+ 95A4 CB 87        	res 0,a
 159+ 95A6 32 B5 89     	ld (Ctrl_2),a
 160+ 95A9 2A E7 89     	ld hl,(Repone_puntero_objeto)
 161+ 95AC 22 BB 89     	ld (Puntero_objeto),hl
 162+ 95AF C9           	ret
 163+ 95B0
 164+ 95B0              ; ******************************************************************************************************************************************************************************************
 165+ 95B0              ;
 166+ 95B0              ;	19/10/22
 167+ 95B0              ;
 168+ 95B0              ;	Mov_right.
 169+ 95B0              ;
 170+ 95B0              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95B0              ;
 172+ 95B0
 173+ 95B0 3A B4 89     Mov_right ld a,(Ctrl_0)
 174+ 95B3 CB 77        	bit 6,a
 175+ 95B5 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95B7
 177+ 95B7 CD EF 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95BA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95BB
 180+ 95BB 21 B4 89     	ld hl,Ctrl_0
 181+ 95BE CB E6        	set 4,(hl)
 182+ 95C0 18 52        	jr 8F
 183+ 95C2
 184+ 95C2 21 B4 89     10 ld hl,Ctrl_0
 185+ 95C5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95C7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95C7              ; 																	; _ en el caso de que no lo haya.
 188+ 95C7 3A AA 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95CA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95CC 20 46        	jr nz,8F
 191+ 95CE
 192+ 95CE 3A BD 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95D1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95D2 28 40        	jr z,8F
 195+ 95D4
 196+ 95D4              ; ---------- ---------- ----------
 197+ 95D4              ;
 198+ 95D4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95D4
 200+ 95D4 3A CF 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95D7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95D9 28 11        	jr z,1F
 203+ 95DB 38 06        	jr c,6F
 204+ 95DD FE 04        	cp 4
 205+ 95DF 28 14        	jr z,7F
 206+ 95E1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95E3
 208+ 95E3              ; ---------- ---------- ----------
 209+ 95E3              ;
 210+ 95E3              ; Perfiles de velocidad
 211+ 95E3              ;
 212+ 95E3
 213+ 95E3 3A BD 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95E6 FE FE        	cp $fe
 215+ 95E8 20 2A        	jr nz,8F
 216+ 95EA 18 10        	jr 3F
 217+ 95EC 3A BD 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95EF FE FD        	cp $fd
 219+ 95F1 20 21        	jr nz,8F
 220+ 95F3 18 07        	jr 3F
 221+ 95F5 3A BD 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95F8 FE FB        	cp $fb
 223+ 95FA 20 18        	jr nz,8F
 224+ 95FC
 225+ 95FC              ; ---------- ---------- ----------
 226+ 95FC
 227+ 95FC              3
 228+ 95FC CD 2F 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95FF              ;	call Reinicio
 230+ 95FF
 231+ 95FF              ; ---------- ---------- ----------
 232+ 95FF              ;
 233+ 95FF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95FF
 235+ 95FF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9601 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9602 CD 1B 96     	call DESPLZ_DER
 238+ 9605 C1           	pop bc
 239+ 9606 10 F9        	djnz 5B
 240+ 9608 2A B9 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 960B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 960C 22 B9 89     	ld (Posicion_actual),hl
 243+ 960F CD EE AC     	call Genera_coordenadas
 244+ 9612 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9614
 246+ 9614              ; ---------- ---------- ----------
 247+ 9614
 248+ 9614 2A B9 89     8 ld hl,(Posicion_actual)
 249+ 9617 CD 1B 96     	call DESPLZ_DER
 250+ 961A C9           2 ret
 251+ 961B
 252+ 961B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 961B              ;
 254+ 961B              ;	22/9/22
 255+ 961B              ;
 256+ 961B
 257+ 961B CD 2A 96     DESPLZ_DER call Desplaza_derecha
 258+ 961E CD 76 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9621 CD 9F 96         call Ciclo_completo
 260+ 9624 21 B4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9627 CB FE        	set 7,(hl)
 262+ 9629 C9           	ret
 263+ 962A
 264+ 962A              ; ******************************************************************************************************************************************************************************************
 265+ 962A              ;	15/02/23
 266+ 962A              ;
 267+ 962A
 268+ 962A 3A CF 89     Desplaza_derecha ld a,(Vel_right)
 269+ 962D 47           	ld b,a
 270+ 962E 2A C2 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9631 23           1 inc hl
 272+ 9632 23           	inc hl
 273+ 9633 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9635 22 C2 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9638 CD 5B 8D     	call Extrae_address
 276+ 963B 22 BB 89     	ld (Puntero_objeto),hl
 277+ 963E
 278+ 963E              ; Modifica (Puntero_DESPLZ_izq).
 279+ 963E
 280+ 963E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 963E              ; Cuántos movimientos hemos hecho ??
 282+ 963E              ; DE contiene (Puntero_DESPLZ_der).
 283+ 963E
 284+ 963E 2A BE 89     7 ld hl,(Indice_Sprite_der)
 285+ 9641 EB           	ex de,hl
 286+ 9642 A7           	and a
 287+ 9643 ED 52        	sbc hl,de
 288+ 9645 CB 3D        	srl l
 289+ 9647 3E 08        6 ld a,8
 290+ 9649 95           	sub l
 291+ 964A 30 1E        	jr nc,3F
 292+ 964C
 293+ 964C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 964C              ; B="0".
 295+ 964C
 296+ 964C 04           4 inc b
 297+ 964D 3C           	inc a
 298+ 964E 20 FC        	jr nz,4B
 299+ 9650 78           	ld a,b
 300+ 9651 08           	ex af,af
 301+ 9652 2A BE 89     	ld hl,(Indice_Sprite_der)
 302+ 9655 23           5 inc hl
 303+ 9656 23           	inc hl
 304+ 9657 10 FC        	djnz 5B
 305+ 9659 22 C2 89     	ld (Puntero_DESPLZ_der),hl
 306+ 965C CD 5B 8D     	call Extrae_address
 307+ 965F 22 BB 89     	ld (Puntero_objeto),hl
 308+ 9662
 309+ 9662              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9662              ; _(Posicion_actual).
 311+ 9662
 312+ 9662 21 B9 89     	ld hl,Posicion_actual
 313+ 9665 34           	inc (hl)
 314+ 9666 08               ex af,af
 315+ 9667 6F           	ld l,a
 316+ 9668 18 DD        	jr 6B
 317+ 966A
 318+ 966A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 966A
 320+ 966A 47           3 ld b,a
 321+ 966B 2A C0 89     	ld hl,(Indice_Sprite_izq)
 322+ 966E 23           2 inc hl
 323+ 966F 23           	inc hl
 324+ 9670 10 FC        	djnz 2B
 325+ 9672 22 C4 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9675 C9           8 ret
 327+ 9676
 328+ 9676              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9676              ;
 330+ 9676              ;	24/7/22
 331+ 9676              ;
 332+ 9676              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9676              ;
 334+ 9676              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9676              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9676              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9676
 338+ 9676 3A BD 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9679 A7           	and a
 340+ 967A 20 1F        	jr nz,1F
 341+ 967C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 967E 32 BD 89         ld (CTRL_DESPLZ),a
 343+ 9681
 344+ 9681 21 B8 89     	ld hl,Columns
 345+ 9684 34           	inc (hl)
 346+ 9685 3A C8 89     	ld a,(Cuad_objeto)
 347+ 9688 E6 01        	and 1
 348+ 968A 28 0F        	jr z,1F
 349+ 968C 2A B9 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 968F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9690 22 B9 89     	ld (Posicion_actual),hl
 352+ 9693 CD EE AC     	call Genera_coordenadas
 353+ 9696 CD FB 97     	call Inc_CTRL_DESPLZ
 354+ 9699 18 03        	jr 2F
 355+ 969B CD FB 97     1 call Inc_CTRL_DESPLZ
 356+ 969E C9           2 ret
 357+ 969F
 358+ 969F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 969F              ;
 360+ 969F              ;	24/7/22
 361+ 969F              ;
 362+ 969F              ;	Ciclo_completo.
 363+ 969F              ;
 364+ 969F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 969F              ;
 366+ 969F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 969F              ; 	Decrementamos (Columns).
 368+ 969F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 969F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 969F
 371+ 969F
 372+ 969F 3A BD 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96A2 FE FF        	cp $ff
 374+ 96A4 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96A6 E6 F0        	and $f0
 376+ 96A8 20 28        	jr nz,3F
 377+ 96AA
 378+ 96AA              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96AA
 380+ 96AA 3A BD 89     	ld a,(CTRL_DESPLZ)
 381+ 96AD 47           	ld b,a
 382+ 96AE 3E F8        	ld a,$f8
 383+ 96B0 80           	add b
 384+ 96B1 32 BD 89     	ld (CTRL_DESPLZ),a
 385+ 96B4 18 1C        	jr 3F
 386+ 96B6 21 B8 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96B9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96BA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96BB 32 BD 89     	ld (CTRL_DESPLZ),a
 390+ 96BE 3A C8 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96C1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96C3 20 0A        	jr nz,2F
 393+ 96C5 2A B9 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96C8 23           	inc hl
 395+ 96C9 22 B9 89     	ld (Posicion_actual),hl
 396+ 96CC CD EE AC     	call Genera_coordenadas
 397+ 96CF
 398+ 96CF              ; Inicia el puntero de Sprite.
 399+ 96CF
 400+ 96CF CD 70 8D     2 call Inicia_puntero_objeto_der
 401+ 96D2 C9           3 ret
 402+ 96D3
 403+ 96D3              ; ******************************************************************************************************************************************************************************************
 404+ 96D3              ;
 405+ 96D3              ;	15/02/23
 406+ 96D3              ;
 407+ 96D3              ;	Mov_left.
 408+ 96D3              ;
 409+ 96D3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96D3              ;
 411+ 96D3              Mov_left
 412+ 96D3
 413+ 96D3 21 B4 89     	ld hl,Ctrl_0
 414+ 96D6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96D8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96D8              ; 																	; _ en el caso de que no lo haya.
 417+ 96D8 3A B4 89     	ld a,(Ctrl_0)
 418+ 96DB CB 77        	bit 6,a
 419+ 96DD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96DF
 421+ 96DF CD F5 97     	call Stop_Amadeus_left
 422+ 96E2 C8           	ret z
 423+ 96E3 20 4A        	jr nz,8F
 424+ 96E5
 425+ 96E5 3A AA 89     11 ld a,(Coordenada_X)
 426+ 96E8 A7           	and a
 427+ 96E9 20 44        	jr nz,8F
 428+ 96EB
 429+ 96EB 3A BD 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96EE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96EF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96F1
 433+ 96F1              ; ---------- ---------- ----------
 434+ 96F1
 435+ 96F1 3A CE 89     	ld a,(Vel_left)
 436+ 96F4 FE 02        	cp 2
 437+ 96F6 28 0F        	jr z,1F
 438+ 96F8 38 04        	jr c,6F
 439+ 96FA FE 04        	cp 4
 440+ 96FC 28 12        	jr z,7F
 441+ 96FE
 442+ 96FE              ; ---------- ---------- ----------
 443+ 96FE
 444+ 96FE 3A BD 89     6 ld a,(CTRL_DESPLZ)
 445+ 9701 FE F8        	cp $f8
 446+ 9703 20 2A        	jr nz,8F
 447+ 9705 18 10        	jr 4F
 448+ 9707 3A BD 89     1 ld a,(CTRL_DESPLZ)
 449+ 970A FE F9        	cp $f9
 450+ 970C 20 21        	jr nz,8F
 451+ 970E 18 07        	jr 4F
 452+ 9710 3A BD 89     7 ld a,(CTRL_DESPLZ)
 453+ 9713 FE FB        	cp $fb
 454+ 9715 20 18        	jr nz,8F
 455+ 9717
 456+ 9717              ; ---------- ---------- ----------
 457+ 9717
 458+ 9717              4
 459+ 9717 CD 1D 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 971A              ;	call Reinicio
 461+ 971A
 462+ 971A              ; ---------- ---------- ----------
 463+ 971A
 464+ 971A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 971C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 971D
 467+ 971D              ;	ld hl,(Indice_Sprite_izq)
 468+ 971D              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 971D
 470+ 971D CD 36 97     	call DESPLZ_IZQ
 471+ 9720 C1           	pop bc
 472+ 9721 10 F9        	djnz 5B
 473+ 9723 2A B9 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9726 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9727 22 B9 89     	ld (Posicion_actual),hl
 476+ 972A CD EE AC     	call Genera_coordenadas
 477+ 972D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 972F
 479+ 972F              ; ---------- ---------- ----------
 480+ 972F
 481+ 972F              ; Movemos, no hay recolocación.
 482+ 972F
 483+ 972F 2A B9 89     8 ld hl,(Posicion_actual)
 484+ 9732 CD 36 97     	call DESPLZ_IZQ
 485+ 9735 C9           2 ret
 486+ 9736
 487+ 9736              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9736              ;
 489+ 9736              ;	22/9/22
 490+ 9736
 491+ 9736              DESPLZ_IZQ
 492+ 9736
 493+ 9736 CD 45 97     	call Desplaza_izquierda
 494+ 9739 CD 91 97         call modifica_parametros_1er_DESPLZ
 495+ 973C CD B9 97     	call Ciclo_completo_2
 496+ 973F 21 B4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9742 CB BE        	res 7,(hl)
 498+ 9744 C9           	ret
 499+ 9745
 500+ 9745              Desplaza_izquierda
 501+ 9745
 502+ 9745 3A CE 89     	ld a,(Vel_left)
 503+ 9748 47           	ld b,a
 504+ 9749 2A C4 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 974C 23           1 inc hl
 506+ 974D 23           	inc hl
 507+ 974E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9750 22 C4 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9753 CD 5B 8D     	call Extrae_address
 510+ 9756 22 BB 89     	ld (Puntero_objeto),hl
 511+ 9759
 512+ 9759              ; Modifica (Puntero_DESPLZ_der).
 513+ 9759
 514+ 9759              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9759              ; Cuántos movimientos hemos hecho ??
 516+ 9759              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9759
 518+ 9759 2A C0 89     7 ld hl,(Indice_Sprite_izq)
 519+ 975C EB           	ex de,hl
 520+ 975D A7           	and a
 521+ 975E ED 52        	sbc hl,de
 522+ 9760 CB 3D        	srl l
 523+ 9762 3E 08        6 ld a,8
 524+ 9764 95           	sub l
 525+ 9765 30 1E        	jr nc,3F
 526+ 9767
 527+ 9767              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9767              ; B="0".
 529+ 9767
 530+ 9767 04           4 inc b
 531+ 9768 3C           	inc a
 532+ 9769 20 FC        	jr nz,4B
 533+ 976B 78           	ld a,b
 534+ 976C 08           	ex af,af
 535+ 976D 2A C0 89     	ld hl,(Indice_Sprite_izq)
 536+ 9770 23           5 inc hl
 537+ 9771 23           	inc hl
 538+ 9772 10 FC        	djnz 5B
 539+ 9774 22 C4 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9777 CD 5B 8D     	call Extrae_address
 541+ 977A 22 BB 89     	ld (Puntero_objeto),hl
 542+ 977D
 543+ 977D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 977D              ; _(Posicion_actual).
 545+ 977D
 546+ 977D 21 B9 89     	ld hl,Posicion_actual
 547+ 9780 35           	dec (hl)
 548+ 9781 08           	ex af,af
 549+ 9782 6F           	ld l,a
 550+ 9783 18 DD        	jr 6B
 551+ 9785
 552+ 9785              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9785
 554+ 9785 47           3 ld b,a
 555+ 9786 2A BE 89     	ld hl,(Indice_Sprite_der)
 556+ 9789 23           2 inc hl
 557+ 978A 23           	inc hl
 558+ 978B 10 FC        	djnz 2B
 559+ 978D 22 C2 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9790 C9           8 ret
 561+ 9791
 562+ 9791              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9791              ;
 564+ 9791              ;	modifica_parametros_1er_DESPLZ
 565+ 9791              ;
 566+ 9791              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9791              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9791              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9791
 570+ 9791 3A BD 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9794 A7           	and a
 572+ 9795 20 1E        	jr nz,1F
 573+ 9797 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9798 32 BD 89         ld (CTRL_DESPLZ),a
 575+ 979B 21 B8 89     	ld hl,Columns
 576+ 979E 34           	inc (hl)
 577+ 979F 3A C8 89     	ld a,(Cuad_objeto)
 578+ 97A2 E6 01        	and 1
 579+ 97A4 20 0F        	jr nz,1F
 580+ 97A6 2A B9 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97A9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97AA 22 B9 89     	ld (Posicion_actual),hl
 583+ 97AD CD EE AC     	call Genera_coordenadas
 584+ 97B0 CD 0C 98     	call Dec_CTRL_DESPLZ
 585+ 97B3 18 03        	jr 2F
 586+ 97B5 CD 0C 98     1 call Dec_CTRL_DESPLZ
 587+ 97B8 C9           2 ret
 588+ 97B9
 589+ 97B9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97B9
 591+ 97B9 3A BD 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97BC FE F7        	cp $f7
 593+ 97BE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97C0 30 2C        	jr nc,3F
 595+ 97C2
 596+ 97C2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97C2
 598+ 97C2 06 00        	ld b,0
 599+ 97C4 04           4 inc b
 600+ 97C5 3C           	inc a
 601+ 97C6 FE F7        	cp $f7
 602+ 97C8 20 FA        	jr nz,4B
 603+ 97CA 3E FF        	ld a,$ff
 604+ 97CC 90           	sub b
 605+ 97CD 32 BD 89     	ld (CTRL_DESPLZ),a
 606+ 97D0 18 1C        	jr 3F
 607+ 97D2
 608+ 97D2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97D2
 610+ 97D2 21 B8 89     1 ld hl,Columns
 611+ 97D5 35           	dec (hl)
 612+ 97D6 AF           	xor a
 613+ 97D7 32 BD 89     	ld (CTRL_DESPLZ),a
 614+ 97DA 3A C8 89     	ld a,(Cuad_objeto)
 615+ 97DD E6 01        	and 1
 616+ 97DF 28 0A        	jr z,2F
 617+ 97E1 2A B9 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97E4 2B           	dec hl
 619+ 97E5 22 B9 89     	ld (Posicion_actual),hl
 620+ 97E8 CD EE AC     	call Genera_coordenadas
 621+ 97EB
 622+ 97EB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97EB
 624+ 97EB CD 83 8D     2 call Inicia_puntero_objeto_izq
 625+ 97EE C9           3 ret
 626+ 97EF
 627+ 97EF              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97EF              ;
 629+ 97EF              ;	19/10/22
 630+ 97EF              ;
 631+ 97EF              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97EF              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97EF
 634+ 97EF 3A AA 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97F2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97F4 C9           	ret
 637+ 97F5
 638+ 97F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97F5              ;
 640+ 97F5              ;	19/10/22
 641+ 97F5              ;
 642+ 97F5              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97F5              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97F5
 645+ 97F5 3A AA 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97F8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97FA C9           	ret
 648+ 97FB
 649+ 97FB              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 97FB              ;
 651+ 97FB              ;	24/7/22
 652+ 97FB              ;
 653+ 97FB              ;	Inc_CTRL_DESPLZ
 654+ 97FB              ;
 655+ 97FB              ;
 656+ 97FB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 97FB
 658+ 97FB 21 BD 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 97FE 3A CF 89     	ld a,(Vel_right)
 660+ 9801 A7           	and a
 661+ 9802 28 06        	jr z,1F
 662+ 9804 47           	ld b,a
 663+ 9805 34           3 inc (hl)
 664+ 9806 10 FD        	djnz 3B
 665+ 9808 18 01        	jr 2F
 666+ 980A 34           1 inc (hl)
 667+ 980B C9           2 ret
 668+ 980C
 669+ 980C              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 980C              ;
 671+ 980C              ;	5/2/23
 672+ 980C              ;
 673+ 980C              ;	Dec_CTRL_DESPLZ
 674+ 980C              ;
 675+ 980C              ;
 676+ 980C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 980C
 678+ 980C 21 BD 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 980F 3A CE 89     	ld a,(Vel_left)
 680+ 9812 A7           	and a
 681+ 9813 28 06        	jr z,1F
 682+ 9815 47           	ld b,a
 683+ 9816 35           3 dec (hl)
 684+ 9817 10 FD        	djnz 3B
 685+ 9819 18 01        	jr 2F
 686+ 981B 35           1 dec (hl)
 687+ 981C C9           2 ret
 688+ 981D
 689+ 981D              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 981D
 691+ 981D 2A B9 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9820 01 1F 00     	ld bc,31
 693+ 9823 A7           	and a
 694+ 9824 ED 4A        	adc hl,bc
 695+ 9826 22 B9 89     	ld (Posicion_actual),hl
 696+ 9829 21 B4 89     	ld hl,Ctrl_0														; $xxx1
 697+ 982C CB C6        	set 0,(hl)
 698+ 982E C9           	ret
 699+ 982F
 700+ 982F              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 982F
 702+ 982F 2A B9 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9832 01 1F 00     	ld bc,31
 704+ 9835 A7           	and a
 705+ 9836 ED 42        	sbc hl,bc
 706+ 9838 22 B9 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 983B 21 B4 89     	ld hl,Ctrl_0
 708+ 983E CB CE        	set 1,(hl)
 709+ 9840 C9           	ret
 710+ 9841
 711+ 9841              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9841
 713+ 9841 24           Reaparece_abajo inc h
 714+ 9842 01 E0 17     	ld bc,$17e0
 715+ 9845 A7           	and a
 716+ 9846 ED 4A        	adc hl,bc
 717+ 9848 22 B9 89     	ld (Posicion_actual),hl
 718+ 984B 21 B4 89     	ld hl,Ctrl_0
 719+ 984E CB D6        	set 2,(hl)
 720+ 9850 C9           	ret
 721+ 9851
 722+ 9851              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9851
 724+ 9851 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9854 A7           	and a
 726+ 9855 ED 42        	sbc hl,bc
 727+ 9857 22 B9 89     	ld (Posicion_actual),hl
 728+ 985A 21 B4 89     	ld hl,Ctrl_0
 729+ 985D CB DE        	set 3,(hl)
 730+ 985F C9           	ret
 731+ 9860
 732+ 9860              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9860              ;
 734+ 9860              ;	15/07/23
 735+ 9860
 736+ 9860              Reinicio
 737+ 9860
 738+ 9860              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9860
 740+ 9860 AF           	xor a
 741+ 9861 21 DE 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9864 CD 82 98     	call Limpia_contenido_hl
 743+ 9867
 744+ 9867 21 B9 89     	ld hl,Posicion_actual
 745+ 986A CD 82 98     	call Limpia_contenido_hl
 746+ 986D
 747+ 986D CD D0 AA     	call Inicializa_Puntero_indice_mov
 748+ 9870 CD 81 99     	call Inicia_Puntero_mov
 749+ 9873
 750+ 9873 21 E0 89     	ld hl,Incrementa_puntero
 751+ 9876 06 05        	ld b,5
 752+ 9878 77           1 ld (hl),a
 753+ 9879 23           	inc hl
 754+ 987A 10 FC        	djnz 1B
 755+ 987C
 756+ 987C 21 B5 89     	ld hl,Ctrl_2
 757+ 987F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9881
 759+ 9881 C9           	ret
 760+ 9882
 761+ 9882 77           Limpia_contenido_hl	ld (hl),a
 762+ 9883 23           	inc hl
 763+ 9884 77           	ld (hl),a
 764+ 9885 C9           	ret
 765+ 9886
 766+ 9886              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9886              ;
 768+ 9886              ;	18/6/24
 769+ 9886              ;
 770+ 9886
 771+ 9886              Amadeus_a_izquierda
 772+ 9886
 773+ 9886              ;	Actualiza contador de movimientos.
 774+ 9886
 775+ 9886 21 58 87     	ld hl,Comm_Amadeus
 776+ 9889 35           	dec (hl)
 777+ 988A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 988C
 779+ 988C 2A 56 87     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 988F 2B           	dec hl
 781+ 9890 2B           	dec hl
 782+ 9891 2B           	dec hl
 783+ 9892 2B           	dec hl
 784+ 9893 22 56 87     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9896
 786+ 9896 21 10 8A     	ld hl,Ctrl_3
 787+ 9899 CB EE        	set 5,(hl)
 788+ 989B
 789+ 989B C9           	ret
 790+ 989C
 791+ 989C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 989D C9           	ret
 793+ 989E
 794+ 989E
 795+ 989E              Amadeus_a_derecha
 796+ 989E
 797+ 989E              ;	Actualiza contador de movimientos.
 798+ 989E
 799+ 989E 21 58 87     	ld hl,Comm_Amadeus
 800+ 98A1 34           	inc (hl)
 801+ 98A2 3E 7A        	ld a,$7a
 802+ 98A4 BE           	cp (hl)
 803+ 98A5 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 98A7
 805+ 98A7 2A 56 87     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 98AA 23           	inc hl
 807+ 98AB 23           	inc hl
 808+ 98AC 23           	inc hl
 809+ 98AD 23           	inc hl
 810+ 98AE 22 56 87     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 98B1
 812+ 98B1 21 10 8A     	ld hl,Ctrl_3
 813+ 98B4 CB EE        	set 5,(hl)
 814+ 98B6 C9           	ret
 815+ 98B7
 816+ 98B7 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 98B8 C9           	ret
# file closed: Direcciones.asm
2018  98B9              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 98B9              ; ----- ----- ----- ----- -----
   2+ 98B9              ;
   3+ 98B9              ;   28/12/23
   4+ 98B9
   5+ 98B9              Movimiento
   6+ 98B9
   7+ 98B9              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 98B9
   9+ 98B9 3A B5 89         ld a,(Ctrl_2)
  10+ 98BC CB 57            bit 2,a
  11+ 98BE 20 1B            jr nz, Desplazamiento_iniciado
  12+ 98C0
  13+ 98C0 2A DC 89         ld hl,(Puntero_mov)
  14+ 98C3 7E               ld a,(hl)
  15+ 98C4
  16+ 98C4              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 98C4
  18+ 98C4              Inicia_desplazamiento.
  19+ 98C4
  20+ 98C4              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 98C4
  22+ 98C4 CD B7 99         call Ajusta_velocidad_desplazamiento
  23+ 98C7
  24+ 98C7              ; Iniciamos (Repetimos_mov).
  25+ 98C7
  26+ 98C7 7E               ld a,(hl)
  27+ 98C8 E6 0F            and $0f
  28+ 98CA 32 E2 89         ld (Repetimos_desplazamiento),a
  29+ 98CD 32 E3 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98D0
  31+ 98D0              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98D0
  33+ 98D0 23               inc hl
  34+ 98D1 7E               ld a,(hl)
  35+ 98D2 32 E5 89         ld (Cola_de_desplazamiento),a
  36+ 98D5 2B               dec hl
  37+ 98D6
  38+ 98D6 21 B5 89         ld hl,Ctrl_2
  39+ 98D9 CB D6            set 2,(hl)
  40+ 98DB
  41+ 98DB              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98DB              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98DB
  44+ 98DB              Desplazamiento_iniciado
  45+ 98DB
  46+ 98DB CD 8B 99         call Aplica_desplazamiento
  47+ 98DE
  48+ 98DE              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98DE
  50+ 98DE 3A 10 8A         ld a,(Ctrl_3)
  51+ 98E1 CB 4F            bit 1,a
  52+ 98E3 C0               ret nz
  53+ 98E4
  54+ 98E4 21 E2 89     3 ld hl,Repetimos_desplazamiento
  55+ 98E7 35               dec (hl)
  56+ 98E8 C0               ret nz
  57+ 98E9
  58+ 98E9              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98E9              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98E9              ; Analiza (Cola_de_desplazamiento).
  61+ 98E9
  62+ 98E9 3A E5 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98EC A7               and a
  64+ 98ED CC E0 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98F0 28 30            jr z,Reinicia_el_movimiento
  66+ 98F2
  67+ 98F2 FE FF            cp $ff
  68+ 98F4 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98F6
  70+ 98F6 FE FE            cp $fe
  71+ 98F8 CC 65 99         call z,Fijamos_bucle
  72+ 98FB 28 25            jr z,Reinicia_el_movimiento
  73+ 98FD
  74+ 98FD FE FD            cp $fd
  75+ 98FF 20 11            jr nz,1F
  76+ 9901
  77+ 9901              ; ---
  78+ 9901              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9901
  80+ 9901 3A B5 89         ld a,(Ctrl_2)
  81+ 9904 CB 5F            bit 3,a
  82+ 9906 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9908
  84+ 9908              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9908
  86+ 9908 21 B5 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 990B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 990D
  89+ 990D CD 76 99         call Inicia_Repetimos_movimiento
  90+ 9910 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9912              ; ---
  92+ 9912
  93+ 9912 FE 01        1 cp 1
  94+ 9914 CA 4F 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9917
  96+ 9917 3D               dec a
  97+ 9918 32 E5 89         ld (Cola_de_desplazamiento),a
  98+ 991B
  99+ 991B 3A E3 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 991E 32 E2 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9921              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9921 C9               ret
 103+ 9922
 104+ 9922              Reinicia_el_movimiento
 105+ 9922
 106+ 9922 3A B5 89         ld a,(Ctrl_2)
 107+ 9925 CB 5F            bit 3,a
 108+ 9927 28 1B            jr z,2F
 109+ 9929
 110+ 9929              ; (Cola_de_desplazamiento)="254".
 111+ 9929
 112+ 9929 21 E4 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 992C 35               dec (hl)
 114+ 992D 20 15            jr nz,2F
 115+ 992F
 116+ 992F              ; Fin de las repeticiones del último movimiento.
 117+ 992F
 118+ 992F 21 B5 89         ld hl,Ctrl_2
 119+ 9932 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9934
 121+ 9934 2A DC 89         ld hl,(Puntero_mov)
 122+ 9937 23               inc hl
 123+ 9938 23               inc hl
 124+ 9939 23               inc hl
 125+ 993A 22 DC 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 993D              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 993D 7E               ld a,(hl)
 128+ 993E 32 E5 89         ld (Cola_de_desplazamiento),a
 129+ 9941
 130+ 9941 C3 E9 98         jp Cola
 131+ 9944
 132+ 9944 CD 81 99     2 call Inicia_Puntero_mov
 133+ 9947
 134+ 9947 21 B5 89         ld hl,Ctrl_2
 135+ 994A CB 96            res 2,(hl)
 136+ 994C
 137+ 994C C3 B9 98         jp Movimiento
 138+ 994F
 139+ 994F              Siguiente_desplazamiento
 140+ 994F
 141+ 994F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 994F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 994F
 144+ 994F 21 B5 89         ld hl,Ctrl_2
 145+ 9952 CB 96            res 2,(hl)
 146+ 9954
 147+ 9954 2A DC 89         ld hl,(Puntero_mov)
 148+ 9957 23               inc hl
 149+ 9958 23               inc hl
 150+ 9959 22 DC 89         ld (Puntero_mov),hl
 151+ 995C
 152+ 995C 7E               ld a,(hl)
 153+ 995D A7               and a
 154+ 995E CC E0 99         call z,Incrementa_Puntero_indice_mov
 155+ 9961 CA 22 99         jp z,Reinicia_el_movimiento
 156+ 9964
 157+ 9964 C9               ret
 158+ 9965
 159+ 9965              ; Subrutinas -----------------------------------------
 160+ 9965              ; ---------- --------- --------- ---------- ----------
 161+ 9965              ;
 162+ 9965              ;   24/07/23
 163+ 9965              ;
 164+ 9965              ;   Fijamos_bucle
 165+ 9965              ;
 166+ 9965              ;
 167+ 9965
 168+ 9965              Fijamos_bucle
 169+ 9965
 170+ 9965 3A E0 89         ld a,(Incrementa_puntero)
 171+ 9968 3C               inc a
 172+ 9969 32 E1 89         ld (Incrementa_puntero_backup),a
 173+ 996C
 174+ 996C CD E0 99         call Incrementa_Puntero_indice_mov
 175+ 996F 2A DA 89         ld hl,(Puntero_indice_mov)
 176+ 9972 22 DE 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9975 C9               ret
 178+ 9976
 179+ 9976              ; ---------- --------- --------- ---------- ----------
 180+ 9976              ;
 181+ 9976              ;   07/7/23
 182+ 9976              ;
 183+ 9976              ;   Inicia_Repetimos_movimiento
 184+ 9976              ;
 185+ 9976              ;
 186+ 9976
 187+ 9976              Inicia_Repetimos_movimiento
 188+ 9976
 189+ 9976              ; Iniciamos (Repetimos_movimiento).
 190+ 9976
 191+ 9976 DD 2A DC 89      ld ix,(Puntero_mov)
 192+ 997A DD 7E 02         ld a,(ix+2)
 193+ 997D 32 E4 89         ld (Repetimos_movimiento),a
 194+ 9980
 195+ 9980 C9               ret
 196+ 9981
 197+ 9981              ; ---------- --------- --------- ---------- ----------
 198+ 9981              ;
 199+ 9981              ;   26/6/23
 200+ 9981              ;
 201+ 9981              ;   Inicia_Puntero_mov
 202+ 9981              ;
 203+ 9981              ;
 204+ 9981
 205+ 9981 2A DA 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9984 CD 5B 8D         call Extrae_address
 207+ 9987 22 DC 89         ld (Puntero_mov),hl
 208+ 998A C9               ret
 209+ 998B
 210+ 998B              ; ---------- --------- --------- ---------- ----------
 211+ 998B              ;
 212+ 998B              ;   27/06/23
 213+ 998B              ;
 214+ 998B              ;   Aplica_movimiento.
 215+ 998B
 216+ 998B              Aplica_desplazamiento
 217+ 998B
 218+ 998B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 998B
 220+ 998B 2A DC 89         ld hl, (Puntero_mov)
 221+ 998E
 222+ 998E 7E               ld a,(hl)
 223+ 998F E6 F0            and $f0
 224+ 9991 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9992
 226+ 9992 CB 7E            bit 7,(hl)
 227+ 9994 28 03            jr z,1F
 228+ 9996 CD 6D 95         call Mov_up
 229+ 9999 2A DC 89     1 ld hl, (Puntero_mov)
 230+ 999C CB 76            bit 6,(hl)
 231+ 999E 28 03            jr z,2F
 232+ 99A0 CD 34 95         call Mov_down
 233+ 99A3
 234+ 99A3              ; Se ha aplicado reinicio ???
 235+ 99A3              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 99A3
 237+ 99A3              ;    ld a,(Ctrl_3)
 238+ 99A3              ;    bit 1,a
 239+ 99A3              ;    ret nz
 240+ 99A3
 241+ 99A3 2A DC 89     2 ld hl, (Puntero_mov)
 242+ 99A6 CB 6E            bit 5,(hl)
 243+ 99A8 28 03            jr z,3F
 244+ 99AA CD D3 96         call Mov_left
 245+ 99AD 2A DC 89     3 ld hl, (Puntero_mov)
 246+ 99B0 CB 66            bit 4,(hl)
 247+ 99B2 C8               ret z
 248+ 99B3 CD B0 95         call Mov_right
 249+ 99B6 C9               ret
 250+ 99B7
 251+ 99B7              ; ---------- --------- --------- ---------- ----------
 252+ 99B7              ;
 253+ 99B7              ;   26/06/23
 254+ 99B7              ;
 255+ 99B7              ;   Ajusta_velocidad_desplazamiento.
 256+ 99B7
 257+ 99B7              Ajusta_velocidad_desplazamiento
 258+ 99B7
 259+ 99B7              ; 1er byte de la cadena de movimiento.
 260+ 99B7              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 99B7
 262+ 99B7 CD D5 99         call Extrae_nibble_alto
 263+ 99BA
 264+ 99BA 32 D0 89         ld (Vel_up),a
 265+ 99BD 79               ld a,c
 266+ 99BE E6 0F            and $0f
 267+ 99C0 32 D1 89         ld (Vel_down),a
 268+ 99C3
 269+ 99C3              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 99C3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 99C3
 272+ 99C3 23               inc hl
 273+ 99C4 CD D5 99         call Extrae_nibble_alto
 274+ 99C7
 275+ 99C7 32 CE 89         ld (Vel_left),a
 276+ 99CA 79               ld a,c
 277+ 99CB E6 0F            and $0f
 278+ 99CD 32 CF 89         ld (Vel_right),a
 279+ 99D0
 280+ 99D0              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99D0
 282+ 99D0 23               inc hl
 283+ 99D1 22 DC 89         ld (Puntero_mov),hl
 284+ 99D4 C9               ret
 285+ 99D5
 286+ 99D5 06 04        Extrae_nibble_alto ld b,4
 287+ 99D7 7E               ld a,(hl)
 288+ 99D8 4F               ld c,a
 289+ 99D9 E6 F0            and $f0
 290+ 99DB CB 3F        1 srl a
 291+ 99DD 10 FC            djnz 1B
 292+ 99DF C9               ret
 293+ 99E0
 294+ 99E0              ; ---------- --------- --------- ---------- ----------
 295+ 99E0              ;
 296+ 99E0              ;   5/7/23
 297+ 99E0              ;
 298+ 99E0              ;   Incrementa_Puntero_indice_mov
 299+ 99E0
 300+ 99E0              Incrementa_Puntero_indice_mov
 301+ 99E0
 302+ 99E0 21 E0 89         ld hl,Incrementa_puntero
 303+ 99E3 34               inc (hl)
 304+ 99E4
 305+ 99E4 2A DA 89         ld hl,(Puntero_indice_mov)
 306+ 99E7 01 02 00         ld bc,2
 307+ 99EA A7               and a
 308+ 99EB 09               add hl,bc
 309+ 99EC 22 DA 89         ld (Puntero_indice_mov),hl
 310+ 99EF
 311+ 99EF 7E               ld a,(hl)
 312+ 99F0 A7               and a
 313+ 99F1
 314+ 99F1              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99F1
 316+ 99F1              ;    jr z,$
 317+ 99F1
 318+ 99F1              ;! Reinicia el Patrón de movimiento.
 319+ 99F1
 320+ 99F1 CC F6 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99F4
 322+ 99F4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99F5
 324+ 99F5 C9               ret
 325+ 99F6
 326+ 99F6              ; ---------- --------- --------- ---------- ----------
 327+ 99F6              ;
 328+ 99F6              ;   15/01/24
 329+ 99F6              ;
 330+ 99F6              ;   Inicializa_Puntero_indice_mov
 331+ 99F6
 332+ 99F6              Inicializa_Puntero_indice_mov_2
 333+ 99F6
 334+ 99F6              ; Existe etiqueta de bucle principal???
 335+ 99F6
 336+ 99F6 2A DE 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99F9 24               inc h
 338+ 99FA 25               dec h
 339+ 99FB 28 05            jr z,2F
 340+ 99FD
 341+ 99FD 22 DA 89         ld (Puntero_indice_mov),hl
 342+ 9A00 18 14            jr 3F
 343+ 9A02
 344+ 9A02              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9A02
 346+ 9A02 3A E0 89     2 ld a,(Incrementa_puntero)
 347+ 9A05 47               ld b,a
 348+ 9A06
 349+ 9A06 2A DA 89         ld hl,(Puntero_indice_mov)
 350+ 9A09 2B           1 dec hl
 351+ 9A0A 2B               dec hl
 352+ 9A0B 10 FC            djnz 1B
 353+ 9A0D 22 DA 89         ld (Puntero_indice_mov),hl
 354+ 9A10
 355+ 9A10 AF               xor a
 356+ 9A11 32 E0 89         ld (Incrementa_puntero),a
 357+ 9A14 18 06            jr 4F
 358+ 9A16
 359+ 9A16 3A E1 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A19 32 E0 89         ld (Incrementa_puntero),a
 361+ 9A1C C9           4 ret
 362+ 9A1D
 363+ 9A1D              ; ----------------------------------------------------------------------
 364+ 9A1D              ;
 365+ 9A1D              ;   30/01/24
 366+ 9A1D              ;
 367+ 9A1D              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A1D
 369+ 9A1D 3A A9 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A20 CD 6B AC         call Calcula_salto_en_BC
 371+ 9A23 21 D2 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A26 A7               and a
 373+ 9A27 ED 4A            adc hl,bc
 374+ 9A29 C9               ret
 375+ 9A2A
 376+ 9A2A              ; ----------------------------------------------------------------------
 377+ 9A2A              ;
 378+ 9A2A              ;   30/01/24
 379+ 9A2A              ;
 380+ 9A2A              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A2A              ;
 382+ 9A2A              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A2A
 384+ 9A2A 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A2B 23               inc hl
 386+ 9A2C 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A2D 69               ld l,c
 388+ 9A2E 60               ld h,b
 389+ 9A2F 22 B2 89         ld (Contador_de_mov_masticados),hl
 390+ 9A32 C9               ret
 391+ 9A33
# file closed: Movimiento.asm
2019  9A33              	include "Disparo_2.asm"
# file opened: Disparo_2.asm
   1+ 9A33              Colision_Entidad_Amadeus
   2+ 9A33
   3+ 9A33              ; Posible contacto de entidad con Amadeus. ?????
   4+ 9A33
   5+ 9A33 3A AB 89     	ld a,(Coordenada_y)
   6+ 9A36 FE 14        	cp $14
   7+ 9A38 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
   8+ 9A39
   9+ 9A39 3A AD 89         ld a,(Impacto)
  10+ 9A3C 3D               dec a
  11+ 9A3D C8               ret z                                                  ; Salimos si la unidad que está en zona de Amadeus ya está impactada.
  12+ 9A3E
  13+ 9A3E              ; -------------------------------------------------------------------------------------------------------------
  14+ 9A3E              ;
  15+ 9A3E              ;   25/06/24
  16+ 9A3E              ;
  17+ 9A3E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
  18+ 9A3E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
  19+ 9A3E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
  20+ 9A3E              ;
  21+ 9A3E              ;   MODIFICA: HL,DE,BC y A.
  22+ 9A3E              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
  23+ 9A3E              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
  24+ 9A3E
  25+ 9A3E              Genera_coordenadas_X
  26+ 9A3E
  27+ 9A3E              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
  28+ 9A3E              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
  29+ 9A3E
  30+ 9A3E              ;   Limpiamos almacenes.
  31+ 9A3E
  32+ 9A3E              ;    call Limpia_Coordenadas_X
  33+ 9A3E
  34+ 9A3E              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
  35+ 9A3E
  36+ 9A3E 21 15 8A         ld hl,Coordenadas_X_Entidad
  37+ 9A41 3A AA 89         ld a,(Coordenada_X)
  38+ 9A44 CD 66 9A         call Guarda_coordenadas_X
  39+ 9A47
  40+ 9A47              ;   Almacenamos las coordenadas X de Amadeus.
  41+ 9A47
  42+ 9A47 3A 50 87         ld a,(CX_Amadeus)
  43+ 9A4A CD 66 9A         call Guarda_coordenadas_X
  44+ 9A4D CD 7A 9A         call Compara_coordenadas_X
  45+ 9A50 C0               ret nz
  46+ 9A51
  47+ 9A51 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
  48+ 9A53 32 AD 89         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
  49+ 9A56
  50+ 9A56 2A E9 89         ld hl,(Puntero_store_caja)
  51+ 9A59 2C               inc l
  52+ 9A5A 2C               inc l
  53+ 9A5B 2C               inc l
  54+ 9A5C 2C               inc l
  55+ 9A5D 22 13 8A         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
  56+ 9A60
  57+ 9A60 21 12 8A         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
  58+ 9A63 CB D6            set 2,(hl)
  59+ 9A65
  60+ 9A65 C9               ret
  61+ 9A66
  62+ 9A66               ; ----- ----- ----- ----- -----
  63+ 9A66
  64+ 9A66 77           Guarda_coordenadas_X ld (hl),a
  65+ 9A67 3C               inc a
  66+ 9A68 2C               inc l
  67+ 9A69 77               ld (hl),a
  68+ 9A6A 3C               inc a
  69+ 9A6B 2C               inc l
  70+ 9A6C 77               ld (hl),a
  71+ 9A6D 2C               inc l
  72+ 9A6E C9               ret
  73+ 9A6F
  74+ 9A6F AF           Limpia_Coordenadas_X xor a
  75+ 9A70 06 06            ld b,6
  76+ 9A72 21 18 8A         ld hl,Coordenadas_X_Amadeus
  77+ 9A75 77           1 ld (hl),a
  78+ 9A76 23               inc hl
  79+ 9A77 10 FC            djnz 1B
  80+ 9A79 C9               ret
  81+ 9A7A
  82+ 9A7A              ; ----- ----- ----- ----- -----
  83+ 9A7A
  84+ 9A7A              Compara_coordenadas_X
  85+ 9A7A
  86+ 9A7A DD 21 15 8A      ld ix,Coordenadas_X_Entidad
  87+ 9A7E DD 7E 00         ld a,(ix+0)
  88+ 9A81 CD 8F 9A         call Comparando
  89+ 9A84 C8               ret z
  90+ 9A85
  91+ 9A85 3C               inc a
  92+ 9A86 CD 9E 9A         call Comparando_1
  93+ 9A89 C8               ret z
  94+ 9A8A
  95+ 9A8A 3C               inc a
  96+ 9A8B CD 9E 9A         call Comparando_1
  97+ 9A8E C9               ret
  98+ 9A8F
  99+ 9A8F              ; ----- ----- ----- ----- -----
 100+ 9A8F              ;
 101+ 9A8F              ;   4/12/23
 102+ 9A8F              ;
 103+ 9A8F              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 104+ 9A8F
 105+ 9A8F              Comparando
 106+ 9A8F
 107+ 9A8F DD 2C            inc ixl
 108+ 9A91 DD 2C            inc ixl
 109+ 9A93 DD 2C            inc ixl
 110+ 9A95
 111+ 9A95 DD 46 00         ld b,(ix+0)
 112+ 9A98 DD 4E 01         ld c,(ix+1)
 113+ 9A9B DD 56 02         ld d,(ix+2)
 114+ 9A9E
 115+ 9A9E B8           Comparando_1 cp b
 116+ 9A9F C8               ret z
 117+ 9AA0 B9               cp c
 118+ 9AA1 C8               ret z
 119+ 9AA2 BA               cp d
 120+ 9AA3 C9               ret
 121+ 9AA4
 122+ 9AA4              ; -----------------------------------------------------------------------
 123+ 9AA4              ;
 124+ 9AA4              ;   04/7/24
 125+ 9AA4              ;
 126+ 9AA4
 127+ 9AA4              Detecta_colision_nave_entidad
 128+ 9AA4
 129+ 9AA4              ; Salimos de la rutina si no hay advertencia de posible colisión.
 130+ 9AA4
 131+ 9AA4 21 12 8A     	ld hl,Impacto2
 132+ 9AA7 CB 56        	bit 2,(hl)
 133+ 9AA9 C8           	ret z
 134+ 9AAA
 135+ 9AAA              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 136+ 9AAA
 137+ 9AAA 2A 56 87         ld hl,(Pamm_Amadeus)
 138+ 9AAD CD 5B 8D         call Extrae_address
 139+ 9AB0 54               ld d,h
 140+ 9AB1 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 141+ 9AB2
 142+ 9AB2 2A 54 87         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 143+ 9AB5 06 10            ld b,16                                        ; Contador de scanlines en B.
 144+ 9AB7 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 145+ 9ABA
 146+ 9ABA C5           1 push bc
 147+ 9ABB 06 03            ld b,3
 148+ 9ABD E5               push hl
 149+ 9ABE
 150+ 9ABE              ; .db
 151+ 9ABE
 152+ 9ABE 1A           3 ld a,(de)
 153+ 9ABF A7               and a
 154+ 9AC0 20 03            jr nz,4F
 155+ 9AC2
 156+ 9AC2 2C               inc l
 157+ 9AC3 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 158+ 9AC5
 159+ 9AC5 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 160+ 9AC7 28 04            jr z,2F
 161+ 9AC9
 162+ 9AC9              ; Impacto.
 163+ 9AC9 FD 2D            dec iyl
 164+ 9ACB 28 22            jr z,5F
 165+ 9ACD
 166+ 9ACD 1C           2 inc e
 167+ 9ACE 10 EE            djnz 3B
 168+ 9AD0
 169+ 9AD0 E1               pop hl
 170+ 9AD1
 171+ 9AD1              ; Hay salto de línea en el puntero de impresión ???
 172+ 9AD1
 173+ 9AD1 7C               ld a,h
 174+ 9AD2 D6 57            sub $57
 175+ 9AD4 20 0A            jr nz,6F
 176+ 9AD6
 177+ 9AD6              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 178+ 9AD6
 179+ 9AD6 2A 54 87         ld hl,(p.imp.amadeus)
 180+ 9AD9 3E 20            ld a,$20
 181+ 9ADB A7               and a
 182+ 9ADC 85               add l
 183+ 9ADD 6F               ld l,a
 184+ 9ADE 18 01            jr 7F
 185+ 9AE0
 186+ 9AE0 24           6 inc h
 187+ 9AE1
 188+ 9AE1 C1           7 pop bc
 189+ 9AE2 10 D6            djnz 1B
 190+ 9AE4
 191+ 9AE4              ;   Fin de la comparativa.
 192+ 9AE4
 193+ 9AE4              ;   NO HAY COLISIÓN !!!!!.
 194+ 9AE4              ;
 195+ 9AE4              ;   .db (Impacto) de Amadeus a "0".
 196+ 9AE4              ;   RES el bit2 de (Impacto2).
 197+ 9AE4              ;
 198+ 9AE4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 199+ 9AE4              ;   Lo colocamos a "0".
 200+ 9AE4
 201+ 9AE4 21 12 8A         ld hl,Impacto2
 202+ 9AE7 CB 96            res 2,(hl)
 203+ 9AE9 2A 13 8A         ld hl,(Entidad_sospechosa_de_colision)
 204+ 9AEC 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 205+ 9AEE C9               ret
 206+ 9AEF
 207+ 9AEF              ;   HAY COLISIÓN !!!!!.
 208+ 9AEF              ;
 209+ 9AEF              ;   .db (Impacto) de Amadeus a "1".
 210+ 9AEF              ;   SET el bit3 de (Impacto2).
 211+ 9AEF              ;
 212+ 9AEF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 213+ 9AEF
 214+ 9AEF E1           5 pop hl
 215+ 9AF0 C1               pop bc
 216+ 9AF1
 217+ 9AF1 21 53 87         ld hl,Impacto_Amadeus
 218+ 9AF4 36 01            ld (hl),1
 219+ 9AF6 21 12 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 220+ 9AF9 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 221+ 9AFB
 222+ 9AFB 11 90 85         ld de,Indice_Explosion_2x3
 223+ 9AFE 2A 13 8A         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 224+ 9B01 2C               inc l
 225+ 9B02 2C               inc l
 226+ 9B03 2C               inc l
 227+ 9B04 73               ld (hl),e
 228+ 9B05 2C               inc l
 229+ 9B06 72               ld (hl),d
 230+ 9B07
 231+ 9B07 C9               ret
 232+ 9B08
 233+ 9B08              ; -----
 234+ 9B08
 235+ 9B08              ;3 pop hl
 236+ 9B08              ;    call NextScan
 237+ 9B08              ;    push hl
 238+ 9B08              ;    ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 239+ 9B08              ;    cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 240+ 9B08              ;    jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 241+ 9B08               ;   jr nc,1F
 242+ 9B08              ;                                                  ; _ 2º scanline si esto es así.
 243+ 9B08              ;    djnz 2B
 244+ 9B08
 245+ 9B08              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 246+ 9B08
 247+ 9B08
 248+ 9B08
 249+ 9B08
 250+ 9B08
# file closed: Disparo_2.asm
2020  9B08              0
2021  9B08
2022  9B08              	SAVESNA "Pruebas.sna", START
2023  9B08
2024  9B08
2025  9B08
2026  9B08
# file closed: Banco_de_pruebas.asm
