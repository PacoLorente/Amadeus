# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1B 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15
  44  AA15              ;! Debuggggggggggggggggggg
  45  AA15
  46  AA15              ;	ld a,(Contador_de_frames_2)
  47  AA15              ;	cp 1
  48  AA15              ;	jr nz,1F
  49  AA15              ;	ex af,af
  50  AA15              ;	ld a,(Contador_de_frames)
  51  AA15              ;	cp $c4 ;	$c1 es el último FRAME que se ve bien.
  52  AA15              ;	jr z,$
  53  AA15              ;	jr nc,$
  54  AA15
  55  AA15 CD 0D 8E     1 call Pinta_entidades
  56  AA18              ;	call Pinta_Amadeus
  57  AA18 CD E1 8D     	call Gestiona_entidades
  58  AA1B              ;	call Gestiona_Amadeus
  59  AA1B
  60  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA1B
  62  AA1B CD 1A 8E     	call Actualiza_relojes
  63  AA1E
  64  AA1E              ;	call Recupera_parametros_DRAW
  65  AA1E
  66  AA1E              ;! Debuggg
  67  AA1E
  68  AA1E FD E1        	pop iy
  69  AA20 DD E1        	pop ix
  70  AA22 F1           	pop af
  71  AA23 C1           	pop bc
  72  AA24 D1           	pop de
  73  AA25 E1           	pop hl
  74  AA26 D9           	exx
  75  AA27 C1           	pop bc
  76  AA28 D1           	pop de
  77  AA29 E1           	pop hl
  78  AA2A 08           	ex af,af'
  79  AA2B F1           	pop af
  80  AA2C 08           	ex af,af'
  81  AA2D D9           	exx
  82  AA2E
  83  AA2E ED 7B 1B 89  	ld sp,(Stack_3)
  84  AA32
  85  AA32 FB           	ei
  86  AA33 C9           	ret
  87  AA34
  88  AA34              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  89  AA34
  90  AA34              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA34              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA34              ;
   3+ AA34              ;	17/02/23
   4+ AA34              ;
   5+ AA34              ;	Sprites e índices.
   6+ AA34
   7+ AA34              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 21 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 27 89        	defw End_Snapshot_1
 267+ 8500 2B 89        	defw End_Snapshot_2
 268+ 8502 2F 89        	defw End_Snapshot_3
 269+ 8504 23 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 29 89        	defw End_Snapshot_disparos_1
 271+ 8508 2D 89        	defw End_Snapshot_disparos_2
 272+ 850A 31 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  91  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 0C 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 0C 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  92  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CF 87        	defw Nivel_2
   7+ 87BE DC 87        	defw Nivel_3
   8+ 87C0 EC 87        	defw Nivel_4
   9+ 87C2 FE 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 06           Nivel_1 db 6	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1
  19+ 87CD 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 87D0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 87D4 01 02
  22+ 87D6 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87DA 01 02
  23+ 87DC 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 03 01 01 01  	db 3,1,1,1,1
  26+ 87EB 01
  27+ 87EC 11           Nivel_4 db 17									; Nº de entidades.
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 04 01 01 01  	db 4,1,1,1,1
  30+ 87FB 01
  31+ 87FC 02 03        	db 2,3
  32+ 87FE 14           Nivel_5 db 20									; Nº de entidades.
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  35+ 880D 01
  36+ 880E 05 01 01 01  	db 5,1,1,1,1
  36+ 8812 01
  37+ 8813
  38+ 8813              ;---------------------------------------------------------------------------------------------------------------
  39+ 8813              ;
  40+ 8813              ;   3/9/23
  41+ 8813              ;
  42+ 8813              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8813              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8813              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8813              ;	_en la caja DRAW correspondiente.
  46+ 8813              ;
  47+ 8813              ;	MODIFICA: HL,DE y A.
  48+ 8813              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8813
  50+ 8813              Inicializa_Punteros_de_nivel
  51+ 8813
  52+ 8813 21 BA 87     	ld hl,Indice_de_niveles
  53+ 8816 22 60 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8819 CD 84 8C     	call Extrae_address
  55+ 881C 7E           	ld a,(hl)
  56+ 881D 32 0F 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  57+ 8820 23           	inc hl
  58+ 8821 22 62 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  59+ 8824 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  60+ 8825
  61+ 8825              ;---------------------------------------------------------------------------------------------------------------
  62+ 8825              ;
  63+ 8825              ;   13/5/23
  64+ 8825              ;
  65+ 8825              ;	Destruye A,BC,HL,DE
  66+ 8825
  67+ 8825              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8825              ;	_del juego.
  69+ 8825
  70+ 8825              Prepara_cajas
  71+ 8825
  72+ 8825              ; Preparamos los punteros de las cajas.
  73+ 8825
  74+ 8825 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8828 CD 84 8C     	call Extrae_address
  76+ 882B CD 68 88     	call Avanza_caja
  77+ 882E
  78+ 882E CD AC 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8831
  80+ 8831 2A 62 89     	ld hl,(Datos_de_nivel)
  81+ 8834
  82+ 8834              ; HL está en los datos del nivel correspondiente.
  83+ 8834              ; B actuará como contador de cajas.
  84+ 8834
  85+ 8834 C5           1 push bc
  86+ 8835
  87+ 8835 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8836 CD 59 88     	call PreparaBC
  89+ 8839
  90+ 8839 21 96 87     	ld hl,Indice_de_entidades
  91+ 883C CD 61 88     	call SBC_HL_con_BC_y_Extrae
  92+ 883F 22 15 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8842
  94+ 8842 CD 72 88     	call Datos_de_entidad_a_caja
  95+ 8845
  96+ 8845 2A 0D 89     	ld hl,(Indice_restore_caja)
  97+ 8848 CD 84 8C     	call Extrae_address
  98+ 884B CD 68 88     	call Avanza_caja
  99+ 884E
 100+ 884E 2A 62 89     	ld hl,(Datos_de_nivel)
 101+ 8851 23           	inc hl
 102+ 8852 22 62 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8855
 104+ 8855 C1           	pop bc
 105+ 8856 10 DC        	djnz 1B
 106+ 8858 C9           	ret
 107+ 8859
 108+ 8859 CB 27        PreparaBC sla a
 109+ 885B D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 885D 4F           	ld c,a
 111+ 885E 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8860 C9           	ret
 113+ 8861
 114+ 8861 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8862 ED 4A        	adc hl,bc
 116+ 8864 CD 84 8C     	call Extrae_address
 117+ 8867 C9           	ret
 118+ 8868
 119+ 8868 22 09 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 886B 13           	inc de
 121+ 886C 13           	inc de
 122+ 886D EB           	ex de,hl
 123+ 886E 22 0D 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8871 C9           	ret
 125+ 8872
 126+ 8872              Datos_de_entidad_a_caja
 127+ 8872
 128+ 8872              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8872
 130+ 8872
 131+ 8872 ED 5B 09 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8876
 133+ 8876 01 02 00     	ld bc,2
 134+ 8879 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 887B
 136+ 887B 01 07 00     	ld bc,7
 137+ 887E CD A6 88     	call Situa_DE
 138+ 8881
 139+ 8881 01 05 00     	ld bc,5
 140+ 8884 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8886
 142+ 8886 01 04 00     	ld bc,4
 143+ 8889 CD A6 88     	call Situa_DE
 144+ 888C
 145+ 888C 01 07 00     	ld bc,7
 146+ 888F ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8891
 148+ 8891 01 12 00     	ld bc,18
 149+ 8894 CD A6 88     	call Situa_DE
 150+ 8897
 151+ 8897 01 02 00     	ld bc,2
 152+ 889A ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 889C
 154+ 889C              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 889C              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 889C
 157+ 889C 01 0F 00     	ld bc,15									; *****
 158+ 889F CD A6 88     	call Situa_DE
 159+ 88A2
 160+ 88A2 3E 03        	ld a,3
 161+ 88A4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 88A5
 163+ 88A5 C9           	ret
 164+ 88A6
 165+ 88A6 EB           Situa_DE ex de,hl
 166+ 88A7 A7           	and a
 167+ 88A8 ED 4A        	adc hl,bc
 168+ 88AA EB           	ex de,hl
 169+ 88AB C9           	ret
 170+ 88AC
 171+ 88AC              ;---------------------------------------------------------------------------------------------------------------
 172+ 88AC              ;
 173+ 88AC              ;	21/5/23
 174+ 88AC              ;
 175+ 88AC              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 88AC              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 88AC              ;
 178+ 88AC              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 88AC              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 88AC              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 88AC              ;
 182+ 88AC              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 88AC              ;	MODIFICA: A y B.
 184+ 88AC              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 88AC
 186+ 88AC              Admin_num_entidades
 187+ 88AC
 188+ 88AC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 88AC
 190+ 88AC 3A 0F 89     	ld a,(Numero_de_entidades)
 191+ 88AF A7           	and a
 192+ 88B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 88B0              ;	jr z,$
 194+ 88B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 88B0
 196+ 88B0 20 03        	jr nz,3F
 197+ 88B2
 198+ 88B2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 88B2
 200+ 88B2 CD 13 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 88B5
 202+ 88B5 3A 0F 89     3 ld a,(Numero_de_entidades)
 203+ 88B8 FE 0A        	cp 10
 204+ 88BA 38 08        	jr c,1F
 205+ 88BC
 206+ 88BC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 88BC              ; Actualizamos variables.
 208+ 88BC
 209+ 88BC 3E 0A        	ld a,10
 210+ 88BE 32 10 89     	ld (Numero_parcial_de_entidades),a
 211+ 88C1 47           	ld b,a
 212+ 88C2 18 04        	jr 2F
 213+ 88C4
 214+ 88C4              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 88C4              ; (Numero_de_entidades)="0".
 216+ 88C4
 217+ 88C4 32 10 89     1 ld (Numero_parcial_de_entidades),a
 218+ 88C7 47           	ld b,a
 219+ 88C8 C9           2 ret
# file closed: Niveles.asm
  93  88C9
  94  88C9              ; ******************************************************************************************************************************************************************************************
  95  88C9              ; Constantes.
  96  88C9              ; ******************************************************************************************************************************************************************************************
  97  88C9              ;
  98  88C9              ; 4/9/23
  99  88C9              ;
 100  88C9              ; Constantes generales.
 101  88C9              ;
 102  88C9
 103  88C9              Sprite_vacio equ $f000
 104  88C9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 105  88C9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 106  88C9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 107  88C9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 108  88C9
 109  88C9              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 110  88C9              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 111  88C9              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 112  88C9              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 113  88C9              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 114  88C9              ;
 115  88C9              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 116  88C9              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 117  88C9              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 118  88C9              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 119  88C9              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 120  88C9              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 121  88C9
 122  88C9              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 123  88C9              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 124  88C9
 125  88C9
 126  88C9
 127  88C9              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 128  88C9
 129  88C9              ; ******************************************************************************************************************************************************************************************
 130  88C9              ; Variables.
 131  88C9              ; ******************************************************************************************************************************************************************************************
 132  88C9              ;
 133  88C9              ; 28/07/23
 134  88C9              ;
 135  88C9              ; Variables de DRAW. (Motor principal).
 136  88C9              ;
 137  88C9              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 138  88C9
 139  88C9 00           Filas db 0												; Filas. [DRAW]
 140  88CA 00           Columns db 0  											; Nº de columnas. [DRAW]
 141  88CB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 142  88CD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 143  88CF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 144  88D0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 145  88D1
 146  88D1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 147  88D1
 148  88D1 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 149  88D2              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 150  88D2              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 151  88D2 00           Attr db 0												; Atributos de la entidad:
 152  88D3
 153  88D3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 154  88D3              ;
 155  88D3              ;	COLORES: 0 ..... NEGRO
 156  88D3              ;    		 1 ..... AZUL
 157  88D3              ; 			 2 ..... ROJO
 158  88D3              ;			 3 ..... MAGENTA
 159  88D3              ; 			 4 ..... VERDE
 160  88D3              ; 			 5 ..... CIAN
 161  88D3              ;			 6 ..... AMARILLO
 162  88D3              ; 			 7 ..... BLANCO
 163  88D3
 164  88D3 00 00        Indice_Sprite_der defw 0
 165  88D5 00 00        Indice_Sprite_izq defw 0
 166  88D7 00 00        Puntero_DESPLZ_der defw 0
 167  88D9 00 00        Puntero_DESPLZ_izq defw 0
 168  88DB
 169  88DB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 170  88DD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 171  88DE
 172  88DE              ; Variables de objeto. (Características).
 173  88DE
 174  88DE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 175  88DF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 176  88E0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 177  88E1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 178  88E2
 179  88E2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 180  88E3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 181  88E3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 182  88E3 00 00 00...  Variables_de_borrado ds 6
 183  88E9
 184  88E9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 185  88EB 00 00        	defw 0
 186  88ED 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 187  88EF 00 00 00 00  	db 0,0,0,0
 188  88F3
 189  88F3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 190  88F3
 191  88F3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 192  88F4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 193  88F4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 194  88F4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 195  88F4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 196  88F4              ;
 197  88F4              ; 														DESCRIPCIÖN:
 198  88F4              ;
 199  88F4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 200  88F4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 201  88F4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 202  88F4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 203  88F4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 204  88F4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 205  88F4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 206  88F4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 207  88F4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 208  88F4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 209  88F4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 210  88F4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 211  88F4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 212  88F4              ;
 213  88F4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 214  88F4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 215  88F4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 216  88F4
 217  88F4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 218  88F4
 219  88F4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 220  88F6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 221  88F8 00 00        Puntero_indice_mov_bucle defw 0							;
 222  88FA              ;
 223  88FA              ;
 224  88FA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 225  88FB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 226  88FB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 227  88FB 00           Incrementa_puntero_backup db 0
 228  88FC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 229  88FD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 230  88FD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 231  88FE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 232  88FF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 233  8900              ;
 234  8900              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 235  8900              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 236  8900              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 237  8900              ;
 238  8900              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 239  8900              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 240  8900              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 241  8900              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 242  8900              ;
 243  8900              ;														;	"$ff" ..... Bucle infinito de repetición.
 244  8900              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 245  8900              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 246  8900
 247  8900
 248  8900              ; Variables de funcionamiento. [DRAW].
 249  8900
 250  8900 00           Columnas db 0
 251  8901 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 252  8903              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8903 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 254  8904
 255  8904              ; variables de control general.
 256  8904
 257  8904 00           Ctrl_2 db 0
 258  8905              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 259  8905              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 260  8905              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 261  8905              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 262  8905              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 263  8905              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 264  8905              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 265  8905              ;
 266  8905              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 267  8905              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 268  8905              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 269  8905              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 270  8905              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 271  8905
 272  8905 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 273  8906
 274  8906              ;! 61 Bytes por entidad.
 275  8906
 276  8906              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 277  8906              ;					         		---------;      ;---------
 278  8906
 279  8906
 280  8906              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8906
 282  8906 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 283  8907
 284  8907              ;														DESCRIPCIÓN:
 285  8907              ;
 286  8907              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 287  8907              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 288  8907              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 289  8907              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 290  8907              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 291  8907              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 292  8907
 293  8907              ;														BIT 3, Recarga de nueva oleada.
 294  8907              ;														BIT 4, Recarga de nueva oleada.
 295  8907              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 296  8907              ;														BIT 6, **** Frame completo.
 297  8907              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 298  8907
 299  8907 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 300  8909              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 301  8909              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 302  8909              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 303  8909
 304  8909              ; Ctrl_3 db 0											; Byte de control de propósito general.
 305  8909
 306  8909              ;														DESCRIPCIÓN:
 307  8909              ;
 308  8909              ;														BIT 0,
 309  8909
 310  8909              ; Gestión de ENTIDADES y CAJAS.
 311  8909
 312  8909 00 00        Puntero_store_caja defw 0
 313  890B 00 00        Puntero_restore_caja defw 0
 314  890D 00 00        Indice_restore_caja defw 0
 315  890F 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 316  8910 00           Numero_parcial_de_entidades db 0
 317  8911 00           Entidades_en_curso db 0									; ..... ..... .....
 318  8912 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 319  8913              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 320  8913              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 321  8913              ;														; _ (Numero_de_malotes)="0".
 322  8913 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 323  8915 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 324  8917              ;														; _ puntero (Indice_entidades).
 325  8917
 326  8917
 327  8917              ;---------------------------------------------------------------------------------------------------------------
 328  8917              ;
 329  8917              ;	8/11/23
 330  8917              ;
 331  8917              ;	Álbumes.
 332  8917
 333  8917 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 334  8919              ;														; _variable para almacenar lo posición del puntero_
 335  8919              ; 														; _de pila, SP.
 336  8919 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 337  891B              ;														; La utiliza la rutina [Extrae_foto_registros].
 338  891B 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 339  891D 00 00        Stack_snapshot defw 0
 340  891F 00 00        Stack_snapshot_disparos defw 0
 341  8921
 342  8921 00 00        End_Snapshot defw 0
 343  8923              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 344  8923 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 345  8925              ;														; _el snapshot de los registros del siguiente disparo.
 346  8925              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 347  8925 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 348  8927 00 00        End_Snapshot_1 defw 0
 349  8929 00 00        End_Snapshot_disparos_1 defw 0
 350  892B 00 00        End_Snapshot_2 defw 0
 351  892D 00 00        End_Snapshot_disparos_2 defw 0
 352  892F 00 00        End_Snapshot_3 defw 0
 353  8931 00 00        End_Snapshot_disparos_3 defw 0
 354  8933
 355  8933 00 00        Puntero_indice_album_de_fotos defw 0
 356  8935 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 357  8937
 358  8937 00 00        Puntero_indice_End_Snapshot defw 0
 359  8939 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 360  893B 00 00        Puntero_de_End_Snapshot defw 0
 361  893D 00 00        Puntero_de_End_Snapshot_disparos defw 0
 362  893F
 363  893F F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 364  8940              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 365  8940
 366  8940 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 367  8941              ;
 368  8941              ;														DESCRIPCIÓN:
 369  8941              ;
 370  8941              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 371  8941              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 372  8941              ;																_ álbum. También indica que "hay recolocación" antes de ejecutar la "cascada de álbumes". El tipo de recolocación lo definen_
 373  8941              ;																_ los bits 1 y 2.
 374  8941              ;														BIT 1, Indica que la recolocación de álbumes será de Album3_a_Album2, (siempre que Álbum_3 contenga un FRAME completo).
 375  8941              ;														BIT 2, Indica que la recolocación de álbumes será de Album2_a_Album1, (siempre que álbum_2 contenga un FRAME completo).
 376  8941              ;																Nota: En el caso de que al hacer la recolocación, nos encontremos con que el álbum donante sigue incompleto, saltaremos_
 377  8941              ;																	_ a ejecutar la "Casacada" de álbumes para limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 378  8941              ;														BIT 3, Existe DOBLE RECOLOCACIÓN. Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Siempre que Album_de_fotos_3 contenga un FRAME completo,_
 379  8941              ;																_ pasaremos Album3_a_Album2 y Album2_a_Album1. También modificaremos los punteros y los situaremos al comienzo de Album_de_fotos_2.
 380  8941              ;																_ En el caso de que al hacer la DOBLE RECOLOCACIÓN, Album_de_fotos_3 esté incompleto, saltaremos a ejecutar la "Casacada" de álbumes para_
 381  8941              ;																_ limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 382  8941              ;														BIT 4, Buffer vacío !!!. Album_de_fotos está vacío y no podemos volcar Album_de_fotos_1. Está incompleto.
 383  8941              ;																_ El siguiente FRAME no se imprime, NO HAY CUADRO.
 384  8941
 385  8941              ;---------------------------------------------------------------------------------------------------------------
 386  8941
 387  8941              ; Gestión de Disparos.
 388  8941
 389  8941 00           Numero_de_disparotes db 0
 390  8942 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 391  8944 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 392  8946 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 393  8947              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 394  8947              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 395  8947 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 396  8949              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 397  8949              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 398  8949              ;														; _produzca colisión.
 399  8949 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 400  894B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 401  894B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 402  894E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 403  894E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 404  8951              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 405  8951 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 406  8953 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 407  8954
 408  8954              ;---------------------------------------------------------------------------------------------------------------
 409  8954
 410  8954              ; Relojes y temporizaciones.
 411  8954
 412  8954 00           Contador_de_frames db 0
 413  8955 00           Contador_de_frames_2 db 0
 414  8956
 415  8956 04           Clock_explosion db 4
 416  8957 1E           Clock_Entidades_en_curso db 30
 417  8958 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 418  8959              ;														; Repite la oleada de entidades.
 419  8959 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 420  895A 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 421  895B 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 422  895C
 423  895C 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 424  895D 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 425  895E 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 426  895F
 427  895F              ;---------------------------------------------------------------------------------------------------------------
 428  895F
 429  895F              ; Gestión de NIVELES.
 430  895F
 431  895F 00           Nivel db 0												; Nivel actual del juego.
 432  8960 00 00        Puntero_indice_NIVELES defw 0
 433  8962 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 434  8964              ; 														; _ que definen el NIVEL.
 435  8964              ; Y todo comienza aquí .....
 436  8964              ;
 437  8964              ; Rutina principal *************************************************************************************************************************************************************************
 438  8964              ;
 439  8964              ;	14/11/22
 440  8964
 441  8964              START
 442  8964
 443  8964 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 444  8967 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 445  8969 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 446  896B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 447  896D F3           	DI
 448  896E
 449  896E 3E 07        	ld a,%00000111
 450  8970 CD 39 99     	call Cls
 451  8973
 452  8973 CD 5D 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 453  8976
 454  8976              ; INICIALIZACIÓN.
 455  8976
 456  8976 CD 13 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 457  8979 CD 25 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 458  897C CD 82 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 459  897F              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 460  897F CD 98 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 461  8982              ;													     ; _ malotes antes de guardar ninguna foto.
 462  8982              ; ----------
 463  8982
 464  8982 CD 0D 8D     	call Restore_entidad
 465  8985
 466  8985 21 10 89     	ld hl,Numero_parcial_de_entidades
 467  8988 46           	ld b,(hl)
 468  8989 04           	inc b
 469  898A 05           	dec b
 470  898B 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 471  898D
 472  898D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 473  898D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 474  898D              ;	Pintamos el resto de entidades:
 475  898D
 476  898D              ;	INICIA ENTIDADES !!!!!
 477  898D
 478  898D C5           1 push bc  												; Guardo el contador de entidades.
 479  898E CD 52 8B     	call Inicia_entidad
 480  8991 C1           	pop bc
 481  8992 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 482  8994
 483  8994              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 484  8994              ; (Esto se dá cuando se inicia una nueva oleada).
 485  8994
 486  8994 3A 06 89     	ld a,(Ctrl_1)
 487  8997 CB 5F        	bit 3,a
 488  8999 20 00        	jr nz,5F											; Loop
 489  899B
 490  899B              ; 	INICIA AMADEUS !!!!!
 491  899B
 492  899B              3
 493  899B
 494  899B              ;	call Restore_Amadeus
 495  899B              ;	call Inicia_Puntero_objeto
 496  899B              ;	call Draw
 497  899B              ;	call Guarda_foto_registros
 498  899B              ;	call Guarda_datos_de_borrado_Amadeus
 499  899B
 500  899B              ;	ld de,Amadeus_db
 501  899B              ;	call Store_Amadeus
 502  899B
 503  899B              ; 	INICIA DISPAROS !!!!!
 504  899B
 505  899B              ;	call Inicia_Puntero_Disparo_Entidades
 506  899B              ;	call Inicia_Puntero_Disparo_Amadeus
 507  899B
 508  899B              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 509  899B
 510  899B CD 82 8B     5 call Inicia_punteros_de_cajas
 511  899E CD 0D 8D     	call Restore_entidad
 512  89A1
 513  89A1 3A 06 89     	ld a,(Ctrl_1)
 514  89A4 CB 5F        	bit 3,a
 515  89A6 28 07        	jr z,6F
 516  89A8
 517  89A8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 518  89A8
 519  89A8 21 06 89     	ld hl,Ctrl_1
 520  89AB CB 9E        	res 3,(hl)
 521  89AD 18 03        	jr Main
 522  89AF
 523  89AF              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 524  89AF              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 525  89AF              ; _ para situarnos en el siguiente album.
 526  89AF
 527  89AF CD C9 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 528  89B2
 529  89B2
 530  89B2              ; ------------------------------------
 531  89B2
 532  89B2              Main
 533  89B2              ;
 534  89B2              ;	3/8/23
 535  89B2
 536  89B2              ; 	ei
 537  89B2
 538  89B2 3A 57 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 539  89B5 47           	ld b,a
 540  89B6 3A 54 89     	ld a,(Contador_de_frames)
 541  89B9 B8           	cp b
 542  89BA 20 18        	jr nz,13F
 543  89BC
 544  89BC 3A 10 89     	ld a,(Numero_parcial_de_entidades)
 545  89BF 47           	ld b,a
 546  89C0 3A 11 89     	ld a,(Entidades_en_curso)
 547  89C3 B8           	cp b
 548  89C4 28 0E        	jr z,13F
 549  89C6 30 0C        	jr nc,13F
 550  89C8
 551  89C8 3C           	inc a
 552  89C9 32 11 89     	ld (Entidades_en_curso),a
 553  89CC
 554  89CC 3A 57 89     	ld a,(Clock_Entidades_en_curso)
 555  89CF
 556  89CF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 557  89CF              ;! _ IMPREDECIBLE !!!!
 558  89CF
 559  89CF C6 64        	add 100
 560  89D1 32 57 89     	ld (Clock_Entidades_en_curso),a
 561  89D4
 562  89D4              ; Habilita disparos.
 563  89D4
 564  89D4 21 59 89     13 ld hl,Disparo_Amadeus
 565  89D7 11 5B 89     	ld de,CLOCK_repone_disparo_Amadeus
 566  89DA CD FD 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 567  89DD
 568  89DD 21 5C 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 569  89E0 11 5E 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 570  89E3 CD FD 9C     	call Habilita_disparos
 571  89E6
 572  89E6              ; COLISIONES.
 573  89E6
 574  89E6 CD 0E 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 575  89E9
 576  89E9              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 577  89E9              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 578  89E9              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 579  89E9
 580  89E9 AF           	xor a
 581  89EA 32 46 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 582  89ED
 583  89ED CD 82 8B     	call Inicia_punteros_de_cajas
 584  89F0 CD 0D 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 585  89F3              ; 														; _ en DRAW.
 586  89F3 3A C9 88     	ld a,(Filas)
 587  89F6 A7           	and a
 588  89F7 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 589  89F9 CD 1F 8D     	call Incrementa_punteros_de_cajas
 590  89FC 18 F2        	jr 12B
 591  89FE
 592  89FE              ; ---------------------------------------------------------------------------------------
 593  89FE
 594  89FE 3A 10 89     10 ld a,(Numero_parcial_de_entidades)
 595  8A01 47               ld b,a
 596  8A02 A7           	and a
 597  8A03 20 14        	jr nz,11F
 598  8A05
 599  8A05 21 06 89     	ld hl,Ctrl_1
 600  8A08 CB 66        	bit 4,(hl)
 601  8A0A C2 97 8A     	jp nz,16F
 602  8A0D
 603  8A0D 21 06 89     	ld hl,Ctrl_1
 604  8A10 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 605  8A12
 606  8A12 3A 54 89     	ld a,(Contador_de_frames)
 607  8A15 3C           	inc a
 608  8A16 32 58 89     	ld (Activa_recarga_cajas),a
 609  8A19
 610  8A19              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 611  8A19
 612  8A19 3A 11 89     11 ld a,(Entidades_en_curso)
 613  8A1C A7           	and a
 614  8A1D CA 97 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 615  8A20 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 616  8A21
 617  8A21              ; Código que ejecutamos con cada entidad:
 618  8A21              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 619  8A21
 620  8A21 C5           15 push bc 												; Nº de entidades en curso.
 621  8A22
 622  8A22              ; Impacto ???
 623  8A22
 624  8A22 3A E2 88     	ld a,(Impacto)
 625  8A25 A7           	and a
 626  8A26 28 32        	jr z,8F
 627  8A28
 628  8A28              ; Hay Impacto en esta entidad.
 629  8A28
 630  8A28 21 56 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 631  8A2B 35           	dec (hl)
 632  8A2C 20 63        	jr nz,17F
 633  8A2E
 634  8A2E              ;! Velocidad de la animación de la explosión.
 635  8A2E
 636  8A2E 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 637  8A30              ;														; _,(velocidad de la explosión).
 638  8A30
 639  8A30              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 640  8A30 18 FE        	jr $
 641  8A32
 642  8A32 CD CE 8D     	call Repone_datos_de_borrado
 643  8A35 CD 26 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 644  8A38
 645  8A38
 646  8A38              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 647  8A38
 648  8A38 3A 04 89     	ld a,(Ctrl_2)
 649  8A3B CB 4F        	bit 1,a
 650  8A3D 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 651  8A3F
 652  8A3F              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 653  8A3F
 654  8A3F 3A D1 88     	ld a,(CTRL_DESPLZ)
 655  8A42 A7           	and a
 656  8A43 20 08        	jr nz,18F
 657  8A45
 658  8A45 21 84 84     	ld hl,Indice_Explosion_2x2-2
 659  8A48 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 660  8A4B 18 06        	jr 19F
 661  8A4D
 662  8A4D 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 663  8A50 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 664  8A53
 665  8A53 21 04 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 666  8A56 CB CE        	set 1,(hl)
 667  8A58 18 22        	jr 7F
 668  8A5A
 669  8A5A              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 670  8A5A              ; _con las coordenadas de la entidad almacenada en DRAW.
 671  8A5A
 672  8A5A 3A 06 89     8 ld a,(Ctrl_1)
 673  8A5D CB 57        	bit 2,a
 674  8A5F 28 1B        	jr z,7F
 675  8A61
 676  8A61 2A 49 89     	ld hl,(Coordenadas_disparo_certero)
 677  8A64 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 678  8A65              ;														; E contiene la coordenada_X del disparo.
 679  8A65 2A CF 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 680  8A68              ;														; H FILA, (Coordenada_y de la entidad).
 681  8A68 A7           	and a
 682  8A69 ED 52        	sbc hl,de
 683  8A6B
 684  8A6B CD 45 92     	call Determina_resultado_comparativa
 685  8A6E
 686  8A6E 78           	ld a,b
 687  8A6F A7           	and a
 688  8A70 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 689  8A72
 690  8A72              ; ----- ----- -----
 691  8A72
 692  8A72 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 693  8A74 32 E2 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 694  8A77
 695  8A77 21 06 89     	ld hl,Ctrl_1
 696  8A7A CB 96        	res 2,(hl)
 697  8A7C
 698  8A7C CD EE 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 699  8A7F
 700  8A7F 3A F3 88     	ld a,(Ctrl_0)
 701  8A82 CB 67        	bit 4,a
 702  8A84 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 703  8A86
 704  8A86              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 705  8A86              ; [[[
 706  8A86 CD A8 8D     	call Detecta_disparo_entidad
 707  8A89              ; ]]]
 708  8A89
 709  8A89 CD 63 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 710  8A8C              ;	call Guarda_datos_de_borrado
 711  8A8C
 712  8A8C 21 F3 88     	ld hl,Ctrl_0
 713  8A8F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 714  8A91
 715  8A91 CD D2 8C     17 call Store_Restore_cajas
 716  8A94
 717  8A94 C1           	pop bc
 718  8A95 10 8A        	djnz 15B
 719  8A97
 720  8A97              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 721  8A97              ; Hemos gestionado todas las unidades.
 722  8A97              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 723  8A97
 724  8A97              ;	ld hl,Ctrl_1
 725  8A97              ;	res 2,(hl)
 726  8A97
 727  8A97 CD C9 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 728  8A9A              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 729  8A9A
 730  8A9A              ; ----------------------------------------
 731  8A9A
 732  8A9A 3A 06 89     	ld a,(Ctrl_1) 										; Existe Loop?
 733  8A9D CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 734  8A9F CA B2 89     	jp z,Main
 735  8AA2
 736  8AA2 3A 54 89     	ld a,(Contador_de_frames)
 737  8AA5 47           	ld b,a
 738  8AA6 3A 58 89     	ld a,(Activa_recarga_cajas)
 739  8AA9 B8           	cp b
 740  8AAA 28 08        	jr z,20F
 741  8AAC
 742  8AAC 21 06 89     	ld hl,Ctrl_1
 743  8AAF CB E6        	set 4,(hl)
 744  8AB1 C3 B2 89     	jp Main
 745  8AB4
 746  8AB4 21 06 89     20 ld hl,Ctrl_1
 747  8AB7 CB A6        	res 4,(hl)
 748  8AB9
 749  8AB9 3A 54 89     	ld a,(Contador_de_frames)
 750  8ABC
 751  8ABC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 752  8ABC              ;! _ IMPREDECIBLE !!!!
 753  8ABC
 754  8ABC C6 0A        	add 10
 755  8ABE 32 57 89     	ld (Clock_Entidades_en_curso),a
 756  8AC1
 757  8AC1 C3 79 89     	jp 4B
 758  8AC4
 759  8AC4 C9           	ret
 760  8AC5
 761  8AC5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 762  8AC5
 763  8AC5              Gestiona_Amadeus
 764  8AC5
 765  8AC5 3E 04            ld a,4
 766  8AC7 D3 FE        	out ($fe),a											; Azul.
 767  8AC9
 768  8AC9 CD 34 8D     	call Restore_Amadeus
 769  8ACC
 770  8ACC              ;! Activa/desactiva impacto con Amadeus.
 771  8ACC
 772  8ACC 3A E2 88     	ld a,(Impacto)
 773  8ACF A7           	and a
 774  8AD0 20 FE        	jr nz,$
 775  8AD2
 776  8AD2 CD 3F 8B     	call Mov_Amadeus
 777  8AD5
 778  8AD5 3A F3 88     	ld a,(Ctrl_0)
 779  8AD8 CB 67        	bit 4,a
 780  8ADA 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 781  8ADC
 782  8ADC CD 63 8B     	call Guarda_foto_entidad_a_pintar
 783  8ADF CD AE 8D     	call Guarda_datos_de_borrado_Amadeus
 784  8AE2
 785  8AE2 21 F3 88     14 ld hl,Ctrl_0
 786  8AE5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 787  8AE7
 788  8AE7 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 789  8AEA CD 46 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 790  8AED
 791  8AED              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 792  8AED
 793  8AED              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 794  8AED
 795  8AED              ;	call Calcula_numero_de_disparotes
 796  8AED
 797  8AED C9           	ret
 798  8AEE
 799  8AEE              ; --------------------------------------------------------------------------------------------------------------
 800  8AEE              ;
 801  8AEE              ;	27/05/23
 802  8AEE
 803  8AEE              Mov_obj
 804  8AEE
 805  8AEE 3A 04 89     	ld a,(Ctrl_2)
 806  8AF1 CB 4F        	bit 1,a
 807  8AF3 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 808  8AF5
 809  8AF5              ; Explosión:
 810  8AF5
 811  8AF5 3A 05 89     	ld a,(Frames_explosion)
 812  8AF8 A7           	and a
 813  8AF9 20 11        	jr nz,4F
 814  8AFB
 815  8AFB              ; Una alimaña menos!!!!!!!!!1
 816  8AFB
 817  8AFB CD 4F 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 818  8AFE 21 10 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 819  8B01 35           	dec (hl)
 820  8B02 21 11 89     	ld hl,Entidades_en_curso
 821  8B05 35           	dec (hl)
 822  8B06 21 0F 89     	ld hl,Numero_de_entidades
 823  8B09 35           	dec (hl)
 824  8B0A 18 32        	jr 3F
 825  8B0C
 826  8B0C              ; -----
 827  8B0C
 828  8B0C              ;	`Movemos´ la explosión.
 829  8B0C
 830  8B0C 2A D7 88     4 ld hl,(Puntero_DESPLZ_der)
 831  8B0F 23           	inc hl
 832  8B10 23           	inc hl
 833  8B11 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 834  8B14 CD 84 8C     	call Extrae_address
 835  8B17 22 CD 88     	ld (Puntero_objeto),hl
 836  8B1A
 837  8B1A 21 05 89     	ld hl,Frames_explosion
 838  8B1D 35           	dec (hl)
 839  8B1E
 840  8B1E              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 841  8B1E 18 1E        	jr 3F
 842  8B20
 843  8B20 AF           2 xor a
 844  8B21 32 F3 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 845  8B24
 846  8B24              ; Movemos Entidades malignas.
 847  8B24
 848  8B24 CD A8 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 849  8B27
 850  8B27 3A F3 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 851  8B2A CB 67        	bit 4,a
 852  8B2C C8           	ret z
 853  8B2D
 854  8B2D              ; Ha habido desplazamiento de la entidad maligna.
 855  8B2D              ; Ha llegado a zona de AMADEUS ???
 856  8B2D
 857  8B2D 3A D0 88     	ld a,(Coordenada_y)
 858  8B30 FE 14        	cp $14
 859  8B32 D4 D3 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 860  8B35              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 861  8B35              ; ---------
 862  8B35
 863  8B35 CD 6A 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 864  8B38 CD CE 8D     	call Repone_datos_de_borrado
 865  8B3B CD 26 8C     	call Limpia_Variables_de_borrado
 866  8B3E
 867  8B3E C9           3 ret													; _de la misma.
 868  8B3F
 869  8B3F              ; --------------------------------------------------------------------------------------------------------------
 870  8B3F              ;
 871  8B3F              ;	29/1/23
 872  8B3F
 873  8B3F              Mov_Amadeus
 874  8B3F
 875  8B3F CD 71 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 876  8B42
 877  8B42 3A F3 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 878  8B45 CB 67        	bit 4,a
 879  8B47 C8           	ret z
 880  8B48
 881  8B48              ; ---------
 882  8B48
 883  8B48 CD 6A 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 884  8B4B CD BE 8D     	call Repone_datos_de_borrado_Amadeus
 885  8B4E CD 26 8C     	call Limpia_Variables_de_borrado
 886  8B51
 887  8B51 C9           	ret
 888  8B52
 889  8B52              ; -----------------------------------------------------------------------------------
 890  8B52              ;
 891  8B52              ;	01/11/23
 892  8B52
 893  8B52 CD 8A 8C     Inicia_entidad	call Inicia_Puntero_objeto
 894  8B55 CD 4D 99     	call Recompone_posicion_inicio
 895  8B58 CD 2C 93     	call Draw
 896  8B5B CD A0 7F     	call Guarda_foto_registros
 897  8B5E F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 898  8B5F              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 899  8B5F CD D2 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 900  8B62 C9           	ret
 901  8B63
 902  8B63              ; --------------------------------------------------------------------------------------------------------------
 903  8B63              ;
 904  8B63              ;	31/08/23
 905  8B63              ;
 906  8B63              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 907  8B63              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 908  8B63
 909  8B63              Guarda_foto_entidad_a_pintar
 910  8B63
 911  8B63              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 912  8B63
 913  8B63 CD 2C 93     	call Draw
 914  8B66 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 915  8B69 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 916  8B6A
 917  8B6A              ; --------------------------------------------------------------------------------------------------------------
 918  8B6A              ;
 919  8B6A              ;	19/9/23
 920  8B6A
 921  8B6A 21 C9 88     Prepara_var_pintado ld hl,Filas
 922  8B6D 11 E9 88     	ld de,Variables_de_pintado
 923  8B70 01 08 00     	ld bc,8
 924  8B73 ED B0        	ldir
 925  8B75 C9           	ret
 926  8B76
 927  8B76              ; --------------------------------------------------------------------------------------------------------------
 928  8B76
 929  8B76 21 E9 88     Repone_pintar ld hl,Variables_de_pintado
 930  8B79 11 C9 88     	ld de,Filas
 931  8B7C 01 08 00     	ld bc,8
 932  8B7F ED B0        	ldir
 933  8B81 C9           	ret
 934  8B82
 935  8B82              ; *************************************************************************************************************************************************************
 936  8B82              ;
 937  8B82              ; 8/1/23
 938  8B82              ;
 939  8B82              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 940  8B82              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 941  8B82              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 942  8B82
 943  8B82              ; Destruye HL y DE !!!!!
 944  8B82
 945  8B82              Inicia_punteros_de_cajas
 946  8B82
 947  8B82 21 8C 85     	ld hl,Indice_de_cajas
 948  8B85 CD 84 8C         call Extrae_address
 949  8B88 22 09 89         ld (Puntero_store_caja),hl
 950  8B8B 21 8E 85     	ld hl,Indice_de_cajas+2
 951  8B8E 22 0D 89     	ld (Indice_restore_caja),hl
 952  8B91 CD 84 8C     	call Extrae_address
 953  8B94 22 0B 89     	ld (Puntero_restore_caja),hl
 954  8B97 C9               ret
 955  8B98
 956  8B98              ; ---------------------------------------------------------------
 957  8B98              ;
 958  8B98              ;	9/8/23
 959  8B98              ;
 960  8B98              ;	Inicialización y gestión de álbumes de fotos y cajas.
 961  8B98
 962  8B98              Inicia_punteros_de_albumes_y_malotes
 963  8B98
 964  8B98 21 EC 84     	ld hl,Indice_album_de_fotos
 965  8B9B 22 33 89     	ld (Puntero_indice_album_de_fotos),hl
 966  8B9E CD 84 8C     	call Extrae_address
 967  8BA1 22 1D 89     	ld (Stack_snapshot),hl
 968  8BA4
 969  8BA4 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 970  8BA7 22 35 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 971  8BAA CD 84 8C     	call Extrae_address
 972  8BAD 22 1F 89     	ld (Stack_snapshot_disparos),hl
 973  8BB0
 974  8BB0 21 FC 84     	ld hl,Indice_End_Snapshot
 975  8BB3 22 37 89     	ld (Puntero_indice_End_Snapshot),hl
 976  8BB6 CD 84 8C     	call Extrae_address
 977  8BB9 22 3B 89     	ld (Puntero_de_End_Snapshot),hl
 978  8BBC
 979  8BBC 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 980  8BBF 22 39 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 981  8BC2 CD 84 8C     	call Extrae_address
 982  8BC5 22 3D 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 983  8BC8
 984  8BC8 C9           	ret
 985  8BC9
 986  8BC9              ;	23/10/23
 987  8BC9
 988  8BC9              Avanza_puntero_de_album_de_fotos_de_entidades
 989  8BC9
 990  8BC9              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 991  8BC9
 992  8BC9              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 993  8BC9              ; Estamos en el último álbum del índice???.
 994  8BC9              ;
 995  8BC9 2A 33 89     	ld hl,(Puntero_indice_album_de_fotos)
 996  8BCC 01 F2 84     	ld bc,Indice_album_de_fotos+6
 997  8BCF A7           	and a
 998  8BD0 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 999  8BD2 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
1000  8BD4
1001  8BD4              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
1002  8BD4              ; Actualizamos (Semaforo).
1003  8BD4
1004  8BD4 21 3F 89     	ld hl,Semaforo
1005  8BD7 CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
1006  8BD9
1007  8BD9              ; Inicia con el buffer de video completo !!!
1008  8BD9
1009  8BD9 FB           	ei
1010  8BDA 76           	halt
1011  8BDB C9           	ret
1012  8BDC
1013  8BDC 2A 33 89     1 ld hl,(Puntero_indice_album_de_fotos)
1014  8BDF 23           	inc hl
1015  8BE0 23           	inc hl
1016  8BE1 22 33 89     	ld (Puntero_indice_album_de_fotos),hl
1017  8BE4 CD 84 8C     	call Extrae_address
1018  8BE7 22 1D 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1019  8BEA
1020  8BEA 2A 37 89     	ld hl,(Puntero_indice_End_Snapshot)
1021  8BED 23           	inc hl
1022  8BEE 23           	inc hl
1023  8BEF 22 37 89     	ld (Puntero_indice_End_Snapshot),hl
1024  8BF2 CD 84 8C     	call Extrae_address
1025  8BF5 22 3B 89     	ld (Puntero_de_End_Snapshot),hl
1026  8BF8
1027  8BF8 21 3F 89     	ld hl,Semaforo
1028  8BFB CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1029  8BFD
1030  8BFD C9           	ret
1031  8BFE
1032  8BFE              ; *************************************************************************************************************************************************************
1033  8BFE              ;
1034  8BFE              ; 8/1/23
1035  8BFE              ;
1036  8BFE              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1037  8BFE
1038  8BFE 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1039  8C01 22 42 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1040  8C04 C9           	ret
1041  8C05 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1042  8C08 22 44 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1043  8C0B C9           	ret
1044  8C0C
1045  8C0C              ; -------------------------------------------------------------------------------------------------------------
1046  8C0C              ;
1047  8C0C              ; 21/9/23
1048  8C0C              ;
1049  8C0C
1050  8C0C              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1051  8C0C
1052  8C0C              Limpia_album_Amadeus
1053  8C0C
1054  8C0C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1055  8C0F 7E           	ld a,(hl)
1056  8C10 A7           	and a
1057  8C11 C8           	ret z
1058  8C12
1059  8C12 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1060  8C15 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1061  8C18 01 0B 00     	ld bc,11
1062  8C1B AF           	xor a
1063  8C1C 77           	ld (hl),a
1064  8C1D ED B0        	ldir
1065  8C1F
1066  8C1F 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1067  8C22 22 25 89     	ld (End_Snapshot_Amadeus),hl
1068  8C25
1069  8C25 C9           	ret
1070  8C26
1071  8C26 21 E3 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1072  8C29 11 E4 88     	ld de,Variables_de_borrado+1
1073  8C2C 01 05 00     	ld bc,5
1074  8C2F AF           	xor a
1075  8C30 77           	ld (hl),a
1076  8C31 ED B0        	ldir
1077  8C33 C9           	ret
1078  8C34
1079  8C34              ; -------------------------------------------------------------------------------------------------------------
1080  8C34              ;
1081  8C34              ; 8/9/23
1082  8C34              ;
1083  8C34
1084  8C34              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1085  8C34              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1086  8C34
1087  8C34              Calcula_numero_de_malotes
1088  8C34
1089  8C34 21 00 70     	ld hl,Album_de_fotos
1090  8C37 EB           	ex de,hl
1091  8C38 2A 21 89     	ld hl,(End_Snapshot)
1092  8C3B
1093  8C3B 7C           	ld a,h
1094  8C3C A7           	and a
1095  8C3D 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1096  8C3F
1097  8C3F 06 00        4 ld b,0
1098  8C41 7D           	ld a,l
1099  8C42 93           	sub e
1100  8C43 28 07        	jr z,1F
1101  8C45
1102  8C45              ; Nº de malotes no es "0".
1103  8C45
1104  8C45 D6 06        2 sub 6
1105  8C47 04           	inc b
1106  8C48 A7           	and a
1107  8C49 20 FA        	jr nz,2B
1108  8C4B 78           	ld a,b
1109  8C4C
1110  8C4C 32 12 89     1 ld (Numero_de_malotes),a
1111  8C4F C9           	ret
1112  8C50
1113  8C50              ; -------------------------------------------------------------------------------------------------------------
1114  8C50              ;
1115  8C50              ; 8/9/23
1116  8C50              ;
1117  8C50
1118  8C50              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1119  8C50              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1120  8C50
1121  8C50              Calcula_malotes_Amadeus
1122  8C50
1123  8C50 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1124  8C53 EB           	ex de,hl
1125  8C54 2A 25 89     	ld hl,(End_Snapshot_Amadeus)
1126  8C57
1127  8C57 7C           	ld a,h
1128  8C58 A7           	and a
1129  8C59 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1130  8C5B
1131  8C5B 06 00        	ld b,0
1132  8C5D 7D           	ld a,l
1133  8C5E 93           	sub e
1134  8C5F 28 07        	jr z,1F
1135  8C61
1136  8C61              ; Nº de malotes no es "0".
1137  8C61
1138  8C61 D6 06        2 sub 6
1139  8C63 04           	inc b
1140  8C64 A7           	and a
1141  8C65 20 FA        	jr nz,2B
1142  8C67 78           	ld a,b
1143  8C68
1144  8C68 32 12 89     1 ld (Numero_de_malotes),a
1145  8C6B C9           	ret
1146  8C6C
1147  8C6C              ; -------------------------------------------------------------------------------------------------------------
1148  8C6C              ;
1149  8C6C              ; 28/2/23
1150  8C6C              ;
1151  8C6C
1152  8C6C              Calcula_numero_de_disparotes
1153  8C6C
1154  8C6C 21 50 71     	ld hl,Album_de_fotos_disparos
1155  8C6F EB           	ex de,hl
1156  8C70 2A 3D 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1157  8C73
1158  8C73 06 00        	ld b,0
1159  8C75 7D           	ld a,l
1160  8C76 93           	sub e
1161  8C77 28 07        	jr z,1F
1162  8C79
1163  8C79              ; Nº de malotes no es "0".
1164  8C79
1165  8C79 D6 06        2 sub 6
1166  8C7B 04           	inc b
1167  8C7C A7           	and a
1168  8C7D 20 FA        	jr nz,2B
1169  8C7F 78           	ld a,b
1170  8C80
1171  8C80 32 41 89     1 ld (Numero_de_disparotes),a
1172  8C83 C9           	ret
1173  8C84
1174  8C84              ; *************************************************************************************************************************************************************
1175  8C84              ;
1176  8C84              ; 20/10/22
1177  8C84              ;
1178  8C84              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1179  8C84              ;
1180  8C84              ; Destruye el puntero y DE !!!!!
1181  8C84
1182  8C84 5E           Extrae_address ld e,(hl)
1183  8C85 23           	inc hl
1184  8C86 56           	ld d,(hl)
1185  8C87 2B           	dec hl
1186  8C88 EB           	ex de,hl
1187  8C89 C9           	ret
1188  8C8A
1189  8C8A              ; *************************************************************************************************************************************************************
1190  8C8A              ;
1191  8C8A              ;	7/2/23
1192  8C8A              ;
1193  8C8A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1194  8C8A              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1195  8C8A              ;
1196  8C8A              ;   Destruye HL y BC !!!!!,
1197  8C8A              ;
1198  8C8A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1199  8C8A              ;					"0" ..... Izquierda.
1200  8C8A
1201  8C8A              Inicia_Puntero_objeto
1202  8C8A
1203  8C8A 3A DD 88     	ld a,(Cuad_objeto)
1204  8C8D E6 01        	and 1
1205  8C8F F5           	push af
1206  8C90 CC AE 8C     	call z,Inicia_puntero_objeto_izq
1207  8C93 F1           	pop af
1208  8C94 28 2B        	jr z,1F
1209  8C96 CD 9B 8C     	call Inicia_puntero_objeto_der
1210  8C99 18 26        	jr 1F
1211  8C9B
1212  8C9B              ; Arrancamos desde la parte izquierda de la pantalla.
1213  8C9B              ; Iniciamos (Indice_Sprite_der).
1214  8C9B
1215  8C9B 2A D3 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1216  8C9E 22 D7 88     	ld (Puntero_DESPLZ_der),hl
1217  8CA1 CD 84 8C     	call Extrae_address
1218  8CA4 22 CD 88     	ld (Puntero_objeto),hl
1219  8CA7
1220  8CA7 2A D5 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1221  8CAA 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
1222  8CAD C9           	ret
1223  8CAE
1224  8CAE              ; Arrancamos desde la parte derecha de la pantalla.
1225  8CAE              ; Iniciamos (Indice_Sprite_izq).
1226  8CAE
1227  8CAE 2A D5 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1228  8CB1 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
1229  8CB4 CD 84 8C     	call Extrae_address
1230  8CB7 22 CD 88     	ld (Puntero_objeto),hl
1231  8CBA
1232  8CBA 2A D3 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1233  8CBD 22 D7 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1234  8CC0 C9           	ret
1235  8CC1
1236  8CC1              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1237  8CC1
1238  8CC1 21 40 83     1 ld hl,Amadeus
1239  8CC4 ED 4B CD 88  	ld bc,(Puntero_objeto)
1240  8CC8 B7 ED 42     	sub hl,bc
1241  8CCB C0           	ret nz
1242  8CCC 21 F3 88     	ld hl,Ctrl_0
1243  8CCF CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1244  8CD1 C9           	ret 												; _de nuestra nave en los extremos.
1245  8CD2
1246  8CD2              ; *************************************************************************************************************************************************************
1247  8CD2              ;
1248  8CD2              ;	14/5/23
1249  8CD2              ;
1250  8CD2              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1251  8CD2              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1252  8CD2
1253  8CD2              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1254  8CD2              ;	_de la 2ª y 3ª entidad respectivamente.
1255  8CD2
1256  8CD2              Store_Restore_cajas
1257  8CD2
1258  8CD2 E5           	push hl
1259  8CD3 D5           	push de
1260  8CD4 C5            	push bc
1261  8CD5
1262  8CD5              ;	STORE !!!!!
1263  8CD5              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1264  8CD5
1265  8CD5 21 C9 88     	ld hl,Filas
1266  8CD8 ED 5B 09 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1267  8CDC 01 3D 00     	ld bc,61
1268  8CDF ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1269  8CE1
1270  8CE1              ; 	Entidad_sospechosa. 20/4/23
1271  8CE1
1272  8CE1 3A E2 88     	ld a,(Impacto)
1273  8CE4 A7           	and a
1274  8CE5 28 0C        	jr z,1F
1275  8CE7
1276  8CE7 2A 09 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1277  8CEA 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1278  8CED A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1279  8CEE ED 4A        	adc hl,bc 											; _ "0" más adelante.
1280  8CF0 22 47 89     	ld (Entidad_sospechosa_de_colision),hl
1281  8CF3
1282  8CF3              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1283  8CF3
1284  8CF3 2A 0B 89     1 ld hl,(Puntero_restore_caja)
1285  8CF6 7E           	ld a,(hl)
1286  8CF7 A7           	and a
1287  8CF8 F5           	push af
1288  8CF9 28 08        	jr z,2F
1289  8CFB
1290  8CFB 11 C9 88     	ld de,Filas
1291  8CFE 01 3D 00     	ld bc,61
1292  8D01 ED B0        	ldir
1293  8D03
1294  8D03 CD 1F 8D     2 call Incrementa_punteros_de_cajas
1295  8D06
1296  8D06 F1           	pop af
1297  8D07 28 EA        	jr z,1B
1298  8D09
1299  8D09 C1           	pop bc
1300  8D0A D1           	pop de
1301  8D0B E1           	pop hl
1302  8D0C
1303  8D0C C9           	ret
1304  8D0D
1305  8D0D              ; **************************************************************************************************
1306  8D0D              ;
1307  8D0D              ;	12/05/23
1308  8D0D              ;
1309  8D0D              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1310  8D0D
1311  8D0D E5           Restore_entidad push hl
1312  8D0E D5           	push de
1313  8D0F C5            	push bc
1314  8D10
1315  8D10 2A 09 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1316  8D13 11 C9 88     	ld de,Filas
1317  8D16 01 3D 00     	ld bc,61
1318  8D19 ED B0        	ldir
1319  8D1B
1320  8D1B C1           	pop bc
1321  8D1C D1           	pop de
1322  8D1D E1           	pop hl
1323  8D1E C9           	ret
1324  8D1F
1325  8D1F              ; **************************************************************************************************
1326  8D1F              ;
1327  8D1F              ;	08/05/23
1328  8D1F              ;
1329  8D1F              ;	Incrementamos los dos punteros de entidades. (+1).
1330  8D1F
1331  8D1F              Incrementa_punteros_de_cajas
1332  8D1F
1333  8D1F 2A 0B 89     	ld hl,(Puntero_restore_caja)
1334  8D22 22 09 89     	ld (Puntero_store_caja),hl
1335  8D25 2A 0D 89     	ld hl,(Indice_restore_caja)
1336  8D28 23           	inc hl
1337  8D29 23           	inc hl
1338  8D2A 22 0D 89     	ld (Indice_restore_caja),hl
1339  8D2D CD 84 8C         call Extrae_address
1340  8D30 22 0B 89         ld (Puntero_restore_caja),hl
1341  8D33 C9               ret
1342  8D34
1343  8D34              ; **************************************************************************************************
1344  8D34              ;
1345  8D34              ;	25/01/23
1346  8D34              ;
1347  8D34              ;	Restore_Amadeus
1348  8D34              ;
1349  8D34              ;	Cargamos en DRAW los parámetros de Amadeus.
1350  8D34              ;
1351  8D34
1352  8D34 E5           Restore_Amadeus	push hl
1353  8D35 D5           	push de
1354  8D36 C5            	push bc
1355  8D37 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1356  8D3A 11 C9 88     	ld de,Filas
1357  8D3D 01 3D 00     	ld bc,61
1358  8D40 ED B0        	ldir
1359  8D42 C1           	pop bc
1360  8D43 D1           	pop de
1361  8D44 E1           	pop hl
1362  8D45 C9           	ret
1363  8D46
1364  8D46              ; *************************************************************************************************************************************************************
1365  8D46              ;
1366  8D46              ;	29/04/23
1367  8D46              ;
1368  8D46              ;	Store_Amadeus
1369  8D46              ;
1370  8D46              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1371  8D46              ;
1372  8D46              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1373  8D46              ;
1374  8D46              ;	DESTRUYE: HL y BC y DE.
1375  8D46
1376  8D46 21 C9 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1377  8D49 01 3D 00     	ld bc,61
1378  8D4C ED B0        	ldir
1379  8D4E C9           	ret
1380  8D4F
1381  8D4F              ; -----------------------------------------------------------
1382  8D4F              ;
1383  8D4F              ;	27/04/23
1384  8D4F              ;
1385  8D4F              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1386  8D4F              ;
1387  8D4F              ;	Destruye: HL,BC,DE,A
1388  8D4F
1389  8D4F 21 C9 88     Borra_datos_entidad ld hl,Filas
1390  8D52 01 3C 00     	ld bc,60
1391  8D55 AF           	xor a
1392  8D56 77           	ld (hl),a
1393  8D57 11 CA 88     	ld de,Filas+1
1394  8D5A ED B0        	ldir
1395  8D5C C9           	ret
1396  8D5D
1397  8D5D              ; -----------------------------------------------------------
1398  8D5D
1399  8D5D              ; Teclado.
1400  8D5D
1401  8D5D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1402  8D5F DB FE        	in a,($fe)
1403  8D61 E6 01        	and $01
1404  8D63 28 02        	jr z,1f
1405  8D65 18 F6        	jr Pulsa_ENTER
1406  8D67 C9           1 ret
1407  8D68
1408  8D68              ; **************************************************************************************************
1409  8D68              ;
1410  8D68              ; Temporización.
1411  8D68
1412  8D68              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1413  8D68              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1414  8D68              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1415  8D68              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1416  8D68
1417  8D68              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1418  8D68              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1419  8D68              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1420  8D68
1421  8D68              ; A partir de $4f61 no hace falta DELAY.
1422  8D68
1423  8D68              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1424  8D68
1425  8D68 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1426  8D6B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1427  8D6C 78           	LD A,B
1428  8D6D A7           	AND A
1429  8D6E 20 FB        	JR NZ,wait
1430  8D70 C9           	RET
1431  8D71
1432  8D71              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1433  8D71              ;
1434  8D71              ;	5/3/23
1435  8D71              ;
1436  8D71              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1437  8D71
1438  8D71              Movimiento_Amadeus
1439  8D71
1440  8D71              ; Disparo.
1441  8D71
1442  8D71 3A 59 89     	ld a,(Disparo_Amadeus)
1443  8D74 A7           	and a
1444  8D75 20 02        	jr nz,1F
1445  8D77 18 15        	jr 2F
1446  8D79
1447  8D79 3E F7        1 ld a,$f7													; "5" para disparar.
1448  8D7B DB FE        	in a,($fe)
1449  8D7D E6 10        	and $10
1450  8D7F
1451  8D7F F5           	push af
1452  8D80 CC 36 8E     	call z,Genera_disparo
1453  8D83 F1           	pop af
1454  8D84 20 08        	jr nz,2F
1455  8D86
1456  8D86 3A 59 89     	ld a,(Disparo_Amadeus)
1457  8D89 EE 01        	xor 1
1458  8D8B 32 59 89     	ld (Disparo_Amadeus),a
1459  8D8E
1460  8D8E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1461  8D90 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1462  8D92 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1463  8D94 CC 07 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1464  8D97
1465  8D97 3E F7        	ld a,$f7
1466  8D99 DB FE        	in a,($fe)
1467  8D9B E6 01        	and $01
1468  8D9D C8           	ret z
1469  8D9E
1470  8D9E 3E F7        	ld a,$f7
1471  8DA0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1472  8DA2 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1473  8DA4 CC E9 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1474  8DA7 C9           	ret
1475  8DA8
1476  8DA8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1477  8DA8              ;
1478  8DA8              ;	Rutina provisional para que los malotes cagen balas.
1479  8DA8
1480  8DA8              Detecta_disparo_entidad
1481  8DA8
1482  8DA8 3A 5C 89     	ld a,(Disparo_entidad)
1483  8DAB A7           	and a
1484  8DAC C8           	ret z
1485  8DAD
1486  8DAD              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1487  8DAD
1488  8DAD              ;	ld a,$7f				; Detecta SPACE.
1489  8DAD              ;	in a,($fe)
1490  8DAD              ;	and 1
1491  8DAD              ;	ret nz
1492  8DAD
1493  8DAD              ;	call Genera_disparo
1494  8DAD C9           	ret
1495  8DAE
1496  8DAE              ; ----------------------------------------------------------------------
1497  8DAE              ;
1498  8DAE              ;	8/9/23
1499  8DAE
1500  8DAE 2A 25 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1501  8DB1 2B            	dec hl
1502  8DB2 7E           	ld a,(hl)
1503  8DB3 A7           	and a
1504  8DB4 C8           	ret z										; Salimos si es álbum está vacío.
1505  8DB5
1506  8DB5 11 E8 88     	ld de,Variables_de_borrado+5
1507  8DB8 01 06 00     	ld bc,6
1508  8DBB ED B8        	lddr
1509  8DBD C9           	ret
1510  8DBE
1511  8DBE              ; ----------------------------------------------------------------------
1512  8DBE              ;
1513  8DBE              ;	9/9/23
1514  8DBE
1515  8DBE              Repone_datos_de_borrado_Amadeus
1516  8DBE
1517  8DBE 21 E3 88     	ld hl,Variables_de_borrado
1518  8DC1 11 A0 72     	ld de,Album_de_fotos_Amadeus
1519  8DC4 01 06 00     	ld bc,6
1520  8DC7 ED B0        	ldir
1521  8DC9
1522  8DC9 EB           	ex de,hl
1523  8DCA 22 25 89     	ld (End_Snapshot_Amadeus),hl
1524  8DCD
1525  8DCD C9           	ret
1526  8DCE
1527  8DCE              ; ----------------------------------------------------------------------
1528  8DCE              ;
1529  8DCE              ;	27/10/23
1530  8DCE              ;
1531  8DCE
1532  8DCE              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1533  8DCE              ;	_ Album_de_fotos correspondiente.
1534  8DCE
1535  8DCE              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1536  8DCE              ;	_ durante el proceso de escritura.
1537  8DCE
1538  8DCE              Repone_datos_de_borrado
1539  8DCE
1540  8DCE F3           	di
1541  8DCF ED 5B 1D 89  	ld de,(Stack_snapshot)
1542  8DD3 21 E3 88     	ld hl,Variables_de_borrado
1543  8DD6 01 06 00     	ld bc,6
1544  8DD9 ED B0        	ldir
1545  8DDB FB           	ei
1546  8DDC
1547  8DDC EB           	ex de,hl
1548  8DDD 22 1D 89     	ld (Stack_snapshot),hl
1549  8DE0
1550  8DE0 C9           	ret
1551  8DE1
1552  8DE1              ; ----------------------------------------------------------------------
1553  8DE1              ;
1554  8DE1              ;	11/8/23
1555  8DE1
1556  8DE1              Gestiona_entidades
1557  8DE1
1558  8DE1              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1559  8DE1
1560  8DE1 3A 3F 89     	ld a,(Semaforo)
1561  8DE4 CB 47        	bit 0,a
1562  8DE6 28 FE        	jr z,$												;! STOP el buffer está vacío.
1563  8DE8 C8           	ret z
1564  8DE9
1565  8DE9              ;	call Extrae_foto_disparos
1566  8DE9              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1567  8DE9
1568  8DE9 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1569  8DEC
1570  8DEC              ;	BUFFER vacío ??????
1571  8DEC              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1572  8DEC
1573  8DEC 3A 40 89     	ld a,(Ctrl_Semaforo)
1574  8DEF CB 67        	bit 4,a
1575  8DF1 28 05        	jr z,1F
1576  8DF3
1577  8DF3              ;! Buffer vacío. Inicializar (Ctrl_Semaforo) y salir sin modificar punteros.
1578  8DF3
1579  8DF3 AF           	xor a
1580  8DF4 32 40 89     	ld (Ctrl_Semaforo),a
1581  8DF7 C9           	ret
1582  8DF8
1583  8DF8 CB 47        1 bit 0,a
1584  8DFA C0           	ret nz
1585  8DFB
1586  8DFB              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1587  8DFB              ; Nos situamos al comienzo del último álbum.
1588  8DFB
1589  8DFB CD 46 73     	call Modifica_Stack_snapshot
1590  8DFE
1591  8DFE C9           	ret
1592  8DFF
1593  8DFF              ; -----------------------------------------------------------------------------------
1594  8DFF
1595  8DFF              Pinta_Amadeus
1596  8DFF
1597  8DFF 3E 06        	ld a,6
1598  8E01 D3 FE            out ($fe),a										; Amarillo
1599  8E03
1600  8E03 CD 50 8C        	call Calcula_malotes_Amadeus
1601  8E06 CD BC 96     	call Extrae_foto_Amadeus
1602  8E09 CD 0C 8C     	call Limpia_album_Amadeus
1603  8E0C
1604  8E0C C9           	ret
1605  8E0D
1606  8E0D              Pinta_entidades
1607  8E0D
1608  8E0D 3A 3F 89     	ld a,(Semaforo)
1609  8E10 CB 47        	bit 0,a
1610  8E12 C8           	ret z
1611  8E13
1612  8E13              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1613  8E13
1614  8E13 CD 34 8C     	call Calcula_numero_de_malotes
1615  8E16 CD 3A 96     	call Extrae_foto_entidades
1616  8E19
1617  8E19 C9           	ret
1618  8E1A
1619  8E1A              ; -----------------------------------------------------------------------------------
1620  8E1A              ;
1621  8E1A              ;	8/11/23
1622  8E1A
1623  8E1A              Actualiza_relojes
1624  8E1A
1625  8E1A 21 54 89     	ld hl,Contador_de_frames
1626  8E1D 34           	inc (hl)
1627  8E1E
1628  8E1E              ; ---------------------------------------------------------------
1629  8E1E              ;
1630  8E1E              ;	27/9/23
1631  8E1E
1632  8E1E              Guarda_parametros_DRAW
1633  8E1E
1634  8E1E 21 C9 88     	ld hl,Filas
1635  8E21 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1636  8E24 01 3D 00     	ld bc,61
1637  8E27 ED B0        	ldir
1638  8E29 C9           	ret
1639  8E2A
1640  8E2A              Recupera_parametros_DRAW
1641  8E2A
1642  8E2A 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1643  8E2D 11 C9 88     	ld de,Filas
1644  8E30 01 3D 00     	ld bc,61
1645  8E33 ED B0        	ldir
1646  8E35 C9           	ret
1647  8E36
1648  8E36              ; ---------------------------------------------------------------
1649  8E36
1650  8E36              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E36              ; ******************************************************************************************************************************************************************************************
   2+ 8E36              ;
   3+ 8E36              ;   21/07/23
   4+ 8E36              ;
   5+ 8E36              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E36              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E36              ;
   8+ 8E36              ;
   9+ 8E36              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E36              ;
  11+ 8E36              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E36              ;               _ hacen las entidades hacia abajo.
  13+ 8E36              ;
  14+ 8E36              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E36              ;
  16+ 8E36              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E36              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E36              ;
  19+ 8E36              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E36              ;           _ la bala.
  21+ 8E36              ;
  22+ 8E36              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E36              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E36              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E36              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E36              ;           _ en el momento de generarse la bala)).
  27+ 8E36
  28+ 8E36              Genera_disparo
  29+ 8E36
  30+ 8E36              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E36              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E36              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E36              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E36              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E36              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E36              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E36
  38+ 8E36              ; Exclusiones:
  39+ 8E36
  40+ 8E36 3A E1 88         ld a,(Vel_down)
  41+ 8E39 47               ld b,a
  42+ 8E3A 3A 53 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E3D B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E3E D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E3F 3A 00 89         ld a,(Columnas)
  46+ 8E42 47               ld b,a
  47+ 8E43 3A CA 88         ld a,(Columns)
  48+ 8E46 B8               cp b
  49+ 8E47 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E48
  51+ 8E48              ; ----- ----- -----
  52+ 8E48
  53+ 8E48 3A F3 88         ld a,(Ctrl_0)
  54+ 8E4B CB 77            bit 6,a
  55+ 8E4D 20 06            jr nz,14F
  56+ 8E4F
  57+ 8E4F 3A D0 88         ld a,(Coordenada_y)
  58+ 8E52 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E54 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E55
  61+ 8E55 21 00 80     14 ld hl,Indice_disparo
  62+ 8E58 3A D1 88         ld a,(CTRL_DESPLZ)
  63+ 8E5B 4F               ld c,a
  64+ 8E5C 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E5E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E5E              ;                                            ""        ""       "f9", B="1"
  67+ 8E5E              ;                                            ""        ""       "fb", B="2"
  68+ 8E5E              ;                                            ""        ""       "fb", B="3"
  69+ 8E5E A7               and a
  70+ 8E5F 28 10            jr z,1F
  71+ 8E61 E6 01            and 1
  72+ 8E63 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E64
  74+ 8E64 79               ld a,c
  75+ 8E65 16 F9            ld d,$f9
  76+ 8E67 23           2 inc hl
  77+ 8E68 23               inc hl
  78+ 8E69 04               inc b
  79+ 8E6A BA               cp d
  80+ 8E6B 28 04            jr z,1F
  81+ 8E6D 14               inc d
  82+ 8E6E 14               inc d
  83+ 8E6F 18 F6            jr 2B
  84+ 8E71
  85+ 8E71 CD 84 8C     1 call Extrae_address
  86+ 8E74 E5               push hl
  87+ 8E75 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E77 DD 21 02 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E7B
  90+ 8E7B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E7B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E7B
  93+ 8E7B 3A F3 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E7E CB 77            bit 6,a
  95+ 8E80 20 04            jr nz,19F
  96+ 8E82
  97+ 8E82 AF               xor a
  98+ 8E83 32 5C 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E86
 100+ 8E86 3A DD 88     19 ld a,(Cuad_objeto)
 101+ 8E89 FE 02            cp 2
 102+ 8E8B 38 66            jr c,3F
 103+ 8E8D 28 64            jr z,3F
 104+ 8E8F
 105+ 8E8F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E8F
 107+ 8E8F E6 01            and 1
 108+ 8E91 28 30            jr z,4F
 109+ 8E93
 110+ 8E93              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E93              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E93              ;
 113+ 8E93              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E93              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E93              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E93
 117+ 8E93 2A CB 88     	ld hl,(Posicion_actual)
 118+ 8E96
 119+ 8E96              ;   Amadeus o entidad ???.
 120+ 8E96
 121+ 8E96 3A F3 88         ld a,(Ctrl_0)
 122+ 8E99 CB 77            bit 6,a
 123+ 8E9B 28 0A            jr z,8F
 124+ 8E9D
 125+ 8E9D              ; 	Dispara Amadeus.
 126+ 8E9D
 127+ 8E9D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E9F CD 2B 96         call PreviousScan
 129+ 8EA2 CD 2B 96         call PreviousScan
 130+ 8EA5
 131+ 8EA5              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EA5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EA5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EA5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EA5
 136+ 8EA5 18 11            jr 10F
 137+ 8EA7
 138+ 8EA7              ; 	Dispara Entidad.
 139+ 8EA7
 140+ 8EA7 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EAA              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EAA
 143+ 8EAA              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EAA              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EAA
 146+ 8EAA C5               push bc
 147+ 8EAB 06 10            ld b,16
 148+ 8EAD CD 1C 96     9 call NextScan
 149+ 8EB0 10 FB            djnz 9B
 150+ 8EB2 C1               pop bc
 151+ 8EB3 CD 1D 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EB6 18 06            jr 17F
 153+ 8EB8
 154+ 8EB8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EB8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EB8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EB8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EB8
 159+ 8EB8 CD 1D 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EBB CD 92 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EBE              ;                                                      ; _al generar el disparo.
 162+ 8EBE
 163+ 8EBE              ; 	LLegados a este punto tendremos:
 164+ 8EBE              ;
 165+ 8EBE              ;       Puntero_objeto_disparo en IY.
 166+ 8EBE              ;       Rutinas_de_impresion en IX.
 167+ 8EBE              ;       Puntero_de_impresion en HL.
 168+ 8EBE              ;       Impacto/Dirección en BC.
 169+ 8EBE
 170+ 8EBE CD 25 8F     17 call Almacena_disparo
 171+ 8EC1 18 52            jr 6F                                             ; RET.
 172+ 8EC3
 173+ 8EC3              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EC3              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EC3              ;
 176+ 8EC3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EC3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EC3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EC3
 180+ 8EC3 2A CB 88     4 ld hl,(Posicion_actual)
 181+ 8EC6
 182+ 8EC6              ;   Amadeus o entidad ???.
 183+ 8EC6
 184+ 8EC6 3A F3 88         ld a,(Ctrl_0)
 185+ 8EC9 CB 77            bit 6,a
 186+ 8ECB 28 0A            jr z,11F
 187+ 8ECD
 188+ 8ECD              ; 	Dispara Amadeus.
 189+ 8ECD
 190+ 8ECD 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ECF CD 2B 96         call PreviousScan
 192+ 8ED2 CD 2B 96         call PreviousScan
 193+ 8ED5
 194+ 8ED5              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8ED5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8ED5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8ED5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8ED5
 199+ 8ED5 18 11            jr 13F
 200+ 8ED7
 201+ 8ED7              ; 	Dispara Entidad.
 202+ 8ED7
 203+ 8ED7 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EDA              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EDA
 206+ 8EDA              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EDA              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EDA
 209+ 8EDA C5               push bc
 210+ 8EDB 06 10            ld b,16
 211+ 8EDD CD 1C 96     12 call NextScan
 212+ 8EE0 10 FB            djnz 12B
 213+ 8EE2 C1               pop bc
 214+ 8EE3
 215+ 8EE3 CD 16 8F         call Ajusta_disparo_parte_derecha
 216+ 8EE6 18 06            jr 18F
 217+ 8EE8
 218+ 8EE8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EE8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EE8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EE8
 223+ 8EE8 CD 16 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EEB CD 92 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EEE              ;                                                       ; _al generar el disparo.
 226+ 8EEE
 227+ 8EEE              ; LLegados a este punto tendremos:
 228+ 8EEE              ;
 229+ 8EEE              ;       Puntero_objeto_disparo en IY.
 230+ 8EEE              ;       Rutinas_de_impresion en IX.
 231+ 8EEE              ;       Puntero_de_impresion en HL.
 232+ 8EEE              ;       Impacto/Dirección en BC.
 233+ 8EEE
 234+ 8EEE CD 25 8F     18 call Almacena_disparo
 235+ 8EF1 18 22            jr 6F                                               ; RET.
 236+ 8EF3
 237+ 8EF3              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EF3
 239+ 8EF3 28 11        3 jr z,5F
 240+ 8EF5
 241+ 8EF5              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EF5              ;
 243+ 8EF5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EF5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EF5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EF5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EF5
 248+ 8EF5              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EF5              ;	   ""        ""       "f9", B="1"
 250+ 8EF5              ;	   ""        ""       "fb", B="2"
 251+ 8EF5              ; 	   ""        ""       "fb", B="3"
 252+ 8EF5
 253+ 8EF5 2A CB 88     	ld hl,(Posicion_actual)
 254+ 8EF8 CD 1C 96     	call NextScan
 255+ 8EFB
 256+ 8EFB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EFB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EFB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EFB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EFB
 261+ 8EFB CD 1D 8F         call Ajusta_disparo_parte_izquierda
 262+ 8EFE
 263+ 8EFE              ; 	No se produce impacto. B="$80"
 264+ 8EFE              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EFE
 266+ 8EFE 01 80 80         ld bc,$8080
 267+ 8F01
 268+ 8F01              ; 	LLegados a este punto tendremos:
 269+ 8F01              ;
 270+ 8F01              ;       Puntero_objeto_disparo en IY.
 271+ 8F01              ;       Rutinas_de_impresion en IX.
 272+ 8F01              ;       Puntero_de_impresion en HL.
 273+ 8F01              ;       Impacto/Dirección en BC.
 274+ 8F01
 275+ 8F01 CD 25 8F         call Almacena_disparo
 276+ 8F04 18 0F            jr 6F                                           ; RET.
 277+ 8F06
 278+ 8F06              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F06              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F06              ;
 281+ 8F06              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F06              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F06              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F06              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F06
 286+ 8F06 2A CB 88     5 ld hl,(Posicion_actual)
 287+ 8F09 CD 1C 96     	call NextScan
 288+ 8F0C
 289+ 8F0C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F0C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F0C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F0C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F0C
 294+ 8F0C CD 16 8F         call Ajusta_disparo_parte_derecha
 295+ 8F0F
 296+ 8F0F              ; 	No se produce impacto. B="$80"
 297+ 8F0F              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F0F
 299+ 8F0F 01 80 80     15 ld bc,$8080
 300+ 8F12
 301+ 8F12              ; 	LLegados a este punto tendremos:
 302+ 8F12              ;
 303+ 8F12              ;       Puntero_objeto_disparo en IY.
 304+ 8F12              ;       Rutinas_de_impresion en IX.
 305+ 8F12              ;       Puntero_de_impresion en HL.
 306+ 8F12              ;       Impacto/Dirección en BC.
 307+ 8F12
 308+ 8F12 CD 25 8F         call Almacena_disparo
 309+ 8F15
 310+ 8F15 C9           6 ret
 311+ 8F16
 312+ 8F16              ; ----------------------------------------------------------------
 313+ 8F16              ;
 314+ 8F16              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F16              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F16              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F16
 318+ 8F16 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F17 FE 02            cp 2
 320+ 8F19 38 01            jr c,1F
 321+ 8F1B 23               inc hl
 322+ 8F1C C9           1 ret
 323+ 8F1D
 324+ 8F1D 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F1E FE 01        	cp 1
 326+ 8F20 20 01        	jr nz,1F
 327+ 8F22 2B           	dec hl
 328+ 8F23 2B           1 dec hl
 329+ 8F24 C9               ret
 330+ 8F25
 331+ 8F25              ; ----------------------------------------------------------------
 332+ 8F25              ;
 333+ 8F25              ;   25/02/23
 334+ 8F25              ;
 335+ 8F25              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F25              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F25              ;
 338+ 8F25              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F25              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F25
 341+ 8F25              Almacena_disparo
 342+ 8F25
 343+ 8F25 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F26 F1               pop af
 345+ 8F27 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F28
 347+ 8F28 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F29 E6 01            and 1
 349+ 8F2B 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F2D              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F2D              ; 	Dispara AMADEUS.
 352+ 8F2D
 353+ 8F2D              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F2D              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F2D              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F2D              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F2D
 358+ 8F2D C5               push bc
 359+ 8F2E 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F31 2A 44 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F34 A7               and a
 362+ 8F35 ED 42            sbc hl,bc
 363+ 8F37 CC 05 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F3A C1               pop bc
 365+ 8F3B 28 54            jr z,4F
 366+ 8F3D
 367+ 8F3D 2A 44 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F40 23               inc hl
 369+ 8F41 23               inc hl
 370+ 8F42 22 44 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F45              ;                                                   ; _ Disparo_(+1).
 372+ 8F45 18 18            jr 2F
 373+ 8F47
 374+ 8F47              ; Dispara una entidad.
 375+ 8F47
 376+ 8F47 C5           1 push bc
 377+ 8F48 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F4B 2A 42 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F4E A7               and a
 380+ 8F4F ED 42            sbc hl,bc
 381+ 8F51 CC FE 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F54 C1               pop bc
 383+ 8F55 28 3A            jr z,4F
 384+ 8F57
 385+ 8F57 2A 42 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F5A 23               inc hl
 387+ 8F5B 23               inc hl
 388+ 8F5C 22 42 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F5F              ;                                                   ; _ Disparo_(+1).
 390+ 8F5F CD 84 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F62              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F62              ;
 393+ 8F62              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F62              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F62              ;                                                     Puntero_de_impresion en HL.
 396+ 8F62              ;                                                     Impacto/Dirección en BC.
 397+ 8F62
 398+ 8F62 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F63 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F64 23               inc hl                                          ; _ al siguiente.
 401+ 8F65 A7               and a
 402+ 8F66 20 C0            jr nz,3B
 403+ 8F68
 404+ 8F68 08               ex af,af
 405+ 8F69 ED 73 17 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F6D F9               ld sp,hl
 407+ 8F6E
 408+ 8F6E DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F70 F5               push af                                         ; Puntero de impresión.
 410+ 8F71 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F73 C5               push bc                                         ; Control.
 412+ 8F74
 413+ 8F74 ED 7B 17 89      ld sp,(Stack)
 414+ 8F78
 415+ 8F78              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F78
 417+ 8F78 21 06 89     	ld hl,Ctrl_1
 418+ 8F7B CB C6        	set 0,(hl)
 419+ 8F7D
 420+ 8F7D DD E5        	push ix
 421+ 8F7F E1               pop hl
 422+ 8F80 F5               push af
 423+ 8F81 DD E1            pop ix
 424+ 8F83
 425+ 8F83 CD A0 7F     	call Guarda_foto_registros
 426+ 8F86
 427+ 8F86 21 06 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F89 CB 86        	res 0,(hl)
 429+ 8F8B
 430+ 8F8B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F8B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F8B
 433+ 8F8B CD 05 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F8E CD FE 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F91
 436+ 8F91 C9           4 ret
 437+ 8F92
 438+ 8F92              ; ----------------------------------------------------------------
 439+ 8F92              ;
 440+ 8F92              ;   4/3/23
 441+ 8F92              ;
 442+ 8F92              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F92              ;   _ al generarse el disparo.
 444+ 8F92              ;
 445+ 8F92              ;       "$80" ..... No se produce colisión.
 446+ 8F92              ;       "$81" ..... Se produce colisión.
 447+ 8F92              ;
 448+ 8F92              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F92              ;         _ que forman el disparo.
 450+ 8F92
 451+ 8F92
 452+ 8F92              Comprueba_Colision
 453+ 8F92
 454+ 8F92              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F92
 456+ 8F92 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F94 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F95
 459+ 8F95 CD CB 8F         call Modifica_H_Velocidad_disparo
 460+ 8F98
 461+ 8F98 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F99 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F9B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F9D
 465+ 8F9D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F9F CD BB 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FA2
 468+ 8FA2 7B               ld a,e
 469+ 8FA3 E6 01            and 1
 470+ 8FA5 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FA7              ;                                                  ; _ para activar IMPACTO.
 472+ 8FA7 E1               pop hl
 473+ 8FA8 E5               push hl
 474+ 8FA9 CD 1C 96         call NextScan
 475+ 8FAC
 476+ 8FAC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FAD FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FAF 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FB1              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FB1 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FB3 CD BB 8F         call Bucle_2
 482+ 8FB6
 483+ 8FB6 43           1 ld b,e
 484+ 8FB7 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FB8 FD E1            pop iy
 486+ 8FBA C9               ret
 487+ 8FBB
 488+ 8FBB              ; ---------- ----------
 489+ 8FBB
 490+ 8FBB 06 02        Bucle_2 ld b,2
 491+ 8FBD FD 7E 00     2 ld a,(iy)
 492+ 8FC0 A6               and (hl)
 493+ 8FC1 28 02            jr z,1F
 494+ 8FC3 1E 81            ld e,$81
 495+ 8FC5 23           1 inc hl
 496+ 8FC6 FD 23            inc iy
 497+ 8FC8 10 F3            djnz 2B
 498+ 8FCA C9               ret
 499+ 8FCB
 500+ 8FCB              ; ---------- ----------
 501+ 8FCB              ;
 502+ 8FCB              ;   21/7/23
 503+ 8FCB
 504+ 8FCB              Modifica_H_Velocidad_disparo
 505+ 8FCB
 506+ 8FCB 3A 53 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FCE FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FD0 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FD1 24               inc h
 510+ 8FD2
 511+ 8FD2 C9               ret
 512+ 8FD3
 513+ 8FD3              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FD3              ;
 515+ 8FD3              ;   11/04/23
 516+ 8FD3              ;
 517+ 8FD3              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FD3              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FD3              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FD3              ;
 521+ 8FD3              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FD3
 523+ 8FD3              Compara_coordenadas_X
 524+ 8FD3
 525+ 8FD3              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FD3              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FD3
 528+ 8FD3              ; Preparamos registros:
 529+ 8FD3
 530+ 8FD3 21 CF 88         ld hl,Filas+6
 531+ 8FD6 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FD7 23               inc hl
 533+ 8FD8 23               inc hl
 534+ 8FD9 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FDA 43               ld b,e
 536+ 8FDB
 537+ 8FDB 21 DD 88         ld hl,Filas+20
 538+ 8FDE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FDF 21 4E 89         ld hl,Coordenadas_X_Entidad
 540+ 8FE2 CD FE 91         call Guarda_coordenadas_X
 541+ 8FE5
 542+ 8FE5              ; Preparamos registros:
 543+ 8FE5
 544+ 8FE5 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FE8 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FE9 23               inc hl
 547+ 8FEA 23               inc hl
 548+ 8FEB 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FEC 7B               ld a,e
 550+ 8FED 08               ex af,af'
 551+ 8FEE 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FF1 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FF2 21 4B 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FF5 CD FE 91         call Guarda_coordenadas_X
 555+ 8FF8
 556+ 8FF8              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8FF8              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8FF8
 559+ 8FF8 04               inc b
 560+ 8FF9 05               dec b
 561+ 8FFA 28 04            jr z,1F
 562+ 8FFC 06 03            ld b,3
 563+ 8FFE 18 02            jr 2F
 564+ 9000 06 02        1 ld b,2
 565+ 9002 08           2 ex af,af'
 566+ 9003 3C               inc a
 567+ 9004 3D               dec a
 568+ 9005 28 04            jr z,5F
 569+ 9007 0E 03            ld c,3
 570+ 9009 18 02            jr 6F
 571+ 900B 0E 02        5 ld c,2
 572+ 900D 79           6 ld a,c
 573+ 900E 08               ex af,af'
 574+ 900F 11 4E 89         ld de,Coordenadas_X_Entidad
 575+ 9012 1A           4 ld a,(de)
 576+ 9013 21 4B 89         ld hl,Coordenadas_X_Amadeus
 577+ 9016 BE           3 cp (hl)
 578+ 9017 28 0E            jr z,7F
 579+ 9019 23               inc hl
 580+ 901A 0D               dec c
 581+ 901B 20 F9            jr nz,3B
 582+ 901D 13               inc de
 583+ 901E 08               ex af,af'
 584+ 901F 4F               ld c,a
 585+ 9020 08               ex af,af'
 586+ 9021 10 EF            djnz 4B
 587+ 9023
 588+ 9023              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9023
 590+ 9023 CD 3A 92     8 call Limpia_Coordenadas_X
 591+ 9026 C9               ret
 592+ 9027
 593+ 9027 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9029 32 E2 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 902C 21 46 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 902F CB D6            set 2,(hl)
 597+ 9031 18 F0            jr 8B
 598+ 9033
 599+ 9033              ; -----------------------------------------------------------------------
 600+ 9033              ;
 601+ 9033              ;   17/04/23
 602+ 9033              ;
 603+ 9033
 604+ 9033              Detecta_colision_nave_entidad
 605+ 9033
 606+ 9033              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9033
 608+ 9033 2A CB 88         ld hl,(Posicion_actual)
 609+ 9036 CD 77 95         call Calcula_puntero_de_impresion
 610+ 9039
 611+ 9039              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9039              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9039
 614+ 9039 DD E5            push ix
 615+ 903B E1               pop hl
 616+ 903C E5               push hl
 617+ 903D
 618+ 903D              ; ----- ----- -----
 619+ 903D 1E 00            ld e,0                                         ; Indica impacto.
 620+ 903F 06 0A            ld b,10
 621+ 9041 CD 71 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9044 7B               ld a,e
 623+ 9045 FE 05            cp 5
 624+ 9047 38 0E            jr c,3F
 625+ 9049
 626+ 9049              ; LLegados a este punto:
 627+ 9049              ;
 628+ 9049              ;   HAY COLISIÓN !!!!!.
 629+ 9049              ;
 630+ 9049              ;   .db (Impacto) de Amadeus a "1".
 631+ 9049              ;   SET el bit3 de (Impacto2).
 632+ 9049              ;
 633+ 9049              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9049
 635+ 9049 21 B7 85         ld hl,Amadeus_db+25
 636+ 904C 36 01            ld (hl),1
 637+ 904E 21 46 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9051 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9053 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9055 18 18            jr 1F
 641+ 9057
 642+ 9057              ; -----
 643+ 9057
 644+ 9057 E1           3 pop hl
 645+ 9058 CD 1C 96         call NextScan
 646+ 905B E5               push hl
 647+ 905C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 905D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 905F 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9061 30 0C            jr nc,1F
 651+ 9063              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9063 10 DC            djnz 2B
 653+ 9065
 654+ 9065              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9065
 656+ 9065              ; LLegados a este punto:
 657+ 9065              ;
 658+ 9065              ;   NO HAY COLISIÓN !!!!!.
 659+ 9065              ;
 660+ 9065              ;   .db (Impacto) de Amadeus a "0".
 661+ 9065              ;   RES el bit2 de (Impacto2).
 662+ 9065              ;
 663+ 9065              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9065              ;   Lo colocamos a "0".
 665+ 9065
 666+ 9065 21 46 89         ld hl,Impacto2
 667+ 9068 CB 96            res 2,(hl)
 668+ 906A 2A 47 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 906D 36 00            ld (hl),0
 670+ 906F
 671+ 906F E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9070 C9               ret
 673+ 9071
 674+ 9071               ; ---------- ----------
 675+ 9071
 676+ 9071 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9072 3A CA 88         ld a,(Columns)
 678+ 9075 47               ld b,a
 679+ 9076 FD 7E 00     2 ld a,(iy)
 680+ 9079 BE               cp (hl)
 681+ 907A 28 01            jr z,1F
 682+ 907C
 683+ 907C 1C               inc e
 684+ 907D
 685+ 907D 23           1 inc hl
 686+ 907E FD 23            inc iy
 687+ 9080 10 F4            djnz 2B
 688+ 9082 C1               pop bc
 689+ 9083 C9               ret
 690+ 9084
 691+ 9084              ; -------------------------------------------------------------------------------------------------------------
 692+ 9084              ;
 693+ 9084              ;   13/03/23
 694+ 9084              ;
 695+ 9084              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9084              ;
 697+ 9084              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9084
 699+ 9084 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9087 7E               ld a,(hl)
 701+ 9088 A7               and a
 702+ 9089 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 908A
 704+ 908A 44               ld b,h
 705+ 908B 4D               ld c,l
 706+ 908C 2A 1F 89         ld hl,(Stack_snapshot_disparos)
 707+ 908F E5               push hl
 708+ 9090 A7               and a
 709+ 9091 ED 42            sbc hl,bc
 710+ 9093 E5               push hl
 711+ 9094 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9095
 713+ 9095 E1               pop hl
 714+ 9096 54               ld d,h
 715+ 9097 5D               ld e,l
 716+ 9098 1B               dec de
 717+ 9099 ED B8            lddr                                                ; Limpiamos.
 718+ 909B
 719+ 909B 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 909E 22 1F 89         ld (Stack_snapshot_disparos),hl
 721+ 90A1
 722+ 90A1 C9               ret
 723+ 90A2
 724+ 90A2              ; -------------------------------------------------------------------------------------------------------------
 725+ 90A2              ;
 726+ 90A2              ;   18/07/23
 727+ 90A2              ;
 728+ 90A2
 729+ 90A2              Motor_de_disparos
 730+ 90A2
 731+ 90A2              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90A2
 733+ 90A2 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90A5 2A 44 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90A8
 736+ 90A8 CD 84 8C     2 call Extrae_address
 737+ 90AB 7E               ld a,(hl)
 738+ 90AC A7               and a
 739+ 90AD 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90AF
 741+ 90AF              ; ----- ----- ----- ----- ----- -----
 742+ 90AF
 743+ 90AF C5               push bc
 744+ 90B0 CD 74 91         call foto_disparo_a_borrar
 745+ 90B3
 746+ 90B3              ; Existe colisión con este disparo???
 747+ 90B3
 748+ 90B3 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90B4 7E               ld a,(hl)
 750+ 90B5 2B               dec hl
 751+ 90B6 E6 01            and 1
 752+ 90B8 28 1D            jr z,9F
 753+ 90BA
 754+ 90BA              ;   En este punto:
 755+ 90BA              ;
 756+ 90BA              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90BA              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90BA              ;   _con la entidad).
 759+ 90BA              ;
 760+ 90BA              ;   Disparo_2A defw 0                                ; Control.
 761+ 90BA              ;    defw 0                                          ; Puntero objeto.
 762+ 90BA              ;    defw 0                                          ; Puntero de impresión.
 763+ 90BA              ;    defw 0                                          ; Rutina de impresión.
 764+ 90BA
 765+ 90BA E5               push hl
 766+ 90BB
 767+ 90BB 06 04            ld b,4
 768+ 90BD 23           19 inc hl
 769+ 90BE 10 FD            djnz 19B
 770+ 90C0
 771+ 90C0 CD 84 8C         call Extrae_address
 772+ 90C3 CD E5 9C         call Genera_coordenadas_disparo
 773+ 90C6
 774+ 90C6              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90C6
 776+ 90C6 21 49 89         ld hl,Coordenadas_disparo_certero
 777+ 90C9 72               ld (hl),d
 778+ 90CA 23               inc hl
 779+ 90CB 73               ld (hl),e
 780+ 90CC
 781+ 90CC              ; Elimino el disparo de la base de datos.
 782+ 90CC
 783+ 90CC E1               pop hl
 784+ 90CD CD F3 91         call Elimina_disparo_de_base_de_datos
 785+ 90D0 21 46 89         ld hl,Impacto2
 786+ 90D3 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90D5
 788+ 90D5 18 06            jr 11F
 789+ 90D7
 790+ 90D7 CD 9D 91     9 call Mueve_disparo
 791+ 90DA CD 74 91         call foto_disparo_a_borrar
 792+ 90DD
 793+ 90DD C1           11 pop bc
 794+ 90DE 18 04            jr 7F
 795+ 90E0
 796+ 90E0              ; ----- ----- ----- ----- ----- -----
 797+ 90E0
 798+ 90E0 ED 42        1 sbc hl,bc
 799+ 90E2 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90E4
 801+ 90E4 2A 44 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90E7 23               inc hl
 803+ 90E8 23               inc hl
 804+ 90E9 22 44 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90EC 18 BA            jr 2B
 806+ 90EE
 807+ 90EE CD 05 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90F1              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90F1
 810+ 90F1              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90F1
 812+ 90F1 01 8A 85         ld bc,Disparo_11
 813+ 90F4 2A 42 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90F7
 815+ 90F7 CD 84 8C     5 call Extrae_address
 816+ 90FA 7E               ld a,(hl)
 817+ 90FB A7               and a
 818+ 90FC 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 90FE
 820+ 90FE              ; ----- ----- ----- ----- ----- -----
 821+ 90FE
 822+ 90FE C5               push bc
 823+ 90FF CD 74 91         call foto_disparo_a_borrar
 824+ 9102
 825+ 9102              ; Existe colisión con este disparo???
 826+ 9102
 827+ 9102 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9103 7E               ld a,(hl)
 829+ 9104 2B               dec hl
 830+ 9105 E6 01            and 1
 831+ 9107 28 4D            jr z,10F
 832+ 9109
 833+ 9109              ;! La colisión se produce con Amadeus???
 834+ 9109              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9109
 836+ 9109 E5               push hl
 837+ 910A
 838+ 910A 06 04            ld b,4
 839+ 910C 23           16 inc hl
 840+ 910D 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 910F
 842+ 910F CD 84 8C         call Extrae_address
 843+ 9112 CD E5 9C         call Genera_coordenadas_disparo
 844+ 9115
 845+ 9115 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9116 FE 16            cp $16
 847+ 9118 38 2A            jr c,15F
 848+ 911A
 849+ 911A
 850+ 911A              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 911A
 852+ 911A D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 911B
 854+ 911B              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 911B
 856+ 911B
 857+ 911B 2A 51 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 911E
 859+ 911E              ; Coordenada X de Amadeus en D.
 860+ 911E
 861+ 911E 7D               ld a,l
 862+ 911F E6 1F            and $1F
 863+ 9121 57               ld d,a
 864+ 9122
 865+ 9122 21 A6 85         ld hl,Amadeus_db+8
 866+ 9125 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9126
 868+ 9126 21 4B 89         ld hl,Coordenadas_X_Amadeus
 869+ 9129 CD FE 91         call Guarda_coordenadas_X
 870+ 912C
 871+ 912C D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 912D
 873+ 912D              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 912D
 875+ 912D 06 02            ld b,2
 876+ 912F C5           20 push bc
 877+ 9130
 878+ 9130 06 03            ld b,3
 879+ 9132 21 4B 89         ld hl,Coordenadas_X_Amadeus
 880+ 9135 7E           18 ld a,(hl)
 881+ 9136 BA               cp d
 882+ 9137 20 04            jr nz,17F
 883+ 9139
 884+ 9139              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9139
 886+ 9139 C1               pop bc
 887+ 913A E1               pop hl
 888+ 913B 18 0D            jr 14F
 889+ 913D
 890+ 913D 23           17 inc hl
 891+ 913E 10 F5            djnz 18B
 892+ 9140
 893+ 9140 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9141
 895+ 9141 C1               pop bc
 896+ 9142 10 EB            djnz 20B
 897+ 9144
 898+ 9144
 899+ 9144              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9144              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9144
 902+ 9144 E1           15 pop hl
 903+ 9145 23               inc hl
 904+ 9146 35               dec (hl)
 905+ 9147 2B               dec hl
 906+ 9148 18 0C            jr 10F
 907+ 914A
 908+ 914A              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 914A              ; _ almacén de coordenadas_X de Amadeus.
 910+ 914A
 911+ 914A E5           14 push hl
 912+ 914B CD F3 91         call Elimina_disparo_de_base_de_datos
 913+ 914E 21 46 89         ld hl,Impacto2
 914+ 9151 CB CE            set 1,(hl)
 915+ 9153 E1               pop hl
 916+ 9154 18 06            jr 12F
 917+ 9156
 918+ 9156              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9156
 920+ 9156 CD 9D 91     10 call Mueve_disparo
 921+ 9159 CD 74 91         call foto_disparo_a_borrar
 922+ 915C C1           12 pop bc
 923+ 915D
 924+ 915D 18 04            jr 8F
 925+ 915F
 926+ 915F              ; ----- ----- ----- ----- ----- -----
 927+ 915F
 928+ 915F ED 42        4 sbc hl,bc
 929+ 9161 28 0A            jr z,6F
 930+ 9163
 931+ 9163 2A 42 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9166 23               inc hl
 933+ 9167 23               inc hl
 934+ 9168 22 42 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 916B 18 8A            jr 5B
 936+ 916D
 937+ 916D CD FE 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9170 CD 3A 92         call Limpia_Coordenadas_X
 939+ 9173 C9               ret
 940+ 9174
 941+ 9174              ; ------------------------------------------------------------------
 942+ 9174
 943+ 9174              foto_disparo_a_borrar
 944+ 9174
 945+ 9174 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9175 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9176 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9177
 949+ 9177 E5               push hl
 950+ 9178 23               inc hl
 951+ 9179 23               inc hl
 952+ 917A ED 73 17 89      ld (Stack),sp
 953+ 917E F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 917F FD E1            pop iy
 955+ 9181 DD E1            pop ix
 956+ 9183 E1               pop hl
 957+ 9184 ED 7B 17 89      ld sp,(Stack)
 958+ 9188 3A 06 89         ld a,(Ctrl_1)
 959+ 918B CB C7            set 0,a
 960+ 918D 32 06 89         ld (Ctrl_1),a
 961+ 9190 CD A0 7F         call Guarda_foto_registros
 962+ 9193 3A 06 89         ld a,(Ctrl_1)
 963+ 9196 CB 87            res 0,a
 964+ 9198 32 06 89         ld (Ctrl_1),a
 965+ 919B E1               pop hl
 966+ 919C C9               ret
 967+ 919D
 968+ 919D              ;---------------------------------------------------
 969+ 919D              ;
 970+ 919D              ;   18/07/23
 971+ 919D              ;
 972+ 919D
 973+ 919D              Mueve_disparo
 974+ 919D
 975+ 919D              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 919D              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 919D              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 919D
 979+ 919D E5               push hl
 980+ 919E
 981+ 919E 7E               ld a,(hl)
 982+ 919F
 983+ 919F 06 04            ld b,4
 984+ 91A1 23           1 inc hl
 985+ 91A2 10 FD            djnz 1B
 986+ 91A4
 987+ 91A4              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91A4
 989+ 91A4 CD 84 8C         call Extrae_address
 990+ 91A7
 991+ 91A7 E6 01            and 1
 992+ 91A9 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91AB
 994+ 91AB              ; Disparo hacia arriba, (Amadeus).
 995+ 91AB
 996+ 91AB              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91AB              ; _ de la dificultad.
 998+ 91AB
 999+ 91AB CD 2B 96         call PreviousScan
1000+ 91AE CD 2B 96         call PreviousScan
1001+ 91B1 CD 2B 96         call PreviousScan
1002+ 91B4 CD 2B 96         call PreviousScan
1003+ 91B7
1004+ 91B7              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91B7
1006+ 91B7 7C               ld a,h
1007+ 91B8 FE 40            cp $40
1008+ 91BA 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91BC
1010+ 91BC              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91BC
1012+ 91BC EB               ex de,hl
1013+ 91BD 06 04            ld b,4
1014+ 91BF 2B           6 dec hl
1015+ 91C0 10 FD            djnz 6B
1016+ 91C2
1017+ 91C2 CD F3 91         call Elimina_disparo_de_base_de_datos
1018+ 91C5 E1               pop hl
1019+ 91C6 18 10            jr 7F
1020+ 91C8
1021+ 91C8              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91C8              ; HL contiene el puntero de impresión del disparo.
1023+ 91C8              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91C8
1025+ 91C8 D5           3 push de
1026+ 91C9 C5               push bc
1027+ 91CA
1028+ 91CA CD 92 8F         call Comprueba_Colision
1029+ 91CD
1030+ 91CD              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91CD
1032+ 91CD 78               ld a,b
1033+ 91CE
1034+ 91CE C1               pop bc
1035+ 91CF D1               pop de
1036+ 91D0
1037+ 91D0 EB               ex de,hl
1038+ 91D1
1039+ 91D1 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91D2 23               inc hl                                      ; _ movimiento.
1041+ 91D3 72               ld (hl),d
1042+ 91D4
1043+ 91D4 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91D5
1045+ 91D5 23               inc hl                                      ; _ en curso.
1046+ 91D6 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91D7 2B               dec hl
1048+ 91D8
1049+ 91D8 C9           7 ret
1050+ 91D9
1051+ 91D9              ; Disparo hacia abajo, (Entidad).
1052+ 91D9
1053+ 91D9 3A 53 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91DC 47               ld b,a
1055+ 91DD
1056+ 91DD CD 1C 96     4 call NextScan
1057+ 91E0 10 FB            djnz 4B
1058+ 91E2
1059+ 91E2              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91E2
1061+ 91E2 7C               ld a,h
1062+ 91E3 FE 58            cp $58
1063+ 91E5 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91E7
1065+ 91E7 EB               ex de,hl
1066+ 91E8 06 04            ld b,4
1067+ 91EA 2B           5 dec hl
1068+ 91EB 10 FD            djnz 5B
1069+ 91ED
1070+ 91ED CD F3 91         call Elimina_disparo_de_base_de_datos
1071+ 91F0 E1               pop hl
1072+ 91F1 18 E5            jr 7B
1073+ 91F3
1074+ 91F3              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91F3
1076+ 91F3 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91F6 AF               xor a
1078+ 91F7 77               ld (hl),a
1079+ 91F8 54               ld d,h
1080+ 91F9 5D               ld e,l
1081+ 91FA 13               inc de
1082+ 91FB ED B0            ldir
1083+ 91FD C9               ret
1084+ 91FE
1085+ 91FE              ; -----------------------------------------------------------------
1086+ 91FE              ;
1087+ 91FE              ;   19/7/23
1088+ 91FE              ;
1089+ 91FE              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 91FE              ;
1091+ 91FE              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 91FE              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 91FE              ;
1094+ 91FE              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 91FE              ;
1096+ 91FE              ;   INPUTS:
1097+ 91FE              ;
1098+ 91FE              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 91FE              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 91FE
1101+ 91FE              ;   MODIFICA: A, HL, BC y DE.
1102+ 91FE
1103+ 91FE              Guarda_coordenadas_X
1104+ 91FE
1105+ 91FE 7B               ld a,e
1106+ 91FF A7               and a
1107+ 9200 20 04            jr nz,1F
1108+ 9202
1109+ 9202 06 02            ld b,2
1110+ 9204 18 02            jr 2F
1111+ 9206
1112+ 9206 06 03        1 ld b,3
1113+ 9208 72           2 ld (hl),d
1114+ 9209 23               inc hl
1115+ 920A 14               inc d
1116+ 920B 10 FB            djnz 2B
1117+ 920D
1118+ 920D C9               ret
1119+ 920E
1120+ 920E              ; -----------------------------------------------------------------
1121+ 920E              ;
1122+ 920E              ;   12/04/23
1123+ 920E              ;
1124+ 920E
1125+ 920E 3A 46 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9211 A7               and a
1127+ 9212 C8               ret z
1128+ 9213
1129+ 9213 FE 04            cp 4
1130+ 9215 20 09            jr nz,1F
1131+ 9217
1132+ 9217
1133+ 9217              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9217
1135+ 9217 CD 33 90         call Detecta_colision_nave_entidad
1136+ 921A
1137+ 921A 21 46 89         ld hl,Impacto2
1138+ 921D CB 5E            bit 3,(hl)
1139+ 921F C0               ret nz                                               ; Existe colisión, RET.
1140+ 9220
1141+ 9220              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9220              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9220
1144+ 9220 21 46 89     1 ld hl,Impacto2
1145+ 9223 CB 4E            bit 1,(hl)
1146+ 9225 28 07            jr z,2F
1147+ 9227
1148+ 9227 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 922A 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 922C 18 0B            jr 3F
1151+ 922E
1152+ 922E 21 46 89     2 ld hl,Impacto2
1153+ 9231 CB 46            bit 0,(hl)
1154+ 9233 C8               ret z
1155+ 9234
1156+ 9234              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9234
1158+ 9234 21 06 89         ld hl,Ctrl_1
1159+ 9237 CB D6            set 2,(hl)
1160+ 9239
1161+ 9239 C9           3 ret
1162+ 923A
1163+ 923A              ; -----------------------------------------------------------------
1164+ 923A              ;
1165+ 923A              ;   19/7/23
1166+ 923A              ;
1167+ 923A              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 923A
1169+ 923A AF           Limpia_Coordenadas_X xor a
1170+ 923B 06 06            ld b,6
1171+ 923D 21 4B 89         ld hl,Coordenadas_X_Amadeus
1172+ 9240 77           1 ld (hl),a
1173+ 9241 23               inc hl
1174+ 9242 10 FC            djnz 1B
1175+ 9244 C9               ret
1176+ 9245
1177+ 9245              ; -----------------------------------------------------------------
1178+ 9245              ;
1179+ 9245              ;   25/04/23
1180+ 9245              ;
1181+ 9245
1182+ 9245              Determina_resultado_comparativa
1183+ 9245
1184+ 9245              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9245              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9245              ;
1187+ 9245              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9245              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9245              ;
1190+ 9245              ;   SBC HL,DE
1191+ 9245
1192+ 9245              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9245              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9245
1195+ 9245              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9245              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9245
1198+ 9245
1199+ 9245 3A DD 88         ld a,(Cuad_objeto)
1200+ 9248 FE 02            cp 2
1201+ 924A 28 26            jr z,2F
1202+ 924C 38 24            jr c,2F
1203+ 924E
1204+ 924E              ; Cuadrantes 3º y 4º
1205+ 924E
1206+ 924E E6 01            and 1
1207+ 9250 28 10            jr z,4F
1208+ 9252
1209+ 9252              ; Cuadrante 3º
1210+ 9252
1211+ 9252 7C               ld a,h
1212+ 9253 06 00            ld b,0
1213+ 9255
1214+ 9255 CD E0 92         call Compara_cositas_H3
1215+ 9258
1216+ 9258 04               inc b
1217+ 9259 05               dec b
1218+ 925A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 925B
1220+ 925B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 925C 06 00            ld b,0
1222+ 925E
1223+ 925E CD F2 92         call Compara_cositas_L3
1224+ 9261 C9               ret
1225+ 9262
1226+ 9262              ; Cuadrante 4º
1227+ 9262
1228+ 9262 7C           4 ld a,h
1229+ 9263 06 00            ld b,0
1230+ 9265
1231+ 9265 CD 04 93         call Compara_cositas_H4
1232+ 9268
1233+ 9268 04               inc b
1234+ 9269 05               dec b
1235+ 926A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 926B
1237+ 926B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 926C 06 00            ld b,0
1239+ 926E
1240+ 926E CD 1A 93         call Compara_cositas_L4
1241+ 9271 C9               ret
1242+ 9272
1243+ 9272              ; Cuadrantes 1º y 2º.
1244+ 9272
1245+ 9272 28 10        2 jr z,3F
1246+ 9274
1247+ 9274              ; 1er Cuadrante
1248+ 9274
1249+ 9274 7C               ld a,h
1250+ 9275 06 00            ld b,0
1251+ 9277
1252+ 9277 CD B8 92         call Compara_cositas_H1
1253+ 927A
1254+ 927A 04               inc b
1255+ 927B 05               dec b
1256+ 927C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 927D
1258+ 927D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 927E 06 00            ld b,0
1260+ 9280
1261+ 9280 CD CE 92         call Compara_cositas_L1
1262+ 9283 C9               ret
1263+ 9284
1264+ 9284
1265+ 9284              ; 2º Cuadrante
1266+ 9284
1267+ 9284 7C           3 ld a,h
1268+ 9285 06 00            ld b,0
1269+ 9287
1270+ 9287 CD 94 92         call Compara_cositas_H2
1271+ 928A
1272+ 928A 04               inc b
1273+ 928B 05               dec b
1274+ 928C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 928D
1276+ 928D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 928E 06 00            ld b,0
1278+ 9290
1279+ 9290 CD A6 92         call Compara_cositas_L2
1280+ 9293 C9               ret
1281+ 9294
1282+ 9294 A7           Compara_cositas_H2 and a
1283+ 9295 28 0D            jr z,1F
1284+ 9297              ;    cp $fd
1285+ 9297              ;    jr z,1F
1286+ 9297              ;    cp $fe
1287+ 9297              ;    jr z,1F
1288+ 9297 FE FF            cp $ff
1289+ 9299 28 09            jr z,1F
1290+ 929B FE 01            cp $01
1291+ 929D 28 05            jr z,1F
1292+ 929F FE 02            cp $02
1293+ 92A1 28 01            jr z,1F
1294+ 92A3 C0               ret nz
1295+ 92A4 04           1 inc b
1296+ 92A5 C9               ret
1297+ 92A6
1298+ 92A6 A7           Compara_cositas_L2 and a
1299+ 92A7 28 0D            jr z,1F
1300+ 92A9              ;    cp $fd
1301+ 92A9              ;    jr z,1F
1302+ 92A9 FE FE            cp $fe
1303+ 92AB 28 09            jr z,1F
1304+ 92AD FE FF            cp $ff
1305+ 92AF 28 05            jr z,1F
1306+ 92B1 FE 01            cp $01
1307+ 92B3 28 01            jr z,1F
1308+ 92B5              ;    cp $02
1309+ 92B5              ;    jr z,1F
1310+ 92B5 C0               ret nz
1311+ 92B6 04           1 inc b
1312+ 92B7 C9               ret
1313+ 92B8
1314+ 92B8 A7           Compara_cositas_H1 and a
1315+ 92B9 28 11            jr z,1F
1316+ 92BB              ;    cp $fd
1317+ 92BB              ;    jr z,1F
1318+ 92BB              ;    cp $fe
1319+ 92BB              ;    jr z,1F
1320+ 92BB FE FF            cp $ff
1321+ 92BD 28 0D            jr z,1F
1322+ 92BF FE 01            cp $01
1323+ 92C1 28 09            jr z,1F
1324+ 92C3 FE 02            cp $02
1325+ 92C5 28 05            jr z,1F
1326+ 92C7 FE 03            cp $03
1327+ 92C9 28 01            jr z,1F
1328+ 92CB C0               ret nz
1329+ 92CC 04           1 inc b
1330+ 92CD C9               ret
1331+ 92CE
1332+ 92CE A7           Compara_cositas_L1 and a
1333+ 92CF 28 0D            jr z,1F
1334+ 92D1              ;    cp $fd
1335+ 92D1              ;    jr z,1F
1336+ 92D1              ;    cp $fe
1337+ 92D1              ;    jr z,1F
1338+ 92D1              ;    cp $ff
1339+ 92D1              ;    jr z,1F
1340+ 92D1 FE 01            cp $01
1341+ 92D3 28 09            jr z,1F
1342+ 92D5 FE 02            cp $02
1343+ 92D7 28 05            jr z,1F
1344+ 92D9 FE 03            cp $03
1345+ 92DB 28 01            jr z,1F
1346+ 92DD C0               ret nz
1347+ 92DE 04           1 inc b
1348+ 92DF C9               ret
1349+ 92E0
1350+ 92E0 A7           Compara_cositas_H3 and a
1351+ 92E1 28 0D            jr z,1F
1352+ 92E3              ;    cp $fd
1353+ 92E3              ;    jr z,1F
1354+ 92E3 FE FE            cp $fe
1355+ 92E5 28 09            jr z,1F
1356+ 92E7 FE FF            cp $ff
1357+ 92E9 28 05            jr z,1F
1358+ 92EB FE 01            cp $01
1359+ 92ED 28 01            jr z,1F
1360+ 92EF              ;    cp $02
1361+ 92EF              ;    jr z,1F
1362+ 92EF              ;    cp $03
1363+ 92EF              ;    jr z,1F
1364+ 92EF C0               ret nz
1365+ 92F0 04           1 inc b
1366+ 92F1 C9               ret
1367+ 92F2
1368+ 92F2 A7           Compara_cositas_L3 and a
1369+ 92F3 28 0D            jr z,1F
1370+ 92F5              ;    cp $fd
1371+ 92F5              ;    jr z,1F
1372+ 92F5              ;    cp $fe
1373+ 92F5              ;    jr z,1F
1374+ 92F5              ;    cp $ff
1375+ 92F5              ;    jr z,1F
1376+ 92F5 FE 01            cp $01
1377+ 92F7 28 09            jr z,1F
1378+ 92F9 FE 02            cp $02
1379+ 92FB 28 05            jr z,1F
1380+ 92FD FE 03            cp $03
1381+ 92FF 28 01            jr z,1F
1382+ 9301 C0               ret nz
1383+ 9302 04           1 inc b
1384+ 9303 C9               ret
1385+ 9304
1386+ 9304 A7           Compara_cositas_H4 and a
1387+ 9305 28 11            jr z,1F
1388+ 9307 FE FD            cp $fd
1389+ 9309 28 0D            jr z,1F
1390+ 930B FE FE            cp $fe
1391+ 930D 28 09            jr z,1F
1392+ 930F FE FF            cp $ff
1393+ 9311 28 05            jr z,1F
1394+ 9313 FE 01            cp $01
1395+ 9315 28 01            jr z,1F
1396+ 9317              ;    cp $02
1397+ 9317              ;    jr z,1F
1398+ 9317              ;    cp $03
1399+ 9317              ;    jr z,1F
1400+ 9317 C0               ret nz
1401+ 9318 04           1 inc b
1402+ 9319 C9               ret
1403+ 931A
1404+ 931A A7           Compara_cositas_L4 and a
1405+ 931B 28 0D            jr z,1F
1406+ 931D              ;    cp $fd
1407+ 931D              ;    jr z,1F
1408+ 931D FE FE            cp $fe
1409+ 931F 28 09            jr z,1F
1410+ 9321 FE FF            cp $ff
1411+ 9323 28 05            jr z,1F
1412+ 9325 FE 01            cp $01
1413+ 9327 28 01            jr z,1F
1414+ 9329              ;    cp $02
1415+ 9329              ;    jr z,1F
1416+ 9329              ;    cp $03
1417+ 9329              ;    jr z,1F
1418+ 9329 C0               ret nz
1419+ 932A 04           1 inc b
1420+ 932B C9               ret
# file closed: Disparo.asm
1651  932C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 932C              ; ******************************************************************************************************************************************************************************************
   2+ 932C              ;
   3+ 932C              ; 26/06/23
   4+ 932C              ;
   5+ 932C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 932C
   7+ 932C CD 10 96     Draw call Prepara_draw
   8+ 932F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9330 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9331 28 05        	jr z,2F
  11+ 9333
  12+ 9333 3A DD 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9336 18 0C        	jr 1F
  14+ 9338
  15+ 9338 2A DB 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 933B 22 CB 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 933E CD CD 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9341              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9341 CD 70 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9344
  21+ 9344 3A F3 88     1 ld a,(Ctrl_0)
  22+ 9347 CB 6F        	bit 5,a
  23+ 9349 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 934B
  25+ 934B CD 63 93     	call Comprueba_limite_horizontal
  26+ 934E CD F3 93     	call Comprueba_limite_vertical
  27+ 9351
  28+ 9351              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9351              ; -----------------------
  30+ 9351              ; -----------------------
  31+ 9351              ; -----------------------
  32+ 9351
  33+ 9351 CD 40 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9354 CD 77 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9357 CD D6 95     	call Define_rutina_de_impresion
  36+ 935A
  37+ 935A 3A F3 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 935D CB AF        	res 5,a											; _a ser de utilidad.
  39+ 935F 32 F3 88     	ld (Ctrl_0),a
  40+ 9362
  41+ 9362 C9           	ret
  42+ 9363
  43+ 9363              ; *******************************************************************************************************************************************************************************************
  44+ 9363              ;	21/01/23
  45+ 9363              ;
  46+ 9363              ; 	Comprueba_limite_horizontal.
  47+ 9363              ;
  48+ 9363              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9363              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9363              ;
  51+ 9363              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9363              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9363              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9363              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9363
  56+ 9363
  57+ 9363
  58+ 9363 3A F3 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9366 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9368 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 936A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 936C 32 F3 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 936F 18 09            jr 6F
  64+ 9371 CB 5F        1 bit 3,a
  65+ 9373 28 0A            jr z,2F
  66+ 9375 E6 F7            and $f7
  67+ 9377 32 F3 88         ld (Ctrl_0),a
  68+ 937A CD CD 94     6 call Inicializacion
  69+ 937D 18 5B            jr 5F
  70+ 937F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9380
  72+ 9380              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9380              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9380
  75+ 9380 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9381 2A 01 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9384 CD 2F 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9387 67           	ld h,a
  79+ 9388 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9389 CD 2F 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 938C 67           	ld h,a
  82+ 938D A7           	and a
  83+ 938E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9390 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9391 3A DD 88     	ld a,(Cuad_objeto)
  86+ 9394 FE 02        	cp 2
  87+ 9396 38 1E        	jr c,3F
  88+ 9398 28 1C        	jr z,3F
  89+ 939A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 939B 28 23            jr z,7F
  91+ 939D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 939F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93A1 E1           	pop hl
  94+ 93A2
  95+ 93A2              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93A2              ; _para indicar con E="2" en caso necesario.
  97+ 93A2
  98+ 93A2 E5               push hl
  99+ 93A3 C5               push bc
 100+ 93A4 CD 2F 99     	call calcula_tercio
 101+ 93A7 FE 01        	cp 1
 102+ 93A9 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93AB CD DB 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93AE 28 26            jr z,9F
 105+ 93B0 38 24            jr c,9F
 106+ 93B2 1E 00        11 ld e,0
 107+ 93B4 18 22            jr 8F
 108+ 93B6 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93B7 28 07        	jr z, 7F
 110+ 93B9 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93BB 1E 00         	ld e,0
 112+ 93BD E1           	pop hl
 113+ 93BE 18 04        	jr 4F
 114+ 93C0 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93C2 18 15            jr 10F
 116+ 93C4
 117+ 93C4              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93C4              ; _para indicar con E="2" en caso necesario.
 119+ 93C4
 120+ 93C4 E5           4 push hl
 121+ 93C5 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93C6 CD 2F 99     	call calcula_tercio
 123+ 93C9 FE 01        	cp 1
 124+ 93CB 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93CD CD DB 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93D0 28 04            jr z,9F
 127+ 93D2 30 02            jr nc,9F
 128+ 93D4 18 02        	jr 8F
 129+ 93D6 1E 02        9 ld e,2
 130+ 93D8 C1           8 pop bc
 131+ 93D9 E1           10 pop hl
 132+ 93DA C9           5 ret
 133+ 93DB
 134+ 93DB              ; --------------------
 135+ 93DB              ;
 136+ 93DB              ; 25/08/22
 137+ 93DB
 138+ 93DB CD 2F 99     Comprueba_centro call calcula_tercio
 139+ 93DE 67               ld h,a
 140+ 93DF 08           	ex af,af
 141+ 93E0 FE 02        	cp 2
 142+ 93E2 38 07        	jr c,1F
 143+ 93E4 28 05        	jr z,1F
 144+ 93E6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93E9 18 03        	jr 2F
 146+ 93EB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93EE 08           2 ex af,af
 148+ 93EF A7               and a
 149+ 93F0 ED 42            sbc hl,bc
 150+ 93F2 C9               ret
 151+ 93F3
 152+ 93F3              ; *********************************************************************************************************************************************************************************************
 153+ 93F3              ;
 154+ 93F3              ;   16/8/22
 155+ 93F3              ;
 156+ 93F3              ;	Comprueba_limite_vertical
 157+ 93F3              ;
 158+ 93F3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93F3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93F3              ;
 161+ 93F3
 162+ 93F3 2A CB 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93F6 7D           	ld a,l
 164+ 93F7 E6 1F        	and $1F
 165+ 93F9 57           	ld d,a
 166+ 93FA 3A 03 89     	ld a,(Limite_vertical)
 167+ 93FD BA           	cp d 											; Límite - Posición.
 168+ 93FE 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 93FF 3A DD 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9402 CB 47        	bit 0,a
 171+ 9404 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9406
 173+ 9406              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9406
 175+ 9406 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9407 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9409
 178+ 9409              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9409              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9409
 181+ 9409 3A CF 88         ld a,(Coordenada_X)
 182+ 940C 16 0F            ld d,Centro_izquierda
 183+ 940E A7               and a
 184+ 940F 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9410 28 1E            jr z,3F
 186+ 9412 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9414              ;                                                    ; _salimos sin modificar nada.
 188+ 9414 18 0E            jr 2F
 189+ 9416 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9417 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9419
 192+ 9419              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9419              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9419
 195+ 9419 3A CF 88         ld a,(Coordenada_X)
 196+ 941C 16 10            ld d,Centro_derecha
 197+ 941E A7               and a
 198+ 941F 92               sub d
 199+ 9420 28 0E            jr z,3F
 200+ 9422 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9424              ;                                                    ; _salimos sin modificar nada.
 202+ 9424 CB 43        2 bit 0,e
 203+ 9426 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9428 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9429 CD BD 94         call Modificaccionne
 206+ 942C C1           	pop bc
 207+ 942D CD CD 94         call Inicializacion
 208+ 9430 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9431
 210+ 9431              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9431
 212+ 9431 C5           4 push bc
 213+ 9432 01 CA 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9435 0A           	ld a,(bc)
 215+ 9436 3D           	dec a
 216+ 9437 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9438 7D           	ld a,l
 218+ 9439 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 943A CB 47        	bit 0,a
 220+ 943C 28 03        	jr z,5F
 221+ 943E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 943F 18 2E        	jr 7F
 223+ 9441
 224+ 9441              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9441
 226+ 9441 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9442 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9443 3A F3 88     	ld a,(Ctrl_0)
 229+ 9446 CB 4F        	bit 1,a
 230+ 9448 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 944A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 944B
 233+ 944B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 944B
 235+ 944B 1C               inc e
 236+ 944C 1D               dec e
 237+ 944D 20 07            jr nz,12F
 238+ 944F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9450 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9451 22 CB 88     	ld (Posicion_actual),hl
 241+ 9454 18 44        13 jr 9F
 242+ 9456 CB 43        12 bit 0,e
 243+ 9458 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 945A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 945A C1           	pop bc
 246+ 945B 18 D3        	jr 3B
 247+ 945D 80           14 add b
 248+ 945E 6F               ld l,a
 249+ 945F 22 CB 88     	ld (Posicion_actual),hl
 250+ 9462 CD BD 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9465 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9467 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9469 32 F3 88         ld (Ctrl_0),a
 254+ 946C F1           	pop af
 255+ 946D 18 2B        	jr 9F
 256+ 946F
 257+ 946F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 946F
 259+ 946F F5           7 push af
 260+ 9470 3A F3 88     	ld a,(Ctrl_0)
 261+ 9473 CB 47        	bit 0,a
 262+ 9475 20 1D        	jr nz,8F
 263+ 9477 F1           	pop af
 264+ 9478
 265+ 9478              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9478
 267+ 9478 1C           	inc e
 268+ 9479 1D               dec e
 269+ 947A 20 07            jr nz,10F
 270+ 947C 90           	sub b
 271+ 947D 6F               ld l,a
 272+ 947E 22 CB 88     	ld (Posicion_actual),hl
 273+ 9481 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9483              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9483 CB 43        10 bit 0,e
 276+ 9485 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9487              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9487 C1           	pop bc
 279+ 9488 18 A6        	jr 3B
 280+ 948A 90           16 sub b
 281+ 948B 6F               ld l,a
 282+ 948C 22 CB 88     	ld (Posicion_actual),hl
 283+ 948F CD BD 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9492 18 06            jr 9F
 285+ 9494 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9496 32 F3 88         ld (Ctrl_0),a
 287+ 9499 F1           	pop af
 288+ 949A C1           9 pop bc
 289+ 949B 1E 00        	ld e,0
 290+ 949D CD CD 94         call Inicializacion
 291+ 94A0 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94A1 08           	ex af,af
 293+ 94A2 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94A3 18 8B            jr 3B
 295+ 94A5
 296+ 94A5              ; --------------------
 297+ 94A5
 298+ 94A5 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94A7 CD 2B 96     1 call PreviousScan
 300+ 94AA 10 FB            djnz 1B
 301+ 94AC 22 CB 88     	ld (Posicion_actual),hl
 302+ 94AF AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94B0 C9           	ret
 304+ 94B1
 305+ 94B1              ; --------------------
 306+ 94B1
 307+ 94B1 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94B3 CD 1C 96     1 call NextScan
 309+ 94B6 10 FB            djnz 1B
 310+ 94B8 22 CB 88     	ld (Posicion_actual),hl
 311+ 94BB AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94BC C9           	ret
 313+ 94BD
 314+ 94BD              ; --------------------
 315+ 94BD              ;
 316+ 94BD              ;	22/01/23
 317+ 94BD              ;
 318+ 94BD              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94BD              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94BD              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94BD
 322+ 94BD
 323+ 94BD              Modificaccionne
 324+ 94BD
 325+ 94BD 3A DD 88     	ld a,(Cuad_objeto)
 326+ 94C0 FE 02        	cp 2
 327+ 94C2 CC A5 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94C5 DC A5 94         call c,Modifica_Pos_actual
 329+ 94C8 C8           	ret z
 330+ 94C9 CD B1 94         call Modifica_Pos_actual2
 331+ 94CC C9               ret
 332+ 94CD
 333+ 94CD              ; *************************************************************************************************************************************************************************************************
 334+ 94CD              ;
 335+ 94CD              ;	13/8/22
 336+ 94CD              ;
 337+ 94CD              ;	Inicializacion
 338+ 94CD              ;
 339+ 94CD              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94CD              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94CD              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94CD              ;
 343+ 94CD              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94CD              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94CD              ;	_ desaparece/aparece.
 346+ 94CD
 347+ 94CD              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94CD              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94CD              ;
 350+ 94CD              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94CD              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94CD              ; 		   [E] ="0"
 353+ 94CD
 354+ 94CD              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94CD
 356+ 94CD CD 2F 99     Inicializacion call calcula_tercio
 357+ 94D0 28 36        	jr z,primit
 358+ 94D2 E6 02        	and 2
 359+ 94D4 20 07        	jr nz,segmit
 360+ 94D6 7D           	ld a,l
 361+ 94D7 FE 7F        	cp $7f
 362+ 94D9 38 2D        	jr c,primit
 363+ 94DB 28 2B        	jr z,primit
 364+ 94DD CD 3A 95     segmit call column
 365+ 94E0 38 13        	jr c,tercuad
 366+ 94E2 3E 04        cuarcuad ld a,4
 367+ 94E4 32 DD 88     	ld (Cuad_objeto),a
 368+ 94E7 21 20 48     	ld hl,$4820
 369+ 94EA 22 01 89     	ld (Limite_horizontal),hl
 370+ 94ED 21 03 89     	ld hl,Limite_vertical
 371+ 94F0 36 0D        	ld (hl),$0d
 372+ 94F2 08           	ex af,af
 373+ 94F3 18 3C        	jr 1F
 374+ 94F5              tercuad
 375+ 94F5 3E 03        	ld a,3
 376+ 94F7 32 DD 88     	ld (Cuad_objeto),a
 377+ 94FA 21 20 48     	ld hl,$4820
 378+ 94FD 22 01 89     	ld (Limite_horizontal),hl
 379+ 9500 21 03 89     	ld hl,Limite_vertical
 380+ 9503 36 12        	ld (hl),$12
 381+ 9505 08           	ex af,af
 382+ 9506 18 29        	jr 1F
 383+ 9508 CD 3A 95     primit call column
 384+ 950B 38 13        	jr c, primcuad
 385+ 950D              segcuad
 386+ 950D 3E 02        	ld a,2
 387+ 950F 32 DD 88     	ld (Cuad_objeto),a
 388+ 9512 21 C0 4F     	ld hl,$4fc0
 389+ 9515 22 01 89     	ld (Limite_horizontal),hl
 390+ 9518 21 03 89     	ld hl,Limite_vertical
 391+ 951B 36 0D        	ld (hl),$0d
 392+ 951D 08           	ex af,af
 393+ 951E 18 11        	jr 1F
 394+ 9520              primcuad
 395+ 9520 3E 01        	ld a,1
 396+ 9522 32 DD 88     	ld (Cuad_objeto),a
 397+ 9525 21 C0 4F     	ld hl,$4fc0
 398+ 9528 22 01 89     	ld (Limite_horizontal),hl
 399+ 952B 21 03 89     	ld hl,Limite_vertical
 400+ 952E 36 12        	ld (hl),$12
 401+ 9530 08           	ex af,af
 402+ 9531 CD BA 9C     1 call Genera_coordenadas
 403+ 9534 21 F3 88     	ld hl,Ctrl_0
 404+ 9537 CB EE        	set 5,(hl)
 405+ 9539 C9           	ret
 406+ 953A
 407+ 953A              ; ------------------------------------------------------------------------------------------------------------------
 408+ 953A
 409+ 953A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 953A              ;
 411+ 953A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 953A
 413+ 953A 7D           column ld a,l
 414+ 953B E6 1F        	and $1f
 415+ 953D FE 10         	cp $10
 416+ 953F C9            	ret
 417+ 9540
 418+ 9540              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9540              ;
 420+ 9540              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9540              ;
 422+ 9540              ; 14/12/22
 423+ 9540              ;
 424+ 9540              ;	Modifica: A y BC.
 425+ 9540
 426+ 9540 3A DD 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9543 E6 01        	and 1
 428+ 9545 28 17        	jr z,1F
 429+ 9547
 430+ 9547              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9547
 432+ 9547 3A CF 88     	ld a,(Coordenada_X)
 433+ 954A 47           	ld b,a
 434+ 954B 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 954C 79           	ld a,c
 436+ 954D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 954E 38 08        	jr c,2F
 438+ 9550 47           	ld b,a
 439+ 9551 79           	ld a,c
 440+ 9552 90           	sub b
 441+ 9553 32 00 89     	ld (Columnas),a
 442+ 9556 18 1B        	jr 4F
 443+ 9558 79           2 ld a,c
 444+ 9559 32 00 89     	ld (Columnas),a
 445+ 955C 18 15        	jr 4F
 446+ 955E
 447+ 955E              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 955E
 449+ 955E 3A CF 88     1 ld a,(Coordenada_X)
 450+ 9561 81           	add c
 451+ 9562 3D           	dec a
 452+ 9563 D6 1F        	sub $1f
 453+ 9565 38 08        	jr c,3F
 454+ 9567 47           	ld b,a
 455+ 9568 79           	ld a,c
 456+ 9569 90           	sub b
 457+ 956A 32 00 89     	ld (Columnas),a
 458+ 956D 18 04        	jr 4F
 459+ 956F 79           3 ld a,c
 460+ 9570 32 00 89     	ld (Columnas),a
 461+ 9573 D9           4 exx
 462+ 9574 4F           	ld c,a
 463+ 9575 D9           	exx
 464+ 9576 C9            ret
 465+ 9577
 466+ 9577              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9577              ;
 468+ 9577              ;   19/7/23
 469+ 9577              ;
 470+ 9577              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9577              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9577              ;
 473+ 9577              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9577              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9577              ;
 476+ 9577              ;	DESTRUYE: HL,B Y A.
 477+ 9577
 478+ 9577 3A DD 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 957A FE 02        	cp 2
 480+ 957C 38 18        	jr c,1F
 481+ 957E 28 16        	jr z,1F
 482+ 9580 E6 01        	and 1
 483+ 9582 28 0D        	jr z,3F
 484+ 9584
 485+ 9584              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9584
 487+ 9584 CD CA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9587
 489+ 9587 7D           9 ld a,l
 490+ 9588 E6 1F        	and $1f
 491+ 958A 28 2A        	jr z,7F
 492+ 958C 2B           	dec hl
 493+ 958D 10 F8        	djnz 9B
 494+ 958F 18 25        	jr 7F
 495+ 9591
 496+ 9591              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9591
 498+ 9591 2A CB 88     3 ld hl,(Posicion_actual)
 499+ 9594 18 20        	jr 7F
 500+ 9596
 501+ 9596 28 14        1 jr z,2F
 502+ 9598
 503+ 9598              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9598
 505+ 9598 CD CA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 959B
 507+ 959B 7D           4 ld a,l
 508+ 959C E6 1F        	and $1f
 509+ 959E 28 03        	jr z,6F
 510+ 95A0 2B           	dec hl
 511+ 95A1 10 F8        	djnz 4B
 512+ 95A3 06 0F        6 ld b,15
 513+ 95A5 CD 2B 96     5 call PreviousScan
 514+ 95A8 10 FB        	djnz 5B
 515+ 95AA 18 0A        	jr 7F
 516+ 95AC
 517+ 95AC              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95AC
 519+ 95AC CD CA 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95AF 06 0F        	ld b,15
 521+ 95B1 CD 2B 96     8 call PreviousScan
 522+ 95B4 10 FB        	djnz 8B
 523+ 95B6
 524+ 95B6 E5           7 push hl
 525+ 95B7 DD E1        	pop ix
 526+ 95B9
 527+ 95B9 2A CD 88     	ld hl,(Puntero_objeto)
 528+ 95BC E5           	push hl
 529+ 95BD FD E1        	pop iy
 530+ 95BF
 531+ 95BF              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95BF
 533+ 95BF 3A F3 88     	ld a,(Ctrl_0)
 534+ 95C2 CB 77        	bit 6,a
 535+ 95C4 C8           	ret z
 536+ 95C5
 537+ 95C5              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95C5              ; _ entidad / Amadeus´.
 539+ 95C5
 540+ 95C5 DD 22 51 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95C9
 542+ 95C9 C9           	ret
 543+ 95CA
 544+ 95CA              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95CA              ;
 546+ 95CA              ;	2/1/23
 547+ 95CA              ;
 548+ 95CA              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95CA              ;
 550+ 95CA              ;	Tras esta rutina tenemos:
 551+ 95CA              ;
 552+ 95CA              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95CA              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95CA              ;
 555+ 95CA              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95CA
 557+ 95CA 2A CB 88     Operandos ld hl,(Posicion_actual)
 558+ 95CD 3A 00 89     	ld a,(Columnas)
 559+ 95D0 3D           	dec a
 560+ 95D1 20 01        	jr nz,1F
 561+ 95D3 3C           	inc a
 562+ 95D4 47           1 ld b,a
 563+ 95D5 C9           	ret
 564+ 95D6
 565+ 95D6              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95D6              ;
 567+ 95D6              ;	3/1/23
 568+ 95D6              ;
 569+ 95D6              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95D6              ;
 571+ 95D6              ;	Destruye: A,B,HL y DE.
 572+ 95D6
 573+ 95D6              Define_rutina_de_impresion
 574+ 95D6
 575+ 95D6 3A CA 88     	ld a,(Columns)
 576+ 95D9 47           	ld b,a
 577+ 95DA 3A 00 89     	ld a,(Columnas)
 578+ 95DD B8           	cp b
 579+ 95DE 20 0D        	jr nz,2f
 580+ 95E0
 581+ 95E0              ;	La entidad se imprime entera.
 582+ 95E0
 583+ 95E0 21 FF 96     	ld hl, Indice_entidades_completas
 584+ 95E3 E6 01        	and 1
 585+ 95E5 28 02        	jr z,1F
 586+ 95E7
 587+ 95E7 23           	inc hl
 588+ 95E8 23           	inc hl
 589+ 95E9
 590+ 95E9 CD 84 8C     1 call Extrae_address
 591+ 95EC C9           	ret		;	ret
 592+ 95ED
 593+ 95ED              ;	La entidad no se imprime entera en pantalla.
 594+ 95ED
 595+ 95ED 3A DD 88     2 ld a,(Cuad_objeto)
 596+ 95F0 E6 01        	and 1
 597+ 95F2 28 17        	jr z,3F
 598+ 95F4
 599+ 95F4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95F4
 601+ 95F4 21 03 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95F7 3A CA 88     4 ld a,(Columns)
 603+ 95FA E6 01        	and 1
 604+ 95FC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 95FE
 606+ 95FE 23           	inc hl
 607+ 95FF 23           	inc hl
 608+ 9600
 609+ 9600 3A 00 89     	ld a,(Columnas)
 610+ 9603 E6 01        	and 1
 611+ 9605 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9607
 613+ 9607 23           	inc hl
 614+ 9608 23           	inc hl
 615+ 9609
 616+ 9609 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 960B
 618+ 960B 21 09 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 960E 18 E7        	jr 4B
 620+ 9610
 621+ 9610              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9610              ;
 623+ 9610              ;	Prepara_draw
 624+ 9610              ;
 625+ 9610              ;	Es una rutina de carga.
 626+ 9610              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9610              ;
 628+ 9610              ;	FUNCIONAMIENTO:
 629+ 9610              ;
 630+ 9610              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9610              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9610              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9610              ;
 634+ 9610              ;	DESTRUYE:
 635+ 9610              ;
 636+ 9610              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9610
 638+ 9610 21 C9 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9613 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9614 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9615 4E           	ld c,(hl)
 642+ 9616 2A CB 88     	ld hl,(Posicion_actual)
 643+ 9619 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 961B C9           	ret
 645+ 961C
 646+ 961C              ;----------------------------------------------------------------------------------------------------------------
 647+ 961C              ;
 648+ 961C              ;	5/08/22
 649+ 961C              ;
 650+ 961C              ;   NextScan.
 651+ 961C              ;
 652+ 961C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 961C              ;
 654+ 961C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 961C              ;
 656+ 961C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 961C              ;
 658+ 961C              ;       DESTRUIDOS: AF y HL !!!
 659+ 961C              ;
 660+ 961C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 961C              ;
 662+ 961C
 663+ 961C 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 961D 7C               ld a,h
 665+ 961E E6 07            and 7
 666+ 9620 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9621
 668+ 9621 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9622 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9624 6F               ld l,a
 671+ 9625 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9626
 673+ 9626 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9627 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9629 67               ld h,a
 676+ 962A C9               ret
 677+ 962B
 678+ 962B              ;----------------------------------------------------------------------------------------------------------------
 679+ 962B              ;
 680+ 962B              ;	5/08/22
 681+ 962B              ;
 682+ 962B              ;   PreviousScan.
 683+ 962B              ;
 684+ 962B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 962B              ;
 686+ 962B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 962B              ;
 688+ 962B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 962B              ;
 690+ 962B              ;       DESTRUIDOS: AF y HL !!!
 691+ 962B              ;
 692+ 962B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 962B              ;
 694+ 962B
 695+ 962B 7C           PreviousScan ld a,h
 696+ 962C 25               dec h               ; Dec H.
 697+ 962D E6 07            and 7
 698+ 962F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9630
 700+ 9630 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9631 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9633 6F               ld l,a
 703+ 9634 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9635
 705+ 9635 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9636 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9638 67               ld h,a
 708+ 9639 C9               ret
 709+ 963A
 710+ 963A              ; -----------------------------------------------------------------------------------
 711+ 963A              ;
 712+ 963A              ;	31/7/23
 713+ 963A              ;
 714+ 963A              ;	Rutina principal de pintado de entidades.
 715+ 963A              ;	Extrae la foto del frame, (entidades).
 716+ 963A
 717+ 963A              Extrae_foto_entidades
 718+ 963A
 719+ 963A 21 01 70     	ld hl,Album_de_fotos+1
 720+ 963D 7E           	ld a,(hl)
 721+ 963E A7           	and a
 722+ 963F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9640
 724+ 9640              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9640
 726+ 9640 3A 12 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9643 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9644 C8           	ret z
 729+ 9645
 730+ 9645              ; -----------------------------------
 731+ 9645
 732+ 9645 ED 73 17 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9649 31 00 70     	ld sp,Album_de_fotos
 734+ 964C
 735+ 964C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 964E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 964F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9650
 739+ 9650 ED 73 19 89  	ld (Stack_2),sp
 740+ 9654 ED 7B 17 89  	ld sp,(Stack)
 741+ 9658
 742+ 9658              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9658
 744+ 9658 3E CD        	ld a,$cd
 745+ 965A 32 62 96     	ld (Imprime),a
 746+ 965D EB           	ex de,hl
 747+ 965E 22 63 96     	ld (Imprime+1),hl
 748+ 9661 EB           	ex de,hl
 749+ 9662
 750+ 9662              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9662
 752+ 9662 00 00 00     Imprime db 0,0,0
 753+ 9665
 754+ 9665 ED 73 17 89  	ld (Stack),sp
 755+ 9669
 756+ 9669 3A 12 89     	ld a,(Numero_de_malotes)
 757+ 966C 3D           	dec a
 758+ 966D 28 09        	jr z,1F
 759+ 966F 32 12 89      	ld (Numero_de_malotes),a
 760+ 9672
 761+ 9672 ED 7B 19 89  	ld sp,(Stack_2)
 762+ 9676 18 D4        	jr 2B
 763+ 9678
 764+ 9678 AF           1 xor a
 765+ 9679 32 19 89     	ld (Stack_2),a
 766+ 967C
 767+ 967C C9           	ret
 768+ 967D
 769+ 967D              ; -----------------------------------------------------------------------------------
 770+ 967D              ;
 771+ 967D              ;	28/2/23
 772+ 967D              ;
 773+ 967D              ;	Pinta los disparos generados.
 774+ 967D
 775+ 967D              Extrae_foto_disparos
 776+ 967D
 777+ 967D 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9680 7E               ld a,(hl)
 779+ 9681 A7               and a
 780+ 9682 C8               ret z
 781+ 9683
 782+ 9683 3A 41 89     	ld a,(Numero_de_disparotes)
 783+ 9686 A7           	and a
 784+ 9687 C8           	ret z
 785+ 9688 ED 73 17 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 968C 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 968F
 788+ 968F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9691 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9692 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9693
 792+ 9693 ED 73 19 89  	ld (Stack_2),sp
 793+ 9697 ED 7B 17 89  	ld sp,(Stack)
 794+ 969B
 795+ 969B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 969B
 797+ 969B 3E CD        	ld a,$cd
 798+ 969D 32 A5 96     	ld (Imprime2),a
 799+ 96A0 EB           	ex de,hl
 800+ 96A1 22 A6 96     	ld (Imprime2+1),hl
 801+ 96A4 EB           	ex de,hl
 802+ 96A5
 803+ 96A5              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96A5
 805+ 96A5 00 00 00     Imprime2 db 0,0,0
 806+ 96A8
 807+ 96A8 3A 41 89     	ld a,(Numero_de_disparotes)
 808+ 96AB 3D           	dec a
 809+ 96AC 28 09        	jr z,1F
 810+ 96AE 32 41 89      	ld (Numero_de_disparotes),a
 811+ 96B1
 812+ 96B1 ED 7B 19 89  	ld sp,(Stack_2)
 813+ 96B5 18 D8        	jr 2B
 814+ 96B7
 815+ 96B7 AF           1 xor a
 816+ 96B8 32 19 89     	ld (Stack_2),a
 817+ 96BB C9           	ret
 818+ 96BC
 819+ 96BC              ; -----------------------------------------------------------------------------------
 820+ 96BC              ;
 821+ 96BC              ;	4/9/23
 822+ 96BC              ;
 823+ 96BC              ;	Rutina principal de pintado de Amadeus.
 824+ 96BC              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96BC
 826+ 96BC 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96BF 7E           	ld a,(hl)
 828+ 96C0 A7           	and a
 829+ 96C1 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96C2
 831+ 96C2 3A 12 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96C5 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96C6 C8           	ret z
 834+ 96C7
 835+ 96C7              ; -----------------------------------
 836+ 96C7
 837+ 96C7 ED 73 17 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96CB 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96CE
 840+ 96CE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96D0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96D1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96D2
 844+ 96D2 ED 73 19 89  	ld (Stack_2),sp
 845+ 96D6 ED 7B 17 89  	ld sp,(Stack)
 846+ 96DA
 847+ 96DA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96DA
 849+ 96DA 3E CD        	ld a,$cd
 850+ 96DC 32 E4 96     	ld (Imprime_Amadeus),a
 851+ 96DF EB           	ex de,hl
 852+ 96E0 22 E5 96     	ld (Imprime_Amadeus+1),hl
 853+ 96E3 EB           	ex de,hl
 854+ 96E4
 855+ 96E4              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96E4
 857+ 96E4 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96E7
 859+ 96E7 ED 73 17 89  	ld (Stack),sp
 860+ 96EB
 861+ 96EB 3A 12 89     	ld a,(Numero_de_malotes)
 862+ 96EE 3D           	dec a
 863+ 96EF 28 09        	jr z,1F
 864+ 96F1 32 12 89      	ld (Numero_de_malotes),a
 865+ 96F4
 866+ 96F4 ED 7B 19 89  	ld sp,(Stack_2)
 867+ 96F8 18 D4        	jr 2B
 868+ 96FA
 869+ 96FA AF           1 xor a
 870+ 96FB 32 19 89     	ld (Stack_2),a
 871+ 96FE
 872+ 96FE C9           	ret
# file closed: Draw_XOR.asm
1652  96FF              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96FF              ;   índices de Rutinas de impresión.
   2+ 96FF
   3+ 96FF 0F 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9701 3C 97            defw Pinta_Amadeus_3x2
   5+ 9703
   6+ 9703 92 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9705 32 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9707 E6 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9709
  10+ 9709 BC 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 970B C0 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 970D 74 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 970F
  14+ 970F
  15+ 970F              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 970F              ;
  17+ 970F              ;   12/12/22
  18+ 970F              ;
  19+ 970F              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 970F              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 970F              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 970F              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 970F              ;
  24+ 970F              ;   Modifica: DE y HL.
  25+ 970F
  26+ 970F ED 73 17 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9713 FD F9        	ld sp,iy
  28+ 9715 06 10            ld b,16
  29+ 9717 D1           1 pop de
  30+ 9718 7B               ld a,e
  31+ 9719 AE               xor (hl)
  32+ 971A 77           	ld (hl),a
  33+ 971B 23           	inc hl
  34+ 971C 7A               ld a,d
  35+ 971D AE               xor (hl)
  36+ 971E 77           	ld (hl),a
  37+ 971F 2B           	dec hl
  38+ 9720 24           	inc h
  39+ 9721 7C               ld a,h
  40+ 9722 E6 07            and 7
  41+ 9724 20 0A            jr nz,2F
  42+ 9726 7D               ld a,l
  43+ 9727 C6 20            add a,$20
  44+ 9729 6F               ld l,a
  45+ 972A 38 04            jr c,2F
  46+ 972C 7C               ld a,h
  47+ 972D D6 08            sub 8
  48+ 972F 67               ld h,a
  49+ 9730 7C           2 ld a,h
  50+ 9731 FE 58            cp $58
  51+ 9733 28 02            jr z,3F
  52+ 9735 10 E0            djnz 1B
  53+ 9737 ED 7B 17 89  3 ld sp,(Stack)
  54+ 973B C9           	ret
  55+ 973C
  56+ 973C ED 73 17 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9740 FD F9        	ld sp,iy
  58+ 9742 06 08            ld b,8
  59+ 9744 D1           1 pop de
  60+ 9745 7B               ld a,e
  61+ 9746 AE               xor (hl)
  62+ 9747 77           	ld (hl),a
  63+ 9748 23           	inc hl
  64+ 9749 7A               ld a,d
  65+ 974A AE               xor (hl)
  66+ 974B 77           	ld (hl),a
  67+ 974C 23           	inc hl
  68+ 974D D1           	pop de
  69+ 974E 7B               ld a,e
  70+ 974F AE               xor (hl)
  71+ 9750 77           	ld (hl),a
  72+ 9751 2B           	dec hl
  73+ 9752 2B           	dec hl
  74+ 9753 24           	inc h
  75+ 9754 7C               ld a,h
  76+ 9755 E6 07            and 7
  77+ 9757 20 0A            jr nz,2F
  78+ 9759 7D               ld a,l
  79+ 975A C6 20            add a,$20
  80+ 975C 6F               ld l,a
  81+ 975D 38 04            jr c,2F
  82+ 975F 7C               ld a,h
  83+ 9760 D6 08            sub 8
  84+ 9762 67               ld h,a
  85+ 9763 7C           2 ld a,h
  86+ 9764 FE 58            cp $58
  87+ 9766 28 25            jr z,4F
  88+ 9768 7A               ld a,d
  89+ 9769 AE               xor (hl)
  90+ 976A 77               ld (hl),a
  91+ 976B D1           	pop de
  92+ 976C 23           	inc hl
  93+ 976D 7B               ld a,e
  94+ 976E AE               xor (hl)
  95+ 976F 77           	ld (hl),a
  96+ 9770 23           	inc hl
  97+ 9771 7A               ld a,d
  98+ 9772 AE               xor (hl)
  99+ 9773 77           	ld (hl),a
 100+ 9774 2B           	dec hl
 101+ 9775 2B           	dec hl
 102+ 9776 24           	inc h
 103+ 9777 7C               ld a,h
 104+ 9778 E6 07            and 7
 105+ 977A 20 0A            jr nz,3F
 106+ 977C 7D               ld a,l
 107+ 977D C6 20            add a,$20
 108+ 977F 6F               ld l,a
 109+ 9780 38 04            jr c,3F
 110+ 9782 7C               ld a,h
 111+ 9783 D6 08            sub 8
 112+ 9785 67               ld h,a
 113+ 9786 7C           3 ld a,h
 114+ 9787 FE 58            cp $58
 115+ 9789 28 02            jr z,4F
 116+ 978B 10 B7            djnz 1B
 117+ 978D ED 7B 17 89  4 ld sp,(Stack)
 118+ 9791 C9           	ret
 119+ 9792
 120+ 9792              ; ---------------------------------------------------
 121+ 9792
 122+ 9792 ED 73 17 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9796 FD F9        	ld sp,iy
 124+ 9798
 125+ 9798              ; >>>
 126+ 9798
 127+ 9798 06 10            ld b,16
 128+ 979A D1           1 pop de
 129+ 979B 7A           	ld a,d
 130+ 979C AE           	xor (hl)
 131+ 979D 77           	ld (hl),a
 132+ 979E 24           	inc h
 133+ 979F 7C               ld a,h
 134+ 97A0 E6 07            and 7
 135+ 97A2 20 0C            jr nz,2F
 136+ 97A4 7D               ld a,l
 137+ 97A5 C6 20            add a,$20
 138+ 97A7 6F               ld l,a
 139+ 97A8 38 06            jr c,2F
 140+ 97AA 7C               ld a,h
 141+ 97AB D6 08            sub 8
 142+ 97AD 67               ld h,a
 143+ 97AE 18 00            jr 2F
 144+ 97B0 7C           2 ld a,h
 145+ 97B1 FE 58            cp $58
 146+ 97B3 28 02            jr z,3F
 147+ 97B5 10 E3            djnz 1B
 148+ 97B7 ED 7B 17 89  3 ld sp,(Stack)
 149+ 97BB C9           	ret
 150+ 97BC
 151+ 97BC ED 73 17 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97C0 FD F9        	ld sp,iy
 153+ 97C2
 154+ 97C2              ; >>>
 155+ 97C2
 156+ 97C2 06 10            ld b,16
 157+ 97C4 D1           1 pop de
 158+ 97C5 7B           	ld a,e
 159+ 97C6 AE           	xor (hl)
 160+ 97C7 77           	ld (hl),a
 161+ 97C8 24           	inc h
 162+ 97C9 7C               ld a,h
 163+ 97CA E6 07            and 7
 164+ 97CC 20 0C            jr nz,2F
 165+ 97CE 7D               ld a,l
 166+ 97CF C6 20            add a,$20
 167+ 97D1 6F               ld l,a
 168+ 97D2 38 06            jr c,2F
 169+ 97D4 7C               ld a,h
 170+ 97D5 D6 08            sub 8
 171+ 97D7 67               ld h,a
 172+ 97D8 18 00            jr 2F
 173+ 97DA 7C           2 ld a,h
 174+ 97DB FE 58            cp $58
 175+ 97DD 28 02            jr z,3F
 176+ 97DF 10 E3            djnz 1B
 177+ 97E1 ED 7B 17 89  3 ld sp,(Stack)
 178+ 97E5 C9           	ret
 179+ 97E6
 180+ 97E6              ; ---------------------------------------------------
 181+ 97E6
 182+ 97E6 ED 73 17 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97EA FD F9        	ld sp,iy
 184+ 97EC 06 08            ld b,8
 185+ 97EE D1           1 pop de
 186+ 97EF 7A           	ld a,d
 187+ 97F0 AE           	xor (hl)
 188+ 97F1 77           	ld (hl),a
 189+ 97F2 23           	inc hl
 190+ 97F3 D1           	pop de
 191+ 97F4 7B           	ld a,e
 192+ 97F5 AE           	xor (hl)
 193+ 97F6 77           	ld (hl),a
 194+ 97F7 2B           	dec hl
 195+ 97F8 24            	inc h
 196+ 97F9 7C               ld a,h
 197+ 97FA E6 07            and 7
 198+ 97FC 20 0A            jr nz,2F
 199+ 97FE 7D               ld a,l
 200+ 97FF C6 20            add a,$20
 201+ 9801 6F               ld l,a
 202+ 9802 38 04            jr c,2F
 203+ 9804 7C               ld a,h
 204+ 9805 D6 08            sub 8
 205+ 9807 67               ld h,a
 206+ 9808 7C           2 ld a,h
 207+ 9809 FE 58            cp $58
 208+ 980B 28 20            jr z,4F
 209+ 980D D1               pop de
 210+ 980E 7B           	ld a,e
 211+ 980F AE           	xor (hl)
 212+ 9810 77           	ld (hl),a
 213+ 9811 23           	inc hl
 214+ 9812 7A           	ld a,d
 215+ 9813 AE           	xor (hl)
 216+ 9814 77           	ld (hl),a
 217+ 9815 2B           	dec hl
 218+ 9816 24           	inc h
 219+ 9817 7C               ld a,h
 220+ 9818 E6 07            and 7
 221+ 981A 20 0A            jr nz,3F
 222+ 981C 7D               ld a,l
 223+ 981D C6 20            add a,$20
 224+ 981F 6F               ld l,a
 225+ 9820 38 04            jr c,3F
 226+ 9822 7C               ld a,h
 227+ 9823 D6 08            sub 8
 228+ 9825 67               ld h,a
 229+ 9826 7C           3 ld a,h
 230+ 9827 FE 58            cp $58
 231+ 9829 28 02            jr z,4F
 232+ 982B 10 C1            djnz 1B
 233+ 982D ED 7B 17 89  4 ld sp,(Stack)
 234+ 9831 C9           	ret
 235+ 9832
 236+ 9832 ED 73 17 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9836 FD F9        	ld sp,iy
 238+ 9838 06 08            ld b,8
 239+ 983A D1           1 pop de
 240+ 983B D1           	pop de
 241+ 983C 7B           	ld a,e
 242+ 983D AE           	xor (hl)
 243+ 983E 77           	ld (hl),a
 244+ 983F 24            	inc h
 245+ 9840 7C               ld a,h
 246+ 9841 E6 07            and 7
 247+ 9843 20 0A            jr nz,2F
 248+ 9845 7D               ld a,l
 249+ 9846 C6 20            add a,$20
 250+ 9848 6F               ld l,a
 251+ 9849 38 04            jr c,2F
 252+ 984B 7C               ld a,h
 253+ 984C D6 08            sub 8
 254+ 984E 67               ld h,a
 255+ 984F 7C           2 ld a,h
 256+ 9850 FE 58            cp $58
 257+ 9852 28 1B            jr z,4F
 258+ 9854 D1               pop de
 259+ 9855 7A           	ld a,d
 260+ 9856 AE           	xor (hl)
 261+ 9857 77           	ld (hl),a
 262+ 9858 24           	inc h
 263+ 9859 7C               ld a,h
 264+ 985A E6 07            and 7
 265+ 985C 20 0A            jr nz,3F
 266+ 985E 7D               ld a,l
 267+ 985F C6 20            add a,$20
 268+ 9861 6F               ld l,a
 269+ 9862 38 04            jr c,3F
 270+ 9864 7C               ld a,h
 271+ 9865 D6 08            sub 8
 272+ 9867 67               ld h,a
 273+ 9868 7C           3 ld a,h
 274+ 9869 FE 58            cp $58
 275+ 986B 28 02            jr z,4F
 276+ 986D 10 CB            djnz 1B
 277+ 986F ED 7B 17 89  4 ld sp,(Stack)
 278+ 9873 C9           	ret
 279+ 9874
 280+ 9874 ED 73 17 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9878 FD F9        	ld sp,iy
 282+ 987A 06 08            ld b,8
 283+ 987C D1           1 pop de
 284+ 987D 7B           	ld a,e
 285+ 987E AE           	xor (hl)
 286+ 987F 77           	ld (hl),a
 287+ 9880 23           	inc hl
 288+ 9881 7A           	ld a,d
 289+ 9882 AE           	xor (hl)
 290+ 9883 77           	ld (hl),a
 291+ 9884 2B           	dec hl
 292+ 9885 24             	inc h
 293+ 9886 7C               ld a,h
 294+ 9887 E6 07            and 7
 295+ 9889 20 0A            jr nz,2F
 296+ 988B 7D               ld a,l
 297+ 988C C6 20            add a,$20
 298+ 988E 6F               ld l,a
 299+ 988F 38 04            jr c,2F
 300+ 9891 7C               ld a,h
 301+ 9892 D6 08            sub 8
 302+ 9894 67               ld h,a
 303+ 9895 7C           2 ld a,h
 304+ 9896 FE 58            cp $58
 305+ 9898 28 21            jr z,4F
 306+ 989A D1               pop de
 307+ 989B 7A           	ld a,d
 308+ 989C AE           	xor (hl)
 309+ 989D 77           	ld (hl),a
 310+ 989E 23           	inc hl
 311+ 989F D1               pop de
 312+ 98A0 7B           	ld a,e
 313+ 98A1 AE           	xor (hl)
 314+ 98A2 77           	ld (hl),a
 315+ 98A3 2B           	dec hl
 316+ 98A4 24           	inc h
 317+ 98A5 7C               ld a,h
 318+ 98A6 E6 07            and 7
 319+ 98A8 20 0A            jr nz,3F
 320+ 98AA 7D               ld a,l
 321+ 98AB C6 20            add a,$20
 322+ 98AD 6F               ld l,a
 323+ 98AE 38 04            jr c,3F
 324+ 98B0 7C               ld a,h
 325+ 98B1 D6 08            sub 8
 326+ 98B3 67               ld h,a
 327+ 98B4 7C           3 ld a,h
 328+ 98B5 FE 58            cp $58
 329+ 98B7 28 02            jr z,4F
 330+ 98B9 10 C1            djnz 1B
 331+ 98BB ED 7B 17 89  4 ld sp,(Stack)
 332+ 98BF C9           	ret
 333+ 98C0
 334+ 98C0 ED 73 17 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98C4 FD F9        	ld sp,iy
 336+ 98C6 06 08            ld b,8
 337+ 98C8 D1           1 pop de
 338+ 98C9 7B           	ld a,e
 339+ 98CA AE           	xor (hl)
 340+ 98CB 77           	ld (hl),a
 341+ 98CC 24            	inc h
 342+ 98CD 7C               ld a,h
 343+ 98CE E6 07            and 7
 344+ 98D0 20 0A            jr nz,2F
 345+ 98D2 7D               ld a,l
 346+ 98D3 C6 20            add a,$20
 347+ 98D5 6F               ld l,a
 348+ 98D6 38 04            jr c,2F
 349+ 98D8 7C               ld a,h
 350+ 98D9 D6 08            sub 8
 351+ 98DB 67               ld h,a
 352+ 98DC 7C           2 ld a,h
 353+ 98DD FE 58            cp $58
 354+ 98DF 28 1C            jr z,4F
 355+ 98E1 D1               pop de
 356+ 98E2 7A           	ld a,d
 357+ 98E3 AE           	xor (hl)
 358+ 98E4 77           	ld (hl),a
 359+ 98E5 24           	inc h
 360+ 98E6 7C               ld a,h
 361+ 98E7 E6 07            and 7
 362+ 98E9 20 0A            jr nz,3F
 363+ 98EB 7D               ld a,l
 364+ 98EC C6 20            add a,$20
 365+ 98EE 6F               ld l,a
 366+ 98EF 38 04            jr c,3F
 367+ 98F1 7C               ld a,h
 368+ 98F2 D6 08            sub 8
 369+ 98F4 67               ld h,a
 370+ 98F5 7C           3 ld a,h
 371+ 98F6 FE 58            cp $58
 372+ 98F8 28 03            jr z,4F
 373+ 98FA D1               pop de
 374+ 98FB 10 CB            djnz 1B
 375+ 98FD ED 7B 17 89  4 ld sp,(Stack)
 376+ 9901 C9           	ret
 377+ 9902
 378+ 9902              ; ---------------------------------------------------
 379+ 9902              ;
 380+ 9902              ;   27/02/23
 381+ 9902              ;
 382+ 9902              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9902              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9902              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9902
 386+ 9902 ED 73 17 89  Pinta_Disparo ld (Stack),sp
 387+ 9906 FD F9            ld sp,iy
 388+ 9908 06 03            ld b,3
 389+ 990A D1           1 pop de
 390+ 990B 7B               ld a,e
 391+ 990C AE               xor (hl)
 392+ 990D 77               ld (hl),a
 393+ 990E 23               inc hl
 394+ 990F 7A               ld a,d
 395+ 9910 AE               xor (hl)
 396+ 9911 77               ld (hl),a
 397+ 9912 2B               dec hl
 398+ 9913
 399+ 9913 24               inc h
 400+ 9914 7C               ld a,h
 401+ 9915 E6 07            and 7
 402+ 9917 20 0A            jr nz,2F
 403+ 9919 7D               ld a,l
 404+ 991A C6 20            add a,$20
 405+ 991C 6F               ld l,a
 406+ 991D 38 04            jr c,2F
 407+ 991F 7C               ld a,h
 408+ 9920 D6 08            sub 8
 409+ 9922 67               ld h,a
 410+ 9923 7C           2 ld a,h
 411+ 9924 FE 58            cp $58
 412+ 9926 28 02            jr z,3F
 413+ 9928
 414+ 9928 10 E0            djnz 1B
 415+ 992A ED 7B 17 89  3 ld sp,(Stack)
 416+ 992E C9               ret
 417+ 992F
# file closed: Rutinas_de_impresion_sprites.asm
1653  992F              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 992F              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 992F              ;
   3+ 992F              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 992F              ;
   5+ 992F              ; *****************************************************************************************************************************************************************************************
   6+ 992F              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 992F
   8+ 992F 7C           calcula_tercio ld a,h
   9+ 9930 E6 18        	and $18
  10+ 9932 CB 2F        	sra a
  11+ 9934 CB 2F        	sra a
  12+ 9936 CB 2F        	sra a
  13+ 9938 C9           	ret
  14+ 9939
# file closed: calcula_tercio.asm
1654  9939              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9939              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9939              ;
   3+ 9939              ;
   4+ 9939              ;	CLS.
   5+ 9939              ;
   6+ 9939              ;	Limpia la pantalla y define sus atributos.
   7+ 9939              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9939              ;
   9+ 9939              ;	COLORES: 0 ..... NEGRO
  10+ 9939              ;    		 1 ..... AZUL
  11+ 9939              ; 			 2 ..... ROJO
  12+ 9939              ;			 3 ..... MAGENTA
  13+ 9939              ; 			 4 ..... VERDE
  14+ 9939              ; 			 5 ..... CIAN
  15+ 9939              ;			 6 ..... AMARILLO
  16+ 9939              ; 			 7 ..... BLANCO
  17+ 9939              ;
  18+ 9939              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9939              ;
  20+ 9939              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9939
  22+ 9939
  23+ 9939 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 993C 11 01 40     	LD DE,$4001
  25+ 993F 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9942 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9944 ED B0        	LDIR
  28+ 9946 01 FF 02     	LD BC,767
  29+ 9949 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 994A ED B0        	LDIR
  31+ 994C C9           	ret
  32+ 994D
# file closed: Cls.asm
1655  994D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 994D              ; ******************************************************************************************************************************************************************************************
   2+ 994D              ;
   3+ 994D              ;   20/05/23
   4+ 994D              ;
   5+ 994D              ;	Recompone_posicion_inicio
   6+ 994D              ;
   7+ 994D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 994D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 994D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 994D              ;	_ a una u otra rutina.
  11+ 994D
  12+ 994D              Recompone_posicion_inicio
  13+ 994D
  14+ 994D 2A DB 88     	ld hl,(Posicion_inicio)
  15+ 9950 7D           	ld a,l
  16+ 9951 E6 1F        	and $1f
  17+ 9953 28 16        	jr z,1F
  18+ 9955
  19+ 9955 FE 1F        	cp $1f
  20+ 9957 28 0D        	jr z,3F
  21+ 9959
  22+ 9959 21 04 89     	ld hl,Ctrl_2
  23+ 995C CB C6        	set 0,(hl)
  24+ 995E 2A CD 88     	ld hl,(Puntero_objeto)
  25+ 9961 22 07 89     	ld (Repone_puntero_objeto),hl
  26+ 9964 18 08        	jr 2F
  27+ 9966
  28+ 9966 CD 07 9B     3 call Mov_left
  29+ 9969 18 03        	jr 2F
  30+ 996B
  31+ 996B CD E9 99     1 call Mov_right
  32+ 996E 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9971 22 CD 88     	ld (Puntero_objeto),hl
  34+ 9974 C9           	ret
  35+ 9975
  36+ 9975              ; ******************************************************************************************************************************************************************************************
  37+ 9975              ;
  38+ 9975              ;   27/05/23
  39+ 9975              ;
  40+ 9975              ;	Mov_down
  41+ 9975              ;
  42+ 9975              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9975              ;
  44+ 9975              ;
  45+ 9975              Mov_down
  46+ 9975
  47+ 9975 CD D7 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9978              ;																	; _ repone (Puntero_objeto).
  49+ 9978 21 F3 88     	ld hl,Ctrl_0
  50+ 997B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 997D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 997D              ; 																	; _ en el caso de que no lo haya.
  53+ 997D 3A E1 88     	ld a,(Vel_down)
  54+ 9980 47           	ld b,a
  55+ 9981 2A CB 88         ld hl,(Posicion_actual)
  56+ 9984 CD 2F 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9987 E6 02        	and 2
  58+ 9989 28 0F        	jr z,1F
  59+ 998B
  60+ 998B              ; Nos encontramos en el último tercio de pantalla.
  61+ 998B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 998B
  63+ 998B 7C           	ld a,h
  64+ 998C FE 57        	cp $57
  65+ 998E 20 0A        	jr nz,1F
  66+ 9990
  67+ 9990 7D           	ld a,l
  68+ 9991 C6 20        	add $20
  69+ 9993 30 05        	jr nc,1F
  70+ 9995
  71+ 9995              ; ------------------------------
  72+ 9995              ;	call Reaparece_arriba
  73+ 9995 CD 94 9C     	call Reinicio
  74+ 9998              ; ------------------------------
  75+ 9998
  76+ 9998 18 08        	jr 3F
  77+ 999A CD 1C 96     1 call NextScan
  78+ 999D 22 CB 88     	ld (Posicion_actual),hl
  79+ 99A0 10 E2            djnz 2B
  80+ 99A2 CD BA 9C     3 call Genera_coordenadas
  81+ 99A5 C9           	ret
  82+ 99A6
  83+ 99A6              ; ******************************************************************************************************************************************************************************************
  84+ 99A6              ;
  85+ 99A6              ;   27/05/23
  86+ 99A6              ;
  87+ 99A6              ;	Mov_up
  88+ 99A6              ;
  89+ 99A6              ; 	Mueve el Sprite hacia arriba.
  90+ 99A6              ;
  91+ 99A6              ;
  92+ 99A6              Mov_up
  93+ 99A6
  94+ 99A6 CD D7 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99A9              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99A9 21 F3 88     	ld hl,Ctrl_0
  97+ 99AC CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99AE              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99AE              ; 																		; _ en el caso de que no lo haya.
 100+ 99AE 3A E0 88     	ld a,(Vel_up)
 101+ 99B1 47           	ld b,a
 102+ 99B2 2A CB 88     	ld hl,(Posicion_actual)
 103+ 99B5 CD 2F 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99B8 A7           	and a
 105+ 99B9 20 10        	jr nz,1F
 106+ 99BB
 107+ 99BB              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99BB              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99BB
 110+ 99BB 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99BC FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99BE 20 0B            jr nz,1F
 113+ 99C0 7D               ld a,l
 114+ 99C1 D6 20            sub $20
 115+ 99C3 30 06            jr nc,1F
 116+ 99C5 25               dec h
 117+ 99C6
 118+ 99C6              ; -----------------------------
 119+ 99C6 CD 75 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99C9              ;	call Reinicio
 121+ 99C9              ; -----------------------------
 122+ 99C9
 123+ 99C9 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99CB CD 2B 96     1 call PreviousScan
 125+ 99CE 22 CB 88     	ld (Posicion_actual),hl
 126+ 99D1 10 E2            djnz 3B
 127+ 99D3 CD BA 9C     2 call Genera_coordenadas
 128+ 99D6 C9           	ret
 129+ 99D7
 130+ 99D7              ; -----------------------------
 131+ 99D7              ;
 132+ 99D7              ;	27/5/23
 133+ 99D7              ;
 134+ 99D7              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99D7              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99D7              ;
 137+ 99D7              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99D7              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99D7              ;
 140+ 99D7              ;	Modifica: A y (Puntero_objeto).
 141+ 99D7
 142+ 99D7 3A 04 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99DA CB 47        	bit 0,a
 144+ 99DC C8           	ret z
 145+ 99DD CB 87        	res 0,a
 146+ 99DF 32 04 89     	ld (Ctrl_2),a
 147+ 99E2 2A 07 89     	ld hl,(Repone_puntero_objeto)
 148+ 99E5 22 CD 88     	ld (Puntero_objeto),hl
 149+ 99E8 C9           	ret
 150+ 99E9
 151+ 99E9              ; ******************************************************************************************************************************************************************************************
 152+ 99E9              ;
 153+ 99E9              ;	19/10/22
 154+ 99E9              ;
 155+ 99E9              ;	Mov_right.
 156+ 99E9              ;
 157+ 99E9              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99E9              ;
 159+ 99E9
 160+ 99E9 21 F3 88     Mov_right ld hl,Ctrl_0
 161+ 99EC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99EE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99EE              ; 																	; _ en el caso de que no lo haya.
 164+ 99EE 3A F3 88     	ld a,(Ctrl_0)
 165+ 99F1 CB 77        	bit 6,a
 166+ 99F3 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99F5
 168+ 99F5 CD 23 9C     	call Stop_Amadeus_right
 169+ 99F8 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99F9 18 4D        	jr 8F
 171+ 99FB
 172+ 99FB 3A CF 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99FE FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A00 20 46        	jr nz,8F
 175+ 9A02
 176+ 9A02 3A D1 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A05 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A06 28 40        	jr z,8F
 179+ 9A08
 180+ 9A08              ; ---------- ---------- ----------
 181+ 9A08              ;
 182+ 9A08              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A08
 184+ 9A08 3A DF 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A0B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A0D 28 11        	jr z,1F
 187+ 9A0F 38 06        	jr c,6F
 188+ 9A11 FE 04        	cp 4
 189+ 9A13 28 14        	jr z,7F
 190+ 9A15 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A17
 192+ 9A17              ; ---------- ---------- ----------
 193+ 9A17              ;
 194+ 9A17              ; Perfiles de velocidad
 195+ 9A17              ;
 196+ 9A17
 197+ 9A17 3A D1 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A1A FE FE        	cp $fe
 199+ 9A1C 20 2A        	jr nz,8F
 200+ 9A1E 18 10        	jr 3F
 201+ 9A20 3A D1 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A23 FE FD        	cp $fd
 203+ 9A25 20 21        	jr nz,8F
 204+ 9A27 18 07        	jr 3F
 205+ 9A29 3A D1 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A2C FE FB        	cp $fb
 207+ 9A2E 20 18        	jr nz,8F
 208+ 9A30
 209+ 9A30              ; ---------- ---------- ----------
 210+ 9A30
 211+ 9A30              3
 212+ 9A30 CD 63 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A33              ;	call Reinicio
 214+ 9A33
 215+ 9A33              ; ---------- ---------- ----------
 216+ 9A33              ;
 217+ 9A33              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A33
 219+ 9A33 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A35 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A36 CD 4F 9A     	call DESPLZ_DER
 222+ 9A39 C1           	pop bc
 223+ 9A3A 10 F9        	djnz 5B
 224+ 9A3C 2A CB 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A3F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A40 22 CB 88     	ld (Posicion_actual),hl
 227+ 9A43 CD BA 9C     	call Genera_coordenadas
 228+ 9A46 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A48
 230+ 9A48              ; ---------- ---------- ----------
 231+ 9A48
 232+ 9A48 2A CB 88     8 ld hl,(Posicion_actual)
 233+ 9A4B CD 4F 9A     	call DESPLZ_DER
 234+ 9A4E C9           2 ret
 235+ 9A4F
 236+ 9A4F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A4F              ;
 238+ 9A4F              ;	22/9/22
 239+ 9A4F              ;
 240+ 9A4F
 241+ 9A4F CD 5E 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A52 CD AA 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A55 CD D3 9A         call Ciclo_completo
 244+ 9A58 21 F3 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A5B CB FE        	set 7,(hl)
 246+ 9A5D C9           	ret
 247+ 9A5E
 248+ 9A5E              ; ******************************************************************************************************************************************************************************************
 249+ 9A5E              ;	15/02/23
 250+ 9A5E              ;
 251+ 9A5E
 252+ 9A5E 3A DF 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A61 47           	ld b,a
 254+ 9A62 2A D7 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A65 23           1 inc hl
 256+ 9A66 23           	inc hl
 257+ 9A67 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A69 22 D7 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A6C CD 84 8C     	call Extrae_address
 260+ 9A6F 22 CD 88     	ld (Puntero_objeto),hl
 261+ 9A72
 262+ 9A72              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A72
 264+ 9A72              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A72              ; Cuántos movimientos hemos hecho ??
 266+ 9A72              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A72
 268+ 9A72 2A D3 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A75 EB           	ex de,hl
 270+ 9A76 A7           	and a
 271+ 9A77 ED 52        	sbc hl,de
 272+ 9A79 CB 3D        	srl l
 273+ 9A7B 3E 08        6 ld a,8
 274+ 9A7D 95           	sub l
 275+ 9A7E 30 1E        	jr nc,3F
 276+ 9A80
 277+ 9A80              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A80              ; B="0".
 279+ 9A80
 280+ 9A80 04           4 inc b
 281+ 9A81 3C           	inc a
 282+ 9A82 20 FC        	jr nz,4B
 283+ 9A84 78           	ld a,b
 284+ 9A85 08           	ex af,af
 285+ 9A86 2A D3 88     	ld hl,(Indice_Sprite_der)
 286+ 9A89 23           5 inc hl
 287+ 9A8A 23           	inc hl
 288+ 9A8B 10 FC        	djnz 5B
 289+ 9A8D 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A90 CD 84 8C     	call Extrae_address
 291+ 9A93 22 CD 88     	ld (Puntero_objeto),hl
 292+ 9A96
 293+ 9A96              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A96              ; _(Posicion_actual).
 295+ 9A96
 296+ 9A96 21 CB 88     	ld hl,Posicion_actual
 297+ 9A99 34           	inc (hl)
 298+ 9A9A 08               ex af,af
 299+ 9A9B 6F           	ld l,a
 300+ 9A9C 18 DD        	jr 6B
 301+ 9A9E
 302+ 9A9E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A9E
 304+ 9A9E 47           3 ld b,a
 305+ 9A9F 2A D5 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AA2 23           2 inc hl
 307+ 9AA3 23           	inc hl
 308+ 9AA4 10 FC        	djnz 2B
 309+ 9AA6 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AA9 C9           8 ret
 311+ 9AAA
 312+ 9AAA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AAA              ;
 314+ 9AAA              ;	24/7/22
 315+ 9AAA              ;
 316+ 9AAA              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AAA              ;
 318+ 9AAA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AAA              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AAA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AAA
 322+ 9AAA 3A D1 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AAD A7           	and a
 324+ 9AAE 20 1F        	jr nz,1F
 325+ 9AB0 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AB2 32 D1 88         ld (CTRL_DESPLZ),a
 327+ 9AB5
 328+ 9AB5 21 CA 88     	ld hl,Columns
 329+ 9AB8 34           	inc (hl)
 330+ 9AB9 3A DD 88     	ld a,(Cuad_objeto)
 331+ 9ABC E6 01        	and 1
 332+ 9ABE 28 0F        	jr z,1F
 333+ 9AC0 2A CB 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AC3 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AC4 22 CB 88     	ld (Posicion_actual),hl
 336+ 9AC7 CD BA 9C     	call Genera_coordenadas
 337+ 9ACA CD 2F 9C     	call Inc_CTRL_DESPLZ
 338+ 9ACD 18 03        	jr 2F
 339+ 9ACF CD 2F 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AD2 C9           2 ret
 341+ 9AD3
 342+ 9AD3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AD3              ;
 344+ 9AD3              ;	24/7/22
 345+ 9AD3              ;
 346+ 9AD3              ;	Ciclo_completo.
 347+ 9AD3              ;
 348+ 9AD3              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AD3              ;
 350+ 9AD3              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AD3              ; 	Decrementamos (Columns).
 352+ 9AD3              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AD3              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AD3
 355+ 9AD3
 356+ 9AD3 3A D1 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AD6 FE FF        	cp $ff
 358+ 9AD8 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9ADA E6 F0        	and $f0
 360+ 9ADC 20 28        	jr nz,3F
 361+ 9ADE
 362+ 9ADE              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9ADE
 364+ 9ADE 3A D1 88     	ld a,(CTRL_DESPLZ)
 365+ 9AE1 47           	ld b,a
 366+ 9AE2 3E F8        	ld a,$f8
 367+ 9AE4 80           	add b
 368+ 9AE5 32 D1 88     	ld (CTRL_DESPLZ),a
 369+ 9AE8 18 1C        	jr 3F
 370+ 9AEA 21 CA 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AED 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AEE AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AEF 32 D1 88     	ld (CTRL_DESPLZ),a
 374+ 9AF2 3A DD 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AF5 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AF7 20 0A        	jr nz,2F
 377+ 9AF9 2A CB 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AFC 23           	inc hl
 379+ 9AFD 22 CB 88     	ld (Posicion_actual),hl
 380+ 9B00 CD BA 9C     	call Genera_coordenadas
 381+ 9B03
 382+ 9B03              ; Inicia el puntero de Sprite.
 383+ 9B03
 384+ 9B03 CD 9B 8C     2 call Inicia_puntero_objeto_der
 385+ 9B06 C9           3 ret
 386+ 9B07
 387+ 9B07              ; ******************************************************************************************************************************************************************************************
 388+ 9B07              ;
 389+ 9B07              ;	15/02/23
 390+ 9B07              ;
 391+ 9B07              ;	Mov_left.
 392+ 9B07              ;
 393+ 9B07              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B07              ;
 395+ 9B07              Mov_left
 396+ 9B07
 397+ 9B07 21 F3 88     	ld hl,Ctrl_0
 398+ 9B0A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B0C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B0C              ; 																	; _ en el caso de que no lo haya.
 401+ 9B0C 3A F3 88     	ld a,(Ctrl_0)
 402+ 9B0F CB 77        	bit 6,a
 403+ 9B11 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B13
 405+ 9B13 CD 29 9C     	call Stop_Amadeus_left
 406+ 9B16 C8           	ret z
 407+ 9B17 20 4A        	jr nz,8F
 408+ 9B19
 409+ 9B19 3A CF 88     11 ld a,(Coordenada_X)
 410+ 9B1C A7           	and a
 411+ 9B1D 20 44        	jr nz,8F
 412+ 9B1F
 413+ 9B1F 3A D1 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B22 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B23 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B25
 417+ 9B25              ; ---------- ---------- ----------
 418+ 9B25
 419+ 9B25 3A DE 88     	ld a,(Vel_left)
 420+ 9B28 FE 02        	cp 2
 421+ 9B2A 28 0F        	jr z,1F
 422+ 9B2C 38 04        	jr c,6F
 423+ 9B2E FE 04        	cp 4
 424+ 9B30 28 12        	jr z,7F
 425+ 9B32
 426+ 9B32              ; ---------- ---------- ----------
 427+ 9B32
 428+ 9B32 3A D1 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B35 FE F8        	cp $f8
 430+ 9B37 20 2A        	jr nz,8F
 431+ 9B39 18 10        	jr 4F
 432+ 9B3B 3A D1 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B3E FE F9        	cp $f9
 434+ 9B40 20 21        	jr nz,8F
 435+ 9B42 18 07        	jr 4F
 436+ 9B44 3A D1 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B47 FE FB        	cp $fb
 438+ 9B49 20 18        	jr nz,8F
 439+ 9B4B
 440+ 9B4B              ; ---------- ---------- ----------
 441+ 9B4B
 442+ 9B4B              4
 443+ 9B4B CD 51 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B4E              ;	call Reinicio
 445+ 9B4E
 446+ 9B4E              ; ---------- ---------- ----------
 447+ 9B4E
 448+ 9B4E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B50 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B51
 451+ 9B51              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B51              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B51
 454+ 9B51 CD 6A 9B     	call DESPLZ_IZQ
 455+ 9B54 C1           	pop bc
 456+ 9B55 10 F9        	djnz 5B
 457+ 9B57 2A CB 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B5A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B5B 22 CB 88     	ld (Posicion_actual),hl
 460+ 9B5E CD BA 9C     	call Genera_coordenadas
 461+ 9B61 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B63
 463+ 9B63              ; ---------- ---------- ----------
 464+ 9B63
 465+ 9B63              ; Movemos, no hay recolocación.
 466+ 9B63
 467+ 9B63 2A CB 88     8 ld hl,(Posicion_actual)
 468+ 9B66 CD 6A 9B     	call DESPLZ_IZQ
 469+ 9B69 C9           2 ret
 470+ 9B6A
 471+ 9B6A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B6A              ;
 473+ 9B6A              ;	22/9/22
 474+ 9B6A
 475+ 9B6A              DESPLZ_IZQ
 476+ 9B6A
 477+ 9B6A CD 79 9B     	call Desplaza_izquierda
 478+ 9B6D CD C5 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B70 CD ED 9B     	call Ciclo_completo_2
 480+ 9B73 21 F3 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B76 CB BE        	res 7,(hl)
 482+ 9B78 C9           	ret
 483+ 9B79
 484+ 9B79              Desplaza_izquierda
 485+ 9B79
 486+ 9B79 3A DE 88     	ld a,(Vel_left)
 487+ 9B7C 47           	ld b,a
 488+ 9B7D 2A D9 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B80 23           1 inc hl
 490+ 9B81 23           	inc hl
 491+ 9B82 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B84 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B87 CD 84 8C     	call Extrae_address
 494+ 9B8A 22 CD 88     	ld (Puntero_objeto),hl
 495+ 9B8D
 496+ 9B8D              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B8D
 498+ 9B8D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B8D              ; Cuántos movimientos hemos hecho ??
 500+ 9B8D              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B8D
 502+ 9B8D 2A D5 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B90 EB           	ex de,hl
 504+ 9B91 A7           	and a
 505+ 9B92 ED 52        	sbc hl,de
 506+ 9B94 CB 3D        	srl l
 507+ 9B96 3E 08        6 ld a,8
 508+ 9B98 95           	sub l
 509+ 9B99 30 1E        	jr nc,3F
 510+ 9B9B
 511+ 9B9B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B9B              ; B="0".
 513+ 9B9B
 514+ 9B9B 04           4 inc b
 515+ 9B9C 3C           	inc a
 516+ 9B9D 20 FC        	jr nz,4B
 517+ 9B9F 78           	ld a,b
 518+ 9BA0 08           	ex af,af
 519+ 9BA1 2A D5 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BA4 23           5 inc hl
 521+ 9BA5 23           	inc hl
 522+ 9BA6 10 FC        	djnz 5B
 523+ 9BA8 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BAB CD 84 8C     	call Extrae_address
 525+ 9BAE 22 CD 88     	ld (Puntero_objeto),hl
 526+ 9BB1
 527+ 9BB1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BB1              ; _(Posicion_actual).
 529+ 9BB1
 530+ 9BB1 21 CB 88     	ld hl,Posicion_actual
 531+ 9BB4 35           	dec (hl)
 532+ 9BB5 08           	ex af,af
 533+ 9BB6 6F           	ld l,a
 534+ 9BB7 18 DD        	jr 6B
 535+ 9BB9
 536+ 9BB9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BB9
 538+ 9BB9 47           3 ld b,a
 539+ 9BBA 2A D3 88     	ld hl,(Indice_Sprite_der)
 540+ 9BBD 23           2 inc hl
 541+ 9BBE 23           	inc hl
 542+ 9BBF 10 FC        	djnz 2B
 543+ 9BC1 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BC4 C9           8 ret
 545+ 9BC5
 546+ 9BC5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BC5              ;
 548+ 9BC5              ;	modifica_parametros_1er_DESPLZ
 549+ 9BC5              ;
 550+ 9BC5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BC5              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BC5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BC5
 554+ 9BC5 3A D1 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BC8 A7           	and a
 556+ 9BC9 20 1E        	jr nz,1F
 557+ 9BCB 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BCC 32 D1 88         ld (CTRL_DESPLZ),a
 559+ 9BCF 21 CA 88     	ld hl,Columns
 560+ 9BD2 34           	inc (hl)
 561+ 9BD3 3A DD 88     	ld a,(Cuad_objeto)
 562+ 9BD6 E6 01        	and 1
 563+ 9BD8 20 0F        	jr nz,1F
 564+ 9BDA 2A CB 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BDD 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BDE 22 CB 88     	ld (Posicion_actual),hl
 567+ 9BE1 CD BA 9C     	call Genera_coordenadas
 568+ 9BE4 CD 40 9C     	call Dec_CTRL_DESPLZ
 569+ 9BE7 18 03        	jr 2F
 570+ 9BE9 CD 40 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BEC C9           2 ret
 572+ 9BED
 573+ 9BED              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BED
 575+ 9BED 3A D1 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BF0 FE F7        	cp $f7
 577+ 9BF2 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BF4 30 2C        	jr nc,3F
 579+ 9BF6
 580+ 9BF6              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BF6
 582+ 9BF6 06 00        	ld b,0
 583+ 9BF8 04           4 inc b
 584+ 9BF9 3C           	inc a
 585+ 9BFA FE F7        	cp $f7
 586+ 9BFC 20 FA        	jr nz,4B
 587+ 9BFE 3E FF        	ld a,$ff
 588+ 9C00 90           	sub b
 589+ 9C01 32 D1 88     	ld (CTRL_DESPLZ),a
 590+ 9C04 18 1C        	jr 3F
 591+ 9C06
 592+ 9C06              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C06
 594+ 9C06 21 CA 88     1 ld hl,Columns
 595+ 9C09 35           	dec (hl)
 596+ 9C0A AF           	xor a
 597+ 9C0B 32 D1 88     	ld (CTRL_DESPLZ),a
 598+ 9C0E 3A DD 88     	ld a,(Cuad_objeto)
 599+ 9C11 E6 01        	and 1
 600+ 9C13 28 0A        	jr z,2F
 601+ 9C15 2A CB 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C18 2B           	dec hl
 603+ 9C19 22 CB 88     	ld (Posicion_actual),hl
 604+ 9C1C CD BA 9C     	call Genera_coordenadas
 605+ 9C1F
 606+ 9C1F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C1F
 608+ 9C1F CD AE 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C22 C9           3 ret
 610+ 9C23
 611+ 9C23              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C23              ;
 613+ 9C23              ;	19/10/22
 614+ 9C23              ;
 615+ 9C23              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C23              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C23
 618+ 9C23 3A CF 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C26 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C28 C9           	ret
 621+ 9C29
 622+ 9C29              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C29              ;
 624+ 9C29              ;	19/10/22
 625+ 9C29              ;
 626+ 9C29              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C29              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C29
 629+ 9C29 3A CF 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C2C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C2E C9           	ret
 632+ 9C2F
 633+ 9C2F              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C2F              ;
 635+ 9C2F              ;	24/7/22
 636+ 9C2F              ;
 637+ 9C2F              ;	Inc_CTRL_DESPLZ
 638+ 9C2F              ;
 639+ 9C2F              ;
 640+ 9C2F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C2F
 642+ 9C2F 21 D1 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C32 3A DF 88     	ld a,(Vel_right)
 644+ 9C35 A7           	and a
 645+ 9C36 28 06        	jr z,1F
 646+ 9C38 47           	ld b,a
 647+ 9C39 34           3 inc (hl)
 648+ 9C3A 10 FD        	djnz 3B
 649+ 9C3C 18 01        	jr 2F
 650+ 9C3E 34           1 inc (hl)
 651+ 9C3F C9           2 ret
 652+ 9C40
 653+ 9C40              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C40              ;
 655+ 9C40              ;	5/2/23
 656+ 9C40              ;
 657+ 9C40              ;	Dec_CTRL_DESPLZ
 658+ 9C40              ;
 659+ 9C40              ;
 660+ 9C40              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C40
 662+ 9C40 21 D1 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C43 3A DE 88     	ld a,(Vel_left)
 664+ 9C46 A7           	and a
 665+ 9C47 28 06        	jr z,1F
 666+ 9C49 47           	ld b,a
 667+ 9C4A 35           3 dec (hl)
 668+ 9C4B 10 FD        	djnz 3B
 669+ 9C4D 18 01        	jr 2F
 670+ 9C4F 35           1 dec (hl)
 671+ 9C50 C9           2 ret
 672+ 9C51
 673+ 9C51              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C51
 675+ 9C51 2A CB 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C54 01 1F 00     	ld bc,31
 677+ 9C57 A7           	and a
 678+ 9C58 ED 4A        	adc hl,bc
 679+ 9C5A 22 CB 88     	ld (Posicion_actual),hl
 680+ 9C5D 21 F3 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C60 CB C6        	set 0,(hl)
 682+ 9C62 C9           	ret
 683+ 9C63
 684+ 9C63              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C63
 686+ 9C63 2A CB 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C66 01 1F 00     	ld bc,31
 688+ 9C69 A7           	and a
 689+ 9C6A ED 42        	sbc hl,bc
 690+ 9C6C 22 CB 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C6F 21 F3 88     	ld hl,Ctrl_0
 692+ 9C72 CB CE        	set 1,(hl)
 693+ 9C74 C9           	ret
 694+ 9C75
 695+ 9C75              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C75
 697+ 9C75 24           Reaparece_abajo inc h
 698+ 9C76 01 E0 17     	ld bc,$17e0
 699+ 9C79 A7           	and a
 700+ 9C7A ED 4A        	adc hl,bc
 701+ 9C7C 22 CB 88     	ld (Posicion_actual),hl
 702+ 9C7F 21 F3 88     	ld hl,Ctrl_0
 703+ 9C82 CB D6        	set 2,(hl)
 704+ 9C84 C9           	ret
 705+ 9C85
 706+ 9C85              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C85
 708+ 9C85 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C88 A7           	and a
 710+ 9C89 ED 42        	sbc hl,bc
 711+ 9C8B 22 CB 88     	ld (Posicion_actual),hl
 712+ 9C8E 21 F3 88     	ld hl,Ctrl_0
 713+ 9C91 CB DE        	set 3,(hl)
 714+ 9C93 C9           	ret
 715+ 9C94
 716+ 9C94              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C94              ;
 718+ 9C94              ;	15/07/23
 719+ 9C94
 720+ 9C94              Reinicio
 721+ 9C94
 722+ 9C94              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C94
 724+ 9C94 AF           	xor a
 725+ 9C95 21 F8 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C98 CD B6 9C     	call Limpia_contenido_hl
 727+ 9C9B
 728+ 9C9B 21 CB 88     	ld hl,Posicion_actual
 729+ 9C9E CD B6 9C     	call Limpia_contenido_hl
 730+ 9CA1
 731+ 9CA1 CD E6 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CA4 CD 70 9F     	call Inicia_Puntero_mov
 733+ 9CA7
 734+ 9CA7 21 FA 88     	ld hl,Incrementa_puntero
 735+ 9CAA 06 05        	ld b,5
 736+ 9CAC 77           1 ld (hl),a
 737+ 9CAD 23           	inc hl
 738+ 9CAE 10 FC        	djnz 1B
 739+ 9CB0
 740+ 9CB0 21 04 89     	ld hl,Ctrl_2
 741+ 9CB3 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CB5
 743+ 9CB5 C9           	ret
 744+ 9CB6
 745+ 9CB6 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CB7 23           	inc hl
 747+ 9CB8 77           	ld (hl),a
 748+ 9CB9 C9           	ret
 749+ 9CBA
 750+ 9CBA
# file closed: Direcciones.asm
1656  9CBA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CBA              ; ------------------------------------------------------------------------
   2+ 9CBA              ;
   3+ 9CBA              ;	02/04/23
   4+ 9CBA              ;
   5+ 9CBA              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CBA              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CBA              ;
   8+ 9CBA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CBA              ;
  10+ 9CBA              ;	Modifica: A,BC y DE.
  11+ 9CBA
  12+ 9CBA C5           Genera_coordenadas push bc
  13+ 9CBB E5           	push hl
  14+ 9CBC D5           	push de
  15+ 9CBD
  16+ 9CBD 2A CB 88     	ld hl,(Posicion_actual)
  17+ 9CC0
  18+ 9CC0 7D           	ld a,l
  19+ 9CC1 E6 1F        	and $1f
  20+ 9CC3 32 CF 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CC6
  22+ 9CC6 CD 2F 99     	call calcula_tercio
  23+ 9CC9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CCA
  25+ 9CCA 1E 00        	ld e,0
  26+ 9CCC 7D           	ld a,l
  27+ 9CCD E6 E0        	and $e0
  28+ 9CCF 28 01        	jr z,1F
  29+ 9CD1 04           	inc b
  30+ 9CD2
  31+ 9CD2 04           1 inc b
  32+ 9CD3 05           	dec b
  33+ 9CD4 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CD6              ;														; _ , salimos.
  35+ 9CD6 1C           3 inc e
  36+ 9CD7 D6 20        	sub 32
  37+ 9CD9 20 FB        	jr nz,3B
  38+ 9CDB 10 F5        	djnz 1B
  39+ 9CDD
  40+ 9CDD 7B           2 ld a,e
  41+ 9CDE 32 D0 88     	ld (Coordenada_y),a
  42+ 9CE1
  43+ 9CE1 D1           	pop de
  44+ 9CE2 E1           	pop hl
  45+ 9CE3 C1           	pop bc
  46+ 9CE4
  47+ 9CE4 C9           	ret
  48+ 9CE5
  49+ 9CE5              ; ------------------------------------------------------------------------
  50+ 9CE5              ;	28/05/23
  51+ 9CE5              ;
  52+ 9CE5              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CE5              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CE5              ;
  55+ 9CE5              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CE5              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CE5              ;
  58+ 9CE5              ;		DE="$120d"
  59+ 9CE5              ;
  60+ 9CE5              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CE5              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CE5              ;
  63+ 9CE5              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CE5
  65+ 9CE5              ;	Modifica: A,BC y DE.
  66+ 9CE5
  67+ 9CE5
  68+ 9CE5              Genera_coordenadas_disparo
  69+ 9CE5
  70+ 9CE5              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CE5
  72+ 9CE5 7D           	ld a,l
  73+ 9CE6 E6 1F        	and $1f
  74+ 9CE8 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CE9 CD 2F 99     	call calcula_tercio
  76+ 9CEC 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CED 1E 00        	ld e,0
  78+ 9CEF 7D           	ld a,l
  79+ 9CF0 E6 E0        	and $e0
  80+ 9CF2 28 01        	jr z,1F
  81+ 9CF4 04           	inc b
  82+ 9CF5 1C           1 inc e
  83+ 9CF6 D6 20        	sub 32
  84+ 9CF8 20 FB        	jr nz,1B
  85+ 9CFA 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CFC C9           	ret
  87+ 9CFD
# file closed: Genera_coordenadas.asm
1657  9CFD              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CFD              ; Relojes y temporizaciones.
   2+ 9CFD
   3+ 9CFD              ; ------------------------------------------------------
   4+ 9CFD              ;
   5+ 9CFD              ;	16/7/23
   6+ 9CFD              ;
   7+ 9CFD              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CFD              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CFD              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CFD              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CFD              ;
  12+ 9CFD              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CFD              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CFD
  15+ 9CFD              ; Disparo_entidad db 1
  16+ 9CFD              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CFD              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CFD
  19+ 9CFD              Habilita_disparos
  20+ 9CFD
  21+ 9CFD 7E           	ld a,(hl)
  22+ 9CFE A7           	and a
  23+ 9CFF C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D00
  25+ 9D00 EB           	ex de,hl
  26+ 9D01
  27+ 9D01 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D02 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D03
  30+ 9D03              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D03
  32+ 9D03 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D04 7E           	ld a,(hl)
  34+ 9D05 23           	inc hl
  35+ 9D06 77           	ld (hl),a
  36+ 9D07
  37+ 9D07 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D08 3E 01        	ld a,1
  39+ 9D0A 77           	ld (hl),a
  40+ 9D0B C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1658  9D0C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D0C
   2+ 9D0C
   3+ 9D0C              ;   07/07/23
   4+ 9D0C              ;
   5+ 9D0C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D0C              ;
   7+ 9D0C              ;   Codificación:
   8+ 9D0C              ;
   9+ 9D0C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D0C              ;
  11+ 9D0C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D0C              ;
  13+ 9D0C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D0C              ;
  15+ 9D0C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D0C              ;
  17+ 9D0C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D0C              ;                               ..... %01000010 Vel_up 4
  19+ 9D0C              ;                                               Vel_down 2
  20+ 9D0C              ;                               ..... $42
  21+ 9D0C              ;
  22+ 9D0C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D0C              ;
  24+ 9D0C              ;                               ..... %01000010 Vel_left 4
  25+ 9D0C              ;                                               Vel_right 2
  26+ 9D0C              ;                               ..... $42
  27+ 9D0C              ;
  28+ 9D0C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D0C              ;
  30+ 9D0C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D0C              ;
  32+ 9D0C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D0C              ;
  34+ 9D0C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D0C              ;                                     $53
  36+ 9D0C              ;
  37+ 9D0C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D0C              ;
  39+ 9D0C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D0C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D0C              ;
  42+ 9D0C              ;                       Arriba ..... $81
  43+ 9D0C              ;                       Arriba - izquierda ..... $a1
  44+ 9D0C              ;                       Arriba - derecha ..... $91
  45+ 9D0C              ;
  46+ 9D0C              ;                       Abajo ..... $41
  47+ 9D0C              ;                       Abajo - izquierda ..... $61
  48+ 9D0C              ;                       Abajo - derecha ..... $51
  49+ 9D0C              ;
  50+ 9D0C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D0C              ;
  52+ 9D0C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D0C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D0C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D0C              ;
  56+ 9D0C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D0C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D0C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D0C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D0C              ;
  61+ 9D0C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D0C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D0C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D0C              ;
  65+ 9D0C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D0C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D0C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D0C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D0C
  70+ 9D0C              ; ----- ----- ----- ----- -----
  71+ 9D0C
  72+ 9D0C 38 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D0E 40 9D            defw F_1
  74+ 9D10 4A 9D            defw F_2
  75+ 9D12 54 9D            defw Codo_abajo_derecha
  76+ 9D14 88 9D            defw Derecha_y_subiendo
  77+ 9D16 92 9D            defw Derecha_y_subiendo_1
  78+ 9D18 9C 9D            defw F_3
  79+ 9D1A A6 9D            defw F_4
  80+ 9D1C B0 9D            defw Derecha_y_bajando
  81+ 9D1E BA 9D            defw Derecha_y_bajando_1
  82+ 9D20 C4 9D            defw Derecha_y_bajando_2
  83+ 9D22 CE 9D            defw Codo_derecha_abajo
  84+ 9D24 FE 9D            defw Codo_abajo_izq.
  85+ 9D26 32 9E            defw Izquierda_y_subiendo
  86+ 9D28 3C 9E            defw Izquierda_y_subiendo_1
  87+ 9D2A 46 9E            defw F_5
  88+ 9D2C 50 9E            defw F_6
  89+ 9D2E 5A 9E            defw Izquierda_y_bajando
  90+ 9D30 64 9E            defw Izquierda_y_bajando_1
  91+ 9D32 6E 9E            defw Izquierda_y_bajando_2
  92+ 9D34 78 9E            defw Codo_izquierda_abajo
  93+ 9D36 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D38
  95+ 9D38 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D3C 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D40
  98+ 9D40 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D44 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D48 08 00
 100+ 9D4A 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D4E 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D52 0F FE
 102+ 9D54
 103+ 9D54 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D58 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D5C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D60 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D64 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D68 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D6C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D70 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D74 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D78 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D7C 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D80 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D84 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D88
 117+ 9D88 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D8C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D90 06 00
 119+ 9D92
 120+ 9D92 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D96 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D9A 02 00
 122+ 9D9C
 123+ 9D9C 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DA0 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DA4 04 00
 125+ 9DA6 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DAA 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DAE 08 00
 127+ 9DB0
 128+ 9DB0 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DB4 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DB8 02 00
 130+ 9DBA
 131+ 9DBA 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DBE 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DC2 06 00
 133+ 9DC4
 134+ 9DC4 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DC8 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DCC 06 00
 136+ 9DCE
 137+ 9DCE              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DCE
 139+ 9DCE 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DD2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DD6 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DDA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DDE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DE2 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DE6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DEA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DEE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DF2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DF6 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DFA 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DFE
 152+ 9DFE 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E02 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E06 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E0A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E0E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E12 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E16 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E1A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E1E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E22 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E26 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E2A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E2E 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E32
 166+ 9E32 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E36 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E3A 06 00
 168+ 9E3C
 169+ 9E3C 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E40 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E44 02 00
 171+ 9E46
 172+ 9E46 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E4A 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E4E 04 00
 174+ 9E50 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E54 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E58 08 00
 176+ 9E5A
 177+ 9E5A 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E5E 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E62 02 00
 179+ 9E64
 180+ 9E64 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E68 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E6C 06 00
 182+ 9E6E
 183+ 9E6E 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E72 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E76 06 00
 185+ 9E78
 186+ 9E78 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E7C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E80 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E84 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E88 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E8C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E90 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E94 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E98 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E9C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EA0 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EA4 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EA8
 199+ 9EA8              ; ----- ----- ----- ----- -----
 200+ 9EA8              ;
 201+ 9EA8              ;   27/06/23
 202+ 9EA8
 203+ 9EA8              Movimiento
 204+ 9EA8
 205+ 9EA8              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EA8
 207+ 9EA8              ;    ld hl,(Posicion_actual)
 208+ 9EA8
 209+ 9EA8 3A 04 89         ld a,(Ctrl_2)
 210+ 9EAB CB 57            bit 2,a
 211+ 9EAD 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EAF
 213+ 9EAF 2A F6 88         ld hl,(Puntero_mov)
 214+ 9EB2 7E               ld a,(hl)
 215+ 9EB3
 216+ 9EB3              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EB3
 218+ 9EB3              Inicia_desplazamiento.
 219+ 9EB3
 220+ 9EB3              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EB3
 222+ 9EB3 CD A7 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EB6
 224+ 9EB6              ; Iniciamos (Repetimos_mov).
 225+ 9EB6
 226+ 9EB6 7E               ld a,(hl)
 227+ 9EB7 E6 0F            and $0f
 228+ 9EB9 32 FC 88         ld (Repetimos_desplazamiento),a
 229+ 9EBC 32 FD 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EBF
 231+ 9EBF              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EBF
 233+ 9EBF 23               inc hl
 234+ 9EC0 7E               ld a,(hl)
 235+ 9EC1 32 FF 88         ld (Cola_de_desplazamiento),a
 236+ 9EC4 2B               dec hl
 237+ 9EC5
 238+ 9EC5 21 04 89         ld hl,Ctrl_2
 239+ 9EC8 CB D6            set 2,(hl)
 240+ 9ECA
 241+ 9ECA              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9ECA              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9ECA
 244+ 9ECA              Desplazamiento_iniciado
 245+ 9ECA
 246+ 9ECA CD 7B 9F         call Aplica_desplazamiento
 247+ 9ECD
 248+ 9ECD 3A 04 89         ld a,(Ctrl_2)
 249+ 9ED0 CB 67            bit 4,a
 250+ 9ED2 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9ED3
 252+ 9ED3 21 FC 88     3 ld hl,Repetimos_desplazamiento
 253+ 9ED6 35               dec (hl)
 254+ 9ED7 C0               ret nz
 255+ 9ED8
 256+ 9ED8              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9ED8              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9ED8              ; Analiza (Cola_de_desplazamiento).
 259+ 9ED8
 260+ 9ED8 3A FF 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EDB A7               and a
 262+ 9EDC CC D0 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EDF 28 30            jr z,Reinicia_el_movimiento
 264+ 9EE1
 265+ 9EE1 FE FF            cp $ff
 266+ 9EE3 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EE5
 268+ 9EE5 FE FE            cp $fe
 269+ 9EE7 CC 54 9F         call z,Fijamos_bucle
 270+ 9EEA 28 25            jr z,Reinicia_el_movimiento
 271+ 9EEC
 272+ 9EEC FE FD            cp $fd
 273+ 9EEE 20 11            jr nz,1F
 274+ 9EF0
 275+ 9EF0              ; ---
 276+ 9EF0              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EF0
 278+ 9EF0 3A 04 89         ld a,(Ctrl_2)
 279+ 9EF3 CB 5F            bit 3,a
 280+ 9EF5 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EF7
 282+ 9EF7              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EF7
 284+ 9EF7 21 04 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EFA CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EFC
 287+ 9EFC CD 65 9F         call Inicia_Repetimos_movimiento
 288+ 9EFF 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F01              ; ---
 290+ 9F01
 291+ 9F01 FE 01        1 cp 1
 292+ 9F03 CA 3E 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F06
 294+ 9F06 3D               dec a
 295+ 9F07 32 FF 88         ld (Cola_de_desplazamiento),a
 296+ 9F0A
 297+ 9F0A 3A FD 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F0D 32 FC 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F10              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F10 C9               ret
 301+ 9F11
 302+ 9F11              Reinicia_el_movimiento
 303+ 9F11
 304+ 9F11 3A 04 89         ld a,(Ctrl_2)
 305+ 9F14 CB 5F            bit 3,a
 306+ 9F16 28 1B            jr z,2F
 307+ 9F18
 308+ 9F18              ; (Cola_de_desplazamiento)="254".
 309+ 9F18
 310+ 9F18 21 FE 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F1B 35               dec (hl)
 312+ 9F1C 20 15            jr nz,2F
 313+ 9F1E
 314+ 9F1E              ; Fin de las repeticiones del último movimiento.
 315+ 9F1E
 316+ 9F1E 21 04 89         ld hl,Ctrl_2
 317+ 9F21 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F23
 319+ 9F23 2A F6 88         ld hl,(Puntero_mov)
 320+ 9F26 23               inc hl
 321+ 9F27 23               inc hl
 322+ 9F28 23               inc hl
 323+ 9F29 22 F6 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F2C              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F2C 7E               ld a,(hl)
 326+ 9F2D 32 FF 88         ld (Cola_de_desplazamiento),a
 327+ 9F30
 328+ 9F30 C3 D8 9E         jp Cola
 329+ 9F33
 330+ 9F33 CD 70 9F     2 call Inicia_Puntero_mov
 331+ 9F36
 332+ 9F36 21 04 89         ld hl,Ctrl_2
 333+ 9F39 CB 96            res 2,(hl)
 334+ 9F3B
 335+ 9F3B C3 A8 9E         jp Movimiento
 336+ 9F3E
 337+ 9F3E              Siguiente_desplazamiento
 338+ 9F3E
 339+ 9F3E              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F3E              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F3E
 342+ 9F3E 21 04 89         ld hl,Ctrl_2
 343+ 9F41 CB 96            res 2,(hl)
 344+ 9F43
 345+ 9F43 2A F6 88         ld hl,(Puntero_mov)
 346+ 9F46 23               inc hl
 347+ 9F47 23               inc hl
 348+ 9F48 22 F6 88         ld (Puntero_mov),hl
 349+ 9F4B
 350+ 9F4B 7E               ld a,(hl)
 351+ 9F4C A7               and a
 352+ 9F4D CC D0 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F50 CA 11 9F         jp z,Reinicia_el_movimiento
 354+ 9F53
 355+ 9F53 C9               ret
 356+ 9F54              ; Subrutinas -----------------------------------------
 357+ 9F54              ; ---------- --------- --------- ---------- ----------
 358+ 9F54              ;
 359+ 9F54              ;   24/07/23
 360+ 9F54              ;
 361+ 9F54              ;   Fijamos_bucle
 362+ 9F54              ;
 363+ 9F54              ;
 364+ 9F54
 365+ 9F54              Fijamos_bucle
 366+ 9F54
 367+ 9F54 3A FA 88         ld a,(Incrementa_puntero)
 368+ 9F57 3C               inc a
 369+ 9F58 32 FB 88         ld (Incrementa_puntero_backup),a
 370+ 9F5B
 371+ 9F5B CD D0 9F         call Incrementa_Puntero_indice_mov
 372+ 9F5E 2A F4 88         ld hl,(Puntero_indice_mov)
 373+ 9F61 22 F8 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F64 C9               ret
 375+ 9F65
 376+ 9F65              ; ---------- --------- --------- ---------- ----------
 377+ 9F65              ;
 378+ 9F65              ;   07/7/23
 379+ 9F65              ;
 380+ 9F65              ;   Inicia_Repetimos_movimiento
 381+ 9F65              ;
 382+ 9F65              ;
 383+ 9F65
 384+ 9F65              Inicia_Repetimos_movimiento
 385+ 9F65
 386+ 9F65              ; Iniciamos (Repetimos_movimiento).
 387+ 9F65
 388+ 9F65 DD 2A F6 88      ld ix,(Puntero_mov)
 389+ 9F69 DD 7E 02         ld a,(ix+2)
 390+ 9F6C 32 FE 88         ld (Repetimos_movimiento),a
 391+ 9F6F
 392+ 9F6F C9               ret
 393+ 9F70
 394+ 9F70              ; ---------- --------- --------- ---------- ----------
 395+ 9F70              ;
 396+ 9F70              ;   26/6/23
 397+ 9F70              ;
 398+ 9F70              ;   Inicia_Puntero_mov
 399+ 9F70              ;
 400+ 9F70              ;
 401+ 9F70
 402+ 9F70 2A F4 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F73 5E               ld e,(hl)
 404+ 9F74 23               inc hl
 405+ 9F75 56               ld d,(hl)
 406+ 9F76 EB               ex de,hl
 407+ 9F77 22 F6 88         ld (Puntero_mov),hl
 408+ 9F7A C9               ret
 409+ 9F7B
 410+ 9F7B              ; ---------- --------- --------- ---------- ----------
 411+ 9F7B              ;
 412+ 9F7B              ;   27/06/23
 413+ 9F7B              ;
 414+ 9F7B              ;   Aplica_movimiento.
 415+ 9F7B
 416+ 9F7B              Aplica_desplazamiento
 417+ 9F7B
 418+ 9F7B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F7B
 420+ 9F7B 2A F6 88         ld hl, (Puntero_mov)
 421+ 9F7E
 422+ 9F7E 7E               ld a,(hl)
 423+ 9F7F E6 F0            and $f0
 424+ 9F81 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F82
 426+ 9F82 CB 7E            bit 7,(hl)
 427+ 9F84 28 03            jr z,1F
 428+ 9F86 CD A6 99         call Mov_up
 429+ 9F89 2A F6 88     1 ld hl, (Puntero_mov)
 430+ 9F8C CB 76            bit 6,(hl)
 431+ 9F8E 28 03            jr z,2F
 432+ 9F90 CD 75 99         call Mov_down
 433+ 9F93 2A F6 88     2 ld hl, (Puntero_mov)
 434+ 9F96 CB 6E            bit 5,(hl)
 435+ 9F98 28 03            jr z,3F
 436+ 9F9A CD 07 9B         call Mov_left
 437+ 9F9D 2A F6 88     3 ld hl, (Puntero_mov)
 438+ 9FA0 CB 66            bit 4,(hl)
 439+ 9FA2 C8               ret z
 440+ 9FA3 CD E9 99         call Mov_right
 441+ 9FA6 C9               ret
 442+ 9FA7
 443+ 9FA7              ; ---------- --------- --------- ---------- ----------
 444+ 9FA7              ;
 445+ 9FA7              ;   26/06/23
 446+ 9FA7              ;
 447+ 9FA7              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FA7
 449+ 9FA7              Ajusta_velocidad_desplazamiento
 450+ 9FA7
 451+ 9FA7              ; 1er byte de la cadena de movimiento.
 452+ 9FA7              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FA7
 454+ 9FA7 CD C5 9F         call Extrae_nibble_alto
 455+ 9FAA
 456+ 9FAA 32 E0 88         ld (Vel_up),a
 457+ 9FAD 79               ld a,c
 458+ 9FAE E6 0F            and $0f
 459+ 9FB0 32 E1 88         ld (Vel_down),a
 460+ 9FB3
 461+ 9FB3              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FB3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FB3
 464+ 9FB3 23               inc hl
 465+ 9FB4 CD C5 9F         call Extrae_nibble_alto
 466+ 9FB7
 467+ 9FB7 32 DE 88         ld (Vel_left),a
 468+ 9FBA 79               ld a,c
 469+ 9FBB E6 0F            and $0f
 470+ 9FBD 32 DF 88         ld (Vel_right),a
 471+ 9FC0
 472+ 9FC0              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FC0
 474+ 9FC0 23               inc hl
 475+ 9FC1 22 F6 88         ld (Puntero_mov),hl
 476+ 9FC4 C9               ret
 477+ 9FC5
 478+ 9FC5 06 04        Extrae_nibble_alto ld b,4
 479+ 9FC7 7E               ld a,(hl)
 480+ 9FC8 4F               ld c,a
 481+ 9FC9 E6 F0            and $f0
 482+ 9FCB CB 3F        1 srl a
 483+ 9FCD 10 FC            djnz 1B
 484+ 9FCF C9               ret
 485+ 9FD0
 486+ 9FD0              ; ---------- --------- --------- ---------- ----------
 487+ 9FD0              ;
 488+ 9FD0              ;   5/7/23
 489+ 9FD0              ;
 490+ 9FD0              ;   Incrementa_Puntero_indice_mov
 491+ 9FD0
 492+ 9FD0              Incrementa_Puntero_indice_mov
 493+ 9FD0
 494+ 9FD0 21 FA 88         ld hl,Incrementa_puntero
 495+ 9FD3 34               inc (hl)
 496+ 9FD4
 497+ 9FD4 2A F4 88         ld hl,(Puntero_indice_mov)
 498+ 9FD7 01 02 00         ld bc,2
 499+ 9FDA A7               and a
 500+ 9FDB 09               add hl,bc
 501+ 9FDC 22 F4 88         ld (Puntero_indice_mov),hl
 502+ 9FDF
 503+ 9FDF 7E               ld a,(hl)
 504+ 9FE0 A7               and a
 505+ 9FE1
 506+ 9FE1              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FE1
 508+ 9FE1              ;    jr z,$
 509+ 9FE1
 510+ 9FE1              ;! Reinicia el Patrón de movimiento.
 511+ 9FE1
 512+ 9FE1 CC E6 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FE4
 514+ 9FE4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FE5
 516+ 9FE5 C9               ret
 517+ 9FE6
 518+ 9FE6
 519+ 9FE6              ; ---------- --------- --------- ---------- ----------
 520+ 9FE6              ;
 521+ 9FE6              ;   24/07/23
 522+ 9FE6              ;
 523+ 9FE6              ;   Inicializa_Puntero_indice_mov
 524+ 9FE6
 525+ 9FE6              Inicializa_Puntero_indice_mov
 526+ 9FE6
 527+ 9FE6              ; Existe etiqueta de bucle principal???
 528+ 9FE6
 529+ 9FE6 2A F8 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FE9 24               inc h
 531+ 9FEA 25               dec h
 532+ 9FEB 28 05            jr z,2F
 533+ 9FED
 534+ 9FED 22 F4 88         ld (Puntero_indice_mov),hl
 535+ 9FF0 18 14            jr 3F
 536+ 9FF2
 537+ 9FF2              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FF2
 539+ 9FF2 3A FA 88     2 ld a,(Incrementa_puntero)
 540+ 9FF5 47               ld b,a
 541+ 9FF6
 542+ 9FF6 2A F4 88         ld hl,(Puntero_indice_mov)
 543+ 9FF9 2B           1 dec hl
 544+ 9FFA 2B               dec hl
 545+ 9FFB 10 FC            djnz 1B
 546+ 9FFD 22 F4 88         ld (Puntero_indice_mov),hl
 547+ A000
 548+ A000 AF               xor a
 549+ A001 32 FA 88         ld (Incrementa_puntero),a
 550+ A004 18 06            jr 4F
 551+ A006
 552+ A006 3A FB 88     3 ld a,(Incrementa_puntero_backup)
 553+ A009 32 FA 88         ld (Incrementa_puntero),a
 554+ A00C C9           4 ret
 555+ A00D
 556+ A00D
 557+ A00D
# file closed: Patrones_de_mov.asm
1659  A00D              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A00D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A00D              ;
   3+ A00D              ;	27/10/23
   4+ A00D              ;
   5+ A00D              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A00D
   7+ A00D              ;	ADC HL,SP	LD (addr),SP
   8+ A00D              ;	ADD HL,SP	LD SP,(addr)
   9+ A00D              ;	ADD IX,SP	LD SP,nn
  10+ A00D              ; 	ADD IY,SP	LD SP,HL
  11+ A00D              ;				LD SP,IX
  12+ A00D              ;	DEC SP		LD SP,IY
  13+ A00D
  14+ A00D              ;	EX (SP),HL
  15+ A00D              ;	EX (SP),IX
  16+ A00D              ;	EX (SP),IY
  17+ A00D
  18+ A00D              ;	INC SP
  19+ A00D
  20+ A00D                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 17 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E9 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A 06 89         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 1F 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A F3 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 25 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 1D 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A 06 89         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 1F 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A F3 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 25 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 17 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 1D 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 17 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 107+ 7FFC
 108+ 7FFC 5D               ld e,l
 109+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 110+ 7FFE
 111+ 7FFE 2A 3B 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 112+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 113+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 114+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 115+ 8004 FB               ei
 116+ 8005 C9               ret
 117+ 8006
 118+ 8006              ; ------------------------------------------------
 119+ 8006              ;
 120+ 8006              ;   8/11/23
 121+ 8006              ;
 122+ 8006              ;   La rutina estará situada justo después de:
 123+ 8006              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 124+ 8006
 125+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 126+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 127+ 8006
 128+ 8006                  org $72ec
 129+ 72EC
 130+ 72EC              Gestiona_albumes_de_fotos ; 14
 131+ 72EC
 132+ 72EC              ;! Recolocacion.
 133+ 72EC
 134+ 72EC              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 135+ 72EC              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 136+ 72EC
 137+ 72EC 3A 40 89         ld a,(Ctrl_Semaforo)
 138+ 72EF CB 47            bit 0,a
 139+ 72F1 28 62            jr z,7F
 140+ 72F3
 141+ 72F3              ; Doble recolocación ???. Album_de_fotos_2 y Album_de_fotos_1 vacíos ???
 142+ 72F3
 143+ 72F3 CB 5F            bit 3,a
 144+ 72F5 28 1E            jr z,13F
 145+ 72F7
 146+ 72F7
 147+ 72F7              ; DOBLE RECOLOCACIÓN. ----------- ------------ -----------
 148+ 72F7
 149+ 72F7              ; Album_de_fotos_1 y Album_de_fotos_2 están vacío pero ... Está Album_de_fotos_3 completo ???
 150+ 72F7
 151+ 72F7 3A 3F 89         ld a,(Semaforo)
 152+ 72FA CB 5F            bit 3,a
 153+ 72FC 28 57            jr z,7F                     ;   No podemos hacer la doble recolocación!!! Album_de_fotos_3 está incompleto.
 154+ 72FE
 155+ 72FE              ; Volcamos Álbum_3 a Álbum_2
 156+ 72FE              ;    ""    Álbum_2 a Álbum_1
 157+ 72FE              ; Situamos (Stack_snapshot) al comienzo de Album_de_fotos_2.
 158+ 72FE              ; Actualizamos (Semaforo)
 159+ 72FE              ; Inicializamos (Ctrl_Semaforo)
 160+ 72FE              ; Saltamos a 7F.
 161+ 72FE
 162+ 72FE CD D2 73         call Album3_a_Album2
 163+ 7301 CD F9 73         call Album2_a_Album1
 164+ 7304 CD 54 74         call Actualiza_punteros_de_albumes
 165+ 7307 CD 46 73         call Modifica_Stack_snapshot
 166+ 730A 21 3F 89     	ld hl,Semaforo
 167+ 730D CB 0E        	rrc (hl)
 168+ 730F AF               xor a
 169+ 7310 32 40 89         ld (Ctrl_Semaforo),a
 170+ 7313 18 40            jr 7F
 171+ 7315
 172+ 7315              ; ------------ ---------------- ------------
 173+ 7315
 174+ 7315              ;   RECOLOCACIÓN SIMPLE.
 175+ 7315
 176+ 7315              ;   Album3_a_Album2 ?????
 177+ 7315
 178+ 7315 CB 4F        13 bit 1,a
 179+ 7317 20 0A            jr nz,10F
 180+ 7319
 181+ 7319              ;   Álbum_1 vacío.
 182+ 7319
 183+ 7319              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 184+ 7319
 185+ 7319 3A 3F 89         ld a,(Semaforo)
 186+ 731C CB 57            bit 2,a
 187+ 731E 28 35            jr z,7F                      ; No puede haber recolocación. Album_de_fotos_2 está incompleto.
 188+ 7320
 189+ 7320 CD F9 73         call Album2_a_Album1
 190+ 7323
 191+ 7323              ; Album3_a_Album2 !!!
 192+ 7323
 193+ 7323              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 194+ 7323
 195+ 7323 3A 3F 89     10 ld a,(Semaforo)
 196+ 7326 CB 5F            bit 3,a
 197+ 7328 20 0B            jr nz,11F
 198+ 732A
 199+ 732A              ; Album_de_fotos_2 está vacío, (sus datos se han volcado a Album_de_fotos_1). Album_de_fotos_3 está incompleto por lo que no vamos a poder hacer el trasbase de datos del álbum_3 al álbum_2.
 200+ 732A              ; Activaremos el bit_3 de (Ctrl_Semaforo) para indicar este hecho.
 201+ 732A
 202+ 732A 21 40 89         ld hl,Ctrl_Semaforo
 203+ 732D CB DE            set 3,(hl)
 204+ 732F CB 86            res 0,(hl)
 205+ 7331 CB 96            res 2,(hl)
 206+ 7333 18 20            jr 7F
 207+ 7335
 208+ 7335              ; Album_de_fotos_3 contiene un FRAME completo.
 209+ 7335              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 210+ 7335
 211+ 7335 CD D2 73     11 call Album3_a_Album2     ;   X-X-X-0
 212+ 7338 CD 46 73         call Modifica_Stack_snapshot
 213+ 733B
 214+ 733B 21 40 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 215+ 733E CB 86            res 0,(hl)
 216+ 7340 CB 8E            res 1,(hl)
 217+ 7342 CB 96            res 2,(hl)
 218+ 7344 18 0F            jr 7F
 219+ 7346
 220+ 7346 2A 33 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 221+ 7349 CD 84 8C     	call Extrae_address
 222+ 734C 22 1D 89     	ld (Stack_snapshot),hl
 223+ 734F 21 3F 89     	ld hl,Semaforo
 224+ 7352 CB 0E        	rrc (hl)
 225+ 7354 C9               ret
 226+ 7355
 227+ 7355              ; #############################################################3
 228+ 7355
 229+ 7355              ;   En 1er lugar limpiamos el FRAME pintado.
 230+ 7355              ;   Vaciamos Album_de_fotos.
 231+ 7355
 232+ 7355              ;   Album_de_fotos. Contiene datos ???
 233+ 7355
 234+ 7355              ;! Cascada.
 235+ 7355
 236+ 7355 21 01 70     7 ld hl,Album_de_fotos+1
 237+ 7358 7E               ld a,(hl)
 238+ 7359 A7               and a
 239+ 735A 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 240+ 735C
 241+ 735C              ;   Hemos impreso Album_de_fotos.
 242+ 735C              ;   Limpiamos el álbum y actualizamos (End_Snapshot). !!!!!!!!!!!!!!
 243+ 735C
 244+ 735C 2A 21 89         ld hl,(End_Snapshot)
 245+ 735F 01 00 70         ld bc,Album_de_fotos
 246+ 7362 11 01 70         ld de,Album_de_fotos+1
 247+ 7365 AF               xor a
 248+ 7366 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 249+ 7367
 250+ 7367 CD 47 74         call Limpia_album
 251+ 736A
 252+ 736A 21 00 00         ld hl,0
 253+ 736D 22 21 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 254+ 7370
 255+ 7370              ; ----- ----- ----- -----
 256+ 7370
 257+ 7370              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 258+ 7370              ;   Album_de_fotos_1. Contiene un frame completo ???
 259+ 7370
 260+ 7370 3A 3F 89     3 ld a,(Semaforo)
 261+ 7373 CB 4F            bit 1,a
 262+ 7375 20 06            jr nz,4F
 263+ 7377
 264+ 7377              ;! Buffer vacío. El siguiente FRAME no se puede preparar. !!!!!!!!!!!!!!!!!!!!!!!!!
 265+ 7377              ;! Album_de_fotos_1 está incompleto.
 266+ 7377
 267+ 7377 21 40 89         ld hl,Ctrl_Semaforo
 268+ 737A CB E6            set 4,(hl)
 269+ 737C C9               ret
 270+ 737D
 271+ 737D              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 272+ 737D
 273+ 737D 21 55 70     4 ld hl,Album_de_fotos_1+1
 274+ 7380 7E               ld a,(hl)
 275+ 7381 A7               and a
 276+ 7382 28 03            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 277+ 7384
 278+ 7384              ; ----- ----- ----- -----
 279+ 7384              ; ----- ----- ----- -----
 280+ 7384
 281+ 7384 CD 20 74         call Album1_a_Album
 282+ 7387
 283+ 7387              ;   Album_de_fotos_2.
 284+ 7387
 285+ 7387 3A 40 89     1 ld a,(Ctrl_Semaforo)
 286+ 738A CB 5F            bit 3,a
 287+ 738C 20 36            jr nz,8F
 288+ 738E
 289+ 738E              ;   El bit_3 de (Ctrl_Semaforo) activo, indica que después de reestructurar, Album_de_fotos_2 está vacío por que Album_de_fotos_3 no está completo.
 290+ 738E              ;   Tenemos que salir de la rutina sin modificar punteros para completar Album_de_fotos_3.
 291+ 738E              ;   Activaremos el bit_0 y el bit_1 de (Ctrl_Semaforo) para volver a reestructurar y volcar sus datos a Album_de_fotos_2.
 292+ 738E
 293+ 738E              ;   Contiene Frame completo ???
 294+ 738E
 295+ 738E 3A 3F 89     12 ld a,(Semaforo)
 296+ 7391 CB 57            bit 2,a
 297+ 7393 20 13            jr nz,5F
 298+ 7395
 299+ 7395              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 300+ 7395
 301+ 7395 21 A9 70         ld hl,Album_de_fotos_2+1
 302+ 7398 7E               ld a,(hl)
 303+ 7399 A7               and a
 304+ 739A 20 04            jr nz,9F
 305+ 739C
 306+ 739C              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 307+ 739C              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 308+ 739C
 309+ 739C CD 54 74         call Actualiza_punteros_de_albumes
 310+ 739F C9               ret
 311+ 73A0
 312+ 73A0              ;   Album_de_fotos_2 no está completo pero contiene datos.
 313+ 73A0
 314+ 73A0 21 40 89     9 ld hl,Ctrl_Semaforo
 315+ 73A3 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 316+ 73A5 CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 317+ 73A7 C9               ret
 318+ 73A8
 319+ 73A8 21 A9 70     5 ld hl,Album_de_fotos_2+1
 320+ 73AB 7E               ld a,(hl)
 321+ 73AC A7               and a
 322+ 73AD 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 323+ 73AF
 324+ 73AF              ; ----- ----- ----- -----
 325+ 73AF              ; ----- ----- ----- -----
 326+ 73AF              ; ----- ----- ----- -----
 327+ 73AF
 328+ 73AF              ;   Album_de_fotos_2 contiene un frame completo.
 329+ 73AF              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 330+ 73AF
 331+ 73AF CD F9 73         call Album2_a_Album1
 332+ 73B2
 333+ 73B2              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 334+ 73B2              ;   Album_de_fotos_3. Contiene un frame completo ???
 335+ 73B2
 336+ 73B2 3A 3F 89     2 ld a,(Semaforo)
 337+ 73B5 CB 5F            bit 3,a
 338+ 73B7 20 13            jr nz,6F
 339+ 73B9
 340+ 73B9              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 341+ 73B9
 342+ 73B9 21 FD 70         ld hl,Album_de_fotos_3+1
 343+ 73BC 7E               ld a,(hl)
 344+ 73BD A7               and a
 345+ 73BE 20 04            jr nz,8F
 346+ 73C0
 347+ 73C0              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 348+ 73C0              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 349+ 73C0
 350+ 73C0 CD 54 74         call Actualiza_punteros_de_albumes
 351+ 73C3 C9               ret
 352+ 73C4
 353+ 73C4              ;   Album_de_fotos_3 no está completo.
 354+ 73C4
 355+ 73C4 21 40 89     8 ld hl,Ctrl_Semaforo
 356+ 73C7 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 357+ 73C9 CB CE            set 1,(hl)
 358+ 73CB C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 359+ 73CC
 360+ 73CC              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 361+ 73CC
 362+ 73CC 21 FD 70     6 ld hl,Album_de_fotos_3+1
 363+ 73CF 7E               ld a,(hl)
 364+ 73D0 A7               and a
 365+ 73D1 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 366+ 73D2
 367+ 73D2              ; ----- ----- ----- -----
 368+ 73D2              ; ----- ----- ----- -----
 369+ 73D2              ; ----- ----- ----- -----
 370+ 73D2
 371+ 73D2 2A 2F 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 372+ 73D5 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 373+ 73D8 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 374+ 73DB
 375+ 73DB CD 47 74         call Limpia_album
 376+ 73DE
 377+ 73DE              ;   Actualizamos (End_Snapshot_2):
 378+ 73DE
 379+ 73DE A7               and a
 380+ 73DF ED 4A            adc hl,bc
 381+ 73E1 22 2B 89         ld (End_Snapshot_2),hl
 382+ 73E4
 383+ 73E4              ;   Limpiamos Album_de_fotos_3.
 384+ 73E4
 385+ 73E4 2A 2F 89         ld hl,(End_Snapshot_3)
 386+ 73E7 01 FC 70         ld bc,Album_de_fotos_3
 387+ 73EA 11 FD 70         ld de,Album_de_fotos_3+1
 388+ 73ED AF               xor a
 389+ 73EE 02               ld (bc),a
 390+ 73EF CD 47 74         call Limpia_album
 391+ 73F2
 392+ 73F2              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 393+ 73F2              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 394+ 73F2
 395+ 73F2 21 00 00         ld hl,0
 396+ 73F5 22 2F 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 397+ 73F8
 398+ 73F8 C9               ret
 399+ 73F9
 400+ 73F9 2A 2B 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 401+ 73FC 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 402+ 73FF 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 403+ 7402 CD 47 74         call Limpia_album
 404+ 7405
 405+ 7405              ;   Actualizamos (End_Snapshot_1):
 406+ 7405
 407+ 7405 A7               and a
 408+ 7406 ED 4A            adc hl,bc
 409+ 7408 22 27 89         ld (End_Snapshot_1),hl
 410+ 740B
 411+ 740B              ;   Limpiamos Album_de_fotos_2.
 412+ 740B
 413+ 740B 2A 2B 89         ld hl,(End_Snapshot_2)
 414+ 740E 01 A8 70         ld bc,Album_de_fotos_2
 415+ 7411 11 A9 70         ld de,Album_de_fotos_2+1
 416+ 7414 AF               xor a
 417+ 7415 02               ld (bc),a
 418+ 7416 CD 47 74         call Limpia_album
 419+ 7419 21 00 00         ld hl,0
 420+ 741C 22 2B 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 421+ 741F C9               ret
 422+ 7420
 423+ 7420
 424+ 7420 2A 27 89     Album1_a_Album ld hl,(End_Snapshot_1)      ; Final, (origen).
 425+ 7423 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 426+ 7426 11 00 70         ld de,Album_de_fotos        ; Destino.
 427+ 7429
 428+ 7429 CD 47 74         call Limpia_album
 429+ 742C
 430+ 742C              ;   Calculamos (End_Snapshot)
 431+ 742C
 432+ 742C A7               and a
 433+ 742D ED 4A            adc hl,bc
 434+ 742F 22 21 89         ld (End_Snapshot),hl
 435+ 7432
 436+ 7432              ;   Limpiamos Album_de_fotos_1.
 437+ 7432
 438+ 7432 2A 27 89         ld hl,(End_Snapshot_1)
 439+ 7435 01 54 70         ld bc,Album_de_fotos_1
 440+ 7438 11 55 70         ld de,Album_de_fotos_1+1
 441+ 743B AF               xor a
 442+ 743C 02               ld (bc),a
 443+ 743D
 444+ 743D CD 47 74         call Limpia_album
 445+ 7440
 446+ 7440 21 00 00         ld hl,0
 447+ 7443 22 27 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 448+ 7446 C9               ret
 449+ 7447
 450+ 7447              ; ----------------------------------------------------
 451+ 7447              ;
 452+ 7447              ;   10/8/23
 453+ 7447              ;
 454+ 7447              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 455+ 7447              ;
 456+ 7447              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 457+ 7447              ;           BC ..... Dirección de inicio del álbum.
 458+ 7447              ;           DE ..... Dirección de inicio del álbum. +1
 459+ 7447
 460+ 7447              ;    ld hl,(End_Snapshot)
 461+ 7447              ;    ld bc,Album_de_fotos
 462+ 7447              ;    ld de,Album_de_fotos+1
 463+ 7447
 464+ 7447              ;   MODIFICA: A,HL,BC y DE.
 465+ 7447
 466+ 7447              Limpia_album
 467+ 7447 D5               push de                     ; Guardo DESTINO.
 468+ 7448 C5               push bc                     ; Guardo ORIGEN.
 469+ 7449 ED 42            sbc hl,bc
 470+ 744B 4D               ld c,l
 471+ 744C 44               ld b,h
 472+ 744D E1               pop hl
 473+ 744E C5               push bc
 474+ 744F ED B0            ldir
 475+ 7451 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 476+ 7452 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 477+ 7453 C9               ret                         ; _ a otro).
 478+ 7454
 479+ 7454              ; --------------------------------------------------------------------------------------------
 480+ 7454              ;
 481+ 7454              ;   20/10/23
 482+ 7454
 483+ 7454              ;
 484+ 7454
 485+ 7454              Actualiza_punteros_de_albumes
 486+ 7454
 487+ 7454 2A 33 89         ld hl,(Puntero_indice_album_de_fotos)
 488+ 7457 2B               dec hl
 489+ 7458 2B               dec hl
 490+ 7459 22 33 89         ld (Puntero_indice_album_de_fotos),hl
 491+ 745C
 492+ 745C 2A 37 89         ld hl,(Puntero_indice_End_Snapshot)
 493+ 745F 2B               dec hl
 494+ 7460 2B               dec hl
 495+ 7461 22 37 89         ld (Puntero_indice_End_Snapshot),hl
 496+ 7464 CD 84 8C         call Extrae_address
 497+ 7467 22 3B 89         ld (Puntero_de_End_Snapshot),hl
 498+ 746A
 499+ 746A C9               ret
 500+ 746B
# file closed: Guarda_foto_registros.asm
1660  746B
1661  746B              	SAVESNA "Pruebas.sna", START
1662  746B
1663  746B
1664  746B
1665  746B
# file closed: Banco_de_pruebas.asm
